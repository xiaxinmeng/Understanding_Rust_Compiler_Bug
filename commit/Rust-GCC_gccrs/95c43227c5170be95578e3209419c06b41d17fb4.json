{"sha": "95c43227c5170be95578e3209419c06b41d17fb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjNDMyMjdjNTE3MGJlOTU1NzhlMzIwOTQxOWMwNmI0MWQxN2ZiNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-25T20:45:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-25T20:45:08Z"}, "message": "Add rtx_jump_table_data::get_labels method\n\ngcc/\n\t* rtl.h (rtx_jump_table_data::get_labels): New method.\n\t* cfgbuild.c (make_edges): Replace hand-coded lookup of labels\n\twith use of the new rtx_jump_table_data::get_labels method.\n\t(purge_dead_tablejump_edges): Strengthen param \"table\" from rtx\n\tto rtx_jump_table_data *.  Simplify by using get_labels method.\n\t* cfgrtl.c (delete_insn): Replace use of JUMP_TABLE_DATA_P with\n\ta dyn_cast, introducing local \"table\", using it to replace\n\tlabel-lookup logic with a get_labels method call.\n\t(patch_jump_insn): Simplify using get_labels method.\n\t* dwarf2cfi.c (create_trace_edges): Likewise.\n\t* rtlanal.c (label_is_jump_target_p): Likewise.\n\nFrom-SVN: r214476", "tree": {"sha": "9830f6f34a5652a0c7846c548b3436ea07f5bb78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9830f6f34a5652a0c7846c548b3436ea07f5bb78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95c43227c5170be95578e3209419c06b41d17fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c43227c5170be95578e3209419c06b41d17fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95c43227c5170be95578e3209419c06b41d17fb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c43227c5170be95578e3209419c06b41d17fb4/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bb9bf637ae44ae9d07012fac08e35a446d11ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb9bf637ae44ae9d07012fac08e35a446d11ea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb9bf637ae44ae9d07012fac08e35a446d11ea4"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "c087a653f111a78037cf1a0b2fde7ea5ca8edca3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95c43227c5170be95578e3209419c06b41d17fb4", "patch": "@@ -1,3 +1,17 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (rtx_jump_table_data::get_labels): New method.\n+\t* cfgbuild.c (make_edges): Replace hand-coded lookup of labels\n+\twith use of the new rtx_jump_table_data::get_labels method.\n+\t(purge_dead_tablejump_edges): Strengthen param \"table\" from rtx\n+\tto rtx_jump_table_data *.  Simplify by using get_labels method.\n+\t* cfgrtl.c (delete_insn): Replace use of JUMP_TABLE_DATA_P with\n+\ta dyn_cast, introducing local \"table\", using it to replace\n+\tlabel-lookup logic with a get_labels method call.\n+\t(patch_jump_insn): Simplify using get_labels method.\n+\t* dwarf2cfi.c (create_trace_edges): Likewise.\n+\t* rtlanal.c (label_is_jump_target_p): Likewise.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtl.h (unshare_all_rtl_again): Strengthen param \"insn\" from rtx"}, {"sha": "3cd782ccea1fa0288c8ad8c8d3627a6243145ccb", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=95c43227c5170be95578e3209419c06b41d17fb4", "patch": "@@ -263,14 +263,9 @@ make_edges (basic_block min, basic_block max, int update_p)\n \t  /* Recognize a tablejump and do the right thing.  */\n \t  else if (tablejump_p (insn, NULL, &table))\n \t    {\n-\t      rtvec vec;\n+\t      rtvec vec = table->get_labels ();\n \t      int j;\n \n-\t      if (GET_CODE (PATTERN (table)) == ADDR_VEC)\n-\t\tvec = XVEC (PATTERN (table), 0);\n-\t      else\n-\t\tvec = XVEC (PATTERN (table), 1);\n-\n \t      for (j = GET_NUM_ELEM (vec) - 1; j >= 0; --j)\n \t\tmake_label_edge (edge_cache, bb,\n \t\t\t\t XEXP (RTVEC_ELT (vec, j), 0), 0);\n@@ -398,7 +393,7 @@ mark_tablejump_edge (rtx label)\n }\n \n static void\n-purge_dead_tablejump_edges (basic_block bb, rtx table)\n+purge_dead_tablejump_edges (basic_block bb, rtx_jump_table_data *table)\n {\n   rtx_insn *insn = BB_END (bb);\n   rtx tmp;\n@@ -407,10 +402,7 @@ purge_dead_tablejump_edges (basic_block bb, rtx table)\n   edge_iterator ei;\n   edge e;\n \n-  if (GET_CODE (PATTERN (table)) == ADDR_VEC)\n-    vec = XVEC (PATTERN (table), 0);\n-  else\n-    vec = XVEC (PATTERN (table), 1);\n+  vec = table->get_labels ();\n \n   for (j = GET_NUM_ELEM (vec) - 1; j >= 0; --j)\n     mark_tablejump_edge (XEXP (RTVEC_ELT (vec, j), 0));"}, {"sha": "ee98660d00fad3b0f912bddc2536419e16e8f8e6", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=95c43227c5170be95578e3209419c06b41d17fb4", "patch": "@@ -197,16 +197,15 @@ delete_insn (rtx insn)\n       remove_note (insn, note);\n     }\n \n-  if (JUMP_TABLE_DATA_P (insn))\n+  if (rtx_jump_table_data *table = dyn_cast <rtx_jump_table_data *> (insn))\n     {\n-      rtx pat = PATTERN (insn);\n-      int diff_vec_p = GET_CODE (PATTERN (insn)) == ADDR_DIFF_VEC;\n-      int len = XVECLEN (pat, diff_vec_p);\n+      rtvec vec = table->get_labels ();\n+      int len = GET_NUM_ELEM (vec);\n       int i;\n \n       for (i = 0; i < len; i++)\n \t{\n-\t  rtx label = XEXP (XVECEXP (pat, diff_vec_p, i), 0);\n+\t  rtx label = XEXP (RTVEC_ELT (vec, i), 0);\n \n \t  /* When deleting code in bulk (e.g. removing many unreachable\n \t     blocks) we can delete a label that's a target of the vector\n@@ -1186,10 +1185,7 @@ patch_jump_insn (rtx_insn *insn, rtx_insn *old_label, basic_block new_bb)\n \n       if (new_bb == EXIT_BLOCK_PTR_FOR_FN (cfun))\n \treturn false;\n-      if (GET_CODE (PATTERN (table)) == ADDR_VEC)\n-\tvec = XVEC (PATTERN (table), 0);\n-      else\n-\tvec = XVEC (PATTERN (table), 1);\n+      vec = table->get_labels ();\n \n       for (j = GET_NUM_ELEM (vec) - 1; j >= 0; --j)\n \tif (XEXP (RTVEC_ELT (vec, j), 0) == old_label)"}, {"sha": "f29d9420bfd64bb074956e93cd2c6abacae35023", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=95c43227c5170be95578e3209419c06b41d17fb4", "patch": "@@ -2298,10 +2298,7 @@ create_trace_edges (rtx insn)\n \n       if (tablejump_p (insn, NULL, &table))\n \t{\n-\t  rtvec vec;\n-\n-\t  tmp = PATTERN (table);\n-\t  vec = XVEC (tmp, GET_CODE (tmp) == ADDR_DIFF_VEC);\n+\t  rtvec vec = table->get_labels ();\n \n \t  n = GET_NUM_ELEM (vec);\n \t  for (i = 0; i < n; ++i)"}, {"sha": "ec4aa258f4b792be920aa8717031d9fc39f147e5", "filename": "gcc/rtl.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=95c43227c5170be95578e3209419c06b41d17fb4", "patch": "@@ -479,6 +479,21 @@ class GTY(()) rtx_jump_table_data : public rtx_insn\n      This is an instance of:\n        DEF_RTL_EXPR(JUMP_TABLE_DATA, \"jump_table_data\", \"uuBe0000\", RTX_INSN)\n      from rtl.def.  */\n+\n+public:\n+\n+  /* This can be either:\n+\n+       (a) a table of absolute jumps, in which case PATTERN (this) is an\n+           ADDR_VEC with arg 0 a vector of labels, or\n+\n+       (b) a table of relative jumps (e.g. for -fPIC), in which case\n+           PATTERN (this) is an ADDR_DIFF_VEC, with arg 0 a LABEL_REF and\n+\t   arg 1 the vector of labels.\n+\n+     This method gets the underlying vec.  */\n+\n+  inline rtvec get_labels () const;\n };\n \n class GTY(()) rtx_barrier : public rtx_insn\n@@ -1207,6 +1222,15 @@ inline rtx& SET_NEXT_INSN (rtx insn)\n    -1 means this instruction has not been recognized yet.  */\n #define INSN_CODE(INSN) XINT (INSN, 5)\n \n+inline rtvec rtx_jump_table_data::get_labels () const\n+{\n+  rtx pat = PATTERN (this);\n+  if (GET_CODE (pat) == ADDR_VEC)\n+    return XVEC (pat, 0);\n+  else\n+    return XVEC (pat, 1); /* presumably an ADDR_DIFF_VEC */\n+}\n+\n #define RTX_FRAME_RELATED_P(RTX)\t\t\t\t\t\\\n   (RTL_FLAG_CHECK6 (\"RTX_FRAME_RELATED_P\", (RTX), DEBUG_INSN, INSN,\t\\\n \t\t    CALL_INSN, JUMP_INSN, BARRIER, SET)->frame_related)"}, {"sha": "42378fbbe5ca882af8284fc6356a1d47abb0cfb8", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c43227c5170be95578e3209419c06b41d17fb4/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=95c43227c5170be95578e3209419c06b41d17fb4", "patch": "@@ -3801,8 +3801,7 @@ label_is_jump_target_p (const_rtx label, const_rtx jump_insn)\n \n   if (tablejump_p (jump_insn, NULL, &table))\n     {\n-      rtvec vec = XVEC (PATTERN (table),\n-\t\t\tGET_CODE (PATTERN (table)) == ADDR_DIFF_VEC);\n+      rtvec vec = table->get_labels ();\n       int i, veclen = GET_NUM_ELEM (vec);\n \n       for (i = 0; i < veclen; ++i)"}]}