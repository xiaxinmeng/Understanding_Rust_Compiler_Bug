{"sha": "4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVmNWJiZDgxNTM2MzUxZDc4YmFlOGRjMjJjOGViZGM2ZTZjNjUwMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-09-06T12:54:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-09-06T12:54:51Z"}, "message": "Define std::ssize for C++20 (P1227R2)\n\n\t* include/bits/range_access.h (ssize): Define for C++20.\n\t* testsuite/24_iterators/range_access_cpp20.cc: New test.\n\t* doc/xml/manual/status_cxx2020.xml: Update P1227R2 status.\n\t* doc/html/*: Regenerate.\n\nFrom-SVN: r275458", "tree": {"sha": "d8706e7e3d8098b04b3743e72de8ff18950a45a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8706e7e3d8098b04b3743e72de8ff18950a45a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "400b8274e6992c348a822a99ef0c38290aede386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400b8274e6992c348a822a99ef0c38290aede386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400b8274e6992c348a822a99ef0c38290aede386"}], "stats": {"total": 96, "additions": 92, "deletions": 4}, "files": [{"sha": "e135e850594733db5190f2a662f7feed2a76fb4b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "patch": "@@ -1,3 +1,10 @@\n+2019-09-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/range_access.h (ssize): Define for C++20.\n+\t* testsuite/24_iterators/range_access_cpp20.cc: New test.\n+\t* doc/xml/manual/status_cxx2020.xml: Update P1227R2 status.\n+\t* doc/html/*: Regenerate.\n+\n 2019-09-06  Florian Weimer  <fweimer@redhat.com>\n \n \t* configure: Regenerate."}, {"sha": "4442e195cc45de8565c3ac86983dc6f2d8e927eb", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "patch": "@@ -1422,11 +1422,11 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1001r2.html\" target=\"_top\">\n         P1001R2\n \t</a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Signed ssize() functions, unsigned size() functions </td><td align=\"left\">\n+      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Signed ssize() functions, unsigned size() functions </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1227r2.html\" target=\"_top\">\n         P1227R2\n \t</a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Ranges Design Cleanup </td><td align=\"left\">\n+      </td><td align=\"center\"> 10.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Ranges Design Cleanup </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1252r2.pdf\" target=\"_top\">\n         P1252R2\n \t</a>"}, {"sha": "fa0c89dd346e52bb1d11e8b27a1529dcff5440a9", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2020.xml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml?ref=4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "patch": "@@ -1086,14 +1086,13 @@ Feature-testing recommendations for C++</link>.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry> Signed ssize() functions, unsigned size() functions </entry>\n       <entry>\n         <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1227r2.html\">\n         P1227R2\n \t</link>\n       </entry>\n-      <entry align=\"center\"> </entry>\n+      <entry align=\"center\"> 10.1 </entry>\n       <entry />\n     </row>\n "}, {"sha": "c5744145590c7f636c0e216a1d31f4e3b949b99d", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "patch": "@@ -319,6 +319,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif // C++17\n \n #if __cplusplus > 201703L\n+  template<typename _Container>\n+    constexpr auto\n+    ssize(const _Container& __cont)\n+    noexcept(noexcept(__cont.size()))\n+    -> common_type_t<ptrdiff_t, make_signed_t<decltype(__cont.size())>>\n+    {\n+      using type = make_signed_t<decltype(__cont.size())>;\n+      return static_cast<common_type_t<ptrdiff_t, type>>(__cont.size());\n+    }\n+\n+  template<typename _Tp, ptrdiff_t _Num>\n+    constexpr ptrdiff_t\n+    ssize(const _Tp (&)[_Num]) noexcept\n+    { return _Num; }\n+\n   // \"why are these in namespace std:: and not __gnu_cxx:: ?\"\n   // because if we don't put them here it's impossible to\n   // have implicit ADL with \"using std::begin/end/size/data;\"."}, {"sha": "567b05645070ec6b3b0b2b17ade20bbb767d9c10", "filename": "libstdc++-v3/testsuite/24_iterators/range_access_cpp20.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access_cpp20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access_cpp20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access_cpp20.cc?ref=4ef5bbd81536351d78bae8dc22c8ebdc6e6c6500", "patch": "@@ -0,0 +1,67 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// N4830 23.7, Range access [iterator.range]\n+\n+#include <iterator>\n+\n+void\n+test01()\n+{\n+  static int i[1];\n+  constexpr auto s = std::ssize(i);\n+  const std::ptrdiff_t* check_type = &s;\n+  static_assert(s == 1);\n+}\n+\n+void\n+test02()\n+{\n+  static int i[] = { 1, 2 };\n+  constexpr auto s = std::ssize(i);\n+  const std::ptrdiff_t* check_type = &s;\n+  static_assert(s == 2);\n+}\n+\n+void\n+test03()\n+{\n+  struct Cont\n+  {\n+    constexpr unsigned short size() const { return 3; }\n+  };\n+  constexpr Cont c;\n+  constexpr auto s = std::ssize(c);\n+  const std::ptrdiff_t* check_type = &s;\n+  static_assert(s == 3);\n+}\n+\n+void\n+test04()\n+{\n+  struct Cont\n+  {\n+    constexpr unsigned long long size() const { return 4; }\n+  };\n+  constexpr Cont c;\n+  constexpr auto s = std::ssize(c);\n+  const long long* check_type = &s;\n+  static_assert(s == 4);\n+}"}]}