{"sha": "d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkOGMyMzJlZGU0NDZmNGI1MGQ4YzljMTVhODQ5NDFhYWJjNmIxOA==", "commit": {"author": {"name": "Simon Martin", "email": "simartin@users.sourceforge.net", "date": "2007-07-28T10:48:30Z"}, "committer": {"name": "Simon Martin", "email": "simartin@gcc.gnu.org", "date": "2007-07-28T10:48:30Z"}, "message": "re PR c++/30917 (ICE with friend in local class (to a function))\n\ngcc/cp/\n\n2007-07-28  Simon Martin  <simartin@users.sourceforge.net>\n\t    Mark Mitchell  <mark@codesourcery.com>\n\n\tPR c++/30917\n\t* name-lookup.c (lookup_name_real): Non namespace-scope bindings can be\n\thidden due to friend declarations in local classes.\n\ngcc/testsuite/\n\n2007-07-28  Simon Martin  <simartin@users.sourceforge.net>\n\n\tPR c++/30917\n\t* g++.dg/lookup/friend11.C: New test.\n\nCo-Authored-By: Mark Mitchell <mark@codesourcery.com>\n\nFrom-SVN: r127016", "tree": {"sha": "d4e998a6e9d7929bd216f21e2693cc4728dd487f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4e998a6e9d7929bd216f21e2693cc4728dd487f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/comments", "author": {"login": "simartin", "id": 935202, "node_id": "MDQ6VXNlcjkzNTIwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/935202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simartin", "html_url": "https://github.com/simartin", "followers_url": "https://api.github.com/users/simartin/followers", "following_url": "https://api.github.com/users/simartin/following{/other_user}", "gists_url": "https://api.github.com/users/simartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/simartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simartin/subscriptions", "organizations_url": "https://api.github.com/users/simartin/orgs", "repos_url": "https://api.github.com/users/simartin/repos", "events_url": "https://api.github.com/users/simartin/events{/privacy}", "received_events_url": "https://api.github.com/users/simartin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f86b898df8d043e148f3a8a34b1f539847b99138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86b898df8d043e148f3a8a34b1f539847b99138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f86b898df8d043e148f3a8a34b1f539847b99138"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "57c1e413fd24166bc69e33ecc8402e42be85fc4c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "patch": "@@ -1,3 +1,10 @@\n+2007-07-28  Simon Martin  <simartin@users.sourceforge.net>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/30917\n+\t* name-lookup.c (lookup_name_real): Non namespace-scope bindings can be\n+\thidden due to friend declarations in local classes.\n+\n 2007-07-27  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* typeck.c (structural_comptypes): Compare DECLTYPE_TYPE nodes."}, {"sha": "814663819390bc0d1a64f8884ef086274dd01e55", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "patch": "@@ -3990,8 +3990,49 @@ lookup_name_real (tree name, int prefer_type, int nonclass, bool block_p,\n \n \tif (binding)\n \t  {\n-\t    /* Only namespace-scope bindings can be hidden.  */\n-\t    gcc_assert (!hidden_name_p (binding));\n+\t    if (hidden_name_p (binding))\n+\t      {\n+\t\t/* A non namespace-scope binding can only be hidden if\n+\t\t   we are in a local class, due to friend declarations.\n+\t\t   In particular, consider:\n+\n+\t\t   void f() {\n+\t\t     struct A {\n+\t\t       friend struct B;\n+\t\t       void g() { B* b; } // error: B is hidden\n+\t\t     }\n+\t\t     struct B {};\n+\t\t   }\n+\n+\t\t   The standard says that \"B\" is a local class in \"f\"\n+\t\t   (but not nested within \"A\") -- but that name lookup\n+\t\t   for \"B\" does not find this declaration until it is\n+\t\t   declared directly with \"f\".\n+\n+\t\t   In particular:\n+\n+\t\t   [class.friend]\n+\n+\t\t   If a friend declaration appears in a local class and\n+\t\t   the name specified is an unqualified name, a prior\n+\t\t   declaration is looked up without considering scopes\n+\t\t   that are outside the innermost enclosing non-class\n+\t\t   scope. For a friend class declaration, if there is no\n+\t\t   prior declaration, the class that is specified \n+\t\t   belongs to the innermost enclosing non-class scope,\n+\t\t   but if it is subsequently referenced, its name is not\n+\t\t   found by name lookup until a matching declaration is\n+\t\t   provided in the innermost enclosing nonclass scope.\n+\t\t*/\n+\t\tgcc_assert (current_class_type &&\n+\t\t\t    LOCAL_CLASS_P (current_class_type));\n+\n+\t\t/* This binding comes from a friend declaration in the local\n+\t\t   class. The standard (11.4.8) states that the lookup can\n+\t\t   only succeed if there is a non-hidden declaration in the\n+\t\t   current scope, which is not the case here.  */\n+\t\tPOP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, NULL_TREE);\n+\t      }\n \t    val = binding;\n \t    break;\n \t  }"}, {"sha": "52e0b5e43ed356f85b5eb492b077ce0fffcc1ab1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "patch": "@@ -1,3 +1,8 @@\n+2007-07-28  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR c++/30917\n+\t* g++.dg/lookup/friend11.C: New test.\n+\n 2007-07-28  Daniel Franke  <franke.daniel@gmail.com>\n \n \t* gfortran.dg/namelist_5.f90: Adjusted error message."}, {"sha": "ab8a9e507365c6f9f12955d926533196dcc8fada", "filename": "gcc/testsuite/g++.dg/lookup/friend11.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d8c232ede446f4b50d8c9c15a84941aabc6b18/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend11.C?ref=d4d8c232ede446f4b50d8c9c15a84941aabc6b18", "patch": "@@ -0,0 +1,24 @@\n+/* PR c++/30917 */\n+/* This used to ICE */\n+/* { dg-do \"compile\" } */\n+\n+\n+// This is invalid: QGList must only be looked up in count.\n+class QGList;\n+unsigned count() {\n+  class QGListIterator {\n+    friend class QGList;\n+    QGListIterator( const QGList & ); /* { dg-error \"expected|with no type\" } */\n+  };\n+  return 0;\n+}\n+\n+// This is valid.\n+unsigned count2() {\n+  class QGList2;\n+  class QGListIterator2 {\n+    friend class QGList2;\n+    QGListIterator2( const QGList2 & );\n+  };\n+  return 0;\n+}"}]}