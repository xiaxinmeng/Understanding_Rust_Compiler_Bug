{"sha": "33857df2d9fa3d506edbd64610a11d4ccefff12f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4NTdkZjJkOWZhM2Q1MDZlZGJkNjQ2MTBhMTFkNGNjZWZmZjEyZg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-11-18T09:52:46Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-11-18T09:52:46Z"}, "message": "[Patch ARM Refactor Builtins 3/8] Pull builtins code to its own file\n\ngcc/\n\n\t* config.gcc (extra_objs): Add arm-builtins.o for arm*-*-*.\n\t(target_gtfiles): Add config/arm/arm-builtins.c for arm*-*-*.\n\t* config/arm/arm-builtins.c: New.\n\t* config/arm/t-arm (arm_builtins.o): New.\n\t* config/arm/arm-protos.h (arm_expand_builtin): New.\n\t(arm_builtin_decl): Likewise.\n\t(arm_init_builtins): Likewise.\n\t(arm_atomic_assign_expand_fenv): Likewise.\n\t* config/arm/arm.c (arm_atomic_assign_expand_fenv): Remove prototype.\n\t(arm_init_builtins): Likewise.\n\t(arm_init_iwmmxt_builtins): Likewise\n\t(safe_vector_operand): Likewise\n\t(arm_expand_binop_builtin): Likewise\n\t(arm_expand_unop_builtin): Likewise\n\t(arm_expand_builtin): Likewise\n\t(arm_builtin_decl): Likewise\n\t(insn_flags): Remove static.\n\t(tune_flags): Likewise.\n\t(enum arm_builtins): Move to config/arm/arm-builtins.c.\n\t(arm_init_neon_builtins): Likewise.\n\t(struct builtin_description): Likewise.\n\t(arm_init_iwmmxt_builtins): Likewise.\n\t(arm_init_fp16_builtins): Likewise.\n\t(arm_init_crc32_builtins): Likewise.\n\t(arm_init_builtins): Likewise.\n\t(arm_builtin_decl): Likewise.\n\t(safe_vector_operand): Likewise.\n\t(arm_expand_ternop_builtin): Likewise.\n\t(arm_expand_binop_builtin): Likewise.\n\t(arm_expand_unop_builtin): Likewise.\n\t(neon_dereference_pointer): Likewise.\n\t(arm_expand_neon_args): Likewise.\n\t(arm_expand_neon_builtin): Likewise.\n\t(neon_split_vcombine): Likewise.\n\t(arm_expand_builtin): Likewise.\n\t(arm_builtin_vectorized_function): Likewise.\n\t(arm_atomic_assign_expand_fenv): Likewise.\n\nFrom-SVN: r217695", "tree": {"sha": "24d36005b08d2996b31d71821a061bc72e6bdabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24d36005b08d2996b31d71821a061bc72e6bdabd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33857df2d9fa3d506edbd64610a11d4ccefff12f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33857df2d9fa3d506edbd64610a11d4ccefff12f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33857df2d9fa3d506edbd64610a11d4ccefff12f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33857df2d9fa3d506edbd64610a11d4ccefff12f/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a27d8d801a67b1d03513d6ef408c2f1647273221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a27d8d801a67b1d03513d6ef408c2f1647273221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a27d8d801a67b1d03513d6ef408c2f1647273221"}], "stats": {"total": 6104, "additions": 3095, "deletions": 3009}, "files": [{"sha": "cbd400fd547ad7ad3e9d9aeba6f5662ffd437b9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33857df2d9fa3d506edbd64610a11d4ccefff12f", "patch": "@@ -1,3 +1,43 @@\n+2014-11-18  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config.gcc (extra_objs): Add arm-builtins.o for arm*-*-*.\n+\t(target_gtfiles): Add config/arm/arm-builtins.c for arm*-*-*.\n+\t* config/arm/arm-builtins.c: New.\n+\t* config/arm/t-arm (arm_builtins.o): New.\n+\t* config/arm/arm-protos.h (arm_expand_builtin): New.\n+\t(arm_builtin_decl): Likewise.\n+\t(arm_init_builtins): Likewise.\n+\t(arm_atomic_assign_expand_fenv): Likewise.\n+\t* config/arm/arm.c (arm_atomic_assign_expand_fenv): Remove prototype.\n+\t(arm_init_builtins): Likewise.\n+\t(arm_init_iwmmxt_builtins): Likewise\n+\t(safe_vector_operand): Likewise\n+\t(arm_expand_binop_builtin): Likewise\n+\t(arm_expand_unop_builtin): Likewise\n+\t(arm_expand_builtin): Likewise\n+\t(arm_builtin_decl): Likewise\n+\t(insn_flags): Remove static.\n+\t(tune_flags): Likewise.\n+\t(enum arm_builtins): Move to config/arm/arm-builtins.c.\n+\t(arm_init_neon_builtins): Likewise.\n+\t(struct builtin_description): Likewise.\n+\t(arm_init_iwmmxt_builtins): Likewise.\n+\t(arm_init_fp16_builtins): Likewise.\n+\t(arm_init_crc32_builtins): Likewise.\n+\t(arm_init_builtins): Likewise.\n+\t(arm_builtin_decl): Likewise.\n+\t(safe_vector_operand): Likewise.\n+\t(arm_expand_ternop_builtin): Likewise.\n+\t(arm_expand_binop_builtin): Likewise.\n+\t(arm_expand_unop_builtin): Likewise.\n+\t(neon_dereference_pointer): Likewise.\n+\t(arm_expand_neon_args): Likewise.\n+\t(arm_expand_neon_builtin): Likewise.\n+\t(neon_split_vcombine): Likewise.\n+\t(arm_expand_builtin): Likewise.\n+\t(arm_builtin_vectorized_function): Likewise.\n+\t(arm_atomic_assign_expand_fenv): Likewise.\n+\n 2014-11-18  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/t-arm (arm.o): Include arm-protos.h in the recipe."}, {"sha": "88309b645e3422d12f61675b2669be1fb37c280a", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=33857df2d9fa3d506edbd64610a11d4ccefff12f", "patch": "@@ -319,12 +319,13 @@ arc*-*-*)\n \t;;\n arm*-*-*)\n \tcpu_type=arm\n-\textra_objs=\"aarch-common.o\"\n+\textra_objs=\"arm-builtins.o aarch-common.o\"\n \textra_headers=\"mmintrin.h arm_neon.h arm_acle.h\"\n \ttarget_type_format_char='%'\n \tc_target_objs=\"arm-c.o\"\n \tcxx_target_objs=\"arm-c.o\"\n \textra_options=\"${extra_options} arm/arm-tables.opt\"\n+\ttarget_gtfiles=\"\\$(srcdir)/config/arm/arm-builtins.c\"\n \t;;\n avr-*-*)\n \tcpu_type=avr"}, {"sha": "e387b608c53e9dadaea4cb42667b751997ed76a4", "filename": "gcc/config/arm/arm-builtins.c", "status": "added", "additions": 3036, "deletions": 0, "changes": 3036, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=33857df2d9fa3d506edbd64610a11d4ccefff12f"}, {"sha": "d9149ce02fb89679632f87443a3cd1dd9868d6ad", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=33857df2d9fa3d506edbd64610a11d4ccefff12f", "patch": "@@ -41,7 +41,14 @@ extern HOST_WIDE_INT thumb_compute_initial_elimination_offset (unsigned int,\n \t\t\t\t\t\t\t       unsigned int);\n extern unsigned int arm_dbx_register_number (unsigned int);\n extern void arm_output_fn_unwind (FILE *, bool);\n-  \n+\n+extern rtx arm_expand_builtin (tree exp, rtx target, rtx subtarget\n+\t\t\t       ATTRIBUTE_UNUSED, enum machine_mode mode\n+\t\t\t       ATTRIBUTE_UNUSED, int ignore ATTRIBUTE_UNUSED);\n+extern tree arm_builtin_decl (unsigned code, bool initialize_p\n+\t\t\t      ATTRIBUTE_UNUSED);\n+extern void arm_init_builtins (void);\n+extern void arm_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update);\n \n #ifdef RTX_CODE\n extern bool arm_vector_mode_supported_p (machine_mode);"}, {"sha": "a96b5e5747210c41d9760bda56a31495f8f7c7f9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 3007, "changes": 3007, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=33857df2d9fa3d506edbd64610a11d4ccefff12f"}, {"sha": "98a1d3b684de7ebe62e684aab0a526941bc16d75", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33857df2d9fa3d506edbd64610a11d4ccefff12f/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=33857df2d9fa3d506edbd64610a11d4ccefff12f", "patch": "@@ -95,6 +95,15 @@ arm.o: $(srcdir)/config/arm/arm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(srcdir)/config/arm/arm-protos.h \\\n   $(srcdir)/config/arm/arm_neon_builtins.def\n \n+arm-builtins.o: $(srcdir)/config/arm/arm-builtins.c $(CONFIG_H) \\\n+  $(SYSTEM_H) coretypes.h $(TM_H) \\\n+  $(RTL_H) $(TREE_H) expr.h $(TM_P_H) $(RECOG_H) langhooks.h \\\n+  $(DIAGNOSTIC_CORE_H) $(OPTABS_H) \\\n+  $(srcdir)/config/arm/arm-protos.h \\\n+  $(srcdir)/config/arm/arm_neon_builtins.def\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/arm/arm-builtins.c\n+\n arm-c.o: $(srcdir)/config/arm/arm-c.c $(CONFIG_H) $(SYSTEM_H) \\\n     coretypes.h $(TM_H) $(TREE_H) output.h $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\"}]}