{"sha": "ebcc3d93d863c046375534bd8d7526472cd4e239", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjYzNkOTNkODYzYzA0NjM3NTUzNGJkOGQ3NTI2NDcyY2Q0ZTIzOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-11-01T22:12:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-11-01T22:12:07Z"}, "message": "tree.def (TARGET_MEM_REF): Update comment.\n\n\t* tree.def (TARGET_MEM_REF): Update comment.\n\t* alias.c (get_alias_set): Retrieve the original memory reference for\n\ta TARGET_MEM_REF before proceeding.\n\nFrom-SVN: r153796", "tree": {"sha": "62f23c951cc8e561a8dda480d655b8c2be82797e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62f23c951cc8e561a8dda480d655b8c2be82797e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebcc3d93d863c046375534bd8d7526472cd4e239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcc3d93d863c046375534bd8d7526472cd4e239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebcc3d93d863c046375534bd8d7526472cd4e239", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcc3d93d863c046375534bd8d7526472cd4e239/comments", "author": null, "committer": null, "parents": [{"sha": "958dd42b03f9754d12fd247bae52a1871c087237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/958dd42b03f9754d12fd247bae52a1871c087237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/958dd42b03f9754d12fd247bae52a1871c087237"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "b4e1bff084599fdd437a6fba85145d8cab222a95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebcc3d93d863c046375534bd8d7526472cd4e239", "patch": "@@ -1,3 +1,9 @@\n+2009-11-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.def (TARGET_MEM_REF): Update comment.\n+\t* alias.c (get_alias_set): Retrieve the original memory reference for\n+\ta TARGET_MEM_REF before proceeding.\n+\n 2009-10-31  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/frv/frv.c (frv_function_value, frv_libcall_value,"}, {"sha": "cdfa6d2d3ac7d195a205706053152164be635db1", "filename": "gcc/alias.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=ebcc3d93d863c046375534bd8d7526472cd4e239", "patch": "@@ -640,7 +640,7 @@ get_alias_set (tree t)\n      aren't types.  */\n   if (! TYPE_P (t))\n     {\n-      tree inner = t;\n+      tree inner;\n \n       /* Remove any nops, then give the language a chance to do\n \t something with this tree before we look at it.  */\n@@ -649,8 +649,13 @@ get_alias_set (tree t)\n       if (set != -1)\n \treturn set;\n \n+      /* Retrieve the original memory reference if needed.  */\n+      if (TREE_CODE (t) == TARGET_MEM_REF)\n+\tt = TMR_ORIGINAL (t);\n+\n       /* First see if the actual object referenced is an INDIRECT_REF from a\n \t restrict-qualified pointer or a \"void *\".  */\n+      inner = t;\n       while (handled_component_p (inner))\n \t{\n \t  inner = TREE_OPERAND (inner, 0);"}, {"sha": "a6bf61b6b7363e432ca0dba3e0392be042e7cafc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebcc3d93d863c046375534bd8d7526472cd4e239", "patch": "@@ -1,3 +1,7 @@\n+2009-11-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt5.adb: New test.\n+\n 2009-11-01  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41872"}, {"sha": "73a21bde02370ba0e0b8579a50d3d7d5f880ba0f", "filename": "gcc/testsuite/gnat.dg/opt5.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Ftestsuite%2Fgnat.dg%2Fopt5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Ftestsuite%2Fgnat.dg%2Fopt5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt5.adb?ref=ebcc3d93d863c046375534bd8d7526472cd4e239", "patch": "@@ -0,0 +1,21 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+procedure Opt5 is\n+\n+   type Varray is array (1 .. 4) of Natural;\n+\n+   procedure Check_All_Ones (A : Varray) is\n+   begin\n+      for J in A'Range loop\n+         if (A (J)) /= 1 then\n+            raise Program_Error;\n+         end if;\n+      end loop;\n+   end;\n+\n+   X : constant Varray := (1, 1, 1, 1);\n+\n+begin\n+   Check_All_Ones (X);\n+end;"}, {"sha": "01d9b3060debb33da0f6cac534d9797251e925c0", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcc3d93d863c046375534bd8d7526472cd4e239/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=ebcc3d93d863c046375534bd8d7526472cd4e239", "patch": "@@ -967,9 +967,9 @@ DEFTREECODE (REALIGN_LOAD_EXPR, \"realign_load\", tcc_expression, 3)\n \n    The type of STEP, INDEX and OFFSET is sizetype.  The type of BASE is\n    sizetype or a pointer type (if SYMBOL is NULL).\n-   \n+\n    The sixth argument is the reference to the original memory access, which\n-   is preserved for the purposes of the RTL alias analysis.  */\n+   is preserved for the purpose of alias analysis.  */\n \n DEFTREECODE (TARGET_MEM_REF, \"target_mem_ref\", tcc_reference, 6)\n "}]}