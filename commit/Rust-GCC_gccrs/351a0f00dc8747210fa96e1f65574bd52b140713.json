{"sha": "351a0f00dc8747210fa96e1f65574bd52b140713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUxYTBmMDBkYzg3NDcyMTBmYTk2ZTFmNjU1NzRiZDUyYjE0MDcxMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-04-20T08:17:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-04-20T08:17:19Z"}, "message": "call.c (maybe_handle_ref_bind): Copy ICS_USER_FLAG and ICS_BAD_FLAG.\n\n\t* call.c (maybe_handle_ref_bind): Copy ICS_USER_FLAG and\n\tICS_BAD_FLAG.\n\n\t* g++.old-deja/g++.other/overload14.C: New test.\n\nFrom-SVN: r41448", "tree": {"sha": "edf0cc1a756240e666927904e1f160ff6985b230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edf0cc1a756240e666927904e1f160ff6985b230"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/351a0f00dc8747210fa96e1f65574bd52b140713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/351a0f00dc8747210fa96e1f65574bd52b140713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/351a0f00dc8747210fa96e1f65574bd52b140713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/351a0f00dc8747210fa96e1f65574bd52b140713/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "881cae050a16f36533d1ba5ceabed73292f1c855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881cae050a16f36533d1ba5ceabed73292f1c855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881cae050a16f36533d1ba5ceabed73292f1c855"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "16a03dcf18c65952969a9b20596c12a0b408fc1b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=351a0f00dc8747210fa96e1f65574bd52b140713", "patch": "@@ -1,3 +1,8 @@\n+2001-04-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* call.c (maybe_handle_ref_bind): Copy ICS_USER_FLAG and\n+\tICS_BAD_FLAG.\n+\n 2001-04-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* search.c (lookup_field_r): If looking for type and non-TYPE_DECL"}, {"sha": "4d4d033c1303380189231ed1c69afe8fb65d65d0", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=351a0f00dc8747210fa96e1f65574bd52b140713", "patch": "@@ -4741,11 +4741,14 @@ maybe_handle_ref_bind (ics, target_type)\n {\n   if (TREE_CODE (*ics) == REF_BIND)\n     {\n+      tree old_ics = *ics;\n       *target_type = TREE_TYPE (TREE_TYPE (*ics));\n       *ics = TREE_OPERAND (*ics, 0);\n+      ICS_USER_FLAG (*ics) = ICS_USER_FLAG (old_ics);\n+      ICS_BAD_FLAG (*ics) = ICS_BAD_FLAG (old_ics);\n       return 1;\n     }\n-  \n+\n   return 0;\n }\n "}, {"sha": "2a97b4e68322a2cdc9444b43ce7ca3c2f845157f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=351a0f00dc8747210fa96e1f65574bd52b140713", "patch": "@@ -1,3 +1,7 @@\n+2001-04-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.old-deja/g++.other/overload14.C: New test.\n+\n 2001-04-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.old-deja/g++.other/lookup23.C: New test."}, {"sha": "8938ef1d7d46c10ec35217da8b7d240cc05fd330", "filename": "gcc/testsuite/g++.old-deja/g++.other/overload14.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351a0f00dc8747210fa96e1f65574bd52b140713/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload14.C?ref=351a0f00dc8747210fa96e1f65574bd52b140713", "patch": "@@ -0,0 +1,31 @@\n+extern \"C\" void abort();\n+\n+struct A {\n+  typedef double (&B);\n+  typedef const double (&C);\n+\n+  A() { }\n+\n+  operator C () const;\n+  operator B ();\n+};\n+\n+static const double d = 2.0;\n+static double e = 3.0;\n+\n+A::operator A::C () const\n+{\n+  abort ();\n+  return d;\n+}\n+\n+A::operator A::B ()\n+{\n+  return e;\n+}\n+\n+int main ()\n+{\n+  (A::C) A ();\t\t// WARNING - \n+  return 0;\n+}"}]}