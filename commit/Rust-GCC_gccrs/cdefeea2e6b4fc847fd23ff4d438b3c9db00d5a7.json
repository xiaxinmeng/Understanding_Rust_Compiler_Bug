{"sha": "cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlZmVlYTJlNmI0ZmM4NDdmZDIzZmY0ZDQzOGIzYzlkYjAwZDVhNw==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-05-18T14:08:13Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-05-18T14:08:13Z"}, "message": "fold-vec-div-float.c: Update dg-requires and dg-options statements.\n\n2017-05-18  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n[gcc/testsuite]\n\n\t* fold-vec-div-float.c: Update dg-requires and dg-options statements.\n\t* fold-vec-div-floatdouble.c: Likewise.\n\t* fold-vec-logical-ands-char.c: Likewise.\n\t* fold-vec-logical-ands-int.c: Likewise.\n\t* fold-vec-logical-ands-short.c: Likewise.\n\t* fold-vec-logical-ors-char.c: Likewise.\n\t* fold-vec-logical-ors-int.c: Likewise.\n\t* fold-vec-logical-ors-short.c: Likewise.\n\t* fold-vec-logical-other-char.c: Likewise.\n\t* fold-vec-mule-misc.c: Likewise.\n\t* fold-vec-mult-float.c: Likewise.\n\t* fold-vec-mult-floatdouble.c: Likewise.\n\t* fold-vec-mult-int.c: Likewise.\n\t* fold-vec-mult-int128-p9.c: Likewise.\n\t* fold-vec-sub-floatdouble.c: Likewise.\n\t* fold-vec-div-longlong.c: Update dg-requires and dg-options statements.\n\tAdd lp64 requirement.\n\t* fold-vec-mult-int128-p8.c: Likewise.\n\t* fold-vec-logical-ors-longlong.c: Fix comment typo.\n\nFrom-SVN: r248202", "tree": {"sha": "0b4735691d159af8b2f2b176b906629287292fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b4735691d159af8b2f2b176b906629287292fab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62ee030a80630a8cd0c0d51548ab927c44d54fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ee030a80630a8cd0c0d51548ab927c44d54fd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62ee030a80630a8cd0c0d51548ab927c44d54fd4"}], "stats": {"total": 81, "additions": 52, "deletions": 29}, "files": [{"sha": "d20ade3afcd9e11b66aae501d9a1997c4b730f4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -1,3 +1,25 @@\n+2017-05-18  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* fold-vec-div-float.c: Update dg-requires and dg-options statements.\n+\t* fold-vec-div-floatdouble.c: Likewise.\n+\t* fold-vec-logical-ands-char.c: Likewise.\n+\t* fold-vec-logical-ands-int.c: Likewise.\n+\t* fold-vec-logical-ands-short.c: Likewise.\n+\t* fold-vec-logical-ors-char.c: Likewise.\n+\t* fold-vec-logical-ors-int.c: Likewise.\n+\t* fold-vec-logical-ors-short.c: Likewise.\n+\t* fold-vec-logical-other-char.c: Likewise.\n+\t* fold-vec-mule-misc.c: Likewise.\n+\t* fold-vec-mult-float.c: Likewise.\n+\t* fold-vec-mult-floatdouble.c: Likewise.\n+\t* fold-vec-mult-int.c: Likewise.\n+\t* fold-vec-mult-int128-p9.c: Likewise.\n+\t* fold-vec-sub-floatdouble.c: Likewise.\n+\t* fold-vec-div-longlong.c: Update dg-requires and dg-options statements.\n+\tAdd lp64 requirement.\n+\t* fold-vec-mult-int128-p8.c: Likewise.\n+\t* fold-vec-logical-ors-longlong.c: Fix comment typo.\n+\n 2017-05-18  Steven Munroe  <munroesj@gcc.gnu.org>\n \n \t* gcc.target/powerpc/bmi-andn-1.c: Fix-up dg-options."}, {"sha": "47254ce66a83a873c6749ff4a598debb60fdf420", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-div-float.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-float.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -1,9 +1,9 @@\n /* Verify that overloaded built-ins for vec_div with float\n-   inputs produce the right results with -maltivec.  */\n+   inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx\" } */\n \n #include <altivec.h>\n "}, {"sha": "569467e61f946f70b4dcc2147b701d5b0b70a000", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-div-floatdouble.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-floatdouble.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -1,9 +1,9 @@\n /* Verify that overloaded built-ins for vec_div with float and\n-   double inputs for VSX produce the right results with -mvsx. */\n+   double inputs for VSX produce the right results. */\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-mvsx\" } */\n \n #include <altivec.h>\n "}, {"sha": "312e984d3cc07e99391a62529fcead1259c8e42f", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-div-longlong.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-div-longlong.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -2,8 +2,9 @@\n    inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_p8vector_ok } */\n-/* { dg-options \"-maltivec -mpower8-vector -O3\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-mvsx -O2\" } */\n \n #include <altivec.h>\n "}, {"sha": "d1f66f434add000b655f654988d35c0de7cdeabf", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ands-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-char.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-maltivec -O1\" } */\n+/* { dg-options \"-mvsx -O1\" } */\n \n #include <altivec.h>\n "}, {"sha": "59a23e89b485f13a59e4a914a9980f48e9556b99", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ands-int.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-int.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -2,8 +2,8 @@\n  * with int inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -O1\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O1\" } */\n \n #include <altivec.h>\n "}, {"sha": "805d34561bade6308e1f13fbb11573960af9d553", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ands-short.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ands-short.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -2,8 +2,8 @@\n    inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -O1\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O1\" } */\n \n #include <altivec.h>\n "}, {"sha": "7406039d0549ab6f96027fc72a019685ffff45bb", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-char.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-char.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -3,11 +3,10 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-maltivec -O1\" } */\n+/* { dg-options \"-mvsx -O1\" } */\n \n #include <altivec.h>\n \n-\n vector signed char\n test1_or (vector bool char x, vector signed char y)\n {"}, {"sha": "a7c6366b938b5dc1d9e000953e9c0b4d784e4eeb", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-int.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-int.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -2,8 +2,8 @@\n  * with int inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -O1\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O1\" } */\n \n #include <altivec.h>\n "}, {"sha": "7ca23fb24543639ad2f6f63eb25a8732b2508a94", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-longlong.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -153,7 +153,7 @@ test6_nor (vector unsigned long long x, vector unsigned long long y)\n \n // Codegen on power7 is such that the vec_or() tests generate more xxlor\n // instructions than what is seen on power8 or newer.\n-// Thus, an additional target close for the xxlor instruction check.\n+// Thus, an additional target clause for the xxlor instruction check.\n /* { dg-final { scan-assembler-times {\\mxxlor\\M} 6 { target p8vector_hw }  } } */\n /* { dg-final { scan-assembler-times {\\mxxlor\\M} 24 { target { ! p8vector_hw }  }  } } */\n "}, {"sha": "8352a7f4dc59e6ffe7872dd9af45f63eff95b7ac", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-short.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-short.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -2,8 +2,8 @@\n    inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -O1\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O1\" } */\n \n #include <altivec.h>\n "}, {"sha": "7fe3e0b8e0e955b3beac5ccabf9a78194bf374ec", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-other-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-char.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -3,7 +3,7 @@\n  * vec_nand) were added as part of ISA 2.07 (P8).  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target p8vector_hw } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-options \"-mpower8-vector -O1\" } */\n \n #include <altivec.h>"}, {"sha": "9b89118a0fa7840facea19b0688d6c97306ee374", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-mule-misc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mule-misc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mule-misc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mule-misc.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -1,8 +1,8 @@\n /* PR target/79941 */\n \n /* { dg-do run } */\n-/* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-mvsx -O2 -save-temps\" } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2 -save-temps\" } */\n \n #include <altivec.h>\n "}, {"sha": "46afc6855700c60daa94c92a14200308f062ea1f", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-mult-float.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-float.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -2,8 +2,8 @@\n    inputs produce the right results.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -mvsx\" } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O2\" } */\n \n #include <altivec.h>\n "}, {"sha": "59e936154e95687d17b32ed8928398ffc6ff76e3", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-mult-floatdouble.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-floatdouble.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-maltivec -mvsx\" } */\n+/* { dg-options \"-mvsx\" } */\n \n #include <altivec.h>\n "}, {"sha": "b536bcedaa9fd869239be5a08b3231ca8c0b353b", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-mult-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n-/* { dg-options \"-maltivec -mvsx -mpower8-vector\" } */\n+/* { dg-options \"-mpower8-vector\" } */\n \n #include <altivec.h>\n "}, {"sha": "97d6b945f43efc9850b8c0861bd38c738ce93f37", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-mult-int128-p8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int128-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int128-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int128-p8.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -4,7 +4,8 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-require-effective-target int128 } */\n-/* { dg-options \"-maltivec -mvsx -mpower8-vector\" } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-mpower8-vector\" } */\n /* { dg-additional-options \"-maix64\" { target powerpc-ibm-aix* } } */\n \n #include \"altivec.h\""}, {"sha": "e81ea5f3134336eb5b370738108f156da4b17f9f", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-mult-int128-p9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int128-p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int128-p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-mult-int128-p9.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -5,7 +5,7 @@\n /* { dg-require-effective-target powerpc_float128_hw_ok } */\n /* { dg-require-effective-target int128 } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-maltivec -mvsx -mcpu=power9 -O2\" } */\n+/* { dg-options \"-mcpu=power9 -O2\" } */\n /* { dg-additional-options \"-maix64\" { target powerpc-ibm-aix* } } */\n \n #include \"altivec.h\""}, {"sha": "116f15e66887745814df1e6a9451994890fe919a", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-sub-floatdouble.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-sub-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-sub-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-sub-floatdouble.c?ref=cdefeea2e6b4fc847fd23ff4d438b3c9db00d5a7", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-maltivec -mvsx\" } */\n+/* { dg-options \"-mvsx\" } */\n \n #include <altivec.h>\n "}]}