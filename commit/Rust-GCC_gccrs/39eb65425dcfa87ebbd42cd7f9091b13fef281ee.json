{"sha": "39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllYjY1NDI1ZGNmYTg3ZWJiZDQyY2Q3ZjkwOTFiMTNmZWYyODFlZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-04T13:46:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-04T13:46:35Z"}, "message": "[multiple changes]\n\n2010-10-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-taprop-mingw.adb (Create_Task): Initialize Thread_Id field to 0.\n\n2010-10-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_cg.adb: Minor code reorganization\n\tMinor reformatting.\n\t* exp_ch5.adb, prj-nmsc.adb: Minor reformatting.\n\nFrom-SVN: r164937", "tree": {"sha": "5d844c02464716a053a759f5d52fffb97421aff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d844c02464716a053a759f5d52fffb97421aff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/comments", "author": null, "committer": null, "parents": [{"sha": "9db0b2326f505eab9654754afc66e80483aa2c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db0b2326f505eab9654754afc66e80483aa2c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db0b2326f505eab9654754afc66e80483aa2c17"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "b389fed7e3a95de572d2f4b8dc73c8caf4c45088", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "patch": "@@ -1,3 +1,13 @@\n+2010-10-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-taprop-mingw.adb (Create_Task): Initialize Thread_Id field to 0.\n+\n+2010-10-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_cg.adb: Minor code reorganization\n+\tMinor reformatting.\n+\t* exp_ch5.adb, prj-nmsc.adb: Minor reformatting.\n+\n 2010-10-04  Bob Duff  <duff@adacore.com>\n \n \t* sem_res.adb (Resolve_Type_Conversion): If a type conversion is needed"}, {"sha": "6db3929b68fdb2d708f5061fd7d4ee4643f57ca6", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "patch": "@@ -173,7 +173,8 @@ package body Exp_CG is\n       ---------------------------\n \n       function Homonym_Suffix_Length (E : Entity_Id) return Natural is\n-         Prefix_Length : constant := 2; --  Length of prefix \"__\"\n+         Prefix_Length : constant := 2;\n+         --  Length of prefix \"__\"\n \n          H  : Entity_Id;\n          Nr : Nat := 1;\n@@ -200,11 +201,13 @@ package body Exp_CG is\n             else\n                declare\n                   Result : Natural := Prefix_Length + 1;\n+\n                begin\n                   while Nr >= 10 loop\n                      Result := Result + 1;\n                      Nr := Nr / 10;\n                   end loop;\n+\n                   return Result;\n                end;\n             end if;\n@@ -214,7 +217,7 @@ package body Exp_CG is\n       --  Local variables\n \n       Full_Name     : constant String := Get_Name_String (Chars (E));\n-      Suffix_Length : Natural         := Homonym_Suffix_Length (E);\n+      Suffix_Length : Natural;\n       TSS_Name      : TSS_Name_Type;\n \n    --  Start of processing for Is_Predefined_Dispatching_Operation\n@@ -226,6 +229,7 @@ package body Exp_CG is\n \n       --  Search for and strip suffix for body-nested package entities\n \n+      Suffix_Length := Homonym_Suffix_Length (E);\n       for J in reverse Full_Name'First + 2 .. Full_Name'Last loop\n          if Full_Name (J) = 'X' then\n "}, {"sha": "18bda5d5b3f3f624c0faca64fba5638d867ff41d", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "patch": "@@ -1370,7 +1370,6 @@ package body Exp_Ch5 is\n \n          begin\n             Result := New_List;\n-\n             Item := First (CI);\n             while Present (Item) loop\n "}, {"sha": "68c1849fa6242f494e1474095044541cf77310d0", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "patch": "@@ -5280,15 +5280,20 @@ package body Prj.Nmsc is\n          Recursive_Dirs.Reset (Visited);\n       end Find_Source_Dirs;\n \n+      --  Local declarations\n+\n       Dir_Exists : Boolean;\n \n       No_Sources : constant Boolean :=\n-        (((not Source_Files.Default) and then Source_Files.Values = Nil_String)\n-         or else\n-         ((not Source_Dirs.Default) and then Source_Dirs.Values = Nil_String)\n-         or else\n-         ((not Languages.Default) and then Languages.Values = Nil_String))\n-        and then Project.Extends = No_Project;\n+                     ((not Source_Files.Default\n+                        and then Source_Files.Values = Nil_String)\n+                       or else\n+                      (not Source_Dirs.Default\n+                        and then Source_Dirs.Values = Nil_String)\n+                       or else\n+                      (not Languages.Default\n+                        and then Languages.Values = Nil_String))\n+                     and then Project.Extends = No_Project;\n \n    --  Start of processing for Get_Directories\n \n@@ -5318,6 +5323,7 @@ package body Prj.Nmsc is\n                Object_Dir.Location, Project);\n \n          elsif not No_Sources then\n+\n             --  We check that the specified object directory does exist.\n             --  However, even when it doesn't exist, we set it to a default\n             --  value. This is for the benefit of tools that recover from\n@@ -5338,8 +5344,8 @@ package body Prj.Nmsc is\n             if not Dir_Exists\n               and then not Project.Externally_Built\n             then\n-               --  The object directory does not exist, report an error if\n-               --  the project is not externally built.\n+               --  The object directory does not exist, report an error if the\n+               --  project is not externally built.\n \n                Err_Vars.Error_Msg_File_1 :=\n                  File_Name_Type (Object_Dir.Value);\n@@ -5389,6 +5395,7 @@ package body Prj.Nmsc is\n                Exec_Dir.Location, Project);\n \n          elsif not No_Sources then\n+\n             --  We check that the specified exec directory does exist\n \n             Locate_Directory"}, {"sha": "2339e528cddecded83768e71f30b26e39a1f8afe", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39eb65425dcfa87ebbd42cd7f9091b13fef281ee/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=39eb65425dcfa87ebbd42cd7f9091b13fef281ee", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -918,6 +918,15 @@ package body System.Task_Primitives.Operations is\n \n       T.Common.LL.Thread := hTask;\n \n+      --  Note: it would be useful to initialize Thread_Id right away to avoid\n+      --  a race condition in gdb where Thread_ID may not have the right value\n+      --  yet, but GetThreadId is a Vista specific API, not available under XP:\n+      --  T.Common.LL.Thread_Id := GetThreadId (hTask); so instead we set the\n+      --  field to 0 to avoid having a random value. Thread_Id is initialized\n+      --  in Enter_Task anyway.\n+\n+      T.Common.LL.Thread_Id := 0;\n+\n       --  Step 3: set its priority (child has inherited priority from parent)\n \n       Set_Priority (T, Priority);\n@@ -927,8 +936,8 @@ package body System.Task_Primitives.Operations is\n         or else Get_Policy (Priority) = 'F'\n       then\n          --  Here we need Annex D semantics so we disable the NT priority\n-         --  boost. A priority boost is temporarily given by the system to a\n-         --  thread when it is taken out of a wait state.\n+         --  boost. A priority boost is temporarily given by the system to\n+         --  a thread when it is taken out of a wait state.\n \n          SetThreadPriorityBoost (hTask, DisablePriorityBoost => Win32.TRUE);\n       end if;\n@@ -942,7 +951,7 @@ package body System.Task_Primitives.Operations is\n          end if;\n       end if;\n \n-      --  Step 5: Now, start it for good:\n+      --  Step 5: Now, start it for good\n \n       Result := ResumeThread (hTask);\n       pragma Assert (Result = 1);\n@@ -1122,6 +1131,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Finalize (S : in out Suspension_Object) is\n       Result : BOOL;\n+\n    begin\n       --  Destroy internal mutex\n \n@@ -1200,6 +1210,7 @@ package body System.Task_Primitives.Operations is\n    procedure Suspend_Until_True (S : in out Suspension_Object) is\n       Result      : DWORD;\n       Result_Bool : BOOL;\n+\n    begin\n       SSL.Abort_Defer.all;\n "}]}