{"sha": "0435269a764312008a34152f04254fa5024fba72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQzNTI2OWE3NjQzMTIwMDhhMzQxNTJmMDQyNTRmYTUwMjRmYmE3Mg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-10-09T20:18:14Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-10-09T20:18:14Z"}, "message": "configopts.html: More HTML->XHTML and lowercasing of tags.\n\n2001-10-09  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/html/configopts.html:  More HTML->XHTML and lowercasing of tags.\n\t* docs/html/documentation.html:  Likewise.\n\t* docs/html/explanations.html:  Likewise.\n\t* docs/html/install.html:  Likewise.\n\t* docs/html/17_intro/howto.html:  Likewise.\n\t* docs/html/17_intro/license.html:  Likewise.  Tighten up language.\n\t* docs/html/18_support/howto.html:  Likewise.\n\t* docs/html/19_diagnostics/howto.html:  Likewise.\n\t* docs/html/20_util/howto.html:  Likewise.\n\t* docs/html/21_strings/howto.html:  Likewise.\n\t* docs/html/22_locale/howto.html:  Likewise.\n\t* docs/html/23_containers/howto.html:  Likewise.\n\t* docs/html/24_iterators/howto.html:  Likewise.\n\t* docs/html/25_algorithms/howto.html:  Likewise.\n\t* docs/html/26_numerics/howto.html:  Likewise.\n\t* docs/html/27_io/howto.html:  Likewise.\n\t* docs/html/ext/howto.html:  Likewise.\n\t* docs/html/ext/sgiexts.html:  Likewise.\n\t* docs/html/faq/index.html:  Likewise.  Not so many absolute links.\n\t* docs/html/faq/index.txt:  Regenerate.\n\nFrom-SVN: r46128", "tree": {"sha": "6be1c15ffbe632ffdbfcdc5ac2709faf05aa0cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be1c15ffbe632ffdbfcdc5ac2709faf05aa0cba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0435269a764312008a34152f04254fa5024fba72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0435269a764312008a34152f04254fa5024fba72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0435269a764312008a34152f04254fa5024fba72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0435269a764312008a34152f04254fa5024fba72/comments", "author": null, "committer": null, "parents": [{"sha": "0d47f0862930d2f12338968b00a514f45c23e367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d47f0862930d2f12338968b00a514f45c23e367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d47f0862930d2f12338968b00a514f45c23e367"}], "stats": {"total": 845, "additions": 430, "deletions": 415}, "files": [{"sha": "dc3d498cc13e1e9d09bae6a5d61ccce679c0b0e8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,3 +1,26 @@\n+2001-10-09  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/html/configopts.html:  More HTML->XHTML and lowercasing of tags.\n+\t* docs/html/documentation.html:  Likewise.\n+\t* docs/html/explanations.html:  Likewise.\n+\t* docs/html/install.html:  Likewise.\n+\t* docs/html/17_intro/howto.html:  Likewise.\n+\t* docs/html/17_intro/license.html:  Likewise.  Tighten up language.\n+\t* docs/html/18_support/howto.html:  Likewise.\n+\t* docs/html/19_diagnostics/howto.html:  Likewise.\n+\t* docs/html/20_util/howto.html:  Likewise.\n+\t* docs/html/21_strings/howto.html:  Likewise.\n+\t* docs/html/22_locale/howto.html:  Likewise.\n+\t* docs/html/23_containers/howto.html:  Likewise.\n+\t* docs/html/24_iterators/howto.html:  Likewise.\n+\t* docs/html/25_algorithms/howto.html:  Likewise.\n+\t* docs/html/26_numerics/howto.html:  Likewise.\n+\t* docs/html/27_io/howto.html:  Likewise.\n+\t* docs/html/ext/howto.html:  Likewise.\n+\t* docs/html/ext/sgiexts.html:  Likewise.\n+\t* docs/html/faq/index.html:  Likewise.  Not so many absolute links.\n+\t* docs/html/faq/index.txt:  Regenerate.\n+\n 2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* docs/html/22_locale/locale.html, docs/html/faq/index.html: Fix"}, {"sha": "9831e7cd8e42cb932b98dbfabbf46a580428b17f", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, gcc, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for libstdc++ chapter 17.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, gcc, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for libstdc++ chapter 17.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 17</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 17:  Library Introduction</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 17:  Library Introduction</a></h1>\n \n <p>Chapter 17 is actually a list of definitions and descriptions used\n    in the following chapters of the Standard when describing the actual\n@@ -27,7 +27,7 @@ <h1>Contents</h1>\n    <li><a href=\"#2\">The Standard C++ header files</a>\n    <li><a href=\"#3\">Thread-safety</a>\n    <li><a href=\"#4\"><code>&lt;foo&gt;</code> vs <code>&lt;foo.h&gt;</code></a>\n-   <li><a href=\"porting-howto.html\">Porting-howto</a>\n+   <li><a href=\"porting-howto.html\">Porting HOWTO</a>\n </ul>\n \n <hr>\n@@ -92,9 +92,9 @@ <h2><a name=\"3\">Thread-safety</a></h2>\n       an application for high-speed using this implementation of the STL.\n       Here is one possible example displaying the forcing of the malloc-based\n       allocator over the typically higher-speed default allocator:\n-      <PRE>\n+      <pre>\n       std::list &lt;void*, std::malloc_alloc&gt;  my_malloc_based_list;\n-      </PRE>\n+      </pre>\n    </p>\n    <p>A recent journal article has described &quot;atomic integer\n       operations,&quot; which would allow us to, well, perform updates\n@@ -177,10 +177,10 @@ <h2><a name=\"4\"><code>&lt;foo&gt;</code> vs <code>&lt;foo.h&gt;</code></a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "3d480926254c9847215a05ff230d7efc09290d5f", "filename": "libstdc++-v3/docs/html/17_intro/license.html", "status": "modified", "additions": 17, "deletions": 24, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Flicense.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Flicense.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Flicense.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,26 +1,27 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, license, licence\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"Copying restrictions for libstdc++.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, license, licence\">\n+   <meta name=\"DESCRIPTION\" content=\"Copying restrictions for libstdc++.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 copying</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Licenses for the Library</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Licenses for the Library</a></h1>\n \n <p><strong>As long as this sentence is in place, this page isn't\n official.  It is still experimental if you are reading this.</strong></p>\n \n <p>There are two licenses affecting GNU libstdc++-v3:  one for the code, and\n    one for the documentation.  Here we will describe both of them, and try\n-   to answer some of the common questions.  If you have more questions, ask the\n-   FSF or the gcc-help mailing list; the person writing this page is a\n-   programmer, not a lawyer.\n+   to answer some of the widespread questions.  If you have more questions,\n+   ask the FSF or the\n+   <a href=\"http://gcc.gnu.org/lists.html\">gcc mailing list</a>; the person\n+   writing this page is a programmer, not a lawyer.\n </p>\n \n <hr>\n@@ -44,8 +45,7 @@ <h2>The Code:  Runtime GPL</h2>\n </p>\n \n <p>Hopefully that text is self-explanatory.  If it isn't, you need to speak\n-   to your lawyer, or the Free Software Foundation.  I am not a legal expert.\n-   I do not even play one on television.\n+   to your lawyer, or the Free Software Foundation.\n </p>\n \n <!-- Most of the Q&A's are based on, paraphrased from, and outright stolen\n@@ -75,15 +75,6 @@ <h2>The Code:  Runtime GPL</h2>\n      but we won't punish you or sue you if you choose otherwise.\n </p>\n \n-<!-- Someone would probably shoot me if I uncommented this.\n-<p><strong>Q:  I heard that the startup code for libstdc++-v3 detects\n-   what license the program uses, and makes my program crash if it isn't\n-   an open source license!  Is that true?</strong>\n- <br>A:  You are paranoid and insane.  Please calm down and try switching\n-     to decaf.\n-</p>\n--->\n-\n <hr>\n \n <h2>The Docs:  FDL</h2>\n@@ -105,9 +96,11 @@ <h2>The Docs:  FDL</h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n-Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<p class=\"fineprint\"><em>\n+Comments and suggestions about this page are welcome, and may be sent to\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n+Comments or questions about the licenses themselves are also welcome, and\n+should be directed to the GCC list as descibed above.\n </em></p>\n \n "}, {"sha": "d43f0c6698e557117687d5d14907818feb1b0ec9", "filename": "libstdc++-v3/docs/html/18_support/howto.html", "status": "modified", "additions": 24, "deletions": 25, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 18.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 18.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 18</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 18:  Library Support</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 18:  Library Support</a></h1>\n \n <p>Chapter 18 deals with the functions called and objects created\n    automatically during the course of a program's existence.\n@@ -59,7 +59,7 @@ <h2><a name=\"1\">Types</a></h2>\n       not overload on pointer-vs-integer types to begin with.  He also\n       offers a way to make your own magic NULL that will match pointers\n       before it matches integers:\n-      <PRE>\n+      <pre>\n    const                             // this is a const object...\n    class {\n    public:\n@@ -76,7 +76,7 @@ <h2><a name=\"1\">Types</a></h2>\n                                      // taken (see Item 27)...\n \n    } NULL;                           // and whose name is NULL\n-      </PRE>(Cribbed from the published version of\n+      </pre>(Cribbed from the published version of\n       <a href=\"http://www.awlonline.com/cseng/meyerscddemo/\">the\n       Effective C++ CD</a>, reproduced here with permission.)\n    </p>\n@@ -87,7 +87,8 @@ <h2><a name=\"1\">Types</a></h2>\n       <code>foo(0);</code> instead of <code>foo(NULL);</code>, then you're back\n       where you started.\n    </p>\n-   <p><B>Added Note:</B>  When we contacted Dr. Meyers to ask permission to\n+   <p><strong>Added Note:</strong>  When we contacted Dr. Meyers to ask\n+      permission to\n       print this stuff, it prompted him to run this code through current\n       compilers to see what the state of the art is with respect to member\n       template functions.  He posted\n@@ -106,12 +107,12 @@ <h2><a name=\"1\">Types</a></h2>\n <hr>\n <h2><a name=\"2\">Implementation properties</a></h2>\n    <p>\n-   <h3><CODE>&lt;limits&gt;</CODE></h3>\n+   <h3><code>&lt;limits&gt;</code></h3>\n    This header mainly defines traits classes to give access to various\n    implementation defined-aspects of the fundamental types.  The\n    traits classes -- fourteen in total -- are all specilizations of the \n-   template class <CODE>numeric_limits</CODE> defined as follows:\n-   <PRE>\n+   template class <code>numeric_limits</code> defined as follows:\n+   <pre>\n    template&lt;typename T&gt; struct class {\n       static const bool is_specialized;\n       static T max() throw();\n@@ -147,7 +148,7 @@ <h3><CODE>&lt;limits&gt;</CODE></h3>\n       static const bool traps;\n       static const bool tinyness_before;\n       static const float_round_style round_style;\n-   };</PRE>\n+   };</pre>\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n@@ -171,15 +172,15 @@ <h2><a name=\"3\">Start and Termination</a></h2>\n             (This isn't actually new.)\n         <li>The previous two actions are &quot;interleaved,&quot; that is,\n             given this pseudocode:\n-            <PRE>\n+            <pre>\n               extern \"C or C++\" void  f1 (void);\n               extern \"C or C++\" void  f2 (void);\n \n               static Thing obj1;\n               atexit(f1);\n               static Thing obj2;\n               atexit(f2);\n-            </PRE>then at a call of <code>exit()</code>, f2 will be called, then\n+            </pre>then at a call of <code>exit()</code>, f2 will be called, then\n             obj2 will be destroyed, then f1 will be called, and finally obj1\n             will be destroyed.  If f1 or f2 allow an exception to propogate\n             out of them, Bad Things happen.\n@@ -221,9 +222,9 @@ <h2><a name=\"4\">Dynamic memory management</a></h2>\n    <p>By default, if one of the &quot;throwing <code>new</code>s&quot; can't\n       allocate the memory requested, it tosses an instance of a\n       <code>bad_alloc</code> exception (or, technically, some class derived\n-      from it).  You can change this by writing your own function (called\n-      a new-handler) and then registering it with <code>set_new_handler()</code>:\n-      <PRE>\n+      from it).  You can change this by writing your own function (called a\n+      new-handler) and then registering it with <code>set_new_handler()</code>:\n+      <pre>\n    typedef void (*PFV)(void);\n \n    static char*  safety;\n@@ -242,10 +243,10 @@ <h2><a name=\"4\">Dynamic memory management</a></h2>\n    int main ()\n    {\n        safety = new char[500000];\n-       old_handler = set_new_handler (&my_new_handler);\n+       old_handler = set_new_handler (&amp;my_new_handler);\n        ...\n    }\n-      </PRE>\n+      </pre>\n    </p>\n    <p><code>bad_alloc</code> is derived from the base <code>exception</code>\n       class defined in Chapter 19.\n@@ -256,15 +257,13 @@ <h2><a name=\"4\">Dynamic memory management</a></h2>\n \n \n \n-\n-\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "20ae150e9f93cccb20f604bb5fbf34353d953d4a", "filename": "libstdc++-v3/docs/html/19_diagnostics/howto.html", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 19.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 19.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 19</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 19:  Diagnostics</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 19:  Diagnostics</a></h1>\n \n <p>Chapter 19 deals with program diagnostics, such as exceptions\n    and assertions.  You know, all the things we wish weren't even\n@@ -38,20 +38,19 @@ <h2><a name=\"1\">Adding data to exceptions</a></h2>\n       place).  It's good to remember that you can add your own data to\n       these exceptions when extending the heirarchy:\n    </p>\n-   <PRE>\n-   using std::runtime_error;\n-   struct My_Exception : public runtime_error\n+   <pre>\n+   struct My_Exception : public std::runtime_error\n    {\n      public:\n        My_Exception (const string&amp; whatarg)\n-           : runtime_error(whatarg), e(errno), id(GetDataBaseID()) { }\n+           : std::runtime_error(whatarg), e(errno), id(GetDataBaseID()) { }\n        int  errno_at_time_of_throw() const { return e; }\n        DBID id_of_thing_that_threw() const { return id; }\n      protected:\n        int    e;\n        DBID   id;     // some user-defined type\n    };\n-   </PRE>\n+   </pre>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>\n@@ -111,10 +110,10 @@ <h2><a name=\"3\">Concept checkers -- <strong>new and improved!</strong></a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "f39f2657260aad77f7b7df050d44510bbf17785e", "filename": "libstdc++-v3/docs/html/20_util/howto.html", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 20.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 20.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 20</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 20:  General Utilities</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 20:  General Utilities</a></h1>\n \n <p>Chapter 20 deals with utility classes and functions, such as\n    the oft-debated <code>auto_ptr&lt;&gt;</code>.\n@@ -47,7 +47,7 @@ <h2><a name=\"1\"><code>auto_ptr</code> is not omnipotent</a></h2>\n    </p>\n    <p>AP <em>is</em> meant to prevent nasty leaks in the presence of\n       exceptions.  That's <em>all</em>.  This code is AP-friendly:\n-      <PRE>\n+      <pre>\n     // not a recommend naming scheme, but good for web-based FAQs\n     typedef std::auto_ptr&lt;MyClass&gt;  APMC;\n \n@@ -62,20 +62,20 @@ <h2><a name=\"1\"><code>auto_ptr</code> is not omnipotent</a></h2>\n \n         function_taking_MyClass_pointer (ap.get());\n     }\n-      </PRE>When an exception gets thrown, the instance of MyClass that's\n+      </pre>When an exception gets thrown, the instance of MyClass that's\n       been created on the heap will be <code>delete</code>'d as the stack is\n       unwound past <code>func()</code>.\n    </p>\n    <p>Changing that code as follows is <em>not</em> AP-friendly:\n-      <PRE>\n+      <pre>\n         APMC  ap (new MyClass[22]);\n-      </PRE>You will get the same problems as you would without the use\n+      </pre>You will get the same problems as you would without the use\n       of AP:\n-      <PRE>\n+      <pre>\n         char*  array = new char[10];       // array new...\n         ...\n         delete array;                      // ...but single-object delete\n-      </PRE>\n+      </pre>\n    </p>\n    <p>AP cannot tell whether the pointer you've passed at creation points\n       to one or many things.  If it points to many things, you are about\n@@ -92,12 +92,12 @@ <h2><a name=\"2\"><code>auto_ptr</code> inside container classes</a></h2>\n    <p>All of the <a href=\"../23_containers/howto.html\">containers</a>\n       described in the standard library require their contained types\n       to have, among other things, a copy contructor like this:\n-      <PRE>\n+      <pre>\n     struct My_Type\n     {\n         My_Type (My_Type const&amp;);\n     };\n-      </PRE>\n+      </pre>\n       Note the const keyword; the object being copied shouldn't change.\n       The template class <code>auto_ptr</code> (called AP here) does not\n       meet this requirement.  Creating a new AP by copying an existing\n@@ -106,22 +106,22 @@ <h2><a name=\"2\"><code>auto_ptr</code> inside container classes</a></h2>\n       copy ctors of AP do not take const objects.\n    </p>\n    <p>The resulting rule is simple:  <em>Never ever use a container of\n-      auto_ptr objects.</em>  The standard says that undefined behavior\n-      is the result, but it is guaranteed to be messy.\n+      auto_ptr objects.</em>  The standard says that &quot;undefined&quot;\n+      behavior is the result, but it is guaranteed to be messy.\n    </p>\n    <p>To prevent you from doing this to yourself, the\n       <a href=\"../19_diagnostics/howto.html#3\">concept checks</a> built\n       in to this implementation will issue an error if you try to\n       compile code like this:\n-      <PRE>\n+      <pre>\n     #include &lt;vector&gt;\n     #include &lt;memory&gt;\n     \n     void f()\n     {\n         std::vector&lt; std::auto_ptr&lt;int&gt; &gt;   vec_ap_int;\n     }\n-      </PRE>\n+      </pre>\n       Should you try this with the checks enabled, you will see an error.\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n@@ -151,16 +151,16 @@ <h2><a name=\"4\">Pairs</a></h2>\n    </p>\n    <p>Construction is simple.  The default ctor initializes each member\n       with its respective default ctor.  The other simple ctor,\n-      <PRE>\n+      <pre>\n     pair (const T1&amp; x, const T2&amp; y);\n-      </PRE>does what you think it does, <code>first</code> getting <code>x</code>\n+      </pre>does what you think it does, <code>first</code> getting <code>x</code>\n       and <code>second</code> getting <code>y</code>.\n    </p>\n    <p>There is a copy constructor, but it requires that your compiler\n       handle member function templates:\n-      <PRE>\n+      <pre>\n     template &lt;class U, class V&gt; pain (const pair&lt;U,V&gt;&amp; p);\n-      </PRE>The compiler will convert as necessary from U to T1 and from\n+      </pre>The compiler will convert as necessary from U to T1 and from\n       V to T2 in order to perform the respective initializations.\n    </p>\n    <p>The comparison operators are done for you.  Equality\n@@ -173,20 +173,20 @@ <h2><a name=\"4\">Pairs</a></h2>\n    <a name=\"pairlt\">\n    <p>The less-than operator is a bit odd the first time you see it.  It\n       is defined as evaluating to:\n-      <PRE>\n+      <pre>\n     x.first  &lt;  y.first  ||\n         ( !(y.first  &lt;  x.first)  &amp;&amp;  x.second  &lt;  y.second )\n-      </PRE>\n+      </pre>\n       The other operators are not defined using the <code>rel_ops</code>\n       functions above, but their semantics are the same.\n    </p>\n    </a>\n    <p>Finally, there is a template function called <code>make_pair</code>\n       that takes two references-to-const objects and returns an\n       instance of a pair instantiated on their respective types:\n-      <PRE>\n+      <pre>\n     pair&lt;int,MyClass&gt; p = make_pair(4,myobject);\n-      </PRE>\n+      </pre>\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n@@ -198,10 +198,10 @@ <h2><a name=\"4\">Pairs</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "f3ee7a80e85c37d5f88458ded8e1953a282fa6e9", "filename": "libstdc++-v3/docs/html/21_strings/howto.html", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F21_strings%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 21.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 21.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 21</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 21:  Strings</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 21:  Strings</a></h1>\n \n <p>Chapter 21 deals with the C++ strings library (a welcome relief).\n </p>\n@@ -59,7 +59,7 @@ <h2><a name=\"1\">MFC's CString</a></h2>\n       hierarchy and the string class, and they operate with regular\n       streams seamlessly because they inherit from the iostream\n       heirarchy.  An quick example:\n-      <PRE>\n+      <pre>\n    #include &lt;iostream&gt;\n    #include &lt;string&gt;\n    #include &lt;sstream&gt;\n@@ -78,11 +78,11 @@ <h2><a name=\"1\">MFC's CString</a></h2>\n                      &lt;&lt; \" and 3*N was \" &lt;&lt; (3*the_number);\n \n        return output_stream.str();\n-   } </PRE>\n+   } </pre>\n    </p></a>\n    <p>A serious problem with CString is a design bug in its memory\n       allocation.  Specifically, quoting from that same message:\n-      <PRE>\n+      <pre>\n    CString suffers from a common programming error that results in\n    poor performance.  Consider the following code:\n    \n@@ -103,7 +103,7 @@ <h2><a name=\"1\">MFC's CString</a></h2>\n    \n    If you replace CString with string in the above function, the\n    performance is O(n).\n-      </PRE>\n+      </pre>\n    </p>\n    <p>Joe Buck also pointed out some other things to keep in mind when\n       comparing CString and the Standard string class:\n@@ -143,7 +143,7 @@ <h2><a name=\"2\">A case-insensitive string class</a></h2>\n       is identical to the standard 'string' class, but is\n       case-insensitive in the same way as the (common but nonstandard)\n       C function stricmp():&quot;\n-      <PRE>\n+      <pre>\n    ci_string s( \"AbCdE\" );\n \n    // case insensitive\n@@ -152,7 +152,7 @@ <h2><a name=\"2\">A case-insensitive string class</a></h2>\n \n    // still case-preserving, of course\n    assert( strcmp( s.c_str(), \"AbCdE\" ) == 0 );\n-   assert( strcmp( s.c_str(), \"abcde\" ) != 0 ); </PRE>\n+   assert( strcmp( s.c_str(), \"abcde\" ) != 0 ); </pre>\n    </p>\n \n    <p>The solution is surprisingly easy.  The original answer pages\n@@ -165,7 +165,8 @@ <h2><a name=\"2\">A case-insensitive string class</a></h2>\n       here</a>.\n    </p>\n    <p>See?  Told you it was easy!</p>\n-   <p><B>Added June 2000:</B>  The May issue of <U>C++ Report</U> contains\n+   <p><strong>Added June 2000:</strong>  The May issue of <u>C++ Report</u>\n+      contains\n       a fascinating article by Matt Austern (yes, <em>the</em> Matt Austern)\n       on why case-insensitive comparisons are not as easy as they seem,\n       and why creating a class is the <em>wrong</em> way to go about it in\n@@ -178,7 +179,7 @@ <h2><a name=\"2\">A case-insensitive string class</a></h2>\n       that nobody ever called me on it...)  The GotW question and answer\n       remain useful instructional tools, however.\n    </p>\n-   <p><B>Added September 2000:</B>  James Kanze provided a link to a\n+   <p><strong>Added September 2000:</strong>  James Kanze provided a link to a\n       <a href=\"http://www.unicode.org/unicode/reports/tr21/\">Unicode\n       Technical Report discussing case handling</a>, which provides some\n       very good information.\n@@ -208,20 +209,20 @@ <h2><a name=\"3\">Breaking a C++ string into tokens</a></h2>\n       comments on what kind of string it will accept).  The author uses\n       a more general (but less readable) form of it for parsing command\n       strings and the like.  If you compiled and ran this code using it:\n-      <PRE>\n+      <pre>\n    std::list&lt;string&gt;  ls;\n    stringtok (ls, \" this  \\t is\\t\\n  a test  \");\n    for (std::list&lt;string&gt;const_iterator i = ls.begin();\n         i != ls.end(); ++i)\n    {\n        std::cerr &lt;&lt; ':' &lt;&lt; (*i) &lt;&lt; \":\\n\";\n-   }</PRE>\n+   }</pre>\n       You would see this as output:\n-      <PRE>\n+      <pre>\n    :this:\n    :is:\n    :a:\n-   :test:</PRE>\n+   :test:</pre>\n       with all the whitespace removed.  The original <code>s</code> is still\n       available for use, <code>ls</code> will clean up after itself, and\n       <code>ls.size()</code> will return how many tokens there were.\n@@ -235,7 +236,7 @@ <h2><a name=\"3\">Breaking a C++ string into tokens</a></h2>\n       with reading the new function names, this version is recommended\n       as an example.\n    </p>\n-   <p><B>Added February 2001:</B>  Mark Wilden pointed out that the\n+   <p><strong>Added February 2001:</strong>  Mark Wilden pointed out that the\n       standard <code>std::getline()</code> function can be used with standard\n       <a href=\"../27_io/howto.html\">istringstreams</a> to perform\n       tokenizing as well.  Build an istringstream from the input text,\n@@ -256,7 +257,7 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n    </p>\n    <p>This code will go through some iterations (no pun).  Here's the\n       simplistic version usually seen on Usenet:\n-      <PRE>\n+      <pre>\n    #include &lt;string&gt;\n    #include &lt;algorithm&gt;\n    #include &lt;cctype&gt;      // old &lt;ctype.h&gt;\n@@ -273,9 +274,9 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n    // result in a different string\n    std::string  capital_s;\n    capital_s.reserve(s.size());\n-   std::transform (s.begin(), s.end(), capital_s.begin(), tolower); </PRE>\n-      <SPAN CLASS=\"larger\"><B>Note</B></SPAN> that these calls all involve\n-      the global C locale through the use of the C functions\n+   std::transform (s.begin(), s.end(), capital_s.begin(), tolower); </pre>\n+      <span class=\"larger\"><strong>Note</strong></span> that these calls all\n+      involve the global C locale through the use of the C functions\n       <code>toupper/tolower</code>.  This is absolutely guaranteed to work --\n       but <em>only</em> if the string contains <em>only</em> characters\n       from the basic source character set, and there are <em>only</em>\n@@ -285,11 +286,11 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n       characters (hahahahahaha), then you're done.\n    </p>\n    <p>At minimum, you can write short wrappers like\n-      <PRE>\n+      <pre>\n    char toLower (char c)\n    {\n       return tolower(static_cast&lt;unsigned char&gt;(c));\n-   }</PRE>\n+   }</pre>\n    </p>\n    <p>The correct method is to use a facet for a particular locale\n       and call its conversion functions.  These are discussed more in\n@@ -302,7 +303,7 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n       like transformations, this task is trivial with the use of string's\n       <code>find</code> family.  These examples are broken into multiple\n       statements for readability:\n-      <PRE>\n+      <pre>\n    std::string  str (\" \\t blah blah blah    \\n \");\n \n    // trim leading whitespace\n@@ -311,7 +312,7 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n \n    // trim trailing whitespace\n    notwhite = str.find_last_not_of(\" \\t\\n\"); \n-   str.erase(notwhite+1); </PRE>\n+   str.erase(notwhite+1); </pre>\n       Obviously, the calls to <code>find</code> could be inserted directly\n       into the calls to <code>erase</code>, in case your compiler does not\n       optimize named temporaries out of existance.\n@@ -322,14 +323,13 @@ <h2><a name=\"4\">Simple transformations</a></h2>\n \n \n \n-\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "0b8b9b48c3865555cc9a07d10c6173c22678779f", "filename": "libstdc++-v3/docs/html/22_locale/howto.html", "status": "modified", "additions": 31, "deletions": 30, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 22.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 22.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 22</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 22:  Localization</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 22:  Localization</a></h1>\n \n <p>Chapter 22 deals with the C++ localization facilities.\n </p>\n@@ -38,18 +38,18 @@ <h1>Contents</h1>\n \n <hr>\n <h2><a name=\"1\">class locale</a></h2>\n-   <p> Notes made during the implementation of locales can be found \n-       <a href=\"locale.html\">here</a>.\n+   <p>Notes made during the implementation of locales can be found \n+      <a href=\"locale.html\">here</a>.\n    </p>\n \n <hr>\n <h2><a name=\"2\">class codecvt</a></h2>\n-   <p> Notes made during the implementation of codecvt can be found \n-       <a href=\"codecvt.html\">here</a>.\n+   <p>Notes made during the implementation of codecvt can be found \n+      <a href=\"codecvt.html\">here</a>.\n    </p>\n \n-   <p> The following is the abstract from the implementation notes:\n-   <BLOCKQUOTE>\n+   <p>The following is the abstract from the implementation notes:\n+   <blockquote>\n    The standard class codecvt attempts to address conversions between\n    different character encoding schemes. In particular, the standard\n    attempts to detail conversions between the implementation-defined\n@@ -63,18 +63,19 @@ <h2><a name=\"2\">class codecvt</a></h2>\n    requirements are addressed, and examples of correct usage for both\n    the required specializations for wide and narrow characters and the\n    implementation-provided extended functionality are given.\n-   </BLOCKQUOTE>\n+   </blockquote>\n+   </p>\n \n <hr>\n <h2><a name=\"3\">class ctype</a></h2>\n-   <p> Notes made during the implementation of ctype can be found \n-       <a href=\"ctype.html\">here</a>.\n+   <p>Notes made during the implementation of ctype can be found \n+      <a href=\"ctype.html\">here</a>.\n    </p>\n \n <hr>\n <h2><a name=\"4\">class messages</a></h2>\n-   <p> Notes made during the implementation of messages can be found \n-       <a href=\"messages.html\">here</a>.\n+   <p>Notes made during the implementation of messages can be found \n+      <a href=\"messages.html\">here</a>.\n    </p>\n \n <hr>\n@@ -87,24 +88,24 @@ <h2><a name=\"5\">Stroustrup on Locales</a></h2>\n       description of locales and how to use them.\n    </p>\n    <p>He also writes:\n-      <BLOCKQUOTE><em>\n+      <blockquote><em>\n       Please note that I still consider this detailed description of\n-      locales beyond the needs of most C++ programmers. It is written\n+      locales beyond the needs of most C++ programmers.  It is written\n       with experienced programmers in mind and novices will do best to\n       avoid it.\n-      </em></BLOCKQUOTE>\n+      </em></blockquote>\n    </p>\n \n <hr>\n <h2><a name=\"6\">Nathan Myers on Locales</a></h2>\n-   <p> An article entitled &quot;The Standard C++ Locale&quot; was\n-       published in Dr. Dobb's Journal and can be found\n+   <p>An article entitled &quot;The Standard C++ Locale&quot; was\n+      published in Dr. Dobb's Journal and can be found\n       <a href=\"http://www.cantrip.org/locale.html\">here</a>.\n    </p>\n \n <hr>\n <h2><a name=\"7\">Correct Transformations</a></h2>\n-   <!-- Jumping directly here from chapter 21. -->\n+   <!-- Jumping directly to here from chapter 21. -->\n    <p>A very common question on newsgroups and mailing lists is, &quot;How\n       do I do &lt;foo&gt; to a character string?&quot; where &lt;foo&gt; is\n       a task such as changing all the letters to uppercase, to lowercase,\n@@ -130,15 +131,15 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       is created.  Then member functions of that locale are called to\n       perform minor tasks.  Continuing the example from Chapter 21, we wish\n       to use the following convenience functions:\n-   <PRE>\n+   <pre>\n    namespace std {\n      template &lt;class charT&gt;\n        charT\n        toupper (charT c, const locale&amp; loc) const;\n      template &lt;class charT&gt;\n        charT\n        tolower (charT c, const locale&amp; loc) const;\n-   }</PRE>\n+   }</pre>\n       This function extracts the appropriate &quot;facet&quot; from the\n       locale <em>loc</em> and calls the appropriate member function of that\n       facet, passing <em>c</em> as its argument.  The resulting character\n@@ -153,7 +154,7 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       parameter.  So we write simple wrapper structs to handle that.\n    </p>\n    <p>The next-to-final version of the code started in Chapter 21 looks like:\n-      <PRE>\n+      <pre>\n    #include &lt;iterator&gt;    // for back_inserter\n    #include &lt;locale&gt;\n    #include &lt;string&gt;\n@@ -198,7 +199,7 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       std::transform (s.begin(), s.end(), std::back_inserter(capital_s),\n                       up\n                      );\n-   }</PRE>\n+   }</pre>\n    </p>\n    <p>The final version of the code uses <code>bind2nd</code> to eliminate\n       the wrapper structs, but the resulting code is tricky.  I have not\n@@ -210,10 +211,10 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "58e88df8cd5eff66bc1831ea93442aed1f7f9ba4", "filename": "libstdc++-v3/docs/html/23_containers/howto.html", "status": "modified", "additions": 28, "deletions": 25, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 23.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 23.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 23</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 23:  Containers</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 23:  Containers</a></h1>\n \n <p>Chapter 23 deals with container classes and what they offer.\n </p>\n@@ -63,8 +63,8 @@ <h2><a name=\"1\">Making code unaware of the container/array difference</a></h2>\n       code size or execution time.\n    </p>\n    <p>The result is that if all your algorithm calls look like\n-      <PRE>\n-   std::transform(beginof(foo), endof(foo), beginof(foo), SomeFunction);</PRE>\n+      <pre>\n+   std::transform(beginof(foo), endof(foo), beginof(foo), SomeFunction);</pre>\n       then the type of foo can change from an array of ints to a vector\n       of ints to a deque of ints and back again, without ever changing any\n       client code.\n@@ -84,8 +84,8 @@ <h2><a name=\"1\">Making code unaware of the container/array difference</a></h2>\n       give the extra three lines and avoid confusion.\n    </p>\n    <p>Second, the line\n-      <PRE>\n-    inline unsigned int lengthof (T (&amp;)[sz]) { return sz; } </PRE>\n+      <pre>\n+    inline unsigned int lengthof (T (&amp;)[sz]) { return sz; } </pre>\n       looks just weird!  Hint:  unused parameters can be left nameless.\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n@@ -96,14 +96,14 @@ <h2><a name=\"1\">Making code unaware of the container/array difference</a></h2>\n <h2><a name=\"2\">Variable-sized bitmasks</a></h2>\n    <p>No, you cannot write code of the form\n       <!-- Careful, the leading spaces in PRE show up directly. -->\n-      <PRE>\n+      <pre>\n       #include &lt;bitset&gt;\n \n       void foo (size_t n)\n       {\n           std::bitset&lt;n&gt;   bits;\n           ....\n-      } </PRE>\n+      } </pre>\n       because <code>n</code> must be known at compile time.  Your compiler is\n       correct; it is not a bug.  That's the way templates work.  (Yes, it\n       <em>is</em> a feature.)\n@@ -117,7 +117,8 @@ <h2><a name=\"2\">Variable-sized bitmasks</a></h2>\n         <li>Extremely weird solutions.\n       </ul>\n    </p>\n-   <p><B>A very large N in <code>bitset&lt;N&gt;</code>.&nbsp;&nbsp;</B>  It has\n+   <p><strong>A very large N in\n+      <code>bitset&lt;N&gt;</code>.&nbsp;&nbsp;</strong>  It has\n       been pointed out a few times in newsgroups that N bits only takes up\n       (N/8) bytes on most systems, and division by a factor of eight is pretty\n       impressive when speaking of memory.  Half a megabyte given over to a\n@@ -136,7 +137,8 @@ <h2><a name=\"2\">Variable-sized bitmasks</a></h2>\n       there may be zero space overhead, but it's all allocated inside the\n       object.)\n    </p>\n-   <p><B>A container&lt;bool&gt;.&nbsp;&nbsp;</B>  The Committee made provision\n+   <p><strong>A container&lt;bool&gt;.&nbsp;&nbsp;</strong>  The Committee\n+      made provision\n       for the space savings possible with that (N/8) usage previously mentioned,\n       so that you don't have to do wasteful things like\n       <code>Container&lt;char&gt;</code> or\n@@ -148,14 +150,15 @@ <h2><a name=\"2\">Variable-sized bitmasks</a></h2>\n       normal vector anymore.  There have been recent journal articles which\n       discuss the problems (the ones by Herb Sutter in the May and\n       July/August 1999 issues of\n-      <em>C++ Report</em> cover it well).  Future revisions of the ISO C++\n+      <u>C++ Report</u> cover it well).  Future revisions of the ISO C++\n       Standard will change the requirement for <code>vector&lt;bool&gt;</code>\n       specialization.  In the meantime, <code>deque&lt;bool&gt;</code> is\n       recommended (although its behavior is sane, you probably will not get\n       the space savings, but the allocation scheme is different than that\n       of vector).\n    </p>\n-   <p><B>Extremely weird solutions.&nbsp;&nbsp;</B>  If you have access to\n+   <p><strong>Extremely weird solutions.&nbsp;&nbsp;</strong>  If you have\n+      access to\n       the compiler and linker at runtime, you can do something insane, like\n       figuring out just how many bits you need, then writing a temporary \n       source code file.  That file contains an instantiation of\n@@ -260,8 +263,8 @@ <h2><a name=\"3\">Containers and multithreading</a></h2>\n <h2><a name=\"4\">&quot;Hinting&quot; during insertion</a></h2>\n    <p>Section [23.1.2], Table 69, of the C++ standard lists this function\n       for all of the associative containers (map, set, etc):\n-      <PRE>\n-      a.insert(p,t);</PRE>\n+      <pre>\n+      a.insert(p,t);</pre>\n       where 'p' is an iterator into the container 'a', and 't' is the item\n       to insert.  The standard says that &quot;iterator p is a hint\n       pointing to where the insert should start to search,&quot; but\n@@ -349,13 +352,13 @@ <h2><a name=\"5\">Bitmasks and string arguments</a></h2>\n    </p>\n    <p>For now you can simply make a temporary string object using the\n       constructor expression:\n-      <PRE>\n+      <pre>\n       std::bitset&lt;5&gt; b ( std::string(&quot;10110&quot;) );\n-      </PRE>\n+      </pre>\n       instead of\n-      <PRE>\n+      <pre>\n       std::bitset&lt;5&gt; b ( &quot;10110&quot; );    // invalid\n-      </PRE>\n+      </pre>\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n@@ -365,10 +368,10 @@ <h2><a name=\"5\">Bitmasks and string arguments</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "fd409239c505abc8358484781d0fbb677d5ceba5", "filename": "libstdc++-v3/docs/html/24_iterators/howto.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F24_iterators%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 24.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 24.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 24</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 24:  Iterators</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 24:  Iterators</a></h1>\n \n <p>Chapter 24 deals with the FORTRAN subroutines for automatically\n    transforming lemmings into gold.\n@@ -50,7 +50,7 @@ <h2><a name=\"1\">They ain't pointers!</a></h2>\n       of overhead.  (If you think that's the case anywhere, you don't\n       understand templates to begin with...)  Oh, no; if you pass\n       in a pointer, then the compiler will instantiate that template\n-      using T* as a type and good old high-speed pointer arithmetic as\n+      using T* as a type, and good old high-speed pointer arithmetic as\n       its operations, so the resulting code will be doing exactly the same\n       things as it would be doing if you had hand-coded it yourself (for\n       the 273rd time).\n@@ -101,7 +101,7 @@ <h2><a name=\"2\">It ends <em>where?</em></a></h2>\n    <p>So, when you think of two pointers delimiting an array, don't think\n       of them as indexing 0 through n-1.  Think of them as <em>boundary\n       markers</em>:\n-      <PRE>\n+      <pre>\n \n    beginning            end\n      |                   |\n@@ -121,7 +121,7 @@ <h2><a name=\"2\">It ends <em>where?</em></a></h2>\n      |                       |           dereference 'end'.\n    beginning                end\n \n-      </PRE>\n+      </pre>\n       See?  Everything between the boundary markers is part of the array.\n       Simple.\n    </p>\n@@ -172,10 +172,10 @@ <h2><a name=\"2\">It ends <em>where?</em></a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "3c8216ac06def87402818b24f79703ddec607665", "filename": "libstdc++-v3/docs/html/25_algorithms/howto.html", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 25.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 25.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 25</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 25:  Algorithms</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 25:  Algorithms</a></h1>\n \n <p>Chapter 25 deals with the generalized subroutines for automatically\n    transforming lemmings into gold.\n@@ -49,9 +49,9 @@ <h2><a name=\"1\">Prerequisites</a></h2>\n       example, <code>string::find()</code>).  Most of the examples on this\n       page will use simple arrays of integers as a playground for\n       algorithms, just to keep things simple.\n-      <a name=\"Nsize\">The use of <B>N</B></a> as a size in the examples is\n-      to keep things easy to read but probably won't be legal code.  You can\n-      use wrappers such as those described in the\n+      <a name=\"Nsize\">The use of <strong>N</strong></a> as a size in the\n+      examples is to keep things easy to read but probably won't be valid\n+      code.  You can use wrappers such as those described in the\n       <a href=\"../23_containers/howto.html\">containers chapter</a> to keep\n       real code readable.\n    </p>\n@@ -63,8 +63,6 @@ <h2><a name=\"1\">Prerequisites</a></h2>\n       cause so much confusion.  Once you get <em>range</em> into your head\n       (it's not that hard, honest!), then the algorithms are a cakewalk.\n    </p>\n-   <p>\n-   </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>\n@@ -93,10 +91,10 @@ <h2><a name=\"2\">Special <code>swap</code>s</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "98745f26db3ea93611924e9e027fd86e1a4e0e09", "filename": "libstdc++-v3/docs/html/26_numerics/howto.html", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F26_numerics%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,25 +1,25 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 26.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 26.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 26</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 26:  Numerics</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 26:  Numerics</a></h1>\n \n <p>Chapter 26 deals with building block abstractions to aid in\n    numerical computing:\n    <ul>\n      <li>Template data structures such as <code>valarray&lt;&gt;</code>\n          and <code>complex&lt;&gt;</code>.\n-     <li>Template numerical functions such as <code>accumulate</code>;\n-         <code>inner_product</code>; <code>partial_sum</code> and\n+     <li>Template numerical functions such as <code>accumulate</code>,\n+         <code>inner_product</code>, <code>partial_sum</code>, and\n          <code>adjacent_difference</code>.\n    </ul>\n    All of the Standard C math functions are of course included in C++,\n@@ -48,7 +48,7 @@ <h2><a name=\"1\">Complex Number Processing</a></h2>\n       compiled a list of C++98 and C99 conflict points; his description of\n       C's new type versus those of C++ and how to get them playing together\n       nicely is\n-<a href=\"http://home.flash.net/~dtribble/text/cdiffs.htm#C99.complex\">here</a>.\n+<a href=\"http://david.tribble.com/text/cdiffs.htm#C99-complex\">here</a>.\n    </p>\n    <p><code>complex&lt;&gt;</code> is intended to be instantiated with a\n       floating-point type.  As long as you meet that and some other basic\n@@ -66,9 +66,9 @@ <h2><a name=\"1\">Complex Number Processing</a></h2>\n <h2><a name=\"2\">Array Processing</a></h2>\n    <p>One of the major reasons why FORTRAN can chew through numbers so well\n       is that it is defined to be free of pointer aliasing, an assumption\n-      that C89 is not allowed to make, and neither is C++.  C99 adds a new\n-      keyword, <code>restrict</code>, to apply to individual pointers.  The C++\n-      solution is contained in the library rather than the language\n+      that C89 is not allowed to make, and neither is C++98.  C99 adds a new\n+      keyword, <code>restrict</code>, to apply to individual pointers.  The\n+      C++ solution is contained in the library rather than the language\n       (although many vendors can be expected to add this to their compilers\n       as an extension).\n    </p>\n@@ -102,7 +102,7 @@ <h2><a name=\"3\">Numerical Functions</a></h2>\n       </ul>\n    </p>\n    <p>Here is a simple example of the two forms of <code>accumulate</code>.\n-      <PRE>\n+      <pre>\n    int   ar[50];\n    int   someval = somefunction();\n \n@@ -111,7 +111,7 @@ <h2><a name=\"3\">Numerical Functions</a></h2>\n    int  sum       = std::accumulate(ar,ar+50,0);\n    int  sum_stuff = std::accumulate(ar,ar+50,someval);\n    int  product   = std::accumulate(ar,ar+50,1,std::multiplies&lt;int&gt;());\n-      </PRE>\n+      </pre>\n       The first call adds all the members of the array, using zero as an\n       initial value for <code>sum</code>.  The second does the same, but uses\n       <code>someval</code> as the starting value (thus, <code>sum_stuff == sum +\n@@ -136,7 +136,8 @@ <h2><a name=\"4\">C99</a></h2>\n       neccessary support for C99 (e.g., header files) cannot be found.\n    </p>\n    <p>As of GCC 3.0, C99 support includes classification functions\n-      such as <code>isnormal</code>, <code>isgreater</code>, <code>isnan</code>, etc.\n+      such as <code>isnormal</code>, <code>isgreater</code>,\n+      <code>isnan</code>, etc.\n       The functions used for 'long long' support such as <code>strtoll</code>\n       are supported, as is the <code>lldiv_t</code> typedef.  Also supported\n       are the wide character functions using 'long long', like\n@@ -151,10 +152,10 @@ <h2><a name=\"4\">C99</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "ec516d12db79b3573ae343a6c6a30c2dcd23a689", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 35, "deletions": 34, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,17 +1,17 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"HOWTO for the libstdc++ chapter 27.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"HOWTO for the libstdc++ chapter 27.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Chapter 27</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Chapter 27:  Input/Output</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Chapter 27:  Input/Output</a></h1>\n \n <p>Chapter 27 deals with iostreams and all their subcomponents\n    and extensions.  All <em>kinds</em> of fun stuff.\n@@ -39,21 +39,21 @@ <h2><a name=\"1\">Copying a file</a></h2>\n    <p>So you want to copy a file quickly and easily, and most important,\n       completely portably.  And since this is C++, you have an open\n       ifstream (call it IN) and an open ofstream (call it OUT):\n-      <PRE>\n+      <pre>\n    #include &lt;fstream&gt;\n \n    std::ifstream  IN (\"input_file\");\n-   std::ofstream  OUT (\"output_file\"); </PRE>\n+   std::ofstream  OUT (\"output_file\"); </pre>\n    </p>\n    <p>Here's the easiest way to get it completely wrong:\n-      <PRE>\n-   OUT &lt;&lt; IN;</PRE>\n+      <pre>\n+   OUT &lt;&lt; IN;</pre>\n       For those of you who don't already know why this doesn't work\n       (probably from having done it before), I invite you to quickly\n       create a simple text file called &quot;input_file&quot; containing\n       the sentence\n-      <PRE>\n-   The quick brown fox jumped over the lazy dog.</PRE>\n+      <pre>\n+   The quick brown fox jumped over the lazy dog.</pre>\n       surrounded by blank lines.  Code it up and try it.  The contents\n       of &quot;output_file&quot; may surprise you.\n    </p>\n@@ -75,8 +75,8 @@ <h2><a name=\"1\">Copying a file</a></h2>\n       as well as the streams themselves.  The pointer is easily retrieved\n       using the <code>rdbuf()</code> member function.  Therefore, the easiest\n       way to copy the file is:\n-      <PRE>\n-   OUT &lt;&lt; IN.rdbuf();</PRE>\n+      <pre>\n+   OUT &lt;&lt; IN.rdbuf();</pre>\n    </p>\n    <p>So what <em>was</em> happening with OUT&lt;&lt;IN?  Undefined\n       behavior, since that particular &lt;&lt; isn't defined by the Standard.\n@@ -121,35 +121,35 @@ <h2><a name=\"2\">The buffering is screwing up my program!</a></h2>\n       is the effect you want when writing to a screen -- get the text\n       out as soon as possible, etc -- but the buffering is largely\n       wasted when doing this to a file:\n-      <PRE>\n+      <pre>\n    output &lt;&lt; &quot;a line of text&quot; &lt;&lt; endl;\n    output &lt;&lt; some_data_variable &lt;&lt; endl;\n-   output &lt;&lt; &quot;another line of text&quot; &lt;&lt; endl; </PRE>\n+   output &lt;&lt; &quot;another line of text&quot; &lt;&lt; endl; </pre>\n       The proper thing to do in this case to just write the data out\n       and let the libraries and the system worry about the buffering.\n       If you need a newline, just write a newline:\n-      <PRE>\n+      <pre>\n    output &lt;&lt; &quot;a line of text\\n&quot;\n           &lt;&lt; some_data_variable &lt;&lt; '\\n'\n-          &lt;&lt; &quot;another line of text\\n&quot;; </PRE>\n+          &lt;&lt; &quot;another line of text\\n&quot;; </pre>\n       I have also joined the output statements into a single statement.\n       You could make the code prettier by moving the single newline to\n       the start of the quoted text on the thing line, for example.\n    </p>\n    <p>If you do need to flush the buffer above, you can send an\n       <code>endl</code> if you also need a newline, or just flush the buffer\n       yourself:\n-      <PRE>\n+      <pre>\n    output &lt;&lt; ...... &lt;&lt; flush;    // can use std::flush manipulator\n-   output.flush();               // or call a member fn </PRE>\n+   output.flush();               // or call a member fn </pre>\n    </p>\n    <p>On the other hand, there are times when writing to a file should\n       be like writing to standard error; no buffering should be done \n       because the data needs to appear quickly (a prime example is a\n       log file for security-related information).  The way to do this is\n       just to turn off the buffering <em>before any I/O operations at\n       all</em> have been done, i.e., as soon as possible after opening:\n-      <PRE>\n+      <pre>\n    std::ofstream    os (&quot;/foo/bar/baz&quot;);\n    std::ifstream    is (&quot;/qux/quux/quuux&quot;);\n    int   i;\n@@ -158,7 +158,7 @@ <h2><a name=\"2\">The buffering is screwing up my program!</a></h2>\n    is.rdbuf()-&gt;pubsetbuf(0,0);\n    ...\n    os &lt;&lt; &quot;this data is written immediately\\n&quot;;\n-   is &gt;&gt; i;   // and this will probably cause a disk read </PRE>\n+   is &gt;&gt; i;   // and this will probably cause a disk read </pre>\n    </p>\n    <p>Since all aspects of buffering are handled by a streambuf-derived\n       member, it is necessary to get at that member with <code>rdbuf()</code>.\n@@ -334,7 +334,7 @@ <h2><a name=\"6\">Deriving a stream buffer</a></h2>\n       transforms everything sent through it to uppercase.  This version\n       assumes many things about the nature of the character type being\n       used (for more information, read the books or the newsgroups):\n-      <PRE>\n+      <pre>\n     #include &lt;iostream&gt;\n     #include &lt;streambuf&gt;\n     #include &lt;locale&gt;\n@@ -365,13 +365,13 @@ <h2><a name=\"6\">Deriving a stream buffer</a></h2>\n \t// create special output buffer\n \toutbuf ob;\n \t// initialize output stream with that output buffer\n-\tstd::ostream out(&ob);\n+\tstd::ostream out(&amp;ob);\n \n \tout &lt;&lt; \"31 hexadecimal: \"\n \t    &lt;&lt; std::hex &lt;&lt; 31 &lt;&lt; std::endl;\n \treturn 0;\n     }\n-   </PRE>\n+   </pre>\n       Try it yourself!\n    </p>\n \n@@ -407,14 +407,14 @@ <h2><a name=\"8\">Pathetic performance?  Ditch C.</a></h2>\n    </p>\n    <p>Because the C++ library includes the C library, both C-style and\n       C++-style I/O have to work at the same time.  For example:\n-      <PRE>\n+      <pre>\n      #include &lt;iostream&gt;\n      #include &lt;cstdio&gt;\n \n      std::cout &lt;&lt; &quot;Hel&quot;;\n      std::printf (&quot;lo, worl&quot;);\n      std::cout &lt;&lt; &quot;d!\\n&quot;;\n-      </PRE>\n+      </pre>\n       This must do what you think it does.\n    </p>\n    <p>Alert members of the audience will immediately notice that buffering\n@@ -434,32 +434,33 @@ <h2><a name=\"8\">Pathetic performance?  Ditch C.</a></h2>\n       when both libraries' facilities are in use.  If your program only uses\n       C++ I/O, then there's no need to sync with the C streams.  The right\n       thing to do in this case is to call\n-      <PRE>\n+      <pre>\n      #include <em>any of the I/O headers such as ios, iostream, etc</em>\n \n      std::ios::sync_with_stdio(false);\n-      </PRE>\n+      </pre>\n    </p>\n    <p>You must do this before performing any I/O via the C++ stream objects.\n       Once you call this, the C++ streams will operate independantly of the\n       (unused) C streams.  For GCC 3.0, this means that <code>cout</code> and\n       company will become fully buffered on their own.\n    </p>\n    <p>Note, by the way, that the synchronization requirement only applies to\n-      the standard streams (<code>cin</code>, <code>cout</code>, <code>cerr</code>,\n+      the standard streams (<code>cin</code>, <code>cout</code>,\n+      <code>cerr</code>,\n       <code>clog</code>, and their wide-character counterparts).  File stream\n-      objects that you create yourself have no such requirement and are fully\n+      objects that you declare yourself have no such requirement and are fully\n       buffered.\n    </p>\n \n \n <!-- ####################################################### -->\n \n <hr><br><br><br><br><br><br><br><br>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "48222427366f7d91c37ed4c8f0bb4fdd3256c72f", "filename": "libstdc++-v3/docs/html/configopts.html", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,16 +1,16 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, libstdc++-v3, GCC, g++\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"Configuration options for libstdc++-v3.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++\">\n+   <meta name=\"DESCRIPTION\" content=\"Configuration options for libstdc++-v3.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 configure options</title>\n-<link REL=StyleSheet HREF=\"lib3styles.css\">\n+<link rel=StyleSheet href=\"lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n+<h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n options</a></h1>\n \n <p>The latest version of this document is always available at\n@@ -89,7 +89,7 @@ <h1 CLASS=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n         (IEEE Std. 1003.1-200x) model based on langinfo/iconv/catgets,\n         'gnu' to specify a model based on functionality from the GNU C\n         library (langinfo/iconv/gettext) (from <A\n-        HREF=\"http://sources.redhat.com/glibc/\">glibc</a>, the GNU C\n+        href=\"http://sources.redhat.com/glibc/\">glibc</a>, the GNU C\n         library), or 'generic' to use a generic &quot;C&quot;\n         abstraction which consists of &quot;C&quot; locale info.  The\n         default is 'generic'.\n@@ -167,16 +167,16 @@ <h1 CLASS=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n         the following puts all the libstdc++ headers into a directory\n         called &quot;2.97-20001008&quot; instead of the usual\n         &quot;g++-v3&quot;.\n-        <PRE>\n-   --with-gxx-include-dir=/foo/H-x86-gcc-3-c-gxx-inc/include/2.97-20001008</PRE>\n+        <pre>\n+   --with-gxx-include-dir=/foo/H-x86-gcc-3-c-gxx-inc/include/2.97-20001008</pre>\n      </p>\n \n  <dt><code>--enable-cxx-flags=FLAGS</code>\n  <dd><p>With this option, you can pass a string of -f (functionality)\n         flags to the compiler to use when building libstdc++.  FLAGS\n         is a quoted string of options, like\n-        <PRE>\n-  --enable-cxx-flags='-fvtable-gc -fomit-frame-pointer -ansi'</PRE>\n+        <pre>\n+  --enable-cxx-flags='-fvtable-gc -fomit-frame-pointer -ansi'</pre>\n         Note that the flags don't necessarily have to all be -f flags,\n         as shown, but usually those are the ones that will make sense\n         for experimentation and configure-time overriding.\n@@ -187,13 +187,13 @@ <h1 CLASS=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n         as well, so that everything matches.\n      </p>\n      <p>Fun flags to try might include combinations of\n-        <PRE>\n+        <pre>\n   -fstrict-aliasing\n   -fno-exceptions\n   -ffunction-sections\n-  -fvtable-gc</PRE>\n-        and opposite forms (-fno-) of the same.  Tell us (the mailing\n-        list) if you discover more!\n+  -fvtable-gc</pre>\n+        and opposite forms (-fno-) of the same.  Tell us (the libstdc++\n+        mailing list) if you discover more!\n      </p>\n \n  <dt><code>--enable-c-mbchar  </code>[default]\n@@ -207,17 +207,17 @@ <h1 CLASS=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n </dl>\n </p>\n <p>Return <a href=\"#top\">to the top of the page</a> or\n-   <a href=\"http://gcc.gnu.org/libstdc++/\">to the homepage</a>.\n+   <a href=\"http://gcc.gnu.org/libstdc++/\">to the libstdc++ homepage</a>.\n </p>\n \n \n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "e7cc3b06f04b5009ab8eacf4b870a2bbd5ab8325", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,8 +1,8 @@\n <html>\n <head>\n- <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, homepage, home, g++, libg++, STL\">\n+ <meta name=\"KEYWORDS\" content=\"libstdc++, homepage, home, g++, libg++, STL\">\n  <title>Standard C++ Library v3</title>\n-<link REL=StyleSheet HREF=\"lib3styles.css\">\n+<link rel=StyleSheet href=\"lib3styles.css\">\n </head>\n <body>\n \n@@ -96,13 +96,13 @@ <h2><a name=\"3\">Chapter-Specific Information, Extensions, Notes and Advice</a></\n \n <!-- ####################################################### -->\n \n-<p>Return <a href=\"http://gcc.gnu.org/libstdc++/\">to the homepage</a>.</p>\n+<p>Return <a href=\"http://gcc.gnu.org/libstdc++/\">to the libstdc++ homepage</a>.</p>\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n </body>"}, {"sha": "d7bf585eae8cdbb2ac690f74865fc0f7f8a8e95b", "filename": "libstdc++-v3/docs/html/explanations.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fexplanations.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fexplanations.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fexplanations.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,16 +1,16 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, libstdc++-v3, GCC, g++\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"Explanatory notes about libstdc++-v3.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++\">\n+   <meta name=\"DESCRIPTION\" content=\"Explanatory notes about libstdc++-v3.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>Explanatory notes about libstdc++-v3 design</title>\n-<link REL=StyleSheet HREF=\"lib3styles.css\">\n+<link rel=StyleSheet href=\"lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Explanatory notes about libstdc++-v3\n+<h1 class=\"centered\"><a name=\"top\">Explanatory notes about libstdc++-v3\n design</a></h1>\n \n <p>The latest version of this document is always available at\n@@ -64,10 +64,10 @@ <h1 CLASS=\"centered\"><a name=\"top\">Explanatory notes about libstdc++-v3\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "10e5c261f300ef460e9be820b8f82d659195c7e8", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,23 +1,23 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"Notes for the libstdc++ extensions.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"HOWTO, libstdc++, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"Notes for the libstdc++ extensions.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 HOWTO:  Extensions</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">Extensions</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">Extensions</a></h1>\n \n <p>Here we will make an attempt at describing the non-Standard extensions to\n    the library.  Some of these are from SGI's STL, some of these are GNU's,\n    and some just seemed to appear on the doorstep.\n </p>\n-<p><B>Before you leap in and use these</B>, be aware of two things:\n+<p><strong>Before you leap in and use these</strong>, be aware of two things:\n    <ol>\n     <li>Non-Standard means exactly that.  The behavior, and the very\n         existence, of these extensions may change with little or no\n@@ -48,14 +48,14 @@ <h1>Contents</h1>\n \n <h2><a name=\"1\">Ropes and trees and hashes, oh my!</a></h2>\n    <p>The SGI headers\n-     <PRE>\n+     <pre>\n      &lt;bvector&gt;\n      &lt;hash_map&gt;\n      &lt;hash_set&gt;\n      &lt;rope&gt;\n      &lt;slist&gt;\n      &lt;tree&gt;\n-     </PRE> are all here; <code>&lt;bvector&gt;</code> exposes the old bit_vector\n+     </pre> are all here; <code>&lt;bvector&gt;</code> exposes the old bit_vector\n       class that was used before specialization of vector&lt;bool&gt; was\n       available (it's actually a typedef for the specialization now).\n       <code>&lt;hash_map&gt;</code> and <code>&lt;hash_set&gt;</code>\n@@ -87,17 +87,17 @@ <h2><a name=\"1\">Ropes and trees and hashes, oh my!</a></h2>\n    </p>\n    <p>Why would you want to use a hashing class instead of the\n       &quot;normal&quot; implementations?  Matt Austern writes:\n-      <BLOCKQUOTE><em>[W]ith a well chosen hash function, hash tables\n+      <blockquote><em>[W]ith a well chosen hash function, hash tables\n       generally provide much better average-case performance than binary\n       search trees, and much worse worst-case performance.  So if your\n       implementation has hash_map, if you don't mind using nonstandard\n       components, and if you aren't scared about the possibility of\n       pathological cases, you'll probably get better performance from\n-      hash_map.</em></BLOCKQUOTE>\n+      hash_map.</em></blockquote>\n    </p>\n-   <p>(Side note:  for those of you wondering, <B>&quot;Why wasn't a hash\n-      table included in the Standard in the first #!$@ place?&quot;</B> I'll\n-      give a quick answer:  it was proposed, but too late and in too\n+   <p>(Side note:  for those of you wondering, <strong>&quot;Why wasn't a hash\n+      table included in the Standard in the first #!$@ place?&quot;</strong>\n+      I'll give a quick answer:  it was proposed, but too late and in too\n       unorganized a fashion.  Some sort of hashing will undoubtedly be\n       included in a future Standard.\n    </p>\n@@ -309,10 +309,10 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "bc54b358ae1dff1ff59b0521a74eb9d6078b7ab7", "filename": "libstdc++-v3/docs/html/ext/sgiexts.html", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fsgiexts.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,16 +1,16 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, libstdc++-v3, GCC, g++, STL, SGI\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"SGI extensions preserved in libstdc++-v3.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++, STL, SGI\">\n+   <meta name=\"DESCRIPTION\" content=\"SGI extensions preserved in libstdc++-v3.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>SGI extensions to the library in libstdc++-v3</title>\n-<link REL=StyleSheet HREF=\"lib3styles.css\">\n+<link rel=StyleSheet href=\"lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">SGI extensions to the library in\n+<h1 class=\"centered\"><a name=\"top\">SGI extensions to the library in\n libstdc++-v3</a></h1>\n \n <p>This page describes the extensions that SGI made to their version of the\n@@ -25,7 +25,7 @@ <h1 CLASS=\"centered\"><a name=\"top\">SGI extensions to the library in\n    for a description).  Not every chapter may have extensions, and the\n    extensions may come and go.  Also, this page is incomplete because the\n    author is pressed for time.  Check back often; the latest change was on\n-   $Date: 2001/09/27 00:48:00 $ (UTC).\n+   $Date: 2001/10/04 20:03:22 $ (UTC).\n </p>\n \n <p>Descriptions range from the scanty to the verbose.  You should also check\n@@ -223,10 +223,10 @@ <h1 CLASS=\"centered\"><a name=\"top\">SGI extensions to the library in\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "b06685a77c167b16c1d0c0187c68be96825892e6", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 39, "deletions": 44, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,18 +1,18 @@\n <html>\n <head>\n-   <meta HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, libstdc++-v3, GCC, g++, libg++, STL\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"FAQ for the GNU libstdc++ effort.\">\n+   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++, libg++, STL\">\n+   <meta name=\"DESCRIPTION\" content=\"FAQ for the GNU libstdc++ effort.\">\n    <title>libstdc++-v3 FAQ</title>\n-<link REL=StyleSheet HREF=\"../lib3styles.css\">\n+<link rel=StyleSheet href=\"../lib3styles.css\">\n <!-- \n   ** Locations of \"the most recent snapshot is the Nth\" text are \n   ** answers 1_1, 1_4, 4_1, 5_6.\n -->\n </head>\n <body>\n \n-<h1 CLASS=\"centered\">libstdc++ Frequently Asked Questions</h1>\n+<h1 class=\"centered\">libstdc++ Frequently Asked Questions</h1>\n \n <p>The latest version of this document is always available at\n <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/faq/\">\n@@ -100,8 +100,8 @@ <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n          ongoing project to implement the ISO 14882 Standard C++ library \n          as described in chapters 17 through 27 and annex D.  As the \n          library reaches stable plateaus, it is captured in a snapshot\n-         and released.  The current release is <A\n-HREF=\"ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.92.tar.gz\">the\n+         and released.  The current release is\n+         <a href=\"http://gcc.gnu.org/libstdc++/download.html\">the\n          eleventh snapshot</a>.  For those who want to see exactly how\n          far the project has come, or just want the latest\n          bleeding-edge code, the up-to-date source is available over\n@@ -126,8 +126,7 @@ <h2><a name=\"1_2\">1.2 Why should I use libstdc++?</a></h2>\n          has recently been taken over by the \n          <a href=\"http://gcc.gnu.org/\">GCC team</a>.  All of\n          the rapid development and near-legendary\n-     <A\n-HREF=\"http://gcc.gnu.org/gcc-2.95/buildstat.html\">portability</a>\n+         <a href=\"http://gcc.gnu.org/gcc-2.95/buildstat.html\">portability</a>\n          that are the hallmarks of an open-source project are being\n          applied to libstdc++.\n       </p>\n@@ -154,31 +153,29 @@ <h2><a name=\"1_3\">1.3 Who's in charge of it?</a></h2>\n \n <hr>\n    <h2><a name=\"1_4\">1.4 How do I get libstdc++?</a></h2>\n-      <p>The eleventh (and latest) snapshot of libstdc++-v3 is <A\n-HREF=\"ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.92.tar.gz\">\n-         available via ftp</a>.\n+      <p>The eleventh (and latest) snapshot of libstdc++-v3 is\n+         <a href=\"http://gcc.gnu.org/libstdc++/download.html\">available via\n+         ftp</a>.  The filename is libstdc++-2.92.tar.gz.\n       </p>\n       <p>The <a href=\"http://gcc.gnu.org/libstdc++/\">homepage</a>\n          has instructions for retrieving the latest CVS sources, and for\n          browsing the CVS sources over the web.\n       </p>\n       <p>The subset commonly known as the Standard Template Library\n-         (chapters 23 through 25, mostly) is adapted from the SGI STL,\n-         which is also an ongoing work.<!-- Possibly a link to SGI's\n-         STL here. -->\n+         (chapters 23 through 25, mostly) is adapted from the final release\n+         of the SGI STL.\n       </p> \n \n <hr>\n    <h2><a name=\"1_5\">1.5 When is libstdc++ going to be finished?</a></h2>\n <!--      <p>Nathan Myers gave the best of all possible answers in <A \n-         HREF=\"http://www.deja.com/getdoc.xp?AN=469581698&fmt=text\">a \n+         href=\"http://www.deja.com/getdoc.xp?AN=469581698&fmt=text\">a \n          Usenet article</a>.</p>\n which is no longer available, thanks deja...-->\n       <p>Nathan Myers gave the best of all possible answers, responding to a\n          Usenet article asking this question:  <em>Sooner, if you help.</em>\n       </p>\n \n-\n <hr>\n    <h2><a name=\"1_6\">1.6 How do I contribute to the effort?</a></h2>\n       <p>Here is <a href=\"../17_intro/contribute.html\">a\n@@ -238,7 +235,7 @@ <h2><a name=\"1_8\">1.8 What if I have more questions?</a></h2>\n          send a message to it.  More information is available on the\n          homepage (including how to browse the list archives); to send\n          to the list, use <a href=\"mailto:libstdc++@gcc.gnu.org\">\n-         <CODE>libstdc++@gcc.gnu.org</CODE></a>.\n+         <code>libstdc++@gcc.gnu.org</code></a>.\n       </p>\n       <p>If you have a question that you think should be included here,\n          or if you have a question <em>about</em> a question/answer here,\n@@ -293,7 +290,7 @@ <h2><a name=\"2_3\">2.3 What is this CVS thing that you\n       <p>The <em>Concurrent Versions System</em> is one of several revision\n          control packages.  It was selected for GNU projects because it's\n          free (speech), free (beer), and very high quality.  The <A\n-         HREF=\"http://www.gnu.org/software/cvs/cvs.html\">CVS entry in\n+         href=\"http://www.gnu.org/software/cvs/cvs.html\">CVS entry in\n          the GNU software catalogue</a> has a better description as \n          well as a\n          <a href=\"http://www.cvshome.org/\">link to the makers of CVS</a>. \n@@ -318,9 +315,9 @@ <h2><a name=\"2_4\">2.4 How do I know if it works?</a></h2>\n          the testsuite on the library after building and installing it,\n          use &quot;make check-install&quot; instead.\n       </p>\n-      <p>If you find bugs in the testsuite programs themselves, or if\n-         you think of a new test program that should be added to the\n-         suite, <B>please</B> write up your idea and send it to the list!\n+      <p>If you find bugs in the testsuite programs themselves, or if you\n+         think of a new test program that should be added to the suite,\n+         <strong>please</strong> write up your idea and send it to the list!\n       </p>\n \n <hr>\n@@ -366,7 +363,6 @@ <h2><a name=\"3_3\">3.3 Building DEC OSF kills the assembler</a></h2>\n          these two pseudos would win praise and accolades from many.\n       </p>\n \n-\n <hr>\n <h1><a name=\"4_0\">4.0 Known Bugs and Non-Bugs</a></h1>\n    <em>Note that this section can get rapdily outdated -- such is the\n@@ -442,13 +438,13 @@ <h2><a name=\"4_2\">4.2 Bugs in gcc/g++ (not libstdc++-v3)</a></h2>\n \n <hr>\n    <h2><a name=\"4_3\">4.3 Bugs in the C++ language/lib specification</a></h2>\n-      <p>Yes, unfortunately, there are some.  In a <A \n-HREF=\"http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\">message\n-to the list</a>, Nathan Myers announced that he has started a list of\n+      <p>Yes, unfortunately, there are some.  In a\n+         <a href=\"http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\">message\n+         to the list</a>, Nathan Myers announced that he has started a list of\n          problems in the ISO C++ Standard itself, especially with\n          regard to the chapters that concern the library.  The list\n-         itself is <A\n-         HREF=\"http://www.cantrip.org/draft-bugs.txt\">posted on his\n+         itself is\n+         <a href=\"http://www.cantrip.org/draft-bugs.txt\">posted on his\n          website</a>.  Developers who are having problems interpreting\n          the Standard may wish to consult his notes.\n       </p>\n@@ -528,7 +524,7 @@ <h2><a name=\"4_4\">4.4 Things in libstdc++ that look like bugs</a></h2>\n            mailing list.\n         </p>\n         <p>Currently our header files are installed in\n-           <CODE>${prefix}/include/g++-v3</CODE> (see the 'v'?).  This may\n+           <code>${prefix}/include/g++-v3</code> (see the 'v'?).  This may\n            change with the next release of GCC, as it may be too confusing,\n            but <a href=\"http://gcc.gnu.org/ml/gcc/2000-10/msg00732.html\">the\n            question has not yet been decided</a>.\n@@ -539,14 +535,14 @@ <h2><a name=\"4_4\">4.4 Things in libstdc++ that look like bugs</a></h2>\n            If you're on a GNU/Linux system and have just upgraded to\n            glibc 2.2, but are still using gcc 2.95.2, then you should have\n            read the glibc FAQ, specifically 2.34:\n-   <PRE>\n+   <pre>\n 2.34.   When compiling C++ programs, I get a compilation error in streambuf.h.\n \n {BH} You are using g++ 2.95.2? After upgrading to glibc 2.2, you need to\n apply a patch to the include files in /usr/include/g++, because the fpos_t\n type has changed in glibc 2.2.  The patch is at\n http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n-   </PRE>\n+   </pre>\n            Note that 2.95.x shipped with the\n            <a href=\"#4_4_interface\">old v2 library</a> which is no longer\n            maintained.  Also note that gcc 2.95.3 fixes this problem, but\n@@ -645,11 +641,10 @@ <h2><a name=\"5_2\">5.2 What's next after libstdc++-v3?</a></h2>\n          instance) will of course be a continuing task.\n       </p>\n       </ol>\n-      <p><A\n-HREF=\"http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\">This\n+      <p><a href=\"http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\">This\n          question</a> about the next libstdc++ prompted some brief but\n-         interesting <A\n-HREF=\"http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\">speculation</a>.\n+         interesting\n+         <a href=\"http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\">speculation</a>.\n       </p>\n \n <hr>\n@@ -676,9 +671,9 @@ <h2><a name=\"5_4\">5.4 Extensions and Backward Compatibility</a></h2>\n          it is better to refer to files there by their path, as in:\n          <!-- Careful, the leading spaces in PRE show up directly. -->\n       </p>\n-         <PRE>\n+         <pre>\n        #include &lt;ext/hash_map&gt;\n-         </PRE>\n+         </pre>\n       <p>Extensions to the library have\n          <a href=\"../ext/howto.html\">their own page</a>.\n       </p>\n@@ -698,11 +693,11 @@ <h2><a name=\"5_6\">5.6 Is libstdc++-v3 thread-safe?</a></h2>\n       <p>This is assuming that your idea of &quot;multithreaded&quot;\n          is the same as ours...  The general question of multithreading\n          and libstdc++-v3 is addressed in the chapter-specific advice for\n-<a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/17_intro/howto.html#3\">Library\n-         Introduction</a>.  Threadsafe containers are covered in\n-         more detail in\n-<a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/23_containers/howto.html\">the\n-         Received Wisdom section on containers</a>.\n+         <a href=\"../17_intro/howto.html#3\">Library Introduction</a>.\n+         Threadsafe containers are covered in more detail in\n+         <a href=\"../23_containers/howto.html\">the Received Wisdom section\n+         on containers</a>.  Threading and I/O are discussed in\n+         <a href=\"../27_io/howto.html\">the I/O chapter</a>.\n          <!-- I have successfully evaded the topic; my work here is\n               done- no, wait, I have to write those other sections... -->\n       </p>\n@@ -728,10 +723,10 @@ <h2><a name=\"5_7\">5.7 How do I get a copy of the ISO C++ Standard?</a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"../17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}, {"sha": "0691da784297a58d39c4fd89e6c4b7611767ad68", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -105,14 +105,14 @@\n 1.4 How do I get libstdc++?\n \n    The  eleventh  (and  latest) snapshot of libstdc++-v3 is [47]available\n-   via ftp.\n+   via ftp. The filename is libstdc++-2.92.tar.gz.\n \n    The  [48]homepage  has  instructions  for  retrieving  the  latest CVS\n    sources, and for browsing the CVS sources over the web.\n \n    The  subset  commonly known as the Standard Template Library (chapters\n-   23  through  25, mostly) is adapted from the SGI STL, which is also an\n-   ongoing work.\n+   23  through  25,  mostly) is adapted from the final release of the SGI\n+   STL.\n      _________________________________________________________________\n \n 1.5 When is libstdc++ going to be finished?\n@@ -555,7 +555,8 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    ours...  The  general  question  of multithreading and libstdc++-v3 is\n    addressed in the chapter-specific advice for [80]Library Introduction.\n    Threadsafe  containers  are covered in more detail in [81]the Received\n-   Wisdom section on containers.\n+   Wisdom  section  on  containers.  Threading  and  I/O are discussed in\n+   [82]the I/O chapter.\n      _________________________________________________________________\n \n 5.7 How do I get a copy of the ISO C++ Standard?\n@@ -566,16 +567,16 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    their  two-meeting commitment for voting rights, may get a copy of the\n    standard from their respective national standards organization. In the\n    USA, this national standards organization is ANSI and their website is\n-   right  [82]here. (And if you've already registered with them, clicking\n-   this link will take you to directly to the place where you can [83]buy\n+   right  [83]here. (And if you've already registered with them, clicking\n+   this link will take you to directly to the place where you can [84]buy\n    the standard on-line.\n \n-   Who is your country's member body? Visit the [84]ISO homepage and find\n+   Who is your country's member body? Visit the [85]ISO homepage and find\n    out!\n      _________________________________________________________________\n \n-   See  [85]license.html for copying conditions. Comments and suggestions\n-   are welcome, and may be sent to [86]the mailing list. \n+   See  [86]license.html for copying conditions. Comments and suggestions\n+   are welcome, and may be sent to [87]the libstdc++ mailing list. \n \n References\n \n@@ -620,12 +621,12 @@ References\n   39. ../faq/index.html#5_5\n   40. ../faq/index.html#5_6\n   41. ../faq/index.html#5_7\n-  42. ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.92.tar.gz\n+  42. http://gcc.gnu.org/libstdc++/download.html\n   43. ../17_intro/DESIGN\n   44. http://gcc.gnu.org/\n   45. http://gcc.gnu.org/gcc-2.95/buildstat.html\n   46. http://gcc.gnu.org/libstdc++/\n-  47. ftp://gcc.gnu.org/pub/libstdc++/libstdc++-2.92.tar.gz\n+  47. http://gcc.gnu.org/libstdc++/download.html\n   48. http://gcc.gnu.org/libstdc++/\n   49. ../17_intro/contribute.html\n   50. http://www.boost.org/\n@@ -658,10 +659,11 @@ References\n   77. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n   78. http://www.sgi.com/Technology/STL/\n   79. ../ext/howto.html\n-  80. http://gcc.gnu.org/onlinedocs/libstdc++/17_intro/howto.html#3\n-  81. http://gcc.gnu.org/onlinedocs/libstdc++/23_containers/howto.html\n-  82. http://www.ansi.org/\n-  83. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n-  84. http://www.iso.ch/\n-  85. ../17_intro/license.html\n-  86. mailto:libstdc++@gcc.gnu.org\n+  80. ../17_intro/howto.html#3\n+  81. ../23_containers/howto.html\n+  82. ../27_io/howto.html\n+  83. http://www.ansi.org/\n+  84. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n+  85. http://www.iso.ch/\n+  86. ../17_intro/license.html\n+  87. mailto:libstdc++@gcc.gnu.org"}, {"sha": "803e8c990b69269f9da6bd3e87f4f504be751f97", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0435269a764312008a34152f04254fa5024fba72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=0435269a764312008a34152f04254fa5024fba72", "patch": "@@ -1,16 +1,16 @@\n <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n <html>\n <head>\n-   <meta NAME=\"AUTHOR\" CONTENT=\"pme@gcc.gnu.org (Phil Edwards)\">\n-   <meta NAME=\"KEYWORDS\" CONTENT=\"libstdc++, libstdc++-v3, GCC, g++\">\n-   <meta NAME=\"DESCRIPTION\" CONTENT=\"README for the GNU libstdc++ effort.\">\n-   <meta NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n+   <meta name=\"AUTHOR\" content=\"pme@gcc.gnu.org (Phil Edwards)\">\n+   <meta name=\"KEYWORDS\" content=\"libstdc++, libstdc++-v3, GCC, g++\">\n+   <meta name=\"DESCRIPTION\" content=\"README for the GNU libstdc++ effort.\">\n+   <meta name=\"GENERATOR\" content=\"vi and eight fingers\">\n    <title>libstdc++-v3 Installation Instructions</title>\n-<link REL=StyleSheet HREF=\"lib3styles.css\">\n+<link rel=StyleSheet href=\"lib3styles.css\">\n </head>\n <body>\n \n-<h1 CLASS=\"centered\"><a name=\"top\">libstdc++-v3 INSTALL</a></h1>\n+<h1 class=\"centered\"><a name=\"top\">libstdc++-v3 INSTALL</a></h1>\n \n <p>The latest version of this document is always available at\n    <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/install.html\">\n@@ -124,20 +124,20 @@ <h2><a name=\"srcsetup\">Setting up the source directories</a></h2>\n       (<code>gcc</code> or <code>gcc-3.0</code>, for example) is <em>gccsrcdir</em>.\n       Once in <em>gccsrcdir</em>, you'll need to rename or delete the\n       libstdc++-v3 directory which comes with that snapshot:\n-      <PRE>\n+      <pre>\n    mv libstdc++-v3 libstdc++-v3-previous  <strong>[OR]</strong>\n-   rm -r libstdc++-v3</PRE>\n+   rm -r libstdc++-v3</pre>\n    </p>\n    <p>Next, unpack the libstdc++-v3 library tarball into this\n       <em>gccsrcdir</em> directory; it will create a\n       <em>libsrcdir</em> called <code>libstdc++-<em>version</em></code>:\n-      <PRE>\n-   gzip -dc libstdc++-version.tar.gz | tar xf -</PRE>\n+      <pre>\n+   gzip -dc libstdc++-version.tar.gz | tar xf -</pre>\n    </p>\n    <p>Finally, rename <em>libsrcdir</em> to <code>libstdc++-v3</code> so that\n       gcc's configure flags will be able to deal with the new library.\n-      <PRE>\n-   mv <em>libsrcdir</em> libstdc++-v3</PRE>\n+      <pre>\n+   mv <em>libsrcdir</em> libstdc++-v3</pre>\n    </p>\n \n \n@@ -156,9 +156,9 @@ <h2><a name=\"config\">Configuring</a></h2>\n       building the C++ language parts.\n    </p>\n \n-   <p><PRE>\n+   <p><pre>\n    cd <em>gccbuilddir</em>\n-   <em>gccsrcdir</em>/configure --prefix=<em>destdir</em> --other-opts...</PRE>\n+   <em>gccsrcdir</em>/configure --prefix=<em>destdir</em> --other-opts...</pre>\n    </p>\n \n \n@@ -178,8 +178,8 @@ <h3>[re]building <em>everything</em></h3>\n \n    <h3>[re]building only libstdc++</h3>\n    <p>To rebuild just libstdc++, use:\n-      <PRE>\n-   make all-target-<em>libstdc++-v3</em></PRE>\n+      <pre>\n+   make all-target-<em>libstdc++-v3</em></pre>\n       This will configure and build the C++ library in the\n       <em>gccbuilddir/cpu-vendor-os/</em>libstdc++ directory.\n    </p>\n@@ -193,33 +193,33 @@ <h3>[re]building only libstdc++</h3>\n       simply edit it and remove lines.\n    </p>\n    <p>You're done.  Now install the rebuilt pieces with\n-      <PRE>\n-   make install</PRE>\n+      <pre>\n+   make install</pre>\n       or \n-      <PRE>\n+      <pre>\n    make install-gcc\n-   make install-target-libstdc++-v3</PRE>\n+   make install-target-libstdc++-v3</pre>\n    </p>\n \n \n <hr>\n <h2><a name=\"postinstall\">Post-installation</a></h2>\n    <p>Installation will create the <em>destdir</em> directory and\n       populate it with subdirectories:\n-      <PRE>\n+      <pre>\n    lib/\n    include/g++-v3/\n       backward/\n       bits/\n       <em>cpu-vendor-os</em>/bits/\n-      ext/</PRE>\n+      ext/</pre>\n    </p>\n    <p>You can check the status of the build without installing it using\n-      <PRE>\n-   make check</PRE>\n+      <pre>\n+   make check</pre>\n       or you can check the status of the installed library using\n-      <PRE>\n-   make check-install</PRE>\n+      <pre>\n+   make check-install</pre>\n       in the <em>libbuilddir</em> directory.\n       These commands will create a 'testsuite' directory underneath\n       <em>libbuilddir</em> containing the results of the tests.  We are\n@@ -280,10 +280,10 @@ <h2><a name=\"\"></a></h2>\n <!-- ####################################################### -->\n \n <hr>\n-<P CLASS=\"fineprint\"><em>\n+<p class=\"fineprint\"><em>\n See <a href=\"17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to\n-<a href=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</a>.\n+<a href=\"mailto:libstdc++@gcc.gnu.org\">the libstdc++ mailing list</a>.\n </em></p>\n \n "}]}