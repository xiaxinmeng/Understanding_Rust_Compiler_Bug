{"sha": "3c3fa1471c4de6abbf9841155c0f2865bfc099d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzZmExNDcxYzRkZTZhYmJmOTg0MTE1NWMwZjI4NjViZmMwOTlkNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-17T18:31:29Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-17T18:31:29Z"}, "message": "(digest_init): Use TYPE_MAIN_VARIANT comparing type of inside_init.\n\n(process_init_constructor): Warn about partly bracketed initializers.\n\nFrom-SVN: r1875", "tree": {"sha": "f4ba7b53a94351f463039e995a33e0c7069e6d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ba7b53a94351f463039e995a33e0c7069e6d72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c3fa1471c4de6abbf9841155c0f2865bfc099d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3fa1471c4de6abbf9841155c0f2865bfc099d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c3fa1471c4de6abbf9841155c0f2865bfc099d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3fa1471c4de6abbf9841155c0f2865bfc099d6/comments", "author": null, "committer": null, "parents": [{"sha": "b5b6ad4638b2c30f776cee513caaf68876d773a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b6ad4638b2c30f776cee513caaf68876d773a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b6ad4638b2c30f776cee513caaf68876d773a3"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "18f2ed50136f85a40d474e2223f3463191f9056a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3fa1471c4de6abbf9841155c0f2865bfc099d6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3fa1471c4de6abbf9841155c0f2865bfc099d6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3c3fa1471c4de6abbf9841155c0f2865bfc099d6", "patch": "@@ -4603,15 +4603,16 @@ digest_init (type, init, tail, require_constant, constructor_constant, ofwhat)\n      from an expression of the same type, optionally with braces.\n      For an array, this is allowed only for a string constant.  */\n \n-  if (inside_init && (TREE_TYPE (inside_init) == type\n-\t       || (code == ARRAY_TYPE && TREE_TYPE (inside_init)\n-\t\t   && comptypes (TREE_TYPE (inside_init), type))\n-\t       || (code == POINTER_TYPE\n-\t\t   && TREE_TYPE (inside_init) != 0\n-\t\t   && (TREE_CODE (TREE_TYPE (inside_init)) == ARRAY_TYPE\n-\t\t       || TREE_CODE (TREE_TYPE (inside_init)) == FUNCTION_TYPE)\n-\t\t   && comptypes (TREE_TYPE (TREE_TYPE (inside_init)),\n-\t\t\t\t TREE_TYPE (type)))))\n+  if (inside_init\n+      && (TYPE_MAIN_VARIANT (TREE_TYPE (inside_init)) == TYPE_MAIN_VARIANT (type)\n+\t  || (code == ARRAY_TYPE && TREE_TYPE (inside_init)\n+\t      && comptypes (TREE_TYPE (inside_init), type))\n+\t  || (code == POINTER_TYPE\n+\t      && TREE_TYPE (inside_init) != 0\n+\t      && (TREE_CODE (TREE_TYPE (inside_init)) == ARRAY_TYPE\n+\t\t  || TREE_CODE (TREE_TYPE (inside_init)) == FUNCTION_TYPE)\n+\t      && comptypes (TREE_TYPE (TREE_TYPE (inside_init)),\n+\t\t\t    TREE_TYPE (type)))))\n     {\n       if (code == POINTER_TYPE\n \t  && (TREE_CODE (TREE_TYPE (inside_init)) == ARRAY_TYPE\n@@ -4867,7 +4868,11 @@ process_init_constructor (type, init, elts, constant_value, constant_element,\n      no matter how the data was given to us.  */\n \n   if (elts)\n-    tail = *elts;\n+    {\n+      if (extra_warnings)\n+\twarning (\"aggregate has a partly bracketed initializer\");\n+      tail = *elts;\n+    }\n   else\n     tail = CONSTRUCTOR_ELTS (init);\n "}]}