{"sha": "bc702273a728f2840c2c9603926f0066e8e8cd3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM3MDIyNzNhNzI4ZjI4NDBjMmM5NjAzOTI2ZjAwNjZlOGU4Y2QzYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:34Z"}, "message": "jump.c: Include rtl-iter.h.\n\ngcc/\n\t* jump.c: Include rtl-iter.h.\n\t(returnjump_p_1): Delete.\n\t(returnjump_p): Use FOR_EACH_SUBRTX rather than for_each_rtx.\n\tRemove handling of null rtxes.\n\nFrom-SVN: r214643", "tree": {"sha": "9838ef5790ac753d6dab4cc4bcc959abe4c9f6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9838ef5790ac753d6dab4cc4bcc959abe4c9f6b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc702273a728f2840c2c9603926f0066e8e8cd3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc702273a728f2840c2c9603926f0066e8e8cd3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc702273a728f2840c2c9603926f0066e8e8cd3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc702273a728f2840c2c9603926f0066e8e8cd3c/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40954ce58f2f7b526e462228c6a08106bc9d058e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40954ce58f2f7b526e462228c6a08106bc9d058e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40954ce58f2f7b526e462228c6a08106bc9d058e"}], "stats": {"total": 61, "additions": 32, "deletions": 29}, "files": [{"sha": "32f519d0c2b89898a93f3f279550c69ae03b979c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc702273a728f2840c2c9603926f0066e8e8cd3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc702273a728f2840c2c9603926f0066e8e8cd3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc702273a728f2840c2c9603926f0066e8e8cd3c", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* jump.c: Include rtl-iter.h.\n+\t(returnjump_p_1): Delete.\n+\t(returnjump_p): Use FOR_EACH_SUBRTX rather than for_each_rtx.\n+\tRemove handling of null rtxes.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* ira.c: Include rtl-iter.h."}, {"sha": "2a0bea795033359094b8ab71dadf9b4f33f5b383", "filename": "gcc/jump.c", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc702273a728f2840c2c9603926f0066e8e8cd3c/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc702273a728f2840c2c9603926f0066e8e8cd3c/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=bc702273a728f2840c2c9603926f0066e8e8cd3c", "patch": "@@ -54,6 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tree-pass.h\"\n #include \"target.h\"\n+#include \"rtl-iter.h\"\n \n /* Optimize jump y; x: ... y: jumpif... x?\n    Don't know if it is worth bothering with.  */\n@@ -68,7 +69,6 @@ static void mark_jump_label_1 (rtx, rtx, bool, bool);\n static void mark_jump_label_asm (rtx, rtx);\n static void redirect_exp_1 (rtx *, rtx, rtx, rtx);\n static int invert_exp_1 (rtx, rtx);\n-static int returnjump_p_1 (rtx *, void *);\n \f\n /* Worker for rebuild_jump_labels and rebuild_jump_labels_chain.  */\n static void\n@@ -920,39 +920,35 @@ condjump_label (const_rtx insn)\n   return NULL_RTX;\n }\n \n-/* Return true if INSN is a (possibly conditional) return insn.  */\n-\n-static int\n-returnjump_p_1 (rtx *loc, void *data ATTRIBUTE_UNUSED)\n-{\n-  rtx x = *loc;\n-\n-  if (x == NULL)\n-    return false;\n-\n-  switch (GET_CODE (x))\n-    {\n-    case RETURN:\n-    case SIMPLE_RETURN:\n-    case EH_RETURN:\n-      return true;\n-\n-    case SET:\n-      return SET_IS_RETURN_P (x);\n-\n-    default:\n-      return false;\n-    }\n-}\n-\n /* Return TRUE if INSN is a return jump.  */\n \n int\n returnjump_p (rtx insn)\n {\n-  if (!JUMP_P (insn))\n-    return 0;\n-  return for_each_rtx (&PATTERN (insn), returnjump_p_1, NULL);\n+  if (JUMP_P (insn))\n+    {\n+      subrtx_iterator::array_type array;\n+      FOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+\t{\n+\t  const_rtx x = *iter;\n+\t  switch (GET_CODE (x))\n+\t    {\n+\t    case RETURN:\n+\t    case SIMPLE_RETURN:\n+\t    case EH_RETURN:\n+\t      return true;\n+\n+\t    case SET:\n+\t      if (SET_IS_RETURN_P (x))\n+\t\treturn true;\n+\t      break;\n+\n+\t    default:\n+\t      break;\n+\t    }\n+\t}\n+    }\n+  return false;\n }\n \n /* Return true if INSN is a (possibly conditional) return insn.  */"}]}