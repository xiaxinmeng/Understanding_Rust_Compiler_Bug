{"sha": "ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0YTU3MjNiNjFkN2JlNWNmZDZkNmNhYjYxNjVhZWZjYWU5Y2VmZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-27T20:48:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-27T20:48:57Z"}, "message": "* genautomata.c (expand_automata): Always create a description.\n\nFrom-SVN: r45211", "tree": {"sha": "987cc7c9ede1d064644857edd6fe98aaf2d05bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/987cc7c9ede1d064644857edd6fe98aaf2d05bd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff/comments", "author": null, "committer": null, "parents": [{"sha": "859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859cb4d84e389fbc9a9192969d94c7ae4f6e896d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859cb4d84e389fbc9a9192969d94c7ae4f6e896d"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "9fe71b8a9f14b54387b35bd6ab5c404b2939d182", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff", "patch": "@@ -1,3 +1,7 @@\n+2001-08-27  Richard Henderson  <rth@redhat.com>\n+\n+\t* genautomata.c (expand_automata): Always create a description.\n+\n 2001-08-27  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* optabs.c (expand_binop): Correctly handle the carry in multiword"}, {"sha": "6da05ba587611d14a8ce2ffc5511a05e1aa6fcb2", "filename": "gcc/genautomata.c", "status": "modified", "additions": 34, "deletions": 38, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=ce4a5723b61d7be5cfd6d6cab6165aefcae9ceff", "patch": "@@ -8625,48 +8625,44 @@ expand_automata ()\n {\n   int i;\n \n-  if (VLA_PTR_LENGTH (decls) != 0)\n-    {\n-      description = create_node (sizeof (struct description)\n-\t\t\t\t + sizeof (decl_t)\n-\t\t\t\t /* One entry for cycle advancing insn.  */\n-\t\t\t\t * VLA_PTR_LENGTH (decls));\n-      description->decls_num = VLA_PTR_LENGTH (decls);\n-      description->query_units_num = 0;\n-      for (i = 0; i < description->decls_num; i++)\n-\t{\n-\t  description->decls [i] = VLA_PTR (decls, i);\n-\t  if (description->decls [i]->mode == dm_unit\n-\t      && description->decls [i]->decl.unit.query_p)\n-\t    description->decls [i]->decl.unit.query_num\n-\t      = description->query_units_num++;\n-\t}\n-      all_time = create_ticker ();\n-      check_time = create_ticker ();\n-      fprintf (stderr, \"Check description...\");\n-      fflush (stderr);\n-      check_all_description ();\n-      fprintf (stderr, \"done\\n\");\n-      ticker_off (&check_time);\n-      generation_time = create_ticker ();\n+  description = create_node (sizeof (struct description)\n+\t\t\t     /* One entry for cycle advancing insn.  */\n+\t\t\t     + sizeof (decl_t) * VLA_PTR_LENGTH (decls));\n+  description->decls_num = VLA_PTR_LENGTH (decls);\n+  description->query_units_num = 0;\n+  for (i = 0; i < description->decls_num; i++)\n+    {\n+      description->decls [i] = VLA_PTR (decls, i);\n+      if (description->decls [i]->mode == dm_unit\n+\t  && description->decls [i]->decl.unit.query_p)\n+        description->decls [i]->decl.unit.query_num\n+\t  = description->query_units_num++;\n+    }\n+  all_time = create_ticker ();\n+  check_time = create_ticker ();\n+  fprintf (stderr, \"Check description...\");\n+  fflush (stderr);\n+  check_all_description ();\n+  fprintf (stderr, \"done\\n\");\n+  ticker_off (&check_time);\n+  generation_time = create_ticker ();\n+  if (!have_error)\n+    {\n+      generate ();\n+      check_automata ();\n       if (!have_error)\n \t{\n-\t  generate ();\n-\t  check_automata ();\n-\t  if (!have_error)\n-\t    {\n-\t      fprintf (stderr, \"Generation of attributes...\");\n-\t      fflush (stderr);\n-\t      make_internal_dfa_insn_code_attr ();\n-\t      make_insn_alts_attr ();\n-\t      make_default_insn_latency_attr ();\n-\t      make_bypass_attr ();\n-\t      fprintf (stderr, \"done\\n\");\n-\t    }\n+\t  fprintf (stderr, \"Generation of attributes...\");\n+\t  fflush (stderr);\n+\t  make_internal_dfa_insn_code_attr ();\n+\t  make_insn_alts_attr ();\n+\t  make_default_insn_latency_attr ();\n+\t  make_bypass_attr ();\n+\t  fprintf (stderr, \"done\\n\");\n \t}\n-      ticker_off (&generation_time);\n-      ticker_off (&all_time);\n     }\n+  ticker_off (&generation_time);\n+  ticker_off (&all_time);\n   fprintf (stderr, \"All other genattrtab stuff...\");\n   fflush (stderr);\n }"}]}