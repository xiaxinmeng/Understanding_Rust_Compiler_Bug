{"sha": "4195786e34e0e5cc68b5fa09a583d562c0a58572", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5NTc4NmUzNGUwZTVjYzY4YjVmYTA5YTU4M2Q1NjJjMGE1ODU3Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-08-18T07:58:06Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-08-18T07:58:06Z"}, "message": "mips.md (muldf3, mulsf3): Don't call a gen_* function.\n\n\t* config/mips/mips.md (muldf3, mulsf3): Don't call a gen_* function.\n\t(muldf3_internal, muldf3_r4300): Select based on TARGET_4300_MUL_FIX\n\trather than TARGET_MIPS4300.\n\t(mulsf3_internal, mulsf3_r4300): Likewise.\n\nFrom-SVN: r70534", "tree": {"sha": "0600790fd024fe7be7b540870b424d0de319ffd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0600790fd024fe7be7b540870b424d0de319ffd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4195786e34e0e5cc68b5fa09a583d562c0a58572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4195786e34e0e5cc68b5fa09a583d562c0a58572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4195786e34e0e5cc68b5fa09a583d562c0a58572", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4195786e34e0e5cc68b5fa09a583d562c0a58572/comments", "author": null, "committer": null, "parents": [{"sha": "6d4ede5fc2e335a76d7544cc068c05e733f97d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4ede5fc2e335a76d7544cc068c05e733f97d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d4ede5fc2e335a76d7544cc068c05e733f97d9a"}], "stats": {"total": 63, "additions": 23, "deletions": 40}, "files": [{"sha": "0460b1ff03994c9e23b86728eddb2b38ad14a4d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4195786e34e0e5cc68b5fa09a583d562c0a58572/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4195786e34e0e5cc68b5fa09a583d562c0a58572/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4195786e34e0e5cc68b5fa09a583d562c0a58572", "patch": "@@ -1,3 +1,10 @@\n+2003-08-18  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (muldf3, mulsf3): Don't call a gen_* function.\n+\t(muldf3_internal, muldf3_r4300): Select based on TARGET_4300_MUL_FIX\n+\trather than TARGET_MIPS4300.\n+\t(mulsf3_internal, mulsf3_r4300): Likewise.\n+\n 2003-08-18  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md: Renumber unspecs.  Clean up comments."}, {"sha": "4e82958a3e491ebdf9f8ec6de44ec280fdf030e1", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 16, "deletions": 40, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4195786e34e0e5cc68b5fa09a583d562c0a58572/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4195786e34e0e5cc68b5fa09a583d562c0a58572/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4195786e34e0e5cc68b5fa09a583d562c0a58572", "patch": "@@ -1360,87 +1360,63 @@\n ;;  ....................\n ;;\n \n-;; Early Vr4300 silicon has a CPU bug where multiplies with certain\n-;; operands may corrupt immediately following multiplies. This is a\n-;; simple fix to insert NOPs.\n-\n (define_expand \"muldf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n   \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"\n-{\n-  if (!TARGET_MIPS4300)\n-    emit_insn (gen_muldf3_internal (operands[0], operands[1], operands[2]));\n-  else\n-    emit_insn (gen_muldf3_r4300 (operands[0], operands[1], operands[2]));\n-  DONE;\n-}\")\n+  \"\")\n \n (define_insn \"muldf3_internal\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && !TARGET_MIPS4300\"\n+  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && !TARGET_4300_MUL_FIX\"\n   \"mul.d\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"fmul\")\n    (set_attr \"mode\"\t\"DF\")])\n \n+;; Early VR4300 silicon has a CPU bug where multiplies with certain\n+;; operands may corrupt immediately following multiplies. This is a\n+;; simple fix to insert NOPs.\n+\n (define_insn \"muldf3_r4300\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_MIPS4300\"\n-  \"*\n-{\n-  output_asm_insn (\\\"mul.d\\\\t%0,%1,%2\\\", operands);\n-  if (TARGET_4300_MUL_FIX)\n-    output_asm_insn (\\\"nop\\\", operands);\n-  return \\\"\\\";\n-}\"\n+  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_4300_MUL_FIX\"\n+  \"mul.d\\\\t%0,%1,%2\\;nop\"\n   [(set_attr \"type\"\t\"fmul\")\n    (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"\t\"8\")])\t;; mul.d + nop\n+   (set_attr \"length\"\t\"8\")])\n \n (define_expand \"mulsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"TARGET_HARD_FLOAT\"\n-  \"\n-{\n-  if (!TARGET_MIPS4300)\n-    emit_insn( gen_mulsf3_internal (operands[0], operands[1], operands[2]));\n-  else\n-    emit_insn( gen_mulsf3_r4300 (operands[0], operands[1], operands[2]));\n-  DONE;\n-}\")\n+  \"\")\n \n (define_insn \"mulsf3_internal\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && !TARGET_MIPS4300\"\n+  \"TARGET_HARD_FLOAT && !TARGET_4300_MUL_FIX\"\n   \"mul.s\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"fmul\")\n    (set_attr \"mode\"\t\"SF\")])\n \n+;; See muldf3_r4300.\n+\n (define_insn \"mulsf3_r4300\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_MIPS4300\"\n-  \"*\n-{\n-  output_asm_insn (\\\"mul.s\\\\t%0,%1,%2\\\", operands);\n-  if (TARGET_4300_MUL_FIX)\n-    output_asm_insn (\\\"nop\\\", operands);\n-  return \\\"\\\";\n-}\"\n+  \"TARGET_HARD_FLOAT && TARGET_4300_MUL_FIX\"\n+  \"mul.s\\\\t%0,%1,%2\\;nop\"\n   [(set_attr \"type\"\t\"fmul\")\n    (set_attr \"mode\"\t\"SF\")\n-   (set_attr \"length\"\t\"8\")])\t;; mul.s + nop\n+   (set_attr \"length\"\t\"8\")])\n \n \n ;; ??? The R4000 (only) has a cpu bug.  If a double-word shift executes while"}]}