{"sha": "59df2b2b6ffe4a193824b8282eeba345495b7117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlkZjJiMmI2ZmZlNGExOTM4MjRiODI4MmVlYmEzNDU0OTViNzExNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-23T20:07:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-23T20:07:01Z"}, "message": "(jump_optimize): In no-nop move deletion, don't test PRESERVE_DEATH_INFO_REGNO_P...\n\n(jump_optimize): In no-nop move deletion, don't test\nPRESERVE_DEATH_INFO_REGNO_P; instead test if optimization is performed.\nCheck for REG_UNUSED note on to-be deleted insn before searching for preceding\ninstruction to delete note from.\nIf PRESERVE_DEATH_INFO_REGNO_P is true for SREG, replace INSN with USE.\n\nFrom-SVN: r12783", "tree": {"sha": "201b99f86621c98d238e435a747f58406946c781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/201b99f86621c98d238e435a747f58406946c781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59df2b2b6ffe4a193824b8282eeba345495b7117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59df2b2b6ffe4a193824b8282eeba345495b7117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59df2b2b6ffe4a193824b8282eeba345495b7117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59df2b2b6ffe4a193824b8282eeba345495b7117/comments", "author": null, "committer": null, "parents": [{"sha": "0ac224f875278acbee43e8afe1a869ab3318781c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac224f875278acbee43e8afe1a869ab3318781c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac224f875278acbee43e8afe1a869ab3318781c"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "6e0e30b14ffa85b4dce45df8fc6382c51e837622", "filename": "gcc/jump.c", "status": "modified", "additions": 28, "deletions": 17, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59df2b2b6ffe4a193824b8282eeba345495b7117/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59df2b2b6ffe4a193824b8282eeba345495b7117/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=59df2b2b6ffe4a193824b8282eeba345495b7117", "patch": "@@ -449,28 +449,39 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\t\t\t      sreg, NULL_PTR, dreg,\n \t\t\t\t\t      GET_MODE (SET_SRC (body)));\n \n-#ifdef PRESERVE_DEATH_INFO_REGNO_P\n-\t\t    /* Deleting insn could lose a death-note for SREG or DREG\n-\t\t       so don't do it if final needs accurate death-notes.  */\n-\t\t    if (! PRESERVE_DEATH_INFO_REGNO_P (sreg)\n-\t\t\t&& ! PRESERVE_DEATH_INFO_REGNO_P (dreg))\n-#endif\n+\t\t    if (tem != 0 &&\n+\t\t\tGET_MODE (tem) == GET_MODE (SET_DEST (body)))\n \t\t      {\n \t\t\t/* DREG may have been the target of a REG_DEAD note in\n \t\t\t   the insn which makes INSN redundant.  If so, reorg\n \t\t\t   would still think it is dead.  So search for such a\n \t\t\t   note and delete it if we find it.  */\n-\t\t\tfor (trial = prev_nonnote_insn (insn);\n-\t\t\t     trial && GET_CODE (trial) != CODE_LABEL;\n-\t\t\t     trial = prev_nonnote_insn (trial))\n-\t\t\t  if (find_regno_note (trial, REG_DEAD, dreg))\n-\t\t\t    {\n-\t\t\t      remove_death (dreg, trial);\n-\t\t\t      break;\n-\t\t\t    }\n-\n-\t\t\tif (tem != 0\n-\t\t\t    && GET_MODE (tem) == GET_MODE (SET_DEST (body)))\n+\t\t\tif (! find_regno_note (insn, REG_UNUSED, dreg))\n+\t\t\t  for (trial = prev_nonnote_insn (insn);\n+\t\t\t       trial && GET_CODE (trial) != CODE_LABEL;\n+\t\t\t       trial = prev_nonnote_insn (trial))\n+\t\t\t    if (find_regno_note (trial, REG_DEAD, dreg))\n+\t\t\t      {\n+\t\t\t\tremove_death (dreg, trial);\n+\t\t\t\tbreak;\n+\t\t\t      }\n+#ifdef PRESERVE_DEATH_INFO_REGNO_P\n+\t\t\t/* Deleting insn could lose a death-note for SREG\n+\t\t\t   so don't do it if final needs accurate\n+\t\t\t   death-notes.  */\n+\t\t\tif (PRESERVE_DEATH_INFO_REGNO_P (sreg)\n+\t\t\t    && (trial = find_regno_note (insn, REG_DEAD, sreg)))\n+\t\t\t  {\n+\t\t\t    /* Change this into a USE so that we won't emit\n+\t\t\t       code for it, but still can keep the note.  */\n+\t\t\t    PATTERN (insn)\n+\t\t\t      = gen_rtx (USE, VOIDmode, XEXP (trial, 0));\n+\t\t\t    /* Remove all reg notes but the REG_DEAD one.  */\n+\t\t\t    REG_NOTES (insn) = trial;\n+\t\t\t    XEXP (trial, 1) = NULL_RTX;\n+\t\t\t  }\n+\t\t\telse\n+#endif\n \t\t\t  delete_insn (insn);\n \t\t      }\n \t\t  }"}]}