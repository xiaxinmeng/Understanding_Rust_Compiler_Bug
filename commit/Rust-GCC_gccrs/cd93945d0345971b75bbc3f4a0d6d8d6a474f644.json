{"sha": "cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5Mzk0NWQwMzQ1OTcxYjc1YmJjM2Y0YTBkNmQ4ZDZhNDc0ZjY0NA==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2015-03-13T10:57:07Z"}, "committer": {"name": "Sebastian Huber", "email": "sh@gcc.gnu.org", "date": "2015-03-13T10:57:07Z"}, "message": "libgomp: Add RTEMS support\n\nlibgomp/ChangeLog\n\n\t* configure.tgt (*-*-rtems*): Use local-exec TLS model.\n\t* configure.ac (*-*-rtems*): Assume Pthread is supported.\n\t(pthread.h): Check for this header file.\n\t* configure: Regenerate.\n\nFrom-SVN: r221415", "tree": {"sha": "986b376731172e3e654d665a0958e076f287ef73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/986b376731172e3e654d665a0958e076f287ef73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b78b1e73091dccb5176b1c0c5eeb165ea85771c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b78b1e73091dccb5176b1c0c5eeb165ea85771c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b78b1e73091dccb5176b1c0c5eeb165ea85771c"}], "stats": {"total": 75, "additions": 49, "deletions": 26}, "files": [{"sha": "6237db56e4b6e975b094dc992f9587dd84bdd886", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "patch": "@@ -1,3 +1,10 @@\n+2015-03-13  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* configure.tgt (*-*-rtems*): Use local-exec TLS model.\n+\t* configure.ac (*-*-rtems*): Assume Pthread is supported.\n+\t(pthread.h): Check for this header file.\n+\t* configure: Regenerate.\n+\n 2015-02-25  Tom de Vries  <tom@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/reduction-1.c (DO_PRAGMA)"}, {"sha": "e39787c94c6190e35794ea6344402eb4a8e6fbce", "filename": "libgomp/configure", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "patch": "@@ -14611,7 +14611,7 @@ $as_echo \"#define STRING_WITH_STRINGS 1\" >>confdefs.h\n \n fi\n \n-for ac_header in unistd.h semaphore.h sys/loadavg.h sys/time.h sys/time.h\n+for ac_header in pthread.h unistd.h semaphore.h sys/loadavg.h sys/time.h sys/time.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -15033,14 +15033,19 @@ ac_config_commands=\"$ac_config_commands gstdint.h\"\n \n \n \n-# Check to see if -pthread or -lpthread is needed.  Prefer the former.\n-# In case the pthread.h system header is not found, this test will fail.\n XPCFLAGS=\"\"\n-CFLAGS=\"$CFLAGS -pthread\"\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+case \"$host\" in\n+  *-*-rtems*)\n+    # RTEMS supports Pthreads, but the library is not available at GCC build time.\n+    ;;\n+  *)\n+    # Check to see if -pthread or -lpthread is needed.  Prefer the former.\n+    # In case the pthread.h system header is not found, this test will fail.\n+    CFLAGS=\"$CFLAGS -pthread\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <pthread.h>\n-   void *g(void *d) { return NULL; }\n+       void *g(void *d) { return NULL; }\n int\n main ()\n {\n@@ -15053,10 +15058,10 @@ if ac_fn_c_try_link \"$LINENO\"; then :\n   XPCFLAGS=\" -Wc,-pthread\"\n else\n   CFLAGS=\"$save_CFLAGS\" LIBS=\"-lpthread $LIBS\"\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <pthread.h>\n-     void *g(void *d) { return NULL; }\n+         void *g(void *d) { return NULL; }\n int\n main ()\n {\n@@ -15075,6 +15080,7 @@ rm -f core conftest.err conftest.$ac_objext \\\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n+esac\n \n # Plugins for offload execution, configure.ac fragment.  -*- mode: autoconf -*-\n #"}, {"sha": "51e646d47895d7a063989f0ad8b2c03ec87d7f51", "filename": "libgomp/configure.ac", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "patch": "@@ -170,28 +170,34 @@ AC_SUBST(libtool_VERSION)\n AC_STDC_HEADERS\n AC_HEADER_TIME\n ACX_HEADER_STRING\n-AC_CHECK_HEADERS(unistd.h semaphore.h sys/loadavg.h sys/time.h sys/time.h)\n+AC_CHECK_HEADERS(pthread.h unistd.h semaphore.h sys/loadavg.h sys/time.h sys/time.h)\n \n GCC_HEADER_STDINT(gstdint.h)\n \n-# Check to see if -pthread or -lpthread is needed.  Prefer the former.\n-# In case the pthread.h system header is not found, this test will fail.\n XPCFLAGS=\"\"\n-CFLAGS=\"$CFLAGS -pthread\"\n-AC_LINK_IFELSE(\n- [AC_LANG_PROGRAM(\n-  [#include <pthread.h>\n-   void *g(void *d) { return NULL; }],\n-  [pthread_t t; pthread_create(&t,NULL,g,NULL);])],\n- [XPCFLAGS=\" -Wc,-pthread\"],\n- [CFLAGS=\"$save_CFLAGS\" LIBS=\"-lpthread $LIBS\"\n-  AC_LINK_IFELSE(\n-   [AC_LANG_PROGRAM(\n-    [#include <pthread.h>\n-     void *g(void *d) { return NULL; }],\n-    [pthread_t t; pthread_create(&t,NULL,g,NULL);])],\n-   [],\n-   [AC_MSG_ERROR([Pthreads are required to build libgomp])])])\n+case \"$host\" in\n+  *-*-rtems*)\n+    # RTEMS supports Pthreads, but the library is not available at GCC build time.\n+    ;;\n+  *)\n+    # Check to see if -pthread or -lpthread is needed.  Prefer the former.\n+    # In case the pthread.h system header is not found, this test will fail.\n+    CFLAGS=\"$CFLAGS -pthread\"\n+    AC_LINK_IFELSE(\n+     [AC_LANG_PROGRAM(\n+      [#include <pthread.h>\n+       void *g(void *d) { return NULL; }],\n+      [pthread_t t; pthread_create(&t,NULL,g,NULL);])],\n+     [XPCFLAGS=\" -Wc,-pthread\"],\n+     [CFLAGS=\"$save_CFLAGS\" LIBS=\"-lpthread $LIBS\"\n+      AC_LINK_IFELSE(\n+       [AC_LANG_PROGRAM(\n+        [#include <pthread.h>\n+         void *g(void *d) { return NULL; }],\n+        [pthread_t t; pthread_create(&t,NULL,g,NULL);])],\n+       [],\n+       [AC_MSG_ERROR([Pthreads are required to build libgomp])])])\n+esac\n \n m4_include([plugin/configfrag.ac])\n "}, {"sha": "2970f6f7b82c6f2510836e3a2af4aa7408ff51e5", "filename": "libgomp/configure.tgt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd93945d0345971b75bbc3f4a0d6d8d6a474f644/libgomp%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.tgt?ref=cd93945d0345971b75bbc3f4a0d6d8d6a474f644", "patch": "@@ -20,6 +20,10 @@ if test $gcc_cv_have_tls = yes ; then\n     *-*-linux* | *-*-gnu*)\n \tXCFLAGS=\"${XCFLAGS} -ftls-model=initial-exec\"\n \t;;\n+\n+    *-*-rtems*)\n+\tXCFLAGS=\"${XCFLAGS} -ftls-model=local-exec\"\n+\t;;\n   esac\n fi\n "}]}