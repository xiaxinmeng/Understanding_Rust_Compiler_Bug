{"sha": "f630fc6ab056ba999b808a0784107320bbebb445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzMGZjNmFiMDU2YmE5OTliODA4YTA3ODQxMDczMjBiYmViYjQ0NQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-21T08:20:43Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-21T08:20:43Z"}, "message": "Debug hooks: use rtx_insn and rtx_code_label\n\n2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n\n\t* debug.h (struct gcc_debug_hooks): Strengthen param 1 of hook\n\t\"label\" from rtx to rtx_code_label *.  Strengthen param 1 of\n\t\"var_location\" hook from rtx to rtx_insn *.\n\t(debug_nothing_rtx): Delete in favor of...\n\t(debug_nothing_rtx_code_label): New prototype.\n\t(debug_nothing_rtx_rtx): Delete unused prototype.\n\t(debug_nothing_rtx_insn): New prototype.\n\n\t* final.c (final_scan_insn): Add checked cast to rtx_insn * when\n\tinvoking debug_hooks->var_location (in two places, one in a NOTE\n\tcase of a switch statement, the other guarded by a CALL_P\n\tconditional.  Add checked cast to rtx_code_label * when invoking\n\tdebug_hooks->label (within CODE_LABEL case of switch statement).\n\n\t* dbxout.c (dbx_debug_hooks): Update \"label\" hook from\n\tdebug_nothing_rtx to debug_nothing_rtx_code_label.  Update\n\t\"var_location\" from debug_nothing_rtx to debug_nothing_rtx_insn.\n\t(xcoff_debug_hooks): Likewise.\n\t* debug.c (do_nothing_debug_hooks): Likewise.\n\t(debug_nothing_rtx): Delete in favor of...\n\t(debug_nothing_rtx_insn): New function.\n\t(debug_nothing_rtx_rtx): Delete unused function.\n\t(debug_nothing_rtx_code_label): New function.\n\t* dwarf2out.c (dwarf2_debug_hooks): Update \"label\" hook from\n\tdebug_nothing_rtx to debug_nothing_rtx_code_label.\n\t(dwarf2out_var_location): Strengthen param \"loc_note\" from rtx\n\tto rtx_insn *.\n\t* sdbout.c (sdb_debug_hooks): Update \"var_location\" hook from\n\tdebug_nothing_rtx to debug_nothing_rtx_insn.\n\t(sdbout_label): Strengthen param \"insn\" from rtx to\n\trtx_code_label *.\n\t* vmsdbgout.c (vmsdbg_debug_hooks): Update \"label\" hook from\n\tdebug_nothing_rtx to debug_nothing_rtx_code_label.  Update\n\t\"var_location\" hook from debug_nothing_rtx to\n\tdebug_nothing_rtx_insn.\n\nFrom-SVN: r214259", "tree": {"sha": "cdfc8507e0a36ca76e879d398976c0fa9102afb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdfc8507e0a36ca76e879d398976c0fa9102afb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f630fc6ab056ba999b808a0784107320bbebb445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f630fc6ab056ba999b808a0784107320bbebb445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f630fc6ab056ba999b808a0784107320bbebb445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f630fc6ab056ba999b808a0784107320bbebb445/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95770ca3202ebd8529d202aaf4714343a2c4e14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95770ca3202ebd8529d202aaf4714343a2c4e14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95770ca3202ebd8529d202aaf4714343a2c4e14e"}], "stats": {"total": 85, "additions": 61, "deletions": 24}, "files": [{"sha": "d7b5b1846a2a275bb69d86f6b4872b5fceefd005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -1,3 +1,41 @@\n+2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* debug.h (struct gcc_debug_hooks): Strengthen param 1 of hook\n+\t\"label\" from rtx to rtx_code_label *.  Strengthen param 1 of\n+\t\"var_location\" hook from rtx to rtx_insn *.\n+\t(debug_nothing_rtx): Delete in favor of...\n+\t(debug_nothing_rtx_code_label): New prototype.\n+\t(debug_nothing_rtx_rtx): Delete unused prototype.\n+\t(debug_nothing_rtx_insn): New prototype.\n+\n+\t* final.c (final_scan_insn): Add checked cast to rtx_insn * when\n+\tinvoking debug_hooks->var_location (in two places, one in a NOTE\n+\tcase of a switch statement, the other guarded by a CALL_P\n+\tconditional.  Add checked cast to rtx_code_label * when invoking\n+\tdebug_hooks->label (within CODE_LABEL case of switch statement).\n+\n+\t* dbxout.c (dbx_debug_hooks): Update \"label\" hook from\n+\tdebug_nothing_rtx to debug_nothing_rtx_code_label.  Update\n+\t\"var_location\" from debug_nothing_rtx to debug_nothing_rtx_insn.\n+\t(xcoff_debug_hooks): Likewise.\n+\t* debug.c (do_nothing_debug_hooks): Likewise.\n+\t(debug_nothing_rtx): Delete in favor of...\n+\t(debug_nothing_rtx_insn): New function.\n+\t(debug_nothing_rtx_rtx): Delete unused function.\n+\t(debug_nothing_rtx_code_label): New function.\n+\t* dwarf2out.c (dwarf2_debug_hooks): Update \"label\" hook from\n+\tdebug_nothing_rtx to debug_nothing_rtx_code_label.\n+\t(dwarf2out_var_location): Strengthen param \"loc_note\" from rtx\n+\tto rtx_insn *.\n+\t* sdbout.c (sdb_debug_hooks): Update \"var_location\" hook from\n+\tdebug_nothing_rtx to debug_nothing_rtx_insn.\n+\t(sdbout_label): Strengthen param \"insn\" from rtx to\n+\trtx_code_label *.\n+\t* vmsdbgout.c (vmsdbg_debug_hooks): Update \"label\" hook from\n+\tdebug_nothing_rtx to debug_nothing_rtx_code_label.  Update\n+\t\"var_location\" hook from debug_nothing_rtx to\n+\tdebug_nothing_rtx_insn.\n+\n 2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n \n \t* recog.h (insn_output_fn): Update this function typedef to match"}, {"sha": "946f1d15e90cd5ad85106a284c3d425e42a4e960", "filename": "gcc/dbxout.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -371,9 +371,9 @@ const struct gcc_debug_hooks dbx_debug_hooks =\n   debug_nothing_tree_tree_tree_bool,\t /* imported_module_or_decl */\n   debug_nothing_tree,\t\t         /* deferred_inline_function */\n   debug_nothing_tree,\t\t         /* outlining_inline_function */\n-  debug_nothing_rtx,\t\t         /* label */\n+  debug_nothing_rtx_code_label,\t         /* label */\n   dbxout_handle_pch,\t\t         /* handle_pch */\n-  debug_nothing_rtx,\t\t         /* var_location */\n+  debug_nothing_rtx_insn,\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n   debug_nothing_tree_tree,\t\t /* set_name */\n   0,                                     /* start_end_main_source_file */\n@@ -407,9 +407,9 @@ const struct gcc_debug_hooks xcoff_debug_hooks =\n   debug_nothing_tree_tree_tree_bool,\t /* imported_module_or_decl */\n   debug_nothing_tree,\t\t         /* deferred_inline_function */\n   debug_nothing_tree,\t\t         /* outlining_inline_function */\n-  debug_nothing_rtx,\t\t         /* label */\n+  debug_nothing_rtx_code_label,\t         /* label */\n   dbxout_handle_pch,\t\t         /* handle_pch */\n-  debug_nothing_rtx,\t\t         /* var_location */\n+  debug_nothing_rtx_insn,\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n   debug_nothing_tree_tree,\t         /* set_name */\n   0,                                     /* start_end_main_source_file */"}, {"sha": "dba068cc24adc88b1072324c019df2b498b862c7", "filename": "gcc/debug.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -48,9 +48,9 @@ const struct gcc_debug_hooks do_nothing_debug_hooks =\n   debug_nothing_tree_tree_tree_bool,\t /* imported_module_or_decl */\n   debug_nothing_tree,\t\t         /* deferred_inline_function */\n   debug_nothing_tree,\t\t         /* outlining_inline_function */\n-  debug_nothing_rtx,\t\t         /* label */\n+  debug_nothing_rtx_code_label,\t         /* label */\n   debug_nothing_int,\t\t         /* handle_pch */\n-  debug_nothing_rtx,\t\t         /* var_location */\n+  debug_nothing_rtx_insn,\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n   debug_nothing_tree_tree,\t\t /* set_name */\n   0,                                     /* start_end_main_source_file */\n@@ -91,13 +91,12 @@ debug_true_const_tree (const_tree block ATTRIBUTE_UNUSED)\n }\n \n void\n-debug_nothing_rtx (rtx insn ATTRIBUTE_UNUSED)\n+debug_nothing_rtx_insn (rtx_insn *insn ATTRIBUTE_UNUSED)\n {\n }\n \n void\n-debug_nothing_rtx_rtx (rtx insn ATTRIBUTE_UNUSED,\n-\t\t       rtx new_insn ATTRIBUTE_UNUSED)\n+debug_nothing_rtx_code_label (rtx_code_label *label ATTRIBUTE_UNUSED)\n {\n }\n "}, {"sha": "3ac7976c5de7e8cd90249de9100976f26750b41b", "filename": "gcc/debug.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -119,14 +119,14 @@ struct gcc_debug_hooks\n \n   /* Called from final_scan_insn for any CODE_LABEL insn whose\n      LABEL_NAME is non-null.  */\n-  void (* label) (rtx);\n+  void (* label) (rtx_code_label *);\n \n   /* Called after the start and before the end of writing a PCH file.\n      The parameter is 0 if after the start, 1 if before the end.  */\n   void (* handle_pch) (unsigned int);\n \n   /* Called from final_scan_insn for any NOTE_INSN_VAR_LOCATION note.  */\n-  void (* var_location) (rtx);\n+  void (* var_location) (rtx_insn *);\n \n   /* Called from final_scan_insn if there is a switch between hot and cold\n      text sections.  */\n@@ -160,8 +160,8 @@ extern void debug_nothing_tree_tree (tree, tree);\n extern void debug_nothing_tree_int (tree, int);\n extern void debug_nothing_tree_tree_tree_bool (tree, tree, tree, bool);\n extern bool debug_true_const_tree (const_tree);\n-extern void debug_nothing_rtx (rtx);\n-extern void debug_nothing_rtx_rtx (rtx, rtx);\n+extern void debug_nothing_rtx_insn (rtx_insn *);\n+extern void debug_nothing_rtx_code_label (rtx_code_label *);\n \n /* Hooks for various debug formats.  */\n extern const struct gcc_debug_hooks do_nothing_debug_hooks;"}, {"sha": "7428c9558ad25862164b390980698745bfd9489d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -2434,7 +2434,7 @@ static void dwarf2out_imported_module_or_decl (tree, tree, tree, bool);\n static void dwarf2out_imported_module_or_decl_1 (tree, tree, tree,\n \t\t\t\t\t\t dw_die_ref);\n static void dwarf2out_abstract_function (tree);\n-static void dwarf2out_var_location (rtx);\n+static void dwarf2out_var_location (rtx_insn *);\n static void dwarf2out_begin_function (tree);\n static void dwarf2out_end_function (unsigned int);\n static void dwarf2out_set_name (tree, tree);\n@@ -2474,7 +2474,7 @@ const struct gcc_debug_hooks dwarf2_debug_hooks =\n      emitting the abstract description of inline functions until\n      something tries to reference them.  */\n   dwarf2out_abstract_function,\t/* outlining_inline_function */\n-  debug_nothing_rtx,\t\t/* label */\n+  debug_nothing_rtx_code_label,\t/* label */\n   debug_nothing_int,\t\t/* handle_pch */\n   dwarf2out_var_location,\n   dwarf2out_switch_text_section,\n@@ -21285,7 +21285,7 @@ static unsigned int first_loclabel_num_not_at_text_label;\n    our lookup table.  */\n \n static void\n-dwarf2out_var_location (rtx loc_note)\n+dwarf2out_var_location (rtx_insn *loc_note)\n {\n   char loclabel[MAX_ARTIFICIAL_LABEL_BYTES + 2];\n   struct var_loc_node *newloc;"}, {"sha": "2a3d6d2fa152ddb4719b831a6560f51fec8b99c6", "filename": "gcc/final.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -2343,7 +2343,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n \tcase NOTE_INSN_VAR_LOCATION:\n \tcase NOTE_INSN_CALL_ARG_LOCATION:\n \t  if (!DECL_IGNORED_P (current_function_decl))\n-\t    debug_hooks->var_location (insn);\n+\t    debug_hooks->var_location (as_a <rtx_insn *> (insn));\n \t  break;\n \n \tdefault:\n@@ -2381,7 +2381,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n       CC_STATUS_INIT;\n \n       if (!DECL_IGNORED_P (current_function_decl) && LABEL_NAME (insn))\n-\tdebug_hooks->label (insn);\n+\tdebug_hooks->label (as_a <rtx_code_label *> (insn));\n \n       app_disable ();\n \n@@ -2984,7 +2984,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n \t\t  assemble_external (t);\n \t      }\n \t    if (!DECL_IGNORED_P (current_function_decl))\n-\t      debug_hooks->var_location (insn);\n+\t      debug_hooks->var_location (as_a <rtx_insn *> (insn));\n \t  }\n \n \t/* Output assembler code from the template.  */"}, {"sha": "7b6f4573e05b6b036f7121f68182da841f0d3064", "filename": "gcc/sdbout.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -125,7 +125,7 @@ static void sdbout_end_prologue\t\t(unsigned int, const char *);\n static void sdbout_begin_function\t(tree);\n static void sdbout_end_function\t\t(unsigned int);\n static void sdbout_toplevel_data\t(tree);\n-static void sdbout_label\t\t(rtx);\n+static void sdbout_label\t\t(rtx_code_label *);\n static char *gen_fake_label\t\t(void);\n static int plain_type\t\t\t(tree);\n static int template_name_p\t\t(tree);\n@@ -302,7 +302,7 @@ const struct gcc_debug_hooks sdb_debug_hooks =\n   debug_nothing_tree,\t\t         /* outlining_inline_function */\n   sdbout_label,\t\t\t         /* label */\n   debug_nothing_int,\t\t         /* handle_pch */\n-  debug_nothing_rtx,\t\t         /* var_location */\n+  debug_nothing_rtx_insn,\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n   debug_nothing_tree_tree,\t\t /* set_name */\n   0,                                     /* start_end_main_source_file */\n@@ -1597,7 +1597,7 @@ sdbout_end_epilogue (unsigned int line ATTRIBUTE_UNUSED,\n    is present.  */\n \n static void\n-sdbout_label (rtx insn)\n+sdbout_label (rtx_code_label *insn)\n {\n   PUT_SDB_DEF (LABEL_NAME (insn));\n   PUT_SDB_VAL (insn);"}, {"sha": "463a4182622a7aef0f8366b54b56dfff790df0da", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f630fc6ab056ba999b808a0784107320bbebb445/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=f630fc6ab056ba999b808a0784107320bbebb445", "patch": "@@ -193,9 +193,9 @@ const struct gcc_debug_hooks vmsdbg_debug_hooks\n    debug_nothing_tree_tree_tree_bool, /* imported_module_or_decl */\n    debug_nothing_tree,\t\t  /* deferred_inline_function */\n    vmsdbgout_abstract_function,\n-   debug_nothing_rtx,\t\t  /* label */\n+   debug_nothing_rtx_code_label,  /* label */\n    debug_nothing_int,\t\t  /* handle_pch */\n-   debug_nothing_rtx,\t\t  /* var_location */\n+   debug_nothing_rtx_insn,\t  /* var_location */\n    debug_nothing_void,            /* switch_text_section */\n    debug_nothing_tree_tree,\t  /* set_name */\n    0,                             /* start_end_main_source_file */"}]}