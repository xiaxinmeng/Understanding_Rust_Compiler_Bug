{"sha": "b37a5b979a275375322787973b7d6fb620a71ccf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM3YTViOTc5YTI3NTM3NTMyMjc4Nzk3M2I3ZDZmYjYyMGE3MWNjZg==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2016-12-13T16:18:36Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2016-12-13T16:18:36Z"}, "message": "rs6000-c.c: Add built-in support for vector float vec_pack (vector double...\n\ngcc/ChangeLog:\n\n2016-12-13  Carl Love  <cel@us.ibm.com>\n\n   * config/rs6000/rs6000-c.c: Add built-in support for\n   vector float vec_pack (vector double, vector double)\n   vector double vec_sld (vector double, vector double)\n   * config/rs6000/rs6000.c: Add icode check for vsldoi_v2df to allow\n   4-bit unsigned literal.\n   * config/rs6000/rs6000-builtin.def: Add definition for VSLDOI_2DF\n   * doc/extend.texi: Update the built-in documentation file for the\n   new powerpc vec_pack and vec_sld built-ins.\n\ngcc/testsuite/ChangeLog:\n\n2016-12-13 Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3.c: Add new test of the test suite\n\tfile.\n\t* gcc.target/powerpc/builtins-3-p8.c: Add new test of the test suite\n\tfile.\n\nFrom-SVN: r243612", "tree": {"sha": "3881e42ade1d1dc193d8fc5fc77126ddc6c27b97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3881e42ade1d1dc193d8fc5fc77126ddc6c27b97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b37a5b979a275375322787973b7d6fb620a71ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37a5b979a275375322787973b7d6fb620a71ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b37a5b979a275375322787973b7d6fb620a71ccf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37a5b979a275375322787973b7d6fb620a71ccf/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f75d6ebf81833cac96596108c2d56d0c6cdb2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f75d6ebf81833cac96596108c2d56d0c6cdb2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f75d6ebf81833cac96596108c2d56d0c6cdb2a0"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "c946865ee72dca628db690471b348c2103ac70e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -1,3 +1,14 @@\n+2016-12-13  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c.c: Add built-in support for\n+\tvector float vec_pack (vector double, vector double)\n+\tvector double vec_sld (vector double, vector double)\n+\t* config/rs6000/rs6000.c: Add icode check for vsldoi_v2df to allow\n+\t4-bit unsigned literal.\n+\t* config/rs6000/rs6000-builtin.def: Add definition for VSLDOI_2DF\n+\t* doc/extend.texi: Update the built-in documentation file for the\n+\tnew powerpc vec_pack and vec_sld built-ins.\n+\n 2016-12-13  Martin Liska  <mliska@suse.cz>\n \n \t* sanopt.c (sanopt_optimize_walker): Set contains_asan_mark."}, {"sha": "68f0936612b17014c5d876bb51a7b32ae2c3675b", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -958,6 +958,7 @@ BU_ALTIVEC_3 (VSLDOI_16QI,    \"vsldoi_16qi\",    CONST, \taltivec_vsldoi_v16qi)\n BU_ALTIVEC_3 (VSLDOI_8HI,     \"vsldoi_8hi\",     CONST, \taltivec_vsldoi_v8hi)\n BU_ALTIVEC_3 (VSLDOI_4SI,     \"vsldoi_4si\",     CONST, \taltivec_vsldoi_v4si)\n BU_ALTIVEC_3 (VSLDOI_4SF,     \"vsldoi_4sf\",     CONST, \taltivec_vsldoi_v4sf)\n+BU_ALTIVEC_3 (VSLDOI_2DF,     \"vsldoi_2df\",     CONST, \taltivec_vsldoi_v2df)\n \n /* Altivec DST builtins.  */\n BU_ALTIVEC_D (DST,\t      \"dst\",\t\tMISC,  \taltivec_dst)"}, {"sha": "bf01a119bf8125e2c4a260d3b44285b3929e8bfd", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -2118,6 +2118,8 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI, 0 },\n   { ALTIVEC_BUILTIN_VEC_PACK, P8V_BUILTIN_VPKUDUM,\n     RS6000_BTI_bool_V4SI, RS6000_BTI_bool_V2DI, RS6000_BTI_bool_V2DI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_PACK, P8V_BUILTIN_VPKUDUM,\n+    RS6000_BTI_V4SF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0 },\n   { ALTIVEC_BUILTIN_VEC_VPKUWUM, ALTIVEC_BUILTIN_VPKUWUM,\n     RS6000_BTI_V8HI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VPKUWUM, ALTIVEC_BUILTIN_VPKUWUM,\n@@ -3193,6 +3195,8 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_NOT_OPAQUE },\n   { ALTIVEC_BUILTIN_VEC_SLD, ALTIVEC_BUILTIN_VSLDOI_16QI,\n     RS6000_BTI_bool_V16QI, RS6000_BTI_bool_V16QI, RS6000_BTI_bool_V16QI, RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLD, ALTIVEC_BUILTIN_VSLDOI_2DF,\n+    RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_NOT_OPAQUE },\n   { ALTIVEC_BUILTIN_VEC_ST, ALTIVEC_BUILTIN_STVX_V2DF,\n     RS6000_BTI_void, RS6000_BTI_V2DF, RS6000_BTI_INTSI, ~RS6000_BTI_V2DF },\n   { ALTIVEC_BUILTIN_VEC_ST, ALTIVEC_BUILTIN_STVX_V2DI,"}, {"sha": "27bae7145ef0884584f1c3c5ae7baefcc4f540b0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -15105,6 +15105,7 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree exp, rtx target)\n      with identical values.  We'd never reach here at runtime in\n      this case.  */\n   if (icode == CODE_FOR_altivec_vsldoi_v4sf\n+      || icode == CODE_FOR_altivec_vsldoi_v2df\n       || icode == CODE_FOR_altivec_vsldoi_v4si\n       || icode == CODE_FOR_altivec_vsldoi_v8hi\n       || icode == CODE_FOR_altivec_vsldoi_v16qi)"}, {"sha": "10913d507824c0a99f66e2c9c4854d1777015bb2", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -16517,6 +16517,8 @@ vector unsigned char vec_vslb (vector unsigned char,\n                                vector unsigned char);\n \n vector float vec_sld (vector float, vector float, const int);\n+vector double vec_sld (vector double, vector double, const int);\n+\n vector signed int vec_sld (vector signed int,\n                            vector signed int,\n                            const int);\n@@ -17749,6 +17751,7 @@ vector int vec_pack (vector long long, vector long long);\n vector unsigned int vec_pack (vector unsigned long long,\n                               vector unsigned long long);\n vector bool int vec_pack (vector bool long long, vector bool long long);\n+vector float vec_pack (vector double, vector double);\n \n vector int vec_packs (vector long long, vector long long);\n vector unsigned int vec_packs (vector unsigned long long,"}, {"sha": "abc687c5b2910eed596796b06e78ddf5b7f79fd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -1,3 +1,10 @@\n+2016-12-13 Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3.c: Add new test of the test suite\n+\tfile.\n+\t* gcc.target/powerpc/builtins-3-p8.c: Add new test of the test suite\n+\tfile.\n+\n 2016-12-13  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/78428"}, {"sha": "8acdd896dc9ab5fa983440d92be7b49daae52808", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p8.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -10,8 +10,16 @@ test_eq_long_long (vector bool long long x, vector bool long long y)\n \treturn vec_cmpeq (x, y);\n }\n \n+vector float\n+test_pack_float (vector double x, vector double y)\n+{\n+  return vec_pack (x, y);\n+}\n+\n /* Expected test results:\n \n-     test_eq_long_long          1 vcmpequd inst */\n+     test_eq_long_long          1 vcmpequd inst\n+     test_pack_float            1 vpkudum inst */\n \n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpkudum\"  1 } } */"}, {"sha": "f070bf3fcddc3432423c846043fdcd1f7cd425a6", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37a5b979a275375322787973b7d6fb620a71ccf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=b37a5b979a275375322787973b7d6fb620a71ccf", "patch": "@@ -22,13 +22,20 @@ test_eq_int (vector bool int x, vector bool int y)\n \treturn vec_cmpeq (x, y);\n }\n \n+vector double\n+test_shift_left_double (vector double x, vector double y)\n+{\n+\treturn vec_sld (x, y, /* shift_by */ 10);\n+}\n \n /* Expected test results:\n \n      test_eq_char              1 vcmpequb inst\n      test_eq_short             1 vcmpequh inst\n-     test_eq_int               1 vcmpequw inst */\n+     test_eq_int               1 vcmpequw inst\n+     test_shift_left_double    1 vsldoi inst */\n \n /* { dg-final { scan-assembler-times \"vcmpequb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequh\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsldoi\"   1 } } */"}]}