{"sha": "857d2849a1e2d7ddc2337dedcc66b8d3248f2027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU3ZDI4NDlhMWUyZDdkZGMyMzM3ZGVkY2M2NmI4ZDMyNDhmMjAyNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-09T00:23:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-09T00:23:30Z"}, "message": "(int_fits_type_p): Properly handle case of variable bounds for types.\n\nFrom-SVN: r6508", "tree": {"sha": "352d7ae59f5f24278a25ccc6e44fbd93765db92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/352d7ae59f5f24278a25ccc6e44fbd93765db92e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/857d2849a1e2d7ddc2337dedcc66b8d3248f2027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857d2849a1e2d7ddc2337dedcc66b8d3248f2027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/857d2849a1e2d7ddc2337dedcc66b8d3248f2027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857d2849a1e2d7ddc2337dedcc66b8d3248f2027/comments", "author": null, "committer": null, "parents": [{"sha": "2628709d5a63f2aab529662edbfa0f6d07d7e056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2628709d5a63f2aab529662edbfa0f6d07d7e056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2628709d5a63f2aab529662edbfa0f6d07d7e056"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "bd14895e186452a4eb44ae24f0b26b422fa9268a", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857d2849a1e2d7ddc2337dedcc66b8d3248f2027/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857d2849a1e2d7ddc2337dedcc66b8d3248f2027/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=857d2849a1e2d7ddc2337dedcc66b8d3248f2027", "patch": "@@ -3606,13 +3606,15 @@ int_fits_type_p (c, type)\n      tree c, type;\n {\n   if (TREE_UNSIGNED (type))\n-    return (!INT_CST_LT_UNSIGNED (TYPE_MAX_VALUE (type), c)\n-\t    && !INT_CST_LT_UNSIGNED (c, TYPE_MIN_VALUE (type))\n-\t    && (TREE_INT_CST_HIGH (c) >= 0 || TREE_UNSIGNED (TREE_TYPE (c))));\n+    return (! (TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST\n+\t       && INT_CST_LT_UNSIGNED (TYPE_MAX_VALUE (type), c))\n+\t    && ! (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST\n+\t\t  && INT_CST_LT_UNSIGNED (c, TYPE_MIN_VALUE (type))));\n   else\n-    return (!INT_CST_LT (TYPE_MAX_VALUE (type), c)\n-\t    && !INT_CST_LT (c, TYPE_MIN_VALUE (type))\n-\t    && (TREE_INT_CST_HIGH (c) >= 0 || !TREE_UNSIGNED (TREE_TYPE (c))));\n+    return (! (TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST\n+\t       && INT_CST_LT (TYPE_MAX_VALUE (type), c))\n+\t    && ! (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST\n+\t\t  && INT_CST_LT (c, TYPE_MIN_VALUE (type))));\n }\n \n /* Return the innermost context enclosing DECL that is"}]}