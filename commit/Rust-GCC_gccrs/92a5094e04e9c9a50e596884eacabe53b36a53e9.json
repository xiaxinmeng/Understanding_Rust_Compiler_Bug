{"sha": "92a5094e04e9c9a50e596884eacabe53b36a53e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhNTA5NGUwNGU5YzlhNTBlNTk2ODg0ZWFjYWJlNTNiMzZhNTNlOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-12-09T14:25:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-12-09T14:25:09Z"}, "message": "re PR tree-optimization/64193 (Decreased performance after r173250)\n\n2014-12-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/64193\n\t* tree-ssa-alias.c (walk_non_aliased_vuses): Add valueize parameter\n\tand valueize the VUSE before looking up the def stmt.\n\t* tree-ssa-alias.h (walk_non_aliased_vuses): Adjust prototype.\n\t* tree-ssa-sccvn.c (vn_reference_lookup_pieces): Pass vn_valueize\n\tto walk_non_aliased_vuses.\n\t(vn_reference_lookup): Likewise.\n\t* tree-ssa-dom.c (lookup_avail_expr): Pass NULL as valueize\n\tcallback to walk_non_aliased_vuses.\n\n\t* gcc.dg/tree-ssa/ssa-fre-43.c: New testcase.\n\nFrom-SVN: r218515", "tree": {"sha": "b2b878ed94eea9cd92e69a9449a9a13df6159253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2b878ed94eea9cd92e69a9449a9a13df6159253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a5094e04e9c9a50e596884eacabe53b36a53e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a5094e04e9c9a50e596884eacabe53b36a53e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a5094e04e9c9a50e596884eacabe53b36a53e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a5094e04e9c9a50e596884eacabe53b36a53e9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0"}], "stats": {"total": 63, "additions": 60, "deletions": 3}, "files": [{"sha": "75312341824bf6297036e7d4d2563fb10d28f1d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -1,3 +1,15 @@\n+2014-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64193\n+\t* tree-ssa-alias.c (walk_non_aliased_vuses): Add valueize parameter\n+\tand valueize the VUSE before looking up the def stmt.\n+\t* tree-ssa-alias.h (walk_non_aliased_vuses): Adjust prototype.\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_pieces): Pass vn_valueize\n+\tto walk_non_aliased_vuses.\n+\t(vn_reference_lookup): Likewise.\n+\t* tree-ssa-dom.c (lookup_avail_expr): Pass NULL as valueize\n+\tcallback to walk_non_aliased_vuses.\n+\n 2014-12-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/64199"}, {"sha": "ed0315622f2e5993aa0ffe9fc7d9dfb9074217b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -1,3 +1,8 @@\n+2014-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64193\n+\t* gcc.dg/tree-ssa/ssa-fre-43.c: New testcase.\n+\n 2014-12-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/64199"}, {"sha": "e79e7c402c8a81a8ef58ce72c4a540c0d99427b8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-43.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-43.c?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -0,0 +1,29 @@\n+/* PR tree-optimization/64193 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n+\n+double T,T2,E1[5];\n+int J;\n+\n+void\n+PA(double E[])\n+{\n+ J = 0;\n+\n+L10:\n+ E[1] = ( E[1] + E[2] + E[3] - E[4]) * T;\n+ E[2] = ( E[1] + E[2] - E[3] + E[4]) * T;\n+ E[3] = ( E[1] - E[2] + E[3] + E[4]) * T;\n+ E[4] = (-E[1] + E[2] + E[3] + E[4]) / T2;\n+ J += 1;\n+\n+ if (J < 6)\n+  goto L10;\n+}\n+\n+/* We should remove 15 dead loads, fully propagating their replacements\n+   with exactly 4 loads and 4 stores from/to E remaining.  */\n+\n+/* { dg-final { scan-tree-dump-times \"Removing dead stmt\" 15 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-not \"Not changing value number\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "5ad257629204287dab61960acceac2229d0ff0d4", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -2632,12 +2632,18 @@ get_continuation_for_phi (gimple phi, ao_ref *ref,\n    If TRANSLATE returns NULL the walk continues and TRANSLATE is supposed\n    to adjust REF and *DATA to make that valid.\n \n+   VALUEIZE if non-NULL is called with the next VUSE that is considered\n+   and return value is substituted for that.  This can be used to\n+   implement optimistic value-numbering for example.  Note that the\n+   VUSE argument is assumed to be valueized already.\n+\n    TODO: Cache the vector of equivalent vuses per ref, vuse pair.  */\n \n void *\n walk_non_aliased_vuses (ao_ref *ref, tree vuse,\n \t\t\tvoid *(*walker)(ao_ref *, tree, unsigned int, void *),\n \t\t\tvoid *(*translate)(ao_ref *, tree, void *, bool),\n+\t\t\ttree (*valueize)(tree),\n \t\t\tvoid *data)\n {\n   bitmap visited = NULL;\n@@ -2663,6 +2669,8 @@ walk_non_aliased_vuses (ao_ref *ref, tree vuse,\n       else if (res != NULL)\n \tbreak;\n \n+      if (valueize)\n+\tvuse = valueize (vuse);\n       def_stmt = SSA_NAME_DEF_STMT (vuse);\n       if (gimple_nop_p (def_stmt))\n \tbreak;"}, {"sha": "ca6390a979384b64fff3bb915b12180621fe8f6a", "filename": "gcc/tree-ssa-alias.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-alias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-alias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.h?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -124,6 +124,7 @@ extern void *walk_non_aliased_vuses (ao_ref *, tree,\n \t\t\t\t     void *(*)(ao_ref *, tree,\n \t\t\t\t\t       unsigned int, void *),\n \t\t\t\t     void *(*)(ao_ref *, tree, void *, bool),\n+\t\t\t\t     tree (*)(tree),\n \t\t\t\t     void *);\n extern unsigned int walk_aliased_vdefs (ao_ref *, tree,\n \t\t\t\t\tbool (*)(ao_ref *, tree, void *),"}, {"sha": "bd37226c856a80acc941ef48fa8dc934e015c730", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -2635,7 +2635,7 @@ lookup_avail_expr (gimple stmt, bool insert)\n \t    && TREE_CODE (gimple_assign_lhs (stmt)) == SSA_NAME\n \t    && (ao_ref_init (&ref, gimple_assign_rhs1 (stmt)), true)\n \t    && walk_non_aliased_vuses (&ref, vuse2,\n-\t\t\t\t       vuse_eq, NULL, vuse1) != NULL))\n+\t\t\t\t       vuse_eq, NULL, NULL, vuse1) != NULL))\n \t{\n \t  struct expr_hash_elt *element2 = XNEW (struct expr_hash_elt);\n \t  *element2 = element;"}, {"sha": "d7a4742caf6bd90d1e73181342e1dd06c90ed9c8", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a5094e04e9c9a50e596884eacabe53b36a53e9/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=92a5094e04e9c9a50e596884eacabe53b36a53e9", "patch": "@@ -2160,7 +2160,8 @@ vn_reference_lookup_pieces (tree vuse, alias_set_type set, tree type,\n \t*vnresult =\n \t  (vn_reference_t)walk_non_aliased_vuses (&r, vr1.vuse,\n \t\t\t\t\t\t  vn_reference_lookup_2,\n-\t\t\t\t\t\t  vn_reference_lookup_3, &vr1);\n+\t\t\t\t\t\t  vn_reference_lookup_3,\n+\t\t\t\t\t\t  vn_valueize, &vr1);\n       gcc_checking_assert (vr1.operands == shared_lookup_references);\n     }\n \n@@ -2212,7 +2213,8 @@ vn_reference_lookup (tree op, tree vuse, vn_lookup_kind kind,\n       wvnresult =\n \t(vn_reference_t)walk_non_aliased_vuses (&r, vr1.vuse,\n \t\t\t\t\t\tvn_reference_lookup_2,\n-\t\t\t\t\t\tvn_reference_lookup_3, &vr1);\n+\t\t\t\t\t\tvn_reference_lookup_3,\n+\t\t\t\t\t\tvn_valueize, &vr1);\n       gcc_checking_assert (vr1.operands == shared_lookup_references);\n       if (wvnresult)\n \t{"}]}