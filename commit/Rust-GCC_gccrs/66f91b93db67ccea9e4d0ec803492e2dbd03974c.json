{"sha": "66f91b93db67ccea9e4d0ec803492e2dbd03974c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZmOTFiOTNkYjY3Y2NlYTllNGQwZWM4MDM0OTJlMmRiZDAzOTc0Yw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "ook@ucw.cz", "date": "2008-03-31T14:19:52Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2008-03-31T14:19:52Z"}, "message": "re PR rtl-optimization/35729 (const volatile variable access incorrectly hoisted out of loop)\n\n\tPR rtl-optimization/35729\n\t* loop-invariant.c (check_maybe_invariant): Disallow volatile memory\n\treferences.\n\n\t* gcc.dg/pr35729.c: New test.\n\nFrom-SVN: r133755", "tree": {"sha": "ffad40ad79ed9653b2a213a4f8b639c6da089e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffad40ad79ed9653b2a213a4f8b639c6da089e67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66f91b93db67ccea9e4d0ec803492e2dbd03974c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f91b93db67ccea9e4d0ec803492e2dbd03974c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f91b93db67ccea9e4d0ec803492e2dbd03974c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f91b93db67ccea9e4d0ec803492e2dbd03974c/comments", "author": {"login": "rakdver", "id": 20416833, "node_id": "MDQ6VXNlcjIwNDE2ODMz", "avatar_url": "https://avatars.githubusercontent.com/u/20416833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rakdver", "html_url": "https://github.com/rakdver", "followers_url": "https://api.github.com/users/rakdver/followers", "following_url": "https://api.github.com/users/rakdver/following{/other_user}", "gists_url": "https://api.github.com/users/rakdver/gists{/gist_id}", "starred_url": "https://api.github.com/users/rakdver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rakdver/subscriptions", "organizations_url": "https://api.github.com/users/rakdver/orgs", "repos_url": "https://api.github.com/users/rakdver/repos", "events_url": "https://api.github.com/users/rakdver/events{/privacy}", "received_events_url": "https://api.github.com/users/rakdver/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b20c50ffe1de0c65fc196825236387da0b5ba34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b20c50ffe1de0c65fc196825236387da0b5ba34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b20c50ffe1de0c65fc196825236387da0b5ba34"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "a78eae84de0674a2407a51d4ad73e75cb0b6749d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66f91b93db67ccea9e4d0ec803492e2dbd03974c", "patch": "@@ -1,3 +1,9 @@\n+2008-03-31  Zdenek Dvorak  <ook@ucw.cz>\n+\n+\tPR rtl-optimization/35729\n+\t* loop-invariant.c (check_maybe_invariant): Disallow volatile memory\n+\treferences.\n+\n 2008-03-31  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/32000"}, {"sha": "64c16a98423887ad880c24c1875f4dd8b4b93b13", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=66f91b93db67ccea9e4d0ec803492e2dbd03974c", "patch": "@@ -206,7 +206,7 @@ check_maybe_invariant (rtx x)\n \n       /* Just handle the most trivial case where we load from an unchanging\n \t location (most importantly, pic tables).  */\n-      if (MEM_READONLY_P (x))\n+      if (MEM_READONLY_P (x) && !MEM_VOLATILE_P (x))\n \tbreak;\n \n       return false;"}, {"sha": "6c208d90ef9a8a264afd8a44520d1ba91d766c9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66f91b93db67ccea9e4d0ec803492e2dbd03974c", "patch": "@@ -1,3 +1,8 @@\n+2008-03-31  Zdenek Dvorak  <ook@ucw.cz>\n+\n+\tPR rtl-optimization/35729\n+\t* gcc.dg/pr35729.c: New test.\n+\n 2008-03-31  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/32000"}, {"sha": "3ed40f413bc5578ed34a2acde6fb36cf7e5344d0", "filename": "gcc/testsuite/gcc.dg/pr35729.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35729.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f91b93db67ccea9e4d0ec803492e2dbd03974c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35729.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35729.c?ref=66f91b93db67ccea9e4d0ec803492e2dbd03974c", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fdump-rtl-loop2_invariant\" } */\n+\n+const volatile int g_361 = 3L;\n+volatile int g_2 = 0L;\n+void func_1 (void)\n+{\n+  for (g_2 = 0; g_2 > 10; g_2++)\n+    {\n+      int l_357 = g_361;\n+    }\n+}\n+\n+/* { dg-final { scan-rtl-dump-times \"Decided to move invariant\" 0 \"loop2_invariant\" } } */\n+/* { dg-final { cleanup-rtl-dump \"loop2_invariant\" } } */"}]}