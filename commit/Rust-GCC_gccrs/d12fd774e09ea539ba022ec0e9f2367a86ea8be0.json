{"sha": "d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyZmQ3NzRlMDllYTUzOWJhMDIyZWMwZTlmMjM2N2E4NmVhOGJlMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-06-05T10:01:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-05T10:01:49Z"}, "message": "re PR tree-optimization/86047 (ICE in for_each_index, at tree-ssa-loop.c:647)\n\n2018-06-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/86047\n\t* tree-ssa-loop.c (for_each_index): Glob handling of all\n\tdecls and constants and really handle all of them.\n\n\t* gcc.dg/pr86047.c: New testcase.\n\nFrom-SVN: r261192", "tree": {"sha": "3970176d485d03966c756dc113eed9ff859b404c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3970176d485d03966c756dc113eed9ff859b404c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12b2b9103a52b909f5df5ce20e3761f3f1d27211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b2b9103a52b909f5df5ce20e3761f3f1d27211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12b2b9103a52b909f5df5ce20e3761f3f1d27211"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "f67d2bbb8926090141b58e574fb61f06281f9d5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "patch": "@@ -1,3 +1,9 @@\n+2018-06-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86047\n+\t* tree-ssa-loop.c (for_each_index): Glob handling of all\n+\tdecls and constants and really handle all of them.\n+\n 2018-06-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/81497"}, {"sha": "1ad08c6e34cefc0eeccf41753a3da747b4f4ed63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "patch": "@@ -1,3 +1,8 @@\n+2018-06-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/86047\n+\t* gcc.dg/pr86047.c: New testcase.\n+\n 2018-06-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/81497"}, {"sha": "6192d2d4a0deb4b48ade942e8af014180eb52ac3", "filename": "gcc/testsuite/gcc.dg/pr86047.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86047.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86047.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86047.c?ref=d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void f (int, int);\n+void g (int a, int b)\n+{\n+  int i, j;\n+  for (i = a; i <= b; ++i)\n+    __builtin_memcpy (g, f, 6);\n+  for (j = a; j <= b; ++j)\n+    f(j, i);\n+}\n+"}, {"sha": "b2a7d18b601950bd0cb84b4aee6e50c0ae16fff4", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12fd774e09ea539ba022ec0e9f2367a86ea8be0/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=d12fd774e09ea539ba022ec0e9f2367a86ea8be0", "patch": "@@ -610,17 +610,6 @@ for_each_index (tree *addr_p, bool (*cbck) (tree, tree *, void *), void *data)\n \t    return false;\n \t  break;\n \n-\tcase VAR_DECL:\n-\tcase PARM_DECL:\n-\tcase CONST_DECL:\n-\tcase STRING_CST:\n-\tcase RESULT_DECL:\n-\tcase VECTOR_CST:\n-\tcase COMPLEX_CST:\n-\tcase INTEGER_CST:\n-\tcase POLY_INT_CST:\n-\tcase REAL_CST:\n-\tcase FIXED_CST:\n \tcase CONSTRUCTOR:\n \t  return true;\n \n@@ -644,6 +633,9 @@ for_each_index (tree *addr_p, bool (*cbck) (tree, tree *, void *), void *data)\n \t  return true;\n \n \tdefault:\n+\t  if (DECL_P (*addr_p)\n+\t      || CONSTANT_CLASS_P (*addr_p))\n+\t    return true;\n     \t  gcc_unreachable ();\n \t}\n     }"}]}