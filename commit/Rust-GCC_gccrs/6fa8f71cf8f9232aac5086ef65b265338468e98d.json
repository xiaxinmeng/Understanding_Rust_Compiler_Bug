{"sha": "6fa8f71cf8f9232aac5086ef65b265338468e98d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhOGY3MWNmOGY5MjMyYWFjNTA4NmVmNjViMjY1MzM4NDY4ZTk4ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:13:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:13:47Z"}, "message": "[multiple changes]\n\n2015-10-20  Bob Duff  <duff@adacore.com>\n\n\t* a-coinve.adb, a-contai.adb: Update comments.\n\t* pprint.ads: Minor reformatting.\n\n2015-10-20  Tristan Gingold  <gingold@adacore.com>\n\n\t* env.c, init.c: Handle arm64-darwin like arm-darwin.\n\t* tracebak.c: Handle arm64-darwin.\n\n2015-10-20  Bob Duff  <duff@adacore.com>\n\n\t* s-trasym.adb (Symbolic_Traceback): When giving the traceback\n\tas hexadecimal code addresses, separate by blanks instead of LF.\n\nFrom-SVN: r229039", "tree": {"sha": "ce636ee22f22a65fbe93ce2cc813d6e3a8a4bf72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce636ee22f22a65fbe93ce2cc813d6e3a8a4bf72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fa8f71cf8f9232aac5086ef65b265338468e98d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa8f71cf8f9232aac5086ef65b265338468e98d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa8f71cf8f9232aac5086ef65b265338468e98d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa8f71cf8f9232aac5086ef65b265338468e98d/comments", "author": null, "committer": null, "parents": [{"sha": "36f2e3d311c4679790f29c5cc08c33e1032987d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f2e3d311c4679790f29c5cc08c33e1032987d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f2e3d311c4679790f29c5cc08c33e1032987d3"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "a7a11174cb989d62458a3d1838065619a669f0fe", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -1,3 +1,18 @@\n+2015-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* a-coinve.adb, a-contai.adb: Update comments.\n+\t* pprint.ads: Minor reformatting.\n+\n+2015-10-20  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* env.c, init.c: Handle arm64-darwin like arm-darwin.\n+\t* tracebak.c: Handle arm64-darwin.\n+\n+2015-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* s-trasym.adb (Symbolic_Traceback): When giving the traceback\n+\tas hexadecimal code addresses, separate by blanks instead of LF.\n+\n 2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Generate freeze"}, {"sha": "0f8d04085e4e2e3a840c152e2e74e31005da604e", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -750,7 +750,9 @@ package body Ada.Containers.Indefinite_Vectors is\n    end Finalize;\n \n    procedure Finalize (Object : in out Iterator) is\n+      pragma Warnings (Off);\n       pragma Assert (T_Check); -- not called if check suppressed\n+      pragma Warnings (On);\n    begin\n       Unbusy (Object.Container.TC);\n    end Finalize;"}, {"sha": "dc7c4bee96f0b3424891d3c67737b3f2f54f4b1b", "filename": "gcc/ada/a-contai.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fa-contai.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fa-contai.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-contai.adb?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -37,6 +37,7 @@ package body Ada.Containers is\n \n       procedure Adjust (Control : in out Reference_Control_Type) is\n          pragma Warnings (Off);\n+         --  GNAT warns here if checks are turned off, but assertions on\n          pragma Assert (T_Check); -- not called if check suppressed\n          pragma Warnings (On);\n       begin"}, {"sha": "84698766797a3fb06f1991ace8484654ddd76006", "filename": "gcc/ada/env.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -50,7 +50,7 @@\n #include <stdlib.h>\n #endif\n \n-#if defined (__APPLE__) && !defined (__arm__)\n+#if defined (__APPLE__) && !(defined (__arm__) || defined (__arm64__))\n /* On Darwin, _NSGetEnviron must be used for shared libraries; but it is not\n    available on iOS.  */\n #include <crt_externs.h>\n@@ -211,7 +211,7 @@ __gnat_environ (void)\n #elif defined (__sun__)\n   extern char **_environ;\n   return _environ;\n-#elif defined (__APPLE__) && !defined (__arm__)\n+#elif defined (__APPLE__) && !(defined (__arm__) || defined (__arm64__))\n   return *_NSGetEnviron ();\n #elif ! (defined (__vxworks))\n   extern char **environ;"}, {"sha": "c76ae646b67f809d5e436e3aa1ed1077e2f181bb", "filename": "gcc/ada/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -2234,7 +2234,7 @@ char __gnat_alternate_stack[32 * 1024]; /* 1 * MINSIGSTKSZ */\n    Tell the kernel to re-use alt stack when delivering a signal.  */\n #define\tUC_RESET_ALT_STACK\t0x80000000\n \n-#ifndef __arm__\n+#if !(defined (__arm__) || defined (__arm64__))\n #include <mach/mach_vm.h>\n #include <mach/mach_init.h>\n #include <mach/vm_statistics.h>\n@@ -2244,7 +2244,7 @@ char __gnat_alternate_stack[32 * 1024]; /* 1 * MINSIGSTKSZ */\n static int\n __gnat_is_stack_guard (mach_vm_address_t addr)\n {\n-#ifndef __arm__\n+#if !(defined (__arm__) || defined (__arm64__))\n   kern_return_t kret;\n   vm_region_submap_info_data_64_t info;\n   mach_vm_address_t start;"}, {"sha": "71976ab9e87d31aa1fcca98d3cebac7e7177f6bf", "filename": "gcc/ada/pprint.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fpprint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fpprint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.ads?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2008-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,15 +41,14 @@ package Pprint is\n       with function String_Image (S : String_Id) return String;\n       with function Ident_Image (Expr        : Node_Id;\n                                  Orig_Expr   : Node_Id;\n-                                 Expand_Type : Boolean)\n-                                 return String;\n+                                 Expand_Type : Boolean) return String;\n       --  Will be called for printing N_Identifier and N_Defining_Identifier\n       --  nodes\n       --  ??? Expand_Type argument should be removed\n \n-   function Expression_Image (Expr              : Node_Id;\n-                              Default           : String)\n-                              return String;\n+   function Expression_Image\n+     (Expr    : Node_Id;\n+      Default : String) return String;\n    --  Given a Node for an expression, return a String that is meaningful for\n    --  the programmer. If the expression comes from source, it is copied from\n    --  there."}, {"sha": "b98d1c334dd3a41044102d3ae8a6cc5b09193906", "filename": "gcc/ada/s-trasym.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fs-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Fs-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trasym.adb?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -30,8 +30,8 @@\n ------------------------------------------------------------------------------\n \n --  This is the default implementation for platforms where the full capability\n---  is not supported. It returns tracebacks as lists of LF separated strings of\n---  the form \"0x...\" corresponding to the addresses.\n+--  is not supported. It returns tracebacks as lists of hexadecimal addresses\n+--  of the form \"0x...\".\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we can get\n@@ -67,9 +67,10 @@ package body System.Traceback.Symbolic is\n                Last := Last + 2;\n                Result (Last + 1 .. Last + Img'Length) := Img;\n                Last := Last + Img'Length + 1;\n-               Result (Last) := ASCII.LF;\n+               Result (Last) := ' ';\n             end loop;\n \n+            Result (Last) := ASCII.LF;\n             return Result (1 .. Last);\n          end;\n       end if;"}, {"sha": "3ea9531ba3e276d6d7b009f2ae882c029f802ce1", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa8f71cf8f9232aac5086ef65b265338468e98d/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=6fa8f71cf8f9232aac5086ef65b265338468e98d", "patch": "@@ -274,6 +274,8 @@ __gnat_backtrace (void **array,\n #define PC_ADJUST -4\n #elif defined (__arm__)\n #define PC_ADJUST -2\n+#elif defined (__arm64__)\n+#define PC_ADJUST -4\n #else\n #error Unhandled darwin architecture.\n #endif"}]}