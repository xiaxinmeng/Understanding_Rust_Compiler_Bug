{"sha": "9ef30f834e41445014188b3ac2040b6b779d3d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmMzBmODM0ZTQxNDQ1MDE0MTg4YjNhYzIwNDBiNmI3NzlkM2QyMA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2002-08-15T18:01:30Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2002-08-15T18:01:30Z"}, "message": "unwind.h (_Unwind_Ptr): Make 64 bits on IA64 HP-UX.\n\n\t* gcc/unwind.h (_Unwind_Ptr): Make 64 bits on IA64 HP-UX.\n\t(_Unwind_Internal_Ptr): 32 bit version for use in\n\tread_encoded_value_with_base.\n\t* gcc/unwind-pe.h (read_encoded_value_with_base): Use\n\t_Unwind_Internal_Ptr instead of _Unwind_Ptr in order to get the\n\tright size.\n\nFrom-SVN: r56351", "tree": {"sha": "a82bf7e678d7cddc008d6be93e34e9e9264fe4e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a82bf7e678d7cddc008d6be93e34e9e9264fe4e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef30f834e41445014188b3ac2040b6b779d3d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef30f834e41445014188b3ac2040b6b779d3d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef30f834e41445014188b3ac2040b6b779d3d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef30f834e41445014188b3ac2040b6b779d3d20/comments", "author": null, "committer": null, "parents": [{"sha": "f7043461dbdc6ffc526ab4fa14c420c182599c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7043461dbdc6ffc526ab4fa14c420c182599c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7043461dbdc6ffc526ab4fa14c420c182599c02"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "040889a6029c7b2c8868a98cbdc80a01c8da5ac6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef30f834e41445014188b3ac2040b6b779d3d20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef30f834e41445014188b3ac2040b6b779d3d20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef30f834e41445014188b3ac2040b6b779d3d20", "patch": "@@ -1,3 +1,12 @@\n+2002-08-15  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* gcc/unwind.h (_Unwind_Ptr): Make 64 bits on IA64 HP-UX.\n+\t(_Unwind_Internal_Ptr): 32 bit version for use in\n+\tread_encoded_value_with_base.\n+\t* gcc/unwind-pe.h (read_encoded_value_with_base): Use\n+\t_Unwind_Internal_Ptr instead of _Unwind_Ptr in order to get the\n+\tright size.\n+\n 2002-08-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* loop.c (scan_loop, move_movables, count_one_set): Cast to avoid"}, {"sha": "d32e506667d6544df7033c24b9eec345c00a6802", "filename": "gcc/unwind-pe.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef30f834e41445014188b3ac2040b6b779d3d20/gcc%2Funwind-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef30f834e41445014188b3ac2040b6b779d3d20/gcc%2Funwind-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-pe.h?ref=9ef30f834e41445014188b3ac2040b6b779d3d20", "patch": "@@ -179,37 +179,37 @@ read_encoded_value_with_base (unsigned char encoding, _Unwind_Ptr base,\n     } __attribute__((__packed__));\n \n   union unaligned *u = (union unaligned *) p;\n-  _Unwind_Ptr result;\n+  _Unwind_Internal_Ptr result;\n \n   if (encoding == DW_EH_PE_aligned)\n     {\n-      _Unwind_Ptr a = (_Unwind_Ptr) p;\n+      _Unwind_Internal_Ptr a = (_Unwind_Internal_Ptr) p;\n       a = (a + sizeof (void *) - 1) & - sizeof(void *);\n-      result = *(_Unwind_Ptr *) a;\n+      result = *(_Unwind_Internal_Ptr *) a;\n       p = (const unsigned char *) (a + sizeof (void *));\n     }\n   else\n     {\n       switch (encoding & 0x0f)\n \t{\n \tcase DW_EH_PE_absptr:\n-\t  result = (_Unwind_Ptr) u->ptr;\n+\t  result = (_Unwind_Internal_Ptr) u->ptr;\n \t  p += sizeof (void *);\n \t  break;\n \n \tcase DW_EH_PE_uleb128:\n \t  {\n \t    _Unwind_Word tmp;\n \t    p = read_uleb128 (p, &tmp);\n-\t    result = (_Unwind_Ptr) tmp;\n+\t    result = (_Unwind_Internal_Ptr) tmp;\n \t  }\n \t  break;\n \n \tcase DW_EH_PE_sleb128:\n \t  {\n \t    _Unwind_Sword tmp;\n \t    p = read_sleb128 (p, &tmp);\n-\t    result = (_Unwind_Ptr) tmp;\n+\t    result = (_Unwind_Internal_Ptr) tmp;\n \t  }\n \t  break;\n \n@@ -246,9 +246,9 @@ read_encoded_value_with_base (unsigned char encoding, _Unwind_Ptr base,\n       if (result != 0)\n \t{\n \t  result += ((encoding & 0x70) == DW_EH_PE_pcrel\n-\t\t     ? (_Unwind_Ptr) u : base);\n+\t\t     ? (_Unwind_Internal_Ptr) u : base);\n \t  if (encoding & DW_EH_PE_indirect)\n-\t    result = *(_Unwind_Ptr *) result;\n+\t    result = *(_Unwind_Internal_Ptr *) result;\n \t}\n     }\n "}, {"sha": "3002d5041743640c719c7466e5058d77bce811d9", "filename": "gcc/unwind.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef30f834e41445014188b3ac2040b6b779d3d20/gcc%2Funwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef30f834e41445014188b3ac2040b6b779d3d20/gcc%2Funwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind.h?ref=9ef30f834e41445014188b3ac2040b6b779d3d20", "patch": "@@ -31,7 +31,12 @@ extern \"C\" {\n    inefficient for 32-bit and smaller machines.  */\n typedef unsigned _Unwind_Word __attribute__((__mode__(__word__)));\n typedef signed _Unwind_Sword __attribute__((__mode__(__word__)));\n+#if defined(__ia64__) && defined(__hpux__)\n+typedef unsigned _Unwind_Ptr __attribute__((__mode__(__word__)));\n+#else\n typedef unsigned _Unwind_Ptr __attribute__((__mode__(__pointer__)));\n+#endif\n+typedef unsigned _Unwind_Internal_Ptr __attribute__((__mode__(__pointer__)));\n \n /* @@@ The IA-64 ABI uses a 64-bit word to identify the producer and\n    consumer of an exception.  We'll go along with this for now even on"}]}