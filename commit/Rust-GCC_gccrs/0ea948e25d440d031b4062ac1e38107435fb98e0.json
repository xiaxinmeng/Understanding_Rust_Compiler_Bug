{"sha": "0ea948e25d440d031b4062ac1e38107435fb98e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhOTQ4ZTI1ZDQ0MGQwMzFiNDA2MmFjMWUzODEwNzQzNWZiOThlMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-07T15:25:01Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-07T15:25:01Z"}, "message": "rs6000: Remove reg_or_none500mem_operand\n\n\n\t* config/rs6000/predicates.md (reg_or_mem_operand): Reformat.\n\t(reg_or_none500mem_operand): Delete.\n\t* config/rs6000/rs6000.md (extendsfdf2): Use reg_or_mem_operand\n\tinstead of reg_or_none500mem_operand.\n\nFrom-SVN: r248982", "tree": {"sha": "61105407aa6b24403367e3d683ba40e68b09f6d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61105407aa6b24403367e3d683ba40e68b09f6d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ea948e25d440d031b4062ac1e38107435fb98e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea948e25d440d031b4062ac1e38107435fb98e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea948e25d440d031b4062ac1e38107435fb98e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea948e25d440d031b4062ac1e38107435fb98e0/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6958e60ff7035006a82d73ebcccaccd9fc427fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6958e60ff7035006a82d73ebcccaccd9fc427fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6958e60ff7035006a82d73ebcccaccd9fc427fef"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "e10099d3e0928d6022ff435d5945c154a799d2f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea948e25d440d031b4062ac1e38107435fb98e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea948e25d440d031b4062ac1e38107435fb98e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ea948e25d440d031b4062ac1e38107435fb98e0", "patch": "@@ -1,3 +1,10 @@\n+2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/predicates.md (reg_or_mem_operand): Reformat.\n+\t(reg_or_none500mem_operand): Delete.\n+\t* config/rs6000/rs6000.md (extendsfdf2): Use reg_or_mem_operand\n+\tinstead of reg_or_none500mem_operand.\n+\n 2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_option_override_internal): Delete"}, {"sha": "1bf9194668a1a39463c43e5dc0d04dc067245ba7", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea948e25d440d031b4062ac1e38107435fb98e0/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea948e25d440d031b4062ac1e38107435fb98e0/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=0ea948e25d440d031b4062ac1e38107435fb98e0", "patch": "@@ -970,19 +970,11 @@\n \n ;; Return 1 if the operand is a general non-special register or memory operand.\n (define_predicate \"reg_or_mem_operand\"\n-     (ior (match_operand 0 \"memory_operand\")\n-\t  (ior (and (match_code \"mem\")\n-\t\t    (match_test \"macho_lo_sum_memory_operand (op, mode)\"))\n-\t       (ior (match_operand 0 \"volatile_mem_operand\")\n-\t\t    (match_operand 0 \"gpc_reg_operand\")))))\n-\n-;; Return 1 if the operand is either an easy FP constant or memory or reg.\n-(define_predicate \"reg_or_none500mem_operand\"\n-  (if_then_else (match_code \"mem\")\n-     (ior (match_operand 0 \"memory_operand\")\n-\t  (match_test \"macho_lo_sum_memory_operand (op, mode)\")\n-\t  (match_operand 0 \"volatile_mem_operand\"))\n-     (match_operand 0 \"gpc_reg_operand\")))\n+  (ior (match_operand 0 \"memory_operand\")\n+       (and (match_code \"mem\")\n+\t    (match_test \"macho_lo_sum_memory_operand (op, mode)\"))\n+       (match_operand 0 \"volatile_mem_operand\")\n+       (match_operand 0 \"gpc_reg_operand\")))\n \n ;; Return 1 if the operand is CONST_DOUBLE 0, register or memory operand.\n (define_predicate \"zero_reg_mem_operand\""}, {"sha": "edb520867eae3c2d61667f059e3f13e2438c44f0", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea948e25d440d031b4062ac1e38107435fb98e0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea948e25d440d031b4062ac1e38107435fb98e0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0ea948e25d440d031b4062ac1e38107435fb98e0", "patch": "@@ -4638,7 +4638,7 @@\n ;; Floating point conversions\n (define_expand \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\")\n-\t(float_extend:DF (match_operand:SF 1 \"reg_or_none500mem_operand\")))]\n+\t(float_extend:DF (match_operand:SF 1 \"reg_or_mem_operand\")))]\n   \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n {\n   if (HONOR_SNANS (SFmode))"}]}