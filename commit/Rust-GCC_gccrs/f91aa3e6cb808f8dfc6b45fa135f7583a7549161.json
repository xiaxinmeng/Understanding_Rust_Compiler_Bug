{"sha": "f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxYWEzZTZjYjgwOGY4ZGZjNmI0NWZhMTM1Zjc1ODNhNzU0OTE2MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-02-18T18:06:32Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-02-19T13:12:22Z"}, "message": "vect: Fix offset calculation for -ve strides [PR93767]\n\nThis PR is a regression caused by r256644, which added support for alias\nchecks involving variable strides.  One of the changes in that commit\nwas to split the access size out of the segment length.  The PR shows\nthat I hadn't done that correctly for the handling of negative strides\nin vect_compile_time_alias.  The old code was:\n\n      const_length_a = (-wi::to_poly_wide (segment_length_a)).force_uhwi ();\n      offset_a = (offset_a + vect_get_scalar_dr_size (a)) - const_length_a;\n\nwhere vect_get_scalar_dr_size (a) was cancelling out the subtraction\nof the access size inherent in \"- const_length_a\".  Taking the access\nsize out of the segment length meant that the addition was no longer\nneeded/correct.\n\n2020-02-19  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/93767\n\t* tree-vect-data-refs.c (vect_compile_time_alias): Remove the\n\taccess-size bias from the offset calculations for negative strides.\n\ngcc/testsuite/\n\tPR tree-optimization/93767\n\t* gcc.dg/vect/pr93767.c: New test.", "tree": {"sha": "df517321d86e31f94c6bb925803180716b53634c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df517321d86e31f94c6bb925803180716b53634c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca60ecff35837a1af9383cf67ee7d1c0a718b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca60ecff35837a1af9383cf67ee7d1c0a718b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca60ecff35837a1af9383cf67ee7d1c0a718b28"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "757d05a2f294bda76b8530657e2c53d0abd57df9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "patch": "@@ -1,3 +1,9 @@\n+2020-02-19  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/93767\n+\t* tree-vect-data-refs.c (vect_compile_time_alias): Remove the\n+\taccess-size bias from the offset calculations for negative strides.\n+\n 2020-02-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* collect2.c (c_file, o_file): Make const again."}, {"sha": "2d88138cbb62ddf820422043069a58c3cea54b96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "patch": "@@ -1,3 +1,8 @@\n+2020-02-19  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/93767\n+\t* gcc.dg/vect/pr93767.c: New test.\n+\n 2020-02-19  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/93776"}, {"sha": "5f95d7bd35b267d987be1cd9d41c8b5687200484", "filename": "gcc/testsuite/gcc.dg/vect/pr93767.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr93767.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr93767.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr93767.c?ref=f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "patch": "@@ -0,0 +1,13 @@\n+int\n+main ()\n+{\n+  int a[10], b;\n+  for (b = 6; b >= 3; b--)\n+    {\n+      a[b] = 1;\n+      a[b + 2] = a[3];\n+    }\n+  if (a[5] != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "0192aa646363a1224e1a66d64b05f3e28c341f21", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aa3e6cb808f8dfc6b45fa135f7583a7549161/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=f91aa3e6cb808f8dfc6b45fa135f7583a7549161", "patch": "@@ -3261,14 +3261,14 @@ vect_compile_time_alias (dr_vec_info *a, dr_vec_info *b,\n   if (tree_int_cst_compare (DR_STEP (a->dr), size_zero_node) < 0)\n     {\n       const_length_a = (-wi::to_poly_wide (segment_length_a)).force_uhwi ();\n-      offset_a = (offset_a + access_size_a) - const_length_a;\n+      offset_a -= const_length_a;\n     }\n   else\n     const_length_a = tree_to_poly_uint64 (segment_length_a);\n   if (tree_int_cst_compare (DR_STEP (b->dr), size_zero_node) < 0)\n     {\n       const_length_b = (-wi::to_poly_wide (segment_length_b)).force_uhwi ();\n-      offset_b = (offset_b + access_size_b) - const_length_b;\n+      offset_b -= const_length_b;\n     }\n   else\n     const_length_b = tree_to_poly_uint64 (segment_length_b);"}]}