{"sha": "70b2d364cc713fff51dcabfe987e3cb8efdcee93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiMmQzNjRjYzcxM2ZmZjUxZGNhYmZlOTg3ZTNjYjhlZmRjZWU5Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-02-02T16:10:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-02-02T16:10:12Z"}, "message": "mips.c (MIPS_GET_FCSR, [...]): New macros.\n\ngcc/\n\t* config/mips/mips.c (MIPS_GET_FCSR, MIPS_SET_FCSR): New macros.\n\t(mips_atomic_assign_expand_fenv): New function.\n\t(TARGET_ATOMIC_ASSIGN_EXPAND_FENV): Define.\n\nFrom-SVN: r207402", "tree": {"sha": "4d4dca34cfe6f95b59137611fe0b067754920eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d4dca34cfe6f95b59137611fe0b067754920eee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70b2d364cc713fff51dcabfe987e3cb8efdcee93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b2d364cc713fff51dcabfe987e3cb8efdcee93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b2d364cc713fff51dcabfe987e3cb8efdcee93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b2d364cc713fff51dcabfe987e3cb8efdcee93/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a90c02456f4655254477e00e338163ffab9bd97b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90c02456f4655254477e00e338163ffab9bd97b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a90c02456f4655254477e00e338163ffab9bd97b"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "af84338d9f16c2015194277edf33d92cc7f302dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b2d364cc713fff51dcabfe987e3cb8efdcee93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b2d364cc713fff51dcabfe987e3cb8efdcee93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70b2d364cc713fff51dcabfe987e3cb8efdcee93", "patch": "@@ -1,3 +1,9 @@\n+2014-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (MIPS_GET_FCSR, MIPS_SET_FCSR): New macros.\n+\t(mips_atomic_assign_expand_fenv): New function.\n+\t(TARGET_ATOMIC_ASSIGN_EXPAND_FENV): Define.\n+\n 2014-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* doc/extend.texi (__builtin_mips_get_fcsr): Document."}, {"sha": "b2f2ef8f6bc4b75a706691227d58b4e9ba6e12ac", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b2d364cc713fff51dcabfe987e3cb8efdcee93/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b2d364cc713fff51dcabfe987e3cb8efdcee93/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=70b2d364cc713fff51dcabfe987e3cb8efdcee93", "patch": "@@ -13937,7 +13937,9 @@ AVAIL_NON_MIPS16 (cache, TARGET_CACHE_BUILTIN)\n #define CODE_FOR_loongson_psubusb CODE_FOR_ussubv8qi3\n \n static const struct mips_builtin_description mips_builtins[] = {\n+#define MIPS_GET_FCSR 0\n   DIRECT_BUILTIN (get_fcsr, MIPS_USI_FTYPE_VOID, hard_float),\n+#define MIPS_SET_FCSR 1\n   DIRECT_NO_TARGET_BUILTIN (set_fcsr, MIPS_VOID_FTYPE_USI, hard_float),\n \n   DIRECT_BUILTIN (pll_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, paired_single),\n@@ -18843,6 +18845,49 @@ mips_case_values_threshold (void)\n   else\n     return default_case_values_threshold ();\n }\n+\n+/* Implement TARGET_ATOMIC_ASSIGN_EXPAND_FENV.  */\n+\n+static void\n+mips_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n+{\n+  if (!TARGET_HARD_FLOAT_ABI)\n+    return;\n+  tree exceptions_var = create_tmp_var (MIPS_ATYPE_USI, NULL);\n+  tree fcsr_orig_var = create_tmp_var (MIPS_ATYPE_USI, NULL);\n+  tree fcsr_mod_var = create_tmp_var (MIPS_ATYPE_USI, NULL);\n+  tree get_fcsr = mips_builtin_decls[MIPS_GET_FCSR];\n+  tree set_fcsr = mips_builtin_decls[MIPS_SET_FCSR];\n+  tree get_fcsr_hold_call = build_call_expr (get_fcsr, 0);\n+  tree hold_assign_orig = build2 (MODIFY_EXPR, MIPS_ATYPE_USI,\n+\t\t\t\t  fcsr_orig_var, get_fcsr_hold_call);\n+  tree hold_mod_val = build2 (BIT_AND_EXPR, MIPS_ATYPE_USI, fcsr_orig_var,\n+\t\t\t      build_int_cst (MIPS_ATYPE_USI, 0xfffff003));\n+  tree hold_assign_mod = build2 (MODIFY_EXPR, MIPS_ATYPE_USI,\n+\t\t\t\t fcsr_mod_var, hold_mod_val);\n+  tree set_fcsr_hold_call = build_call_expr (set_fcsr, 1, fcsr_mod_var);\n+  tree hold_all = build2 (COMPOUND_EXPR, MIPS_ATYPE_USI,\n+\t\t\t  hold_assign_orig, hold_assign_mod);\n+  *hold = build2 (COMPOUND_EXPR, void_type_node, hold_all,\n+\t\t  set_fcsr_hold_call);\n+\n+  *clear = build_call_expr (set_fcsr, 1, fcsr_mod_var);\n+\n+  tree get_fcsr_update_call = build_call_expr (get_fcsr, 0);\n+  *update = build2 (MODIFY_EXPR, MIPS_ATYPE_USI,\n+\t\t    exceptions_var, get_fcsr_update_call);\n+  tree set_fcsr_update_call = build_call_expr (set_fcsr, 1, fcsr_orig_var);\n+  *update = build2 (COMPOUND_EXPR, void_type_node, *update,\n+\t\t    set_fcsr_update_call);\n+  tree atomic_feraiseexcept\n+    = builtin_decl_implicit (BUILT_IN_ATOMIC_FERAISEEXCEPT);\n+  tree int_exceptions_var = fold_convert (integer_type_node,\n+\t\t\t\t\t  exceptions_var);\n+  tree atomic_feraiseexcept_call = build_call_expr (atomic_feraiseexcept,\n+\t\t\t\t\t\t    1, int_exceptions_var);\n+  *update = build2 (COMPOUND_EXPR, void_type_node, *update,\n+\t\t    atomic_feraiseexcept_call);\n+}\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n@@ -19077,6 +19122,9 @@ mips_case_values_threshold (void)\n #undef TARGET_CASE_VALUES_THRESHOLD\n #define TARGET_CASE_VALUES_THRESHOLD mips_case_values_threshold\n \n+#undef TARGET_ATOMIC_ASSIGN_EXPAND_FENV\n+#define TARGET_ATOMIC_ASSIGN_EXPAND_FENV mips_atomic_assign_expand_fenv\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n #include \"gt-mips.h\""}]}