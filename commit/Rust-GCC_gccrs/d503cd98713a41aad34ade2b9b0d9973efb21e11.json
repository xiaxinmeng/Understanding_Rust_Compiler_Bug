{"sha": "d503cd98713a41aad34ade2b9b0d9973efb21e11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUwM2NkOTg3MTNhNDFhYWQzNGFkZTJiOWIwZDk5NzNlZmIyMWUxMQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-28T16:44:58Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-31T14:55:16Z"}, "message": "PR tree-optimization/96818 - cast label range to type of switch operand\n\n\tPR tree-optimization/96818\n\t* tree-vrp.c (find_case_label_range): Cast label range to\n\ttype of switch operand.", "tree": {"sha": "b4dac1ef0eb03cc1752ee65c9c8c28e2b7ccf2d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4dac1ef0eb03cc1752ee65c9c8c28e2b7ccf2d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d503cd98713a41aad34ade2b9b0d9973efb21e11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d503cd98713a41aad34ade2b9b0d9973efb21e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d503cd98713a41aad34ade2b9b0d9973efb21e11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d503cd98713a41aad34ade2b9b0d9973efb21e11/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6940c20bbb3b5864e8b510de162d1a618aecca88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6940c20bbb3b5864e8b510de162d1a618aecca88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6940c20bbb3b5864e8b510de162d1a618aecca88"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "134bf8b69801bdb213eb1f90b325b0c27e127dac", "filename": "gcc/testsuite/g++.dg/pr96818.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d503cd98713a41aad34ade2b9b0d9973efb21e11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr96818.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d503cd98713a41aad34ade2b9b0d9973efb21e11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr96818.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr96818.C?ref=d503cd98713a41aad34ade2b9b0d9973efb21e11", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+bool operatorY ();\n+\n+struct l\n+{\n+  int m;\n+  int k;\n+  void n ();\n+    l ()\n+  {\n+    while (operatorY ())\n+      switch ((unsigned char) k)\n+\tcase 0:\n+\t{\n+\t  n ();\n+\t  case 1:if (m)\n+\t    ;\n+\t}\n+  }\n+};\n+\n+void\n+p ()\n+{\n+  l ();\n+}"}, {"sha": "ea2ac540d390d2f7208cf2f38ca5a5bd6786dd5e", "filename": "gcc/testsuite/gcc.dg/pr96818.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d503cd98713a41aad34ade2b9b0d9973efb21e11/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96818.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d503cd98713a41aad34ade2b9b0d9973efb21e11/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96818.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96818.c?ref=d503cd98713a41aad34ade2b9b0d9973efb21e11", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+int a, b, c;\n+void d() {\n+  unsigned short e;\n+  while (b)\n+    ;\n+  e = (e + 5) / a;\n+  switch (e)\n+  case 0:\n+  case 3:\n+    c = a;\n+}"}, {"sha": "a165164bb40db03151ae2e3e86cd1c06109f8046", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d503cd98713a41aad34ade2b9b0d9973efb21e11/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d503cd98713a41aad34ade2b9b0d9973efb21e11/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=d503cd98713a41aad34ade2b9b0d9973efb21e11", "patch": "@@ -3850,6 +3850,8 @@ find_case_label_range (gswitch *switch_stmt, const irange *range_of_op)\n       if (!case_high)\n \tcase_high = CASE_LOW (max_label);\n       widest_irange label_range (CASE_LOW (min_label), case_high);\n+      if (!types_compatible_p (label_range.type (), range_of_op->type ()))\n+\trange_cast (label_range, range_of_op->type ());\n       label_range.intersect (range_of_op);\n       if (label_range.undefined_p ())\n \treturn gimple_switch_label (switch_stmt, 0);"}]}