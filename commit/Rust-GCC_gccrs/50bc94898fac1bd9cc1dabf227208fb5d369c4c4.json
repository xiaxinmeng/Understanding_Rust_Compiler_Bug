{"sha": "50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBiYzk0ODk4ZmFjMWJkOWNjMWRhYmYyMjcyMDhmYjVkMzY5YzRjNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-23T08:05:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-23T08:07:36Z"}, "message": "stor-layout: Reject forming arrays with elt sizes not divisible by elt alignment [PR97164]\n\nAs mentioned in the PR, since 2005 we reject if array elements are smaller\nthan their alignment (i.e. overaligned elements), because such arrays don't\nmake much sense, only their first element is guaranteed to be aligned as\nuser requested, but the next element can't be.\nThe following testcases show something we've been silent about but is\nequally bad, the 2005 case is just the most common special case of that\nthe array element size is not divisible by the alignment.  In those arrays\ntoo only the first element is guaranteed to be properly aligned and the\nsecond one can't be.\n\nThis patch rejects those cases too, but keeps the existing wording for the\nold common case.\n\nUnfortunately, the patch breaks bootstrap, because libbid uses this mess\n(forms arrays with 24 byte long elements with 16 byte element alignment).\nI don't really see justification for that, so I've decreased the alignment\nto 8 bytes instead.\n\n2020-10-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/97164\ngcc/\n\t* stor-layout.c (layout_type): Also reject arrays where element size\n\tis constant, but not a multiple of element alignment.\ngcc/testsuite/\n\t* c-c++-common/pr97164.c: New test.\n\t* gcc.c-torture/execute/pr36093.c: Move ...\n\t* gcc.dg/pr36093.c: ... here.  Add dg-do compile and dg-error\n\tdirectives.\n\t* gcc.c-torture/execute/pr43783.c: Move ...\n\t* gcc.dg/pr43783.c: ... here.  Add dg-do compile, dg-options and\n\tdg-error directives.\nlibgcc/config/libbid/\n\t* bid_functions.h (UINT192): Decrease alignment to 8 bytes.", "tree": {"sha": "7ccaf2d4c1433f2f01582bc64ffcbd1c7675c640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ccaf2d4c1433f2f01582bc64ffcbd1c7675c640"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f966d689710cbb03a0592504102119ab99978d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f966d689710cbb03a0592504102119ab99978d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f966d689710cbb03a0592504102119ab99978d4"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "dff81d1c24f51435d717a42234dddfebbeed1d07", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "patch": "@@ -2579,10 +2579,19 @@ layout_type (tree type)\n \t    /* If TYPE_SIZE_UNIT overflowed, then it is certainly larger than\n \t       TYPE_ALIGN_UNIT.  */\n \t    && !TREE_OVERFLOW (TYPE_SIZE_UNIT (element))\n-\t    && !integer_zerop (TYPE_SIZE_UNIT (element))\n-\t    && compare_tree_int (TYPE_SIZE_UNIT (element),\n-\t\t\t  \t TYPE_ALIGN_UNIT (element)) < 0)\n-\t  error (\"alignment of array elements is greater than element size\");\n+\t    && !integer_zerop (TYPE_SIZE_UNIT (element)))\n+\t  {\n+\t    if (compare_tree_int (TYPE_SIZE_UNIT (element),\n+\t\t\t\t  TYPE_ALIGN_UNIT (element)) < 0)\n+\t      error (\"alignment of array elements is greater than \"\n+\t\t     \"element size\");\n+\t    else if (TYPE_ALIGN_UNIT (element) > 1\n+\t\t     && (wi::zext (wi::to_wide (TYPE_SIZE_UNIT (element)),\n+\t\t\t\t  ffs_hwi (TYPE_ALIGN_UNIT (element)) - 1)\n+\t\t\t != 0))\n+\t      error (\"size of array element is not a multiple of its \"\n+\t\t     \"alignment\");\n+\t  }\n \tbreak;\n       }\n "}, {"sha": "8ffb9289449a2eb18961c998261ced9aba8375d0", "filename": "gcc/testsuite/c-c++-common/pr97164.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr97164.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr97164.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr97164.c?ref=50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/97164 */\n+/* { dg-do compile } */\n+\n+typedef struct { int *a; char b[64]; } A __attribute__((aligned (64)));\n+struct B { A d[4]; } b;\t/* { dg-error \"size of array element is not a multiple of its alignment\" } */\n+void foo (void);\n+\n+int *\n+bar (void)\n+{\n+  struct B *h = &b;\n+  if (h->d[1].a)\n+    foo ();\n+  return h->d[1].a;\n+}"}, {"sha": "84746416f1bc0ecc7064168cd6310cf5e8571e82", "filename": "gcc/testsuite/gcc.dg/pr36093.c", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36093.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36093.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36093.c?ref=50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-do compile } */\n /* { dg-skip-if \"small alignment\" { pdp11-*-* } } */\n \n extern void abort (void);\n@@ -7,7 +8,7 @@ typedef struct Bar {\n } Bar __attribute__((__aligned__(128)));\n \n typedef struct Foo {\n-      Bar bar[4];\n+      Bar bar[4];\t/* { dg-error \"size of array element is not a multiple of its alignment\" } */\n } Foo;\n \n Foo foo[4];", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/pr36093.c"}, {"sha": "196735b1b61dd3c2cf39850fb2b8a78d2918e9be", "filename": "gcc/testsuite/gcc.dg/pr43783.c", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43783.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43783.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43783.c?ref=50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "patch": "@@ -1,11 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n /* { dg-skip-if \"small alignment\" { pdp11-*-* } } */\n \n typedef __attribute__((aligned(16)))\n struct {\n   unsigned long long w[3];\n } UINT192;\n \n-UINT192 bid_Kx192[32];\n+UINT192 bid_Kx192[32];\t/* { dg-error \"size of array element is not a multiple of its alignment\" } */\n \n extern void abort (void);\n ", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/pr43783.c"}, {"sha": "d0f0cb2914e208602a92e8f913af53ab55b34dfe", "filename": "libgcc/config/libbid/bid_functions.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/libgcc%2Fconfig%2Flibbid%2Fbid_functions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bc94898fac1bd9cc1dabf227208fb5d369c4c4/libgcc%2Fconfig%2Flibbid%2Fbid_functions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flibbid%2Fbid_functions.h?ref=50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "patch": "@@ -81,7 +81,7 @@ ALIGN (16)\n #define SQRT80 sqrtw\n #endif\n \n-     typedef ALIGN (16)\n+     typedef ALIGN (8)\n      struct {\n        UINT64 w[3];\n      } UINT192;"}]}