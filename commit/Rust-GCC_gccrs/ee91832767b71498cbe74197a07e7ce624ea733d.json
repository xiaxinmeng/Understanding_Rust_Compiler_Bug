{"sha": "ee91832767b71498cbe74197a07e7ce624ea733d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5MTgzMjc2N2I3MTQ5OGNiZTc0MTk3YTA3ZTdjZTYyNGVhNzMzZA==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2014-05-22T18:18:48Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2014-05-22T18:18:48Z"}, "message": "Fix expected messages in test\n\nFrom-SVN: r210820", "tree": {"sha": "8292ae9137883a94d8597a4291b49f14b6e5afae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8292ae9137883a94d8597a4291b49f14b6e5afae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee91832767b71498cbe74197a07e7ce624ea733d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee91832767b71498cbe74197a07e7ce624ea733d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee91832767b71498cbe74197a07e7ce624ea733d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee91832767b71498cbe74197a07e7ce624ea733d/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4000360e40bee85872f411d1f1f39a7c52e840cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4000360e40bee85872f411d1f1f39a7c52e840cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4000360e40bee85872f411d1f1f39a7c52e840cb"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "4e86b8dd6339c7e72d8fff552418824bc2845f63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -1,3 +1,13 @@\n+2014-05-22  Xinliang David Li  <davidxl@google.com>\n+\n+\t* g++.dg/ipa/devirt-15.C: Fix expected message.\n+\t* g++.dg/ipa/devirt-16.C: Ditto.\n+\t* g++.dg/ipa/devirt-17.C: Ditto.\n+\t* g++.dg/ipa/devirt-26.C: Ditto.\n+\t* g++.dg/ipa/imm-devirt-1.C: Ditto.\n+\t* g++.dg/ipa/imm-devirt-2.C: Ditto.\n+\t* g++.dg/tree-ssa/pr8781.C:Ditto.\n+\n 2014-05-22  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/htm-ttest.c: New test."}, {"sha": "924564661b8e83251e7b0468655483642f995aef", "filename": "gcc/testsuite/g++.dg/ipa/devirt-15.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-15.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -1,7 +1,7 @@\n /* Check that we speculatively devirutalize call to FOO to B::foo becuase\n    A is noreturn.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-devirt -fdump-tree-optimized\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-devirt-details -fdump-tree-optimized\"  } */\n class A {\n public:\n   virtual int foo(void)\n@@ -33,7 +33,7 @@ main()\n   m();\n }\n \n-/* { dg-final { scan-ipa-dump \"Speculatively devirtualizing call\" \"devirt\"} } */\n+/* { dg-final { scan-ipa-dump \"speculatively devirtualizing call\" \"devirt\"} } */\n /* { dg-final { cleanup-ipa-dump \"devirt\" } } */\n /* Match if (PROF_6 == foo) to verify that the speculation survived.  */\n /* { dg-final { scan-tree-dump \"== foo\" \"optimized\"} } */"}, {"sha": "dd7696e6f55ff10c4d0b2376132cf4c4cdfe47ba", "filename": "gcc/testsuite/g++.dg/ipa/devirt-16.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-16.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -1,7 +1,7 @@\n /* We shall devirtualize to unreachable.  No anonymous type method should surivve\n    reachability.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-whole-program\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-whole-program-details\"  } */\n namespace {\n class B {\n public:\n@@ -32,7 +32,7 @@ main()\n   return b->foo();\n }\n \n-/* { dg-final { scan-ipa-dump \"Devirtualizing\" \"whole-program\"} } */\n+/* { dg-final { scan-ipa-dump \"devirtualizing\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump \"builtin_unreachable\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"A::foo\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"A::foo\" \"whole-program\"} } */"}, {"sha": "ce7943a8464b0a389b6dff3d1fe7f31034f01312", "filename": "gcc/testsuite/g++.dg/ipa/devirt-17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-17.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -1,7 +1,7 @@\n /* We shall devirtualize to B::foo since it is the only live candidate of an\n    anonymous type.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-whole-program\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-whole-program-details\"  } */\n namespace {\n class B {\n public:\n@@ -37,7 +37,7 @@ main()\n   return b->foo();\n }\n \n-/* { dg-final { scan-ipa-dump \"Devirtualizing\" \"whole-program\"} } */\n+/* { dg-final { scan-ipa-dump \"devirtualizing\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"builtin_unreachable\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump \"B::foo\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"A::foo\" \"whole-program\"} } */"}, {"sha": "469a1402d2509a5c861d2492cbb4ff7bdb550c7c", "filename": "gcc/testsuite/g++.dg/ipa/devirt-26.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-26.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fdump-ipa-devirt\"  } */\n+/* { dg-options \"-O3 -fdump-ipa-devirt-details\"  } */\n struct A\n  {\n    int a;\n@@ -25,5 +25,5 @@ int test(void)\n /* The call to b->foo() is perfectly devirtualizable because C can not be in construction\n    when &c was used, but we can not analyze that so far.  Test that we at least speculate\n    that type is in the construction.  */\n-/* { dg-final { scan-ipa-dump \"Speculatively devirtualizing\" \"devirt\"  } } */\n+/* { dg-final { scan-ipa-dump \"speculatively devirtualizing\" \"devirt\"  } } */\n /* { dg-final { cleanup-ipa-dump \"devirt\" } } */"}, {"sha": "9307d96db099aa12bbf249b5ec7bfe79d4468362", "filename": "gcc/testsuite/g++.dg/ipa/imm-devirt-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fimm-devirt-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fimm-devirt-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fimm-devirt-1.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -58,5 +58,5 @@ int main (int argc, char *argv[])\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"Replacing call target with foo\" \"fre1\"  } } */\n+/* { dg-final { scan-tree-dump \"converting indirect call to function virtual int B::foo\" \"fre1\"  } } */\n /* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "079aa4b6f15c0b37f587fba92d54e1ceaa15f334", "filename": "gcc/testsuite/g++.dg/ipa/imm-devirt-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fimm-devirt-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fimm-devirt-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fimm-devirt-2.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -91,5 +91,5 @@ int main (int argc, char *argv[])\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"Replacing call target\" \"fre1\"  } } */\n+/* { dg-final { scan-tree-dump \"converting indirect call to function\" \"fre1\"  } } */\n /* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "bf75413723201efeaebaf5d7ab8423a4f5f5c92f", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr8781.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee91832767b71498cbe74197a07e7ce624ea733d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C?ref=ee91832767b71498cbe74197a07e7ce624ea733d", "patch": "@@ -24,5 +24,5 @@ int x()\n \n /* We should optimize this to a direct call.  */\n \n-/* { dg-final { scan-tree-dump \"Replacing call target with f\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"converting indirect call to function int f()\" \"fre1\" } } */\n /* { dg-final { cleanup-tree-dump \"fre1\" } } */"}]}