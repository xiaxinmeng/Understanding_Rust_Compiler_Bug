{"sha": "1ad4c71a87b858bb7ca678f2afa70400495f37f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFkNGM3MWE4N2I4NThiYjdjYTY3OGYyYWZhNzA0MDA0OTVmMzdmNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-26T23:49:10Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-26T23:49:10Z"}, "message": "(jump_optimize): Insert missing GET_MODE call.\n\nFrom-SVN: r4578", "tree": {"sha": "825101adae5182c6568c30fff355131845717be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/825101adae5182c6568c30fff355131845717be2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ad4c71a87b858bb7ca678f2afa70400495f37f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad4c71a87b858bb7ca678f2afa70400495f37f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ad4c71a87b858bb7ca678f2afa70400495f37f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad4c71a87b858bb7ca678f2afa70400495f37f5/comments", "author": null, "committer": null, "parents": [{"sha": "2b7794ad0be64f46c4ad99ca580a5eabe86a3d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7794ad0be64f46c4ad99ca580a5eabe86a3d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b7794ad0be64f46c4ad99ca580a5eabe86a3d37"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c5da32a4aa7e66e2db2f372f67c65fc08118068e", "filename": "gcc/jump.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad4c71a87b858bb7ca678f2afa70400495f37f5/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad4c71a87b858bb7ca678f2afa70400495f37f5/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=1ad4c71a87b858bb7ca678f2afa70400495f37f5", "patch": "@@ -346,10 +346,10 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\t   && XEXP (XEXP (dest, 0), 0) == stack_pointer_rtx))\n \t\t      break;\n \t\t    pushes++;\n-\t\t    if (total_pushed + GET_MODE_SIZE (SET_DEST (pbody))\n+\t\t    if (total_pushed + GET_MODE_SIZE (GET_MODE (SET_DEST (pbody)))\n \t\t\t> stack_adjust_amount)\n \t\t      break;\n-\t\t    total_pushed += GET_MODE_SIZE (SET_DEST (pbody));\n+\t\t    total_pushed += GET_MODE_SIZE (GET_MODE (SET_DEST (pbody)));\n \t\t  }\n \n \t\t/* Discard the amount pushed from the stack adjust;\n@@ -379,7 +379,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\t   && GET_CODE (XEXP (dest, 0)) == POST_INC\n \t\t\t   && XEXP (XEXP (dest, 0), 0) == stack_pointer_rtx))\n \t\t      break;\n-\t\t    total_pushed -= GET_MODE_SIZE (SET_DEST (pbody));\n+\t\t    total_pushed -= GET_MODE_SIZE (GET_MODE (SET_DEST (pbody)));\n \t\t    /* If this push doesn't fully fit in the space\n \t\t       of the stack adjust that we deleted,\n \t\t       make another stack adjust here for what we"}]}