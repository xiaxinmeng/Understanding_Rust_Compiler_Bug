{"sha": "00cd57389767b9a81125f999d33d509cba0ebaaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjZDU3Mzg5NzY3YjlhODExMjVmOTk5ZDMzZDUwOWNiYTBlYmFhZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-28T10:26:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-28T11:19:41Z"}, "message": "remove obsolete code from SLP invariant costing\n\nThis removes handling of !SLP_TREE_VECTYPE from invariant costing.\nThe single caller guards against this case already.\n\n2020-05-28  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_prologue_cost_for_slp): Remove\n\tcase for !SLP_TREE_VECTYPE.\n\t(vect_slp_analyze_node_operations): Adjust.", "tree": {"sha": "89ffd8d726e4cf32d027d989b34d44554bc28a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89ffd8d726e4cf32d027d989b34d44554bc28a52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00cd57389767b9a81125f999d33d509cba0ebaaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00cd57389767b9a81125f999d33d509cba0ebaaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00cd57389767b9a81125f999d33d509cba0ebaaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00cd57389767b9a81125f999d33d509cba0ebaaf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e31cd607e999ca6ab47b7e65a7045b1594e4fba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e31cd607e999ca6ab47b7e65a7045b1594e4fba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e31cd607e999ca6ab47b7e65a7045b1594e4fba4"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "5976e91cf6247a5048797d5d636e77aa8fffe0d3", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00cd57389767b9a81125f999d33d509cba0ebaaf/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00cd57389767b9a81125f999d33d509cba0ebaaf/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=00cd57389767b9a81125f999d33d509cba0ebaaf", "patch": "@@ -2739,19 +2739,13 @@ vect_slp_convert_to_external (vec_info *vinfo, slp_tree node,\n    by NODE.  */\n \n static void\n-vect_prologue_cost_for_slp (vec_info *vinfo,\n-\t\t\t    slp_tree node,\n+vect_prologue_cost_for_slp (slp_tree node,\n \t\t\t    stmt_vector_for_cost *cost_vec)\n {\n   /* Without looking at the actual initializer a vector of\n      constants can be implemented as load from the constant pool.\n      When all elements are the same we can use a splat.  */\n   tree vectype = SLP_TREE_VECTYPE (node);\n-  /* ???  Ideally we'd want all invariant nodes to have a vectype.  */\n-  if (!vectype)\n-    vectype = get_vectype_for_scalar_type (vinfo,\n-\t\t\t\t\t   TREE_TYPE (SLP_TREE_SCALAR_OPS\n-\t\t\t\t\t\t\t      (node)[0]), node);\n   unsigned group_size = SLP_TREE_SCALAR_OPS (node).length ();\n   unsigned num_vects_to_check;\n   unsigned HOST_WIDE_INT const_nunits;\n@@ -2911,7 +2905,7 @@ vect_slp_analyze_node_operations (vec_info *vinfo, slp_tree node,\n \t  SLP_TREE_NUMBER_OF_VEC_STMTS (child)\n \t    = vect_get_num_vectors (vf * group_size, vector_type);\n \t  /* And cost them.  */\n-\t  vect_prologue_cost_for_slp (vinfo, child, cost_vec);\n+\t  vect_prologue_cost_for_slp (child, cost_vec);\n \t}\n \n   /* If this node can't be vectorized, try pruning the tree here rather"}]}