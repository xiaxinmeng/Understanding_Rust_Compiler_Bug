{"sha": "273123a48a42b08a87cacdfe665848c143716ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczMTIzYTQ4YTQyYjA4YTg3Y2FjZGZlNjY1ODQ4YzE0MzcxNmVmMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-05T14:32:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-05T14:32:46Z"}, "message": "[multiple changes]\n\n2015-02-05  Javier Miranda  <miranda@adacore.com>\n\n\t* errout.adb (Error_Msg_PT): Add missing error.\n\t* sem_ch6.adb (Check_Synchronized_Overriding): Check the missing\n\tRM rule.  Code cleanup.\n\t* exp_ch9.adb (Build_Wrapper_Spec): Propagate \"constant\" in\n\tanonymous access types.  Found working on the tests. Code cleanup.\n\n2015-02-05  Vincent Celier  <celier@adacore.com>\n\n\t* prj-dect.adb (Parse_Attribute_Declaration): Continue scanning\n\twhen there are incomplete withs.\n\t* prj-nmsc.adb (Process_Naming): Do not try to get the value\n\tof an element when it is nil.\n\t(Check_Naming): Do not check a nil suffix for illegality\n\t* prj-proc.adb (Expression): Do not process an empty term.\n\t* prj-strt.adb (Attribute_Reference): If attribute cannot be\n\tfound, parse a possible index to avoid cascading errors.\n\n2015-02-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aux.adb (Is_Derived_Type): A subprogram_type generated\n\tfor an access_to_subprogram declaration is not a derived type.\n\nFrom-SVN: r220451", "tree": {"sha": "e08fa47e3dc28c05eb306575c569f416823c5b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e08fa47e3dc28c05eb306575c569f416823c5b73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/273123a48a42b08a87cacdfe665848c143716ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273123a48a42b08a87cacdfe665848c143716ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273123a48a42b08a87cacdfe665848c143716ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273123a48a42b08a87cacdfe665848c143716ef1/comments", "author": null, "committer": null, "parents": [{"sha": "ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5"}], "stats": {"total": 227, "additions": 141, "deletions": 86}, "files": [{"sha": "d9ef29a2ca7512308e18e38b9114f144ff0a99f4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -1,3 +1,27 @@\n+2015-02-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* errout.adb (Error_Msg_PT): Add missing error.\n+\t* sem_ch6.adb (Check_Synchronized_Overriding): Check the missing\n+\tRM rule.  Code cleanup.\n+\t* exp_ch9.adb (Build_Wrapper_Spec): Propagate \"constant\" in\n+\tanonymous access types.  Found working on the tests. Code cleanup.\n+\n+2015-02-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-dect.adb (Parse_Attribute_Declaration): Continue scanning\n+\twhen there are incomplete withs.\n+\t* prj-nmsc.adb (Process_Naming): Do not try to get the value\n+\tof an element when it is nil.\n+\t(Check_Naming): Do not check a nil suffix for illegality\n+\t* prj-proc.adb (Expression): Do not process an empty term.\n+\t* prj-strt.adb (Attribute_Reference): If attribute cannot be\n+\tfound, parse a possible index to avoid cascading errors.\n+\n+2015-02-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aux.adb (Is_Derived_Type): A subprogram_type generated\n+\tfor an access_to_subprogram declaration is not a derived type.\n+\n 2015-02-05  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.adb (Error_Msg_Internal): For non-serious error set"}, {"sha": "d79cafa09266eb2786a2f3c57db54cd108f4736c", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -686,9 +686,16 @@ package body Errout is\n         (\"illegal overriding of subprogram inherited from interface\", E);\n \n       Error_Msg_Sloc := Sloc (Iface_Prim);\n-      Error_Msg_N\n-        (\"\\first formal of & declared # must be of mode `OUT`, `IN OUT` \" &\n-         \"or access-to-variable\", E);\n+\n+      if Ekind (E) = E_Function then\n+         Error_Msg_N\n+           (\"\\first formal of & declared # must be of mode `IN` \" &\n+            \"or access-to-constant\", E);\n+      else\n+         Error_Msg_N\n+           (\"\\first formal of & declared # must be of mode `OUT`, `IN OUT` \" &\n+            \"or access-to-variable\", E);\n+      end if;\n    end Error_Msg_PT;\n \n    -----------------"}, {"sha": "9d467c31e544fb7a637254156c5f56c4fa14843d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2640,10 +2640,11 @@ package body Exp_Ch9 is\n                Obj_Param_Typ :=\n                  Make_Access_Definition (Loc,\n                    Subtype_Mark =>\n-                     New_Occurrence_Of (Obj_Typ, Loc));\n-               Set_Null_Exclusion_Present (Obj_Param_Typ,\n-                 Null_Exclusion_Present (Parameter_Type (First_Param)));\n-\n+                     New_Occurrence_Of (Obj_Typ, Loc),\n+                   Null_Exclusion_Present =>\n+                     Null_Exclusion_Present (Parameter_Type (First_Param)),\n+                   Constant_Present =>\n+                     Constant_Present (Parameter_Type (First_Param)));\n             else\n                Obj_Param_Typ := New_Occurrence_Of (Obj_Typ, Loc);\n             end if;"}, {"sha": "e0f6dcb7944b3201ed10b147752189696bf5ce31", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 31, "deletions": 27, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -582,7 +582,7 @@ package body Prj.Dect is\n                   The_Project := Imported_Or_Extended_Project_Of\n                                    (Current_Project, In_Tree, Token_Name);\n \n-                  if No (The_Project) then\n+                  if No (The_Project) and then not In_Tree.Incomplete_With then\n                      Error_Msg (Flags, \"unknown project\", Location);\n                      Scan (In_Tree); --  past the project name\n \n@@ -617,33 +617,37 @@ package body Prj.Dect is\n                                  Get_Name_String\n                                    (Name_Of (Current_Package, In_Tree)),\n                                  Token_Ptr);\n+                              Scan (In_Tree); --  past the package name\n \n                            else\n-                              The_Package :=\n-                                First_Package_Of (The_Project, In_Tree);\n-\n-                              --  Look for the package node\n-\n-                              while Present (The_Package)\n-                                and then\n-                                Name_Of (The_Package, In_Tree) /= Token_Name\n-                              loop\n+                              if Present (The_Project) then\n                                  The_Package :=\n-                                   Next_Package_In_Project\n-                                     (The_Package, In_Tree);\n-                              end loop;\n-\n-                              --  If the package cannot be found in the\n-                              --  project, issue an error.\n-\n-                              if No (The_Package) then\n-                                 The_Project := Empty_Node;\n-                                 Error_Msg_Name_2 := Project_Name;\n-                                 Error_Msg_Name_1 := Token_Name;\n-                                 Error_Msg\n-                                   (Flags,\n-                                    \"package % not declared in project %\",\n-                                    Token_Ptr);\n+                                   First_Package_Of (The_Project, In_Tree);\n+\n+                                 --  Look for the package node\n+\n+                                 while Present (The_Package)\n+                                   and then\n+                                     Name_Of (The_Package, In_Tree) /=\n+                                     Token_Name\n+                                 loop\n+                                    The_Package :=\n+                                      Next_Package_In_Project\n+                                        (The_Package, In_Tree);\n+                                 end loop;\n+\n+                                 --  If the package cannot be found in the\n+                                 --  project, issue an error.\n+\n+                                 if No (The_Package) then\n+                                    The_Project := Empty_Node;\n+                                    Error_Msg_Name_2 := Project_Name;\n+                                    Error_Msg_Name_1 := Token_Name;\n+                                    Error_Msg\n+                                      (Flags,\n+                                       \"package % not declared in project %\",\n+                                       Token_Ptr);\n+                                 end if;\n                               end if;\n \n                               Scan (In_Tree); --  past the package name\n@@ -653,7 +657,7 @@ package body Prj.Dect is\n                   end if;\n                end if;\n \n-               if Present (The_Project) then\n+               if Present (The_Project) or else In_Tree.Incomplete_With then\n \n                   --  Looking for '<same attribute name>\n "}, {"sha": "9c7a8d0c6875c025f06f8b2d6a4911fba179ff4d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1803,7 +1803,10 @@ package body Prj.Nmsc is\n                   Lang_Index := Get_Language_From_Name\n                     (Project, Get_Name_String (Element.Index));\n \n-                  if Lang_Index /= No_Language_Index then\n+                  if Lang_Index /= No_Language_Index and then\n+                     Element.Value.Kind = Single and then\n+                     Element.Value.Value /= No_Name\n+                  then\n                      case Current_Array.Name is\n                         when Name_Spec_Suffix | Name_Specification_Suffix =>\n \n@@ -4287,7 +4290,9 @@ package body Prj.Nmsc is\n                   Shared                  => Shared);\n             end if;\n \n-            if Suffix /= Nil_Variable_Value then\n+            if Suffix /= Nil_Variable_Value and then\n+               Suffix.Value /= No_Name\n+            then\n                Lang_Id.Config.Naming_Data.Spec_Suffix :=\n                    File_Name_Type (Suffix.Value);\n \n@@ -4320,7 +4325,9 @@ package body Prj.Nmsc is\n                     Shared                  => Shared);\n             end if;\n \n-            if Suffix /= Nil_Variable_Value then\n+            if Suffix /= Nil_Variable_Value and then\n+               Suffix.Value /= No_Name\n+            then\n                Lang_Id.Config.Naming_Data.Body_Suffix :=\n                  File_Name_Type (Suffix.Value);\n "}, {"sha": "0107aa0a45eb1c14cc0d4275aa417ea5ce524747", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -539,10 +539,12 @@ package body Prj.Proc is\n       The_Term := First_Term;\n       while Present (The_Term) loop\n          The_Current_Term := Current_Term (The_Term, From_Project_Node_Tree);\n-         Current_Term_Kind :=\n-           Kind_Of (The_Current_Term, From_Project_Node_Tree);\n \n-         case Current_Term_Kind is\n+         if The_Current_Term /= Empty_Node then\n+            Current_Term_Kind :=\n+              Kind_Of (The_Current_Term, From_Project_Node_Tree);\n+\n+            case Current_Term_Kind is\n \n             when N_Literal_String =>\n \n@@ -578,16 +580,16 @@ package body Prj.Proc is\n                      else\n                         Shared.String_Elements.Table\n                           (Last).Next := String_Element_Table.Last\n-                                       (Shared.String_Elements);\n+                                           (Shared.String_Elements);\n                      end if;\n \n                      Last := String_Element_Table.Last\n                                (Shared.String_Elements);\n \n                      Shared.String_Elements.Table (Last) :=\n                        (Value         => String_Value_Of\n-                                           (The_Current_Term,\n-                                            From_Project_Node_Tree),\n+                          (The_Current_Term,\n+                           From_Project_Node_Tree),\n                         Index         => Source_Index_Of\n                                            (The_Current_Term,\n                                             From_Project_Node_Tree),\n@@ -743,7 +745,7 @@ package body Prj.Proc is\n                      The_Package := The_Project.Decl.Packages;\n                      while The_Package /= No_Package\n                        and then Shared.Packages.Table (The_Package).Name /=\n-                          The_Name\n+                                The_Name\n                      loop\n                         The_Package :=\n                           Shared.Packages.Table (The_Package).Next;\n@@ -753,7 +755,7 @@ package body Prj.Proc is\n                        (The_Package /= No_Package, \"package not found.\");\n \n                   elsif Kind_Of (The_Current_Term, From_Project_Node_Tree) =\n-                                                        N_Attribute_Reference\n+                        N_Attribute_Reference\n                   then\n                      The_Package := No_Package;\n                   end if;\n@@ -886,8 +888,8 @@ package body Prj.Proc is\n \n                         else\n                            if Expression_Kind_Of\n-                                (The_Current_Term, From_Project_Node_Tree) =\n-                                                                        List\n+                               (The_Current_Term, From_Project_Node_Tree) =\n+                                                                       List\n                            then\n                               The_Variable :=\n                                 (Project  => Project,\n@@ -1047,8 +1049,8 @@ package body Prj.Proc is\n \n                               else\n                                  Shared.String_Elements.Table (Last).Next :=\n-                                     String_Element_Table.Last\n-                                       (Shared.String_Elements);\n+                                   String_Element_Table.Last\n+                                     (Shared.String_Elements);\n                               end if;\n \n                               Last :=\n@@ -1059,8 +1061,8 @@ package body Prj.Proc is\n                                 (Value         => The_Variable.Value,\n                                  Display_Value => No_Name,\n                                  Location      => Location_Of\n-                                                    (The_Current_Term,\n-                                                     From_Project_Node_Tree),\n+                                                   (The_Current_Term,\n+                                                    From_Project_Node_Tree),\n                                  Flag          => False,\n                                  Next          => Nil_String,\n                                  Index         => 0);\n@@ -1108,7 +1110,7 @@ package body Prj.Proc is\n                                        Index        => 0);\n \n                                     The_List := Shared.String_Elements.Table\n-                                        (The_List).Next;\n+                                                              (The_List).Next;\n                                  end loop;\n                               end;\n                         end case;\n@@ -1334,10 +1336,10 @@ package body Prj.Proc is\n                                     String_Element_Table.Increment_Last\n                                       (Shared.String_Elements);\n                                     Shared.String_Elements.Table (Last).Next :=\n-                                        String_Element_Table.Last\n-                                          (Shared.String_Elements);\n+                                         String_Element_Table.Last\n+                                           (Shared.String_Elements);\n                                     Last := String_Element_Table.Last\n-                                        (Shared.String_Elements);\n+                                              (Shared.String_Elements);\n                                  end if;\n                               end loop;\n \n@@ -1366,7 +1368,8 @@ package body Prj.Proc is\n                   \"illegal node kind in an expression\");\n                raise Program_Error;\n \n-         end case;\n+            end case;\n+         end if;\n \n          The_Term := Next_Term (The_Term, From_Project_Node_Tree);\n       end loop;"}, {"sha": "8956e97a149eeb05772afc421f171cbe0c422e3d", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -207,6 +207,20 @@ package body Prj.Strt is\n \n             Scan (In_Tree);\n \n+            --  Skip a possible index for an associative array\n+\n+            if Token = Tok_Left_Paren then\n+               Scan (In_Tree);\n+\n+               if Token = Tok_String_Literal then\n+                  Scan (In_Tree);\n+\n+                  if Token = Tok_Right_Paren then\n+                     Scan (In_Tree);\n+                  end if;\n+               end if;\n+            end if;\n+\n          else\n             --  Give its characteristics to this attribute reference\n "}, {"sha": "09dcc6c6b44355821804dc57510baab233d3da80", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -981,6 +981,7 @@ package body Sem_Aux is\n       if Is_Type (Ent)\n         and then Base_Type (Ent) /= Root_Type (Ent)\n         and then not Is_Class_Wide_Type (Ent)\n+        and then Ekind (Ent) /= E_Subprogram_Type\n       then\n          if not Is_Numeric_Type (Root_Type (Ent)) then\n             return True;"}, {"sha": "94249faad3e67bf9a5a8199ebf0a636150b48f5b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 19, "deletions": 25, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273123a48a42b08a87cacdfe665848c143716ef1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=273123a48a42b08a87cacdfe665848c143716ef1", "patch": "@@ -9259,7 +9259,6 @@ package body Sem_Ch6 is\n          declare\n             Candidate : Entity_Id := Empty;\n             Hom       : Entity_Id := Empty;\n-            Iface_Typ : Entity_Id;\n             Subp      : Entity_Id := Empty;\n \n          begin\n@@ -9334,38 +9333,33 @@ package body Sem_Ch6 is\n                  and then Etype (Result_Definition (Parent (Def_Id))) =\n                           Etype (Result_Definition (Parent (Subp)))\n                then\n-                  Overridden_Subp := Subp;\n-                  return;\n+                  Candidate := Subp;\n+\n+                  --  If an inherited subprogram is implemented by a protected\n+                  --  function, then the first parameter of the inherited\n+                  --  subprogram shall be of mode in, but not an\n+                  --  access-to-variable parameter (RM 9.4(11/9)\n+\n+                  if Present (First_Formal (Subp))\n+                    and then Ekind (First_Formal (Subp)) = E_In_Parameter\n+                    and then\n+                      (not Is_Access_Type (Etype (First_Formal (Subp)))\n+                         or else\n+                       Is_Access_Constant (Etype (First_Formal (Subp))))\n+                  then\n+                     Overridden_Subp := Subp;\n+                     return;\n+                  end if;\n                end if;\n \n                Hom := Homonym (Hom);\n             end loop;\n \n             --  After examining all candidates for overriding, we are left with\n             --  the best match which is a mode incompatible interface routine.\n-            --  Do not emit an error if the Expander is active since this error\n-            --  will be detected later on after all concurrent types are\n-            --  expanded and all wrappers are built. This check is meant for\n-            --  spec-only compilations.\n-\n-            if Present (Candidate) and then not Expander_Active then\n-               Iface_Typ :=\n-                 Find_Parameter_Type (Parent (First_Formal (Candidate)));\n-\n-               --  Def_Id is primitive of a protected type, declared inside the\n-               --  type, and the candidate is primitive of a limited or\n-               --  synchronized interface.\n \n-               if In_Scope\n-                 and then Is_Protected_Type (Typ)\n-                 and then\n-                   (Is_Limited_Interface (Iface_Typ)\n-                     or else Is_Protected_Interface (Iface_Typ)\n-                     or else Is_Synchronized_Interface (Iface_Typ)\n-                     or else Is_Task_Interface (Iface_Typ))\n-               then\n-                  Error_Msg_PT (Def_Id, Candidate);\n-               end if;\n+            if In_Scope and then Present (Candidate) then\n+               Error_Msg_PT (Def_Id, Candidate);\n             end if;\n \n             Overridden_Subp := Candidate;"}]}