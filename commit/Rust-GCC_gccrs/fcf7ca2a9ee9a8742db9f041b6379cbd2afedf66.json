{"sha": "fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNmN2NhMmE5ZWU5YTg3NDJkYjlmMDQxYjYzNzljYmQyYWZlZGY2Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-12-18T21:40:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-18T21:40:29Z"}, "message": "re PR target/55562 (FAIL: gcc.dg/sms-* on powerpc*-*-*)\n\n\tPR target/55562\n\t* sbitmap.c (bitmap_and, bitmap_xor, bitmap_ior): Return whether\n\tdst sbitmap changed even if it doesn't have popcount.\n\nFrom-SVN: r194591", "tree": {"sha": "fa4695a1fac95ed4c12dda4bdb61642a7e102c3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa4695a1fac95ed4c12dda4bdb61642a7e102c3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b81f26c304d304e6a239e04408de47e02c8625b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b81f26c304d304e6a239e04408de47e02c8625b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b81f26c304d304e6a239e04408de47e02c8625b"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "7b103fe89be9c3b2354fd6584163489c8aaf40c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66", "patch": "@@ -1,3 +1,9 @@\n+2012-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/55562\n+\t* sbitmap.c (bitmap_and, bitmap_xor, bitmap_ior): Return whether\n+\tdst sbitmap changed even if it doesn't have popcount.\n+\n 2012-12-18  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.md (insv_imm<mode>): Add modes"}, {"sha": "884c9a6573875d9925693c8ce9ba49323477f551", "filename": "gcc/sbitmap.c", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66/gcc%2Fsbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66/gcc%2Fsbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.c?ref=fcf7ca2a9ee9a8742db9f041b6379cbd2afedf66", "patch": "@@ -434,28 +434,26 @@ bitmap_and (sbitmap dst, const_sbitmap a, const_sbitmap b)\n   const_sbitmap_ptr bp = b->elms;\n   bool has_popcount = dst->popcount != NULL;\n   unsigned char *popcountp = dst->popcount;\n-  bool anychange = false;\n+  SBITMAP_ELT_TYPE changed = 0;\n \n   for (i = 0; i < n; i++)\n     {\n       const SBITMAP_ELT_TYPE tmp = *ap++ & *bp++;\n+      SBITMAP_ELT_TYPE wordchanged = *dstp ^ tmp;\n       if (has_popcount)\n \t{\n-\t  bool wordchanged = (*dstp ^ tmp) != 0;\n \t  if (wordchanged)\n-\t    {\n-\t      *popcountp = do_popcount (tmp);\n-\t      anychange = true;\n-\t    }\n+\t    *popcountp = do_popcount (tmp);\n \t  popcountp++;\n \t}\n       *dstp++ = tmp;\n+      changed |= wordchanged;\n     }\n #ifdef BITMAP_DEBUGGING\n   if (has_popcount)\n     sbitmap_verify_popcount (dst);\n #endif\n-  return anychange;\n+  return changed != 0;\n }\n \n /* Set DST to be (A xor B)).\n@@ -470,28 +468,26 @@ bitmap_xor (sbitmap dst, const_sbitmap a, const_sbitmap b)\n   const_sbitmap_ptr bp = b->elms;\n   bool has_popcount = dst->popcount != NULL;\n   unsigned char *popcountp = dst->popcount;\n-  bool anychange = false;\n+  SBITMAP_ELT_TYPE changed = 0;\n \n   for (i = 0; i < n; i++)\n     {\n       const SBITMAP_ELT_TYPE tmp = *ap++ ^ *bp++;\n+      SBITMAP_ELT_TYPE wordchanged = *dstp ^ tmp;\n       if (has_popcount)\n \t{\n-\t  bool wordchanged = (*dstp ^ tmp) != 0;\n \t  if (wordchanged)\n-\t    {\n-\t      *popcountp = do_popcount (tmp);\n-\t      anychange = true;\n-\t    }\n+\t    *popcountp = do_popcount (tmp);\n \t  popcountp++;\n \t}\n       *dstp++ = tmp;\n+      changed |= wordchanged;\n     }\n #ifdef BITMAP_DEBUGGING\n   if (has_popcount)\n     sbitmap_verify_popcount (dst);\n #endif\n-  return anychange;\n+  return changed != 0;\n }\n \n /* Set DST to be (A or B)).\n@@ -506,28 +502,26 @@ bitmap_ior (sbitmap dst, const_sbitmap a, const_sbitmap b)\n   const_sbitmap_ptr bp = b->elms;\n   bool has_popcount = dst->popcount != NULL;\n   unsigned char *popcountp = dst->popcount;\n-  bool anychange = false;\n+  SBITMAP_ELT_TYPE changed = 0;\n \n   for (i = 0; i < n; i++)\n     {\n       const SBITMAP_ELT_TYPE tmp = *ap++ | *bp++;\n+      SBITMAP_ELT_TYPE wordchanged = *dstp ^ tmp;\n       if (has_popcount)\n \t{\n-\t  bool wordchanged = (*dstp ^ tmp) != 0;\n \t  if (wordchanged)\n-\t    {\n-\t      *popcountp = do_popcount (tmp);\n-\t      anychange = true;\n-\t    }\n+\t    *popcountp = do_popcount (tmp);\n \t  popcountp++;\n \t}\n       *dstp++ = tmp;\n+      changed |= wordchanged;\n     }\n #ifdef BITMAP_DEBUGGING\n   if (has_popcount)\n     sbitmap_verify_popcount (dst);\n #endif\n-  return anychange;\n+  return changed != 0;\n }\n \n /* Return nonzero if A is a subset of B.  */"}]}