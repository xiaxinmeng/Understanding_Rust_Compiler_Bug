{"sha": "031785270ab84d7291b200d8e3e345cd36239ad5", "node_id": "C_kwDOANBUbNoAKDAzMTc4NTI3MGFiODRkNzI5MWIyMDBkOGUzZTM0NWNkMzYyMzlhZDU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-22T00:17:03Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-22T00:17:03Z"}, "message": "Daily bump.", "tree": {"sha": "460f6010898d8516951140446b313d5fec0f4cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/460f6010898d8516951140446b313d5fec0f4cfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/031785270ab84d7291b200d8e3e345cd36239ad5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031785270ab84d7291b200d8e3e345cd36239ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/031785270ab84d7291b200d8e3e345cd36239ad5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031785270ab84d7291b200d8e3e345cd36239ad5/comments", "author": null, "committer": null, "parents": [{"sha": "b33213135983fd5b591476dc2336f396d642302f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b33213135983fd5b591476dc2336f396d642302f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b33213135983fd5b591476dc2336f396d642302f"}], "stats": {"total": 229, "additions": 228, "deletions": 1}, "files": [{"sha": "0167e063d5876c93b9a7ec33d91501bf4f314f95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,96 @@\n+2023-03-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* stor-layout.cc (finalize_type_size): Copy TYPE_TYPELESS_STORAGE\n+\tto variants.\n+\n+2023-03-21  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109192\n+\t* gimple-range-gori.cc (gori_compute::compute_operand_range):\n+\tTerminate gori calculations if a relation is not relevant.\n+\t* value-relation.h (value_relation::set_relation): Allow\n+\tequality between op1 and op2 if they are the same.\n+\n+2023-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109219\n+\t* tree-vect-loop.cc (vectorizable_reduction): Check\n+\tslp_node, not STMT_SLP_TYPE.\n+\t* tree-vect-stmts.cc (vectorizable_condition): Likewise.\n+\t* tree-vect-slp.cc (vect_slp_analyze_node_operations_1):\n+\tRemove assertion on STMT_SLP_TYPE.\n+\n+2023-03-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109215\n+\t* tree.h (enum special_array_member): Adjust comments for int_0\n+\tand trail_0.\n+\t* tree.cc (component_ref_sam_type): Clear zero_elts if memtype\n+\thas zero sized element type and the array has variable number of\n+\telements or constant one or more elements.\n+\t(component_ref_size): Adjust comments, formatting fix.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* configure.ac: Add check for the Texinfo 6.8\n+\tCONTENTS_OUTPUT_LOCATION customization variable and set it if\n+\tsupported.\n+\t* configure: Regenerate.\n+\t* Makefile.in (MAKEINFO_TOC_INLINE_FLAG): New variable.  Set by\n+\tconfigure.ac to -c CONTENTS_OUTPUT_LOCATION=inline if\n+\tCONTENTS_OUTPUT_LOCATION support is detected, empty otherwise.\n+\t($(build_htmldir)/%/index.html): Pass MAKEINFO_TOC_INLINE_FLAG.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/extend.texi: Associate use_hazard_barrier_return index\n+\tentry with its attribute.\n+\t* doc/invoke.texi: Associate -fcanon-prefix-map index entry with\n+\tits attribute\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/implement-c.texi: Remove usage of @gol.\n+\t* doc/invoke.texi: Ditto.\n+\t* doc/sourcebuild.texi: Ditto.\n+\t* doc/include/gcc-common.texi: Remove @gol.  In new Makeinfo and\n+\ttexinfo.tex versions, the bug it was working around appears to\n+\tbe gone.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/include/texinfo.tex: Update to 2023-01-17.19.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/include/gcc-common.texi: Add @defbuiltin{,x} and\n+\t@enddefbuiltin for defining built-in functions.\n+\t* doc/extend.texi: Apply @defbuiltin{,x} to many, but not all,\n+\tplaces where it should be used.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/extend.texi (Formatted Output Function Checking): New\n+\tsubsection for  grouping together printf et al.\n+\t(Exception handling) Fix missing @ sign before copyright\n+\theader, which lead to the copyright line leaking into\n+\t'(gcc)Exception handling'.\n+\t* doc/gcc.texi: Set document language to en_US.\n+\t(@copying): Wrap front cover texts in quotations, move in manual\n+\tdescription text.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/gcc.texi: Add the Indices appendix, to make texinfo\n+\tgenerate nice indices overview page.\n+\n+2023-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109170\n+\t* gimple-range-op.cc (cfn_pass_through_arg1): New.\n+\t(gimple_range_op_handler::maybe_builtin_call): Handle\n+\t__builtin_expect via cfn_pass_through_arg1.\n+\n 2023-03-20   Michael Meissner  <meissner@linux.ibm.com>\n \n \tPR target/109067"}, {"sha": "7c59d0a19764c2c471d6344c01db32da0a0acbd0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1 +1 @@\n-20230321\n+20230322"}, {"sha": "d86e8e71a2862d4bf8a66ce4c2f43ceaf7eef08c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,9 @@\n+2023-03-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/106890\n+\t* init.cc (maybe_instantiate_nsdmi_init): Don't leave\n+\tcurrent_function_decl set to a constructor.\n+\n 2023-03-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/109159"}, {"sha": "3eefa988f2a60992e8694eaaba328152b085c832", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,26 @@\n+2023-03-21  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/99036\n+\t* decl.cc (gfc_match_modproc): Reject MODULE PROCEDURE if not in a\n+\tgeneric module interface.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* invoke.texi: Remove usages of @gol.\n+\t* intrinsic.texi: Ditto.\n+\n+2023-03-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/109206\n+\t* trans-array.cc (gfc_trans_array_constructor_value): Correct\n+\tincorrect setting of typespec.\n+\n+2023-03-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/109209\n+\t* resolve.cc (generate_component_assignments): Restore the\n+\texclusion of allocatable components from the loop.\n+\n 2023-03-20  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/109216"}, {"sha": "791e5b27cb85911ce086d2471b10f079c8e7f8f3", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,10 @@\n+2023-03-21  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* Make-lang.in (m2/mc-boot/$(SRC_PREFIX)%.o): Add $(CXXFLAGS).\n+\t(m2/mc-boot-ch/$(SRC_PREFIX)%.o): Add $(CXXFLAGS).\n+\t(m2/mc-boot-ch/$(SRC_PREFIX)%.o): Add $(CXXFLAGS).\n+\t(m2/mc-boot/main.o): Add $(CXXFLAGS).\n+\n 2023-03-19  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* Make-maintainer.in (gm2.maintainer-clean): Remove."}, {"sha": "d2109516f0786e681b1dff4f87d0b4830a551b8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,62 @@\n+2023-03-21  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/99036\n+\t* gfortran.dg/pr99036.f90: New test.\n+\n+2023-03-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/106890\n+\t* g++.dg/cpp0x/nsdmi-template25.C: New test.\n+\n+2023-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109219\n+\t* gcc.dg/torture/pr109219.c: New testcase.\n+\n+2023-03-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/108898\n+\t* gcc.dg/vect/vect-simd-clone-16.c: Remove parts of comment mentioning\n+\tepilogue loops.\n+\t* gcc.dg/vect/vect-simd-clone-17.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-18.c: Likewise.\n+\n+2023-03-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/108898\n+\t* gcc.dg/vect/vect-simd-clone-16.c: Add --param vect-epilogues-nomask=0\n+\tto dg-additional-options.  Always expect just 2 foo.simdclone calls.\n+\t* gcc.dg/vect/vect-simd-clone-16f.c: Add\n+\t--param vect-epilogues-nomask=0 to dg-additional-options.\n+\t* gcc.dg/vect/vect-simd-clone-17.c: Likewise.  Always expect just 2\n+\tfoo.simdclone calls.\n+\t* gcc.dg/vect/vect-simd-clone-17d.c: Remove -fdump-tree-optimized from\n+\tdg-additional-options.\n+\t* gcc.dg/vect/vect-simd-clone-17e.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-17f.c: Likewise.  Add\n+\t--param vect-epilogues-nomask=0 to dg-additional-options.\n+\t* gcc.dg/vect/vect-simd-clone-18.c: Add --param vect-epilogues-nomask=0\n+\tto dg-additional-options.  Always expect just 2 foo.simdclone calls.\n+\t* gcc.dg/vect/vect-simd-clone-18f.c: Add\n+\t--param vect-epilogues-nomask=0 to dg-additional-options.\n+\n+2023-03-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109215\n+\t* gcc.dg/Wzero-length-array-bounds-3.c: New test.\n+\n+2023-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109170\n+\t* gcc.dg/Wuse-after-free-pr109170.c: New testcase.\n+\t* gcc.dg/tree-ssa/ssa-lim-21.c: Adjust.\n+\t* gcc.dg/predict-20.c: Likewise.\n+\n+2023-03-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/109209\n+\t* gfortran.dg/pr109209.f90: New test.\n+\n 2023-03-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/109159"}, {"sha": "6e38bc56e934110a779e141057ef6262e6d51a23", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,32 @@\n+2023-03-21  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd_x86.h\n+\t(_SimdImplX86::_S_divides): Replace test for __GCC_IEC_559 == 0\n+\twith __RECIPROCAL_MATH__.\n+\n+2023-03-21  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd_detail.h: Don't define\n+\t_GLIBCXX_SIMD_WORKAROUND_PR90993 for Clang.\n+\t* include/experimental/bits/simd_x86.h (_S_divides): Remove\n+\tcheck for __clang__.\n+\n+2023-03-21  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd_detail.h: Don't declare the\n+\tsimd API as constexpr with Clang.\n+\t* include/experimental/bits/simd_x86.h (__movm): New.\n+\t(_S_blend_avx512): Resolve FIXME. Implement blend using __movm\n+\tand ?:.\n+\t(_SimdImplX86::_S_masked_unary): Clang does not implement the\n+\tsame builtins. Implement the function using __movm, ?:, and -\n+\toperators on vector_size types instead.\n+\n+2023-03-21  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* testsuite/experimental/simd/tests/operators.cc: Clang doesn't\n+\tdefine __GCC_IEC_559. Use __STDC_IEC_559__ instead.\n+\n 2023-03-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* src/filesystem/ops-common.h (get_temp_directory_from_env): Fix"}, {"sha": "153dd1823e2a3e7d0b22efde8a4a650330260212", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,3 +1,13 @@\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* update_web_docs_git: Set CONTENTS_OUTPUT_LOCATION=inline in\n+\torder to put @shortcontents above contents.\n+\n+2023-03-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* update_web_docs_git (CSS): Update CSS reference to point to\n+\t/texinfo-manuals.css.\n+\n 2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* update_web_docs_git (MANUALS): Add gm2."}]}