{"sha": "43e4df5a0bed4833a4812746e5554ed057b6dfd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNlNGRmNWEwYmVkNDgzM2E0ODEyNzQ2ZTU1NTRlZDA1N2I2ZGZkNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-02-07T13:16:04Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-02-07T13:16:04Z"}, "message": "Revert behavior to r251316.\n\n2018-02-07  Martin Liska  <mliska@suse.cz>\n\n\tPR c++/84059.\n\t* class.c (add_method): Append argument value.\n\t* cp-tree.h (maybe_version_functions): Add new argument.\n\t* decl.c (decls_match): Call it if a declaration does not\n\thave DECL_FUNCTION_VERSIONED.\n\t(maybe_version_functions): record argument is added.\n2018-02-07  Martin Liska  <mliska@suse.cz>\n\n\tPR c++/84059.\n\t* g++.dg/ext/mv26.C: New test.\n\nFrom-SVN: r257451", "tree": {"sha": "d5254354848ad9ccaa8aea13df7aa8490d6aa304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5254354848ad9ccaa8aea13df7aa8490d6aa304"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43e4df5a0bed4833a4812746e5554ed057b6dfd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e4df5a0bed4833a4812746e5554ed057b6dfd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43e4df5a0bed4833a4812746e5554ed057b6dfd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e4df5a0bed4833a4812746e5554ed057b6dfd4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "228868f5324dacfbd2b7892d223b5eba044c51e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228868f5324dacfbd2b7892d223b5eba044c51e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228868f5324dacfbd2b7892d223b5eba044c51e7"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "d27b885382a5843d2add707a6e8769604238e420", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=43e4df5a0bed4833a4812746e5554ed057b6dfd4", "patch": "@@ -1,3 +1,12 @@\n+2018-02-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/84059.\n+\t* class.c (add_method): Append argument value.\n+\t* cp-tree.h (maybe_version_functions): Add new argument.\n+\t* decl.c (decls_match): Call it if a declaration does not\n+\thave DECL_FUNCTION_VERSIONED.\n+\t(maybe_version_functions): record argument is added.\n+\n 2018-02-05  Marek Polacek  <polacek@redhat.com>\n \n \t* class.c: Remove unused global variables."}, {"sha": "44170202abe692a57f4a748df720aed136ec2e3d", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=43e4df5a0bed4833a4812746e5554ed057b6dfd4", "patch": "@@ -1083,7 +1083,7 @@ add_method (tree type, tree method, bool via_using)\n \t  /* If these are versions of the same function, process and\n \t     move on.  */\n \t  if (TREE_CODE (fn) == FUNCTION_DECL\n-\t      && maybe_version_functions (method, fn))\n+\t      && maybe_version_functions (method, fn, true))\n \t    continue;\n \n \t  if (DECL_INHERITED_CTOR (method))"}, {"sha": "a6c75aed33d692d2bc1c001c2c42aef02816555c", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=43e4df5a0bed4833a4812746e5554ed057b6dfd4", "patch": "@@ -6135,7 +6135,7 @@ extern bool note_iteration_stmt_body_start\t(void);\n extern void note_iteration_stmt_body_end\t(bool);\n extern tree make_lambda_name\t\t\t(void);\n extern int decls_match\t\t\t\t(tree, tree, bool = true);\n-extern bool maybe_version_functions\t\t(tree, tree);\n+extern bool maybe_version_functions\t\t(tree, tree, bool);\n extern tree duplicate_decls\t\t\t(tree, tree, bool);\n extern tree declare_local_label\t\t\t(tree);\n extern tree define_label\t\t\t(location_t, tree);"}, {"sha": "3ccea9e6a4506d530eaf4ba48494f68edf40a128", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=43e4df5a0bed4833a4812746e5554ed057b6dfd4", "patch": "@@ -1087,7 +1087,9 @@ decls_match (tree newdecl, tree olddecl, bool record_versions /* = true */)\n \t  && !DECL_EXTERN_C_P (newdecl)\n \t  && !DECL_EXTERN_C_P (olddecl)\n \t  && record_versions\n-\t  && maybe_version_functions (newdecl, olddecl))\n+\t  && maybe_version_functions (newdecl, olddecl,\n+\t\t\t\t      (!DECL_FUNCTION_VERSIONED (newdecl)\n+\t\t\t\t       || !DECL_FUNCTION_VERSIONED (olddecl))))\n \treturn 0;\n     }\n   else if (TREE_CODE (newdecl) == TEMPLATE_DECL)\n@@ -1145,33 +1147,29 @@ decls_match (tree newdecl, tree olddecl, bool record_versions /* = true */)\n }\n \n /* NEWDECL and OLDDECL have identical signatures.  If they are\n-   different versions adjust them and return true.  */\n+   different versions adjust them and return true.\n+   If RECORD is set to true, record function versions.  */\n \n bool\n-maybe_version_functions (tree newdecl, tree olddecl)\n+maybe_version_functions (tree newdecl, tree olddecl, bool record)\n {\n   if (!targetm.target_option.function_versions (newdecl, olddecl))\n     return false;\n \n-  bool record = false;\n-\n   if (!DECL_FUNCTION_VERSIONED (olddecl))\n     {\n-      record = true;\n       DECL_FUNCTION_VERSIONED (olddecl) = 1;\n       if (DECL_ASSEMBLER_NAME_SET_P (olddecl))\n \tmangle_decl (olddecl);\n     }\n \n   if (!DECL_FUNCTION_VERSIONED (newdecl))\n     {\n-      record = true;\n       DECL_FUNCTION_VERSIONED (newdecl) = 1;\n       if (DECL_ASSEMBLER_NAME_SET_P (newdecl))\n \tmangle_decl (newdecl);\n     }\n \n-  /* Only record if at least one was not already versions.  */\n   if (record)\n     cgraph_node::record_function_versions (olddecl, newdecl);\n "}, {"sha": "42f163ab25d0fa029f9f1b72af3f413ebda20fa9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43e4df5a0bed4833a4812746e5554ed057b6dfd4", "patch": "@@ -1,3 +1,8 @@\n+2018-02-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/84059.\n+\t* g++.dg/ext/mv26.C: New test.\n+\n 2018-02-07  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/pr83844.c: Require effective target alloca."}, {"sha": "1b455130e460b4401042a16a5715258fb333cb0e", "filename": "gcc/testsuite/g++.dg/ext/mv26.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e4df5a0bed4833a4812746e5554ed057b6dfd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv26.C?ref=43e4df5a0bed4833a4812746e5554ed057b6dfd4", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/84059\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-require-ifunc \"\" }\n+\n+template <typename> struct a\n+{\n+  int __attribute__ ((target (\"arch=ivybridge\"))) c (int) {return 1;}\n+  int __attribute__ ((target (\"default\"))) c (int) { return 2; }\n+};\n+void\n+d ()\n+{\n+  a<double> b;\n+  b.c (2);\n+}"}]}