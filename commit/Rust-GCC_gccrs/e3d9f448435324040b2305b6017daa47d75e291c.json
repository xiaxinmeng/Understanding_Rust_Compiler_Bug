{"sha": "e3d9f448435324040b2305b6017daa47d75e291c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNkOWY0NDg0MzUzMjQwNDBiMjMwNWI2MDE3ZGFhNDdkNzVlMjkxYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:32:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:32:52Z"}, "message": "[multiple changes]\n\n2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n\n\t* usage.adb, debug.adb, a-except.adb, a-except.ads, a-except-2005.adb,\n\ta-except-2005.ads, s-imgrea.adb: Minor code clean ups related to\n\tjgnat/dotnet removal.\n\n2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-osprim-vxworks.adb, s-osprim-darwin.adb, s-tadeca.adb,\n\ts-osprim-unix.adb, s-osprim-solaris.adb, s-osprim-posix.adb,\n\ts-osprim.ads (Monotonic_Clock): Removed, unused.\n\n2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Try_Object_Operation, Try_One_Interpretation):\n\tDo not reset the Obj_Type of the prefix if an interpretation\n\tinvolves an untagged type, to prevent a crash when analyzing an\n\tillegal program in All_Errors mode.\n\n2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Expression_With_Actions):\n\tForce the evaluation of the expression when its type is Boolean.\n\t(Force_Boolean_Evaluation): New routine.\n\n2015-10-16  Bob Duff  <duff@adacore.com>\n\n\t* sem_util.adb (Has_Discrim_Dep_Array): Remove\n\tthis function, and the call. No longer needed now that the back\n\tend can handle such things. Should result in further speedups\n\tin some cases.\n\n2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Build_Predicate_Functions): If expression for\n\tpredicate is side-effect free, indicate that the predicate\n\tfunction is pure, to allow for optimization of redundant\n\tpredicate checks.\n\nFrom-SVN: r228881", "tree": {"sha": "493650f7139305f7406b89a0883995b1877f7d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/493650f7139305f7406b89a0883995b1877f7d76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3d9f448435324040b2305b6017daa47d75e291c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3d9f448435324040b2305b6017daa47d75e291c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3d9f448435324040b2305b6017daa47d75e291c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3d9f448435324040b2305b6017daa47d75e291c/comments", "author": null, "committer": null, "parents": [{"sha": "57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09"}], "stats": {"total": 291, "additions": 125, "deletions": 166}, "files": [{"sha": "fc424ef959cd9ba2994a12f59dc9642be4e329a7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -1,3 +1,42 @@\n+2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* usage.adb, debug.adb, a-except.adb, a-except.ads, a-except-2005.adb,\n+\ta-except-2005.ads, s-imgrea.adb: Minor code clean ups related to\n+\tjgnat/dotnet removal.\n+\n+2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-osprim-vxworks.adb, s-osprim-darwin.adb, s-tadeca.adb,\n+\ts-osprim-unix.adb, s-osprim-solaris.adb, s-osprim-posix.adb,\n+\ts-osprim.ads (Monotonic_Clock): Removed, unused.\n+\n+2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Object_Operation, Try_One_Interpretation):\n+\tDo not reset the Obj_Type of the prefix if an interpretation\n+\tinvolves an untagged type, to prevent a crash when analyzing an\n+\tillegal program in All_Errors mode.\n+\n+2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Expression_With_Actions):\n+\tForce the evaluation of the expression when its type is Boolean.\n+\t(Force_Boolean_Evaluation): New routine.\n+\n+2015-10-16  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_util.adb (Has_Discrim_Dep_Array): Remove\n+\tthis function, and the call. No longer needed now that the back\n+\tend can handle such things. Should result in further speedups\n+\tin some cases.\n+\n+2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Build_Predicate_Functions): If expression for\n+\tpredicate is side-effect free, indicate that the predicate\n+\tfunction is pure, to allow for optimization of redundant\n+\tpredicate checks.\n+\n 2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* checks.adb: Fix typo."}, {"sha": "5f123460a072330246262b400fd9dd5019960654", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -694,15 +694,6 @@ package body Ada.Exceptions is\n    --  The actual Call_Chain routine is separate, so that it can easily\n    --  be dummied out when no exception traceback information is needed.\n \n-   ------------------------------\n-   -- Current_Target_Exception --\n-   ------------------------------\n-\n-   function Current_Target_Exception return Exception_Occurrence is\n-   begin\n-      return Null_Occurrence;\n-   end Current_Target_Exception;\n-\n    -------------------\n    -- EId_To_String --\n    -------------------"}, {"sha": "cb2b2976e4aa193b6fc12c5827023b0fc6cc6466", "filename": "gcc/ada/a-except-2005.ads", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except-2005.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except-2005.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.ads?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -177,18 +177,6 @@ private\n    -- Private Subprograms --\n    -------------------------\n \n-   function Current_Target_Exception return Exception_Occurrence;\n-   pragma Export\n-     (Ada, Current_Target_Exception,\n-      \"__gnat_current_target_exception\");\n-   --  This routine should return the current raised exception on targets which\n-   --  have built-in exception handling such as the Java Virtual Machine. For\n-   --  other targets this routine is simply ignored. Currently, only JGNAT\n-   --  uses this. See 4jexcept.ads for details. The pragma Export allows this\n-   --  routine to be accessed elsewhere in the run-time, even though it is in\n-   --  the private part of this package (it is not allowed to be in the visible\n-   --  part, since this is set by the reference manual).\n-\n    function Exception_Name_Simple (X : Exception_Occurrence) return String;\n    --  Like Exception_Name, but returns the simple non-qualified name of the\n    --  exception. This is used to implement the Exception_Name function in"}, {"sha": "67609828cba597f921d87b1b872e94970f3b9564", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -727,15 +727,6 @@ package body Ada.Exceptions is\n    --  The actual polling routine is separate, so that it can easily be\n    --  replaced with a target dependent version.\n \n-   ------------------------------\n-   -- Current_Target_Exception --\n-   ------------------------------\n-\n-   function Current_Target_Exception return Exception_Occurrence is\n-   begin\n-      return Null_Occurrence;\n-   end Current_Target_Exception;\n-\n    -------------------\n    -- EId_To_String --\n    -------------------"}, {"sha": "79ca6c8558b60efbb3f0ed35c8006378e6591a29", "filename": "gcc/ada/a-except.ads", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fa-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.ads?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -154,18 +154,6 @@ private\n    -- Private Subprograms --\n    -------------------------\n \n-   function Current_Target_Exception return Exception_Occurrence;\n-   pragma Export\n-     (Ada, Current_Target_Exception,\n-      \"__gnat_current_target_exception\");\n-   --  This routine should return the current raised exception on targets\n-   --  which have built-in exception handling such as the Java Virtual\n-   --  Machine. For other targets this routine is simply ignored. Currently,\n-   --  only JGNAT uses this. See 4jexcept.ads for details. The pragma Export\n-   --  allows this routine to be accessed elsewhere in the run-time, even\n-   --  though it is in the private part of this package (it is not allowed\n-   --  to be in the visible part, since this is set by the reference manual).\n-\n    function Exception_Name_Simple (X : Exception_Occurrence) return String;\n    --  Like Exception_Name, but returns the simple non-qualified name of the\n    --  exception. This is used to implement the Exception_Name function in"}, {"sha": "a8e0ff4c02213cc9a2ee172c6aa29f7c70429aa2", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -73,7 +73,7 @@ package body Debug is\n    --  dG   Generate all warnings including those normally suppressed\n    --  dH   Hold (kill) call to gigi\n    --  dI   Inhibit internal name numbering in gnatG listing\n-   --  dJ   Output debugging trace info for JGNAT (Java VM version of GNAT)\n+   --  dJ\n    --  dK   Kill all error messages\n    --  dL   Output trace information on elaboration checking\n    --  dM   Assume all variables are modified (no current values)\n@@ -399,11 +399,6 @@ package body Debug is\n    --       is used in the fixed bugs run to minimize system and version\n    --       dependency in filed -gnatD or -gnatG output.\n \n-   --  dJ   Generate debugging trace output for the JGNAT back end. This\n-   --       consists of symbolic Java Byte Code sequences for all generated\n-   --       classes plus additional information to indicate local variables\n-   --       and methods.\n-\n    --  dK   Kill all error messages. This debug flag suppresses the output\n    --       of all error messages. It is used in regression tests where the\n    --       error messages are target dependent and irrelevant."}, {"sha": "9a144fbae574a6b337fba44e9c3cb22c6fafb043", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -5039,12 +5039,49 @@ package body Exp_Ch4 is\n    --------------------------------------\n \n    procedure Expand_N_Expression_With_Actions (N : Node_Id) is\n+      Acts : constant List_Id := Actions (N);\n+\n+      procedure Force_Boolean_Evaluation (Expr : Node_Id);\n+      --  Force the evaluation of Boolean expression Expr\n+\n       function Process_Action (Act : Node_Id) return Traverse_Result;\n       --  Inspect and process a single action of an expression_with_actions for\n       --  transient controlled objects. If such objects are found, the routine\n       --  generates code to clean them up when the context of the expression is\n       --  evaluated or elaborated.\n \n+      ------------------------------\n+      -- Force_Boolean_Evaluation --\n+      ------------------------------\n+\n+      procedure Force_Boolean_Evaluation (Expr : Node_Id) is\n+         Loc       : constant Source_Ptr := Sloc (N);\n+         Flag_Decl : Node_Id;\n+         Flag_Id   : Entity_Id;\n+\n+      begin\n+         --  Relocate the expression to the actions list by capturing its value\n+         --  in a Boolean flag. Generate:\n+         --    Flag : constant Boolean := Expr;\n+\n+         Flag_Id := Make_Temporary (Loc, 'F');\n+\n+         Flag_Decl :=\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Flag_Id,\n+             Constant_Present    => True,\n+             Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n+             Expression          => Relocate_Node (Expr));\n+\n+         Append (Flag_Decl, Acts);\n+         Analyze (Flag_Decl);\n+\n+         --  Replace the expression with a reference to the flag\n+\n+         Rewrite (Expression (N), New_Occurrence_Of (Flag_Id, Loc));\n+         Analyze (Expression (N));\n+      end Force_Boolean_Evaluation;\n+\n       --------------------\n       -- Process_Action --\n       --------------------\n@@ -5077,17 +5114,15 @@ package body Exp_Ch4 is\n \n       --  Local variables\n \n-      Acts : constant List_Id := Actions (N);\n-      Expr : constant Node_Id := Expression (N);\n-      Act  : Node_Id;\n+      Act : Node_Id;\n \n    --  Start of processing for Expand_N_Expression_With_Actions\n \n    begin\n       --  Do not evaluate the expression when it denotes an entity because the\n       --  expression_with_actions node will be replaced by the reference.\n \n-      if Is_Entity_Name (Expr) then\n+      if Is_Entity_Name (Expression (N)) then\n          null;\n \n       --  Do not evaluate the expression when there are no actions because the\n@@ -5117,11 +5152,23 @@ package body Exp_Ch4 is\n       --       <finalize Trans_Id>\n       --    in Val end;\n \n-      --  It is now safe to finalize the transient controlled object at the end\n-      --  of the actions list.\n+      --  Once this transformation is performed, it is safe to finalize the\n+      --  transient controlled object at the end of the actions list.\n+\n+      --  Note that Force_Evaluation does not remove side effects in operators\n+      --  because it assumes that all operands are evaluated and side effect\n+      --  free. This is not the case when an operand depends implicitly on the\n+      --  transient controlled object through the use of access types.\n+\n+      elsif Is_Boolean_Type (Etype (Expression (N))) then\n+         Force_Boolean_Evaluation (Expression (N));\n+\n+      --  The expression of an expression_with_actions node may not necessarely\n+      --  be Boolean when the node appears in an if expression. In this case do\n+      --  the usual forced evaluation to encapsulate potential aliasing.\n \n       else\n-         Force_Evaluation (Expr);\n+         Force_Evaluation (Expression (N));\n       end if;\n \n       --  Process all transient controlled objects found within the actions of"}, {"sha": "827b5f578fb25b9e2a01d5b7646d12916d530ad4", "filename": "gcc/ada/s-imgrea.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-imgrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-imgrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgrea.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -147,12 +147,7 @@ package body System.Img_Real is\n    is\n       NFrac : constant Natural := Natural'Max (Aft, 1);\n       Sign  : Character;\n-      X     : aliased Long_Long_Float;\n-      --  This is declared aliased because the expansion of X'Valid passes\n-      --  X by access and JGNAT requires all access parameters to be aliased.\n-      --  The Valid attribute probably needs to be handled via a different\n-      --  expansion for JGNAT, and this use of aliased should be removed\n-      --  once Valid is handled properly. ???\n+      X     : Long_Long_Float;\n       Scale : Integer;\n       Expon : Integer;\n "}, {"sha": "688371d19f44c12242050bab65c9ae57391a53f3", "filename": "gcc/ada/s-osprim-darwin.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-darwin.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -90,12 +90,6 @@ package body System.OS_Primitives is\n       return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n    end Clock;\n \n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration renames Clock;\n-\n    -----------------\n    -- To_Timespec --\n    -----------------"}, {"sha": "04344d31b4fa7bc5a086b750673010161494a96a", "filename": "gcc/ada/s-osprim-posix.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-posix.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,12 +93,6 @@ package body System.OS_Primitives is\n       return Duration (sec) + Duration (usec) / Micro;\n    end Clock;\n \n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration renames Clock;\n-\n    -----------------\n    -- To_Timespec --\n    -----------------"}, {"sha": "3bddaa5c8e3b3660991ccb9dd215dd8d6680563e", "filename": "gcc/ada/s-osprim-solaris.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-solaris.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -70,12 +70,6 @@ package body System.OS_Primitives is\n       return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n    end Clock;\n \n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration renames Clock;\n-\n    -----------------\n    -- Timed_Delay --\n    -----------------"}, {"sha": "732a15c5c32b2f61bc859d3b4ab1ee34c73cf217", "filename": "gcc/ada/s-osprim-unix.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-unix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-unix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-unix.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -70,12 +70,6 @@ package body System.OS_Primitives is\n       return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n    end Clock;\n \n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration renames Clock;\n-\n    -----------------\n    -- Timed_Delay --\n    -----------------"}, {"sha": "92dfc993a9b057732ad8ec8b895c3d83e7e2c40c", "filename": "gcc/ada/s-osprim-vxworks.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vxworks.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -102,12 +102,6 @@ package body System.OS_Primitives is\n       return Duration (TS.ts_sec) + Duration (TS.ts_nsec) / 10#1#E9;\n    end Clock;\n \n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration renames Clock;\n-\n    -----------------\n    -- Timed_Delay --\n    -----------------"}, {"sha": "ad4ffbee96d1deaf85e2eabcffc26c522fbb75a3", "filename": "gcc/ada/s-osprim.ads", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-osprim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim.ads?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,12 +63,6 @@ package System.OS_Primitives is\n    --  Epoch\", which is Jan 1, 1970 00:00:00 UTC on UNIX systems. This\n    --  implementation is affected by system's clock changes.\n \n-   function Monotonic_Clock return Duration;\n-   pragma Inline (Monotonic_Clock);\n-   --  Returns \"absolute\" time, represented as an offset relative to \"the Unix\n-   --  Epoch\", which is Jan 1, 1970 00:00:00 UTC. This clock implementation is\n-   --  immune to the system's clock changes.\n-\n    Relative          : constant := 0;\n    Absolute_Calendar : constant := 1;\n    Absolute_RT       : constant := 2;"}, {"sha": "4ebbee7ab3201ef32edaae5d8ec66d8079b19564", "filename": "gcc/ada/s-tadeca.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-tadeca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fs-tadeca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tadeca.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,7 +66,7 @@ begin\n    if SOSC.CLOCK_RT_Ada /= SOSC.CLOCK_REALTIME then\n       pragma Warnings (On);\n \n-      RT_T := RT_T - OS_Primitives.Monotonic_Clock + STPO.Monotonic_Clock;\n+      RT_T := RT_T - OS_Primitives.Clock + STPO.Monotonic_Clock;\n    end if;\n \n    System.Tasking.Initialization.Defer_Abort"}, {"sha": "197d1ea9415fe87f0d56b9a75f02f8d78c1b695a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -8702,6 +8702,16 @@ package body Sem_Ch13 is\n \n             Insert_Before_And_Analyze (N, FDecl);\n             Insert_After_And_Analyze  (N, FBody);\n+\n+            --  Static predicate functions are always side-effect free, and\n+            --  in most cases dynamic predicate functions are as well. Mark\n+            --  them as such whenever possible, so redundant predicate checks\n+            --  can be optimized.\n+\n+            if Expander_Active then\n+               Set_Is_Pure (SId, Side_Effect_Free (Expr));\n+               Set_Is_Inlined (SId);\n+            end if;\n          end;\n \n          --  Test for raise expressions present and if so build M version"}, {"sha": "0c4a90109db4a0b794f1bdb4a3e5d681679520ad", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -8135,6 +8135,12 @@ package body Sem_Ch4 is\n       -----------------------------------\n \n       procedure Try_One_Prefix_Interpretation (T : Entity_Id) is\n+\n+         --  If the interpretation does not have a valid candidate type,\n+         --  preserve current value of Obj_Type for subsequent errors.\n+\n+         Prev_Obj_Type : constant Entity_Id := Obj_Type;\n+\n       begin\n          Obj_Type := T;\n \n@@ -8167,6 +8173,10 @@ package body Sem_Ch4 is\n          if not Is_Tagged_Type (Obj_Type)\n            or else Is_Incomplete_Type (Obj_Type)\n          then\n+\n+            --  Restore previous type if current one is not legal candidate.\n+\n+            Obj_Type := Prev_Obj_Type;\n             return;\n          end if;\n "}, {"sha": "2915632a84859eb5c5e36b85d393180a387e5fac", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -17020,11 +17020,6 @@ package body Sem_Util is\n       --  could be nested inside some other record that is constrained by\n       --  nondiscriminants). That is, the recursive calls are too conservative.\n \n-      function Has_Discrim_Dep_Array (Typ : Entity_Id) return Boolean;\n-      --  True if we find certain discriminant-dependent array subcomponents.\n-      --  This shouldn't be necessary, but without this check, we crash in\n-      --  gimplify. ???\n-\n       ------------------------------\n       -- Caller_Known_Size_Record --\n       ------------------------------\n@@ -17077,52 +17072,6 @@ package body Sem_Util is\n          return True;\n       end Caller_Known_Size_Record;\n \n-      ---------------------------\n-      -- Has_Discrim_Dep_Array --\n-      ---------------------------\n-\n-      function Has_Discrim_Dep_Array (Typ : Entity_Id) return Boolean is\n-         pragma Assert (Typ = Underlying_Type (Typ));\n-\n-      begin\n-         if Is_Array_Type (Typ) then\n-            return Size_Depends_On_Discriminant (Typ);\n-         end if;\n-\n-         if Is_Record_Type (Typ)\n-              or else\n-            Is_Protected_Type (Typ)\n-         then\n-            declare\n-               Comp : Entity_Id;\n-\n-            begin\n-               Comp := First_Entity (Typ);\n-               while Present (Comp) loop\n-\n-                  --  Only look at E_Component entities. No need to look at\n-                  --  E_Discriminant entities, and we must ignore internal\n-                  --  subtypes generated for constrained components.\n-\n-                  if Ekind (Comp) = E_Component then\n-                     declare\n-                        Comp_Type : constant Entity_Id :=\n-                                      Underlying_Type (Etype (Comp));\n-                     begin\n-                        if Has_Discrim_Dep_Array (Comp_Type) then\n-                           return True;\n-                        end if;\n-                     end;\n-                  end if;\n-\n-                  Next_Entity (Comp);\n-               end loop;\n-            end;\n-         end if;\n-\n-         return False;\n-      end Has_Discrim_Dep_Array;\n-\n       --  Local declarations\n \n       Typ : constant Entity_Id := Underlying_Type (Id);\n@@ -17170,14 +17119,6 @@ package body Sem_Util is\n       --  discriminants.\n \n       elsif Is_Definite_Subtype (Typ) or else Is_Task_Type (Typ) then\n-         if Is_Record_Type (Typ) or else Is_Protected_Type (Typ) then\n-            if not Has_Discriminants (Typ) then\n-               if Has_Discrim_Dep_Array (Typ) then\n-                  return True; -- ???Shouldn't be necessary\n-               end if;\n-            end if;\n-         end if;\n-\n          return False;\n \n       --  Indefinite (discriminated) untagged record or protected type"}, {"sha": "ae0981fd05c7183d709da359423f858a9d15ee61", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3d9f448435324040b2305b6017daa47d75e291c/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=e3d9f448435324040b2305b6017daa47d75e291c", "patch": "@@ -104,7 +104,7 @@ begin\n       Write_Line (\"Preserve control flow for coverage analysis\");\n    end if;\n \n-   --  Common switches available to both GCC and JGNAT\n+   --  Common switches available everywhere\n \n    Write_Switch_Char (\"g            \", \"\");\n    Write_Line (\"Generate debugging information\");"}]}