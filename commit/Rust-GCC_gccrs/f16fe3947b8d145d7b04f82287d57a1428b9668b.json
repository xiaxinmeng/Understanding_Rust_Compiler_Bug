{"sha": "f16fe3947b8d145d7b04f82287d57a1428b9668b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2ZmUzOTQ3YjhkMTQ1ZDdiMDRmODIyODdkNTdhMTQyOGI5NjY4Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-27T18:40:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-27T18:40:46Z"}, "message": "* From Jukka Virtanen.\n\n\t* pa.h (TRAMPOLINE_TEMPLATE): Define for the PA.\n\t(TRAMPOLINE_SIZE): Define for the PA.\n\t(INITIALIZE_TRAMPOLINE): Define for the PA.\n\nFrom-SVN: r3894", "tree": {"sha": "f71a63384a9c19ce151fa90f5180664d57f27e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f71a63384a9c19ce151fa90f5180664d57f27e55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f16fe3947b8d145d7b04f82287d57a1428b9668b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16fe3947b8d145d7b04f82287d57a1428b9668b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f16fe3947b8d145d7b04f82287d57a1428b9668b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16fe3947b8d145d7b04f82287d57a1428b9668b/comments", "author": null, "committer": null, "parents": [{"sha": "0002b1a854d38d9ea0e663ca5ca82c9908e5bb8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0002b1a854d38d9ea0e663ca5ca82c9908e5bb8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0002b1a854d38d9ea0e663ca5ca82c9908e5bb8b"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "27b2a80c7f31f0c790dd9f8236e85e58ee7e84b5", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16fe3947b8d145d7b04f82287d57a1428b9668b/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16fe3947b8d145d7b04f82287d57a1428b9668b/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=f16fe3947b8d145d7b04f82287d57a1428b9668b", "patch": "@@ -960,23 +960,52 @@ extern union tree_node *current_function_decl;\n   eligible_for_epilogue_delay (trial, slots_filled)\n \n /* Output assembler code for a block containing the constant parts\n-   of a trampoline, leaving space for the variable parts.  */\n+   of a trampoline, leaving space for the variable parts.\\\n \n-#define TRAMPOLINE_TEMPLATE(FILE) {}\n+   The trampoline sets the static chain pointer to STATIC_CHAIN_REGNUM\n+   and then branches to the specified routine.\n \n-/* Length in units of the trampoline for entering a nested function.  */\n+   This code template is copied from text segment to stack location\n+   and then patched with INITIALIZE_TRAMPOLINE to contain\n+   valid values, and then entered as a subroutine. \n \n-#define TRAMPOLINE_SIZE 0\n+   It is best to keep this as small as possible to avoid having to \n+   flush multiple lines in the cache.  */\n+\n+#define TRAMPOLINE_TEMPLATE(FILE) \\\n+{\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\tldw 12(0,%%r22),%%r21\\n\");\t\\\n+  fprintf (FILE, \"\\tbe 0(4,%%r21)\\n\");\t\t\\\n+  fprintf (FILE, \"\\tldw 16(0,%%r22),%%r29\\n\");\t\\\n+  fprintf (FILE, \"\\t.long 0,0\\n\");\t\t\\\n+}\n+\n+/* Length in units of the trampoline for entering a nested function.\n+   If this grows to > 32 bytes, then you must update the flushcache\n+   pattern in pa.md.  */\n+\n+#define TRAMPOLINE_SIZE (5 * 4)\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.\n \n-   This takes 16 insns: 2 shifts & 2 ands (to split up addresses), 4 sethi\n-   (to load in opcodes), 4 iors (to merge address and opcodes), and 4 writes\n-   (to store insns).  This is a bit excessive.  Perhaps a different\n-   mechanism would be better here.  */\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) {}\n+   Move the function address to the trampoline template at offset 12.\n+   Move the static chain value to trampoline template at offset 16.  */\n+\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \\\n+{\t\t\t\t\t\t\t\t\\\n+  rtx addr, mem;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  addr = memory_address (Pmode, plus_constant ((TRAMP), 12));\t\\\n+  emit_move_insn (gen_rtx (MEM, Pmode, addr), (FNADDR));\t\\\n+  addr = memory_address (Pmode, plus_constant ((TRAMP), 16));\t\\\n+  emit_move_insn (gen_rtx (MEM, Pmode, addr), (CXT));\t\t\\\n+  /* fdc and fic only use registers for the address to flush,\t\\\n+     they do not accept integer displacements.  */ \t\t\\\n+  addr = force_reg (SImode, (TRAMP));\t\t\t\t\\\n+  emit_insn (gen_cacheflush (gen_rtx (MEM, Pmode, addr)));\t\\\n+}\n \n /* Emit code for a call to builtin_saveregs.  We must emit USE insns which\n    reference the 4 integer arg registers and 4 fp arg registers."}]}