{"sha": "80a09e02289bb693ada2601ea4cc9e0b6df3f375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBhMDllMDIyODliYjY5M2FkYTI2MDFlYTRjYzllMGI2ZGYzZjM3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-09-30T12:34:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:02Z"}, "message": "[Ada] AI12-0394 Named Numbers and User-Defined Numeric Literals\n\ngcc/ada/\n\n\t* sem_ch13.adb (Validate_Literal_Aspect): Add support for named\n\tnumbers and in particular overload of the Real_Literal function.\n\t* sem_res.adb (Resolve): Add support for named numbers in\n\tReal_Literal and Integer_Literal resolution.\n\t* einfo.adb, einfo.ads (Related_Expression,\n\tSet_Related_Expression): Allow E_Function.\n\t* uintp.ads (UI_Image_Max): Bump size of buffer to avoid loosing\n\tprecision.\n\t* sem_eval.adb: Fix typo in comment.\n\t* libgnat/a-nbnbin.adb, libgnat/a-nbnbin.ads (From_String):\n\tReturn a Valid_Big_Integer.\n\t* libgnat/a-nbnbre.adb, libgnat/a-nbnbre.ads (From_String): New\n\tvariant taking two strings. Return a Valid_Big_Real.", "tree": {"sha": "dccf608a0fe33ad689ef3afd442af6ad40eb9f34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dccf608a0fe33ad689ef3afd442af6ad40eb9f34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80a09e02289bb693ada2601ea4cc9e0b6df3f375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a09e02289bb693ada2601ea4cc9e0b6df3f375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a09e02289bb693ada2601ea4cc9e0b6df3f375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a09e02289bb693ada2601ea4cc9e0b6df3f375/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb1cad0e0747501e9d54eeec6b0481eb87d23c5"}], "stats": {"total": 216, "additions": 161, "deletions": 55}, "files": [{"sha": "3824b177684c20b8e9115797146498b0bbaca6ef", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -3202,7 +3202,8 @@ package body Einfo is\n \n    function Related_Expression (Id : E) return N is\n    begin\n-      pragma Assert (Ekind (Id) in Type_Kind | E_Constant | E_Variable);\n+      pragma Assert\n+        (Ekind (Id) in Type_Kind | E_Constant | E_Variable | E_Function);\n       return Node24 (Id);\n    end Related_Expression;\n \n@@ -6478,7 +6479,8 @@ package body Einfo is\n    procedure Set_Related_Expression (Id : E; V : N) is\n    begin\n       pragma Assert\n-        (Ekind (Id) in Type_Kind | E_Constant | E_Variable | E_Void);\n+        (Ekind (Id) in\n+           Type_Kind | E_Constant | E_Variable | E_Function | E_Void);\n       Set_Node24 (Id, V);\n    end Set_Related_Expression;\n "}, {"sha": "bc58b88d20f8226d4d706de20446e509865bf853", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -4115,14 +4115,16 @@ package Einfo is\n --       only for type-related error messages.\n \n --    Related_Expression (Node24)\n---       Defined in variables and types. When Set for internally generated\n---       entities, it may be used to denote the source expression whose\n---       elaboration created the variable declaration. If set, it is used\n+--       Defined in variables, types and functions. When Set for internally\n+--       generated entities, it may be used to denote the source expression\n+--       whose elaboration created the variable declaration. If set, it is used\n --       for generating clearer messages from CodePeer. It is used on source\n --       entities that are variables in iterator specifications, to provide\n --       a link to the container that is the domain of iteration. This allows\n --       for better cross-reference information when the loop modifies elements\n --       of the container, and suppresses spurious warnings.\n+--       Finally this node is used on functions specified via the Real_Literal\n+--       aspect, to denote the 2-parameter overloading, if found.\n --\n --       Shouldn't it also be used for the same purpose in errout? It seems\n --       odd to have two mechanisms here???"}, {"sha": "01f41d8722646eb237aedc3c795543b90ef78676", "filename": "gcc/ada/libgnat/a-nbnbin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -235,7 +235,7 @@ package body Ada.Numerics.Big_Numbers.Big_Integers is\n    -- From_String --\n    -----------------\n \n-   function From_String (Arg : String) return Big_Integer is\n+   function From_String (Arg : String) return Valid_Big_Integer is\n       procedure Scan_Decimal\n         (Arg : String; J : in out Natural; Result : out Big_Integer);\n       --  Scan decimal value starting at Arg (J). Store value in Result if"}, {"sha": "668da8df34214f798e1bf8a72c3260d1e5393b0a", "filename": "gcc/ada/libgnat/a-nbnbin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbin.ads?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -113,7 +113,7 @@ is\n      Post   => To_String'Result'First = 1,\n      Global => null;\n \n-   function From_String (Arg : String) return Big_Integer\n+   function From_String (Arg : String) return Valid_Big_Integer\n      with Global => null;\n \n    procedure Put_Image (S : in out Sink'Class; V : Big_Integer);"}, {"sha": "8459539d21239042c453f70906be5a4077b672f7", "filename": "gcc/ada/libgnat/a-nbnbre.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -318,7 +318,7 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n    -- From_String --\n    -----------------\n \n-   function From_String (Arg : String) return Big_Real is\n+   function From_String (Arg : String) return Valid_Big_Real is\n       Ten   : constant Big_Integer := To_Big_Integer (10);\n       Frac  : Big_Integer;\n       Exp   : Integer := 0;\n@@ -373,6 +373,13 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n       end;\n    end From_String;\n \n+   function From_String\n+     (Numerator, Denominator : String) return Valid_Big_Real is\n+   begin\n+      return Big_Integers.From_String (Numerator) /\n+        Big_Integers.From_String (Denominator);\n+   end From_String;\n+\n    --------------------------\n    -- From_Quotient_String --\n    --------------------------"}, {"sha": "ee5636f21d13642d9a462720eb2ccefb2108a275", "filename": "gcc/ada/libgnat/a-nbnbre.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbre.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Flibgnat%2Fa-nbnbre.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbre.ads?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -120,7 +120,9 @@ is\n      Post   => To_String'Result'First = 1,\n      Global => null;\n \n-   function From_String (Arg : String) return Big_Real\n+   function From_String (Arg : String) return Valid_Big_Real\n+     with Global => null;\n+   function From_String (Numerator, Denominator : String) return Valid_Big_Real\n      with Global => null;\n \n    function To_Quotient_String (Arg : Big_Real) return String is"}, {"sha": "3a906c7f610613894eb710c0135d882f6c96fc4b", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 57, "deletions": 13, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -16177,12 +16177,31 @@ package body Sem_Ch13 is\n       Func_Name   : constant Node_Id := Expression (ASN);\n       Overloaded  : Boolean := Is_Overloaded (Func_Name);\n \n-      I           : Interp_Index;\n-      It          : Interp;\n-      Param_Type  : Entity_Id;\n-      Match_Found : Boolean := False;\n-      Is_Match    : Boolean;\n-      Match       : Interp;\n+      I            : Interp_Index;\n+      It           : Interp;\n+      Param_Type   : Entity_Id;\n+      Match_Found  : Boolean := False;\n+      Match2_Found : Boolean := False;\n+      Is_Match     : Boolean;\n+      Match        : Interp;\n+      Match2       : Entity_Id := Empty;\n+\n+      function Matching\n+        (Param_Id : Entity_Id; Param_Type : Entity_Id) return Boolean;\n+      --  Return True if Param_Id is a non aliased in parameter whose base type\n+      --  is Param_Type.\n+\n+      --------------\n+      -- Matching --\n+      --------------\n+\n+      function Matching\n+        (Param_Id : Entity_Id; Param_Type : Entity_Id) return Boolean is\n+      begin\n+         return Base_Type (Etype (Param_Id)) = Param_Type\n+           and then Ekind (Param_Id) = E_In_Parameter\n+           and then not Is_Aliased (Param_Id);\n+      end Matching;\n \n    begin\n       if not Is_Type (Typ) then\n@@ -16234,20 +16253,39 @@ package body Sem_Ch13 is\n                Params     : constant List_Id :=\n                  Parameter_Specifications (Parent (It.Nam));\n                Param_Spec : Node_Id;\n-               Param_Id   : Entity_Id;\n \n             begin\n                if List_Length (Params) = 1 then\n                   Param_Spec := First (Params);\n+                  Is_Match :=\n+                    Matching (Defining_Identifier (Param_Spec), Param_Type);\n+\n+               --  Look for the optional overloaded 2-param Real_Literal\n \n-                  if not More_Ids (Param_Spec) then\n-                     Param_Id := Defining_Identifier (Param_Spec);\n+               elsif List_Length (Params) = 2\n+                 and then A_Id = Aspect_Real_Literal\n+               then\n+                  Param_Spec := First (Params);\n \n-                     if Base_Type (Etype (Param_Id)) = Param_Type\n-                       and then Ekind (Param_Id) = E_In_Parameter\n-                       and then not Is_Aliased (Param_Id)\n+                  if Matching (Defining_Identifier (Param_Spec), Param_Type)\n+                  then\n+                     Param_Spec := Next (Param_Spec);\n+\n+                     if Matching (Defining_Identifier (Param_Spec), Param_Type)\n                      then\n-                        Is_Match := True;\n+                        if No (Match2) then\n+                           Match2 := It.Nam;\n+                           Match2_Found := True;\n+                        else\n+                           --  If we find more than one possible match then\n+                           --  do not take any into account here: since the\n+                           --  2-parameter version of Real_Literal is optional\n+                           --  we cannot generate an error here, so let\n+                           --  standard resolution fail later if we do need to\n+                           --  call this variant.\n+\n+                           Match2_Found := False;\n+                        end if;\n                      end if;\n                   end if;\n                end if;\n@@ -16282,6 +16320,12 @@ package body Sem_Ch13 is\n       Set_Entity (Func_Name, Match.Nam);\n       Set_Etype (Func_Name, Etype (Match.Nam));\n       Set_Is_Overloaded (Func_Name, False);\n+\n+      --  Record the match for 2-parameter function if found\n+\n+      if Match2_Found then\n+         Set_Related_Expression (Match.Nam, Match2);\n+      end if;\n    end Validate_Literal_Aspect;\n \n    -----------------------------------"}, {"sha": "a04c5fa513c92fc0c13c551e4284e0e419122aa6", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -7318,7 +7318,7 @@ package body Sem_Eval is\n \n             elsif Ekind (E) = E_Constant then\n \n-               --  One case we can give a metter message is when we have a\n+               --  One case we can give a better message is when we have a\n                --  string literal created by concatenating an aggregate with\n                --  an others expression.\n "}, {"sha": "f2f0a12bef0bcab39f7aa7c8142a7a4e81bd799e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 80, "deletions": 31, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -2155,6 +2155,10 @@ package body Sem_Res is\n            N_Real_Literal    => Aspect_Real_Literal,\n            N_String_Literal  => Aspect_String_Literal);\n \n+      Named_Number_Aspect_Map : constant array (Named_Kind) of Aspect_Id :=\n+        (E_Named_Integer => Aspect_Integer_Literal,\n+         E_Named_Real    => Aspect_Real_Literal);\n+\n    --  Start of processing for Resolve\n \n    begin\n@@ -2880,58 +2884,102 @@ package body Sem_Res is\n             --  Rewrite Literal as a call if the corresponding literal aspect\n             --  is set.\n \n-            if Nkind (N) in N_Numeric_Or_String_Literal\n-              and then Present\n-                         (Find_Aspect (Typ, Literal_Aspect_Map (Nkind (N))))\n+            if (Nkind (N) in N_Numeric_Or_String_Literal\n+                 and then\n+                   Present\n+                     (Find_Aspect (Typ, Literal_Aspect_Map (Nkind (N)))))\n+              or else\n+                (Nkind (N) = N_Identifier\n+                  and then Is_Named_Number (Entity (N))\n+                  and then\n+                    Present\n+                      (Find_Aspect\n+                        (Typ, Named_Number_Aspect_Map (Ekind (Entity (N))))))\n             then\n                declare\n-                  function Literal_Text (N : Node_Id) return String_Id;\n-                  --  Returns the text of a literal node\n+                  Lit_Aspect : constant Aspect_Id :=\n+                    (if Nkind (N) = N_Identifier\n+                     then Named_Number_Aspect_Map (Ekind (Entity (N)))\n+                     else Literal_Aspect_Map (Nkind (N)));\n \n-                  -------------------\n-                  --  Literal_Text --\n-                  -------------------\n+                  Loc  : constant Source_Ptr := Sloc (N);\n \n-                  function Literal_Text (N : Node_Id) return String_Id is\n-                  begin\n-                     pragma Assert (Nkind (N) in N_Numeric_Or_String_Literal);\n+                  Callee : Entity_Id :=\n+                    Entity (Expression (Find_Aspect (Typ, Lit_Aspect)));\n \n-                     if Nkind (N) = N_String_Literal then\n-                        return Strval (N);\n-                     else\n-                        return String_From_Numeric_Literal (N);\n-                     end if;\n-                  end Literal_Text;\n+                  Name : constant Node_Id :=\n+                    Make_Identifier (Loc, Chars (Callee));\n \n-                  Lit_Aspect : constant Aspect_Id :=\n-                    Literal_Aspect_Map (Nkind (N));\n+                  Param1 : Node_Id;\n+                  Param2 : Node_Id;\n+                  Params : List_Id;\n+                  Call   : Node_Id;\n+                  Expr   : Node_Id;\n \n-                  Callee : constant Entity_Id :=\n-                    Entity (Expression (Find_Aspect (Typ, Lit_Aspect)));\n+               begin\n+                  if Nkind (N) = N_Identifier then\n+                     Expr := Expression (Declaration_Node (Entity (N)));\n \n-                  Loc  : constant Source_Ptr := Sloc (N);\n+                     if Ekind (Entity (N)) = E_Named_Integer then\n+                        UI_Image (Expr_Value (Expr), Decimal);\n+                        Start_String;\n+                        Store_String_Chars\n+                          (UI_Image_Buffer (1 .. UI_Image_Length));\n+                        Param1 := Make_String_Literal (Loc, End_String);\n+                        Params := New_List (Param1);\n \n-                  Name : constant Node_Id :=\n-                    Make_Identifier (Loc, Chars (Callee));\n+                     else\n+                        UI_Image (Norm_Num (Expr_Value_R (Expr)), Decimal);\n+                        Start_String;\n+                        Store_String_Chars\n+                          (UI_Image_Buffer (1 .. UI_Image_Length));\n+                        Param1 := Make_String_Literal (Loc, End_String);\n+\n+                        --  Note: Set_Etype is called below on Param1\n+\n+                        UI_Image (Norm_Den (Expr_Value_R (Expr)), Decimal);\n+                        Start_String;\n+                        Store_String_Chars\n+                          (UI_Image_Buffer (1 .. UI_Image_Length));\n+                        Param2 := Make_String_Literal (Loc, End_String);\n+                        Set_Etype (Param2, Standard_String);\n+\n+                        Params := New_List (Param1, Param2);\n \n-                  Param : constant Node_Id :=\n-                    Make_String_Literal (Loc, Literal_Text (N));\n+                        if Present (Related_Expression (Callee)) then\n+                           Callee := Related_Expression (Callee);\n+                        else\n+                           Error_Msg_NE\n+                             (\"cannot resolve & for a named real\", N, Callee);\n+                           return;\n+                        end if;\n+                     end if;\n \n-                  Params : constant List_Id := New_List (Param);\n+                  elsif Nkind (N) = N_String_Literal then\n+                     Param1 := Make_String_Literal (Loc, Strval (N));\n+                     Params := New_List (Param1);\n+                  else\n+                     Param1 :=\n+                       Make_String_Literal\n+                         (Loc, String_From_Numeric_Literal (N));\n+                     Params := New_List (Param1);\n+                  end if;\n \n-                  Call : Node_Id :=\n+                  Call :=\n                     Make_Function_Call\n                       (Sloc                   => Loc,\n                        Name                   => Name,\n                        Parameter_Associations => Params);\n-               begin\n+\n                   Set_Entity (Name, Callee);\n                   Set_Is_Overloaded (Name, False);\n+\n                   if Lit_Aspect = Aspect_String_Literal then\n-                     Set_Etype (Param, Standard_Wide_Wide_String);\n+                     Set_Etype (Param1, Standard_Wide_Wide_String);\n                   else\n-                     Set_Etype (Param, Standard_String);\n+                     Set_Etype (Param1, Standard_String);\n                   end if;\n+\n                   Set_Etype (Call, Etype (Callee));\n \n                   --  Conversion needed in case of an inherited aspect\n@@ -2947,6 +2995,7 @@ package body Sem_Res is\n \n                   Rewrite (N, Call);\n                end;\n+\n                Analyze_And_Resolve (N, Typ);\n                return;\n             end if;"}, {"sha": "abae0cdda905b2e5dd8d8092dff11b29ba6e0e03", "filename": "gcc/ada/uintp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fuintp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a09e02289bb693ada2601ea4cc9e0b6df3f375/gcc%2Fada%2Fuintp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.ads?ref=80a09e02289bb693ada2601ea4cc9e0b6df3f375", "patch": "@@ -281,7 +281,7 @@ package Uintp is\n    --  or decimal format. Auto, the default setting, lets the routine make a\n    --  decision based on the value.\n \n-   UI_Image_Max    : constant := 48; -- Enough for a 128-bit number\n+   UI_Image_Max    : constant := 1024;\n    UI_Image_Buffer : String (1 .. UI_Image_Max);\n    UI_Image_Length : Natural;\n    --  Buffer used for UI_Image as described below"}]}