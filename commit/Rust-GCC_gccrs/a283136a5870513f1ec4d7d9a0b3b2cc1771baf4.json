{"sha": "a283136a5870513f1ec4d7d9a0b3b2cc1771baf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI4MzEzNmE1ODcwNTEzZjFlYzRkN2Q5YTBiM2IyY2MxNzcxYmFmNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-03-31T15:24:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-03-31T15:24:56Z"}, "message": "Add a testcase for PR rtl-optimization/60700\n\n\tPR rtl-optimization/60700\n\t* gcc.target/i386/pr60700.c: New test.\n\nFrom-SVN: r208962", "tree": {"sha": "14d97bc30b10045d1eec672eb7a8f3fa6985598d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14d97bc30b10045d1eec672eb7a8f3fa6985598d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80dc1f0c88d68e39ed9be6baae040c1048ab64f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80dc1f0c88d68e39ed9be6baae040c1048ab64f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80dc1f0c88d68e39ed9be6baae040c1048ab64f0"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "ccffd4965a727c9ddda05ae3e51547b910f95724", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a283136a5870513f1ec4d7d9a0b3b2cc1771baf4", "patch": "@@ -1,3 +1,8 @@\n+2014-03-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR rtl-optimization/60700\n+\t* gcc.target/i386/pr60700.c: New test.\n+\n 2014-03-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/60650"}, {"sha": "5428f3616237ebbbf21dfa6dc61f9bd0b0b9a9e2", "filename": "gcc/testsuite/gcc.target/i386/pr60700.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60700.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a283136a5870513f1ec4d7d9a0b3b2cc1771baf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60700.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60700.c?ref=a283136a5870513f1ec4d7d9a0b3b2cc1771baf4", "patch": "@@ -0,0 +1,59 @@\n+/* PR rtl-optimization/60700 */\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O3 -march=i686\" } */\n+\n+int\n+__attribute__((noinline))\n+foo (void)\n+{\n+  return 0;\n+}\n+\n+void *g = (void *)1;\n+\n+struct st {\n+  char data[36]; /* must be greater than 32.  */\n+};\n+\n+int\n+__attribute__((noinline))\n+repro(struct st **out)\n+{\n+  int status = 0;\n+\n+  *out = 0;\n+\n+  status = foo();\n+  if (status != 0) {\n+    return status;\n+  }\n+\n+  if (0 == g) {\n+    status = 999;\n+    return status;\n+  }\n+\n+  *out = (struct st *)__builtin_malloc(sizeof(struct st));\n+  if (0 == *out) {\n+    status = 42;\n+    return status;\n+  }\n+\n+  __builtin_memset(*out, 0, sizeof(struct st));\n+\n+  return status;\n+}\n+\n+int\n+main ()\n+{\n+  struct st *p;\n+  int ret = repro (&p);\n+  unsigned int i;\n+\n+  for (i = 0; i < sizeof (p->data)/sizeof (p->data[0]); i++)\n+    if (p->data[i] != 0)\n+      __builtin_abort ();\n+\n+  return ret;\n+}"}]}