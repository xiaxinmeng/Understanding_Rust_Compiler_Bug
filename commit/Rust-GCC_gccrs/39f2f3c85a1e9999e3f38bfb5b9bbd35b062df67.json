{"sha": "39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlmMmYzYzg1YTFlOTk5OWUzZjM4YmZiNWI5YmJkMzViMDYyZGY2Nw==", "commit": {"author": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-05-27T21:09:38Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-05-27T21:09:38Z"}, "message": "c-common.c: Add support for __attribute__((nothrow)) to specify that a function cannot...\n\n\n\t* c-common.c: Add support for __attribute__((nothrow)) to specify\n\tthat a function cannot throw an exception (using TREE_NOTHROW).\n\t(handle_nothrow_attribute): New function to process this attribute.\n\n\t* doc/extend.texi: Document the new nothrow function attribute.\n\n2002-05-27  Richard Henderson  <rth@redhat.com>\n\n\t* g++.dg/ext/attrib6.C: New test case.\n\nFrom-SVN: r53940", "tree": {"sha": "ef5638bc097170d139e365da78c3dceb1d3a2ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5638bc097170d139e365da78c3dceb1d3a2ffa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/comments", "author": null, "committer": null, "parents": [{"sha": "d51b0053f5c1dd2509c69729d3c474b2cf7de66c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51b0053f5c1dd2509c69729d3c474b2cf7de66c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51b0053f5c1dd2509c69729d3c474b2cf7de66c"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "e820f949d4b9b38bc3d3a48ad75aa8fa0ef3e6c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "patch": "@@ -1,3 +1,11 @@\n+2002-05-27  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* c-common.c: Add support for __attribute__((nothrow)) to specify\n+\tthat a function cannot throw an exception (using TREE_NOTHROW).\n+\t(handle_nothrow_attribute): New function to process this attribute.\n+\n+\t* doc/extend.texi: Document the new nothrow function attribute.\n+\n 2002-05-27  H.J. Lu  (hjl@gnu.org)\n \n \t* cppexp.c (num_trim): Use 1UL instead of 1 for long int."}, {"sha": "aeb6a2e45f4a94a392de0ac240d59489615a6941", "filename": "gcc/c-common.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "patch": "@@ -351,6 +351,8 @@ static tree handle_vector_size_attribute PARAMS ((tree *, tree, tree, int,\n \t\t\t\t\t\t  bool *));\n static tree handle_nonnull_attribute\tPARAMS ((tree *, tree, tree, int,\n \t\t\t\t\t\t bool *));\n+static tree handle_nothrow_attribute\tPARAMS ((tree *, tree, tree, int,\n+\t\t\t\t\t\t bool *));\n static tree vector_size_helper PARAMS ((tree, tree));\n \n static void check_function_nonnull\tPARAMS ((tree, tree));\n@@ -425,6 +427,8 @@ const struct attribute_spec c_common_attribute_table[] =\n \t\t\t      handle_visibility_attribute },\n   { \"nonnull\",                0, -1, false, true, true,\n \t\t\t      handle_nonnull_attribute },\n+  { \"nothrow\",                0, 0, true,  false, false,\n+\t\t\t      handle_nothrow_attribute },\n   { NULL,                     0, 0, false, false, false, NULL }\n };\n \n@@ -5795,6 +5799,29 @@ get_nonnull_operand (arg_num_expr, valp)\n   *valp = TREE_INT_CST_LOW (arg_num_expr);\n   return true;\n }\n+\n+/* Handle a \"nothrow\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_nothrow_attribute (node, name, args, flags, no_add_attrs)\n+     tree *node;\n+     tree name;\n+     tree args ATTRIBUTE_UNUSED;\n+     int flags ATTRIBUTE_UNUSED;\n+     bool *no_add_attrs;\n+{\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    TREE_NOTHROW (*node) = 1;\n+  /* ??? TODO: Support types.  */\n+  else\n+    {\n+      warning (\"`%s' attribute ignored\", IDENTIFIER_POINTER (name));\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n \f\n /* Check for valid arguments being passed to a function.  */\n void"}, {"sha": "87701efca98705fb6aa6a163406ebdb75efd0f3c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "patch": "@@ -1883,7 +1883,7 @@ attributes when making a declaration.  This keyword is followed by an\n attribute specification inside double parentheses.  The following\n attributes are currently defined for functions on all targets:\n @code{noreturn}, @code{noinline}, @code{always_inline},\n-@code{pure}, @code{const},\n+@code{pure}, @code{const}, @code{nothrow},\n @code{format}, @code{format_arg}, @code{no_instrument_function},\n @code{section}, @code{constructor}, @code{destructor}, @code{used},\n @code{unused}, @code{deprecated}, @code{weak}, @code{malloc},\n@@ -2007,6 +2007,14 @@ extern const intfn square;\n This approach does not work in GNU C++ from 2.6.0 on, since the language\n specifies that the @samp{const} must be attached to the return value.\n \n+@cindex @code{nothrow} function attribute\n+@item nothrow\n+The @code{nothrow} attribute is used to inform the compiler that a\n+function cannot throw an exception.  For example, most functions in\n+the standard C library can be guaranteed not to throw an exception\n+with the notable exceptions of @code{qsort} and @code{bsearch} that\n+take function pointer arguments.  The @code{nothrow} attribute is not\n+implemented in GCC versions earlier than 3.2.\n \n @item format (@var{archetype}, @var{string-index}, @var{first-to-check})\n @cindex @code{format} function attribute"}, {"sha": "2a9cf8b81a3d4f3e0bcb3bd630f70bf5f9167219", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "patch": "@@ -1,3 +1,7 @@\n+2002-05-27  Richard Henderson  <rth@redhat.com>\n+\n+\t* g++.dg/ext/attrib6.C: New test case.\n+\n 2002-05-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.c-torture/execute/pure-1.c: New test."}, {"sha": "2bdb180d1b4664a2fd7925b03017d2d634ef0deb", "filename": "gcc/testsuite/g++.dg/ext/attrib6.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib6.C?ref=39f2f3c85a1e9999e3f38bfb5b9bbd35b062df67", "patch": "@@ -0,0 +1,21 @@\n+// Copyright (C) 2002  Free Software Foundation.\n+//\n+// Test that the nothrow attribute is working correctly.\n+//\n+// Written by Richard Henderson, 26 May 2002.\n+\n+// { dg-do link }\n+extern void foo() __attribute__((nothrow));\n+extern void link_error();\n+\n+int main()\n+{\n+  try {\n+    foo();\n+  } catch (...) {\n+    link_error();\n+  }\n+}\n+\n+void foo() { }\n+"}]}