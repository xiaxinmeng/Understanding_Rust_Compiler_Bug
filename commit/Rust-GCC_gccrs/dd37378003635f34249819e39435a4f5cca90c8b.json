{"sha": "dd37378003635f34249819e39435a4f5cca90c8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzNzM3ODAwMzYzNWYzNDI0OTgxOWUzOTQzNWE0ZjVjY2E5MGM4Yg==", "commit": {"author": {"name": "Chris Manghane", "email": "cmang@google.com", "date": "2015-01-07T16:14:50Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-07T16:14:50Z"}, "message": "re PR go/61204 (gccgo: ICE in in fold_convert_loc [GoSmith])\n\n\tPR go/61204\n\t* go-gcc.cc (Gcc_backend::temporary_variable): Don't initialize\n\tzero-sized variable.\n\nFrom-SVN: r219316", "tree": {"sha": "3f7d332f90846ff1b911ab7920f0e2269e0e1bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f7d332f90846ff1b911ab7920f0e2269e0e1bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd37378003635f34249819e39435a4f5cca90c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd37378003635f34249819e39435a4f5cca90c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd37378003635f34249819e39435a4f5cca90c8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd37378003635f34249819e39435a4f5cca90c8b/comments", "author": null, "committer": null, "parents": [{"sha": "649a274903bed44696f204578da1dd3d5318458f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649a274903bed44696f204578da1dd3d5318458f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649a274903bed44696f204578da1dd3d5318458f"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "bc952150582c5ecceb3748096f332517d4b9de64", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd37378003635f34249819e39435a4f5cca90c8b/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd37378003635f34249819e39435a4f5cca90c8b/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=dd37378003635f34249819e39435a4f5cca90c8b", "patch": "@@ -1,7 +1,14 @@\n+2015-01-07  Chris Manghane  <cmang@google.com>\n+\n+\tPR go/61204\n+\t* go-gcc.cc (Gcc_backend::temporary_variable): Don't initialize\n+\tzero-sized variable.\n+\n 2015-01-06  Chris Manghane  <cmang@google.com>\n \n-\t* go-gcc.cc (constructor_expression): Don't initialize zero-sized\n-\tfields, just evaluate the values for side effects.\n+\t* go-gcc.cc (Gcc_backend::constructor_expression): Don't\n+\tinitialize zero-sized fields, just evaluate the values for side\n+\teffects.\n \n 2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -11,8 +18,8 @@\n \n 2014-12-19  Chris Manghane  <cmang@google.com>\n \n-\t* go-gcc.cc (array_constructor_expression): Don't construct arrays\n-\tof zero-sized values.\n+\t* go-gcc.cc (Gcc_backend::array_constructor_expression): Don't\n+\tconstruct arrays of zero-sized values.\n \n 2014-10-29  Richard Sandiford  <richard.sandiford@arm.com>\n "}, {"sha": "1566552cea64367af31abd023efc8c81ba444a87", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd37378003635f34249819e39435a4f5cca90c8b/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd37378003635f34249819e39435a4f5cca90c8b/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=dd37378003635f34249819e39435a4f5cca90c8b", "patch": "@@ -2536,7 +2536,7 @@ Gcc_backend::temporary_variable(Bfunction* function, Bblock* bblock,\n       BIND_EXPR_VARS(bind_tree) = BLOCK_VARS(block_tree);\n     }\n \n-  if (init_tree != NULL_TREE)\n+  if (this->type_size(btype) != 0 && init_tree != NULL_TREE)\n     DECL_INITIAL(var) = fold_convert_loc(location.gcc_location(), type_tree,\n                                          init_tree);\n \n@@ -2546,6 +2546,13 @@ Gcc_backend::temporary_variable(Bfunction* function, Bblock* bblock,\n   *pstatement = this->make_statement(build1_loc(location.gcc_location(),\n                                                 DECL_EXPR,\n \t\t\t\t\t\tvoid_type_node, var));\n+\n+  // Don't initialize VAR with BINIT, but still evaluate BINIT for\n+  // its side effects.\n+  if (this->type_size(btype) == 0 && init_tree != NULL_TREE)\n+    *pstatement = this->compound_statement(this->expression_statement(binit),\n+\t\t\t\t\t   *pstatement);\n+\n   return new Bvariable(var);\n }\n "}]}