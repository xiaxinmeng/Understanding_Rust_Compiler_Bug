{"sha": "29d78eafa6b183b41cd1f4be14dc643c36dc67f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlkNzhlYWZhNmIxODNiNDFjZDFmNGJlMTRkYzY0M2MzNmRjNjdmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-22T13:22:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-22T13:22:51Z"}, "message": "expr.c (store_constructor): Allow CONSTRUCTOR with VECTOR_TYPE (same sized) elements even if...\n\n\t* expr.c (store_constructor): Allow CONSTRUCTOR with VECTOR_TYPE\n\t(same sized) elements even if the type of the CONSTRUCTOR has\n\tvector mode and target is a REG.\n\nFrom-SVN: r205259", "tree": {"sha": "2caae4a138d77eb9fe19bb9fbaa5035930ce4f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2caae4a138d77eb9fe19bb9fbaa5035930ce4f66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29d78eafa6b183b41cd1f4be14dc643c36dc67f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d78eafa6b183b41cd1f4be14dc643c36dc67f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d78eafa6b183b41cd1f4be14dc643c36dc67f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d78eafa6b183b41cd1f4be14dc643c36dc67f0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dc2114458879e448e4bd43b8593b54f8ce75e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc2114458879e448e4bd43b8593b54f8ce75e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc2114458879e448e4bd43b8593b54f8ce75e55"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "d1b3d54d70e55a24f33aa1930ffd80510591b88f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d78eafa6b183b41cd1f4be14dc643c36dc67f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d78eafa6b183b41cd1f4be14dc643c36dc67f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29d78eafa6b183b41cd1f4be14dc643c36dc67f0", "patch": "@@ -1,3 +1,9 @@\n+2013-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (store_constructor): Allow CONSTRUCTOR with VECTOR_TYPE\n+\t(same sized) elements even if the type of the CONSTRUCTOR has\n+\tvector mode and target is a REG.\n+\n 2013-11-22  Richard Biener  <rguenther@suse.de>\n \n \tRevert"}, {"sha": "6cbd7a95bbc43b8ed2b587077cdf56231fe87198", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d78eafa6b183b41cd1f4be14dc643c36dc67f0/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d78eafa6b183b41cd1f4be14dc643c36dc67f0/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=29d78eafa6b183b41cd1f4be14dc643c36dc67f0", "patch": "@@ -6305,6 +6305,18 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \t    enum machine_mode mode = GET_MODE (target);\n \n \t    icode = (int) optab_handler (vec_init_optab, mode);\n+\t    /* Don't use vec_init<mode> if some elements have VECTOR_TYPE.  */\n+\t    if (icode != CODE_FOR_nothing)\n+\t      {\n+\t\ttree value;\n+\n+\t\tFOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (exp), idx, value)\n+\t\t  if (TREE_CODE (TREE_TYPE (value)) == VECTOR_TYPE)\n+\t\t    {\n+\t\t      icode = CODE_FOR_nothing;\n+\t\t      break;\n+\t\t    }\n+\t      }\n \t    if (icode != CODE_FOR_nothing)\n \t      {\n \t\tunsigned int i;\n@@ -6382,8 +6394,8 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \n \t    if (vector)\n \t      {\n-\t        /* Vector CONSTRUCTORs should only be built from smaller\n-\t\t   vectors in the case of BLKmode vectors.  */\n+\t\t/* vec_init<mode> should not be used if there are VECTOR_TYPE\n+\t\t   elements.  */\n \t\tgcc_assert (TREE_CODE (TREE_TYPE (value)) != VECTOR_TYPE);\n \t\tRTVEC_ELT (vector, eltpos)\n \t\t  = expand_normal (value);"}]}