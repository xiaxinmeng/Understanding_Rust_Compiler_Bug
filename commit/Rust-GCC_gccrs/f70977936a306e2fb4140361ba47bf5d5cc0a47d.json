{"sha": "f70977936a306e2fb4140361ba47bf5d5cc0a47d", "node_id": "C_kwDOANBUbNoAKGY3MDk3NzkzNmEzMDZlMmZiNDE0MDM2MWJhNDdiZjVkNWNjMGE0N2Q", "commit": {"author": {"name": "Marcel Vollweiler", "email": "marcel@codesourcery.com", "date": "2021-10-11T11:34:51Z"}, "committer": {"name": "Marcel Vollweiler", "email": "marcel@codesourcery.com", "date": "2021-10-11T11:34:51Z"}, "message": "libgomp: Add tests for omp_atv_serialized and deprecate omp_atv_sequential.\n\nThe variable omp_atv_sequential was replaced by omp_atv_serialized in OpenMP\n5.1. This was already implemented by Jakub (C/C++, commit ea82325afec) and\nTobias (Fortran, commit fff15bad1ab).\n\nThis patch adds two tests to check if omp_atv_serialized is available (one test\nfor C/C++ and one for Fortran). Besides that omp_atv_sequential is marked as\ndeprecated in C/C++ and Fortran for OpenMP 5.1.\n\nlibgomp/ChangeLog:\n\n\t* allocator.c (omp_init_allocator): Replace omp_atv_sequential with\n\tomp_atv_serialized.\n\t* omp.h.in: Add deprecated flag for omp_atv_sequential.\n\t* omp_lib.f90.in: Add deprecated flag for omp_atv_sequential.\n\t* testsuite/libgomp.c-c++-common/alloc-10.c: New test.\n\t* testsuite/libgomp.fortran/alloc-12.f90: New test.", "tree": {"sha": "edd1bc720eefa9625fd4bedfa4dbe06373186dd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edd1bc720eefa9625fd4bedfa4dbe06373186dd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f70977936a306e2fb4140361ba47bf5d5cc0a47d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70977936a306e2fb4140361ba47bf5d5cc0a47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70977936a306e2fb4140361ba47bf5d5cc0a47d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70977936a306e2fb4140361ba47bf5d5cc0a47d/comments", "author": null, "committer": null, "parents": [{"sha": "07dd3bcda17f97cf5476c3d6f2f2501c1e0712e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07dd3bcda17f97cf5476c3d6f2f2501c1e0712e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07dd3bcda17f97cf5476c3d6f2f2501c1e0712e6"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "deebb6a79fabed55382563440bf54e3e415de9bf", "filename": "libgomp/allocator.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Fallocator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Fallocator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fallocator.c?ref=f70977936a306e2fb4140361ba47bf5d5cc0a47d", "patch": "@@ -82,7 +82,7 @@ omp_init_allocator (omp_memspace_handle_t memspace, int ntraits,\n \t    break;\n \t  case omp_atv_contended:\n \t  case omp_atv_uncontended:\n-\t  case omp_atv_sequential:\n+\t  case omp_atv_serialized:\n \t  case omp_atv_private:\n \t    data.sync_hint = traits[i].value;\n \t    break;"}, {"sha": "6b9ac96cff63ee7b9471384dad422698cc77720d", "filename": "libgomp/omp.h.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Fomp.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Fomp.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp.h.in?ref=f70977936a306e2fb4140361ba47bf5d5cc0a47d", "patch": "@@ -157,7 +157,7 @@ typedef enum omp_alloctrait_value_t\n   omp_atv_contended = 3,\n   omp_atv_uncontended = 4,\n   omp_atv_serialized = 5,\n-  omp_atv_sequential = omp_atv_serialized,\n+  omp_atv_sequential __GOMP_DEPRECATED_5_1 = omp_atv_serialized,\n   omp_atv_private = 6,\n   omp_atv_all = 7,\n   omp_atv_thread = 8,"}, {"sha": "e870755891ce8ecbf03263a9606cf95c392c4fe8", "filename": "libgomp/omp_lib.f90.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Fomp_lib.f90.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Fomp_lib.f90.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.f90.in?ref=f70977936a306e2fb4140361ba47bf5d5cc0a47d", "patch": "@@ -840,7 +840,7 @@\n #endif\n \n #if _OPENMP >= 202011\n-!GCC$ ATTRIBUTES DEPRECATED :: omp_proc_bind_master\n+!GCC$ ATTRIBUTES DEPRECATED :: omp_proc_bind_master, omp_atv_sequential\n #endif\n \n       end module omp_lib"}, {"sha": "01ae150dd870914843a90d0e407506ae259809b0", "filename": "libgomp/testsuite/libgomp.c-c++-common/alloc-10.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Falloc-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Falloc-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Falloc-10.c?ref=f70977936a306e2fb4140361ba47bf5d5cc0a47d", "patch": "@@ -0,0 +1,25 @@\n+#include <omp.h>\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+const omp_alloctrait_t traits[]\n+= { { omp_atk_alignment, 64 },\n+    { omp_atk_sync_hint, omp_atv_serialized },\n+    { omp_atk_fallback, omp_atv_null_fb } };\n+\n+int\n+main ()\n+{\n+  omp_allocator_handle_t a;\n+  int *volatile p;\n+  a = omp_init_allocator (omp_default_mem_space, 3, traits);\n+  if (a == omp_null_allocator)\n+    abort ();\n+  p = (int *) omp_alloc (3072, a);\n+  if ((((uintptr_t) p) % 64) != 0)\n+    abort ();\n+  p[0] = 1;\n+  p[3071 / sizeof (int)] = 2;\n+  omp_free (p, a);\n+  omp_destroy_allocator (a);\n+}"}, {"sha": "3d10959a0180a268a6117439afb9726bcc292b4e", "filename": "libgomp/testsuite/libgomp.fortran/alloc-12.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70977936a306e2fb4140361ba47bf5d5cc0a47d/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-12.f90?ref=f70977936a306e2fb4140361ba47bf5d5cc0a47d", "patch": "@@ -0,0 +1,28 @@\n+! { dg-additional-options \"-Wall -Wextra\" }\n+program main\n+  use omp_lib\n+  use ISO_C_Binding\n+  implicit none (external, type)\n+  type(c_ptr) :: p\n+  integer, pointer, contiguous :: ip(:)\n+  type (omp_alloctrait) :: traits(3)\n+  integer (omp_allocator_handle_kind) :: a\n+  integer (c_ptrdiff_t) :: iptr\n+\n+  traits = [omp_alloctrait (omp_atk_alignment, 64), &\n+            omp_alloctrait (omp_atk_fallback, omp_atv_null_fb), &\n+            omp_alloctrait (omp_atk_sync_hint, omp_atv_serialized)]\n+  a = omp_init_allocator (omp_default_mem_space, 3, traits)\n+  if (a == omp_null_allocator) stop 1\n+\n+  p = omp_alloc (3 * c_sizeof (0), a)\n+  if (.not. c_associated (p)) stop 2\n+  call c_f_pointer (p, ip, [3])\n+  if (mod (TRANSFER (p, iptr), 64) /= 0) &\n+    stop 3\n+  ip(1) = 1\n+  ip(2) = 2\n+  ip(3) = 3\n+  call omp_free (p, a)\n+  call omp_destroy_allocator (a)\n+end program main"}]}