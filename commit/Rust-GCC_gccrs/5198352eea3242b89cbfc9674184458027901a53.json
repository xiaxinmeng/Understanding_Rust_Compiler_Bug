{"sha": "5198352eea3242b89cbfc9674184458027901a53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5ODM1MmVlYTMyNDJiODljYmZjOTY3NDE4NDQ1ODAyNzkwMWE1Mw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-12-21T13:45:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-21T13:45:20Z"}, "message": "Makefile.in (FPBIT_FUNCS, [...]): Define.\n\n \n        * Makefile.in (FPBIT_FUNCS, DPBIT_FUNCS): Define.\n        (libgcc2.a): Depend on $(DPBIT) and $(FPBIT).  Add rules to\n        generate more fine grained floating point emulation libraries.\n        * config/fp-bit.c: Add protecting #ifdef to all functions so\n        that they can be compiled separately.  If !FINE_GRAINED_LIBRARIES,\n        then compile all suitable functions.\n        (pack_d, unpack_d, fpcmp_parts): Add declarations, define with two\n        underscores to avoid namespace pollution.\n        * t-mn10200 (LIB2FUNCS_EXTRA): Remove fp-bit.c\n        (FPBIT): Define.\n        * t-mn10300 (LIB2FUNCS_EXTRA): Remove fp-bit.c and dp-bit.c\n        (FPBIT): Define.\n        (DPBIT): Define.\n\nFrom-SVN: r17163", "tree": {"sha": "a3930c35ffb64f909bb175eb62a2dd7bcbfc84d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3930c35ffb64f909bb175eb62a2dd7bcbfc84d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5198352eea3242b89cbfc9674184458027901a53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5198352eea3242b89cbfc9674184458027901a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5198352eea3242b89cbfc9674184458027901a53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5198352eea3242b89cbfc9674184458027901a53/comments", "author": null, "committer": null, "parents": [{"sha": "1d300e19b61d11e3a2321a098b7949f6c2058be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d300e19b61d11e3a2321a098b7949f6c2058be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d300e19b61d11e3a2321a098b7949f6c2058be2"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "b1717fcd18c3a23eef2594d5404571357735188d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5198352eea3242b89cbfc9674184458027901a53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5198352eea3242b89cbfc9674184458027901a53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5198352eea3242b89cbfc9674184458027901a53", "patch": "@@ -1,3 +1,19 @@\n+Sun Dec 21 13:58:39 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in (FPBIT_FUNCS, DPBIT_FUNCS): Define.\n+\t(libgcc2.a): Depend on $(DPBIT) and $(FPBIT).  Add rules to\n+\tgenerate more fine grained floating point emulation libraries.\n+\t* config/fp-bit.c: Add protecting #ifdef to all functions so\n+\tthat they can be compiled separately.  If !FINE_GRAINED_LIBRARIES,\n+\tthen compile all suitable functions.\n+\t(pack_d, unpack_d, fpcmp_parts): Add declarations, define with two\n+\tunderscores to avoid namespace pollution.\n+\t* t-mn10200 (LIB2FUNCS_EXTRA): Remove fp-bit.c\n+\t(FPBIT): Define.\n+\t* t-mn10300 (LIB2FUNCS_EXTRA): Remove fp-bit.c and dp-bit.c\n+\t(FPBIT): Define.\n+\t(DPBIT): Define.\n+\n Sat Dec 20 11:26:47 1997  Kaveh R. Ghazi  <ghazi@tragg.rutgers.edu>\n \t\t\t  Jeff Law  <law@cygnus.com>\n "}, {"sha": "329f41fdff9759931d2bf93b62a02a3f4feba31c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5198352eea3242b89cbfc9674184458027901a53/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5198352eea3242b89cbfc9674184458027901a53/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5198352eea3242b89cbfc9674184458027901a53", "patch": "@@ -647,6 +647,16 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n     _bb _shtab _clear_cache _trampoline __main _exit \\\n     _ctors _eh  _pure\n \n+FPBIT_FUNCS = _pack_sf _unpack_sf _addsub_sf _mul_sf _div_sf \\\n+    _fpcmp_parts_sf _compare_sf _eq_sf _ne_sf _gt_sf _ge_sf \\\n+    _lt_sf _le_sf _si_to_sf _sf_to_si _negate_sf _make_sf \\\n+    _sf_to_df\n+\n+DPBIT_FUNCS = _pack_df _unpack_df _addsub_df _mul_df _div_df \\\n+    _fpcmp_parts_df _compare_df _eq_df _ne_df _gt_df _ge_df \\\n+    _lt_df _le_df _si_to_df _df_to_si _negate_df _make_df \\\n+    _df_to_sf\n+\n # The files that \"belong\" in CONFIG_H are deliberately omitted\n # because having them there would not be useful in actual practice.\n # All they would do is cause complete recompilation every time\n@@ -974,7 +984,7 @@ libgcc2.ready: $(GCC_PASSES) $(LIBGCC2_DEPS) stmp-int-hdrs\n \tfi\n \n LIB2ADD = $(srcdir)/frame.c $(LIB2FUNCS_EXTRA) $(LANG_LIB2FUNCS)\n-libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2ADD) \\\n+libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(FPBIT) $(DPBIT) $(LIB2ADD) \\\n    machmode.h longlong.h frame.h gansidecl.h gbl-ctors.h config.status\n # Actually build it in tmplibgcc2.a, then rename at end,\n # so that libgcc2.a itself remains nonexistent if compilation is aborted.\n@@ -994,6 +1004,28 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2ADD) \\\n \t  $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}$(objext); \\\n \t  rm -f $${name}$(objext); \\\n \tdone\n+\tif [ x$(FPBIT) != x ]; then \\\n+\t  for name in $(FPBIT_FUNCS); \\\n+\t  do \\\n+\t    echo $${name}; \\\n+\t    $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c -DL$${name} \\\n+\t        -DFINE_GRAINED_LIBRARIES $(FPBIT) -o $${name}$(objext); \\\n+\t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n+\t    $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}$(objext); \\\n+\t    rm -f $${name}$(objext); \\\n+\t  done; \\\n+\telse true; fi;\n+\tif [ x$(DPBIT) != x ]; then \\\n+\t  for name in $(DPBIT_FUNCS); \\\n+\t  do \\\n+\t    echo $${name}; \\\n+\t    $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c -DL$${name} \\\n+\t        -DFINE_GRAINED_LIBRARIES $(DPBIT) -o $${name}$(objext); \\\n+\t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n+\t    $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}$(objext); \\\n+\t    rm -f $${name}$(objext); \\\n+\t  done; \\\n+\telse true; fi;\n # Some shells crash when a loop has no items.\n # So make sure there is always at least one--`..'.\n # Then ignore it."}]}