{"sha": "f18969c0101a3a86860972b785d8e68feec7d4df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4OTY5YzAxMDFhM2E4Njg2MDk3MmI3ODVkOGU2OGZlZWM3ZDRkZg==", "commit": {"author": {"name": "Philip Blundell", "email": "philb@gnu.org", "date": "2000-12-30T16:34:00Z"}, "committer": {"name": "Phil Blundell", "email": "pb@gcc.gnu.org", "date": "2000-12-30T16:34:00Z"}, "message": "Fix typos.\n\nFrom-SVN: r38562", "tree": {"sha": "4191bce055090c7fe05d79150311383b0a802d69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4191bce055090c7fe05d79150311383b0a802d69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18969c0101a3a86860972b785d8e68feec7d4df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18969c0101a3a86860972b785d8e68feec7d4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18969c0101a3a86860972b785d8e68feec7d4df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18969c0101a3a86860972b785d8e68feec7d4df/comments", "author": {"login": "philb", "id": 227468, "node_id": "MDQ6VXNlcjIyNzQ2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/227468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philb", "html_url": "https://github.com/philb", "followers_url": "https://api.github.com/users/philb/followers", "following_url": "https://api.github.com/users/philb/following{/other_user}", "gists_url": "https://api.github.com/users/philb/gists{/gist_id}", "starred_url": "https://api.github.com/users/philb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philb/subscriptions", "organizations_url": "https://api.github.com/users/philb/orgs", "repos_url": "https://api.github.com/users/philb/repos", "events_url": "https://api.github.com/users/philb/events{/privacy}", "received_events_url": "https://api.github.com/users/philb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2df88e9f5881eb6bbe3ae405fb86530143c50e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df88e9f5881eb6bbe3ae405fb86530143c50e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df88e9f5881eb6bbe3ae405fb86530143c50e22"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "fc20b64db00fc221cccd38b3e56de2be5169a1d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18969c0101a3a86860972b785d8e68feec7d4df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18969c0101a3a86860972b785d8e68feec7d4df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f18969c0101a3a86860972b785d8e68feec7d4df", "patch": "@@ -1,3 +1,9 @@\n+2000-12-30  Philip Blundell  <philb@gnu.org>\n+\n+\t* config/arm/arm.c (arm_expand_prologue): Fix typos in error \n+\tmessage and comment.  Note location of testcase for an unhandled\n+\tsituation.\n+\n 2000-12-30  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* defaults.h (BUILD_VA_LIST_TYPE): New definition."}, {"sha": "c3a936c3e9ca84e2922ebee97e65ee5878d97e1d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18969c0101a3a86860972b785d8e68feec7d4df/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18969c0101a3a86860972b785d8e68feec7d4df/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f18969c0101a3a86860972b785d8e68feec7d4df", "patch": "@@ -7736,9 +7736,10 @@ arm_expand_prologue ()\n \t    /* FIXME - the way to handle this situation is to allow\n \t       the pretend args to be dumped onto the stack, then\n \t       reuse r3 to save IP.  This would involve moving the\n-\t       copying os SP into IP until after the pretend args\n+\t       copying of SP into IP until after the pretend args\n \t       have been dumped, but this is not too hard.  */\n-\t    error (\"Unable to find a temporary location for static chanin register\");\n+\t    /* [See e.g. gcc.c-torture/execute/nest-stdar-1.c.]  */\n+\t    error (\"Unable to find a temporary location for static chain register\");\n \t}\n \n       if (fp_offset)"}]}