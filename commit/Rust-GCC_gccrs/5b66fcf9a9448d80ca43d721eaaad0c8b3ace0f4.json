{"sha": "5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2NmZjZjlhOTQ0OGQ4MGNhNDNkNzIxZWFhYWQwYzhiM2FjZTBmNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-09-20T09:48:24Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-09-20T09:48:24Z"}, "message": "[multiple changes]\n\n\n2001-09-20  Scott Johnston <scott@accom.com>\n\t    Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>\n\n\t* include/backward/alloc.h: Conditionally define malloc_alloc\n\t* testsuite/backward/header_deque_h.cc: New file.\n\n2001-09-20  Sylvain Pion <Sylvain.Pion@sophia.inria.fr>\n\n\t* libstdc++-v3/include/bits/locale_facets.tcc (money_put::do_put):\n        change variable name so that it works with -fno-for-scope.\n\nFrom-SVN: r45704", "tree": {"sha": "d9577964605f7a86004b2cbec95032eeff209b79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9577964605f7a86004b2cbec95032eeff209b79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/comments", "author": null, "committer": null, "parents": [{"sha": "9a92330f243b08ca44fcc9c6c443585b49436206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a92330f243b08ca44fcc9c6c443585b49436206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a92330f243b08ca44fcc9c6c443585b49436206"}], "stats": {"total": 61, "additions": 50, "deletions": 11}, "files": [{"sha": "c0d8a169ad3e18db9109ea6b0b87bd6c5fad8b92", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "patch": "@@ -1,3 +1,14 @@\n+2001-09-20  Scott Johnston <scott@accom.com>\n+\t    Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>\n+\n+\t* include/backward/alloc.h: Conditionally define malloc_alloc \n+\t* testsuite/backward/header_deque_h.cc: New file.\n+\n+2001-09-20  Sylvain Pion <Sylvain.Pion@sophia.inria.fr>\n+\n+\t* libstdc++-v3/include/bits/locale_facets.tcc (money_put::do_put): \n+        change variable name so that it works with -fno-for-scope.\n+\n 2001-09-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/numpunct_members_char.cc (test01): Remove"}, {"sha": "7b362e313d866dfcb794c7c520cf7f871fa7f338", "filename": "libstdc++-v3/include/backward/alloc.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Falloc.h?ref=5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "patch": "@@ -48,18 +48,15 @@\n #include <bits/stl_alloc.h>\n \n using std::__malloc_alloc_template; \n-using std::malloc_alloc; \n using std::simple_alloc; \n using std::debug_alloc; \n-#ifndef __USE_MALLOC\n-using std::__default_alloc_template; \n-#endif\n using std::alloc; \n using std::single_client_alloc; \n using std::allocator;\n+#ifdef __USE_MALLOC\n+using std::malloc_alloc; \n+#else\n+using std::__default_alloc_template; \n+#endif\n \n-#endif /* _CPP_BACKWARD_ALLOC_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:\n+#endif "}, {"sha": "d853d0de404616af4987fbe8f5618ab4e9c0d2e9", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "patch": "@@ -617,8 +617,8 @@ namespace std\n \t    }\n \n \t  // Write resulting, fully-formatted string to output iterator.\n-\t  for (size_type __i = 0; __i < __len; ++__i)\n-\t    __s = __res[__i];\n+\t  for (size_type __j = 0; __j < __len; ++__j)\n+\t    __s = __res[__j];\n \t}\n       __io.width(0);\n       return __s; "}, {"sha": "316db331f98cc01047f45b45f1eee6572a1ea08f", "filename": "libstdc++-v3/testsuite/backward/header_deque_h.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2Fheader_deque_h.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2Fheader_deque_h.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2Fheader_deque_h.cc?ref=5b66fcf9a9448d80ca43d721eaaad0c8b3ace0f4", "patch": "@@ -0,0 +1,31 @@\n+// 2001-09-20 Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// backward header deque.h\n+\n+#include <deque.h>\n+#include <testsuite_hooks.h>\n+\n+// { dg-excess-errors \"\" }\n+\n+int main(void)\n+{\n+  return 0;\n+}"}]}