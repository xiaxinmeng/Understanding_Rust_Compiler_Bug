{"sha": "5c93e01bbc74be5af2771fedfbff346d2aa0b7bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM5M2UwMWJiYzc0YmU1YWYyNzcxZmVkZmJmZjM0NmQyYWEwYjdiYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-17T05:53:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-17T05:53:21Z"}, "message": "cris.c (cris_gotless_symbol, [...]): Use SYMBOL_REF_LOCAL_P; abort if not pic.\n\n        * config/cris/cris.c (cris_gotless_symbol, cris_got_symbol): Use\n        SYMBOL_REF_LOCAL_P; abort if not pic.\n        (cris_encode_section_info): Remove.\n\nFrom-SVN: r65721", "tree": {"sha": "2e50a44910f39f1cb2ff01c4ea328f470438ec4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e50a44910f39f1cb2ff01c4ea328f470438ec4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb/comments", "author": null, "committer": null, "parents": [{"sha": "11467df2cfbc83ab81b48bdaf15504f9a2175b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11467df2cfbc83ab81b48bdaf15504f9a2175b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11467df2cfbc83ab81b48bdaf15504f9a2175b73"}], "stats": {"total": 46, "additions": 20, "deletions": 26}, "files": [{"sha": "5e859e6f3f9e9300a9917f842b6fdd702e8107ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c93e01bbc74be5af2771fedfbff346d2aa0b7bb", "patch": "@@ -1,3 +1,9 @@\n+2003-04-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/cris/cris.c (cris_gotless_symbol, cris_got_symbol): Use\n+\tSYMBOL_REF_LOCAL_P; abort if not pic.\n+\t(cris_encode_section_info): Remove.\n+\n 2003-04-16  Richard Henderson  <rth@redhat.com>\n \n \t* config/c4x/c4x.c (c4x_encode_section_info): Remove."}, {"sha": "dfd3464a492c35dba289b05562b4b92dae6073c9", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c93e01bbc74be5af2771fedfbff346d2aa0b7bb/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=5c93e01bbc74be5af2771fedfbff346d2aa0b7bb", "patch": "@@ -100,7 +100,6 @@ static void cris_target_asm_function_prologue\n static void cris_target_asm_function_epilogue\n   PARAMS ((FILE *, HOST_WIDE_INT));\n \n-static void cris_encode_section_info PARAMS ((tree, int));\n static void cris_operand_lossage PARAMS ((const char *, rtx));\n \n static void cris_asm_output_mi_thunk\n@@ -158,9 +157,6 @@ int cris_cpu_version = CRIS_DEFAULT_CPU_VERSION;\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE cris_target_asm_function_epilogue\n \n-#undef TARGET_ENCODE_SECTION_INFO\n-#define TARGET_ENCODE_SECTION_INFO cris_encode_section_info\n-\n #undef TARGET_ASM_OUTPUT_MI_THUNK\n #define TARGET_ASM_OUTPUT_MI_THUNK cris_asm_output_mi_thunk\n #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK\n@@ -2506,16 +2502,21 @@ int\n cris_gotless_symbol (x)\n      rtx x;\n {\n+#ifdef ENABLE_CHECKING\n+  if (!flag_pic)\n+    abort ();\n+#endif\n+\n   switch (GET_CODE (x))\n     {\n     case UNSPEC:\n       ASSERT_PLT_UNSPEC (x);\n       return 1;\n \n     case SYMBOL_REF:\n-      if (flag_pic && cfun != NULL)\n+      if (cfun != NULL)\n \tcurrent_function_uses_pic_offset_table = 1;\n-      return SYMBOL_REF_FLAG (x);\n+      return SYMBOL_REF_LOCAL_P (x);\n \n     case LABEL_REF:\n       /* We don't set current_function_uses_pic_offset_table for\n@@ -2562,16 +2563,21 @@ int\n cris_got_symbol (x)\n      rtx x;\n {\n+#ifdef ENABLE_CHECKING\n+  if (!flag_pic)\n+    abort ();\n+#endif\n+\n   switch (GET_CODE (x))\n     {\n     case UNSPEC:\n       ASSERT_PLT_UNSPEC (x);\n       return 0;\n \n     case SYMBOL_REF:\n-      if (flag_pic && cfun != NULL)\n+      if (cfun != NULL)\n \tcurrent_function_uses_pic_offset_table = 1;\n-      return ! SYMBOL_REF_FLAG (x);\n+      return ! SYMBOL_REF_LOCAL_P (x);\n \n     case CONST:\n       return cris_got_symbol (XEXP (x, 0));\n@@ -3187,24 +3193,6 @@ cris_output_addr_const (file, x)\n     }\n }\n \n-/* Code-in whether we can get away without a GOT entry (needed for\n-   externally visible objects but not for functions) into\n-   SYMBOL_REF_FLAG and add the PLT suffix for global functions.  */\n-\n-static void\n-cris_encode_section_info (exp, first)\n-     tree exp;\n-     int first ATTRIBUTE_UNUSED;\n-{\n-  if (flag_pic)\n-    {\n-      rtx rtl = DECL_P (exp) ? DECL_RTL (exp) : TREE_CST_RTL (exp);\n-\n-      if (GET_CODE (rtl) == MEM && GET_CODE (XEXP (rtl, 0)) == SYMBOL_REF)\n-\tSYMBOL_REF_FLAG (XEXP (rtl, 0)) = (*targetm.binds_local_p) (exp);\n-    }\n-}\n-\n #if 0\n /* Various small functions to replace macros.  Only called from a\n    debugger.  They might collide with gcc functions or system functions,"}]}