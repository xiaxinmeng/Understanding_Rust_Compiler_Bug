{"sha": "4882d82a27be94484f38bb4f998b7e4ffa5772d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4MmQ4MmEyN2JlOTQ0ODRmMzhiYjRmOTk4YjdlNGZmYTU3NzJkMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-28T22:56:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-28T22:56:44Z"}, "message": "re PR c++/56450 (ICE with SFINAE when detecting non-static member variable)\n\n/cp\n2013-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56450\n\t* semantics.c (finish_decltype_type): Handle COMPOUND_EXPR.\n\n/testsuite\n2013-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56450\n\t* g++.dg/cpp0x/decltype52.C: New.\n\nFrom-SVN: r198381", "tree": {"sha": "1e002582c793cbd7808194ef10ddd65c2b60259e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e002582c793cbd7808194ef10ddd65c2b60259e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4882d82a27be94484f38bb4f998b7e4ffa5772d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4882d82a27be94484f38bb4f998b7e4ffa5772d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4882d82a27be94484f38bb4f998b7e4ffa5772d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4882d82a27be94484f38bb4f998b7e4ffa5772d1/comments", "author": null, "committer": null, "parents": [{"sha": "01187df0970be20c06628f280ce07524db49d585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01187df0970be20c06628f280ce07524db49d585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01187df0970be20c06628f280ce07524db49d585"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "c614ebed8d7bca74020e3ee6e689f41757add983", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4882d82a27be94484f38bb4f998b7e4ffa5772d1", "patch": "@@ -1,3 +1,8 @@\n+2013-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56450\n+\t* semantics.c (finish_decltype_type): Handle COMPOUND_EXPR.\n+\n 2013-04-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* error.c (cp_print_error_function): Adjust file_name_as_prefix"}, {"sha": "2a0d5bcaded58b40a82d9482d44596fd77ae29c7", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4882d82a27be94484f38bb4f998b7e4ffa5772d1", "patch": "@@ -5398,6 +5398,7 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n           break;\n \n         case COMPONENT_REF:\n+\tcase COMPOUND_EXPR:\n \t  mark_type_use (expr);\n           type = is_bitfield_expr_with_lowered_type (expr);\n           if (!type)"}, {"sha": "7e0975d674572d909fc285bc2487a1bcbbfb1405", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4882d82a27be94484f38bb4f998b7e4ffa5772d1", "patch": "@@ -1,3 +1,8 @@\n+2013-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56450\n+\t* g++.dg/cpp0x/decltype52.C: New.\n+\n 2013-04-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tN3472 binary constants"}, {"sha": "e6b5a4cafb4fdec4f3207cf852747969cdc65aaa", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype52.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4882d82a27be94484f38bb4f998b7e4ffa5772d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype52.C?ref=4882d82a27be94484f38bb4f998b7e4ffa5772d1", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/56450\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+T&& declval();\n+\n+template<typename, typename>\n+struct is_same\n+{ static constexpr bool value = false; };\n+\n+template<typename T>\n+struct is_same<T, T>\n+{ static constexpr bool value = true; };\n+\n+struct A { static const int dummy = 0; };\n+\n+static_assert(is_same<decltype(declval<A>().dummy), const int>::value, \"\");\n+static_assert(!is_same<decltype(declval<A>().dummy), const int&>::value, \"\");"}]}