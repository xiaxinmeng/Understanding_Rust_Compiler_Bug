{"sha": "3a846e6e06590d0c593708b53a8aee20ac2fea32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4NDZlNmUwNjU5MGQwYzU5MzcwOGI1M2E4YWVlMjBhYzJmZWEzMg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-10-01T10:44:46Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-10-01T10:44:46Z"}, "message": "Add invocation of SET_DEFAULT_DECL_ATTRIBUTES, if defined.\n\nFrom-SVN: r22709", "tree": {"sha": "bd0cd9f928875af646aff412d4d1e935366f135d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd0cd9f928875af646aff412d4d1e935366f135d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a846e6e06590d0c593708b53a8aee20ac2fea32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a846e6e06590d0c593708b53a8aee20ac2fea32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a846e6e06590d0c593708b53a8aee20ac2fea32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a846e6e06590d0c593708b53a8aee20ac2fea32/comments", "author": null, "committer": null, "parents": [{"sha": "047fb009cae97b698edfbc03471c124c37211a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047fb009cae97b698edfbc03471c124c37211a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047fb009cae97b698edfbc03471c124c37211a94"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "ebd5b50a3726808a0a7f5c8322bb3ef0d3f77dc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a846e6e06590d0c593708b53a8aee20ac2fea32", "patch": "@@ -1,3 +1,11 @@\n+Thu Oct  1 10:42:27 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* c-decl.c (start_function): Add invocation of\n+\tSET_DEFAULT_DECL_ATTRIBUTES, if defined.\n+\n+\t* tm.texi: Remove description of non-existant macro\n+\tSET_DEFAULT_SECTION_NAME.\n+\n Wed Sep 30 22:27:53 1998  Robert Lipe  <robertl@dgii.com>\n \n \t* config.sub: Recognize i[34567]86-pc-udk as new target."}, {"sha": "0b6e0186225c423a3a1a3caa4fb9a2b80a7bccf7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=3a846e6e06590d0c593708b53a8aee20ac2fea32", "patch": "@@ -6423,6 +6423,10 @@ start_function (declspecs, declarator, prefix_attributes, attributes, nested)\n      except for defining how to inline.  So set DECL_EXTERNAL in that case.  */\n   DECL_EXTERNAL (decl1) = current_extern_inline;\n \n+#ifdef SET_DEFAULT_DECL_ATTRIBUTES\n+  SET_DEFAULT_DECL_ATTRIBUTES (decl1, attributes);\n+#endif\n+  \n   /* This function exists in static storage.\n      (This does not mean `static' in the C sense!)  */\n   TREE_STATIC (decl1) = 1;"}, {"sha": "61c67f12962e5be3919cc4ca663fbe68fb01d445", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3a846e6e06590d0c593708b53a8aee20ac2fea32", "patch": "@@ -1,3 +1,10 @@\n+Thu Oct  1 10:43:45 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* decl.c (start_decl): Add invocation of\n+\tSET_DEFAULT_DECL_ATTRIBUTES, if defined.\n+\t(start_function): Add invocation of\n+\tSET_DEFAULT_DECL_ATTRIBUTES, if defined.\n+\n 1998-09-28  Anthony Green  <green@cygnus.com>\n \n \t* semantics.c (finish_asm_stmt): Always permit volatile asms."}, {"sha": "abc99c9d988f6d897c581f011a72d59ecc93b4b5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3a846e6e06590d0c593708b53a8aee20ac2fea32", "patch": "@@ -6618,6 +6618,10 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n       pushclass (context, 2);\n     }\n \n+#ifdef SET_DEFAULT_DECL_ATTRIBUTES\n+  SET_DEFAULT_DECL_ATTRIBUTES (decl, attributes);\n+#endif\n+  \n   /* Set attributes here so if duplicate decl, will have proper attributes.  */\n   cplus_decl_attributes (decl, attributes, prefix_attributes);\n \n@@ -6660,7 +6664,7 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n      data segment.  */\n   DECL_COMMON (tem) = flag_conserve_space || ! TREE_PUBLIC (tem);\n #endif\n-\n+  \n   if (! processing_template_decl)\n     start_decl_1 (tem);\n \n@@ -12390,6 +12394,10 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n      error_mark_node is replaced below (in poplevel) with the BLOCK.  */\n   DECL_INITIAL (decl1) = error_mark_node;\n \n+#ifdef SET_DEFAULT_DECL_ATTRIBUTES\n+  SET_DEFAULT_DECL_ATTRIBUTES (decl1, attributes);\n+#endif\n+  \n   /* This function exists in static storage.\n      (This does not mean `static' in the C sense!)  */\n   TREE_STATIC (decl1) = 1;\n@@ -12533,6 +12541,7 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n \n   if (attrs)\n     cplus_decl_attributes (decl1, NULL_TREE, attrs);\n+  \n   make_function_rtl (decl1);\n \n   /* Promote the value to int before returning it.  */"}, {"sha": "0378bc8f233c08492fd846bf6ea70cf20413068a", "filename": "gcc/tm.texi", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a846e6e06590d0c593708b53a8aee20ac2fea32/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=3a846e6e06590d0c593708b53a8aee20ac2fea32", "patch": "@@ -7427,11 +7427,6 @@ declaration, but before the declaration proper.\n If defined, a C statement that assigns default attributes to\n newly defined @var{decl}.\n \n-@findex SET_DEFAULT_SECTION_NAME\n-@item SET_DEFAULT_SECTION_NAME (@var{decl})\n-If defined, a C statement that assigns a section name to the newly\n-created @var{decl}.\n-\n @findex DOLLARS_IN_IDENTIFIERS\n @item DOLLARS_IN_IDENTIFIERS\n Define this macro to control use of the character @samp{$} in identifier"}]}