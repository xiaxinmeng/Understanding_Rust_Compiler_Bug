{"sha": "5fd893d507445801b27c0ebb36b4b802b4df86af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkODkzZDUwNzQ0NTgwMWIyN2MwZWJiMzZiNGI4MDJiNGRmODZhZg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-04-30T22:20:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-04-30T22:20:03Z"}, "message": "decl2.c (start_static_initialization_or_destruction): Correct logic to handle the -fno-use-cxa-atexit case.\n\n\t* decl2.c (start_static_initialization_or_destruction): Correct\n\tlogic to handle the -fno-use-cxa-atexit case.\n\nFrom-SVN: r41697", "tree": {"sha": "ec5a1b3f95c43485a87f77ee9e0866764f490441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec5a1b3f95c43485a87f77ee9e0866764f490441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fd893d507445801b27c0ebb36b4b802b4df86af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd893d507445801b27c0ebb36b4b802b4df86af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd893d507445801b27c0ebb36b4b802b4df86af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd893d507445801b27c0ebb36b4b802b4df86af/comments", "author": null, "committer": null, "parents": [{"sha": "505cf15f076220417c5af1bd83029403a3c8dd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505cf15f076220417c5af1bd83029403a3c8dd48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505cf15f076220417c5af1bd83029403a3c8dd48"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "57d2a4a446be8c6305d187f8852257ee82b80c3b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd893d507445801b27c0ebb36b4b802b4df86af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd893d507445801b27c0ebb36b4b802b4df86af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5fd893d507445801b27c0ebb36b4b802b4df86af", "patch": "@@ -1,3 +1,8 @@\n+Mon Apr 30 16:14:10 2001  Mark P Mitchell  <mark@codesourcery.com>\n+\n+\t* decl2.c (start_static_initialization_or_destruction): Correct\n+\tlogic to handle the -fno-use-cxa-atexit case.\n+\n 2001-04-30  Mark Mitchell  <mark@codesourcery.com>\n \n \t* optimize.c (update_cloned_parm): New function."}, {"sha": "8cfc9da4d2cffcbb59df82ae56b93ae430fde641", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd893d507445801b27c0ebb36b4b802b4df86af/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd893d507445801b27c0ebb36b4b802b4df86af/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5fd893d507445801b27c0ebb36b4b802b4df86af", "patch": "@@ -3206,10 +3206,13 @@ start_static_initialization_or_destruction (decl, initp)\n \t  my_friendly_assert (initp, 20000629);\n \t  guard_cond = get_guard_cond (guard);\n \t}\n-      /* Under the old ABI, e do initializations only if the GUARD is\n-\t zero, i.e., if we are the first to initialize the variable.\n-\t We do destructions only if the GUARD is one, i.e., if we are\n-\t the last to destroy the variable.  */\n+      /* If we don't have __cxa_atexit, then we will be running\n+\t destructors from .fini sections, or their equivalents.  So,\n+\t we need to know how many times we've tried to initialize this\n+\t object.  We do initializations only if the GUARD is zero,\n+\t i.e., if we are the first to initialize the variable.  We do\n+\t destructions only if the GUARD is one, i.e., if we are the\n+\t last to destroy the variable.  */\n       else if (initp)\n \tguard_cond \n \t  = cp_build_binary_op (EQ_EXPR,\n@@ -3230,9 +3233,9 @@ start_static_initialization_or_destruction (decl, initp)\n \n   finish_if_stmt_cond (cond, guard_if_stmt);\n \n-  /* Under the new ABI, we have not already set the GUARD, so we must\n-     do so now.  */\n-  if (guard && initp)\n+  /* If we're using __cxa_atexit, we have not already set the GUARD,\n+     so we must do so now.  */\n+  if (guard && initp && flag_use_cxa_atexit)\n     finish_expr_stmt (set_guard (guard));\n \n   return guard_if_stmt;"}]}