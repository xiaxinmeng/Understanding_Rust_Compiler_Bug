{"sha": "5bebbee7338bb2f91e0348a9d963ee85ecabfb9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJlYmJlZTczMzhiYjJmOTFlMDM0OGE5ZDk2M2VlODVlY2FiZmI5YQ==", "commit": {"author": {"name": "Martin Kahlert", "email": "martin.kahlert@infineon.com", "date": "2002-03-29T22:27:29Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2002-03-29T22:27:29Z"}, "message": "parse.y (do_resolve_class): Fix infinite recursion.\n\n2002-03-29  Martin Kahlert  <martin.kahlert@infineon.com>\n\n\t* parse.y (do_resolve_class): Fix infinite recursion.\n\n(http://gcc.gnu.org/ml/java/2002-03/msg00654.html)\n\nFrom-SVN: r51578", "tree": {"sha": "bf889058ac1cb4d2d7bb049a4470f5e07f17da20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf889058ac1cb4d2d7bb049a4470f5e07f17da20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a/comments", "author": null, "committer": null, "parents": [{"sha": "bc3a44dbcad809b3e9a94153627db6079fe90794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3a44dbcad809b3e9a94153627db6079fe90794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3a44dbcad809b3e9a94153627db6079fe90794"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "c66f9a6aaab7fec398ed0f6a605c3a9eb0122806", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5bebbee7338bb2f91e0348a9d963ee85ecabfb9a", "patch": "@@ -1,3 +1,7 @@\n+2002-03-29  Martin Kahlert  <martin.kahlert@infineon.com>\n+\n+\t* parse.y (do_resolve_class): Fix infinite recursion.\n+\n 2002-03-29  Tom Tromey  <tromey@redhat.com>\n \n \t* parse.y (check_inner_circular_reference): Ignore incomplete"}, {"sha": "ef18d5fa3e780a1337a08774b8a81f3369d9d652", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bebbee7338bb2f91e0348a9d963ee85ecabfb9a/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=5bebbee7338bb2f91e0348a9d963ee85ecabfb9a", "patch": "@@ -5868,18 +5868,20 @@ do_resolve_class (enclosing, class_type, decl, cl)\n      applicable and use the matching DECL instead. */\n   if (!decl_result && QUALIFIED_P (TYPE_NAME (class_type)))\n     {\n-      tree name = TYPE_NAME (class_type);\n       char *separator;\n+      tree name = TYPE_NAME (class_type);\n+      char *namebuffer = alloca (IDENTIFIER_LENGTH (name) + 1);\n+\n+      strcpy (namebuffer, IDENTIFIER_POINTER (name));\n+\n       do {\n \n        /* Reach the last '.', and if applicable, replace it by a `$' and\n           see if this exists as a type. */\n-       if ((separator = strrchr (IDENTIFIER_POINTER (name), '.')))\n+       if ((separator = strrchr (namebuffer, '.')))\n          {\n-           int c = *separator;\n            *separator = '$';\n-           name = get_identifier (IDENTIFIER_POINTER (name));\n-           *separator = c;\n+           name = get_identifier (namebuffer);\n            decl_result = IDENTIFIER_CLASS_VALUE (name);\n          }\n       } while (!decl_result && separator);"}]}