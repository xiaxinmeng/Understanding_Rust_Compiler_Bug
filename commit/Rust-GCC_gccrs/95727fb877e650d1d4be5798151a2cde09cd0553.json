{"sha": "95727fb877e650d1d4be5798151a2cde09cd0553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3MjdmYjg3N2U2NTBkMWQ0YmU1Nzk4MTUxYTJjZGUwOWNkMDU1Mw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-01-17T19:48:50Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-01-17T19:48:50Z"}, "message": "re PR target/10781 (wrong class size and alignment with static class member)\n\n2004-01-17  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR target/10781\n        * config/rs6000/rs6000-protos.h (rs6000_special_round_type_align):\n        Prototype.\n        * config/rs6000/rs6000.c (rs6000_special_round_type_align):\n        New function.\n        * config/rs6000/linux64.h (ROUND_TYPE_ALIGN): Use it.\n        * config/rs6000/aix.h (ROUND_TYPE_ALIGN): Likewise.\n        * config/rs6000/darwin.h (ROUND_TYPE_ALIGN): Likewise.\n\n2004-01-17  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR target/10781\n        * encoding.c (rs6000_special_round_type_align): Define.\n\nFrom-SVN: r76043", "tree": {"sha": "a0ab8ee208b07c4e48ee3c5ef3d40bc702369877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ab8ee208b07c4e48ee3c5ef3d40bc702369877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95727fb877e650d1d4be5798151a2cde09cd0553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95727fb877e650d1d4be5798151a2cde09cd0553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95727fb877e650d1d4be5798151a2cde09cd0553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95727fb877e650d1d4be5798151a2cde09cd0553/comments", "author": null, "committer": null, "parents": [{"sha": "4bfaff4d24177c907f1ecb4062501a422f63c6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfaff4d24177c907f1ecb4062501a422f63c6e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfaff4d24177c907f1ecb4062501a422f63c6e0"}], "stats": {"total": 105, "additions": 75, "deletions": 30}, "files": [{"sha": "ee0da69d6a4bc8ac4a7b43999618007cb00ebd5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -1,3 +1,14 @@\n+2004-01-17  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR target/10781\n+\t* config/rs6000/rs6000-protos.h (rs6000_special_round_type_align):\n+\tPrototype.\n+\t* config/rs6000/rs6000.c (rs6000_special_round_type_align):\n+\tNew function.\n+\t* config/rs6000/linux64.h (ROUND_TYPE_ALIGN): Use it.\n+\t* config/rs6000/aix.h (ROUND_TYPE_ALIGN): Likewise.\n+\t* config/rs6000/darwin.h (ROUND_TYPE_ALIGN): Likewise.\n+\n 2004-01-17  Jan Hubicka  <jh@suse.cz>\n \n \t* toplev.c (rest_of_handle_reorder_blocks): Fix pasto in previous"}, {"sha": "69a0a0179209e280c1b4711862a3bd696ede1259", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -139,14 +139,12 @@\n \n /* AIX increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n-#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\\\n-  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\\\n-    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n-    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n-   && TYPE_FIELDS (STRUCT) != 0\t\t\t\t\\\n-   && TARGET_ALIGN_NATURAL == 0                         \\\n-   && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode\t\\\n-   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\\\n+#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\t\\\n+  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\t\t\\\n+    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\t\t\\\n+    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\t\t\\\n+   && TARGET_ALIGN_NATURAL == 0\t\t\t\t\t\t\t\\\n+   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\t\\\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n /* The AIX ABI isn't explicit on whether aggregates smaller than a"}, {"sha": "6db0006999193acd3b2c7ccd2e46ff79b362c521", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -295,16 +295,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Darwin increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n-#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\\\n-  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\\\n-    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n-    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n-   && TYPE_FIELDS (STRUCT) != 0\t\t\t\t\\\n-   && TARGET_ALIGN_NATURAL == 0                         \\\n-   && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode\t\\\n-   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\\\n-   : (TARGET_ALTIVEC && TREE_CODE (STRUCT) == VECTOR_TYPE) \\\n-   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 128)           \\\n+#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\\\n+  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\t\\\n+    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\t\\\n+    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\t\\\n+   && TARGET_ALIGN_NATURAL == 0                         \t\t\\\n+   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\\\n+   : (TARGET_ALTIVEC && TREE_CODE (STRUCT) == VECTOR_TYPE) \t\t\\\n+   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 128)          \t\t\t \\\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n /* XXX: Darwin supports neither .quad, or .llong, but it also doesn't\n@@ -322,3 +320,4 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef REGISTER_TARGET_PRAGMAS\n #define REGISTER_TARGET_PRAGMAS DARWIN_REGISTER_TARGET_PRAGMAS\n+"}, {"sha": "d36aef4485ed49e3e6190e24fe128e9e2001a315", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -224,19 +224,17 @@\n    : (COMPUTED))\n \n /* PowerPC64 Linux increases natural record alignment to doubleword if\n-   the first field is an FP double.  */\n+   the first field is an FP double, only if in power alignment mode.  */\n #undef  ROUND_TYPE_ALIGN\n-#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\\\n-  ((TARGET_ALTIVEC && TREE_CODE (STRUCT) == VECTOR_TYPE)\t\\\n-   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 128)\t\t\t\\\n-   : (TARGET_64BIT\t\t\t\t\t\t\\\n-      && (TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\\\n-\t  || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n-\t  || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n-      && TYPE_FIELDS (STRUCT) != 0\t\t\t\t\\\n-      && TARGET_ALIGN_NATURAL == 0\t\t\t\t\\\n-      && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode)\t\t\\\n-   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 64)\t\t\t\\\n+#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\\\n+  ((TARGET_ALTIVEC && TREE_CODE (STRUCT) == VECTOR_TYPE)\t\t\\\n+   ? MAX (MAX ((COMPUTED), (SPECIFIED)), 128)\t\t\t\t\\\n+   : (TARGET_64BIT\t\t\t\t\t\t\t\\\n+      && (TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\\\n+\t  || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\\\n+\t  || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\\\n+      && TARGET_ALIGN_NATURAL == 0)\t\t\t\t\t\\\n+   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\\\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n /* Indicate that jump tables go in the text section.  */"}, {"sha": "b98027ef82299052974e0027de86d8623862b6d7", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -144,6 +144,7 @@ extern rtx rs6000_machopic_legitimize_pic_address (rtx orig,\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE\n+extern int rs6000_special_round_type_align (tree, int, int);\n extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t\t  tree, int);\n extern int function_arg_boundary (enum machine_mode, tree);"}, {"sha": "0a5de536d91dfd4521ec7533cad532ca674a2143", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -2317,6 +2317,28 @@ input_operand (rtx op, enum machine_mode mode)\n   return 0;\n }\n \n+\n+/* Darwin, AIX increases natural record alignment to doubleword if the first\n+   field is an FP double while the FP fields remain word aligned.  */\n+\n+int\n+rs6000_special_round_type_align (tree type, int computed, int specified)\n+{\n+  tree field = TYPE_FIELDS (type);\n+  if (!field)\n+    return MAX (computed, specified);\n+\n+  /* Skip all the static variables only if ABI is greater than\n+     1 or equal to 0.   */\n+  while (TREE_CODE (field) == VAR_DECL)\n+    field = TREE_CHAIN (field);\n+\n+  if (field == type || DECL_MODE (field) != DFmode)\n+    return MAX (computed, specified);\n+\n+  return MAX (MAX (computed, specified), 64);\n+}\n+\n /* Return 1 for an operand in small memory on V.4/eabi.  */\n \n int"}, {"sha": "cf2fe5f73ace5d58fd9617bbb56ea9fbd4c6868e", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -1,3 +1,8 @@\n+2004-01-17  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR target/10781\n+\t* encoding.c (rs6000_special_round_type_align): Define.\n+\n 2004-01-14  Adam Fedor  <fedor@gnu.org>\n \n \tPR libobjc/12155"}, {"sha": "17bc8d4e2e149b62c41cfcdf5cfc3570a064a64f", "filename": "libobjc/encoding.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95727fb877e650d1d4be5798151a2cde09cd0553/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95727fb877e650d1d4be5798151a2cde09cd0553/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=95727fb877e650d1d4be5798151a2cde09cd0553", "patch": "@@ -88,6 +88,17 @@ Boston, MA 02111-1307, USA.  */\n    eliminate the warning.  */\n static int __attribute__ ((__unused__)) target_flags = 0;\n \n+\n+/*  FIXME: while this file has no business including tm.h, this\n+    definitely has no business defining this macro but it\n+    is only way around without really rewritting this file,\n+    should look after the branch of 3.4 to fix this.  */\n+#define rs6000_special_round_type_align(STRUCT, COMPUTED, SPECIFIED)\t\\\n+  ((TYPE_FIELDS (STRUCT) != 0\t\t\t\t\t\t\\\n+    && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode)\t\t\t\\\n+   ? MAX (MAX (COMPUTED, SPECIFIED), 64)\t\t\t\t\\\n+   : MAX (COMPUTED, SPECIFIED))\n+\n /*\n   return the size of an object specified by type\n */"}]}