{"sha": "189641a279ecf39b29c4f903395c31477aad7a8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5NjQxYTI3OWVjZjM5YjI5YzRmOTAzMzk1YzMxNDc3YWFkN2E4ZA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-04-08T06:52:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:52:51Z"}, "message": "make.adb: (Gnatmake_Called): Remove, no longer necessary\n\n2008-04-08  Vincent Celier  <celier@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\n\t* make.adb: (Gnatmake_Called): Remove, no longer necessary\n\t(Compile_Surces): Call Delete_Temp_Config_Files only if Gnatmake_Called\n\tis True and Debug_Flag_N is False. Debug_Flag_N means \"keep temp files\".\n\t(Insert_Project_Sources): Take into account index in multi-unit source\n\tfiles.\n\tAfter building a library project, delete all temporary files.\n\t(Initialize): Reset current output after parsing project file.\n\t(Collect_Arguments_And_Compile): Never insert in the queue the sources\n\tof library projects that are externally built.\n\tPut file name in error and inform messages if -df is used\n\t(Display): If invoked with -d7, do not display path names, but only\n\tfile names.\n\n\t* makeutl.ads (Path_Or_File_Name): New function\n\t(Path_Or_File_Name): New function\n\nFrom-SVN: r134039", "tree": {"sha": "9ade13da7f120ba215520abecf2afad5e68d6c7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ade13da7f120ba215520abecf2afad5e68d6c7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/189641a279ecf39b29c4f903395c31477aad7a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189641a279ecf39b29c4f903395c31477aad7a8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/189641a279ecf39b29c4f903395c31477aad7a8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189641a279ecf39b29c4f903395c31477aad7a8d/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7d5442e99264f95e19868931a0ec530f26a19f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d5442e99264f95e19868931a0ec530f26a19f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d5442e99264f95e19868931a0ec530f26a19f5"}], "stats": {"total": 184, "additions": 123, "deletions": 61}, "files": [{"sha": "304f15556caf54ff4f2dc3c7cddec4ebaea6d2f8", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 119, "deletions": 60, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189641a279ecf39b29c4f903395c31477aad7a8d/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189641a279ecf39b29c4f903395c31477aad7a8d/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=189641a279ecf39b29c4f903395c31477aad7a8d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -589,11 +589,6 @@ package body Make is\n    -- Gnatmake Routines --\n    -----------------------\n \n-   Gnatmake_Called : Boolean := False;\n-   --  Set to True when procedure Gnatmake is called.\n-   --  Attempt to delete temporary files is made only when Gnatmake_Called\n-   --  is True.\n-\n    subtype Lib_Mark_Type is Byte;\n    --  Used in Mark_Directory\n \n@@ -698,7 +693,7 @@ package body Make is\n \n    Display_Executed_Programs : Boolean := True;\n    --  Set to True if name of commands should be output on stderr (or on stdout\n-   --  if the Commands_To_Stdout flag was set by use of the -S switch).\n+   --  if the Commands_To_Stdout flag was set by use of the -eS switch).\n \n    Output_File_Name_Seen : Boolean := False;\n    --  Set to True after having scanned the file_name for\n@@ -824,7 +819,8 @@ package body Make is\n    --  The path name of a mapping file specified by switch -C=\n \n    procedure Delete_Mapping_Files;\n-   --  Delete all temporary mapping files\n+   --  Delete all temporary mapping files. Called only in Delete_All_Temp_Files\n+   --  which ensures that Debug_Flag_N is False.\n \n    procedure Init_Mapping_File\n      (Project : Project_Id;\n@@ -834,10 +830,13 @@ package body Make is\n    --  the index to the name of the file in the array The_Mapping_File_Names.\n \n    procedure Delete_Temp_Config_Files;\n-   --  Delete all temporary config files\n+   --  Delete all temporary config files. Must not be called if Debug_Flag_N\n+   --  is False.\n \n    procedure Delete_All_Temp_Files;\n-   --  Delete all temp files (config files, mapping files, path files)\n+   --  Delete all temp files (config files, mapping files, path files), unless\n+   --  Debug_Flag_N is True (in which case all temp files are left for user\n+   --  examination).\n \n    -------------------------------------------------\n    -- Subprogram declarations moved from the spec --\n@@ -1414,7 +1413,7 @@ package body Make is\n \n       when Directory_Error =>\n          Make_Failed (\"unable to change to object directory \"\"\" &\n-                      Get_Name_String\n+                      Path_Or_File_Name\n                         (Project_Tree.Projects.Table\n                            (Actual_Project).Object_Directory) &\n                       \"\"\" of project \" &\n@@ -2838,6 +2837,7 @@ package body Make is\n                      end loop;\n \n                      if The_Data.Library\n+                       and then not The_Data.Externally_Built\n                        and then not The_Data.Need_To_Build_Lib\n                      then\n                         --  Add to the Q all sources of the project that\n@@ -3487,11 +3487,10 @@ package body Make is\n \n                --  If we could not read the ALI file that was just generated\n                --  then there could be a problem reading either the ALI or the\n-               --  corresponding object file (if Check_Object_Consistency\n-               --  is set Read_Library_Info checks that the time stamp of the\n-               --  object file is more recent than that of the ALI). For an\n-               --  example of problems caught by this test see [6625-009].\n-               --  However, we record a failure only if not already done.\n+               --  corresponding object file (if Check_Object_Consistency is\n+               --  set Read_Library_Info checks that the time stamp of the\n+               --  object file is more recent than that of the ALI). However,\n+               --  we record a failure only if not already done.\n \n                else\n                   if Compilation_OK and not Syntax_Only then\n@@ -3655,8 +3654,9 @@ package body Make is\n \n       --  Delete any temporary configuration pragma file\n \n-      Delete_Temp_Config_Files;\n-\n+      if not Debug.Debug_Flag_N then\n+         Delete_Temp_Config_Files;\n+      end if;\n    end Compile_Sources;\n \n    -----------------------------------\n@@ -3863,8 +3863,15 @@ package body Make is\n                            Global_Attribute.Project);\n             begin\n                if not Is_Regular_File (Path) then\n-                  Make_Failed\n-                    (\"cannot find configuration pragmas file \", Path);\n+                  if Debug.Debug_Flag_F then\n+                     Make_Failed\n+                       (\"cannot find configuration pragmas file \",\n+                        File_Name (Path));\n+                  else\n+                     Make_Failed\n+                       (\"cannot find configuration pragmas file \",\n+                        Path);\n+                  end if;\n                end if;\n \n                Last := Last + 1;\n@@ -3901,8 +3908,15 @@ package body Make is\n                            Local_Attribute.Project);\n             begin\n                if not Is_Regular_File (Path) then\n-                  Make_Failed\n-                    (\"cannot find configuration pragmas file \", Path);\n+                  if Debug.Debug_Flag_F then\n+                     Make_Failed\n+                       (\"cannot find configuration pragmas file \",\n+                        File_Name (Path));\n+\n+                  else\n+                     Make_Failed\n+                       (\"cannot find configuration pragmas file \", Path);\n+                  end if;\n                end if;\n \n                Last := Last + 1;\n@@ -3945,7 +3959,7 @@ package body Make is\n \n    procedure Delete_All_Temp_Files is\n    begin\n-      if Gnatmake_Called and not Debug.Debug_Flag_N then\n+      if not Debug.Debug_Flag_N then\n          Delete_Mapping_Files;\n          Delete_Temp_Config_Files;\n          Prj.Env.Delete_All_Path_Files (Project_Tree);\n@@ -3959,18 +3973,21 @@ package body Make is\n    procedure Delete_Mapping_Files is\n       Success : Boolean;\n       pragma Warnings (Off, Success);\n+\n    begin\n-      if not Debug.Debug_Flag_N then\n-         if The_Mapping_File_Names /= null then\n-            for Project in The_Mapping_File_Names'Range (1) loop\n-               for Index in 1 .. Last_Mapping_File_Names (Project) loop\n-                  Delete_File\n-                    (Name => Get_Name_String\n-                               (The_Mapping_File_Names (Project, Index)),\n-                     Success => Success);\n-               end loop;\n+      --  The caller is responsible for ensuring that Debug_Flag_N is False\n+\n+      pragma Assert (not Debug.Debug_Flag_N);\n+\n+      if The_Mapping_File_Names /= null then\n+         for Project in The_Mapping_File_Names'Range (1) loop\n+            for Index in 1 .. Last_Mapping_File_Names (Project) loop\n+               Delete_File\n+                 (Name => Get_Name_String\n+                            (The_Mapping_File_Names (Project, Index)),\n+                  Success => Success);\n             end loop;\n-         end if;\n+         end loop;\n       end if;\n    end Delete_Mapping_Files;\n \n@@ -3983,7 +4000,11 @@ package body Make is\n       pragma Warnings (Off, Success);\n \n    begin\n-      if (not Debug.Debug_Flag_N) and Main_Project /= No_Project then\n+      --  The caller is responsible for ensuring that Debug_Flag_N is False\n+\n+      pragma Assert (not Debug.Debug_Flag_N);\n+\n+      if Main_Project /= No_Project then\n          for Project in Project_Table.First ..\n                         Project_Table.Last (Project_Tree.Projects)\n          loop\n@@ -4004,10 +4025,10 @@ package body Make is\n                                   (Project).Config_File_Name),\n                   Success => Success);\n \n-               --  Make sure that we don't have a config file for this\n-               --  project, in case when there are several mains.\n-               --  In this case, we will recreate another config file:\n-               --  we cannot reuse the one that we just deleted!\n+               --  Make sure that we don't have a config file for this project,\n+               --  in case there are several mains. In this case, we will\n+               --  recreate another config file: we cannot reuse the one that\n+               --  we just deleted!\n \n                Project_Tree.Projects.Table (Project).\n                  Config_Checked := False;\n@@ -4069,7 +4090,40 @@ package body Make is\n                       Args (J) (Args (J)'First .. Args (J)'First + 2) /= \"-F=\"\n                   then\n                      Write_Str (\" \");\n-                     Write_Str (Args (J).all);\n+\n+                     --  If -df is used, only display file names, not path\n+                     --  names.\n+\n+                     if Debug.Debug_Flag_F then\n+                        declare\n+                           Equal_Pos : Natural;\n+                        begin\n+                           Equal_Pos := Args (J)'First - 1;\n+                           for K in Args (J)'Range loop\n+                              if Args (J) (K) = '=' then\n+                                 Equal_Pos := K;\n+                                 exit;\n+                              end if;\n+                           end loop;\n+\n+                           if Is_Absolute_Path\n+                             (Args (J) (Equal_Pos + 1 .. Args (J)'Last))\n+                           then\n+                              Write_Str\n+                                (Args (J) (Args (J)'First .. Equal_Pos));\n+                              Write_Str\n+                                (File_Name\n+                                   (Args (J)\n+                                    (Equal_Pos + 1 .. Args (J)'Last)));\n+\n+                           else\n+                              Write_Str (Args (J).all);\n+                           end if;\n+                        end;\n+\n+                     else\n+                        Write_Str (Args (J).all);\n+                     end if;\n                   end if;\n                end if;\n             end if;\n@@ -4583,8 +4637,6 @@ package body Make is\n    --  This body is very long, should be broken down ???\n \n    begin\n-      Gnatmake_Called := True;\n-\n       Install_Int_Handler (Sigint_Intercepted'Access);\n \n       Do_Compile_Step := True;\n@@ -4716,16 +4768,12 @@ package body Make is\n                      --  If no sources to compile, then there is nothing to do\n \n                      if Osint.Number_Of_Files = 0 then\n-                        if not Debug.Debug_Flag_N then\n-                           Delete_Mapping_Files;\n-                           Prj.Env.Delete_All_Path_Files (Project_Tree);\n-                        end if;\n-\n                         if not Quiet_Output then\n                            Osint.Write_Program_Name;\n                            Write_Line (\": no sources to compile\");\n                         end if;\n \n+                        Delete_All_Temp_Files;\n                         Exit_Program (E_Success);\n                      end if;\n                   end if;\n@@ -4875,6 +4923,8 @@ package body Make is\n                Gcc_Path      => Gcc_Path,\n                Bind          => Bind_Only,\n                Link          => Link_Only);\n+\n+            Delete_All_Temp_Files;\n             Exit_Program (E_Success);\n \n          else\n@@ -6490,10 +6540,7 @@ package body Make is\n       --  Delete the temporary mapping file that was created if we are\n       --  using project files.\n \n-      if not Debug.Debug_Flag_N then\n-         Delete_Mapping_Files;\n-         Prj.Env.Delete_All_Path_Files (Project_Tree);\n-      end if;\n+      Delete_All_Temp_Files;\n \n    exception\n       when X : others =>\n@@ -6770,6 +6817,14 @@ package body Make is\n             Project_File_Name => Project_File_Name.all,\n             Packages_To_Check => Packages_To_Check_By_Gnatmake);\n \n+         --  The parsing of project files may have changed the current output\n+\n+         if Commands_To_Stdout then\n+            Set_Standard_Output;\n+         else\n+            Set_Standard_Error;\n+         end if;\n+\n          if Main_Project = No_Project then\n             Make_Failed (\"\"\"\", Project_File_Name.all, \"\"\" processing failed\");\n          end if;\n@@ -6852,6 +6907,7 @@ package body Make is\n       Put_In_Q : Boolean := Into_Q;\n       Unit     : Unit_Data;\n       Sfile    : File_Name_Type;\n+      Index    : Int;\n \n       Extending : constant Boolean :=\n                     Project_Tree.Projects.Table\n@@ -6899,6 +6955,7 @@ package body Make is\n       loop\n          Unit  := Project_Tree.Units.Table (Id);\n          Sfile := No_File;\n+         Index := 0;\n \n          --  If there is a source for the body, and the body has not been\n          --  locally removed,\n@@ -6937,13 +6994,16 @@ package body Make is\n \n                      if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n                         Sfile := No_File;\n+                        Index := 0;\n                      else\n                         Sfile := Unit.File_Names (Body_Part).Display_Name;\n+                        Index := Unit.File_Names (Body_Part).Index;\n                      end if;\n                   end;\n \n                else\n                   Sfile := Unit.File_Names (Body_Part).Display_Name;\n+                  Index := Unit.File_Names (Body_Part).Index;\n                end if;\n             end if;\n \n@@ -6956,6 +7016,7 @@ package body Make is\n             --  this one.\n \n             Sfile := Unit.File_Names (Specification).Display_Name;\n+            Index := Unit.File_Names (Specification).Index;\n          end if;\n \n          --  If Put_In_Q is True, we insert into the Q\n@@ -6972,15 +7033,15 @@ package body Make is\n             --  And of course, we only insert in the Q if the source is not\n             --  marked.\n \n-            if Sfile /= No_File and then not Is_Marked (Sfile) then\n+            if Sfile /= No_File and then not Is_Marked (Sfile, Index) then\n                if Verbose_Mode then\n                   Write_Str (\"Adding \"\"\");\n                   Write_Str (Get_Name_String (Sfile));\n                   Write_Line (\"\"\" to the queue\");\n                end if;\n \n-               Insert_Q (Sfile);\n-               Mark (Sfile);\n+               Insert_Q (Sfile, Index => Index);\n+               Mark (Sfile, Index);\n             end if;\n \n          elsif Sfile /= No_File then\n@@ -6996,7 +7057,7 @@ package body Make is\n                Write_Line (\"\"\" as if on the command line\");\n             end if;\n \n-            Osint.Add_File (Get_Name_String (Sfile));\n+            Osint.Add_File (Get_Name_String (Sfile), Index);\n             Put_In_Q := True;\n \n             --  As we may look into the Q later, ensure the Q has been\n@@ -7404,11 +7465,7 @@ package body Make is\n \n    procedure Report_Compilation_Failed is\n    begin\n-      if not Debug.Debug_Flag_N then\n-         Delete_Mapping_Files;\n-         Prj.Env.Delete_All_Path_Files (Project_Tree);\n-      end if;\n-\n+      Delete_All_Temp_Files;\n       Exit_Program (E_Fatal);\n    end Report_Compilation_Failed;\n \n@@ -7421,15 +7478,17 @@ package body Make is\n    begin\n       Set_Standard_Error;\n       Write_Line (\"*** Interrupted ***\");\n-      Delete_All_Temp_Files;\n \n       --  Send SIGINT to all outstanding compilation processes spawned\n \n       for J in 1 .. Outstanding_Compiles loop\n          Kill (Running_Compile (J).Pid, SIGINT, 1);\n       end loop;\n \n+      Delete_All_Temp_Files;\n       OS_Exit (1);\n+      --  ??? OS_Exit (1) is equivalent to Exit_Program (E_No_Compile),\n+      --  shouldn't that be Exit_Program (E_Abort) instead?\n    end Sigint_Intercepted;\n \n    -------------------"}, {"sha": "9672744a1ac7a2adf78d4dbe5671b3d9f4ff18b3", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189641a279ecf39b29c4f903395c31477aad7a8d/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189641a279ecf39b29c4f903395c31477aad7a8d/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=189641a279ecf39b29c4f903395c31477aad7a8d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -130,6 +130,9 @@ package Makeutl is\n    --  For gnatbind switches, Including_L_Switch is False, because the\n    --  argument of the -L switch is not a path.\n \n+   function Path_Or_File_Name (Path : Path_Name_Type) return String;\n+   --  Returns a file name if -df is used, otherwise return a path name\n+\n    ----------------------\n    -- Marking Routines --\n    ----------------------"}]}