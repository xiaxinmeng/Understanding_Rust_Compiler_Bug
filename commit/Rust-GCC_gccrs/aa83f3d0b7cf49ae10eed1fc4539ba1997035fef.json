{"sha": "aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE4M2YzZDBiN2NmNDlhZTEwZWVkMWZjNDUzOWJhMTk5NzAzNWZlZg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-10-28T08:27:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-26T08:39:57Z"}, "message": "[Ada] Reuse Is_Generic_Subprogram where possible\n\ngcc/ada/\n\n\t* lib-writ.adb, sem_ch8.adb, sem_prag.adb: Use\n\tIs_Generic_Subprogram instead of low-level membership tests.", "tree": {"sha": "878fce3ead6b5f31590fdad03f96d852aac57f15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/878fce3ead6b5f31590fdad03f96d852aac57f15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebf90d68e9472ad08e2840ecdbf0ad69fd339830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf90d68e9472ad08e2840ecdbf0ad69fd339830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf90d68e9472ad08e2840ecdbf0ad69fd339830"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "34a8d631c6e722080f020c138c42e3be607177b4", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "patch": "@@ -1125,9 +1125,7 @@ package body Lib.Writ is\n \n             if Nkind (U) = N_Subprogram_Body\n               and then Present (Corresponding_Spec (U))\n-              and then\n-                Ekind (Corresponding_Spec (U)) in E_Generic_Procedure\n-                                                | E_Generic_Function\n+              and then Is_Generic_Subprogram (Corresponding_Spec (U))\n             then\n                null;\n "}, {"sha": "4c80e02435ba871d8a0da0b4cf25759adada8a41", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "patch": "@@ -8750,9 +8750,8 @@ package body Sem_Ch8 is\n \n          --  Mark primitives\n \n-         elsif (Ekind (Id) in Overloadable_Kind\n-                 or else Ekind (Id) in\n-                           E_Generic_Function | E_Generic_Procedure)\n+         elsif (Is_Overloadable (Id)\n+                 or else Is_Generic_Subprogram (Id))\n            and then (Is_Potentially_Use_Visible (Id)\n                       or else Is_Intrinsic_Subprogram (Id)\n                       or else (Ekind (Id) in E_Function | E_Procedure"}, {"sha": "05ff5114ac7fe484a79e4d67fcffe9eeca003292", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa83f3d0b7cf49ae10eed1fc4539ba1997035fef/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=aa83f3d0b7cf49ae10eed1fc4539ba1997035fef", "patch": "@@ -24781,18 +24781,15 @@ package body Sem_Prag is\n          --  body, not in the spec).\n \n          when Pragma_Unimplemented_Unit => Unimplemented_Unit : declare\n-            Cunitent : constant Entity_Id   :=\n+            Cunitent : constant Entity_Id :=\n                          Cunit_Entity (Get_Source_Unit (Loc));\n-            Ent_Kind : constant Entity_Kind := Ekind (Cunitent);\n \n          begin\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n \n             if Operating_Mode = Generate_Code\n-              or else Ent_Kind = E_Generic_Function\n-              or else Ent_Kind = E_Generic_Procedure\n-              or else Ent_Kind = E_Generic_Package\n+              or else Is_Generic_Unit (Cunitent)\n             then\n                Get_Name_String (Chars (Cunitent));\n                Set_Casing (Mixed_Case);"}]}