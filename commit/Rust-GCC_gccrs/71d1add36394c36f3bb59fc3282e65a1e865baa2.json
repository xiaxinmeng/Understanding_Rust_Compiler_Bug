{"sha": "71d1add36394c36f3bb59fc3282e65a1e865baa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkMWFkZDM2Mzk0YzM2ZjNiYjU5ZmMzMjgyZTY1YTFlODY1YmFhMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-30T15:11:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-30T15:11:07Z"}, "message": "semantics.c (simplify_aggr_init_expr): Remove remnants of 2014-04-11 change.\n\n\t* semantics.c (simplify_aggr_init_expr): Remove remnants of\n\t2014-04-11 change.\n\nFrom-SVN: r212153", "tree": {"sha": "84733a69af3d4728e6d40b365425d36bb8c7de1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84733a69af3d4728e6d40b365425d36bb8c7de1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71d1add36394c36f3bb59fc3282e65a1e865baa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d1add36394c36f3bb59fc3282e65a1e865baa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d1add36394c36f3bb59fc3282e65a1e865baa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d1add36394c36f3bb59fc3282e65a1e865baa2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f82fed2f6dcef2719103a5fd885f6baf9714ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f82fed2f6dcef2719103a5fd885f6baf9714ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f82fed2f6dcef2719103a5fd885f6baf9714ce0"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "b478cf739f801e8b52f7f6b8f02c14bb2cf48c67", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d1add36394c36f3bb59fc3282e65a1e865baa2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d1add36394c36f3bb59fc3282e65a1e865baa2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=71d1add36394c36f3bb59fc3282e65a1e865baa2", "patch": "@@ -1,3 +1,8 @@\n+2014-06-30  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (simplify_aggr_init_expr): Remove remnants of\n+\t2014-04-11 change.\n+\n 2014-06-30  Marek Polacek  <polacek@redhat.com>\n \n \t* cp-gimplify.c (cp_genericize): Don't instrument returns if the"}, {"sha": "a6f5a4a413c32dfddbb7cd42ed92510283987e13", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d1add36394c36f3bb59fc3282e65a1e865baa2/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d1add36394c36f3bb59fc3282e65a1e865baa2/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=71d1add36394c36f3bb59fc3282e65a1e865baa2", "patch": "@@ -3870,7 +3870,6 @@ simplify_aggr_init_expr (tree *tp)\n \t\t\t\t    AGGR_INIT_EXPR_ARGP (aggr_init_expr));\n   TREE_NOTHROW (call_expr) = TREE_NOTHROW (aggr_init_expr);\n   CALL_EXPR_LIST_INIT_P (call_expr) = CALL_EXPR_LIST_INIT_P (aggr_init_expr);\n-  tree ret = call_expr;\n \n   if (style == ctor)\n     {\n@@ -3886,30 +3885,31 @@ simplify_aggr_init_expr (tree *tp)\n \t expand_call{,_inline}.  */\n       cxx_mark_addressable (slot);\n       CALL_EXPR_RETURN_SLOT_OPT (call_expr) = true;\n-      ret = build2 (INIT_EXPR, TREE_TYPE (ret), slot, ret);\n+      call_expr = build2 (INIT_EXPR, TREE_TYPE (call_expr), slot, call_expr);\n     }\n   else if (style == pcc)\n     {\n       /* If we're using the non-reentrant PCC calling convention, then we\n \t need to copy the returned value out of the static buffer into the\n \t SLOT.  */\n       push_deferring_access_checks (dk_no_check);\n-      ret = build_aggr_init (slot, ret,\n-\t\t\t     DIRECT_BIND | LOOKUP_ONLYCONVERTING,\n-\t\t\t     tf_warning_or_error);\n+      call_expr = build_aggr_init (slot, call_expr,\n+\t\t\t\t   DIRECT_BIND | LOOKUP_ONLYCONVERTING,\n+                                   tf_warning_or_error);\n       pop_deferring_access_checks ();\n-      ret = build2 (COMPOUND_EXPR, TREE_TYPE (slot), ret, slot);\n+      call_expr = build2 (COMPOUND_EXPR, TREE_TYPE (slot), call_expr, slot);\n     }\n \n   if (AGGR_INIT_ZERO_FIRST (aggr_init_expr))\n     {\n       tree init = build_zero_init (type, NULL_TREE,\n \t\t\t\t   /*static_storage_p=*/false);\n       init = build2 (INIT_EXPR, void_type_node, slot, init);\n-      ret = build2 (COMPOUND_EXPR, TREE_TYPE (ret), init, ret);\n+      call_expr = build2 (COMPOUND_EXPR, TREE_TYPE (call_expr),\n+\t\t\t  init, call_expr);\n     }\n \n-  *tp = ret;\n+  *tp = call_expr;\n }\n \n /* Emit all thunks to FN that should be emitted when FN is emitted.  */"}]}