{"sha": "eeea13c2cd66c422d7fddcbae5f40b20b9314515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlYTEzYzJjZDY2YzQyMmQ3ZmRkY2JhZTVmNDBiMjBiOTMxNDUxNQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-12-21T18:03:31Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-12-21T18:03:31Z"}, "message": "target-supports.exp (check_effective_target_vect_no_max, [...]): New.\n\n\t* lib/target-supports.exp\n\t(check_effective_target_vect_no_max,\n\tcheck_effective_target_vect_no_bitwise,\n\tcheck_effective_target_vect_no_align): New.\n\t* gcc.dg/vect/vect-13.c: Use them.\n\t* gcc.dg/vect/vect-17.c: Ditto.\n\t* gcc.dg/vect/vect-18.c: Ditto.\n\t* gcc.dg/vect/vect-19.c: Ditto.\n\t* gcc.dg/vect/vect-20.c: Ditto.\n\t* gcc.dg/vect/vect-27.c: Ditto.\n\t* gcc.dg/vect/vect-29.c: Ditto.\n\t* gcc.dg/vect/vect-44.c: Ditto.\n\t* gcc.dg/vect/vect-48.c: Ditto.\n\t* gcc.dg/vect/vect-50.c: Ditto.\n\t* gcc.dg/vect/vect-52.c: Ditto.\n\t* gcc.dg/vect/vect-54.c: Ditto.\n\t* gcc.dg/vect/vect-56.c: Ditto.\n\t* gcc.dg/vect/vect-58.c: Ditto.\n\t* gcc.dg/vect/vect-60.c: Ditto.\n\t* gcc.dg/vect/vect-72.c: Ditto.\n\t* gcc.dg/vect/vect-80.c: Ditto.\n\nFrom-SVN: r92466", "tree": {"sha": "9a1bede18558661d0d565f5ef91c8d32d1ee9739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1bede18558661d0d565f5ef91c8d32d1ee9739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeea13c2cd66c422d7fddcbae5f40b20b9314515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeea13c2cd66c422d7fddcbae5f40b20b9314515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeea13c2cd66c422d7fddcbae5f40b20b9314515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeea13c2cd66c422d7fddcbae5f40b20b9314515/comments", "author": null, "committer": null, "parents": [{"sha": "7a8380aebb80b0f567b218204d6e926105b9d305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8380aebb80b0f567b218204d6e926105b9d305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a8380aebb80b0f567b218204d6e926105b9d305"}], "stats": {"total": 163, "additions": 109, "deletions": 54}, "files": [{"sha": "b1f391f27ee6a4141225216e58c4ad52544530d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -1,3 +1,27 @@\n+2004-12-21  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_no_max,\n+\tcheck_effective_target_vect_no_bitwise,\n+\tcheck_effective_target_vect_no_align): New.\n+\t* gcc.dg/vect/vect-13.c: Use them.\n+\t* gcc.dg/vect/vect-17.c: Ditto.\n+\t* gcc.dg/vect/vect-18.c: Ditto.\n+\t* gcc.dg/vect/vect-19.c: Ditto.\n+\t* gcc.dg/vect/vect-20.c: Ditto.\n+\t* gcc.dg/vect/vect-27.c: Ditto.\n+\t* gcc.dg/vect/vect-29.c: Ditto.\n+\t* gcc.dg/vect/vect-44.c: Ditto.\n+\t* gcc.dg/vect/vect-48.c: Ditto.\n+\t* gcc.dg/vect/vect-50.c: Ditto.\n+\t* gcc.dg/vect/vect-52.c: Ditto.\n+\t* gcc.dg/vect/vect-54.c: Ditto.\n+\t* gcc.dg/vect/vect-56.c: Ditto.\n+\t* gcc.dg/vect/vect-58.c: Ditto.\n+\t* gcc.dg/vect/vect-60.c: Ditto.\n+\t* gcc.dg/vect/vect-72.c: Ditto.\n+\t* gcc.dg/vect/vect-80.c: Ditto.\n+\n 2004-12-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/14075"}, {"sha": "0cec89bc2c625b4a236528b56bb8d4a8bd43d4e0", "filename": "gcc/testsuite/gcc.dg/vect/vect-13.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -36,6 +36,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* These fail to vectorize on targets that don't have or model a vector\n-   max operation.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* sparc*-*-* alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_max } } } */"}, {"sha": "210e31486bea29ede8d40466c0b23cc89102b01f", "filename": "gcc/testsuite/gcc.dg/vect/vect-17.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -124,6 +124,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* These fail to vectorize on targets that don't have or model vector\n-   bitwise operations.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-* alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */"}, {"sha": "2f9f201584654a2aa123a4277db00a0cd600b385", "filename": "gcc/testsuite/gcc.dg/vect/vect-18.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -123,6 +123,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* These fail to vectorize on targets that don't have or model vector\n-   bitwise operations.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-* alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */"}, {"sha": "681e5866ab42ba188b4acbb72240244c1682b499", "filename": "gcc/testsuite/gcc.dg/vect/vect-19.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -123,6 +123,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* These fail to vectorize on targets that don't have or model vector\n-   bitwise operations.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-* alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */"}, {"sha": "73df78d9386d8f017f5864c5df17753a2af95637", "filename": "gcc/testsuite/gcc.dg/vect/vect-20.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -95,6 +95,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* These fail to vectorize on targets that don't have or model vector\n-   bitwise operations.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-* alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */"}, {"sha": "1c77877814a947e1fef36a5b92b91c25b6591d9c", "filename": "gcc/testsuite/gcc.dg/vect/vect-27.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -40,7 +40,5 @@ int main (void)\n   return main1 ();\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* sparc*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n "}, {"sha": "4d71bca7c7602dddd117b871814b027a8f7a6923", "filename": "gcc/testsuite/gcc.dg/vect/vect-29.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -43,7 +43,5 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* sparc*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n "}, {"sha": "b14a3a3835f5faaf6faa699f2f7f2b1d0b4bd2c2", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -54,6 +54,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "48c569648b0ddbf31a1e9b7cd5c94d94353e4584", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -52,6 +52,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "feac1c59baf4ec183b34bb8461bb9371df6c92ca", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -49,7 +49,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  They also fail to vectorize for 64-bit powerpc but there's no\n-   way to specify that in an xfail list.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "745f36204b592198389a6f659f203e808158a401", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -51,7 +51,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  They also fail to vectorize for 64-bit powerpc but there's no\n-   way to specify that in an xfail list.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "86f2cdfe6c9d9e1671c86cd6a6a705259ce220a5", "filename": "gcc/testsuite/gcc.dg/vect/vect-54.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -50,6 +50,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "e3cb64101ddea7cf1c89616aa852c979ef90bc5e", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -50,6 +50,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "feb8ab364e614f42eb1d51719488a327d0069d31", "filename": "gcc/testsuite/gcc.dg/vect/vect-58.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -51,7 +51,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  They also fail to vectorize for 64-bit powerpc but there's no\n-   way to specify that in an xfail list.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "d3225e12591215773f4cc08c55dc2ea0c0bd1dce", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -51,6 +51,4 @@ int main (void)\n   return 0;\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "12a88099935b3f1dfdf4b37af9ff34ee4374a394", "filename": "gcc/testsuite/gcc.dg/vect/vect-72.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -40,7 +40,5 @@ int main (void)\n   return main1 ();\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* sparc*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n "}, {"sha": "3b6869259fbda530da3b6a316743885929da11c5", "filename": "gcc/testsuite/gcc.dg/vect/vect-80.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -42,6 +42,4 @@ int main (void)\n   return 0;\t\n }\n \n-/* These are not yet vectorized on targets that do not model alignment-handling\n-   mechanisms.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "7987680ffe6d69ca26d7ea7b38dcc9be0c33ef33", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeea13c2cd66c422d7fddcbae5f40b20b9314515/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=eeea13c2cd66c422d7fddcbae5f40b20b9314515", "patch": "@@ -526,6 +526,74 @@ proc check_effective_target_vect_double { } {\n     return $et_vect_double_saved\n }\n \n+# Return 1 if the target plus current options does not support a vector\n+# max instruction, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_no_max { } {\n+    global et_vect_no_max_saved\n+\n+    if [info exists et_vect_no_max_saved] {\n+\tverbose \"check_effective_target_vect_no_max: using cached result\" 2\n+    } else {\n+\tset et_vect_no_max_saved 0\n+\tif { [istarget i?86-*-*]\n+\t     || [istarget x86_64-*-*]\n+\t     || [istarget sparc*-*-*]\n+\t     || [istarget alpha*-*-*] } {\n+\t    set et_vect_no_max_saved 1\n+\t}\n+    }\n+    verbose \"check_effective_target_vect_no_max: returning $et_vect_no_max_saved\" 2\n+    return $et_vect_no_max_saved\n+}\n+\n+# Return 1 if the target plus current options does not support vector\n+# bitwise instructions, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_no_bitwise { } {\n+    global et_vect_no_bitwise_saved\n+\n+    if [info exists et_vect_no_bitwise_saved] {\n+\tverbose \"check_effective_target_vect_no_bitwise: using cached result\" 2\n+    } else {\n+\tset et_vect_no_bitwise_saved 0\n+\tif { [istarget i?86-*-*]\n+\t     || [istarget x86_64-*-*]\n+\t     || [istarget alpha-*-*] } {\n+\t    set et_vect_no_bitwise_saved 1\n+\t}\n+    }\n+    verbose \"check_effective_target_vect_no_bitwise: returning $et_vect_no_bitwise_saved\" 2\n+    return $et_vect_no_bitwise_saved\n+}\n+\n+# Return 1 if the target plus current options does not support a vector\n+# alignment mechanism, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_no_align { } {\n+    global et_vect_no_align_saved\n+\n+    if [info exists et_vect_no_align_saved] {\n+\tverbose \"check_effective_target_vect_no_align: using cached result\" 2\n+    } else {\n+\tset et_vect_no_align_saved 0\n+\tif { [istarget i?86-*-*]\n+\t     || [istarget x86_64-*-*]\n+\t     || [istarget mipsisa64*-*-*]\n+\t     || [istarget sparc*-*-*] } {\n+\t    set et_vect_no_align_saved 1\n+\t}\n+    }\n+    verbose \"check_effective_target_vect_no_align: returning $et_vect_no_align_saved\" 2\n+    return $et_vect_no_align_saved\n+}\n+\n # Return 1 if the target matches the effective target 'arg', 0 otherwise.\n # This can be used with any check_* proc that takes no argument and\n # returns only 1 or 0.  It could be used with check_* procs that take"}]}