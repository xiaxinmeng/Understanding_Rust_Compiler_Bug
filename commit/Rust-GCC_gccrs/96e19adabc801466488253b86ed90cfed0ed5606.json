{"sha": "96e19adabc801466488253b86ed90cfed0ed5606", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZlMTlhZGFiYzgwMTQ2NjQ4ODI1M2I4NmVkOTBjZmVkMGVkNTYwNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-19T21:43:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-19T21:43:55Z"}, "message": "Add C++-conforming wrappers for stdlib.h and math.h\n\n\tPR libstdc++/14608\n\tPR libstdc++/60401\n\t* include/Makefile.am: Use c_compatibility math.h and stdlib.h for\n\t--enable-cheaders=c_global configs.\n\t* include/Makefile.in: Regenerate.\n\t* include/c_compatibility/math.h: Remove obsolete _GLIBCXX_NAMESPACE_C\n\ttest and allow inclusion from C files.\n\t* include/c_compatibility/stdlib.h: Likewise. Support freestanding.\n\t(at_quick_exit, quick_exit): Add using directives.\n\t* include/c_global/cmath: Use #include_next for math.h.\n\t* include/c_global/cstdlib: Use #include_next for stdlib.h.\n\t* testsuite/26_numerics/headers/cmath/14608.cc: New.\n\t* testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:\n\tRemove xfail for most targets.\n\t* testsuite/26_numerics/headers/cstdlib/60401.cc: New.\n\nFrom-SVN: r232586", "tree": {"sha": "101a639eab80f3df696c45cd749cb82ecc101833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/101a639eab80f3df696c45cd749cb82ecc101833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96e19adabc801466488253b86ed90cfed0ed5606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e19adabc801466488253b86ed90cfed0ed5606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96e19adabc801466488253b86ed90cfed0ed5606", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e19adabc801466488253b86ed90cfed0ed5606/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af33ba0d93bfaebff31c2cc43b1fc56b618821e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af33ba0d93bfaebff31c2cc43b1fc56b618821e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af33ba0d93bfaebff31c2cc43b1fc56b618821e7"}], "stats": {"total": 141, "additions": 124, "deletions": 17}, "files": [{"sha": "4bf6e259e586963ea02e3a66d5bf6a215a8fddd2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -1,3 +1,21 @@\n+2016-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/14608\n+\tPR libstdc++/60401\n+\t* include/Makefile.am: Use c_compatibility math.h and stdlib.h for\n+\t--enable-cheaders=c_global configs.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/c_compatibility/math.h: Remove obsolete _GLIBCXX_NAMESPACE_C\n+\ttest and allow inclusion from C files.\n+\t* include/c_compatibility/stdlib.h: Likewise. Support freestanding.\n+\t(at_quick_exit, quick_exit): Add using directives.\n+\t* include/c_global/cmath: Use #include_next for math.h.\n+\t* include/c_global/cstdlib: Use #include_next for stdlib.h.\n+\t* testsuite/26_numerics/headers/cmath/14608.cc: New.\n+\t* testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:\n+\tRemove xfail for most targets.\n+\t* testsuite/26_numerics/headers/cstdlib/60401.cc: New.\n+\n 2016-01-18  Torvald Riegel  <triegel@redhat.com>\n \n \t* include/bits/c++config (_GLIBCXX_USE_WEAK_REF): New."}, {"sha": "573f057a120b5a0817a58377154e7a73886df87e", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -740,7 +740,9 @@ if GLIBCXX_C_HEADERS_C_GLOBAL\n c_compatibility_headers = \\\n \t${c_compatibility_srcdir}/complex.h \\\n \t${c_compatibility_srcdir}/fenv.h \\\n-\t${c_compatibility_srcdir}/tgmath.h\n+\t${c_compatibility_srcdir}/tgmath.h \\\n+\t${c_compatibility_srcdir}/math.h \\\n+\t${c_compatibility_srcdir}/stdlib.h\n endif\n \n if GLIBCXX_C_HEADERS_C"}, {"sha": "57f1ec561b9fa8f69b4d5cb71562fc46ace9ed7d", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -1023,7 +1023,9 @@ c_compatibility_builddir = .\n @GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@c_compatibility_headers = \\\n @GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/complex.h \\\n @GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/fenv.h \\\n-@GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/tgmath.h\n+@GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/tgmath.h \\\n+@GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/math.h \\\n+@GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/stdlib.h\n \n @GLIBCXX_C_HEADERS_C_STD_TRUE@c_compatibility_headers = \n @GLIBCXX_C_HEADERS_C_TRUE@c_compatibility_headers = \\"}, {"sha": "67f5ef1afa1d1194b92e134f07d4ade74808a65c", "filename": "libstdc++-v3/include/c_compatibility/math.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fmath.h?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -26,12 +26,15 @@\n  *  This is a Standard C++ Library header.\n  */\n \n-#include <cmath>\n \n #ifndef _GLIBCXX_MATH_H\n #define _GLIBCXX_MATH_H 1\n \n-#ifdef _GLIBCXX_NAMESPACE_C\n+#if !defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n+# include_next <math.h>\n+#else\n+# include <cmath>\n+\n using std::abs;\n using std::acos;\n using std::asin;\n@@ -72,5 +75,4 @@ using std::isunordered;\n #endif\n \n #endif\n-\n #endif"}, {"sha": "bd72580cffef084f621ef039b54cb62eb2b910dd", "filename": "libstdc++-v3/include/c_compatibility/stdlib.h", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fstdlib.h?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -26,25 +26,37 @@\n  *  This is a Standard C++ Library header.\n  */\n \n-#include <cstdlib>\n-\n #ifndef _GLIBCXX_STDLIB_H\n #define _GLIBCXX_STDLIB_H 1\n \n-#ifdef _GLIBCXX_NAMESPACE_C\n+#if !defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n+# include_next <stdlib.h>\n+#else\n+# include <cstdlib>\n+\n+using std::abort;\n+using std::atexit;\n+using std::exit;\n+#if __cplusplus >= 201103L\n+# ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n+  using std::at_quick_exit;\n+# endif\n+# ifdef _GLIBCXX_HAVE_QUICK_EXIT\n+  using std::quick_exit;\n+# endif\n+#endif\n+\n+#if _GLIBCXX_HOSTED\n using std::div_t;\n using std::ldiv_t;\n \n-using std::abort;\n using std::abs;\n-using std::atexit;\n using std::atof;\n using std::atoi;\n using std::atol;\n using std::bsearch;\n using std::calloc;\n using std::div;\n-using std::exit;\n using std::free;\n using std::getenv;\n using std::labs;\n@@ -66,3 +78,4 @@ using std::wctomb;\n #endif\n \n #endif\n+#endif"}, {"sha": "45e40ab3dc16ed8be00439002c100ed3f20d1342", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -41,7 +41,9 @@\n #include <bits/c++config.h>\n #include <bits/cpp_type_traits.h>\n #include <ext/type_traits.h>\n-#include <math.h>\n+#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n+#include_next <math.h>\n+#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n \n #ifndef _GLIBCXX_CMATH\n #define _GLIBCXX_CMATH 1"}, {"sha": "44b6e5c709c0696bc844617483b230b4ae905b23", "filename": "libstdc++-v3/include/c_global/cstdlib", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -69,7 +69,11 @@ namespace std\n \n #else\n \n-#include <stdlib.h>\n+// Need to ensure this finds the C library's <stdlib.h> not a libstdc++\n+// wrapper that might already be installed later in the include search path.\n+#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n+#include_next <stdlib.h>\n+#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS\n \n // Get rid of those macros defined in <stdlib.h> in lieu of real functions.\n #undef abort"}, {"sha": "65f5c6c62d619b54182ca6040ec18d1ca7218178", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/14608.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F14608.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F14608.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F14608.cc?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <cmath>\n+// Also make names from <cmath> available in the global namespace:\n+#include <math.h>\n+\n+bool foo(double d)\n+{\n+  return ::isfinite(d); // PR libstdc++/14608\n+}\n+\n+int bar(double d)\n+{\n+  return ::signbit(d); // PR libstdc++/44611\n+}\n+\n+constexpr bool is_double(double) { return true; }\n+template<typename T> constexpr bool is_double(T) { return false; }\n+using type = decltype(::abs(1.5));\n+static_assert(is_double(type{}), \"::abs(double) overload exists in <math.h>\");"}, {"sha": "cbced7dece224b054c015a2c5cc35179afcd8594", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c.cc?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -17,12 +17,10 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do compile }\n+// { dg-do compile { xfail uclibc } }\n+// { dg-excess-errors \"\" { target uclibc } }\n // { dg-add-options no_pch }\n \n-// { dg-xfail-if \"\" { { *-*-linux* *-*-gnu* *-*-darwin* *-*-solaris2.1[01]* hppa*-*-hpux* *-*-mingw* *-*-aix* } || { uclibc || newlib } } { \"*\" } { \"\" } }\n-// { dg-excess-errors \"\" { target { { *-*-linux* *-*-gnu* *-*-darwin* *-*-solaris2.1[01]* hppa*-*-hpux* *-*-mingw* *-*-aix* } || { uclibc || newlib } } } }\n-\n #include <math.h>\n \n void fpclassify() { }"}, {"sha": "f0cff335e8ec22aeb93b857351aebb9a86c74eb8", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cstdlib/60401.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F60401.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e19adabc801466488253b86ed90cfed0ed5606/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F60401.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2F60401.cc?ref=96e19adabc801466488253b86ed90cfed0ed5606", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// PR libstdc++/60401\n+\n+#include <stdlib.h>\n+\n+constexpr bool is_long(long) { return true; }\n+template<typename T> constexpr bool is_long(T) { return false; }\n+using type = decltype(::abs(1L));\n+static_assert(is_long(type{}), \"::abs(long) overload exists in <stdlib.h>\");"}]}