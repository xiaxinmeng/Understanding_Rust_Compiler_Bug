{"sha": "a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA2ZTNjNDA3MGQzYzZlNjA2Y2VjMjBiN2JiNzVhMzBmZjAyNjU2Yg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-07-11T10:32:54Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-07-11T10:32:54Z"}, "message": "rtl.h (gen_rtx_CONST_VECTOR): Declare.\n\n\t* rtl.h (gen_rtx_CONST_VECTOR): Declare.\n\t* gengenrtl.c (special_rtx): Check for CONST_VECTOR.\n\t* emit-rtl.c (gen_rtx_CONST_VECTOR): New function.\n\t(gen_const_vector_0): Use it.\n\nFrom-SVN: r55395", "tree": {"sha": "1600228b687f0973277f1952e5f14849dbbd8053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1600228b687f0973277f1952e5f14849dbbd8053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/comments", "author": null, "committer": null, "parents": [{"sha": "b70fc53b64a55140d7a3077b7914002e173ec401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70fc53b64a55140d7a3077b7914002e173ec401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70fc53b64a55140d7a3077b7914002e173ec401"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "11314a1f7f0a95c6d178944d93e30f674426efde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "patch": "@@ -1,3 +1,10 @@\n+Thu Jul 11 11:31:12 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* rtl.h (gen_rtx_CONST_VECTOR): Declare.\n+\t* gengenrtl.c (special_rtx): Check for CONST_VECTOR.\n+\t* emit-rtl.c (gen_rtx_CONST_VECTOR): New function.\n+\t(gen_const_vector_0): Use it.\n+\n 2002-07-11  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.md (adddi3): For 32-bit targets, force constants to a register"}, {"sha": "eedea4a4e4a8d9b700e7c39b86b1ebbb82ef59dc", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "patch": "@@ -5188,10 +5188,26 @@ gen_const_vector_0 (mode)\n   for (i = 0; i < units; ++i)\n     RTVEC_ELT (v, i) = CONST0_RTX (inner);\n \n-  tem = gen_rtx_CONST_VECTOR (mode, v);\n+  tem = gen_rtx_raw_CONST_VECTOR (mode, v);\n   return tem;\n }\n \n+/* Generate a vector like gen_rtx_raw_CONST_VEC, but use the zero vector when\n+   all elements are zero.  */\n+rtx\n+gen_rtx_CONST_VECTOR (mode, v)\n+     enum machine_mode mode;\n+     rtvec v;\n+{\n+  rtx inner_zero = CONST0_RTX (GET_MODE_INNER (mode));\n+  int i;\n+\n+  for (i = GET_MODE_NUNITS (mode) - 1; i >= 0; i--)\n+    if (RTVEC_ELT (v, i) != inner_zero)\n+      return gen_rtx_raw_CONST_VECTOR (mode, v);\n+  return CONST0_RTX (mode);\n+}\n+\n /* Create some permanent unique rtl objects shared between all functions.\n    LINE_NUMBERS is nonzero if line numbers are to be generated.  */\n "}, {"sha": "126be8ead28cbe6f592540cc69bd00c020b15894", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "patch": "@@ -149,7 +149,8 @@ special_rtx (idx)\n   return (strcmp (defs[idx].enumname, \"CONST_INT\") == 0\n \t  || strcmp (defs[idx].enumname, \"REG\") == 0\n \t  || strcmp (defs[idx].enumname, \"SUBREG\") == 0\n-\t  || strcmp (defs[idx].enumname, \"MEM\") == 0);\n+\t  || strcmp (defs[idx].enumname, \"MEM\") == 0\n+\t  || strcmp (defs[idx].enumname, \"CONST_VECTOR\") == 0);\n }\n \n /* Return nonzero if the RTL code given by index IDX is one that we should"}, {"sha": "31032b6e2177f2b2ad49105ae45abe827bf993c9", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06e3c4070d3c6e606cec20b7bb75a30ff02656b/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a06e3c4070d3c6e606cec20b7bb75a30ff02656b", "patch": "@@ -1712,6 +1712,7 @@ extern GTY(()) rtx return_address_pointer_rtx;\n    should also modify gen_rtx to use the special function.  */\n \n extern rtx gen_rtx_CONST_INT PARAMS ((enum machine_mode, HOST_WIDE_INT));\n+extern rtx gen_rtx_CONST_VECTOR PARAMS ((enum machine_mode, rtvec));\n extern rtx gen_raw_REG PARAMS ((enum machine_mode, int));\n extern rtx gen_rtx_REG PARAMS ((enum machine_mode, unsigned));\n extern rtx gen_rtx_SUBREG PARAMS ((enum machine_mode, rtx, int));"}]}