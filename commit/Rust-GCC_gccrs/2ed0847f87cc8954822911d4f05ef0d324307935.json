{"sha": "2ed0847f87cc8954822911d4f05ef0d324307935", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVkMDg0N2Y4N2NjODk1NDgyMjkxMWQ0ZjA1ZWYwZDMyNDMwNzkzNQ==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1997-02-12T21:08:06Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1997-02-12T21:08:06Z"}, "message": "Initial revision\n\nFrom-SVN: r13632", "tree": {"sha": "4c9000576fbb2913461b8935296b7e2f32b1fe43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9000576fbb2913461b8935296b7e2f32b1fe43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ed0847f87cc8954822911d4f05ef0d324307935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed0847f87cc8954822911d4f05ef0d324307935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ed0847f87cc8954822911d4f05ef0d324307935", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed0847f87cc8954822911d4f05ef0d324307935/comments", "author": null, "committer": null, "parents": [{"sha": "c92ca24128fdead668c7cbbe926afdfd0943ddc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c92ca24128fdead668c7cbbe926afdfd0943ddc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c92ca24128fdead668c7cbbe926afdfd0943ddc3"}], "stats": {"total": 161, "additions": 161, "deletions": 0}, "files": [{"sha": "222097718fbea9cc34c3ea858d4e4270cf06d75c", "filename": "gcc/fixinc.irix", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ed0847f87cc8954822911d4f05ef0d324307935/gcc%2Ffixinc.irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ed0847f87cc8954822911d4f05ef0d324307935/gcc%2Ffixinc.irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.irix?ref=2ed0847f87cc8954822911d4f05ef0d324307935", "patch": "@@ -0,0 +1,161 @@\n+#! /bin/sh\n+# Install modified versions of certain problematic Irix include files.\n+# Copyright (C) 1997 Free Software Foundation, Inc.\n+# Contributed by Brendan Kehoe (brendan@cygnus.com).\n+#\n+# This file is part of GNU CC.\n+# \n+# GNU CC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+# \n+# GNU CC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GNU CC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+#\n+#\tSee README-fixinc for more information.\n+\n+# Directory containing the original header files.\n+INPUT=${2-${INPUT-/usr/include}}\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+# Directory in which to store the results.\n+LIB=${1?\"fixincludes: output directory not specified\"}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+ORIG_DIR=`pwd`\n+\n+# Make LIB absolute if it is relative.\n+# Don't do this if not necessary, since may screw up automounters.\n+case $LIB in\n+/*)\n+\t;;\n+*)\n+ \tLIB=$ORIG_DIR/$LIB\n+\t;;\n+esac\n+\n+echo 'Building fixincludes in ' ${LIB}\n+\n+#\n+# Note: For Irix, we deliberately don't try to create the directory trees,\n+#       since we only modify math.h and limits.h.  If we ADD ANY OTHERS,\n+#       the \"Making directories:\" and symlinks code from fixinc.svr4 may\n+#       have to go back in.\n+\n+# The Irix math.h defines struct exception, which conflicts with\n+# the class exception defined in the C++ file std/stdexcept.h.  We\n+# redefine it to __math_exception.  This is not a great fix, but I\n+# haven't been able to think of anything better.\n+file=math.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e '/struct exception/i\\\n+#ifdef __cplusplus\\\n+#define exception __math_exception\\\n+#endif'\\\n+      -e '/struct exception/a\\\n+#ifdef __cplusplus\\\n+#undef exception\\\n+#endif' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# In limits.h, put #ifndefs around things that are supposed to be defined\n+# in float.h to avoid redefinition errors if float.h is included first.\n+\n+file=limits.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e '/[ \t]FLT_MIN[ \t]/i\\\n+#ifndef FLT_MIN\n+'\\\n+      -e '/[ \t]FLT_MIN[ \t]/a\\\n+#endif\n+'\\\n+      -e '/[ \t]FLT_MAX[ \t]/i\\\n+#ifndef FLT_MAX\n+'\\\n+      -e '/[ \t]FLT_MAX[ \t]/a\\\n+#endif\n+'\\\n+      -e '/[ \t]FLT_DIG[ \t]/i\\\n+#ifndef FLT_DIG\n+'\\\n+      -e '/[ \t]FLT_DIG[ \t]/a\\\n+#endif\n+'\\\n+      -e '/[ \t]DBL_MIN[ \t]/i\\\n+#ifndef DBL_MIN\n+'\\\n+      -e '/[ \t]DBL_MIN[ \t]/a\\\n+#endif\n+'\\\n+      -e '/[ \t]DBL_MAX[ \t]/i\\\n+#ifndef DBL_MAX\n+'\\\n+      -e '/[ \t]DBL_MAX[ \t]/a\\\n+#endif\n+'\\\n+      -e '/[ \t]DBL_DIG[ \t]/i\\\n+#ifndef DBL_DIG\n+'\\\n+      -e '/[ \t]DBL_DIG[ \t]/a\\\n+#endif\n+' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+exit 0"}]}