{"sha": "8b0ec65d852c11fde3937629d10c6b24083b5737", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwZWM2NWQ4NTJjMTFmZGUzOTM3NjI5ZDEwYzZiMjQwODNiNTczNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@adacore.com", "date": "2020-02-17T23:17:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:06Z"}, "message": "[Ada] Issue with unnesting of 'First/Last and renaming\n\n2020-06-08  Richard Kenner  <kenner@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Visit_Node): When visiting array attribute\n\tnodes, in addition to checking the type of Get_Referenced_Object\n\tof the prefix, also check the actual type of the prefix.", "tree": {"sha": "35f6e345c6a749a054e97696911c58c11b24a843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35f6e345c6a749a054e97696911c58c11b24a843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b0ec65d852c11fde3937629d10c6b24083b5737", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0ec65d852c11fde3937629d10c6b24083b5737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0ec65d852c11fde3937629d10c6b24083b5737", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0ec65d852c11fde3937629d10c6b24083b5737/comments", "author": {"login": "richardkenner", "id": 56170968, "node_id": "MDQ6VXNlcjU2MTcwOTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56170968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardkenner", "html_url": "https://github.com/richardkenner", "followers_url": "https://api.github.com/users/richardkenner/followers", "following_url": "https://api.github.com/users/richardkenner/following{/other_user}", "gists_url": "https://api.github.com/users/richardkenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardkenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardkenner/subscriptions", "organizations_url": "https://api.github.com/users/richardkenner/orgs", "repos_url": "https://api.github.com/users/richardkenner/repos", "events_url": "https://api.github.com/users/richardkenner/events{/privacy}", "received_events_url": "https://api.github.com/users/richardkenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24eda9e701253cc482c0c70a102fcad103aa1591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24eda9e701253cc482c0c70a102fcad103aa1591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24eda9e701253cc482c0c70a102fcad103aa1591"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "953d449bbc93d0b800872097b8c0a78587748bf6", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0ec65d852c11fde3937629d10c6b24083b5737/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0ec65d852c11fde3937629d10c6b24083b5737/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=8b0ec65d852c11fde3937629d10c6b24083b5737", "patch": "@@ -1049,22 +1049,27 @@ package body Exp_Unst is\n                            --  from the (possibly) uplevel reference. We call\n                            --  Get_Referenced_Object to deal with prefixes that\n                            --  are object renamings (prefixes that are types\n-                           --  can be passed and will simply be returned).\n+                           --  can be passed and will simply be returned).  But\n+                           --  it's also legal to get the bounds from the type\n+                           --  of the prefix, so we have to handle both cases.\n \n-                           if Is_Constrained\n+                           declare\n+                              DT : Boolean := False;\n+\n+                           begin\n+                              if Is_Constrained\n                                 (Etype (Get_Referenced_Object (Prefix (N))))\n-                           then\n-                              declare\n-                                 DT : Boolean := False;\n-                              begin\n+                              then\n                                  Check_Static_Type\n                                    (Etype (Get_Referenced_Object (Prefix (N))),\n-                                    Empty,\n-                                    DT);\n-                              end;\n+                                    Empty, DT);\n+                              end if;\n \n-                              return OK;\n-                           end if;\n+                              if Is_Constrained (Etype (Prefix (N))) then\n+                                 Check_Static_Type\n+                                   (Etype (Prefix (N)), Empty, DT);\n+                              end if;\n+                           end;\n \n                         when others =>\n                            null;"}]}