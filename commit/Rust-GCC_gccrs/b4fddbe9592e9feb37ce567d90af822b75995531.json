{"sha": "b4fddbe9592e9feb37ce567d90af822b75995531", "node_id": "C_kwDOANBUbNoAKGI0ZmRkYmU5NTkyZTlmZWIzN2NlNTY3ZDkwYWY4MjJiNzU5OTU1MzE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-12T16:52:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-13T10:39:59Z"}, "message": "tree-optimization/108076 - if-conversion and forced labels\n\nWhen doing if-conversion we simply throw away labels without checking\nwhether they are possibly targets of non-local gotos or have their\naddress taken.  The following rectifies this and refuses to if-convert\nsuch loops.\n\n\tPR tree-optimization/108076\n\t* tree-if-conv.cc (if_convertible_loop_p_1): Reject blocks\n\twith non-local or forced labels that we later remove\n\tlabels from.\n\n\t* gcc.dg/torture/pr108076.c: New testcase.", "tree": {"sha": "5cbc84750383eabbde9eb34c8255518c28ff865f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cbc84750383eabbde9eb34c8255518c28ff865f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4fddbe9592e9feb37ce567d90af822b75995531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fddbe9592e9feb37ce567d90af822b75995531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fddbe9592e9feb37ce567d90af822b75995531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fddbe9592e9feb37ce567d90af822b75995531/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a43f7b1a73c8e3b9cefffe430274d0a3d6d3291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a43f7b1a73c8e3b9cefffe430274d0a3d6d3291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a43f7b1a73c8e3b9cefffe430274d0a3d6d3291"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "ebe2e51bee052fce50c0fbd1d7a14d406cd3a98f", "filename": "gcc/testsuite/gcc.dg/torture/pr108076.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fddbe9592e9feb37ce567d90af822b75995531/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108076.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fddbe9592e9feb37ce567d90af822b75995531/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108076.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108076.c?ref=b4fddbe9592e9feb37ce567d90af822b75995531", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do link } */\n+\n+static void *j;\n+int v, g;\n+__attribute__((__leaf__)) int atoi (const char *);\n+\n+int\n+main ()\n+{\n+  j = &&lab1;\n+  &&lab2;\n+  atoi (\"42\");\n+lab1:\n+lab2:\n+  if (v)\n+    goto *j;\n+}"}, {"sha": "0807201cefbdb0f9889a5e4cda56d9f2477c2071", "filename": "gcc/tree-if-conv.cc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fddbe9592e9feb37ce567d90af822b75995531/gcc%2Ftree-if-conv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fddbe9592e9feb37ce567d90af822b75995531/gcc%2Ftree-if-conv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.cc?ref=b4fddbe9592e9feb37ce567d90af822b75995531", "patch": "@@ -1433,10 +1433,20 @@ if_convertible_loop_p_1 (class loop *loop, vec<data_reference_p> *refs)\n       basic_block bb = ifc_bbs[i];\n       gimple_stmt_iterator gsi;\n \n+      bool may_have_nonlocal_labels\n+\t= bb_with_exit_edge_p (loop, bb) || bb == loop->latch;\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \tswitch (gimple_code (gsi_stmt (gsi)))\n \t  {\n \t  case GIMPLE_LABEL:\n+\t    if (!may_have_nonlocal_labels)\n+\t      {\n+\t\ttree label\n+\t\t  = gimple_label_label (as_a <glabel *> (gsi_stmt (gsi)));\n+\t\tif (DECL_NONLOCAL (label) || FORCED_LABEL (label))\n+\t\t  return false;\n+\t      }\n+\t    /* Fallthru.  */\n \t  case GIMPLE_ASSIGN:\n \t  case GIMPLE_CALL:\n \t  case GIMPLE_DEBUG:\n@@ -2627,8 +2637,8 @@ remove_conditions_and_labels (loop_p loop)\n       basic_block bb = ifc_bbs[i];\n \n       if (bb_with_exit_edge_p (loop, bb)\n-        || bb == loop->latch)\n-      continue;\n+\t  || bb == loop->latch)\n+\tcontinue;\n \n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); )\n \tswitch (gimple_code (gsi_stmt (gsi)))"}]}