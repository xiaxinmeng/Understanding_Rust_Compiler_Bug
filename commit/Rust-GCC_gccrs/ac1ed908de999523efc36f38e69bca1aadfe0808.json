{"sha": "ac1ed908de999523efc36f38e69bca1aadfe0808", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxZWQ5MDhkZTk5OTUyM2VmYzM2ZjM4ZTY5YmNhMWFhZGZlMDgwOA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2006-08-14T23:12:35Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2006-08-14T23:12:35Z"}, "message": "Imported GNU Classpath 0.92\n\n2006-08-14  Mark Wielaard  <mark@klomp.org>\n\n       Imported GNU Classpath 0.92\n       * HACKING: Add more importing hints. Update automake version\n       requirement.\n\n       * configure.ac (gconf-peer): New enable AC argument.\n       Add --disable-gconf-peer and --enable-default-preferences-peer\n       to classpath configure when gconf is disabled.\n       * scripts/makemake.tcl: Set gnu/java/util/prefs/gconf and\n       gnu/java/awt/dnd/peer/gtk to bc. Classify\n       gnu/java/security/Configuration.java as generated source file.\n\n       * gnu/java/lang/management/VMGarbageCollectorMXBeanImpl.java,\n       gnu/java/lang/management/VMMemoryPoolMXBeanImpl.java,\n       gnu/java/lang/management/VMClassLoadingMXBeanImpl.java,\n       gnu/java/lang/management/VMRuntimeMXBeanImpl.java,\n       gnu/java/lang/management/VMMemoryManagerMXBeanImpl.java,\n       gnu/java/lang/management/VMThreadMXBeanImpl.java,\n       gnu/java/lang/management/VMMemoryMXBeanImpl.java,\n       gnu/java/lang/management/VMCompilationMXBeanImpl.java: New VM stub\n       classes.\n       * java/lang/management/VMManagementFactory.java: Likewise.\n       * java/net/VMURLConnection.java: Likewise.\n       * gnu/java/nio/VMChannel.java: Likewise.\n\n       * java/lang/Thread.java (getState): Add stub implementation.\n       * java/lang/Class.java (isEnum): Likewise.\n       * java/lang/Class.h (isEnum): Likewise.\n\n       * gnu/awt/xlib/XToolkit.java (getClasspathTextLayoutPeer): Removed.\n\n       * javax/naming/spi/NamingManager.java: New override for StackWalker\n       functionality.\n\n       * configure, sources.am, Makefile.in, gcj/Makefile.in,\n       include/Makefile.in, testsuite/Makefile.in: Regenerated.\n\nFrom-SVN: r116139", "tree": {"sha": "97037d2c09c8384d80531f67ec36a01205df6bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97037d2c09c8384d80531f67ec36a01205df6bdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac1ed908de999523efc36f38e69bca1aadfe0808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1ed908de999523efc36f38e69bca1aadfe0808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1ed908de999523efc36f38e69bca1aadfe0808", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1ed908de999523efc36f38e69bca1aadfe0808/comments", "author": null, "committer": null, "parents": [{"sha": "abab460491408e05ea93fb85e1975296a87df504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abab460491408e05ea93fb85e1975296a87df504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abab460491408e05ea93fb85e1975296a87df504"}], "stats": {"total": 135242, "additions": 99394, "deletions": 35848}, "files": [{"sha": "fe6746d9267c0108c66271c0409bb4e90124f11d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,3 +1,41 @@\n+2006-08-14  Mark Wielaard  <mark@klomp.org>\n+\n+\tImported GNU Classpath 0.92\n+\t* HACKING: Add more importing hints. Update automake version\n+\trequirement.\n+\n+\t* configure.ac (gconf-peer): New enable AC argument.\n+\tAdd --disable-gconf-peer and --enable-default-preferences-peer\n+\tto classpath configure when gconf is disabled.\n+\t* scripts/makemake.tcl: Set gnu/java/util/prefs/gconf and\n+\tgnu/java/awt/dnd/peer/gtk to bc. Classify\n+\tgnu/java/security/Configuration.java as generated source file.\n+\n+\t* gnu/java/lang/management/VMGarbageCollectorMXBeanImpl.java,\n+\tgnu/java/lang/management/VMMemoryPoolMXBeanImpl.java,\n+\tgnu/java/lang/management/VMClassLoadingMXBeanImpl.java,\n+\tgnu/java/lang/management/VMRuntimeMXBeanImpl.java,\n+\tgnu/java/lang/management/VMMemoryManagerMXBeanImpl.java,\n+\tgnu/java/lang/management/VMThreadMXBeanImpl.java,\n+\tgnu/java/lang/management/VMMemoryMXBeanImpl.java,\n+\tgnu/java/lang/management/VMCompilationMXBeanImpl.java: New VM stub\n+\tclasses.\n+\t* java/lang/management/VMManagementFactory.java: Likewise.\n+\t* java/net/VMURLConnection.java: Likewise.\n+\t* gnu/java/nio/VMChannel.java: Likewise.\n+\n+\t* java/lang/Thread.java (getState): Add stub implementation.\n+\t* java/lang/Class.java (isEnum): Likewise.\n+\t* java/lang/Class.h (isEnum): Likewise.\n+\n+\t* gnu/awt/xlib/XToolkit.java (getClasspathTextLayoutPeer): Removed.\n+\n+\t* javax/naming/spi/NamingManager.java: New override for StackWalker\n+\tfunctionality.\n+\n+\t* configure, sources.am, Makefile.in, gcj/Makefile.in,\n+\tinclude/Makefile.in, testsuite/Makefile.in: Regenerated.\n+\n 2006-08-14  Gary Benson  <gbenson@redhat.com>\n \n \t* java/lang/Thread.java (accessControlState): New field."}, {"sha": "ec7ad418812d31938210035b87612de6b843b851", "filename": "libjava/HACKING", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2FHACKING", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2FHACKING", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FHACKING?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -17,18 +17,23 @@ To import a new release:\n - Check out a classpath snapshot or take a release tar.gz file.\n   I use 'cvs export' for this.  Make a tag to ensure future hackers\n   know exactly what revision was checked out; tags are of the form\n-  'libgcj-import-DATE'.\n+  'libgcj-import-DATE' (when using a tagged checkout do:\n+  - ./autogen.sh && ./configure && make dist\n+  to get a proper .tar.gz for importing below).\n - Get a svn checkout of\n   svn+ssh://gcc.gnu.org/svn/gcc/branches/CLASSPATH/libjava/classpath\n   this contains \"pure\" GNU Classpath inside the GCC tree.\n - Clean it up and get the files from a new version:\n-  - find classpath -type f | grep -v /\\.svn | grep -v /\\.cvs\n+  - find classpath -type f | grep -v /\\.svn | grep -v /\\.cvs | xargs rm\n   - tar zxf classpath-x.tar.gz\n   - cp -r classpath-x/* classpath\n - Add/Remove files:\n   - svn status classpath | grep ^\\! | cut -c8- | xargs svn remove\n   - svn status classpath | grep ^\\? | cut -c8- | xargs svn add\n-- If there are any empty directories now they can be removed.\n+- If there are any empty directories now they can be removed. You can find\n+  candidates (dirs with files removed) with:\n+  - for i in `svn status classpath | grep ^D | cut -c8-`; \\\n+      do ls -d `dirname $i`; done | uniq\n - Update vendor branch\n   - svn commit classpath\n - Note the new revision number (Xrev)\n@@ -43,7 +48,7 @@ To import a new release:\n     in the classpath/ChangeLog.gcj file.\n    (Don't forget to svn resolved files.)\n - Use auto* to create configure, Makefile.in, etc\n-  Make sure you have Automake 1.9.3 installed. Exactly that version!\n+  Make sure you have Automake 1.9.6 installed. Exactly that version!\n   You have to make sure to use the gcc libtool.m4 and gcc lt* scripts\n   cd .../classpath\n   cp ../../lt* ."}, {"sha": "d0c360f47679117fa22bd0fc9c1dcb400696862b", "filename": "libjava/Makefile.in", "status": "modified", "additions": 483, "deletions": 92, "changes": 575, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -149,12 +149,14 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/classpath/jdwp/transport.lo gnu/classpath/jdwp/util.lo \\\n \tgnu/gcj.lo gnu/gcj/convert.lo gnu/gcj/io.lo gnu/gcj/runtime.lo \\\n \tgnu/gcj/util.lo gnu/java/awt.lo gnu/java/awt/color.lo \\\n-\tgnu/java/awt/font.lo gnu/java/awt/font/opentype.lo \\\n+\tgnu/java/awt/dnd.lo gnu/java/awt/font.lo \\\n+\tgnu/java/awt/font/opentype.lo \\\n \tgnu/java/awt/font/opentype/truetype.lo gnu/java/awt/image.lo \\\n \tgnu/java/awt/java2d.lo gnu/java/awt/peer.lo \\\n \tgnu/java/awt/print.lo gnu/java/io.lo gnu/java/lang.lo \\\n-\tgnu/java/lang/reflect.lo gnu/java/locale.lo gnu/java/math.lo \\\n-\tgnu/java/net.lo gnu/java/net/local.lo \\\n+\tgnu/java/lang/management.lo gnu/java/lang/reflect.lo \\\n+\tgnu/java/locale.lo gnu/java/math.lo gnu/java/net.lo \\\n+\tgnu/java/net/loader.lo gnu/java/net/local.lo \\\n \tgnu/java/net/protocol/core.lo gnu/java/net/protocol/file.lo \\\n \tgnu/java/net/protocol/ftp.lo gnu/java/net/protocol/gcjlib.lo \\\n \tgnu/java/net/protocol/http.lo gnu/java/net/protocol/https.lo \\\n@@ -174,42 +176,46 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/java/security/util.lo gnu/java/security/x509.lo \\\n \tgnu/java/security/x509/ext.lo gnu/java/text.lo \\\n \tgnu/java/util.lo gnu/java/util/jar.lo gnu/java/util/prefs.lo \\\n-\tgnu/javax/crypto.lo gnu/javax/crypto/assembly.lo \\\n-\tgnu/javax/crypto/cipher.lo gnu/javax/crypto/jce.lo \\\n-\tgnu/javax/crypto/jce/cipher.lo gnu/javax/crypto/jce/key.lo \\\n-\tgnu/javax/crypto/jce/keyring.lo gnu/javax/crypto/jce/mac.lo \\\n-\tgnu/javax/crypto/jce/params.lo gnu/javax/crypto/jce/prng.lo \\\n-\tgnu/javax/crypto/jce/sig.lo gnu/javax/crypto/jce/spec.lo \\\n-\tgnu/javax/crypto/key.lo gnu/javax/crypto/key/dh.lo \\\n-\tgnu/javax/crypto/key/srp6.lo gnu/javax/crypto/keyring.lo \\\n+\tgnu/java/util/regex.lo gnu/javax/crypto.lo \\\n+\tgnu/javax/crypto/assembly.lo gnu/javax/crypto/cipher.lo \\\n+\tgnu/javax/crypto/jce.lo gnu/javax/crypto/jce/cipher.lo \\\n+\tgnu/javax/crypto/jce/key.lo gnu/javax/crypto/jce/keyring.lo \\\n+\tgnu/javax/crypto/jce/mac.lo gnu/javax/crypto/jce/params.lo \\\n+\tgnu/javax/crypto/jce/prng.lo gnu/javax/crypto/jce/sig.lo \\\n+\tgnu/javax/crypto/jce/spec.lo gnu/javax/crypto/key.lo \\\n+\tgnu/javax/crypto/key/dh.lo gnu/javax/crypto/key/srp6.lo \\\n+\tgnu/javax/crypto/keyring.lo gnu/javax/crypto/kwa.lo \\\n \tgnu/javax/crypto/mac.lo gnu/javax/crypto/mode.lo \\\n \tgnu/javax/crypto/pad.lo gnu/javax/crypto/prng.lo \\\n \tgnu/javax/crypto/sasl.lo gnu/javax/crypto/sasl/anonymous.lo \\\n \tgnu/javax/crypto/sasl/crammd5.lo \\\n \tgnu/javax/crypto/sasl/plain.lo gnu/javax/crypto/sasl/srp.lo \\\n-\tgnu/javax/imageio/bmp.lo gnu/javax/net/ssl.lo \\\n+\tgnu/javax/imageio.lo gnu/javax/imageio/bmp.lo \\\n+\tgnu/javax/imageio/gif.lo gnu/javax/imageio/jpeg.lo \\\n+\tgnu/javax/imageio/png.lo gnu/javax/net/ssl.lo \\\n \tgnu/javax/net/ssl/provider.lo gnu/javax/print.lo \\\n \tgnu/javax/print/ipp.lo gnu/javax/print/ipp/attribute.lo \\\n \tgnu/javax/print/ipp/attribute/defaults.lo \\\n \tgnu/javax/print/ipp/attribute/job.lo \\\n \tgnu/javax/print/ipp/attribute/printer.lo \\\n \tgnu/javax/print/ipp/attribute/supported.lo \\\n \tgnu/javax/security/auth.lo gnu/javax/security/auth/callback.lo \\\n-\tgnu/javax/security/auth/login.lo gnu/javax/swing/plaf/gnu.lo \\\n+\tgnu/javax/security/auth/login.lo gnu/javax/sound/sampled/AU.lo \\\n+\tgnu/javax/sound/sampled/WAV.lo gnu/javax/swing/plaf/gnu.lo \\\n \tgnu/javax/swing/plaf/metal.lo gnu/javax/swing/text/html.lo \\\n \tgnu/javax/swing/text/html/parser.lo \\\n \tgnu/javax/swing/text/html/parser/models.lo \\\n \tgnu/javax/swing/text/html/parser/support.lo \\\n \tgnu/javax/swing/text/html/parser/support/low.lo \\\n-\tgnu/javax/swing/tree.lo gnu/regexp.lo java/applet.lo \\\n-\tjava/awt.lo java/awt/color.lo java/awt/datatransfer.lo \\\n-\tjava/awt/dnd.lo java/awt/dnd/peer.lo java/awt/event.lo \\\n-\tjava/awt/font.lo java/awt/geom.lo java/awt/im.lo \\\n-\tjava/awt/im/spi.lo java/awt/image.lo \\\n-\tjava/awt/image/renderable.lo java/awt/peer.lo \\\n-\tjava/awt/print.lo java/beans.lo java/beans/beancontext.lo \\\n-\tjava/io.lo java/lang.lo java/lang/annotation.lo \\\n-\tjava/lang/instrument.lo java/lang/ref.lo java/lang/reflect.lo \\\n+\tgnu/javax/swing/tree.lo java/applet.lo java/awt.lo \\\n+\tjava/awt/color.lo java/awt/datatransfer.lo java/awt/dnd.lo \\\n+\tjava/awt/dnd/peer.lo java/awt/event.lo java/awt/font.lo \\\n+\tjava/awt/geom.lo java/awt/im.lo java/awt/im/spi.lo \\\n+\tjava/awt/image.lo java/awt/image/renderable.lo \\\n+\tjava/awt/peer.lo java/awt/print.lo java/beans.lo \\\n+\tjava/beans/beancontext.lo java/io.lo java/lang.lo \\\n+\tjava/lang/annotation.lo java/lang/instrument.lo \\\n+\tjava/lang/management.lo java/lang/ref.lo java/lang/reflect.lo \\\n \tjava/math.lo java/net.lo java/nio.lo java/nio/channels.lo \\\n \tjava/nio/channels/spi.lo java/nio/charset.lo \\\n \tjava/nio/charset/spi.lo java/rmi.lo java/rmi/activation.lo \\\n@@ -220,7 +226,8 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjava/util/logging.lo java/util/prefs.lo java/util/regex.lo \\\n \tjava/util/zip.lo javax/accessibility.lo javax/crypto.lo \\\n \tjavax/crypto/interfaces.lo javax/crypto/spec.lo \\\n-\tjavax/management.lo javax/naming.lo javax/naming/directory.lo \\\n+\tjavax/management.lo javax/management/openmbean.lo \\\n+\tjavax/naming.lo javax/naming/directory.lo \\\n \tjavax/naming/event.lo javax/naming/ldap.lo javax/naming/spi.lo \\\n \tjavax/net.lo javax/net/ssl.lo javax/print.lo \\\n \tjavax/print/attribute.lo javax/print/attribute/standard.lo \\\n@@ -241,11 +248,13 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/text/rtf.lo javax/swing/tree.lo \\\n \tjavax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n-am__DEPENDENCIES_2 = gnu-CORBA.lo gnu-java-awt-peer-gtk.lo \\\n-\tgnu-java-awt-peer-qt.lo gnu-java-awt-peer-swing.lo \\\n-\tgnu-java-beans.lo gnu-javax-rmi.lo gnu-javax-sound-midi.lo \\\n-\tgnu-xml.lo javax-imageio.lo javax-rmi.lo javax-xml.lo \\\n-\torg-omg.lo org-relaxng.lo org-w3c.lo org-xml.lo\n+am__DEPENDENCIES_2 = gnu-CORBA.lo gnu-java-awt-dnd-peer-gtk.lo \\\n+\tgnu-java-awt-peer-gtk.lo gnu-java-awt-peer-qt.lo \\\n+\tgnu-java-awt-peer-swing.lo gnu-java-beans.lo \\\n+\tgnu-java-util-prefs-gconf.lo gnu-javax-rmi.lo \\\n+\tgnu-javax-sound-midi.lo gnu-xml.lo javax-imageio.lo \\\n+\tjavax-rmi.lo javax-xml.lo org-omg.lo org-relaxng.lo org-w3c.lo \\\n+\torg-xml.lo\n am__DEPENDENCIES_3 = $(patsubst classpath/resource/%,%,$(addsuffix \\\n \t.lo,$(property_files)))\n am__DEPENDENCIES_4 =\n@@ -1019,7 +1028,6 @@ gnu/awt/xlib/XToolkit.java\n \n gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n gnu_classpath_source_files = \\\n-classpath/gnu/classpath/ByteArray.java \\\n classpath/gnu/classpath/Configuration.java \\\n classpath/gnu/classpath/NotImplementedException.java \\\n classpath/gnu/classpath/Pointer.java \\\n@@ -1034,7 +1042,11 @@ gnu_classpath_debug_source_files = \\\n classpath/gnu/classpath/debug/Component.java \\\n classpath/gnu/classpath/debug/PreciseFilter.java \\\n classpath/gnu/classpath/debug/Simple1LineFormatter.java \\\n-classpath/gnu/classpath/debug/SystemLogger.java\n+classpath/gnu/classpath/debug/SystemLogger.java \\\n+classpath/gnu/classpath/debug/TeeInputStream.java \\\n+classpath/gnu/classpath/debug/TeeOutputStream.java \\\n+classpath/gnu/classpath/debug/TeeReader.java \\\n+classpath/gnu/classpath/debug/TeeWriter.java\n \n gnu_classpath_debug_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_debug_source_files)))\n gnu_classpath_jdwp_source_files = \\\n@@ -1049,9 +1061,14 @@ gnu_classpath_jdwp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h\n gnu_classpath_jdwp_event_source_files = \\\n classpath/gnu/classpath/jdwp/event/BreakpointEvent.java \\\n classpath/gnu/classpath/jdwp/event/ClassPrepareEvent.java \\\n+classpath/gnu/classpath/jdwp/event/ClassUnloadEvent.java \\\n classpath/gnu/classpath/jdwp/event/Event.java \\\n classpath/gnu/classpath/jdwp/event/EventManager.java \\\n classpath/gnu/classpath/jdwp/event/EventRequest.java \\\n+classpath/gnu/classpath/jdwp/event/ExceptionEvent.java \\\n+classpath/gnu/classpath/jdwp/event/MethodEntryEvent.java \\\n+classpath/gnu/classpath/jdwp/event/MethodExitEvent.java \\\n+classpath/gnu/classpath/jdwp/event/SingleStepEvent.java \\\n classpath/gnu/classpath/jdwp/event/ThreadEndEvent.java \\\n classpath/gnu/classpath/jdwp/event/ThreadStartEvent.java \\\n classpath/gnu/classpath/jdwp/event/VmDeathEvent.java \\\n@@ -1260,6 +1277,15 @@ classpath/gnu/java/awt/color/TagEntry.java \\\n classpath/gnu/java/awt/color/ToneReproductionCurve.java\n \n gnu_java_awt_color_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_color_source_files)))\n+gnu_java_awt_dnd_source_files = \\\n+classpath/gnu/java/awt/dnd/GtkMouseDragGestureRecognizer.java\n+\n+gnu_java_awt_dnd_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_dnd_source_files)))\n+gnu_java_awt_dnd_peer_gtk_source_files = \\\n+classpath/gnu/java/awt/dnd/peer/gtk/GtkDragSourceContextPeer.java \\\n+classpath/gnu/java/awt/dnd/peer/gtk/GtkDropTargetContextPeer.java \\\n+classpath/gnu/java/awt/dnd/peer/gtk/GtkDropTargetPeer.java\n+\n gnu_java_awt_font_source_files = \\\n classpath/gnu/java/awt/font/FontDelegate.java \\\n classpath/gnu/java/awt/font/FontFactory.java \\\n@@ -1308,7 +1334,6 @@ classpath/gnu/java/awt/java2d/TexturePaintContext.java\n gnu_java_awt_java2d_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_java2d_source_files)))\n gnu_java_awt_peer_source_files = \\\n classpath/gnu/java/awt/peer/ClasspathFontPeer.java \\\n-classpath/gnu/java/awt/peer/ClasspathTextLayoutPeer.java \\\n classpath/gnu/java/awt/peer/EmbeddedWindowPeer.java \\\n classpath/gnu/java/awt/peer/GLightweightPeer.java\n \n@@ -1330,10 +1355,8 @@ classpath/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n classpath/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n classpath/gnu/java/awt/peer/gtk/GdkRobotPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java \\\n-classpath/gnu/java/awt/peer/gtk/GdkTextLayout.java \\\n classpath/gnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n-classpath/gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkChoicePeer.java \\\n@@ -1355,6 +1378,7 @@ classpath/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkMenuPeer.java \\\n+classpath/gnu/java/awt/peer/gtk/GtkMouseInfoPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkPanelPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkPopupMenuPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkScrollPanePeer.java \\\n@@ -1537,6 +1561,27 @@ gnu/java/lang/MainThread.java \\\n gnu/java/lang/VMInstrumentationImpl.java\n \n gnu_java_lang_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_lang_source_files)))\n+gnu_java_lang_management_source_files = \\\n+classpath/gnu/java/lang/management/BeanImpl.java \\\n+classpath/gnu/java/lang/management/ClassLoadingMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/CompilationMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/GarbageCollectorMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/MemoryMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/MemoryManagerMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/MemoryPoolMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/OperatingSystemMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/RuntimeMXBeanImpl.java \\\n+classpath/gnu/java/lang/management/ThreadMXBeanImpl.java \\\n+gnu/java/lang/management/VMClassLoadingMXBeanImpl.java \\\n+gnu/java/lang/management/VMCompilationMXBeanImpl.java \\\n+gnu/java/lang/management/VMGarbageCollectorMXBeanImpl.java \\\n+gnu/java/lang/management/VMMemoryMXBeanImpl.java \\\n+gnu/java/lang/management/VMMemoryManagerMXBeanImpl.java \\\n+gnu/java/lang/management/VMMemoryPoolMXBeanImpl.java \\\n+gnu/java/lang/management/VMRuntimeMXBeanImpl.java \\\n+gnu/java/lang/management/VMThreadMXBeanImpl.java\n+\n+gnu_java_lang_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_lang_management_source_files)))\n gnu_java_lang_reflect_source_files = \\\n classpath/gnu/java/lang/reflect/ClassSignatureParser.java \\\n classpath/gnu/java/lang/reflect/FieldSignatureParser.java \\\n@@ -1709,6 +1754,18 @@ gnu/java/net/PlainSocketImpl.java \\\n classpath/gnu/java/net/URLParseError.java\n \n gnu_java_net_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_net_source_files)))\n+gnu_java_net_loader_source_files = \\\n+classpath/gnu/java/net/loader/FileResource.java \\\n+classpath/gnu/java/net/loader/FileURLLoader.java \\\n+classpath/gnu/java/net/loader/JarURLLoader.java \\\n+classpath/gnu/java/net/loader/JarURLResource.java \\\n+classpath/gnu/java/net/loader/RemoteResource.java \\\n+classpath/gnu/java/net/loader/RemoteURLLoader.java \\\n+classpath/gnu/java/net/loader/Resource.java \\\n+classpath/gnu/java/net/loader/URLLoader.java \\\n+classpath/gnu/java/net/loader/URLStreamHandlerCache.java\n+\n+gnu_java_net_loader_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_net_loader_source_files)))\n gnu_java_net_local_source_files = \\\n classpath/gnu/java/net/local/LocalServerSocket.java \\\n classpath/gnu/java/net/local/LocalSocket.java \\\n@@ -1802,6 +1859,8 @@ gnu/java/nio/ServerSocketChannelImpl.java \\\n gnu/java/nio/ServerSocketChannelSelectionKey.java \\\n gnu/java/nio/SocketChannelImpl.java \\\n gnu/java/nio/SocketChannelSelectionKey.java \\\n+classpath/gnu/java/nio/SocketChannelSelectionKeyImpl.java \\\n+gnu/java/nio/VMChannel.java \\\n gnu/java/nio/VMPipe.java \\\n gnu/java/nio/VMSelector.java\n \n@@ -1933,6 +1992,7 @@ classpath/gnu/java/rmi/server/UnicastServerRef.java\n \n gnu_java_rmi_server_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_rmi_server_source_files)))\n gnu_java_security_source_files = \\\n+classpath/gnu/java/security/Configuration.java \\\n classpath/gnu/java/security/Engine.java \\\n classpath/gnu/java/security/OID.java \\\n classpath/gnu/java/security/PolicyFile.java \\\n@@ -2115,12 +2175,13 @@ classpath/gnu/java/security/sig/rsa/RSASignatureFactory.java\n gnu_java_security_sig_rsa_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_sig_rsa_source_files)))\n gnu_java_security_util_source_files = \\\n classpath/gnu/java/security/util/Base64.java \\\n+classpath/gnu/java/security/util/ByteArray.java \\\n classpath/gnu/java/security/util/DerUtil.java \\\n classpath/gnu/java/security/util/ExpirableObject.java \\\n classpath/gnu/java/security/util/FormatUtil.java \\\n+classpath/gnu/java/security/util/IntegerUtil.java \\\n classpath/gnu/java/security/util/PRNG.java \\\n classpath/gnu/java/security/util/Prime.java \\\n-classpath/gnu/java/security/util/Prime2.java \\\n classpath/gnu/java/security/util/Sequence.java \\\n classpath/gnu/java/security/util/SimpleList.java \\\n classpath/gnu/java/security/util/Util.java\n@@ -2183,12 +2244,51 @@ gnu_java_util_prefs_source_files = \\\n classpath/gnu/java/util/prefs/EventDispatcher.java \\\n classpath/gnu/java/util/prefs/FileBasedFactory.java \\\n classpath/gnu/java/util/prefs/FileBasedPreferences.java \\\n+classpath/gnu/java/util/prefs/GConfBasedFactory.java \\\n+classpath/gnu/java/util/prefs/GConfBasedPreferences.java \\\n classpath/gnu/java/util/prefs/MemoryBasedFactory.java \\\n classpath/gnu/java/util/prefs/MemoryBasedPreferences.java \\\n classpath/gnu/java/util/prefs/NodeReader.java \\\n classpath/gnu/java/util/prefs/NodeWriter.java\n \n gnu_java_util_prefs_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_prefs_source_files)))\n+gnu_java_util_prefs_gconf_source_files = \\\n+classpath/gnu/java/util/prefs/gconf/GConfNativePeer.java\n+\n+gnu_java_util_regex_source_files = \\\n+classpath/gnu/java/util/regex/BacktrackStack.java \\\n+classpath/gnu/java/util/regex/CharIndexed.java \\\n+classpath/gnu/java/util/regex/CharIndexedCharArray.java \\\n+classpath/gnu/java/util/regex/CharIndexedCharSequence.java \\\n+classpath/gnu/java/util/regex/CharIndexedInputStream.java \\\n+classpath/gnu/java/util/regex/CharIndexedString.java \\\n+classpath/gnu/java/util/regex/CharIndexedStringBuffer.java \\\n+classpath/gnu/java/util/regex/RE.java \\\n+classpath/gnu/java/util/regex/REException.java \\\n+classpath/gnu/java/util/regex/REFilterInputStream.java \\\n+classpath/gnu/java/util/regex/REMatch.java \\\n+classpath/gnu/java/util/regex/REMatchEnumeration.java \\\n+classpath/gnu/java/util/regex/RESyntax.java \\\n+classpath/gnu/java/util/regex/REToken.java \\\n+classpath/gnu/java/util/regex/RETokenAny.java \\\n+classpath/gnu/java/util/regex/RETokenBackRef.java \\\n+classpath/gnu/java/util/regex/RETokenChar.java \\\n+classpath/gnu/java/util/regex/RETokenEnd.java \\\n+classpath/gnu/java/util/regex/RETokenEndOfPreviousMatch.java \\\n+classpath/gnu/java/util/regex/RETokenEndSub.java \\\n+classpath/gnu/java/util/regex/RETokenIndependent.java \\\n+classpath/gnu/java/util/regex/RETokenLookAhead.java \\\n+classpath/gnu/java/util/regex/RETokenLookBehind.java \\\n+classpath/gnu/java/util/regex/RETokenNamedProperty.java \\\n+classpath/gnu/java/util/regex/RETokenOneOf.java \\\n+classpath/gnu/java/util/regex/RETokenPOSIX.java \\\n+classpath/gnu/java/util/regex/RETokenRange.java \\\n+classpath/gnu/java/util/regex/RETokenRepeated.java \\\n+classpath/gnu/java/util/regex/RETokenStart.java \\\n+classpath/gnu/java/util/regex/RETokenWordBoundary.java \\\n+classpath/gnu/java/util/regex/UncheckedRE.java\n+\n+gnu_java_util_regex_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_regex_source_files)))\n gnu_javax_crypto_source_files = \\\n classpath/gnu/javax/crypto/RSACipherImpl.java\n \n@@ -2236,19 +2336,25 @@ classpath/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory.java\n \n gnu_javax_crypto_jce_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_source_files)))\n gnu_javax_crypto_jce_cipher_source_files = \\\n+classpath/gnu/javax/crypto/jce/cipher/AES128KeyWrapSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/AES192KeyWrapSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/AES256KeyWrapSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/AESKeyWrapSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/AESSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/ARCFourSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/AnubisSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/BlowfishSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/Cast5Spi.java \\\n classpath/gnu/javax/crypto/jce/cipher/CipherAdapter.java \\\n classpath/gnu/javax/crypto/jce/cipher/DESSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/KeyWrappingAlgorithmAdapter.java \\\n classpath/gnu/javax/crypto/jce/cipher/KhazadSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/NullCipherSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/PBES2.java \\\n classpath/gnu/javax/crypto/jce/cipher/RijndaelSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/SerpentSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/SquareSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/TripleDESKeyWrapSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/TripleDESSpi.java \\\n classpath/gnu/javax/crypto/jce/cipher/TwofishSpi.java\n \n@@ -2410,6 +2516,15 @@ classpath/gnu/javax/crypto/keyring/Properties.java \\\n classpath/gnu/javax/crypto/keyring/PublicKeyEntry.java\n \n gnu_javax_crypto_keyring_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_keyring_source_files)))\n+gnu_javax_crypto_kwa_source_files = \\\n+classpath/gnu/javax/crypto/kwa/AESKeyWrap.java \\\n+classpath/gnu/javax/crypto/kwa/BaseKeyWrappingAlgorithm.java \\\n+classpath/gnu/javax/crypto/kwa/IKeyWrappingAlgorithm.java \\\n+classpath/gnu/javax/crypto/kwa/KeyUnwrappingException.java \\\n+classpath/gnu/javax/crypto/kwa/KeyWrappingAlgorithmFactory.java \\\n+classpath/gnu/javax/crypto/kwa/TripleDESKeyWrap.java\n+\n+gnu_javax_crypto_kwa_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_kwa_source_files)))\n gnu_javax_crypto_mac_source_files = \\\n classpath/gnu/javax/crypto/mac/BaseMac.java \\\n classpath/gnu/javax/crypto/mac/HMac.java \\\n@@ -2441,6 +2556,7 @@ gnu_javax_crypto_mode_header_files = $(patsubst classpath/%,%,$(patsubst %.java,\n gnu_javax_crypto_pad_source_files = \\\n classpath/gnu/javax/crypto/pad/BasePad.java \\\n classpath/gnu/javax/crypto/pad/IPad.java \\\n+classpath/gnu/javax/crypto/pad/ISO10126.java \\\n classpath/gnu/javax/crypto/pad/PKCS1_V1_5.java \\\n classpath/gnu/javax/crypto/pad/PKCS7.java \\\n classpath/gnu/javax/crypto/pad/PadFactory.java \\\n@@ -2523,6 +2639,10 @@ classpath/gnu/javax/crypto/sasl/srp/ServerStore.java \\\n classpath/gnu/javax/crypto/sasl/srp/StoreEntry.java\n \n gnu_javax_crypto_sasl_srp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_sasl_srp_source_files)))\n+gnu_javax_imageio_source_files = \\\n+classpath/gnu/javax/imageio/IIOInputStream.java\n+\n+gnu_javax_imageio_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_source_files)))\n gnu_javax_imageio_bmp_source_files = \\\n classpath/gnu/javax/imageio/bmp/BMPDecoder.java \\\n classpath/gnu/javax/imageio/bmp/BMPEncoder.java \\\n@@ -2551,6 +2671,47 @@ classpath/gnu/javax/imageio/bmp/EncodeRLE4.java \\\n classpath/gnu/javax/imageio/bmp/EncodeRLE8.java\n \n gnu_javax_imageio_bmp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_bmp_source_files)))\n+gnu_javax_imageio_gif_source_files = \\\n+classpath/gnu/javax/imageio/gif/GIFFile.java \\\n+classpath/gnu/javax/imageio/gif/GIFImageReader.java \\\n+classpath/gnu/javax/imageio/gif/GIFImageReaderSpi.java\n+\n+gnu_javax_imageio_gif_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_gif_source_files)))\n+gnu_javax_imageio_jpeg_source_files = \\\n+classpath/gnu/javax/imageio/jpeg/DCT.java \\\n+classpath/gnu/javax/imageio/jpeg/HuffmanTable.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGComponent.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGDecoder.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGException.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGFrame.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGImageInputStream.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGImageReader.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGImageReaderSpi.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGMarker.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGMarkerFoundException.java \\\n+classpath/gnu/javax/imageio/jpeg/JPEGScan.java \\\n+classpath/gnu/javax/imageio/jpeg/YCbCr_ColorSpace.java \\\n+classpath/gnu/javax/imageio/jpeg/ZigZag.java\n+\n+gnu_javax_imageio_jpeg_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_jpeg_source_files)))\n+gnu_javax_imageio_png_source_files = \\\n+classpath/gnu/javax/imageio/png/PNGChunk.java \\\n+classpath/gnu/javax/imageio/png/PNGData.java \\\n+classpath/gnu/javax/imageio/png/PNGDecoder.java \\\n+classpath/gnu/javax/imageio/png/PNGEncoder.java \\\n+classpath/gnu/javax/imageio/png/PNGException.java \\\n+classpath/gnu/javax/imageio/png/PNGFile.java \\\n+classpath/gnu/javax/imageio/png/PNGFilter.java \\\n+classpath/gnu/javax/imageio/png/PNGGamma.java \\\n+classpath/gnu/javax/imageio/png/PNGHeader.java \\\n+classpath/gnu/javax/imageio/png/PNGICCProfile.java \\\n+classpath/gnu/javax/imageio/png/PNGImageReader.java \\\n+classpath/gnu/javax/imageio/png/PNGImageReaderSpi.java \\\n+classpath/gnu/javax/imageio/png/PNGPalette.java \\\n+classpath/gnu/javax/imageio/png/PNGPhys.java \\\n+classpath/gnu/javax/imageio/png/PNGTime.java\n+\n+gnu_javax_imageio_png_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_png_source_files)))\n gnu_javax_net_ssl_source_files = \\\n classpath/gnu/javax/net/ssl/Base64.java \\\n classpath/gnu/javax/net/ssl/EntropySource.java \\\n@@ -2763,8 +2924,21 @@ classpath/gnu/javax/sound/midi/alsa/AlsaMidiSequencerDevice.java \\\n classpath/gnu/javax/sound/midi/alsa/AlsaOutputPortDevice.java \\\n classpath/gnu/javax/sound/midi/alsa/AlsaPortDevice.java \\\n classpath/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.java \\\n-classpath/gnu/javax/sound/midi/dssi/DSSISynthesizer.java\n+classpath/gnu/javax/sound/midi/dssi/DSSISynthesizer.java \\\n+classpath/gnu/javax/sound/midi/file/ExtendedMidiFileFormat.java \\\n+classpath/gnu/javax/sound/midi/file/MidiDataInputStream.java \\\n+classpath/gnu/javax/sound/midi/file/MidiDataOutputStream.java \\\n+classpath/gnu/javax/sound/midi/file/MidiFileReader.java \\\n+classpath/gnu/javax/sound/midi/file/MidiFileWriter.java\n \n+gnu_javax_sound_sampled_AU_source_files = \\\n+classpath/gnu/javax/sound/sampled/AU/AUReader.java\n+\n+gnu_javax_sound_sampled_AU_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_sound_sampled_AU_source_files)))\n+gnu_javax_sound_sampled_WAV_source_files = \\\n+classpath/gnu/javax/sound/sampled/WAV/WAVReader.java\n+\n+gnu_javax_sound_sampled_WAV_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_sound_sampled_WAV_source_files)))\n gnu_javax_swing_plaf_gnu_source_files = \\\n classpath/gnu/javax/swing/plaf/gnu/GNULookAndFeel.java\n \n@@ -2780,7 +2954,9 @@ classpath/gnu/javax/swing/text/html/ImageViewIconFactory.java\n \n gnu_javax_swing_text_html_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_swing_text_html_source_files)))\n gnu_javax_swing_text_html_parser_source_files = \\\n+classpath/gnu/javax/swing/text/html/parser/GnuParserDelegator.java \\\n classpath/gnu/javax/swing/text/html/parser/HTML_401F.java \\\n+classpath/gnu/javax/swing/text/html/parser/HTML_401Swing.java \\\n classpath/gnu/javax/swing/text/html/parser/SmallHtmlAttributeSet.java \\\n classpath/gnu/javax/swing/text/html/parser/gnuDTD.java \\\n classpath/gnu/javax/swing/text/html/parser/htmlAttributeSet.java \\\n@@ -2819,40 +2995,6 @@ gnu_javax_swing_tree_source_files = \\\n classpath/gnu/javax/swing/tree/GnuPath.java\n \n gnu_javax_swing_tree_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_swing_tree_source_files)))\n-gnu_regexp_source_files = \\\n-classpath/gnu/regexp/BacktrackStack.java \\\n-classpath/gnu/regexp/CharIndexed.java \\\n-classpath/gnu/regexp/CharIndexedCharArray.java \\\n-classpath/gnu/regexp/CharIndexedCharSequence.java \\\n-classpath/gnu/regexp/CharIndexedInputStream.java \\\n-classpath/gnu/regexp/CharIndexedString.java \\\n-classpath/gnu/regexp/CharIndexedStringBuffer.java \\\n-classpath/gnu/regexp/RE.java \\\n-classpath/gnu/regexp/REException.java \\\n-classpath/gnu/regexp/REFilterInputStream.java \\\n-classpath/gnu/regexp/REMatch.java \\\n-classpath/gnu/regexp/REMatchEnumeration.java \\\n-classpath/gnu/regexp/RESyntax.java \\\n-classpath/gnu/regexp/REToken.java \\\n-classpath/gnu/regexp/RETokenAny.java \\\n-classpath/gnu/regexp/RETokenBackRef.java \\\n-classpath/gnu/regexp/RETokenChar.java \\\n-classpath/gnu/regexp/RETokenEnd.java \\\n-classpath/gnu/regexp/RETokenEndOfPreviousMatch.java \\\n-classpath/gnu/regexp/RETokenEndSub.java \\\n-classpath/gnu/regexp/RETokenIndependent.java \\\n-classpath/gnu/regexp/RETokenLookAhead.java \\\n-classpath/gnu/regexp/RETokenLookBehind.java \\\n-classpath/gnu/regexp/RETokenNamedProperty.java \\\n-classpath/gnu/regexp/RETokenOneOf.java \\\n-classpath/gnu/regexp/RETokenPOSIX.java \\\n-classpath/gnu/regexp/RETokenRange.java \\\n-classpath/gnu/regexp/RETokenRepeated.java \\\n-classpath/gnu/regexp/RETokenStart.java \\\n-classpath/gnu/regexp/RETokenWordBoundary.java \\\n-classpath/gnu/regexp/UncheckedRE.java\n-\n-gnu_regexp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_regexp_source_files)))\n gnu_xml_source_files = \\\n classpath/gnu/xml/aelfred2/JAXPFactory.java \\\n classpath/gnu/xml/aelfred2/SAXDriver.java \\\n@@ -3354,11 +3496,13 @@ classpath/java/awt/MenuComponent.java \\\n classpath/java/awt/MenuContainer.java \\\n classpath/java/awt/MenuItem.java \\\n classpath/java/awt/MenuShortcut.java \\\n+classpath/java/awt/MouseInfo.java \\\n classpath/java/awt/PageAttributes.java \\\n classpath/java/awt/Paint.java \\\n classpath/java/awt/PaintContext.java \\\n classpath/java/awt/Panel.java \\\n classpath/java/awt/Point.java \\\n+classpath/java/awt/PointerInfo.java \\\n classpath/java/awt/Polygon.java \\\n classpath/java/awt/PopupMenu.java \\\n classpath/java/awt/PrintGraphics.java \\\n@@ -3621,6 +3765,7 @@ classpath/java/awt/peer/MenuBarPeer.java \\\n classpath/java/awt/peer/MenuComponentPeer.java \\\n classpath/java/awt/peer/MenuItemPeer.java \\\n classpath/java/awt/peer/MenuPeer.java \\\n+classpath/java/awt/peer/MouseInfoPeer.java \\\n classpath/java/awt/peer/PanelPeer.java \\\n classpath/java/awt/peer/PopupMenuPeer.java \\\n classpath/java/awt/peer/RobotPeer.java \\\n@@ -3886,7 +4031,8 @@ java_lang_header_files = $(filter-out java/lang/Object.h java/lang/Class.h,$(pat\n java_lang_annotation_source_files = \\\n classpath/java/lang/annotation/Annotation.java \\\n classpath/java/lang/annotation/AnnotationFormatError.java \\\n-classpath/java/lang/annotation/AnnotationTypeMismatchException.java\n+classpath/java/lang/annotation/AnnotationTypeMismatchException.java \\\n+classpath/java/lang/annotation/IncompleteAnnotationException.java\n \n java_lang_annotation_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_annotation_source_files)))\n java_lang_instrument_source_files = \\\n@@ -3897,6 +4043,24 @@ classpath/java/lang/instrument/Instrumentation.java \\\n classpath/java/lang/instrument/UnmodifiableClassException.java\n \n java_lang_instrument_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_instrument_source_files)))\n+java_lang_management_source_files = \\\n+classpath/java/lang/management/ClassLoadingMXBean.java \\\n+classpath/java/lang/management/CompilationMXBean.java \\\n+classpath/java/lang/management/GarbageCollectorMXBean.java \\\n+classpath/java/lang/management/ManagementFactory.java \\\n+classpath/java/lang/management/ManagementPermission.java \\\n+classpath/java/lang/management/MemoryMXBean.java \\\n+classpath/java/lang/management/MemoryManagerMXBean.java \\\n+classpath/java/lang/management/MemoryNotificationInfo.java \\\n+classpath/java/lang/management/MemoryPoolMXBean.java \\\n+classpath/java/lang/management/MemoryUsage.java \\\n+classpath/java/lang/management/OperatingSystemMXBean.java \\\n+classpath/java/lang/management/RuntimeMXBean.java \\\n+classpath/java/lang/management/ThreadInfo.java \\\n+classpath/java/lang/management/ThreadMXBean.java \\\n+java/lang/management/VMManagementFactory.java\n+\n+java_lang_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_management_source_files)))\n java_lang_ref_source_files = \\\n classpath/java/lang/ref/PhantomReference.java \\\n java/lang/ref/Reference.java \\\n@@ -3932,7 +4096,8 @@ classpath/java/lang/reflect/WildcardType.java\n java_lang_reflect_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_reflect_source_files)))\n java_math_source_files = \\\n classpath/java/math/BigDecimal.java \\\n-classpath/java/math/BigInteger.java\n+classpath/java/math/BigInteger.java \\\n+classpath/java/math/MathContext.java\n \n java_math_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_math_source_files)))\n java_net_source_files = \\\n@@ -3981,7 +4146,8 @@ classpath/java/net/URLStreamHandler.java \\\n classpath/java/net/URLStreamHandlerFactory.java \\\n classpath/java/net/UnknownHostException.java \\\n classpath/java/net/UnknownServiceException.java \\\n-java/net/VMNetworkInterface.java\n+java/net/VMNetworkInterface.java \\\n+java/net/VMURLConnection.java\n \n java_net_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_net_source_files)))\n java_nio_source_files = \\\n@@ -4404,16 +4570,29 @@ classpath/java/util/ConcurrentModificationException.java \\\n java/util/Currency.java \\\n classpath/java/util/Date.java \\\n classpath/java/util/Dictionary.java \\\n+classpath/java/util/DuplicateFormatFlagsException.java \\\n classpath/java/util/EmptyStackException.java \\\n classpath/java/util/Enumeration.java \\\n classpath/java/util/EventListener.java \\\n classpath/java/util/EventListenerProxy.java \\\n classpath/java/util/EventObject.java \\\n+classpath/java/util/FormatFlagsConversionMismatchException.java \\\n+classpath/java/util/Formattable.java \\\n+classpath/java/util/FormattableFlags.java \\\n+classpath/java/util/Formatter.java \\\n+classpath/java/util/FormatterClosedException.java \\\n java/util/GregorianCalendar.java \\\n classpath/java/util/HashMap.java \\\n classpath/java/util/HashSet.java \\\n classpath/java/util/Hashtable.java \\\n classpath/java/util/IdentityHashMap.java \\\n+classpath/java/util/IllegalFormatCodePointException.java \\\n+classpath/java/util/IllegalFormatConversionException.java \\\n+classpath/java/util/IllegalFormatException.java \\\n+classpath/java/util/IllegalFormatFlagsException.java \\\n+classpath/java/util/IllegalFormatPrecisionException.java \\\n+classpath/java/util/IllegalFormatWidthException.java \\\n+classpath/java/util/InputMismatchException.java \\\n classpath/java/util/InvalidPropertiesFormatException.java \\\n classpath/java/util/Iterator.java \\\n classpath/java/util/LinkedHashMap.java \\\n@@ -4424,6 +4603,8 @@ classpath/java/util/ListIterator.java \\\n classpath/java/util/ListResourceBundle.java \\\n java/util/Locale.java \\\n classpath/java/util/Map.java \\\n+classpath/java/util/MissingFormatArgumentException.java \\\n+classpath/java/util/MissingFormatWidthException.java \\\n classpath/java/util/MissingResourceException.java \\\n classpath/java/util/NoSuchElementException.java \\\n classpath/java/util/Observable.java \\\n@@ -4447,6 +4628,9 @@ classpath/java/util/TimerTask.java \\\n classpath/java/util/TooManyListenersException.java \\\n classpath/java/util/TreeMap.java \\\n classpath/java/util/TreeSet.java \\\n+classpath/java/util/UUID.java \\\n+classpath/java/util/UnknownFormatConversionException.java \\\n+classpath/java/util/UnknownFormatFlagsException.java \\\n java/util/VMTimeZone.java \\\n classpath/java/util/Vector.java \\\n classpath/java/util/WeakHashMap.java\n@@ -4473,6 +4657,7 @@ classpath/java/util/logging/Level.java \\\n java/util/logging/LogManager.java \\\n classpath/java/util/logging/LogRecord.java \\\n java/util/logging/Logger.java \\\n+classpath/java/util/logging/LoggingMXBean.java \\\n classpath/java/util/logging/LoggingPermission.java \\\n classpath/java/util/logging/MemoryHandler.java \\\n classpath/java/util/logging/SimpleFormatter.java \\\n@@ -4651,9 +4836,48 @@ classpath/javax/imageio/stream/MemoryCacheImageInputStream.java \\\n classpath/javax/imageio/stream/MemoryCacheImageOutputStream.java\n \n javax_management_source_files = \\\n-classpath/javax/management/Attribute.java\n+classpath/javax/management/Attribute.java \\\n+classpath/javax/management/AttributeList.java \\\n+classpath/javax/management/AttributeNotFoundException.java \\\n+classpath/javax/management/DynamicMBean.java \\\n+classpath/javax/management/IntrospectionException.java \\\n+classpath/javax/management/InvalidAttributeValueException.java \\\n+classpath/javax/management/JMException.java \\\n+classpath/javax/management/JMRuntimeException.java \\\n+classpath/javax/management/ListenerNotFoundException.java \\\n+classpath/javax/management/MBeanAttributeInfo.java \\\n+classpath/javax/management/MBeanConstructorInfo.java \\\n+classpath/javax/management/MBeanException.java \\\n+classpath/javax/management/MBeanFeatureInfo.java \\\n+classpath/javax/management/MBeanInfo.java \\\n+classpath/javax/management/MBeanNotificationInfo.java \\\n+classpath/javax/management/MBeanOperationInfo.java \\\n+classpath/javax/management/MBeanParameterInfo.java \\\n+classpath/javax/management/NotCompliantMBeanException.java \\\n+classpath/javax/management/Notification.java \\\n+classpath/javax/management/NotificationBroadcaster.java \\\n+classpath/javax/management/NotificationEmitter.java \\\n+classpath/javax/management/NotificationFilter.java \\\n+classpath/javax/management/NotificationListener.java \\\n+classpath/javax/management/OperationsException.java \\\n+classpath/javax/management/ReflectionException.java \\\n+classpath/javax/management/RuntimeOperationsException.java \\\n+classpath/javax/management/StandardMBean.java\n \n javax_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_management_source_files)))\n+javax_management_openmbean_source_files = \\\n+classpath/javax/management/openmbean/ArrayType.java \\\n+classpath/javax/management/openmbean/CompositeData.java \\\n+classpath/javax/management/openmbean/CompositeDataSupport.java \\\n+classpath/javax/management/openmbean/CompositeType.java \\\n+classpath/javax/management/openmbean/InvalidKeyException.java \\\n+classpath/javax/management/openmbean/OpenDataException.java \\\n+classpath/javax/management/openmbean/OpenType.java \\\n+classpath/javax/management/openmbean/SimpleType.java \\\n+classpath/javax/management/openmbean/TabularData.java \\\n+classpath/javax/management/openmbean/TabularType.java\n+\n+javax_management_openmbean_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_management_openmbean_source_files)))\n javax_naming_source_files = \\\n classpath/javax/naming/AuthenticationException.java \\\n classpath/javax/naming/AuthenticationNotSupportedException.java \\\n@@ -4751,7 +4975,7 @@ classpath/javax/naming/spi/DirStateFactory.java \\\n classpath/javax/naming/spi/DirectoryManager.java \\\n classpath/javax/naming/spi/InitialContextFactory.java \\\n classpath/javax/naming/spi/InitialContextFactoryBuilder.java \\\n-classpath/javax/naming/spi/NamingManager.java \\\n+javax/naming/spi/NamingManager.java \\\n classpath/javax/naming/spi/ObjectFactory.java \\\n classpath/javax/naming/spi/ObjectFactoryBuilder.java \\\n classpath/javax/naming/spi/ResolveResult.java \\\n@@ -4942,7 +5166,9 @@ classpath/javax/rmi/CORBA/Util.java \\\n classpath/javax/rmi/CORBA/UtilDelegate.java \\\n classpath/javax/rmi/CORBA/ValueHandler.java \\\n classpath/javax/rmi/CORBA/ValueHandlerMultiFormat.java \\\n-classpath/javax/rmi/PortableRemoteObject.java\n+classpath/javax/rmi/PortableRemoteObject.java \\\n+classpath/javax/rmi/ssl/SslRMIClientSocketFactory.java \\\n+classpath/javax/rmi/ssl/SslRMIServerSocketFactory.java\n \n javax_security_auth_source_files = \\\n classpath/javax/security/auth/AuthPermission.java \\\n@@ -5545,6 +5771,7 @@ classpath/javax/swing/text/DocumentFilter.java \\\n classpath/javax/swing/text/EditorKit.java \\\n classpath/javax/swing/text/Element.java \\\n classpath/javax/swing/text/ElementIterator.java \\\n+classpath/javax/swing/text/EmptyAttributeSet.java \\\n classpath/javax/swing/text/FieldView.java \\\n classpath/javax/swing/text/FlowView.java \\\n classpath/javax/swing/text/GapContent.java \\\n@@ -5587,15 +5814,16 @@ classpath/javax/swing/text/WrappedPlainView.java\n \n javax_swing_text_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_text_source_files)))\n javax_swing_text_html_source_files = \\\n+classpath/javax/swing/text/html/BRView.java \\\n classpath/javax/swing/text/html/BlockView.java \\\n classpath/javax/swing/text/html/CSS.java \\\n classpath/javax/swing/text/html/CSSParser.java \\\n classpath/javax/swing/text/html/FormView.java \\\n+classpath/javax/swing/text/html/HRuleView.java \\\n classpath/javax/swing/text/html/HTML.java \\\n classpath/javax/swing/text/html/HTMLDocument.java \\\n classpath/javax/swing/text/html/HTMLEditorKit.java \\\n classpath/javax/swing/text/html/HTMLFrameHyperlinkEvent.java \\\n-classpath/javax/swing/text/html/HTMLTableView.java \\\n classpath/javax/swing/text/html/ImageView.java \\\n classpath/javax/swing/text/html/InlineView.java \\\n classpath/javax/swing/text/html/ListView.java \\\n@@ -5604,7 +5832,8 @@ classpath/javax/swing/text/html/NullView.java \\\n classpath/javax/swing/text/html/ObjectView.java \\\n classpath/javax/swing/text/html/Option.java \\\n classpath/javax/swing/text/html/ParagraphView.java \\\n-classpath/javax/swing/text/html/StyleSheet.java\n+classpath/javax/swing/text/html/StyleSheet.java \\\n+classpath/javax/swing/text/html/TableView.java\n \n javax_swing_text_html_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_text_html_source_files)))\n javax_swing_text_html_parser_source_files = \\\n@@ -6537,6 +6766,7 @@ all_packages_source_files = \\\n   gnu/gcj/util.list \\\n   gnu/java/awt.list \\\n   gnu/java/awt/color.list \\\n+  gnu/java/awt/dnd.list \\\n   gnu/java/awt/font.list \\\n   gnu/java/awt/font/opentype.list \\\n   gnu/java/awt/font/opentype/truetype.list \\\n@@ -6546,10 +6776,12 @@ all_packages_source_files = \\\n   gnu/java/awt/print.list \\\n   gnu/java/io.list \\\n   gnu/java/lang.list \\\n+  gnu/java/lang/management.list \\\n   gnu/java/lang/reflect.list \\\n   gnu/java/locale.list \\\n   gnu/java/math.list \\\n   gnu/java/net.list \\\n+  gnu/java/net/loader.list \\\n   gnu/java/net/local.list \\\n   gnu/java/net/protocol/core.list \\\n   gnu/java/net/protocol/file.list \\\n@@ -6591,6 +6823,7 @@ all_packages_source_files = \\\n   gnu/java/util.list \\\n   gnu/java/util/jar.list \\\n   gnu/java/util/prefs.list \\\n+  gnu/java/util/regex.list \\\n   gnu/javax/crypto.list \\\n   gnu/javax/crypto/assembly.list \\\n   gnu/javax/crypto/cipher.list \\\n@@ -6607,6 +6840,7 @@ all_packages_source_files = \\\n   gnu/javax/crypto/key/dh.list \\\n   gnu/javax/crypto/key/srp6.list \\\n   gnu/javax/crypto/keyring.list \\\n+  gnu/javax/crypto/kwa.list \\\n   gnu/javax/crypto/mac.list \\\n   gnu/javax/crypto/mode.list \\\n   gnu/javax/crypto/pad.list \\\n@@ -6616,7 +6850,11 @@ all_packages_source_files = \\\n   gnu/javax/crypto/sasl/crammd5.list \\\n   gnu/javax/crypto/sasl/plain.list \\\n   gnu/javax/crypto/sasl/srp.list \\\n+  gnu/javax/imageio.list \\\n   gnu/javax/imageio/bmp.list \\\n+  gnu/javax/imageio/gif.list \\\n+  gnu/javax/imageio/jpeg.list \\\n+  gnu/javax/imageio/png.list \\\n   gnu/javax/net/ssl.list \\\n   gnu/javax/net/ssl/provider.list \\\n   gnu/javax/print.list \\\n@@ -6629,6 +6867,8 @@ all_packages_source_files = \\\n   gnu/javax/security/auth.list \\\n   gnu/javax/security/auth/callback.list \\\n   gnu/javax/security/auth/login.list \\\n+  gnu/javax/sound/sampled/AU.list \\\n+  gnu/javax/sound/sampled/WAV.list \\\n   gnu/javax/swing/plaf/gnu.list \\\n   gnu/javax/swing/plaf/metal.list \\\n   gnu/javax/swing/text/html.list \\\n@@ -6637,7 +6877,6 @@ all_packages_source_files = \\\n   gnu/javax/swing/text/html/parser/support.list \\\n   gnu/javax/swing/text/html/parser/support/low.list \\\n   gnu/javax/swing/tree.list \\\n-  gnu/regexp.list \\\n   java/applet.list \\\n   java/awt.list \\\n   java/awt/color.list \\\n@@ -6659,6 +6898,7 @@ all_packages_source_files = \\\n   java/lang.list \\\n   java/lang/annotation.list \\\n   java/lang/instrument.list \\\n+  java/lang/management.list \\\n   java/lang/ref.list \\\n   java/lang/reflect.list \\\n   java/math.list \\\n@@ -6691,6 +6931,7 @@ all_packages_source_files = \\\n   javax/crypto/interfaces.list \\\n   javax/crypto/spec.list \\\n   javax/management.list \\\n+  javax/management/openmbean.list \\\n   javax/naming.list \\\n   javax/naming/directory.list \\\n   javax/naming/event.list \\\n@@ -6756,6 +6997,7 @@ ordinary_header_files = \\\n   $(gnu_gcj_util_header_files) \\\n   $(gnu_java_awt_header_files) \\\n   $(gnu_java_awt_color_header_files) \\\n+  $(gnu_java_awt_dnd_header_files) \\\n   $(gnu_java_awt_font_header_files) \\\n   $(gnu_java_awt_font_opentype_header_files) \\\n   $(gnu_java_awt_font_opentype_truetype_header_files) \\\n@@ -6765,10 +7007,12 @@ ordinary_header_files = \\\n   $(gnu_java_awt_print_header_files) \\\n   $(gnu_java_io_header_files) \\\n   $(gnu_java_lang_header_files) \\\n+  $(gnu_java_lang_management_header_files) \\\n   $(gnu_java_lang_reflect_header_files) \\\n   $(gnu_java_locale_header_files) \\\n   $(gnu_java_math_header_files) \\\n   $(gnu_java_net_header_files) \\\n+  $(gnu_java_net_loader_header_files) \\\n   $(gnu_java_net_local_header_files) \\\n   $(gnu_java_net_protocol_core_header_files) \\\n   $(gnu_java_net_protocol_file_header_files) \\\n@@ -6810,6 +7054,7 @@ ordinary_header_files = \\\n   $(gnu_java_util_header_files) \\\n   $(gnu_java_util_jar_header_files) \\\n   $(gnu_java_util_prefs_header_files) \\\n+  $(gnu_java_util_regex_header_files) \\\n   $(gnu_javax_crypto_header_files) \\\n   $(gnu_javax_crypto_assembly_header_files) \\\n   $(gnu_javax_crypto_cipher_header_files) \\\n@@ -6826,6 +7071,7 @@ ordinary_header_files = \\\n   $(gnu_javax_crypto_key_dh_header_files) \\\n   $(gnu_javax_crypto_key_srp6_header_files) \\\n   $(gnu_javax_crypto_keyring_header_files) \\\n+  $(gnu_javax_crypto_kwa_header_files) \\\n   $(gnu_javax_crypto_mac_header_files) \\\n   $(gnu_javax_crypto_mode_header_files) \\\n   $(gnu_javax_crypto_pad_header_files) \\\n@@ -6835,7 +7081,11 @@ ordinary_header_files = \\\n   $(gnu_javax_crypto_sasl_crammd5_header_files) \\\n   $(gnu_javax_crypto_sasl_plain_header_files) \\\n   $(gnu_javax_crypto_sasl_srp_header_files) \\\n+  $(gnu_javax_imageio_header_files) \\\n   $(gnu_javax_imageio_bmp_header_files) \\\n+  $(gnu_javax_imageio_gif_header_files) \\\n+  $(gnu_javax_imageio_jpeg_header_files) \\\n+  $(gnu_javax_imageio_png_header_files) \\\n   $(gnu_javax_net_ssl_header_files) \\\n   $(gnu_javax_net_ssl_provider_header_files) \\\n   $(gnu_javax_print_header_files) \\\n@@ -6848,6 +7098,8 @@ ordinary_header_files = \\\n   $(gnu_javax_security_auth_header_files) \\\n   $(gnu_javax_security_auth_callback_header_files) \\\n   $(gnu_javax_security_auth_login_header_files) \\\n+  $(gnu_javax_sound_sampled_AU_header_files) \\\n+  $(gnu_javax_sound_sampled_WAV_header_files) \\\n   $(gnu_javax_swing_plaf_gnu_header_files) \\\n   $(gnu_javax_swing_plaf_metal_header_files) \\\n   $(gnu_javax_swing_text_html_header_files) \\\n@@ -6856,7 +7108,6 @@ ordinary_header_files = \\\n   $(gnu_javax_swing_text_html_parser_support_header_files) \\\n   $(gnu_javax_swing_text_html_parser_support_low_header_files) \\\n   $(gnu_javax_swing_tree_header_files) \\\n-  $(gnu_regexp_header_files) \\\n   $(java_applet_header_files) \\\n   $(java_awt_header_files) \\\n   $(java_awt_color_header_files) \\\n@@ -6878,6 +7129,7 @@ ordinary_header_files = \\\n   $(java_lang_header_files) \\\n   $(java_lang_annotation_header_files) \\\n   $(java_lang_instrument_header_files) \\\n+  $(java_lang_management_header_files) \\\n   $(java_lang_ref_header_files) \\\n   $(java_lang_reflect_header_files) \\\n   $(java_math_header_files) \\\n@@ -6910,6 +7162,7 @@ ordinary_header_files = \\\n   $(javax_crypto_interfaces_header_files) \\\n   $(javax_crypto_spec_header_files) \\\n   $(javax_management_header_files) \\\n+  $(javax_management_openmbean_header_files) \\\n   $(javax_naming_header_files) \\\n   $(javax_naming_directory_header_files) \\\n   $(javax_naming_event_header_files) \\\n@@ -6957,10 +7210,12 @@ ordinary_header_files = \\\n \n bc_objects = \\\n   gnu-CORBA.lo \\\n+  gnu-java-awt-dnd-peer-gtk.lo \\\n   gnu-java-awt-peer-gtk.lo \\\n   gnu-java-awt-peer-qt.lo \\\n   gnu-java-awt-peer-swing.lo \\\n   gnu-java-beans.lo \\\n+  gnu-java-util-prefs-gconf.lo \\\n   gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\\n   gnu-xml.lo \\\n@@ -6982,16 +7237,22 @@ property_files = \\\n   classpath/resource/gnu/classpath/tools/native2ascii/messages.properties \\\n   classpath/resource/gnu/classpath/tools/serialver/messages.properties \\\n   classpath/resource/gnu/java/awt/peer/gtk/font.properties \\\n+  classpath/resource/gnu/java/awt/peer/x/fonts.properties \\\n+  classpath/resource/gnu/java/util/regex/MessagesBundle.properties \\\n+  classpath/resource/gnu/java/util/regex/MessagesBundle_fr.properties \\\n+  classpath/resource/gnu/java/util/regex/MessagesBundle_it.properties \\\n   classpath/resource/gnu/javax/print/PrinterDialog.properties \\\n   classpath/resource/gnu/javax/print/PrinterDialog_de.properties \\\n   classpath/resource/gnu/javax/security/auth/callback/MessagesBundle.properties \\\n-  classpath/resource/gnu/regexp/MessagesBundle.properties \\\n-  classpath/resource/gnu/regexp/MessagesBundle_fr.properties \\\n-  classpath/resource/gnu/regexp/MessagesBundle_it.properties \\\n   classpath/resource/java/util/iso4217.properties \\\n   classpath/resource/javax/imageio/plugins/jpeg/MessagesBundle.properties \\\n   classpath/resource/org/ietf/jgss/MessagesBundle.properties \\\n+  classpath/resource/META-INF/services/java.util.prefs.PreferencesFactory \\\n+  classpath/resource/META-INF/services/java.util.prefs.PreferencesFactory.in \\\n   classpath/resource/META-INF/services/javax.sound.midi.spi.MidiDeviceProvider \\\n+  classpath/resource/META-INF/services/javax.sound.midi.spi.MidiFileReader \\\n+  classpath/resource/META-INF/services/javax.sound.midi.spi.MidiFileWriter \\\n+  classpath/resource/META-INF/services/javax.sound.sampled.spi.AudioFileReader \\\n   classpath/resource/META-INF/services/javax.xml.parsers.DocumentBuilderFactory \\\n   classpath/resource/META-INF/services/javax.xml.parsers.SAXParserFactory \\\n   classpath/resource/META-INF/services/javax.xml.parsers.TransformerFactory \\\n@@ -9160,6 +9421,21 @@ gnu/java/awt/color.list: $(gnu_java_awt_color_source_files)\n \n -include gnu/java/awt/color.deps\n \n+gnu/java/awt/dnd.list: $(gnu_java_awt_dnd_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_awt_dnd_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/awt/dnd.list\n+\n+-include gnu/java/awt/dnd.deps\n+\n+gnu-java-awt-dnd-peer-gtk.lo: $(gnu_java_awt_dnd_peer_gtk_source_files)\n+\t@find classpath/lib/gnu/java/awt/dnd/peer/gtk -name '*.class' > gnu-java-awt-dnd-peer-gtk.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -fno-indirect-classes -c -o gnu-java-awt-dnd-peer-gtk.lo @gnu-java-awt-dnd-peer-gtk.list\n+\t@rm -f gnu-java-awt-dnd-peer-gtk.list\n+\n gnu/java/awt/font.list: $(gnu_java_awt_font_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_awt_font_source_files); do \\\n@@ -9270,6 +9546,16 @@ gnu/java/lang.list: $(gnu_java_lang_source_files)\n \n -include gnu/java/lang.deps\n \n+gnu/java/lang/management.list: $(gnu_java_lang_management_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_lang_management_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/lang/management.list\n+\n+-include gnu/java/lang/management.deps\n+\n gnu/java/lang/reflect.list: $(gnu_java_lang_reflect_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_lang_reflect_source_files); do \\\n@@ -9310,6 +9596,16 @@ gnu/java/net.list: $(gnu_java_net_source_files)\n \n -include gnu/java/net.deps\n \n+gnu/java/net/loader.list: $(gnu_java_net_loader_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_net_loader_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/net/loader.list\n+\n+-include gnu/java/net/loader.deps\n+\n gnu/java/net/local.list: $(gnu_java_net_local_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_net_local_source_files); do \\\n@@ -9720,6 +10016,21 @@ gnu/java/util/prefs.list: $(gnu_java_util_prefs_source_files)\n \n -include gnu/java/util/prefs.deps\n \n+gnu-java-util-prefs-gconf.lo: $(gnu_java_util_prefs_gconf_source_files)\n+\t@find classpath/lib/gnu/java/util/prefs/gconf -name '*.class' > gnu-java-util-prefs-gconf.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -fno-indirect-classes -c -o gnu-java-util-prefs-gconf.lo @gnu-java-util-prefs-gconf.list\n+\t@rm -f gnu-java-util-prefs-gconf.list\n+\n+gnu/java/util/regex.list: $(gnu_java_util_regex_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_util_regex_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/util/regex.list\n+\n+-include gnu/java/util/regex.deps\n+\n gnu/javax/crypto.list: $(gnu_javax_crypto_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_crypto_source_files); do \\\n@@ -9880,6 +10191,16 @@ gnu/javax/crypto/keyring.list: $(gnu_javax_crypto_keyring_source_files)\n \n -include gnu/javax/crypto/keyring.deps\n \n+gnu/javax/crypto/kwa.list: $(gnu_javax_crypto_kwa_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_kwa_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/kwa.list\n+\n+-include gnu/javax/crypto/kwa.deps\n+\n gnu/javax/crypto/mac.list: $(gnu_javax_crypto_mac_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_crypto_mac_source_files); do \\\n@@ -9970,6 +10291,16 @@ gnu/javax/crypto/sasl/srp.list: $(gnu_javax_crypto_sasl_srp_source_files)\n \n -include gnu/javax/crypto/sasl/srp.deps\n \n+gnu/javax/imageio.list: $(gnu_javax_imageio_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_imageio_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/imageio.list\n+\n+-include gnu/javax/imageio.deps\n+\n gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_imageio_bmp_source_files); do \\\n@@ -9980,6 +10311,36 @@ gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n \n -include gnu/javax/imageio/bmp.deps\n \n+gnu/javax/imageio/gif.list: $(gnu_javax_imageio_gif_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_imageio_gif_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/imageio/gif.list\n+\n+-include gnu/javax/imageio/gif.deps\n+\n+gnu/javax/imageio/jpeg.list: $(gnu_javax_imageio_jpeg_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_imageio_jpeg_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/imageio/jpeg.list\n+\n+-include gnu/javax/imageio/jpeg.deps\n+\n+gnu/javax/imageio/png.list: $(gnu_javax_imageio_png_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_imageio_png_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/imageio/png.list\n+\n+-include gnu/javax/imageio/png.deps\n+\n gnu/javax/net/ssl.list: $(gnu_javax_net_ssl_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_net_ssl_source_files); do \\\n@@ -10110,6 +10471,26 @@ gnu-javax-sound-midi.lo: $(gnu_javax_sound_midi_source_files)\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -fno-indirect-classes -c -o gnu-javax-sound-midi.lo @gnu-javax-sound-midi.list\n \t@rm -f gnu-javax-sound-midi.list\n \n+gnu/javax/sound/sampled/AU.list: $(gnu_javax_sound_sampled_AU_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_sound_sampled_AU_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/sound/sampled/AU.list\n+\n+-include gnu/javax/sound/sampled/AU.deps\n+\n+gnu/javax/sound/sampled/WAV.list: $(gnu_javax_sound_sampled_WAV_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_sound_sampled_WAV_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/sound/sampled/WAV.list\n+\n+-include gnu/javax/sound/sampled/WAV.deps\n+\n gnu/javax/swing/plaf/gnu.list: $(gnu_javax_swing_plaf_gnu_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_swing_plaf_gnu_source_files); do \\\n@@ -10190,16 +10571,6 @@ gnu/javax/swing/tree.list: $(gnu_javax_swing_tree_source_files)\n \n -include gnu/javax/swing/tree.deps\n \n-gnu/regexp.list: $(gnu_regexp_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\t@for file in $(gnu_regexp_source_files); do \\\n-\t  if test -f $(srcdir)/$$file; then \\\n-\t    echo $(srcdir)/$$file; \\\n-\t  else echo $$file; fi; \\\n-\tdone > gnu/regexp.list\n-\n--include gnu/regexp.deps\n-\n gnu-xml.lo: $(gnu_xml_source_files)\n \t@find classpath/lib/gnu/xml -name '*.class' > gnu-xml.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -fno-indirect-classes -c -o gnu-xml.lo @gnu-xml.list\n@@ -10415,6 +10786,16 @@ java/lang/instrument.list: $(java_lang_instrument_source_files)\n \n -include java/lang/instrument.deps\n \n+java/lang/management.list: $(java_lang_management_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(java_lang_management_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > java/lang/management.list\n+\n+-include java/lang/management.deps\n+\n java/lang/ref.list: $(java_lang_ref_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(java_lang_ref_source_files); do \\\n@@ -10740,6 +11121,16 @@ javax/management.list: $(javax_management_source_files)\n \n -include javax/management.deps\n \n+javax/management/openmbean.list: $(javax_management_openmbean_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_management_openmbean_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/management/openmbean.list\n+\n+-include javax/management/openmbean.deps\n+\n javax/naming.list: $(javax_naming_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(javax_naming_source_files); do \\"}, {"sha": "8aca3f978441f9eebdf20509c73681a038e27c9a", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 10688, "deletions": 124, "changes": 10812, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "dae909effde9b2985045c4630207b24eb9f488f8", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -46,19 +46,24 @@ Suggested Software\n \tare required unless --disable-gtk-peer is used as an argument to\n \tconfigure.\n \n-        - GTK+ 2.4.x (or higher)\n+        - GTK+ 2.8.x (or higher)\n         - gdk-pixbuf\n \n \t- XTest Extension (libXtst) for GdkRobot support in java.awt.\n \n-\tFor building the Cairo GdkGraphics2D backend you need at least\n-\tCairo 0.5.0.\n+\tFor building gcjwebplugin you'll need the Mozilla plugin\n+\tsupport headers and libraries.\n \n \tFor building the Qt AWT peer JNI native libraries you have to\n \tspecify --enable-qt-peer and need the following library:\n \n         - Qt 4.0.1\n \n+\tFor building the X AWT peers see information below\n+\t(Building and running with the X AWT peers). You will need\n+\tthe Escher 0.2.3 library:\n+\thttp://escher.sourceforge.net\n+\n \tPlease note that at the moment most operating systems do not\n     ship Qt4 by default. We recommend using GNU Classpath' Qt4\n     support only for its developers and bug reporters. See\n@@ -113,17 +118,22 @@ gives a complete list.\n   --enable-java           compile Java source default=yes\n   --enable-jni            compile JNI source default=yes\n   --enable-gtk-peer       compile GTK native peers default=yes\n-  --enable-gtk-cairo      compile cairo based Graphics2D default=no\n   --enable-qt-peer        compile Qt4 native peers default=no\n   --enable-default-toolkit\n                           fully qualified class name of default AWT toolkit\n                           default=no\n   --enable-xmlj           compile native libxml/xslt library default=no\n   --enable-load-library   enable to use JNI native methods default=yes\n+  --enable-local-sockets  enable build of local Unix sockets\n   --with-jikes            to compile the class library using jikes\n                           the default is to use gcj\n   --with-glibj            define what to install (zip|flat|both|none)\n                           default=zip\n+  --with-escher=/path/to/escher\n+                          enable build of the X/Escher peers, with\n+                          the escher library at /path/to/escher, either\n+                          in the form of a JAR file, or a directory\n+                          containing the .class files of Escher.\n   --enable-Werror         whether to compile C code with -Werror which turns\n                           any compiler warning into a compilation failure\n                           default=no\n@@ -164,6 +174,25 @@ export LD_LIBRARY_PATH CLASSPATH\n More information about the VMs that use GNU Classpath can be found in the\n README file.\n \n+------------------------------------------------------------------\n+Building and running with the X AWT peers\n+------------------------------------------------------------------\n+\n+In order build the X peers you need the Escher library version 0.2.3\n+from http://escher.sourceforge.net . Unpack (and optionally build) the\n+Escher library following the instructions in the downloaded\n+package. Enable the build of the X peers by passing\n+--with-escher=/path/to/escher to ./configure where /path/to/escher\n+either points to a directory structure or JAR file containing the\n+Escher classes. For Unix systems it is preferable to also build local\n+socket support by passing --enable-local-sockets, which accelerates\n+the network communication to the X server significantly.\n+\n+In this release you have to enable the X peers at runtime by\n+setting the system property awt.toolkit=gnu.java.awt.peer.x.XToolkit\n+by passing -Dawt.toolkit=gnu.java.awt.peer.x.XToolkit to the java\n+command when running an application.\n+\n ------------------------------------------------------------------\n Misc. Notes\n ------------------------------------------------------------------"}, {"sha": "b8fbd3d4a4df42b28e785498a6d92a52b2d5b688", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,8 +38,10 @@ host_triplet = @host@\n target_triplet = @target@\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \\\n \t$(srcdir)/Makefile.in $(top_srcdir)/configure \\\n-\t$(top_srcdir)/gnu/classpath/Configuration.java.in AUTHORS \\\n-\tCOPYING ChangeLog INSTALL NEWS TODO compile config.guess \\\n+\t$(top_srcdir)/gnu/classpath/Configuration.java.in \\\n+\t$(top_srcdir)/gnu/java/security/Configuration.java.in \\\n+\t$(top_srcdir)/resource/META-INF/services/java.util.prefs.PreferencesFactory.in \\\n+\tAUTHORS COPYING ChangeLog INSTALL NEWS TODO config.guess \\\n \tconfig.sub depcomp install-sh ltcf-c.sh ltcf-cxx.sh \\\n \tltcf-gcj.sh ltconfig ltmain.sh missing mkinstalldirs\n subdir = .\n@@ -57,7 +59,9 @@ am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno configure.status.lineno\n mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n CONFIG_HEADER = $(top_builddir)/include/config.h\n-CONFIG_CLEAN_FILES = gnu/classpath/Configuration.java\n+CONFIG_CLEAN_FILES = gnu/classpath/Configuration.java \\\n+\tgnu/java/security/Configuration.java \\\n+\tresource/META-INF/services/java.util.prefs.PreferencesFactory\n SOURCES =\n DIST_SOURCES =\n RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n@@ -109,6 +113,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -129,6 +135,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -159,6 +166,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -209,6 +220,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -229,6 +241,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n@@ -341,6 +355,10 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \tcd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n gnu/classpath/Configuration.java: $(top_builddir)/config.status $(top_srcdir)/gnu/classpath/Configuration.java.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n+gnu/java/security/Configuration.java: $(top_builddir)/config.status $(top_srcdir)/gnu/java/security/Configuration.java.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n+resource/META-INF/services/java.util.prefs.PreferencesFactory: $(top_builddir)/config.status $(top_srcdir)/resource/META-INF/services/java.util.prefs.PreferencesFactory.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n \n mostlyclean-libtool:\n \t-rm -f *.lo\n@@ -487,7 +505,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/../.. $(distdir)/examples $(distdir)/gnu/classpath $(distdir)/lib $(distdir)/m4 $(distdir)/scripts $(distdir)/tools\n+\t$(mkdir_p) $(distdir)/../.. $(distdir)/examples $(distdir)/gnu/classpath $(distdir)/gnu/java/security $(distdir)/lib $(distdir)/m4 $(distdir)/resource/META-INF/services $(distdir)/scripts $(distdir)/tools\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\"}, {"sha": "a787833e58752bef028a4e74facaa32caff07db5", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,3 +1,101 @@\n+New in release 0.92 (Aug 9, 2006)\n+\n+* libjawtgnu.so has been renamed libjawt.so for binary compatibility.\n+  libjawt.so should be installed in a VM-specific directory rather\n+  than directly in /usr/lib.  Proprietary VMs put their libjawt.so\n+  implementations in VM-specific directories but search /usr/lib first.\n+  If GNU Classpath's libjawt.so is installed in /usr/lib it will create\n+  problems for people who use a proprietary VM to run AWT Native\n+  Interface applications.\n+* The GdkGraphics2D backend has been made the default.  There is no\n+  longer an explicit dependency on Cairo, the --enable-gtk-cairo\n+  configure option is gone, and GTK 2.8 or higher is now required to\n+  build the GTK peers.\n+* A Mozilla plugin, 'gcjwebplugin', is now included.  It introduces a\n+  dependency on the Mozilla plugin support headers and libraries.\n+* New java implementations of png and gif imageio readers and writers.\n+* A tools.texinfo document has been created and now includes\n+  documentation about:\n+  * appletviewer\n+  * gcjwebplugin\n+  * jarsigner\n+  * keytool\n+* Several new tools are now included:\n+  * appletviewer\n+  * jar\n+  * native2ascii\n+  * serialver\n+  * keytool\n+  * jarsigner\n+  A new configure option --enable-tool-wrappers causes wrapper\n+  binaries to be built for VMs that support the JNI Invocation API.\n+* javax.sound.midi providers have been added to read and\n+  write standard MIDI files.\n+* A javax.sound.sampled .au and .wav file readers have been added.\n+* New Java Virtual Machine Tool Interface header, jvmti.h. \n+* AWT peers for X Windows based on Escher (a pure java X protocol\n+  implementation) have been added. So far it supports AWT 1.1 style\n+  Graphics, image loading via ImageIO (PNG, GIF and BMP images in this\n+  release), top level components as well as mouse and keyboard input.\n+  It is capable of running many Swing applications. Graphics2D and\n+  AWT widgets are not yet supported with this peer set.\n+* GConf based util.peers backend (see the --enable-gconf-peer and\n+  --enable-default-preferences-peer configure options).\n+* Support for batch importing trusted certificates for use with ssl\n+  connections (see script/import-cacerts.sh).\n+* NIO scatter-gather channel support.\n+\n+Runtime interface changes:\n+\n+* A new class, VMURLConnection, is used to implement\n+  URLConnection.guessContentTypeFromStream.  The reference\n+  implementation uses libmagic (and falls back to doing nothing if\n+  libmagic is not available).\n+* The method gnu.java.io.PlatformHelper.toCanonicalForm() has been\n+  replaced with a JNI implementation of VMFile.toCanonicalForm() for\n+  GNU/Posix systems.\n+* A new class, VMRuntimeMXBeanImpl, is used to implement\n+  the low-level support of the runtime management bean.\n+  VMs should use it to supply the input arguments and start\n+  time of the VM.  In addition, one of sun.boot.class.path\n+  or java.boot.class.path should be defined by the VM to\n+  support the optional boot class path access functionality.\n+* The Unsafe class was moved back to the place expected by the JSR 166\n+  reference implementation.  We've also added a couple other new VM\n+  classes to support the JSR 166 code -- sun.reflect.Reflection and\n+  sun.reflect.misc.ReflectUtil.\n+* Another new class, VMClassLoadingMXBeanImpl, is used to implement\n+  the low-level support of the class loading management bean.\n+  VMs need to supply it with information about how many classes\n+  are currently loaded, how many have been unloaded and whether\n+  verbose class loading output is on or off.  Provision should also\n+  be made for the latter to be toggled at runtime.\n+* VMThreadMXBeanImpl is used to implement the low-level support\n+  of the thread management bean.  Providing this interface requires\n+  providing a fair amount of information about threads, including\n+  optional time and contention monitoring, and instances of the\n+  new ThreadInfo class in java.lang.management.  getState() has also\n+  been added to the VMThread interface; this is required by the bean\n+  as well as java.lang.Thread.\n+* VMMemoryMXBeanImpl is used to implement the low-level support\n+  of the memory management bean.  Providing this interface requires\n+  providing information about the levels of heap and non-heap memory,\n+  and the number of objects eligible for garbage collection.\n+* VMCompilationMXBeanImpl is used to allow for optional compilation\n+  time support for Just-In-Time compilers.\n+* VMMemoryPoolMXBeanImpl is used to implement the low-level support\n+  of the memory pool beans.  Providing this interface requires\n+  providing memory usage statistics for each supported bean.\n+* VMManagementFactory provides the names of the memory pools,\n+  memory managers and garbage collectors maintained by the virtual\n+  machine.  These are used to create the beans by the ManagementFactory.\n+* VMMemoryManagerMXBeanImpl and VMGarbageCollectorMXBeanImpl provide\n+  low-level support for memory managers (including the specific subclass\n+  of garbage collecting memory managers).  The interfaces for these\n+  require no more than enumerating the number of collections and the\n+  time spent (for garbage collectors) and a relationship to the memory\n+  pools (for all), along with a validity check.\n+\n New in release 0.91 (May 15, 2006)\n \n * Experimental activation (java.rmi.activation) support, including RMI"}, {"sha": "d2e38a5db11d4bf9ede8441798a536a9b91af360", "filename": "libjava/classpath/README", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FREADME?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,21 +1,21 @@\n-GNU Classpath README - Last updated: May 15, 2006\n+GNU Classpath README - Last updated: August 6, 2006 (for release 0.92)\n \n GNU Classpath, Essential Libraries for Java is a project to create a\n free software implementation of the core class libraries for the java\n programming language.\n \n-Additionally GNU Classpath includes a sub-project called GNU Classpath\n-Tools whose goal is to provide a number of free replacements for\n-standard Java development tools like javadoc, javap, javah, and\n-others.  And a sub-project called GNU Inetlib, an extension library to\n-provide extra network protocol support (ftp, finger, gopher) for GNU\n-Classpath, but it can also standalone to ease adding http, imap, pop3\n-and smtp client support to applictions. These subprojects are normally\n-released independent from the core libraries.\n+Additionally, GNU Classpath includes a sub-project called GNU Classpath\n+Tools whose goal is to provide a number of free replacements for standard\n+Java development tools like javadoc, javap, and others.  A sub-project\n+called GNU Inetlib, can be used as an extension library to provide extra\n+network protocol support (ftp, finger, gopher) for GNU Classpath.  It can\n+also be used as a standalone to ease adding http, imap, pop3 and smtp\n+client support to applictions.  These subprojects are normally released\n+independently from the core libraries.\n \n This is a development snapshot release only and is not for general\n-purpose use.  GNU Classpath needs to be combine with a proper\n-development environments to be useable for end users.  Eventually,\n+purpose use.  GNU Classpath needs to be combined with a proper\n+development environment to be useable for end users.  Eventually,\n these essential libraries for java will work with as many free\n compilers and runtimes as possible.\n \n@@ -31,24 +31,22 @@ with this GNU Classpath releases include\n \n \t* CACAO\t\t(http://www.cacaojvm.org/)\n \t* JamVM\t\t(http://jamvm.sourceforge.net/)\n-\t* Jikes RVM\t(http://www.ibm.com/developerworks/oss/jikesrvm/)\n-\t* Kissme\t(http://kissme.sourceforge.net/)\n+\t* Jikes RVM\t(http://jikesrvm.sourceforge.net/)\n \n In general the latest releases of the above VMs will work out of the box\n with the latest GNU Classpath release (and in most cases directly with the\n development sources from CVS).\n \n Besides combining GNU Classpath with the runtimes and compilers above\n-you might want to add support for encryption libraries as provided by\n-GNU Crypto (http://www.gnu.org/software/gnu-crypto/).\n-And for additional extension libraries (mail, xml, activation, infobus,\n-servlet) check out GNU ClasspathX (http://www.gnu.org/software/classpathx).\n+you might want to add support for additional extension libraries (mail,\n+activation, infobus, servlet) check out the GNU ClasspathX project\n+(http://www.gnu.org/software/classpathx/).\n \n Some tools come with their own customized version of GNU Classpath.\n-Please check if there is a customised version available for the tool you\n-use before trying the bare bones GNU Classpath release. We are working with\n+Please check if there is a customized version available for the tool you\n+use before trying the bare bones GNU Classpath release.  We are working with\n the tool creators to keep the differences between the core classes as small\n-as possible. Please tell us if you make GNU Classpath work with a new tool.\n+as possible.  Please tell us if you make GNU Classpath work with a new tool.\n \n Active projects which use modified versions of the Classpath libraries\n some of which synchronizes with the Classpath CVS head every couple of weeks:\n@@ -57,9 +55,9 @@ some of which synchronizes with the Classpath CVS head every couple of weeks:\n \t* JC\t\t(http://jcvm.sourceforge.net/)\n \t* JNode\t\t(http://jnode.sourceforge.net/)\n \t* MysaifuVM\t(http://www2s.biglobe.ne.jp/~dat/java/project/jvm/)\n-\t* SableVM\t(http://www.sablevm.org)\n+\t* SableVM\t(http://www.sablevm.org/)\n \n-See for a more complete list of GNU Classpath based projects the\n+For a more complete list of GNU Classpath based projects, see the\n GNU Classpath website: http://www.gnu.org/software/classpath/stories.html\n \n See the file INSTALL for details on installing GNU Classpath.\n@@ -69,23 +67,25 @@ See the file HACKING for working on (non-released) CVS development versions.\n \n Homepage: http://www.gnu.org/software/classpath/\n \n+Bugs should be reported via bugzilla, available from the GNU Classpath\n+website: http://www.gnu.org/software/classpath/bugs.html\n+\n General Mailing List: classpath@gnu.org\n-  --> Bugs and patches can be reported via Savannah if you have a browser\n-      or via this address otherwise.\n   --> To subscribe send email to classpath-request@gnu.org with a \n       subject and body of \"subscribe\".  To unsubscribe do the same,\n       only with a body and subject of \"unsubscribe\".  This is a\n       smartlist managed mailing list.\n \n-CVS Commit, Bugs and Patches List: commit-classpath@gnu.org\n-  --> To subscribe send email to commit-classpath-request@gnu.org with a \n+Patches Mailing List: classpath-patches@gnu.org\n+  --> Proposed patches should be sent to the GNU Classpath patches list\n+  --> To subscribe send email to classpath-patches-request@gnu.org with a \n       subject and body of \"subscribe\".  To unsubscribe do the same,\n       only with a body and subject of \"unsubscribe\".  This is a\n       smartlist managed mailing list.\n \n Anonymous CVS:\n-  --> export CVS_RSH=\"ssh\"\n-  --> cvs -z3 -d:ext:anoncvs@savannah.gnu.org:/cvsroot/classpath co classpath\n+  --> \"cvs -z3 -d:pserver:anonymous@cvs.savannah.gnu.org:/sources/classpath\n+      co classpath\"\n   --> More detailed instructions available on the Savannah project website.\n       http://savannah.gnu.org/projects/classpath/\n "}, {"sha": "cb93e25b197a2e355567387df9baddae7f895712", "filename": "libjava/classpath/THANKYOU", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FTHANKYOU", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2FTHANKYOU", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FTHANKYOU?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -27,6 +27,7 @@ Steven Hugg (hugg@pobox.com)\n jockey@aromasoft.com\n Isaac Jones (ijones@cis.ohio-state.edu)\n Oskar Liljeblad (osk@hem.passagen.se)\n+Trevor Linton (tlinton@xmission.com)\n Casey Marshall (rsdio@metastatic.org)\n Steve Mayer (SMayer@dynamicsoft.com)\n Matt Mucklo (mmucklo@jumpsmart.com)"}, {"sha": "1d0405b6d450d5562ecd0954cd03ebc0a7d56f70", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -468,6 +468,27 @@ AC_DEFUN([AM_PROG_INSTALL_SH],\n install_sh=${install_sh-\"$am_aux_dir/install-sh\"}\n AC_SUBST(install_sh)])\n \n+# Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 2\n+\n+# Check whether the underlying file-system supports filenames\n+# with a leading dot.  For instance MS-DOS doesn't.\n+AC_DEFUN([AM_SET_LEADING_DOT],\n+[rm -rf .tst 2>/dev/null\n+mkdir .tst 2>/dev/null\n+if test -d .tst; then\n+  am__leading_dot=.\n+else\n+  am__leading_dot=_\n+fi\n+rmdir .tst 2>/dev/null\n+AC_SUBST([am__leading_dot])])\n+\n # Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n # From Jim Meyering\n \n@@ -873,8 +894,6 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n-m4_include([../../config/depstand.m4])\n-m4_include([../../config/lead-dot.m4])\n m4_include([../../libtool.m4])\n m4_include([m4/acattribute.m4])\n m4_include([m4/accross.m4])"}, {"sha": "9919d15b4b53585051c8a5c73672d4914de2325a", "filename": "libjava/classpath/autogen.sh", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fautogen.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fautogen.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fautogen.sh?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -41,11 +41,14 @@ if autoconf --version < /dev/null > /dev/null 2>&1 ; then\n \t    2.59*)\n \t\thave_autoconf=true\n \t\t;;\n+\t    2.60*)\n+\t\thave_autoconf=true\n+\t\t;;\n \tesac\n fi\n if $have_autoconf ; then : ; else\n \techo\n-\techo \"You must have autoconf 2.59 installed to compile $PROJECT.\"\n+\techo \"You must have autoconf 2.59 or 2.60 installed for $PROJECT.\"\n \techo \"Install the appropriate package for your distribution,\"\n \techo \"or get the source tarball at http://ftp.gnu.org/gnu/autoconf/\"\n \tDIE=1"}, {"sha": "c085f4f51a2fe95e532cf168bc5e93f04ac5fdda", "filename": "libjava/classpath/config.guess", "status": "modified", "additions": 41, "deletions": 9, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.guess?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,9 +1,10 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-#   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,\n+#   Inc.\n \n-timestamp='2005-11-11'\n+timestamp='2006-05-13'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -106,7 +107,7 @@ set_cc_for_build='\n trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n : ${TMPDIR=/tmp} ;\n- { tmp=`(umask 077 && mktemp -d -q \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+ { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n  { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n  { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n  { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n@@ -206,6 +207,9 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     *:ekkoBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n \texit ;;\n+    *:SolidBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n+\texit ;;\n     macppc:MirBSD:*:*)\n \techo powerppc-unknown-mirbsd${UNAME_RELEASE}\n \texit ;;\n@@ -764,7 +768,14 @@ EOF\n \techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n \texit ;;\n     *:FreeBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\tcase ${UNAME_MACHINE} in\n+\t    pc98)\n+\t\techo i386-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t    amd64)\n+\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t    *)\n+\t\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\tesac\n \texit ;;\n     i*:CYGWIN*:*)\n \techo ${UNAME_MACHINE}-pc-cygwin\n@@ -780,7 +791,10 @@ EOF\n \techo ${UNAME_MACHINE}-pc-pw32\n \texit ;;\n     x86:Interix*:[345]*)\n-\techo i586-pc-interix${UNAME_RELEASE}|sed -e 's/\\..*//'\n+\techo i586-pc-interix${UNAME_RELEASE}\n+\texit ;;\n+    EM64T:Interix*:[345]*)\n+\techo x86_64-unknown-interix${UNAME_RELEASE}\n \texit ;;\n     [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n \techo i${UNAME_MACHINE}-pc-mks\n@@ -851,7 +865,11 @@ EOF\n \t#endif\n \t#endif\n EOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`\n+\teval \"`$CC_FOR_BUILD -E $dummy.c 2>/dev/null | sed -n '\n+\t    /^CPU/{\n+\t\ts: ::g\n+\t\tp\n+\t    }'`\"\n \ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-gnu\"; exit; }\n \t;;\n     mips64:Linux:*:*)\n@@ -870,7 +888,11 @@ EOF\n \t#endif\n \t#endif\n EOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`\n+\teval \"`$CC_FOR_BUILD -E $dummy.c 2>/dev/null | sed -n '\n+\t    /^CPU/{\n+\t\ts: ::g\n+\t\tp\n+\t    }'`\"\n \ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-gnu\"; exit; }\n \t;;\n     or32:Linux:*:*)\n@@ -919,6 +941,9 @@ EOF\n     sparc:Linux:*:* | sparc64:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-gnu\n \texit ;;\n+    vax:Linux:*:*)\n+\techo ${UNAME_MACHINE}-dec-linux-gnu\n+\texit ;;\n     x86_64:Linux:*:*)\n \techo x86_64-unknown-linux-gnu\n \texit ;;\n@@ -964,7 +989,7 @@ EOF\n \tLIBC=gnulibc1\n \t# endif\n \t#else\n-\t#ifdef __INTEL_COMPILER\n+\t#if defined(__INTEL_COMPILER) || defined(__PGI) || defined(__SUNPRO_C) || defined(__SUNPRO_CC)\n \tLIBC=gnu\n \t#else\n \tLIBC=gnuaout\n@@ -974,7 +999,11 @@ EOF\n \tLIBC=dietlibc\n \t#endif\n EOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`\n+\teval \"`$CC_FOR_BUILD -E $dummy.c 2>/dev/null | sed -n '\n+\t    /^LIBC/{\n+\t\ts: ::g\n+\t\tp\n+\t    }'`\"\n \ttest x\"${LIBC}\" != x && {\n \t\techo \"${UNAME_MACHINE}-pc-linux-${LIBC}\"\n \t\texit\n@@ -1263,6 +1292,9 @@ EOF\n     i*86:skyos:*:*)\n \techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n \texit ;;\n+    i*86:rdos:*:*)\n+\techo ${UNAME_MACHINE}-pc-rdos\n+\texit ;;\n esac\n \n #echo '(No uname command or uname output not recognized.)' 1>&2"}, {"sha": "4d936e2394287d298aa1764d3f8760ca000c6edb", "filename": "libjava/classpath/config.sub", "status": "modified", "additions": 44, "deletions": 29, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.sub?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,9 +1,10 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-#   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,\n+#   Inc.\n \n-timestamp='2005-12-06'\n+timestamp='2006-05-13'\n \n # This file is (in principle) common to ALL GNU software.\n # The presence of a machine in this file suggests that SOME GNU software\n@@ -119,8 +120,9 @@ esac\n # Here we must recognize all the valid KERNEL-OS combinations.\n maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n case $maybe_os in\n-  nto-qnx* | linux-gnu* | linux-dietlibc | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | \\\n-  kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)\n+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-newlib* | linux-uclibc* | \\\n+  uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | \\\n+  storm-chaos* | os2-emx* | rtmk-nova*)\n     os=-$maybe_os\n     basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n     ;;\n@@ -247,7 +249,8 @@ case $basic_machine in\n \t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n \t| i370 | i860 | i960 | ia64 \\\n \t| ip2k | iq2000 \\\n-\t| m32r | m32rle | m68000 | m68k | m88k | maxq | mcore \\\n+\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n+\t| maxq | mb | microblaze | mcore \\\n \t| mips | mipsbe | mipseb | mipsel | mipsle \\\n \t| mips16 \\\n \t| mips64 | mips64el \\\n@@ -267,37 +270,35 @@ case $basic_machine in\n \t| mn10200 | mn10300 \\\n \t| mt \\\n \t| msp430 \\\n+\t| nios | nios2 \\\n \t| ns16k | ns32k \\\n \t| or32 \\\n \t| pdp10 | pdp11 | pj | pjl \\\n \t| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \\\n \t| pyramid \\\n-\t| sh | sh[1234] | sh[24]a | sh[23]e | sh[34]eb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh | sh[1234] | sh[24]a | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n \t| sh64 | sh64le \\\n-\t| sparc | sparc64 | sparc64b | sparc86x | sparclet | sparclite \\\n-\t| sparcv8 | sparcv9 | sparcv9b \\\n-\t| strongarm \\\n+\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n+\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n+\t| spu | strongarm \\\n \t| tahoe | thumb | tic4x | tic80 | tron \\\n \t| v850 | v850e \\\n \t| we32k \\\n \t| x86 | xscale | xscalee[bl] | xstormy16 | xtensa \\\n \t| z8k)\n \t\tbasic_machine=$basic_machine-unknown\n \t\t;;\n-\tm32c)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n \tm6811 | m68hc11 | m6812 | m68hc12)\n \t\t# Motorola 68HC11/12.\n \t\tbasic_machine=$basic_machine-unknown\n \t\tos=-none\n \t\t;;\n \tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n \t\t;;\n+\tms1)\n+\t\tbasic_machine=mt-unknown\n+\t\t;;\n \n-        ms1)\n-\t    basic_machine=mt-unknown\n-\t    ;;\n \t# We use `pc' rather than `unknown'\n \t# because (1) that's what they normally are, and\n \t# (2) the word \"unknown\" tends to confuse beginning users.\n@@ -327,7 +328,7 @@ case $basic_machine in\n \t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n \t| i*86-* | i860-* | i960-* | ia64-* \\\n \t| ip2k-* | iq2000-* \\\n-\t| m32r-* | m32rle-* \\\n+\t| m32c-* | m32r-* | m32rle-* \\\n \t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n \t| m88110-* | m88k-* | maxq-* | mcore-* \\\n \t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n@@ -349,17 +350,18 @@ case $basic_machine in\n \t| mmix-* \\\n \t| mt-* \\\n \t| msp430-* \\\n+\t| nios-* | nios2-* \\\n \t| none-* | np1-* | ns16k-* | ns32k-* \\\n \t| orion-* \\\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \\\n \t| pyramid-* \\\n \t| romp-* | rs6000-* \\\n-\t| sh-* | sh[1234]-* | sh[24]a-* | sh[23]e-* | sh[34]eb-* | shbe-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n \t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n-\t| sparc-* | sparc64-* | sparc64b-* | sparc86x-* | sparclet-* \\\n+\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n \t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | strongarm-* | sv1-* | sx?-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | strongarm-* | sv1-* | sx?-* \\\n \t| tahoe-* | thumb-* \\\n \t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n \t| tron-* \\\n@@ -370,8 +372,6 @@ case $basic_machine in\n \t| ymp-* \\\n \t| z8k-*)\n \t\t;;\n-\tm32c-*)\n-\t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n \t386bsd)\n@@ -708,7 +708,7 @@ case $basic_machine in\n \t\tos=-msdos\n \t\t;;\n \tms1-*)\n-\t        basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n \t\t;;\n \tmvs)\n \t\tbasic_machine=i370-ibm\n@@ -817,6 +817,12 @@ case $basic_machine in\n \tpc532 | pc532-*)\n \t\tbasic_machine=ns32k-pc532\n \t\t;;\n+\tpc98)\n+\t\tbasic_machine=i386-pc\n+\t\t;;\n+\tpc98-*)\n+\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n \tpentium | p5 | k5 | k6 | nexgen | viac3)\n \t\tbasic_machine=i586-pc\n \t\t;;\n@@ -873,6 +879,10 @@ case $basic_machine in\n \t\tbasic_machine=i586-unknown\n \t\tos=-pw32\n \t\t;;\n+\trdos)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-rdos\n+\t\t;;\n \trom68k)\n \t\tbasic_machine=m68k-rom68k\n \t\tos=-coff\n@@ -1115,7 +1125,7 @@ case $basic_machine in\n \tsh[1234] | sh[24]a | sh[34]eb | sh[1234]le | sh[23]ele)\n \t\tbasic_machine=sh-unknown\n \t\t;;\n-\tsparc | sparcv8 | sparcv9 | sparcv9b)\n+\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n \t\tbasic_machine=sparc-sun\n \t\t;;\n \tcydra)\n@@ -1188,21 +1198,23 @@ case $os in\n \t      | -aos* \\\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n-\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* | -openbsd* \\\n+\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n+\t      | -openbsd* | -solidbsd* \\\n \t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n \t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n \t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n \t      | -chorusos* | -chorusrdb* \\\n \t      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n-\t      | -mingw32* | -linux-gnu* | -linux-uclibc* | -uxpv* | -beos* | -mpeix* | -udk* \\\n+\t      | -mingw32* | -linux-gnu* | -linux-newlib* | -linux-uclibc* \\\n+\t      | -uxpv* | -beos* | -mpeix* | -udk* \\\n \t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n \t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n \t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n \t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku*)\n+\t      | -skyos* | -haiku* | -rdos*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)\n@@ -1354,6 +1366,9 @@ else\n # system, and we'll never get to this point.\n \n case $basic_machine in\n+        spu-*)\n+\t\tos=-elf\n+\t\t;;\n \t*-acorn)\n \t\tos=-riscix1.2\n \t\t;;\n@@ -1363,9 +1378,9 @@ case $basic_machine in\n \tarm*-semi)\n \t\tos=-aout\n \t\t;;\n-    c4x-* | tic4x-*)\n-        os=-coff\n-        ;;\n+        c4x-* | tic4x-*)\n+        \tos=-coff\n+\t\t;;\n \t# This must come before the *-dec entry.\n \tpdp10-*)\n \t\tos=-tops20"}, {"sha": "c8f930f8651a395c891a8980cf8aa0125eec9aa2", "filename": "libjava/classpath/configure", "status": "modified", "additions": 513, "deletions": 19, "changes": 532, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.59 for GNU Classpath 0.92-pre.\n+# Generated by GNU Autoconf 2.59 for GNU Classpath 0.92.\n #\n # Report bugs to <classpath@gnu.org>.\n #\n@@ -269,8 +269,8 @@ SHELL=${CONFIG_SHELL-/bin/sh}\n # Identity of this package.\n PACKAGE_NAME='GNU Classpath'\n PACKAGE_TARNAME='classpath'\n-PACKAGE_VERSION='0.92-pre'\n-PACKAGE_STRING='GNU Classpath 0.92-pre'\n+PACKAGE_VERSION='0.92'\n+PACKAGE_STRING='GNU Classpath 0.92'\n PACKAGE_BUGREPORT='classpath@gnu.org'\n \n ac_unique_file=\"java/lang/System.java\"\n@@ -312,7 +312,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE nativeexeclibdir glibjdir VM_BINARY FOUND_CACAO_TRUE FOUND_CACAO_FALSE CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE RANLIB ac_ct_RANLIB LIBTOOL CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS XTEST_LIBS QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH USER_SPECIFIED_JAVAH_TRUE USER_SPECIFIED_JAVAH_FALSE CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC GCJX ECJ FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE FOUND_GCJX_TRUE FOUND_GCJX_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE nativeexeclibdir glibjdir VM_BINARY FOUND_CACAO_TRUE FOUND_CACAO_FALSE CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE RANLIB ac_ct_RANLIB LIBTOOL CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH USER_SPECIFIED_JAVAH_TRUE USER_SPECIFIED_JAVAH_FALSE CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC GCJX ECJ FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE FOUND_GCJX_TRUE FOUND_GCJX_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -793,7 +793,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures GNU Classpath 0.92-pre to adapt to many kinds of systems.\n+\\`configure' configures GNU Classpath 0.92 to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -864,7 +864,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of GNU Classpath 0.92-pre:\";;\n+     short | recursive ) echo \"Configuration of GNU Classpath 0.92:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -874,6 +874,12 @@ Optional Features:\n   --enable-collections    create collections.jar default=no\n   --enable-jni            compile JNI source default=yes\n   --enable-core-jni       compile JNI sources for core default=yes\n+  --enable-default-preferences-peer\n+                          fully qualified class name of default Preferences\n+                          API Backend\n+  --disable-gconf-peer    compile GConf native peers (disabled by\n+                          --disable-jni) default=yes\n+\n   --enable-Werror         whether to compile C code with -Werror which turns\n                           any compiler warning into a compilation failure\n                           default=no\n@@ -888,7 +894,6 @@ Optional Features:\n                           default=yes\n   --disable-gtk-peer      compile GTK native peers (disabled by --disable-jni)\n                           default=yes\n-\n   --enable-qt-peer        compile Qt4 native peers (disabled by --disable-jni)\n                           default=no\n   --disable-plugin        compile gcjwebplugin (disabled by --disable-plugin)\n@@ -944,6 +949,7 @@ Optional Packages:\n                           path to the jay executable\n   --with-glibj-zip=ABS.PATH\n                           use prebuilt glibj.zip class library\n+  --with-escher=ABS.PATH  specify path to escher dir or JAR for X peers\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -1056,7 +1062,7 @@ fi\n test -n \"$ac_init_help\" && exit 0\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-GNU Classpath configure 0.92-pre\n+GNU Classpath configure 0.92\n generated by GNU Autoconf 2.59\n \n Copyright (C) 2003 Free Software Foundation, Inc.\n@@ -1070,7 +1076,7 @@ cat >&5 <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by GNU Classpath $as_me 0.92-pre, which was\n+It was created by GNU Classpath $as_me 0.92, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   $ $0 $@\n@@ -1818,7 +1824,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='classpath'\n- VERSION='0.92-pre'\n+ VERSION='0.92'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -2100,6 +2106,46 @@ else\n fi\n \n \n+# Check whether --enable-default-preferences-peer or --disable-default-preferences-peer was given.\n+if test \"${enable_default_preferences_peer+set}\" = set; then\n+  enableval=\"$enable_default_preferences_peer\"\n+\n+fi;\n+DEFAULT_PREFS_PEER=$enable_default_preferences_peer\n+if test \"$DEFAULT_PREFS_PEER\" = \"\"; then\n+   DEFAULT_PREFS_PEER=gnu.java.util.prefs.FileBasedFactory\n+fi\n+\n+# Check whether --enable-gconf-peer or --disable-gconf-peer was given.\n+if test \"${enable_gconf_peer+set}\" = set; then\n+  enableval=\"$enable_gconf_peer\"\n+  case \"${enableval}\" in\n+                yes) COMPILE_GCONF_PEER=yes ;;\n+                no) COMPILE_GCONF_PEER=no ;;\n+                *) COMPILE_GCONF_PEER=yes ;;\n+              esac\n+else\n+  COMPILE_GCONF_PEER=yes\n+fi;\n+\n+\n+if test \"x${COMPILE_GCONF_PEER}\" = xyes; then\n+  CREATE_GCONF_PEER_LIBRARIES_TRUE=\n+  CREATE_GCONF_PEER_LIBRARIES_FALSE='#'\n+else\n+  CREATE_GCONF_PEER_LIBRARIES_TRUE='#'\n+  CREATE_GCONF_PEER_LIBRARIES_FALSE=\n+fi\n+\n+\n+# Check whether --enable-gconf-peers or --disable-gconf-peers was given.\n+if test \"${enable_gconf_peers+set}\" = set; then\n+  enableval=\"$enable_gconf_peers\"\n+  { { echo \"$as_me:$LINENO: error: No --enable-gconf-peers (or --disable-gconf-peers) option; you want --enable-gconf-peer\" >&5\n+echo \"$as_me: error: No --enable-gconf-peers (or --disable-gconf-peers) option; you want --enable-gconf-peer\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi;\n+\n # Check whether --enable-Werror or --disable-Werror was given.\n if test \"${enable_Werror+set}\" = set; then\n   enableval=\"$enable_Werror\"\n@@ -5666,7 +5712,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5669 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5715 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -10007,15 +10053,15 @@ ac_x_header_dirs='\n /usr/openwin/share/include'\n \n if test \"$ac_x_includes\" = no; then\n-  # Guess where to find include files, by looking for Intrinsic.h.\n+  # Guess where to find include files, by looking for Xlib.h.\n   # First, try using that file with no special directory specified.\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Intrinsic.h>\n+#include <X11/Xlib.h>\n _ACEOF\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n   (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n@@ -10042,7 +10088,7 @@ else\n sed 's/^/| /' conftest.$ac_ext >&5\n \n   for ac_dir in $ac_x_header_dirs; do\n-  if test -r \"$ac_dir/X11/Intrinsic.h\"; then\n+  if test -r \"$ac_dir/X11/Xlib.h\"; then\n     ac_x_includes=$ac_dir\n     break\n   fi\n@@ -10063,11 +10109,11 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Intrinsic.h>\n+#include <X11/Xlib.h>\n int\n main ()\n {\n-XtMalloc (0)\n+XrmInitialize ()\n   ;\n   return 0;\n }\n@@ -11829,6 +11875,213 @@ fi\n \n \n \n+  fi\n+\n+    if  test \"x${COMPILE_GCONF_PEER}\" = xyes; then\n+\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    # Extract the first word of \"pkg-config\", so it can be a program name with args.\n+set dummy pkg-config; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $PKG_CONFIG in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_path_PKG_CONFIG\" && ac_cv_path_PKG_CONFIG=\"no\"\n+  ;;\n+esac\n+fi\n+PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n+\n+if test -n \"$PKG_CONFIG\"; then\n+  echo \"$as_me:$LINENO: result: $PKG_CONFIG\" >&5\n+echo \"${ECHO_T}$PKG_CONFIG\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        echo \"$as_me:$LINENO: checking for gconf-2.0 >= 2.11.2\" >&5\n+echo $ECHO_N \"checking for gconf-2.0 >= 2.11.2... $ECHO_C\" >&6\n+\n+        if $PKG_CONFIG --exists \"gconf-2.0 >= 2.11.2\" ; then\n+            echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+            succeeded=yes\n+\n+            echo \"$as_me:$LINENO: checking GCONF_CFLAGS\" >&5\n+echo $ECHO_N \"checking GCONF_CFLAGS... $ECHO_C\" >&6\n+            GCONF_CFLAGS=`$PKG_CONFIG --cflags \"gconf-2.0 >= 2.11.2\"`\n+            echo \"$as_me:$LINENO: result: $GCONF_CFLAGS\" >&5\n+echo \"${ECHO_T}$GCONF_CFLAGS\" >&6\n+\n+            echo \"$as_me:$LINENO: checking GCONF_LIBS\" >&5\n+echo $ECHO_N \"checking GCONF_LIBS... $ECHO_C\" >&6\n+            GCONF_LIBS=`$PKG_CONFIG --libs \"gconf-2.0 >= 2.11.2\"`\n+            echo \"$as_me:$LINENO: result: $GCONF_LIBS\" >&5\n+echo \"${ECHO_T}$GCONF_LIBS\" >&6\n+        else\n+            GCONF_CFLAGS=\"\"\n+            GCONF_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but\n+            ## do set a variable so people can do so.\n+            GCONF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"gconf-2.0 >= 2.11.2\"`\n+            echo $GCONF_PKG_ERRORS\n+        fi\n+\n+\n+\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     :\n+  else\n+     { { echo \"$as_me:$LINENO: error: Library requirements (gconf-2.0 >= 2.11.2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&5\n+echo \"$as_me: error: Library requirements (gconf-2.0 >= 2.11.2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  fi\n+\n+\n+\n+\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    # Extract the first word of \"pkg-config\", so it can be a program name with args.\n+set dummy pkg-config; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $PKG_CONFIG in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_path_PKG_CONFIG\" && ac_cv_path_PKG_CONFIG=\"no\"\n+  ;;\n+esac\n+fi\n+PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n+\n+if test -n \"$PKG_CONFIG\"; then\n+  echo \"$as_me:$LINENO: result: $PKG_CONFIG\" >&5\n+echo \"${ECHO_T}$PKG_CONFIG\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        echo \"$as_me:$LINENO: checking for gdk-2.0 >= 2.8\" >&5\n+echo $ECHO_N \"checking for gdk-2.0 >= 2.8... $ECHO_C\" >&6\n+\n+        if $PKG_CONFIG --exists \"gdk-2.0 >= 2.8\" ; then\n+            echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+            succeeded=yes\n+\n+            echo \"$as_me:$LINENO: checking GDK_CFLAGS\" >&5\n+echo $ECHO_N \"checking GDK_CFLAGS... $ECHO_C\" >&6\n+            GDK_CFLAGS=`$PKG_CONFIG --cflags \"gdk-2.0 >= 2.8\"`\n+            echo \"$as_me:$LINENO: result: $GDK_CFLAGS\" >&5\n+echo \"${ECHO_T}$GDK_CFLAGS\" >&6\n+\n+            echo \"$as_me:$LINENO: checking GDK_LIBS\" >&5\n+echo $ECHO_N \"checking GDK_LIBS... $ECHO_C\" >&6\n+            GDK_LIBS=`$PKG_CONFIG --libs \"gdk-2.0 >= 2.8\"`\n+            echo \"$as_me:$LINENO: result: $GDK_LIBS\" >&5\n+echo \"${ECHO_T}$GDK_LIBS\" >&6\n+        else\n+            GDK_CFLAGS=\"\"\n+            GDK_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but\n+            ## do set a variable so people can do so.\n+            GDK_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"gdk-2.0 >= 2.8\"`\n+            echo $GDK_PKG_ERRORS\n+        fi\n+\n+\n+\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     :\n+  else\n+     { { echo \"$as_me:$LINENO: error: Library requirements (gdk-2.0 >= 2.8) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&5\n+echo \"$as_me: error: Library requirements (gdk-2.0 >= 2.8) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  fi\n+\n+\n+\n+                USE_GCONF_PREFS_PEER=$enable_default_preferences_peer\n+    if test \"$USE_GCONF_PREFS_PEER\" = \"\"; then\n+   \tDEFAULT_PREFS_PEER=gnu.java.util.prefs.GConfBasedFactory\n+    fi\n   fi\n \n     if test \"x${COMPILE_QT_PEER}\" = xyes; then\n@@ -12004,6 +12257,41 @@ do\n done\n done\n \n+fi\n+fi\n+MOC=$ac_cv_prog_MOC\n+if test -n \"$MOC\"; then\n+  echo \"$as_me:$LINENO: result: $MOC\" >&5\n+echo \"${ECHO_T}$MOC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+\t# Extract the first word of \"moc-qt4\", so it can be a program name with args.\n+set dummy moc-qt4; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_MOC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$MOC\"; then\n+  ac_cv_prog_MOC=\"$MOC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_MOC=\"moc-qt4\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n fi\n fi\n MOC=$ac_cv_prog_MOC\n@@ -12375,6 +12663,104 @@ echo \"${ECHO_T}$MOZILLA_LIBS\" >&6\n \n \n \n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     MOZILLA_FOUND=yes\n+  else\n+     MOZILLA_FOUND=no\n+  fi\n+\n+    fi\n+    if test \"x${MOZILLA_FOUND}\" = xno; then\n+\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    # Extract the first word of \"pkg-config\", so it can be a program name with args.\n+set dummy pkg-config; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $PKG_CONFIG in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_path_PKG_CONFIG\" && ac_cv_path_PKG_CONFIG=\"no\"\n+  ;;\n+esac\n+fi\n+PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n+\n+if test -n \"$PKG_CONFIG\"; then\n+  echo \"$as_me:$LINENO: result: $PKG_CONFIG\" >&5\n+echo \"${ECHO_T}$PKG_CONFIG\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        echo \"$as_me:$LINENO: checking for mozilla-firefox-plugin\" >&5\n+echo $ECHO_N \"checking for mozilla-firefox-plugin... $ECHO_C\" >&6\n+\n+        if $PKG_CONFIG --exists \"mozilla-firefox-plugin\" ; then\n+            echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+            succeeded=yes\n+\n+            echo \"$as_me:$LINENO: checking MOZILLA_CFLAGS\" >&5\n+echo $ECHO_N \"checking MOZILLA_CFLAGS... $ECHO_C\" >&6\n+            MOZILLA_CFLAGS=`$PKG_CONFIG --cflags \"mozilla-firefox-plugin\"`\n+            echo \"$as_me:$LINENO: result: $MOZILLA_CFLAGS\" >&5\n+echo \"${ECHO_T}$MOZILLA_CFLAGS\" >&6\n+\n+            echo \"$as_me:$LINENO: checking MOZILLA_LIBS\" >&5\n+echo $ECHO_N \"checking MOZILLA_LIBS... $ECHO_C\" >&6\n+            MOZILLA_LIBS=`$PKG_CONFIG --libs \"mozilla-firefox-plugin\"`\n+            echo \"$as_me:$LINENO: result: $MOZILLA_LIBS\" >&5\n+echo \"${ECHO_T}$MOZILLA_LIBS\" >&6\n+        else\n+            MOZILLA_CFLAGS=\"\"\n+            MOZILLA_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but\n+            ## do set a variable so people can do so.\n+            MOZILLA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"mozilla-firefox-plugin\"`\n+\n+        fi\n+\n+\n+\n      else\n         echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n         echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n@@ -18128,6 +18514,41 @@ fi\n \n \n \n+# Check whether --with-escher or --without-escher was given.\n+if test \"${with_escher+set}\" = set; then\n+  withval=\"$with_escher\"\n+\n+fi;\n+case \"$with_escher\" in\n+\"\")\n+        use_escher=false\n+        ;;\n+\"no\")\n+        use_escher=false\n+        ;;\n+\"yes\")\n+        { { echo \"$as_me:$LINENO: error: Please suply an absolute path to Escher library\" >&5\n+echo \"$as_me: error: Please suply an absolute path to Escher library\" >&2;}\n+   { (exit 1); exit 1; }; }\n+        ;;\n+*)\n+        use_escher=true\n+        PATH_TO_ESCHER=$with_escher\n+        ;;\n+esac;\n+\n+\n+\n+if test x$use_escher = xtrue; then\n+  USE_ESCHER_TRUE=\n+  USE_ESCHER_FALSE='#'\n+else\n+  USE_ESCHER_TRUE='#'\n+  USE_ESCHER_FALSE=\n+fi\n+\n+\n+\n # Check whether --enable-local-sockets or --disable-local-sockets was given.\n if test \"${enable_local_sockets+set}\" = set; then\n   enableval=\"$enable_local_sockets\"\n@@ -18410,7 +18831,27 @@ fi\n \n \n \n-                                                                                                                                                                                                                                                                                                                                                                                  ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile gnu/classpath/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/plugin/Makefile native/target/Makefile native/target/Linux/Makefile native/target/generic/Makefile resource/Makefile scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh tools/Makefile examples/Makefile examples/Makefile.jawt\"\n+\n+                                                                                                                                                                                                                                                                                                                                                                                                                          ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile gnu/classpath/Configuration.java gnu/java/security/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/gconf-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/plugin/Makefile native/target/Makefile native/target/Linux/Makefile native/target/generic/Makefile resource/Makefile resource/META-INF/services/java.util.prefs.PreferencesFactory scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh tools/Makefile examples/Makefile examples/Makefile.jawt examples/Makefile.java2d\"\n+\n+\n+if test \"x${COMPILE_WRAPPERS}\" = xno\n+then\n+                                                            ac_config_files=\"$ac_config_files tools/gappletviewer tools/gjarsigner tools/gkeytool tools/gjar tools/gnative2ascii tools/gserialver\"\n+\n+          ac_config_commands=\"$ac_config_commands gappletviewer\"\n+\n+          ac_config_commands=\"$ac_config_commands gjarsigner\"\n+\n+          ac_config_commands=\"$ac_config_commands gkeytool\"\n+\n+          ac_config_commands=\"$ac_config_commands gjar\"\n+\n+          ac_config_commands=\"$ac_config_commands gnative2ascii\"\n+\n+          ac_config_commands=\"$ac_config_commands gserialver\"\n+\n+fi\n \n \n if test \"x${COMPILE_WRAPPERS}\" = xno\n@@ -18541,6 +18982,13 @@ echo \"$as_me: error: conditional \\\"CREATE_CORE_JNI_LIBRARIES\\\" was never defined\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${CREATE_GCONF_PEER_LIBRARIES_TRUE}\" && test -z \"${CREATE_GCONF_PEER_LIBRARIES_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_GCONF_PEER_LIBRARIES\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"CREATE_GCONF_PEER_LIBRARIES\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${CREATE_XMLJ_LIBRARY_TRUE}\" && test -z \"${CREATE_XMLJ_LIBRARY_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_XMLJ_LIBRARY\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -18751,6 +19199,13 @@ echo \"$as_me: error: conditional \\\"USE_PREBUILT_GLIBJ_ZIP\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${USE_ESCHER_TRUE}\" && test -z \"${USE_ESCHER_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"USE_ESCHER\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"USE_ESCHER\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${ENABLE_LOCAL_SOCKETS_TRUE}\" && test -z \"${ENABLE_LOCAL_SOCKETS_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"ENABLE_LOCAL_SOCKETS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -19029,7 +19484,7 @@ _ASBOX\n } >&5\n cat >&5 <<_CSEOF\n \n-This file was extended by GNU Classpath $as_me 0.92-pre, which was\n+This file was extended by GNU Classpath $as_me 0.92, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -19095,7 +19550,7 @@ _ACEOF\n \n cat >>$CONFIG_STATUS <<_ACEOF\n ac_cs_version=\"\\\\\n-GNU Classpath config.status 0.92-pre\n+GNU Classpath config.status 0.92\n configured by $0, generated by GNU Autoconf 2.59,\n   with options \\\\\"`echo \"$ac_configure_args\" | sed 's/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n \n@@ -19232,6 +19687,7 @@ do\n   \"external/w3c_dom/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES external/w3c_dom/Makefile\" ;;\n   \"external/relaxngDatatype/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES external/relaxngDatatype/Makefile\" ;;\n   \"gnu/classpath/Configuration.java\" ) CONFIG_FILES=\"$CONFIG_FILES gnu/classpath/Configuration.java\" ;;\n+  \"gnu/java/security/Configuration.java\" ) CONFIG_FILES=\"$CONFIG_FILES gnu/java/security/Configuration.java\" ;;\n   \"include/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES include/Makefile\" ;;\n   \"native/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/Makefile\" ;;\n   \"native/fdlibm/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/fdlibm/Makefile\" ;;\n@@ -19244,6 +19700,7 @@ do\n   \"native/jni/java-nio/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-nio/Makefile\" ;;\n   \"native/jni/java-util/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-util/Makefile\" ;;\n   \"native/jni/gtk-peer/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/gtk-peer/Makefile\" ;;\n+  \"native/jni/gconf-peer/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/gconf-peer/Makefile\" ;;\n   \"native/jni/qt-peer/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/qt-peer/Makefile\" ;;\n   \"native/jni/xmlj/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/xmlj/Makefile\" ;;\n   \"native/jni/midi-alsa/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/midi-alsa/Makefile\" ;;\n@@ -19253,6 +19710,7 @@ do\n   \"native/target/Linux/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/target/Linux/Makefile\" ;;\n   \"native/target/generic/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/target/generic/Makefile\" ;;\n   \"resource/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES resource/Makefile\" ;;\n+  \"resource/META-INF/services/java.util.prefs.PreferencesFactory\" ) CONFIG_FILES=\"$CONFIG_FILES resource/META-INF/services/java.util.prefs.PreferencesFactory\" ;;\n   \"scripts/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES scripts/Makefile\" ;;\n   \"scripts/classpath.spec\" ) CONFIG_FILES=\"$CONFIG_FILES scripts/classpath.spec\" ;;\n   \"lib/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES lib/Makefile\" ;;\n@@ -19261,13 +19719,26 @@ do\n   \"tools/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES tools/Makefile\" ;;\n   \"examples/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile\" ;;\n   \"examples/Makefile.jawt\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile.jawt\" ;;\n+  \"examples/Makefile.java2d\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile.java2d\" ;;\n+  \"tools/gappletviewer\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gappletviewer\" ;;\n+  \"tools/gjarsigner\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gjarsigner\" ;;\n+  \"tools/gkeytool\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gkeytool\" ;;\n+  \"tools/gjar\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gjar\" ;;\n+  \"tools/gnative2ascii\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gnative2ascii\" ;;\n+  \"tools/gserialver\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gserialver\" ;;\n   \"tools/appletviewer\" ) CONFIG_FILES=\"$CONFIG_FILES tools/appletviewer\" ;;\n   \"tools/jarsigner\" ) CONFIG_FILES=\"$CONFIG_FILES tools/jarsigner\" ;;\n   \"tools/keytool\" ) CONFIG_FILES=\"$CONFIG_FILES tools/keytool\" ;;\n   \"$ac_config_links_1\" ) CONFIG_LINKS=\"$CONFIG_LINKS $ac_config_links_1\" ;;\n   \"depfiles\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n   \"mkcollections.pl\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS mkcollections.pl\" ;;\n   \"$ac_stdint_h\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS $ac_stdint_h\" ;;\n+  \"gappletviewer\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gappletviewer\" ;;\n+  \"gjarsigner\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gjarsigner\" ;;\n+  \"gkeytool\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gkeytool\" ;;\n+  \"gjar\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gjar\" ;;\n+  \"gnative2ascii\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gnative2ascii\" ;;\n+  \"gserialver\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gserialver\" ;;\n   \"appletviewer\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS appletviewer\" ;;\n   \"jarsigner\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS jarsigner\" ;;\n   \"keytool\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS keytool\" ;;\n@@ -19403,6 +19874,8 @@ s,@CREATE_JNI_LIBRARIES_TRUE@,$CREATE_JNI_LIBRARIES_TRUE,;t t\n s,@CREATE_JNI_LIBRARIES_FALSE@,$CREATE_JNI_LIBRARIES_FALSE,;t t\n s,@CREATE_CORE_JNI_LIBRARIES_TRUE@,$CREATE_CORE_JNI_LIBRARIES_TRUE,;t t\n s,@CREATE_CORE_JNI_LIBRARIES_FALSE@,$CREATE_CORE_JNI_LIBRARIES_FALSE,;t t\n+s,@CREATE_GCONF_PEER_LIBRARIES_TRUE@,$CREATE_GCONF_PEER_LIBRARIES_TRUE,;t t\n+s,@CREATE_GCONF_PEER_LIBRARIES_FALSE@,$CREATE_GCONF_PEER_LIBRARIES_FALSE,;t t\n s,@default_toolkit@,$default_toolkit,;t t\n s,@CREATE_XMLJ_LIBRARY_TRUE@,$CREATE_XMLJ_LIBRARY_TRUE,;t t\n s,@CREATE_XMLJ_LIBRARY_FALSE@,$CREATE_XMLJ_LIBRARY_FALSE,;t t\n@@ -19478,6 +19951,10 @@ s,@FREETYPE2_LIBS@,$FREETYPE2_LIBS,;t t\n s,@PANGOFT2_CFLAGS@,$PANGOFT2_CFLAGS,;t t\n s,@PANGOFT2_LIBS@,$PANGOFT2_LIBS,;t t\n s,@XTEST_LIBS@,$XTEST_LIBS,;t t\n+s,@GCONF_CFLAGS@,$GCONF_CFLAGS,;t t\n+s,@GCONF_LIBS@,$GCONF_LIBS,;t t\n+s,@GDK_CFLAGS@,$GDK_CFLAGS,;t t\n+s,@GDK_LIBS@,$GDK_LIBS,;t t\n s,@QT_CFLAGS@,$QT_CFLAGS,;t t\n s,@QT_LIBS@,$QT_LIBS,;t t\n s,@MOC@,$MOC,;t t\n@@ -19541,8 +20018,12 @@ s,@REGEN_PARSERS_FALSE@,$REGEN_PARSERS_FALSE,;t t\n s,@USE_PREBUILT_GLIBJ_ZIP_TRUE@,$USE_PREBUILT_GLIBJ_ZIP_TRUE,;t t\n s,@USE_PREBUILT_GLIBJ_ZIP_FALSE@,$USE_PREBUILT_GLIBJ_ZIP_FALSE,;t t\n s,@PATH_TO_GLIBJ_ZIP@,$PATH_TO_GLIBJ_ZIP,;t t\n+s,@USE_ESCHER_TRUE@,$USE_ESCHER_TRUE,;t t\n+s,@USE_ESCHER_FALSE@,$USE_ESCHER_FALSE,;t t\n+s,@PATH_TO_ESCHER@,$PATH_TO_ESCHER,;t t\n s,@ENABLE_LOCAL_SOCKETS_TRUE@,$ENABLE_LOCAL_SOCKETS_TRUE,;t t\n s,@ENABLE_LOCAL_SOCKETS_FALSE@,$ENABLE_LOCAL_SOCKETS_FALSE,;t t\n+s,@DEFAULT_PREFS_PEER@,$DEFAULT_PREFS_PEER,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t\n s,@LTLIBOBJS@,$LTLIBOBJS,;t t\n CEOF\n@@ -20843,6 +21324,12 @@ echo \"$as_me: error: cannot create directory \\\"$ac_dir\\\"\" >&2;}\n       mv $ac_stdint $ac_stdint_h\n     fi\n  ;;\n+    gappletviewer ) chmod 755 tools/gappletviewer ;;\n+    gjarsigner ) chmod 755 tools/gjarsigner ;;\n+    gkeytool ) chmod 755 tools/gkeytool ;;\n+    gjar ) chmod 755 tools/gjar ;;\n+    gnative2ascii ) chmod 755 tools/gnative2ascii ;;\n+    gserialver ) chmod 755 tools/gserialver ;;\n     appletviewer ) chmod 755 tools/appletviewer ;;\n     jarsigner ) chmod 755 tools/jarsigner ;;\n     keytool ) chmod 755 tools/keytool ;;\n@@ -20881,3 +21368,10 @@ if test \"$no_create\" != yes; then\n   $ac_cs_success || { (exit 1); exit 1; }\n fi\n \n+\n+# Create standard.omit based on decisions we just made.\n+cat ${srcdir}/lib/standard.omit.in > lib/standard.omit\n+if test x$use_escher != xtrue; then\n+   echo gnu/java/awt/peer/x/.*java$ >> lib/standard.omit\n+fi\n+"}, {"sha": "800c4520ed51ff185bcabe91b04e278a3387659f", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 110, "deletions": 2, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.92-pre],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.92],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n \n AC_CANONICAL_TARGET\n@@ -82,6 +82,36 @@ AC_ARG_ENABLE([core-jni],\n               [COMPILE_CORE_JNI=yes])\n AM_CONDITIONAL(CREATE_CORE_JNI_LIBRARIES, test \"x${COMPILE_CORE_JNI}\" = xyes)\n \n+dnl -----------------------------------------------------------\n+dnl Default Preference Backend\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE(default-preferences-peer,\n+  AS_HELP_STRING([--enable-default-preferences-peer],\n+                 [fully qualified class name of default Preferences API Backend]))\n+DEFAULT_PREFS_PEER=$enable_default_preferences_peer\n+if test \"$DEFAULT_PREFS_PEER\" = \"\"; then\n+   DEFAULT_PREFS_PEER=gnu.java.util.prefs.FileBasedFactory\n+fi\n+dnl AC_SUBST(DEFAULT_PREFS_PEER)\n+\n+dnl -----------------------------------------------------------\n+dnl GConf native peer (enabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([gconf-peer],\n+              [AS_HELP_STRING(--disable-gconf-peer,compile GConf native peers (disabled by --disable-jni) [default=yes])],\n+              [case \"${enableval}\" in\n+                yes) COMPILE_GCONF_PEER=yes ;;\n+                no) COMPILE_GCONF_PEER=no ;;\n+                *) COMPILE_GCONF_PEER=yes ;;\n+              esac],\n+              [COMPILE_GCONF_PEER=yes])\n+AM_CONDITIONAL(CREATE_GCONF_PEER_LIBRARIES, test \"x${COMPILE_GCONF_PEER}\" = xyes)\n+\n+dnl -----------------------------------------------------------\n+dnl GTK native peer error checking\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([gconf-peers],,AC_MSG_ERROR([No --enable-gconf-peers (or --disable-gconf-peers) option; you want --enable-gconf-peer]))\n+\n dnl ------------------------------------------------------------\n dnl Whether to compile with -Werror or not (disabled by default)\n dnl ------------------------------------------------------------\n@@ -432,6 +462,24 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n     AC_SUBST(XTEST_LIBS)\n   fi\n \n+  dnl gconf-peer\n+  if  test \"x${COMPILE_GCONF_PEER}\" = xyes; then\n+    PKG_CHECK_MODULES(GCONF, gconf-2.0 >= 2.11.2)\n+    AC_SUBST(GCONF_CFLAGS)\n+    AC_SUBST(GCONF_LIBS)\n+    dnl we also need gdk for locking\n+    PKG_CHECK_MODULES(GDK, gdk-2.0 >= 2.8)\n+    AC_SUBST(GDK_CFLAGS)\n+    AC_SUBST(GDK_LIBS)\n+    dnl check if the config value was given form the command line,\n+    dnl if not, overwrite the default if we have the gconf backend\n+    dnl compiled in\n+    USE_GCONF_PREFS_PEER=$enable_default_preferences_peer\n+    if test \"$USE_GCONF_PREFS_PEER\" = \"\"; then\n+   \tDEFAULT_PREFS_PEER=gnu.java.util.prefs.GConfBasedFactory\n+    fi\n+  fi\n+\n   dnl Check for AWT related Qt4\n   if test \"x${COMPILE_QT_PEER}\" = xyes; then\n     PKG_CHECK_MODULES(QT, QtCore QtGui >= 4.1.0, HAVE_QT4=\"yes\", HAVE_QT4=\"no\")\n@@ -446,6 +494,7 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \tQT_CFLAGS=\"$QT_CFLAGS -I$EXTRA_QT_INCLUDE_DIR\",\n \tAC_MSG_WARN([QWidget not found])))\n \tAC_CHECK_PROG(MOC, [moc], [moc])\n+\tAC_CHECK_PROG(MOC, [moc-qt4], [moc-qt4])\n     fi\n     if test \"x$HAVE_QT4\" = \"xno\"; then\n       AC_MSG_NOTICE([Looking for QT_CFLAGS and QT_LIBS without pkg-config])\n@@ -490,6 +539,9 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n     if test \"x${MOZILLA_FOUND}\" = xno; then\n       PKG_CHECK_MODULES(MOZILLA, xulrunner-plugin, [MOZILLA_FOUND=yes], [MOZILLA_FOUND=no])\n     fi\n+    if test \"x${MOZILLA_FOUND}\" = xno; then\n+      PKG_CHECK_MODULES(MOZILLA, mozilla-firefox-plugin, [MOZILLA_FOUND=yes], [MOZILLA_FOUND=no])\n+    fi\n     PKG_CHECK_MODULES(GLIB, glib-2.0)\n \n     AC_SUBST(MOZILLA_CFLAGS)\n@@ -671,6 +723,30 @@ esac;\n AM_CONDITIONAL(USE_PREBUILT_GLIBJ_ZIP, test x$use_glibj_zip = xtrue)\n AC_SUBST(PATH_TO_GLIBJ_ZIP)\n \n+dnl -----------------------------------------------------------\n+dnl Build with Escher based X peers.\n+dnl -----------------------------------------------------------\n+AC_ARG_WITH([escher],\n+\t AS_HELP_STRING([--with-escher=ABS.PATH],\n+\t                [specify path to escher dir or JAR for X peers]))\n+case \"$with_escher\" in\n+\"\")\n+        use_escher=false\n+        ;;\n+\"no\")\n+        use_escher=false\n+        ;;\n+\"yes\")\n+        AC_MSG_ERROR([Please suply an absolute path to Escher library])\n+        ;;\n+*)\n+        use_escher=true\n+        PATH_TO_ESCHER=$with_escher\n+        ;;\n+esac;\n+\n+AM_CONDITIONAL(USE_ESCHER, test x$use_escher = xtrue)\n+AC_SUBST(PATH_TO_ESCHER)\n \n dnl -----------------------------------------------------------\n dnl Check if local socket support should be included.\n@@ -695,6 +771,10 @@ then\n fi\n AM_CONDITIONAL(ENABLE_LOCAL_SOCKETS, test \"x$ENABLE_LOCAL_SOCKETS\" = \"xyes\")\n \n+dnl -----------------------------------------------------------\n+dnl Add the default preference peer\n+dnl -----------------------------------------------------------\n+AC_SUBST(DEFAULT_PREFS_PEER)\n \n dnl -----------------------------------------------------------\n dnl output files\n@@ -707,6 +787,7 @@ external/sax/Makefile\n external/w3c_dom/Makefile\n external/relaxngDatatype/Makefile\n gnu/classpath/Configuration.java\n+gnu/java/security/Configuration.java\n include/Makefile\n native/Makefile\n native/fdlibm/Makefile\n@@ -719,6 +800,7 @@ native/jni/java-net/Makefile\n native/jni/java-nio/Makefile\n native/jni/java-util/Makefile\n native/jni/gtk-peer/Makefile\n+native/jni/gconf-peer/Makefile\n native/jni/qt-peer/Makefile\n native/jni/xmlj/Makefile\n native/jni/midi-alsa/Makefile\n@@ -728,14 +810,33 @@ native/target/Makefile\n native/target/Linux/Makefile\n native/target/generic/Makefile\n resource/Makefile\n+resource/META-INF/services/java.util.prefs.PreferencesFactory\n scripts/Makefile\n scripts/classpath.spec\n lib/Makefile\n lib/gen-classlist.sh\n lib/copy-vmresources.sh\n tools/Makefile\n examples/Makefile\n-examples/Makefile.jawt])\n+examples/Makefile.jawt\n+examples/Makefile.java2d])\n+\n+if test \"x${COMPILE_WRAPPERS}\" = xno\n+then\n+AC_CONFIG_FILES([tools/gappletviewer\n+tools/gjarsigner\n+tools/gkeytool\n+tools/gjar\n+tools/gnative2ascii\n+tools/gserialver])\n+AC_CONFIG_COMMANDS([gappletviewer],[chmod 755 tools/gappletviewer])\n+AC_CONFIG_COMMANDS([gjarsigner],[chmod 755 tools/gjarsigner])\n+AC_CONFIG_COMMANDS([gkeytool],[chmod 755 tools/gkeytool])\n+AC_CONFIG_COMMANDS([gjar],[chmod 755 tools/gjar])\n+AC_CONFIG_COMMANDS([gnative2ascii],[chmod 755 tools/gnative2ascii])\n+AC_CONFIG_COMMANDS([gserialver],[chmod 755 tools/gserialver])\n+fi\n+\n \n if test \"x${COMPILE_WRAPPERS}\" = xno\n then\n@@ -750,3 +851,10 @@ fi\n AC_CONFIG_COMMANDS([gen-classlist],[chmod 755 lib/gen-classlist.sh])\n AC_CONFIG_COMMANDS([copy-vmresources],[chmod 755 lib/copy-vmresources.sh])\n AC_OUTPUT\n+\n+# Create standard.omit based on decisions we just made.\n+cat ${srcdir}/lib/standard.omit.in > lib/standard.omit\n+if test x$use_escher != xtrue; then\n+   echo gnu/java/awt/peer/x/.*java$ >> lib/standard.omit\n+fi\n+"}, {"sha": "d0fc71edbb3a426f321166fd889d11f8cea2fef9", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -93,6 +93,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -113,6 +115,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -143,6 +146,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -193,6 +200,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -213,6 +221,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@"}, {"sha": "09162650b13f96a38159ffd81117b4ecf609f442", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -86,6 +86,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -106,6 +108,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -136,6 +139,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -186,6 +193,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -206,6 +214,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@"}, {"sha": "28252cdc80912ba124f37f6333a93c47715852da", "filename": "libjava/classpath/doc/tools.texinfo", "status": "modified", "additions": 521, "deletions": 96, "changes": 617, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2Ftools.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2Ftools.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Ftools.texinfo?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -5,7 +5,7 @@\n @settitle GNU Classpath Tools Guide\n @c %**end of header\n \n-@setchapternewpage off\n+@setchapternewpage on\n \n @ifinfo\n This file documents the Tools included in a standard distribution of the GNU\n@@ -23,7 +23,7 @@ Copyright (C) 2006 Free Software Foundation, Inc.\n \n @titlepage\n @title GNU Classpath Tools Guide\n-@author Raif S. Naffah\n+@author The GNU Classpath Team\n \n @page\n @vskip 0pt plus 1filll\n@@ -37,8 +37,10 @@ Permission is granted to copy and distribute translations of this manual into an\n \n @end titlepage\n \n+@contents\n+\n @ifinfo\n-@node Top, Security Tools, (dir), (dir)\n+@node Top, Applet Tools, (dir), (dir)\n @top GNU Classpath Tools Guide\n \n This document contains important information you need to know in order to use\n@@ -51,17 +53,64 @@ Software Development Kit (SDK).\n @end ifinfo\n \n @menu\n+* Applet Tools::               Work with applets\n * Security Tools::             Work securely with Java applications\n * I18N Issues::                How to add support for non-English languages\n \n @detailmenu\n  --- The Detailed Node Listing ---\n \n+Applet Tools\n+\n+* appletviewer Tool::          Load applets\n+* gcjwebplugin::               Load applets in a web browser\n+\n Security Tools\n \n * jarsigner Tool::             Sign and verify .JAR files\n * keytool Tool::               Manage private keys and public certificates\n \n+jarsigner Tool\n+\n+* Common jarsigner Options::   Options used when signing or verifying a file\n+* Signing Options::            Options only used when signing a .JAR file\n+* Verification Options::       Options only used when verifying a .JAR file\n+\n+keytool Tool\n+\n+* Getting Help::               How to get help with keytool commands\n+* Common keytool Options::     Options used in more than one command\n+* Distinguished Names::        X.500 Distinguished Names used in certificates\n+* Add/Update Commands::        Commands for adding data to a Key Store\n+* Export Commands::            Commands for exporting data from a Key Store\n+* Display Commands::           Commands for displaying data in a Key Store\n+* Management Commands::        Commands for managing a Key Store\n+\n+Add/Update Commands\n+\n+* Command -genkey::            Generate private key and self-signed certificate\n+* Command -import::            Import certificates and certificate replies\n+* Command -selfcert::          Generate self-signed certificate\n+* Command -cacert::            Import a CA Trusted Certificate\n+* Command -identitydb::        Import JDK-1 style identities\n+\n+Export Commands\n+\n+* Command -certreq::           Generate Certificate Signing Requests (CSR)\n+* Command -export::            Export a certificate in a Key Store\n+\n+Display Commands\n+\n+* Command -list::              Display information about one or all Aliases\n+* Command -printcert::         Print a certificate or a certificate fingerprint\n+\n+Management Commands\n+\n+* Command -keyclone::          Clone a Key Entry in a Key Store\n+* Command -storepasswd::       Change the password protecting a Key Store\n+* Command -keypasswd::         Change the password protecting a Key Entry\n+* Command -delete::            Remove an entry in a Key Store\n+\n I18N Issues\n \n * Language Resources::         Where resources are located\n@@ -72,11 +121,161 @@ I18N Issues\n \n @comment ----------------------------------------------------------------------\n \n-@node Security Tools, I18N Issues, Top, Top\n+@node Applet Tools, Security Tools, Top, Top\n+@comment node-name, next, previous, up\n+@chapter Applet Tools\n+\n+Two Applet Tools are available with GNU Classpath: @b{appletviewer}\n+and @b{gcjwebplugin}.\n+\n+To avoid conflicts with other implementations, the appletviewer\n+executable is called ``gappletviewer''.\n+\n+@menu\n+* appletviewer Tool::          Load applets\n+* gcjwebplugin::               Load applets in a web browser\n+@end menu\n+\n+If while using these tools you think you found a bug, then please report it at @uref{http://www.gnu.org/software/classpath/bugs.html,classpath-bugs}.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node appletviewer Tool, gcjwebplugin, Applet Tools, Applet Tools\n+@comment node-name, next, previous, up\n+@section The @code{appletviewer} Tool\n+\n+@table @b\n+\n+@item SYNOPSIS\n+@code{appletviewer [OPTION]... URL...}@*\n+@code{appletviewer [OPTION]... -code CODE}@*\n+@code{appletviewer [OPTION]... -plugin INPUT,OUTPUT}\n+\n+@item DESCRIPTION\n+The @code{appletviewer} tool loads and runs an applet.\n+\n+Use the first form to test applets specified by tag.  The URL should\n+resolve to an HTML document from which the @code{appletviewer} will\n+extract applet tags.  The APPLET, EMBED and OBJECT tags are supported.\n+If a given document contains multiple applet tags, all the applets\n+will be loaded, with each applet appearing in its own window.\n+Likewise, when multiple URLs are specified, each applet tag instance\n+is given its own window.  If a given document contains no recognized\n+tags the @code{appletviewer} does nothing.\n+\n+@example\n+@code{appletviewer http://www.gnu.org/software/classpath/}\n+@end example\n+\n+Use the second form to test an applet in development.  This form\n+allows applet tag attributes to be supplied on the command line.  Only\n+one applet may be specified using the @code{-code} option.  The\n+@code{-code} option overrides the URL form -- any URLs specified will\n+be ignored.\n+\n+@example\n+@code{appletviewer -code Test.class -param datafile,data.txt}\n+@end example\n+\n+@code{gcjwebplugin} uses the third form to communicate with the\n+@code{appletviewer} through named pipes.\n+\n+@item URL OPTIONS\n+@table @b\n+@item -debug\n+This option is not yet implemented but is provided for compatibility.\n+\n+@item -encoding CHARSET\n+Use this option to specify an alternate character encoding for the\n+specified HTML page.\n+\n+@end table\n+\n+@item APPLET TAG OPTIONS\n+@table @b\n+@item -code CODE\n+Use the @code{-code} option to specify the value of the applet tag\n+CODE attribute.\n+\n+@item -codebase CODEBASE\n+Use the @code{-codebase} option to specify the value of the applet tag\n+CODEBASE attribute.\n+\n+@item -archive ARCHIVE\n+Use the @code{-archive} option to specify the value of the applet tag\n+ARCHIVE attribute.\n+\n+@item -width WIDTH\n+Use the @code{-width} option to specify the value of the applet tag\n+WIDTH attribute.\n+\n+@item -height HEIGHT\n+Use the @code{-height} option to specify the value of the applet tag\n+HEIGHT attribute.\n+\n+@item -param NAME,VALUE\n+Use the @code{-param} option to specify values for the NAME and VALUE\n+attributes of an applet PARAM tag.\n+\n+@end table\n+\n+@item PLUGIN OPTION\n+@table @b\n+@item -plugin INPUT,OUTPUT\n+@code{gcjwebplugin} uses the @code{-plugin} option to specify the\n+named pipe the @code{appletviewer} should use for receiving commands\n+(INPUT) and the one it should use for sending commands to\n+@code{gcjwebplugin} (OUTPUT).\n+\n+@end table\n+\n+@item DEBUGGING OPTION\n+@table @b\n+@item -verbose\n+Use the @code{-verbose} option to have the @code{appletviewer} print\n+debugging messages.\n+\n+@end table\n+\n+@item STANDARD OPTIONS\n+@table @b\n+@item -help\n+Use the @code{-help} option to have the @code{appletviewer} print a\n+usage message, then exit.\n+\n+@item -version\n+Use the @code{-version} option to have the @code{appletviewer} print\n+its version, then exit.\n+\n+@item -JOPTION\n+Use the @code{-J} option to pass OPTION to the virtual machine that\n+will run the @code{appletviewer}.  Unlike other options, there must\n+not be a space between the -J and OPTION.\n+\n+@end table\n+@end table\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node gcjwebplugin, , appletviewer Tool, Applet Tools\n+@comment node-name, next, previous, up\n+@section The @code{gcjwebplugin} Tool\n+\n+@code{gcjwebplugin} is a plugin that adds applet support to web\n+browsers.  Currently @code{gcjwebplugin} only supports Mozilla-based\n+browsers (e.g., Firefox, Galeon, Mozilla).\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Security Tools, I18N Issues, Applet Tools, Top\n @comment node-name, next, previous, up\n @chapter Security Tools\n \n-Two Security Tools are available with GNU Classpath: @b{jarsugner} and @b{keytool}.\n+Two Security Tools are available with GNU Classpath: @b{jarsigner} and @b{keytool}.\n+\n+To avoid conflicts with other implementations, the jarsigner\n+executable is called ``gjarsigner'' and the keytool executable is\n+called ``gkeytool''.\n \n @menu\n * jarsigner Tool::             Sign and verify .JAR files\n@@ -91,22 +290,59 @@ If while using these tools you think you found a bug, then please report it at @\n @comment node-name, next, previous, up\n @section The @code{jarsigner} Tool\n \n-@table @b\n+The @b{jarsigner} tool is invoked from the command line, in one of two forms, as follows:\n \n-@item SYNOPSIS\n-@code{jarsigner [OPTION]... FILE ALIAS}@*\n+@example\n+@code{jarsigner [OPTION]... FILE ALIAS}\n @code{jarsigner -verify [OPTION]... FILE}\n+@end example\n \n-@item DESCRIPTION\n-When the first form is used, the tool signs the designated JAR file.\n-\n-The second form, on the other hand, is used to verify a previously signed JAR file.\n+When the first form is used, the tool signs the designated JAR file. The second form, on the other hand, is used to verify a previously signed JAR file.\n \n @code{FILE} is the .JAR file to process; i.e. to sign if the first syntax form is used, or to verify if the second syntax form is used instead.\n \n-@code{ALIAS} must be a known @i{Alias} of a @i{Key Entry} in the designated key store. The private key material associated with this @i{Alias} is then used for signing the designated .JAR file.\n+@code{ALIAS} must be a known @i{Alias} of a @i{Key Entry} in the designated @i{Key Store}. The private key material associated with this @i{Alias} is then used for signing the designated .JAR file.\n+\n+@menu\n+* Common jarsigner Options::   Options used when signing or verifying a file\n+* Signing Options::            Options only used when signing a .JAR file\n+* Verification Options::       Options only used when verifying a .JAR file\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Common jarsigner Options, Signing Options, jarsigner Tool, jarsigner Tool\n+@comment node-name, next, previous, up\n+@subsection Common options\n+\n+The following options may be used when the tool is used for either signing, or verifying, a .JAR file.\n+\n+@table @b\n+@item -verbose\n+Use this option to force the tool to generate more verbose messages, during its processing.\n+\n+@item -internalsf\n+When present, the tool will include --which otherwise it does not-- the @code{.SF} file in the @code{.DSA} generated file.\n+\n+@item -sectionsonly\n+When present, the tool will include in the @code{.SF} generated file --which otherwise it does not-- a header containing a hash of the whole manifest file.  When that header is included, the tool can quickly check, during verification, if the hash (in the header) matches or not the manifest file.\n+\n+@item -provider PROVIDER_CLASS_NAME\n+A fully qualified class name of a @i{Security Provider} to add to the current list of @i{Security Providers} already installed in the JVM in-use. If a provider class is specified with this option, and was successfully added to the runtime --i.e. it was not already installed-- then the tool will attempt to remove this @i{Security Provider} before exiting.\n+\n+@item -help\n+Prints a help text similar to this one.\n+\n+@end table\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Signing Options, Verification Options, Common jarsigner Options, jarsigner Tool\n+@comment node-name, next, previous, up\n+@subsection Signing options\n+\n+The following options may be specified when using the tool for signing purposes.\n \n-@item SIGNING OPTIONS\n @table @b\n @item -keystore URL\n Use this option to specify the location of the key store to use. The default value is a file URL referencing the file named @file{.keystore} located in the path returned by the call to @code{java.lang.System#getProperty(String)} using @code{user.home} as argument.\n@@ -129,12 +365,19 @@ Use this option to designate a literal that will be used to construct file names\n \n If this option is missing, the first eight characters of the @code{ALIAS} argument will be used. When this is the case, any character in @code{ALIAS} that is outside the permissible range of characters will be replaced by an underscore.\n \n-@item -signedjar FILE_NAME\n+@item -signedjar FILE\n Use this option to specify the file name of the signed JAR. If this option is omitted, then the signed JAR will be named the same as @code{FILE}; i.e. the input JAR file will be replaced with the signed copy.\n \n @end table\n \n-@item VERIFICATION OPTIONS\n+@comment ----------------------------------------------------------------------\n+\n+@node Verification Options, , Signing Options, jarsigner Tool\n+@comment node-name, next, previous, up\n+@subsection Verification options\n+\n+The following options may be specified when using the tool for verification purposes.\n+\n @table @b\n @item -verify\n Use this option to indicate that the tool is to be used for verification purposes.\n@@ -144,44 +387,37 @@ This option is used in conjunction with the @code{-verbose} option. When present\n \n @end table\n \n-@item COMMON OPTIONS\n-@table @b\n-@item -verbose\n-Use this option to force the tool to generate more verbose messages, during its processing.\n+@comment ----------------------------------------------------------------------\n \n-@item -internalsf\n-When present, the tool will include --which otherwise it does not-- the @code{.SF} file in the @code{.DSA} generated file.\n+@node keytool Tool, , jarsigner Tool, Security Tools\n+@comment node-name, next, previous, up\n+@section The @code{keytool} Tool\n \n-@item -sectionsonly\n-When present, the tool will include in the @code{.SF} generated file --which otherwise it does not-- a header containing a hash of the whole manifest file.  When that header is included, the tool can quickly check, during verification, if the hash (in the header) matches or not the manifest file.\n+Cryptographic credentials, in a Java environment, are usually stored in a @i{Key Store}. The Java SDK specifies a @i{Key Store} as a persistent container of two types of objects: @i{Key Entries} and @i{Trusted Certificates}. The security tool @b{keytool} is a Java-based application for managing those types of objects.\n \n-@item -provider PROVIDER_CLASS_NAME\n-A fully qualified class name of a @i{Security Provider} to add to the current list of @i{Security Providers} already installed in the JVM in-use. If a provider class is specified with this option, and was successfully added to the runtime --i.e. it was not already installed-- then the tool will attempt to remove this @i{Security Provider} before exiting.\n+A @i{Key Entry} represents the private key part of a key-pair used in Public-Key Cryptography, and a signed X.509 certificate which authenticates the public key part for a known entity; i.e. the owner of the key-pair. The X.509 certificate itself contains the public key part of the key-pair.\n \n-@item -help\n-Prints a help text similar to this one.\n+A @i{Trusted Certificate} is a signed X.509 certificate issued by a trusted entity. The @i{Trust} in this context is relative to the User of the @b{keytool}. In other words, the existence of a @i{Trusted Certificate} in the @i{Key Store} processed by a @b{keytool} command implies that the User trusts the @i{Issuer} of that @i{Trusted Certificate} to also sign, and hence authenticates, other @i{Subjects} the tool may process.\n \n-@end table\n-@end table\n+@i{Trusted Certificates} are important because they allow the tool to mechanically construct @i{Chains of Trust} starting from one of the @i{Trusted Certificates} in a @i{Key Store} and ending with a certificate whose @i{Issuer} is potentially unknown. A valid chain is an ordered list, starting with a @i{Trusted Certificate} (also called the @i{anchor}), ending with the target certificate, and satisfying the condition that the @i{Subject} of certificate @code{#i} is the @i{Issuer} of certificate @code{#i + 1}.\n \n-@comment ----------------------------------------------------------------------\n+The @b{keytool} is invoked from the command line as follows:\n \n-@node keytool Tool, , jarsigner Tool, Security Tools\n-@comment node-name, next, previous, up\n-@section The @code{keytool} Tool\n-\n-@table @b\n-@item SYNOPSIS\n+@example\n @code{keytool [COMMAND]...}\n+@end example\n \n-@item DESCRIPTION\n-A Java-based tool for managing both @i{Key Entries} as well as @i{Trusted Certificates}.\n+Multiple @code{COMMAND}s may be specified at once, each complete with its own options. @b{keytool} will parse all the arguments, before processing, and executing, each @code{COMMAND}. If an exception occurs while executing one @code{COMMAND} @b{keytool} will abort. Note however that because the implementation of the tool uses code to parse command line options that also supports GNU-style options, you have to separate each command group with a double-hyphen; e.g\n \n-Multiple @code{COMMAND}s may be specified at once, each complete with its own options. @b{keytool} will parse all the arguments, before processing, and executing, each @code{COMMAND}. If an exception occurs while executing one @code{COMMAND} @b{keytool} will abort.\n+@example\n+@code{keytool -list -- -printcert -alias mykey}\n+@end example\n \n-A @code{COMMAND} can be one of the followings:\n+Here is a summary of the commands supported by the tool:\n \n-@table @b\n+@enumerate\n+@item Add/Update commands\n+@itemize @bullet\n @item -genkey [OPTION]@dots{}\n Generate a new @i{Key Entry}, eventually creating a new key store.\n \n@@ -191,22 +427,34 @@ Add, to a key store, @i{Key Entries} (private keys and certificate chains authen\n @item -selfcert [OPTION]@dots{}\n Generate a new self-signed @i{Trusted Certificate}.\n \n+@item -cacert [OPTION]@dots{}\n+Import a CA @i{Trusted Certificate}.\n+\n @item -identitydb [OPTION]@dots{}\n @b{NOT IMPLEMENTED YET}.@*\n Import a JDK 1.1 style Identity Database.\n+@end itemize\n \n+@item Export commands\n+@itemize @bullet\n @item -certreq [OPTION]@dots{}\n Issue a @i{Certificate Signing Request} (CSR) which can be then sent to a @i{Certification Authority} (CA) to issue a certificate signed (by the CA) and authenticating the @i{Subject} of the request.\n \n @item -export [OPTION]@dots{}\n Export a certificate from a key store.\n+@end itemize\n \n+@item Display commands\n+@itemize @bullet\n @item -list [OPTION]@dots{}\n Print one or all certificates in a key store to @code{STDOUT}.\n \n @item -printcert [OPTION]@dots{}\n Print a human-readable form of a certificate, in a designated file, to @code{STDOUT}.\n+@end itemize\n \n+@item Management commands\n+@itemize @bullet\n @item -keyclone [OPTION]@dots{}\n Clone a @i{Key Entry} in a key store.\n \n@@ -218,13 +466,48 @@ Change the password protecting a @i{Key Entry} in a key store.\n \n @item -delete [OPTION]@dots{}\n Delete a @i{Key Entry} or a @i{Trusted Certificate} from a key store.\n+@end itemize\n \n-@item -help\n-Prints a help text similar to this one.\n+@end enumerate\n \n-@end table\n+@menu\n+* Getting Help::               How to get help with keytool commands\n+* Common keytool Options::     Options used in more than one command\n+* Distinguished Names::        X.500 Distinguished Names used in certificates\n+* Add/Update Commands::        Commands for adding data to a Key Store\n+* Export Commands::            Commands for exporting data from a Key Store\n+* Display Commands::           Commands for displaying data in a Key Store\n+* Management Commands::        Commands for managing a Key Store\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Getting Help, Common keytool Options, keytool Tool, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection Getting help\n+\n+To get a general help text about the tool, use the @code{-help} option; e.g.\n+\n+@example\n+@code{keytool -help}\n+@end example\n+\n+To get more specific help text about one of the tool's command use the @code{-help} option for that command; e.g.\n+\n+@example\n+@code{keytool -genkey -help}\n+@end example\n+\n+In both instances, the tool will print a help text and then will exit the running JVM.\n+\n+It is worth noting here that the help messages printed by the tool are I18N-ready. This means that if/when the contents of the tool's @i{Message Bundle} properties file are available in languages other than English, you may see those messages in that language.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Common keytool Options, Distinguished Names, Getting Help, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection Common options\n \n-@item OPTIONS COMMON TO MORE THAN ONE COMMAND\n The following @code{OPTION}s are used in more than one @code{COMMAND}. They are described here to reduce redundancy.\n \n @table @b\n@@ -263,7 +546,7 @@ If a URL was specified, but was found to be malformed --e.g. missing protocol el\n A fully qualified class name of a @i{Security Provider} to add to the current list of @i{Security Providers} already installed in the JVM in-use. If a provider class is specified with this option, and was successfully added to the runtime --i.e. it was not already installed-- then the tool will attempt to removed this @i{Security Provider} before exiting.\n \n @anchor{file}\n-@item -file FILE_NAME\n+@item -file FILE\n Use this option to designate a file to use with a command. When specified with this option, the value is expected to be the fully qualified path of a file accessible by the File System. Depending on the command, the file may be used as input or as output. When this option is omitted from the command line, @code{STDIN} will be used instead, as the source of input, and @code{STDOUT} will be used instead as the output destination.\n \n @anchor{verbose}\n@@ -272,8 +555,13 @@ Unless specified otherwise, use this option to enable more verbose output.\n \n @end table\n \n+@comment ----------------------------------------------------------------------\n+\n+@node Distinguished Names, Add/Update Commands, Common keytool Options, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection X.500 Distinguished Names\n+\n @anchor{dn}\n-@item X.500 DISTINGUISHED NAME\n A @i{Distinguished Name} (or DN) MUST be supplied with some of the @code{COMMAND}s using a @code{-dname} option. The syntax of a valid value for this option MUST follow RFC-2253 specifications. Namely the following components (with their accepted meaning) will be recognized. Note that the component name is case-insensitive:\n \n @ftable @var\n@@ -299,8 +587,27 @@ CN=host.domain.com, O=The Sample Company, L=Sydney, ST=NSW, C=AU\n @*\n If the @i{Distinguished Name} is required, and no valid default value can be used, the tool will prompt you to enter the information through the console.\n \n-@item -genkey COMMAND\n-Generate a new key-pair (both private and public keys), and save these credentials in the key store as a @i{Key Entry}, associated with the designated (if was specified in the @code{-alias} option) or default (if the @code{-alias} option is omitted) @i{Alias}.\n+@comment ----------------------------------------------------------------------\n+\n+@node Add/Update Commands, Export Commands, Distinguished Names, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection Add/Update commands\n+\n+@menu\n+* Command -genkey::            Generate private key and self-signed certificate\n+* Command -import::            Import certificates and certificate replies\n+* Command -selfcert::          Generate self-signed certificate\n+* Command -cacert::            Import a CA Trusted Certificate\n+* Command -identitydb::        Import JDK-1 style identities\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -genkey, Command -import, Add/Update Commands, Add/Update Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-genkey} command\n+\n+Use this command to generate a new key-pair (both private and public keys), and save these credentials in the key store as a @i{Key Entry}, associated with the designated (if was specified with the @code{-alias} option) or default (if the @code{-alias} option is omitted) @i{Alias}.\n \n The private key material will be protected with a user-defined password (see @code{-keypass} option). The public key on the other hand will be part of a self-signed X.509 certificate, which will form a 1-element chain and will be saved in the key store.\n \n@@ -347,8 +654,13 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -import COMMAND\n-Read an X.509 certificate, or a PKCS#7 @i{Certificate Reply} from a designated input source and incorporate the certificates into the key store.\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -import, Command -selfcert, Command -genkey, Add/Update Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-import} command\n+\n+Use this command to read an X.509 certificate, or a PKCS#7 @i{Certificate Reply} from a designated input source and incorporate the certificates into the key store.\n \n If the @i{Alias} does not already exist in the key store, the tool treats the certificate read from the input source as a new @i{Trusted Certificate}. It then attempts to discover a chain-of-trust, starting from that certificate and ending at another @i{Trusted Certificate}, already stored in the key store. If the @code{-trustcacerts} option is present, an additional key store, of type @code{JKS} named @file{cacerts}, and assumed to be present in @file{$@{JAVA_HOME@}/lib/security} will also be consulted if found --@code{$@{JAVA_HOME@}} refers to the location of an installed @i{Java Runtime Environment} (JRE). If no chain-of-trust can be established, and unless the @code{-noprompt} option has been specified, the certificate is printed to @code{STDOUT} and the user is prompted for a confirmation.\n \n@@ -358,8 +670,8 @@ If @i{Alias} exists in the key store, the tool will treat the certificate(s) rea\n @item -alias ALIAS\n For more details @pxref{alias,, ALIAS}.\n \n-@item -file FILE_NAME\n-For more details @pxref{file,, FILE_NAME}.\n+@item -file FILE\n+For more details @pxref{file,, FILE}.\n \n @item -keypass PASSWORD\n Use this option to specify the password which the tool will use to protect the @i{Key Entry} associated with the designated @i{Alias}, when replacing this @i{Alias}' chain of certificates with that found in the certificate reply.\n@@ -389,8 +701,13 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -selfcert COMMAND\n-Generate a self-signed X.509 version 1 certificate. The newly generated certificate will form a chain of one element which will replace the previous chain associated with the designated @i{Alias} (if @code{-alias} option was specified), or the default @i{Alias} (if @code{-alias} option was omitted).\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -selfcert, Command -cacert, Command -import, Add/Update Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-selfcert} command\n+\n+Use this command to generate a self-signed X.509 version 1 certificate. The newly generated certificate will form a chain of one element which will replace the previous chain associated with the designated @i{Alias} (if @code{-alias} option was specified), or the default @i{Alias} (if @code{-alias} option was omitted).\n \n @table @b\n @item -alias ALIAS\n@@ -429,14 +746,50 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -identitydb COMMAND\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -cacert, Command -identitydb, Command -selfcert, Add/Update Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-cacert} command\n+\n+Use this command to import, a CA certificate and add it to the key store as a @i{Trusted Certificate}. The @i{Alias} for this new entry will be constructed from the FILE's base-name after replacing hyphens and dots with underscores.\n+\n+This command is useful when used in a script that recursively visits a directory of CA certificates to populate a @code{cacerts.gkr} @i{Key Store} of trusted certificates which can then be used commands that specify the @code{-trustcacerts} option.\n+\n+@table @b\n+@item -file FILE\n+For more details @pxref{file,, FILE}.\n+\n+@item -storetype STORE_TYPE\n+For more details @pxref{storetype,, STORE_TYPE}.\n+\n+@item -keystore URL\n+For more details @pxref{keystore,, URL}.\n+\n+@item -storepass PASSWORD\n+For more details @pxref{storepass,, PASSWORD}.\n+\n+@item -provider PROVIDER_CLASS_NAME\n+For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n+\n+@item -v\n+For more details @pxref{verbose}.\n+\n+@end table\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -identitydb, , Command -cacert, Add/Update Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-identitydb} command\n+\n @b{NOT IMPLEMENTED YET}.\n \n-Import a JDK 1.1 style Identity Database.\n+Use this command to import a JDK 1.1 style Identity Database.\n \n @table @b\n-@item -file FILE_NAME\n-For more details @pxref{file,, FILE_NAME}.\n+@item -file FILE\n+For more details @pxref{file,, FILE}.\n \n @item -storetype STORE_TYPE\n For more details @pxref{storetype,, STORE_TYPE}.\n@@ -455,8 +808,24 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -certreq COMMAND\n-Generate a PKCS#10 @i{Certificate Signing Request} (CSR) and writes it to a designated output destination. The contents of the destination should look something like the following:\n+@comment ----------------------------------------------------------------------\n+\n+@node Export Commands, Display Commands, Add/Update Commands, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection Export commands\n+\n+@menu\n+* Command -certreq::           Generate Certificate Signing Requests (CSR)\n+* Command -export::            Export a certificate in a Key Store\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -certreq, Command -export, Export Commands, Export Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-certreq} command\n+\n+Use this command to generate a PKCS#10 @i{Certificate Signing Request} (CSR) and write it to a designated output destination. The contents of the destination should look something like the following:\n \n @example\n -----BEGIN NEW CERTIFICATE REQUEST-----\n@@ -476,8 +845,8 @@ For more details @pxref{alias,, ALIAS}.\n @item -sigalg ALGORITHM\n The canonical name of the digital signature algorithm to use for signing the certificate. If this option is omitted, a default value will be chosen based on the type of the private key associated with the designated @i{Alias}. If the private key is a @code{DSA} one, the value for the signature algorithm will be @code{SHA1withDSA}. If on the other hand the private key is an @code{RSA} one, then the tool will use @code{MD5withRSA} as the signature algorithm.\n \n-@item -file FILE_NAME\n-For more details @pxref{file,, FILE_NAME}.\n+@item -file FILE\n+For more details @pxref{file,, FILE}.\n \n @item -keypass PASSWORD\n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n@@ -504,16 +873,20 @@ Use this option to force the tool to encode a @code{NULL} DER value in the CSR a\n \n @end table\n \n-@item -export COMMAND\n-Export a certificate stored in the key store to a designated output destination, either in binary format (if the @code{-v} option is specified), or in RFC-1421 compliant encoding (if the @code{-rfc} option is specified\n-instead).\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -export, , Command -certreq, Export Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-export} command\n+\n+Use this command to export a certificate stored in a key store to a designated output destination, either in binary format (if the @code{-v} option is specified), or in RFC-1421 compliant encoding (if the @code{-rfc} option is specified instead).\n \n @table @b\n @item -alias ALIAS\n For more details @pxref{alias,, ALIAS}.\n \n-@item -file FILE_NAME\n-For more details @pxref{file,, FILE_NAME}.\n+@item -file FILE\n+For more details @pxref{file,, FILE}.\n \n @item -storetype STORE_TYPE\n For more details @pxref{storetype,, STORE_TYPE}.\n@@ -535,8 +908,24 @@ Output the certificate in binary DER encoding. This is the default output format\n \n @end table\n \n-@item -list COMMAND\n-Print one or all of the key store entries to @code{STDOUT}. Usually this command will only print a @i{fingerprint} of the certificate, unless either the @code{-rfc} or the @code{-v} option is specified.\n+@comment ----------------------------------------------------------------------\n+\n+@node Display Commands, Management Commands, Export Commands, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection Display commands\n+\n+@menu\n+* Command -list::              Display information about one or all Aliases\n+* Command -printcert::         Print a certificate or a certificate fingerprint\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -list, Command -printcert, Display Commands, Display Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-list} command\n+\n+Use this command to print one or all of a key store entries to @code{STDOUT}. Usually this command will only print a @i{fingerprint} of the certificate, unless either the @code{-rfc} or the @code{-v} option is specified.\n \n @table @b\n @item -alias ALIAS\n@@ -564,20 +953,43 @@ Output the certificate in human-readable format. If both this option and the @co\n \n @end table\n \n-@item -printcert COMMAND\n-Read a certificate from a designated input source and print it to @code{STDOUT} in a human-readable form.\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -printcert, , Command -list, Display Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-printcert} command\n+\n+Use this command to read a certificate from a designated input source and print it to @code{STDOUT} in a human-readable form.\n \n @table @b\n-@item -file FILE_NAME\n-For more details @pxref{file,, FILE_NAME}.\n+@item -file FILE\n+For more details @pxref{file,, FILE}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n \n-@item -keyclone COMMAND\n-Clone an existing @i{Key Entry} and store it under a new (different) @i{Alias} protecting, its private key material with possibly a new password.\n+@comment ----------------------------------------------------------------------\n+\n+@node Management Commands, , Display Commands, keytool Tool\n+@comment node-name, next, previous, up\n+@subsection Management commands\n+\n+@menu\n+* Command -keyclone::          Clone a Key Entry in a Key Store\n+* Command -storepasswd::       Change the password protecting a Key Store\n+* Command -keypasswd::         Change the password protecting a Key Entry\n+* Command -delete::            Remove an entry in a Key Store\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -keyclone, Command -storepasswd, Management Commands, Management Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-keyclone} command\n+\n+Use this command to clone an existing @i{Key Entry} and store it under a new (different) @i{Alias} protecting, its private key material with possibly a new password.\n \n @table @b\n @item -alias ALIAS\n@@ -611,8 +1023,13 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -storepasswd COMMAND\n-Change the password protecting a key store.\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -storepasswd, Command -keypasswd, Command -keyclone, Management Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-storepasswd} command\n+\n+Use this command to change the password protecting a key store.\n \n @table @b\n @item -new PASSWORD\n@@ -635,14 +1052,18 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -keypasswd COMMAND\n-Change the password protecting the private key material of a designated @i{Key Entry}.\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -keypasswd, Command -delete, Command -storepasswd, Management Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-keypasswd} command\n+\n+Use this command to change the password protecting the private key material of a designated @i{Key Entry}.\n \n @table @b\n @item -alias ALIAS\n For more details @pxref{alias,, ALIAS}.\n \n-@item -keypass PASSWORD\n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n \n If this option is omitted, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n@@ -667,8 +1088,13 @@ For more details @pxref{verbose}.\n \n @end table\n \n-@item -delete COMMAND\n-Delete a designated key store entry.\n+@comment ----------------------------------------------------------------------\n+\n+@node Command -delete, , Command -keypasswd, Management Commands\n+@comment node-name, next, previous, up\n+@subsubsection @code{-delete} command\n+\n+Use this command to delete a designated key store entry.\n \n @table @b\n @item -alias ALIAS\n@@ -689,7 +1115,6 @@ For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n @item -v\n For more details @pxref{verbose}.\n \n-@end table\n @end table\n \n @comment ----------------------------------------------------------------------\n@@ -709,7 +1134,7 @@ Some tools --@pxref{Security Tools}-- allow using other than the English languag\n \n @node Language Resources, Message Formats, I18N Issues, I18N Issues\n @comment node-name, next, previous, up\n-@section Language-Specific Resources\n+@section Language-specific resources\n \n The Tools use Java @code{ResourceBundle}s to store messages, and message templates they use at runtime to generate the message text itself, depending on the locale in use at the time.\n \n@@ -721,7 +1146,7 @@ Command.23=A correct key password MUST be provided\n \n When the tool needs to signal a mandatory but missing key password, it would reference the property named @code{Command.23} and the message \"@kbd{A correct key password MUST be provided}\" will be used instead. This indirect referencing of \"resources\" permits replacing, as late as possible, the English strings with strings in other languages, provided of course @i{Resource Bundles} in those languages are provided.\n \n-For the GNU Classpath Tools described in this Guide, the @i{Resource Bundles} are files named @file{MessageBundle[_ll[_CC[_VV]]].properties} where:\n+For the GNU Classpath Tools described in this Guide, the @i{Resource Bundles} are files named @file{messages[_ll[_CC[_VV]]].properties} where:\n \n @ftable @var\n @item ll\n@@ -746,24 +1171,24 @@ The location of the @i{Resource Bundles} for the GNU Classpath Tools is specific\n The collection of @i{Resource Bundles} in a location act as an inverted tree with a parent-child relationship. For example suppose in the @file{gnu/classpath/tools/keytool} there are 3 message bundles named:\n \n @enumerate\n-@item @code{MessageBundle.properties}\n-@item @code{MessageBundle_fr.properties}\n-@item @code{MessageBundle_fr_FR.properties}\n+@item @code{messages.properties}\n+@item @code{messages_fr.properties}\n+@item @code{messages_fr_FR.properties}\n @end enumerate\n \n-In the above example, bundle #1 will act as the parent of bundle #2, which in turn will act as the parent for bundle #3. This ordering is used by the Java runtime to choose which file to load based on the set Locale. For example if the Locale is @code{fr_CH}, @code{MessageBundle_fr.properties} will be used because (a) @code{MessageBundle_fr_CH.properties} does not exist, but (b) @code{MessageBundle_fr.properties} is the parent for the required bundle, and it exists. As another example, suppose the Locale was set to @code{en_AU}; then the tool will end up using @code{MessageBundle.properties} because (a) @code{MessageBundle_en_AU.properties} does not exist, (b) @code{MessageBundle_en.properties} which is the parent for the required bundle does not exist, but (c) @code{MessageBundle.properties} exists and is the root of the hierarchy.\n+In the above example, bundle #1 will act as the parent of bundle #2, which in turn will act as the parent for bundle #3. This ordering is used by the Java runtime to choose which file to load based on the set Locale. For example if the Locale is @code{fr_CH}, @code{messages_fr.properties} will be used because (a) @code{messages_fr_CH.properties} does not exist, but (b) @code{messages_fr.properties} is the parent for the required bundle, and it exists. As another example, suppose the Locale was set to @code{en_AU}; then the tool will end up using @code{messages.properties} because (a) @code{messages_en_AU.properties} does not exist, (b) @code{messages_en.properties} which is the parent for the required bundle does not exist, but (c) @code{messages.properties} exists and is the root of the hierarchy.\n \n-You can see from the examples above that @file{MessageBundle.properties} is the safety net that the Java runtime falls back to when failing to find a specific bunlde and its parent(s). This file is always provided with the Tool. In time, more localized versions will be included to cater for other languages.\n+You can see from the examples above that @file{messages.properties} is the safety net that the Java runtime falls back to when failing to find a specific bunlde and its parent(s). This file is always provided with the Tool. In time, more localized versions will be included to cater for other languages.\n \n-In the meantime, if you are willing to contribute localized versions of these resources, grab the @file{MessageBundle.properties} for a specific tool; translate it; save it with the appropriate language and region suffix and mail it to @code{classpath@@gnu.org}.\n+In the meantime, if you are willing to contribute localized versions of these resources, grab the @file{messages.properties} for a specific tool; translate it; save it with the appropriate language and region suffix and mail it to @code{classpath@@gnu.org}.\n \n @comment ----------------------------------------------------------------------\n \n @node Message Formats, , Language Resources, I18N Issues\n @comment node-name, next, previous, up\n-@section Message Formats\n+@section Message formats\n \n-If you open any of the @file{MessageBundle.properties} described in the previous section, you may see properties that look like so:\n+If you open any of the @file{messages.properties} described in the previous section, you may see properties that look like so:\n \n @example\n Command.67=Issuer: @{0@}\n@@ -774,7 +1199,7 @@ Command.70=\\ \\ \\ \\ \\ until: @{0,date,full@} - @{0,time,full@}\n \n These are @i{Message Formats} used by the tools to customize a text string that will then be used either as a prompt for User input or as output.\n \n-If you are translating a @file{MessageBundle.properties} be careful not to alter text between curly braces.\n+If you are translating a @file{messages.properties} be careful not to alter text between curly braces.\n \n @comment ----------------------------------------------------------------------\n "}, {"sha": "e7f85d088b5b19de26dc0347fa6a2f618093f000", "filename": "libjava/classpath/doc/vmintegration.texinfo", "status": "modified", "additions": 433, "deletions": 5, "changes": 438, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -12,7 +12,7 @@ This file contains important information you will need to know if you\n are going to write an interface between GNU Classpath and a Virtual\n Machine.\n \n-Copyright (C) 1998-2002, 2004, 2005 Free Software Foundation, Inc.\n+Copyright (C) 1998-2002, 2004, 2005, 2006 Free Software Foundation, Inc.\n \n @ifnotplaintext\n @dircategory GNU Libraries\n@@ -66,6 +66,7 @@ This document is incomplete, as we are still in alpha with the interface.\n * Classpath Hooks::             Hooks from Classpath to the VM\n * VM Hooks::                    Hooks from the underlying VM to Classpath\n * JNI Implementation::\t\tHooking the VM to jni.h\n+* JVMTI Implementation::        Hooking the VM to jvmti.h\n * Miscellaneous VM Requirements::  \n @end menu\n \n@@ -202,6 +203,8 @@ implementation.\n * gnu.java.nio::\n * java.lang.reflect::\n * gnu.java.lang::\n+* gnu.java.lang.management::\n+* java.lang.management::\n * Classpath Callbacks::\n @end menu\n \n@@ -704,6 +707,9 @@ to allow the setting to flow down to the native thread.\n @item @code{nativeStop(Throwable)} -- The VM should stop the thread abnormally\n and throw the specified exception.  This is clearly deprecated, due to the\n ambiguous state an abruptly-stopped thread may leave.\n+@item @code{getState()} -- Returns the VM's impression of the current state\n+of the thread.  The applicable states are supplied by the @code{State}\n+enumeration in @code{java.lang.Thread}.\n @end itemize\n @item Mandatory Class Methods\n @itemize @bullet\n@@ -1206,7 +1212,7 @@ which the VM uses to generate a new non-primitive array of a\n particular class and size.  The default implementation simply passes\n the job down to the standard JNI function, @code{NewObjectArray}.\n \n-@node gnu.java.lang, Classpath Callbacks, java.lang.reflect, Classpath Hooks\n+@node gnu.java.lang, gnu.java.lang.management, java.lang.reflect, Classpath Hooks\n @section @code{gnu.java.lang}\n \n @code{gnu.java.lang} provides VM interfaces for the GNU\n@@ -1258,7 +1264,384 @@ method calls the @code{VMInstrumentationImpl.redefineClasses} native method\n which must be implemented by the VM. The implementation should call the\n @code{InstrumentationImpl.callTransformers} method.\n \n-@node Classpath Callbacks, , gnu.java.lang, Classpath Hooks\n+@node gnu.java.lang.management, java.lang.management, gnu.java.lang, Classpath Hooks\n+@section @code{gnu.java.lang.management}\n+\n+@code{gnu.java.lang.management} provides the VM interfaces for the GNU\n+implementations of the management beans.  \n+\n+@menu\n+* gnu.java.lang.management.VMRuntimeMXBeanImpl::\n+* gnu.java.lang.management.VMClassLoadingMXBeanImpl::\n+* gnu.java.lang.management.VMThreadMXBeanImpl::\n+* gnu.java.lang.management.VMMemoryMXBeanImpl::\n+* gnu.java.lang.management.VMCompilationMXBeanImpl::\n+* gnu.java.lang.management.VMMemoryPoolMXBeanImpl::\n+* gnu.java.lang.management.VMMemoryManagerMXBeanImpl::\n+* gnu.java.lang.management.VMGarbageCollectorMXBeanImpl::\n+@end menu\n+\n+@node gnu.java.lang.management.VMRuntimeMXBeanImpl,gnu.java.lang.management.VMClassLoadingMXBeanImpl,,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMRuntimeMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.RuntimeMXBeanImpl} provides an\n+implementation of the @code{java.lang.management.RuntimeMXBean} interface,\n+and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMRuntimeMXBeanImpl}.  This provides a\n+series of methods, which should be implemented by the virtual machine\n+in order to provide the required information for the bean.  The VM\n+methods are generally representative of information that is only\n+available from the virtual machine, such as the command-line arguments\n+it was given at startup.\n+\n+The methods are as follows:\n+\n+@itemize @bullet\n+@item @code{(getInputArguments())} -- The VM should supply\n+a @code{String} array containing each of the command-line\n+arguments, excluding those that are directed at the\n+@code{main()} method.  The reference implementation expects\n+this to be a native method.\n+@item @code{(getName())} -- The VM developer should choose\n+an appropriate name for the virtual machine.  This name can\n+be instance-specific e.g. it can include things like the\n+process identifier or host name of the machine, which only\n+apply to the current running instance.  Thus, the intention is\n+that this name refers to the entity that the other information\n+refers to, rather than the VM in general.  The reference\n+implementation supplies a default concatenation of the VM\n+name and version.\n+@item @code{(getStartTime())} -- This should return the number\n+of milliseconds at which the virtual machine was started.\n+The uptime property of the bean is provided relative to this\n+value.  Again, the reference implementation also expects\n+this method to be native.\n+@end itemize\n+\n+The virtual machine also needs to provide either the\n+@code{sun.boot.class.path} or @code{java.boot.class.path}\n+property in order to support the optional boot class path\n+retrieval functionality.\n+\n+@node gnu.java.lang.management.VMClassLoadingMXBeanImpl,gnu.java.lang.management.VMThreadMXBeanImpl,gnu.java.lang.management.VMRuntimeMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMClassLoadingMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.ClassLoadingMXBeanImpl} provides an\n+implementation of the @code{java.lang.management.ClassLoadingMXBean} interface,\n+and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMClassLoadingMXBeanImpl}.  This provides a\n+series of methods, which should be implemented by the virtual machine\n+in order to provide the required information for the bean.  Implementing\n+this bean requires the VM to monitor when classes are loaded and unloaded,\n+and provide the option of verbose class loading output.\n+\n+The methods are as follows:\n+\n+@itemize @bullet\n+@item @code{(getLoadedClassCount())} -- This should return\n+the number of classes that are currently loaded by the VM.\n+@item @code{(getUnloadedClassCount())} -- This should return\n+the number of classes that have been loaded by the VM, but\n+have since been unloaded.\n+@item @code{(isVerbose())} -- This should return @code{true}\n+or @code{false}, depending on whether verbose class loading\n+output is turned or not, respectively.\n+@item @code{(setVerbose(boolean))} -- This should allow the\n+verbose class loading output to be turned on and off.\n+@end itemize\n+\n+@node gnu.java.lang.management.VMThreadMXBeanImpl,gnu.java.lang.management.VMMemoryMXBeanImpl,gnu.java.lang.management.VMClassLoadingMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMThreadMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.ThreadMXBeanImpl} provides an\n+implementation of the @code{java.lang.management.ThreadMXBean} interface,\n+and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMThreadMXBeanImpl}.  This provides a\n+series of methods, which should be implemented by the virtual machine\n+in order to provide the required information for the bean.  Implementing\n+this bean requires the VM to monitor thread-related statistics such as\n+how often the blocked and waiting states have been entered, as well as\n+additional optional support for time and contention monitoring.\n+\n+Optional support is determined by the following properties:\n+\n+@itemize @bullet\n+@item @code{gnu.java.lang.management.CurrentThreadTimeSupport} --\n+This property should be present if the VM supports monitoring the\n+time used by the current thread.  If time monitoring for all threads\n+is supported, this need not be provided.\n+@item @code{gnu.java.lang.management.ThreadTimeSupport} --\n+This property should be present if the VM supports monitoring the\n+time used by all threads.\n+@item @code{gnu.java.lang.management.ThreadContentionSupport} --\n+This property should be present if the VM supports thread contention\n+monitoring.\n+@end itemize\n+\n+In addition, the property\n+@code{gnu.java.lang.management.ThreadTimeInitallyEnabled} may be\n+set to the @code{String} value, @code{\"true\"}, if time monitoring\n+is enabled at startup.\n+\n+The methods are as follows:\n+\n+@itemize @bullet\n+@item @code{(findMonitorDeadlockedThreads())} -- This should return\n+an array of thread identifiers which match threads involved in\n+deadlock cycles (where each thread is waiting to obtain a lock\n+held by one of the others).  This is specified as a native method\n+in the reference implementation.\n+@item @code{(getAllThreads())} -- This should return an array of\n+all live threads and set the @code{filled} variable to the number\n+found.  A default implementation is provided.\n+@item @code{(getAllThreadIds())} -- This should return an array of\n+all live thread identifiers.  An implementation is provided against\n+@code{getAllThreads()} by default.\n+@item @code{(getCurrentThreadCpuTime())} -- This should return the\n+approximate number of nanoseconds of CPU time the current thread\n+has used.  This is an optional native method, which is used by VMs\n+supporting time monitoring.\n+@item @code{(getCurrentThreadUserTime())} -- This should return the\n+approximate number of nanoseconds of user time the current thread\n+has used.  This is an optional native method, which is used by VMs\n+supporting time monitoring.\n+@item @code{(getDaemonThreadCount())} -- This should return the number\n+of live daemon threads.  A default implementation is provided, based\n+on @code{getAllThreads()}.\n+@item @code{(getPeakThreadCount())} -- The VM should maintain a record\n+of the peak number of live threads, and return it when this method is\n+called.  This is specified as a native method in the reference\n+implementation.\n+@item @code{(resetPeakThreadCount())} -- This should reset the record\n+of the peak number of live threads to the current number of live\n+threads.  This is specified as a native method in the reference\n+implementation.\n+@item @code{(getThreadCount())} -- This should return the number of\n+live threads.  A default implementation is provided, based on\n+@code{getAllThreads()}.\n+@item @code{(getThreadCpuTime(long))} -- This should return the\n+approximate number of nanoseconds of CPU time the specified thread\n+has used.  This is an optional native method, which is used by VMs\n+supporting time monitoring.\n+@item @code{(getThreadUserTime(long))} -- This should return the\n+approximate number of nanoseconds of CPU time the specified thread\n+has used.  This is an optional native method, which is used by VMs\n+supporting time monitoring.\n+@item @code{(getThreadInfoForId(long, int))} -- This return an instance\n+of @code{java.lang.management.ThreadInfo} for the specified thread.\n+The class includes a private constructor which VMs should use to initialise\n+it with the appropriate values for the thread.  The second argument\n+given here specifies the depth of the stack trace supplied on construction\n+of the instance.  Special values are 0 (return an empty array) and\n+@code{Integer.MAX_VALUE} (return the maximum depth possible).  This\n+is specified as a native method in the reference implementation.\n+@item @code{(getTotalStartedThreadCount())} -- This should return the\n+total number of threads that have been started by the VM, including ones\n+that have died.  This is specified as a native method in the reference\n+implementation.\n+@end itemize\n+\n+@node gnu.java.lang.management.VMMemoryMXBeanImpl,gnu.java.lang.management.VMCompilationMXBeanImpl,gnu.java.lang.management.VMThreadMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMMemoryMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.MemoryMXBeanImpl} provides an\n+implementation of the @code{java.lang.management.MemoryMXBean} interface,\n+and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMMemoryMXBeanImpl}.  This provides a\n+series of methods, which should be implemented by the virtual machine\n+in order to provide the required information for the bean.  Implementing\n+this bean requires the VM to monitor the levels of heap and non-heap\n+memory, and provide the number of objects which are eligible for garbage\n+collection.\n+\n+The methods are as follows:\n+\n+@itemize @bullet\n+@item @code{(getHeapMemoryUsage())} -- This should return\n+an instance of @code{java.lang.management.MemoryUsage} with\n+values pertaining to the heap.  A default implementation is\n+provided, based on @code{java.lang.Runtime}'s methods.\n+@item @code{(getNonHeapMemoryUsage())} -- This should return\n+an instance of @code{java.lang.management.MemoryUsage} with\n+values pertaining to non-heap memory.\n+@item @code{(getObjectPendingFinalizationCount())} -- Returns\n+the number of objects which are no longer referenced, and which\n+will thus be garbage collected on the next run of the garbage\n+collector.\n+@item @code{(isVerbose())} -- This should return @code{true}\n+or @code{false}, depending on whether verbose memory management\n+output is turned or not, respectively.\n+@item @code{(setVerbose(boolean))} -- This should allow the\n+verbose memory management output to be turned on and off.\n+@end itemize\n+\n+@node gnu.java.lang.management.VMCompilationMXBeanImpl,gnu.java.lang.management.VMMemoryPoolMXBeanImpl,gnu.java.lang.management.VMMemoryMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMCompilationMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.CompilationMXBeanImpl} provides an\n+implementation of the optional @code{java.lang.management.CompilationMXBean}\n+interface, and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMCompilationMXBeanImpl}.  This provides a\n+single method for returning the number of milliseconds the virtual\n+machine's Just-In-Time (JIT) compiler has spent compiling.  Even if\n+a JIT compiler is available and an instance of the bean supplied, this\n+method is still optional.\n+\n+Optional support is determined by the following properties:\n+\n+@itemize @bullet\n+@item @code{gnu.java.lang.compiler.name} -- This property should\n+specify the name of the JIT compiler.  Classpath also uses this,\n+within @code{java.lang.management.ManagementFactory}, to determine\n+whether a bean should be created.  If this property is set to a\n+non-null value, a bean will be created and its @code{getName()}\n+method will return this value.\n+@item @code{gnu.java.lang.management.CompilationTimeSupport} --\n+This property should be present if the VM supports monitoring the\n+time spent compiling.\n+@end itemize\n+\n+Time support is implemented by the following method:\n+\n+@itemize @bullet\n+@item @code{(getTotalCompilationTime())} -- This should return the\n+number of milliseconds the JIT compiler has spent compiling.\n+@end itemize\n+\n+@node gnu.java.lang.management.VMMemoryPoolMXBeanImpl,gnu.java.lang.management.VMMemoryManagerMXBeanImpl,gnu.java.lang.management.VMCompilationMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMMemoryPoolMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.MemoryPoolMXBeanImpl} provides an\n+implementation of the optional @code{java.lang.management.MemoryPoolMXBean}\n+interface, and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMMemoryPoolMXBeanImpl}.  Providing\n+this interface requires implementing a number of methods for each supported\n+pool.  These return statistics on memory usage, and, optionally, allows\n+monitoring of when memory usage exceedes a preset threshold.\n+\n+Optional support is determined by the following properties:\n+\n+@itemize @bullet\n+@item @code{gnu.java.lang.management.CollectionUsageThresholdSupport} --\n+This property should be present if the VM supports setting a collection\n+usage threshold and monitoring when it is matched or exceeded.  Collection\n+usage thresholds are related to the remaining memory usage following a\n+garbage collection cycle.\n+@item @code{gnu.java.lang.management.UsageThresholdSupport} --\n+This property should be present if the VM supports setting a \n+usage threshold and monitoring when it is matched or exceeded.  \n+@end itemize\n+\n+The methods are as follows (all take a pool name as their\n+first parameter):\n+\n+@itemize @bullet\n+@item @code{(getCollectionUsage(String))} -- Returns a\n+@code{java.lang.management.MemoryUsage} object, containing the\n+memory usage statistics following a garbage collection cycle\n+for the specified pool.  This may also return @code{null} if\n+the pool isn't an appropriate pool for this particular task.\n+@item @code{(getCollectionUsageThreshold(String))} -- Returns\n+the pool's collection usage threshold, if supported.\n+@item @code{(getCollectionUsageThresholdCount(String))} -- Returns\n+the number of times the specified pool has matched or exceeded\n+its collection usage threshold, if supported.\n+@item @code{(getMemoryManagerNames(String))} -- Returns a list\n+of names of memory managers which manage the specified pool.\n+@item @code{(getPeakUsage(String))} -- Returns a\n+@code{java.lang.management.MemoryUsage} object for the peak\n+usage level of the specified pool.\n+@item @code{(getType(String))} -- Returns a string containing\n+either @code{\"HEAP\"} or @code{\"NON_HEAP\"} which indicates the type of\n+memory used by the specified pool.\n+@item @code{(getUsage(String))} -- Returns a\n+@code{java.lang.management.MemoryUsage} object for the current\n+usage level of the specified pool.\n+@item @code{(getUsageThreshold(String))} -- Returns\n+the pool's usage threshold, if supported.\n+@item @code{(getUsageThresholdCount(String))} -- Returns\n+the number of times the specified pool has matched or exceeded\n+its usage threshold, if supported.\n+@item @code{(isValid(String))} -- Returns true if the pool\n+is still in use by the virtual machine.\n+@item @code{(resetPeakUsage(String))} -- Resets the peak usage\n+levels to the current usage levels for the specified pool.\n+@item @code{(setCollectionUsageThreshold(String, long))} -- Sets\n+the pool's collection usage threshold, if supported.\n+@item @code{(setUsageThreshold(String, long))} -- Sets\n+the pool's usage threshold, if supported.\n+@end itemize\n+\n+@node gnu.java.lang.management.VMMemoryManagerMXBeanImpl,gnu.java.lang.management.VMGarbageCollectorMXBeanImpl,gnu.java.lang.management.VMMemoryPoolMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMMemoryManagerMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.MemoryManagerMXBeanImpl} provides an\n+implementation of the optional @code{java.lang.management.MemoryManagerMXBean}\n+interface, and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMMemoryManagerMXBeanImpl}.  Providing\n+this interface requires implementing two methods (each takes the name\n+of the manager as the first argument):\n+\n+@itemize @bullet\n+@item @code{(getMemoryPoolNames(String))} -- Returns a list of the\n+memory pools that the manager maintains.  A default implementation\n+which scans the results of @code{getMemoryManagerNames()} for each\n+pool is provided.\n+@item @code{(isValid(String))} -- Returns true if the specified\n+manager is still valid i.e. it is still in use by the virtual machine.\n+@end itemize\n+\n+@node gnu.java.lang.management.VMGarbageCollectorMXBeanImpl,,gnu.java.lang.management.VMMemoryManagerMXBeanImpl,gnu.java.lang.management\n+@subsection @code{gnu.java.lang.management.VMGarbageCollectorMXBeanImpl}\n+\n+The @code{gnu.java.lang.management.GarbageCollectorMXBeanImpl} provides an\n+implementation of the optional @code{java.lang.management.GarbageCollectorMXBean}\n+interface, and is supported by VM functionality in the form of\n+@code{gnu.java.lang.management.VMGarbageCollectorMXBeanImpl}.  Providing\n+this interface requires implementing two methods (each takes the name\n+of the garbage collector as the first argument):\n+\n+@itemize @bullet\n+@item @code{(getCollectionCount(String))} -- Returns the number of\n+times the specified garbage collector has run.\n+@item @code{(getCollectionTime(String))} -- Returns the accumulated\n+number of milliseconds for which the garbage collector has run.\n+@end itemize\n+\n+Note that each garbage collector is also a memory manager, and so an\n+implementation of the @code{gnu.java.lang.management.VMMemoryManagerMXBeanImpl}\n+methods for its name should also be provided.\n+\n+@node java.lang.management, Classpath Callbacks, gnu.java.lang.management, Classpath Hooks\n+@section @code{java.lang.management}\n+\n+@code{gnu.java.lang.management} provides the VM interfaces for the GNU\n+implementations of the management beans.  \n+\n+@menu\n+* java.lang.management.VMManagementFactory::\n+@end menu\n+\n+@node java.lang.management.VMManagementFactory,,,java.lang.management\n+@subsection @code{java.lang.management.VMManagementFactory}\n+\n+This VM interface provides the names of the memory pools, memory managers\n+and garbage collectors for use by the @code{java.lang.management.ManagementFactory}\n+in creating lists of appropriate beans for these types of managed object.\n+\n+The methods are as follows:\n+\n+@itemize @bullet\n+@item @code{(getMemoryPoolNames())} -- Returns a list of the names\n+of the current memory pools in use by the virtual machine.\n+@item @code{(getMemoryManagerNames())} -- Returns a list of the names\n+of the current memory managers in use by the virtual machine.  This\n+should not include those that are also garbage collectors.\n+@item @code{(getGarbageCollectorNames())} -- Returns a list of the names\n+of the current garbage collectors in use by the virtual machine.\n+@end itemize\n+\n+@node Classpath Callbacks, , java.lang.management, Classpath Hooks\n Some of the classes you implement for the VM will need to call back to\n package-private methods in Classpath:\n \n@@ -1269,6 +1652,26 @@ the group.\n \n @item @code{java.lang.ThreadGroup.removeThread(Thread)}\n Call this method from @code{Thread} when a @code{Thread} is stopped or destroyed.\n+\n+@item @code{gnu.java.lang.management.MemoryMXBeanImpl.fireThresholdExceededNotification(String, long, long, long, long)}\n+If the monitoring of memory usage thresholds is supported, this method\n+should be called when the normal usage of a memory pool crosses the\n+threshold, in order to emit a notification.  Another notification\n+should not be emitted until there is an intermittent period where the\n+usage is again below the threshold.  The parameters are the memory\n+pool name, the usage levels (init, used, committed and max) and the\n+number of times the threshold has been crossed.\n+\n+@item @code{gnu.java.lang.management.MemoryMXBeanImpl.fireCollectionThresholdExceededNotification(String, long, long, long, long)}\n+If the monitoring of memory usage thresholds is supported, this method\n+should be called when the usage of a memory pool after a garbage\n+collection cycle crosses the threshold, in order to emit a\n+notification.  Another notification should not be emitted until there\n+is an intermittent period where the usage is again below the\n+threshold.  The parameters are the memory pool name, the usage levels\n+(init, used, committed and max) and the number of times the threshold\n+has been crossed.\n+\n @end itemize\n \n @node VM Hooks, JNI Implementation, Classpath Hooks, Top\n@@ -1369,7 +1772,7 @@ reinitialize it yourself, there should be no harm.\n \n @end itemize\n \n-@node JNI Implementation, Miscellaneous VM Requirements, VM Hooks, Top\n+@node JNI Implementation, JVMTI Implementation, VM Hooks, Top\n @comment  node-name,  next,  previous,  up\n @chapter JNI Implementation\n \n@@ -1412,8 +1815,33 @@ be a sequence of field declarations.\n \n @end itemize\n \n+@node JVMTI Implementation, Miscellaneous VM Requirements, JNI Implementation, Top\n+@comment node-name, next, previous, up\n+@chapter JVMTI Implementation\n+\n+Classpath comes with its own implementation of @file{jvmti.h}.  This\n+file can be customized by the VM in a few ways by defining macros that\n+affect the interpretation of the file.  These macros are all intended\n+for use for use by a VM which uses GNU Classpath and which wants to\n+use a single copy of @file{jvmti.h} for both internal and external use.\n+\n+@itemize @bullet\n+@item _CLASSPATH_VM_JVMTI_TYPES_DEFINED\n+Some VMs like to define JVMTI ``object'' types in a special way.  If\n+this macro is defined, the Classpath @file{jvmti.h} will avoid defining\n+these types.  By default these types are defined in @file{jvmti.h}.  \n+The full list of types and macros treated this way is: @samp{jthread},\n+@samp{jthreadGroup}, @samp{jlocation}, and @samp{jrawMonitorID}.  By\n+default @samp{jrawMonitorID} is defined as an opaque pointer which\n+must be defined by the VM.\n+\n+@item _CLASSPATH_JVMTIENV_CONTENTS\n+A VM can add fields to the @samp{jvmtiEnv} structure by defining this\n+to be a sequence of field declarations.\n+\n+@end itemize\n \n-@node Miscellaneous VM Requirements,  , JNI Implementation, Top\n+@node Miscellaneous VM Requirements,  , JVMTI Implementation, Top\n @comment  node-name,  next,  previous,  up\n @chapter Miscellaneous VM Requirements\n "}, {"sha": "84e3ebe0fc97afcd91be49d83157920a41c74246", "filename": "libjava/classpath/examples/Makefile.am", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.am?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -23,8 +23,9 @@ endif\n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*/*.java\n \n-# The example C source files\n+# The example C source & header files\n EXAMPLE_C_FILES = $(srcdir)/gnu/classpath/examples/*/*.c\n+EXAMPLE_CH_FILES = $(srcdir)/gnu/classpath/examples/*/*.h\n \n # The zip files with classes we want to produce.\n EXAMPLE_ZIP = examples.zip\n@@ -39,7 +40,7 @@ EXAMPLE_ICONS = $(srcdir)/gnu/classpath/examples/icons/*.png\n READMES = $(srcdir)/gnu/classpath/examples/CORBA/swing/README.html\n \n # All the files we find \"interesting\"\n-ALL_EXAMPLE_FILES = $(EXAMPLE_JAVA_FILES) $(EXAMPLE_C_FILES) $(EXAMPLE_ICONS) $(READMES)\n+ALL_EXAMPLE_FILES = $(EXAMPLE_JAVA_FILES) $(EXAMPLE_C_FILES) $(EXAMPLE_CH_FILES) $(EXAMPLE_ICONS) $(READMES)\n \n # Some architecture independent data to be installed.\n example_DATA = $(EXAMPLE_ZIP) README\n@@ -62,7 +63,9 @@ install-data-local:\n \t  $(INSTALL_DATA) $$file $(DESTDIR)$(pkgdatadir)/examples/$$f; \\\n \tdone\n \techo \"$(INSTALL_DATA) Makefile.jawt $(DESTDIR)$(pkgdatadir)/examples/\"\n+\techo \"$(INSTALL_DATA) Makefile.java2d $(DESTDIR)$(pkgdatadir)/examples/\"\n \t$(INSTALL_DATA) Makefile.jawt $(DESTDIR)$(pkgdatadir)/examples/\n+\t$(INSTALL_DATA) Makefile.java2d $(DESTDIR)$(pkgdatadir)/examples/\n \n uninstall-local:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n@@ -72,10 +75,12 @@ uninstall-local:\n \t  rm -f $(DESTDIR)$(pkgdatadir)/examples/$$f; \\\n \tdone\n \techo \"rm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.jawt\"\n+\techo \"rm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.java2d\"\n \trm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.jawt\n+\trm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.java2d\n \n # Make sure everything is included in the distribution.\n-EXTRA_DIST = README Makefile.jawt.in\n+EXTRA_DIST = README Makefile.jawt.in Makefile.java2d.in\n dist-hook:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n \tfor file in $(ALL_EXAMPLE_FILES); do \\"}, {"sha": "477426889835a6787045de1d5d38b895014e230c", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,7 +39,7 @@ host_triplet = @host@\n target_triplet = @target@\n subdir = examples\n DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n-\t$(srcdir)/Makefile.jawt.in\n+\t$(srcdir)/Makefile.java2d.in $(srcdir)/Makefile.jawt.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -52,7 +52,7 @@ am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n CONFIG_HEADER = $(top_builddir)/include/config.h\n-CONFIG_CLEAN_FILES = Makefile.jawt\n+CONFIG_CLEAN_FILES = Makefile.jawt Makefile.java2d\n SOURCES =\n DIST_SOURCES =\n am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n@@ -95,6 +95,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -115,6 +117,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -145,6 +148,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -195,6 +202,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -215,6 +223,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n@@ -290,8 +300,9 @@ GLIBJ_CLASSPATH = '$(top_builddir)/lib':'$(top_builddir)/lib/glibj.zip'\n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*/*.java\n \n-# The example C source files\n+# The example C source & header files\n EXAMPLE_C_FILES = $(srcdir)/gnu/classpath/examples/*/*.c\n+EXAMPLE_CH_FILES = $(srcdir)/gnu/classpath/examples/*/*.h\n \n # The zip files with classes we want to produce.\n EXAMPLE_ZIP = examples.zip\n@@ -306,7 +317,7 @@ EXAMPLE_ICONS = $(srcdir)/gnu/classpath/examples/icons/*.png\n READMES = $(srcdir)/gnu/classpath/examples/CORBA/swing/README.html\n \n # All the files we find \"interesting\"\n-ALL_EXAMPLE_FILES = $(EXAMPLE_JAVA_FILES) $(EXAMPLE_C_FILES) $(EXAMPLE_ICONS) $(READMES)\n+ALL_EXAMPLE_FILES = $(EXAMPLE_JAVA_FILES) $(EXAMPLE_C_FILES) $(EXAMPLE_CH_FILES) $(EXAMPLE_ICONS) $(READMES)\n \n # Some architecture independent data to be installed.\n example_DATA = $(EXAMPLE_ZIP) README\n@@ -315,7 +326,7 @@ example_DATA = $(EXAMPLE_ZIP) README\n exampledir = $(pkgdatadir)/examples\n \n # Make sure everything is included in the distribution.\n-EXTRA_DIST = README Makefile.jawt.in\n+EXTRA_DIST = README Makefile.jawt.in Makefile.java2d.in\n all: $(BUILT_SOURCES)\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -351,6 +362,8 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n Makefile.jawt: $(top_builddir)/config.status $(srcdir)/Makefile.jawt.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@\n+Makefile.java2d: $(top_builddir)/config.status $(srcdir)/Makefile.java2d.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@\n \n mostlyclean-libtool:\n \t-rm -f *.lo\n@@ -524,7 +537,9 @@ install-data-local:\n \t  $(INSTALL_DATA) $$file $(DESTDIR)$(pkgdatadir)/examples/$$f; \\\n \tdone\n \techo \"$(INSTALL_DATA) Makefile.jawt $(DESTDIR)$(pkgdatadir)/examples/\"\n+\techo \"$(INSTALL_DATA) Makefile.java2d $(DESTDIR)$(pkgdatadir)/examples/\"\n \t$(INSTALL_DATA) Makefile.jawt $(DESTDIR)$(pkgdatadir)/examples/\n+\t$(INSTALL_DATA) Makefile.java2d $(DESTDIR)$(pkgdatadir)/examples/\n \n uninstall-local:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n@@ -534,7 +549,9 @@ uninstall-local:\n \t  rm -f $(DESTDIR)$(pkgdatadir)/examples/$$f; \\\n \tdone\n \techo \"rm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.jawt\"\n+\techo \"rm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.java2d\"\n \trm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.jawt\n+\trm -f $(DESTDIR)$(pkgdatadir)/examples/Makefile.java2d\n dist-hook:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n \tfor file in $(ALL_EXAMPLE_FILES); do \\"}, {"sha": "dac22068c4dd8fb82876f111bf9f57aa44e1f83e", "filename": "libjava/classpath/examples/Makefile.java2d.in", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FMakefile.java2d.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FMakefile.java2d.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.java2d.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,17 @@\n+# @configure_input@\n+\n+srcdir = @srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+includedir = @includedir@\n+libdir = @libdir@\n+pkglibdir = $(libdir)/@PACKAGE@\n+GTK_CFLAGS = @GTK_CFLAGS@\n+GTK_LIBS = @GTK_LIBS@\n+\n+all: $(srcdir)/gnu/classpath/examples/java2d/bench.c $(srcdir)/gnu/classpath/examples/java2d/bench.h\n+\tgcc -g -O0 -Wall -I$(srcdir)/gnu/classpath/examples/java2d $(GTK_CFLAGS) -L$(GTK_LIBS) \\\n+\t-o cairobench $(srcdir)/gnu/classpath/examples/java2d/bench.c\n+\n+clean:\n+\trm -f gnu/classpath/examples/java2d/bench"}, {"sha": "f7bf599624a84802bbada4731391e1069fdfa5b8", "filename": "libjava/classpath/examples/README", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FREADME?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -46,6 +46,23 @@ You can then run the example as follows:\n   export LD_LIBRARY_PATH=.:/usr/local/classpath/lib/classpath\n   jamvm gnu.classpath.examples.jawt.DemoJAWT\n \n+The java2d benchmarking demos include a GTK widget to measure the native\n+speed of some basic java2d options, without the JNI overhead.\n+\n+You can invoke it with:\n+\n+\tmake -f Makefile.java2d\n+\n+Or you can compile by hand as follows:\n+\n+  gcc -g -O0 -Wall -I./gnu/classpath/examples/java2d \\\n+    -o cairobench gnu/classpath/examples/java2d/bench.c \\\n+    `pkg-config --libs --cflags gtk+-2.0`\n+\n+You can then run the example as follows:\n+\n+  ./cairobench\n+\n All example code is distributed under the GNU General Public License (GPL).\n \n The example icons used in some of the examples come from gnome-icon-theme"}, {"sha": "652ee53ccee929454989a43b4497501a540e00c6", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToPassHelper.java", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n \n+import gnu.CORBA.OrbRestricted;\n+\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TypeCode;\n@@ -81,13 +83,14 @@ public static StructureToPass read(InputStream istream)\n    */\n   public static synchronized TypeCode type()\n   {\n-    StructMember[] members = new StructMember[ 2 ];\n+    StructMember[] members = new StructMember[2];\n     TypeCode member = null;\n-    member = ORB.init().create_string_tc(0);\n-    members [ 0 ] = new StructMember(\"a\", member, null);\n-    member = ORB.init().create_string_tc(0);\n-    members [ 1 ] = new StructMember(\"b\", member, null);\n-    return ORB.init().create_struct_tc(StructureToPassHelper.id(), \"StructureToPass\", members);\n+    member = OrbRestricted.Singleton.create_string_tc(0);\n+    members[0] = new StructMember(\"a\", member, null);\n+    member = OrbRestricted.Singleton.create_string_tc(0);\n+    members[1] = new StructMember(\"b\", member, null);\n+    return OrbRestricted.Singleton.create_struct_tc(StructureToPassHelper.id(),\n+                                                    \"StructureToPass\", members);\n   }\n \n   /**"}, {"sha": "2ac03a895edda92350114644e63e8b1d32687aed", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToReturnHelper.java", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n \n+import gnu.CORBA.OrbRestricted;\n+\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TCKind;\n@@ -86,17 +88,18 @@ public static StructureToReturn read(InputStream istream)\n    */\n   public static synchronized TypeCode type()\n   {\n-    StructMember[] members = new StructMember[ 3 ];\n-    TypeCode member = ORB.init().get_primitive_tc(TCKind.tk_long);\n-    members [ 0 ] = new StructMember(\"n\", member, null);\n-    member = ORB.init().create_string_tc(0);\n-    members [ 1 ] = new StructMember(\"c\", member, null);\n-    member = ORB.init().get_primitive_tc(TCKind.tk_long);\n-    member = ORB.init().create_array_tc(3, member);\n-    members [ 2 ] = new StructMember(\"arra\", member, null);\n-    return ORB.init().create_struct_tc(StructureToReturnHelper.id(), \"StructureToReturn\",\n-                                       members\n-                                      );\n+    StructMember[] members = new StructMember[3];\n+    TypeCode member = OrbRestricted.Singleton.get_primitive_tc(TCKind.tk_long);\n+    members[0] = new StructMember(\"n\", member, null);\n+    member = OrbRestricted.Singleton.create_string_tc(0);\n+    members[1] = new StructMember(\"c\", member, null);\n+    member = OrbRestricted.Singleton.get_primitive_tc(TCKind.tk_long);\n+    member = OrbRestricted.Singleton.create_array_tc(3, member);\n+    members[2] = new StructMember(\"arra\", member, null);\n+    return OrbRestricted.Singleton.create_struct_tc(\n+                                                    StructureToReturnHelper.id(),\n+                                                    \"StructureToReturn\",\n+                                                    members);\n   }\n \n   /**"}, {"sha": "ccf792da87501593fa7874094f08bd533b09b1f6", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/TreeNodeHelper.java", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,6 +38,9 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n \n+\n+import gnu.CORBA.OrbRestricted;\n+\n import org.omg.CORBA.Any;\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n@@ -128,18 +131,18 @@ public static synchronized TypeCode type()\n                 // To avoid the infinite recursion loop, the\n                 // recursive reference is handled in specific way.\n                 if (active)\n-                  return ORB.init().create_recursive_tc(_id);\n+                  return OrbRestricted.Singleton.create_recursive_tc(_id);\n                 active = true;\n \n                 // List all memebers of the TreeNode structure.\n                 StructMember[] members = new StructMember[ 2 ];\n                 TypeCode memberType;\n-                memberType = ORB.init().create_string_tc(0);\n+                memberType = OrbRestricted.Singleton.create_string_tc(0);\n                 members [ 0 ] = new StructMember(\"name\", memberType, null);\n-                memberType = ORB.init().create_recursive_tc(\"\");\n+                memberType = OrbRestricted.Singleton.create_recursive_tc(\"\");\n                 members [ 1 ] = new StructMember(\"children\", memberType, null);\n                 typeCode =\n-                  ORB.init().create_struct_tc(TreeNodeHelper.id(), \"TreeNode\", members);\n+                  OrbRestricted.Singleton.create_struct_tc(TreeNodeHelper.id(), \"TreeNode\", members);\n                 active = false;\n               }\n           }"}, {"sha": "6ad13a9bbc7b4ed6f6b301581673ee7265280b4a", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/WeThrowThisExceptionHelper.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n \n+import gnu.CORBA.OrbRestricted;\n+\n import org.omg.CORBA.Any;\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n@@ -96,9 +98,9 @@ public static synchronized TypeCode type()\n   {\n     StructMember[] members = new StructMember[ 1 ];\n     TypeCode member = null;\n-    member = ORB.init().get_primitive_tc(TCKind.tk_long);\n+    member = OrbRestricted.Singleton.get_primitive_tc(TCKind.tk_long);\n     members [ 0 ] = new StructMember(\"ourField\", member, null);\n-    return ORB.init().create_struct_tc(WeThrowThisExceptionHelper.id(),\n+    return OrbRestricted.Singleton.create_struct_tc(WeThrowThisExceptionHelper.id(),\n                                        \"WeThrowThisException\", members\n                                       );\n   }"}, {"sha": "ed18fd4c2eedb4e58a432d683231c8d552558a8d", "filename": "libjava/classpath/examples/gnu/classpath/examples/awt/AicasGraphicsBenchmark.java", "status": "added", "additions": 1018, "deletions": 0, "changes": 1018, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FAicasGraphicsBenchmark.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FAicasGraphicsBenchmark.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FAicasGraphicsBenchmark.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,1018 @@\n+/* AnimationApplet.java -- An example of an old-style AWT applet\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.awt;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.Label;\n+import java.awt.Panel;\n+import java.awt.Toolkit;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.net.URL;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.StringTokenizer;\n+import java.util.TreeMap;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+public class AicasGraphicsBenchmark extends Panel\n+{\n+  /**\n+   * Default number of test-iterations.\n+   */\n+  private static final int DEFAULT_TEST_SIZE = 1000;\n+\n+  /**\n+   * Default screen size.\n+   */\n+  private static final int DEFAULT_SCREEN_WIDTH  = 320;\n+  private static final int DEFAULT_SCREEN_HEIGHT = 240;\n+\n+  /**\n+   * AWT tests.\n+   */\n+  private static final int AWTTEST_LINES = 1 << 0;\n+  private static final int AWTTEST_RECT = 1 << 1;\n+  private static final int AWTTEST_POLYLINE = 1 << 2;\n+  private static final int AWTTEST_POLYGON = 1 << 3;\n+  private static final int AWTTEST_ARC = 1 << 4;\n+  private static final int AWTTEST_OVAL = 1 << 5;\n+  private static final int AWTTEST_ROUNDRECT = 1 << 6;\n+  private static final int AWTTEST_STRING = 1 << 7;\n+  private static final int AWTTEST_TRANSPARENTIMAGE = 1 << 8;\n+  private static final int AWTTEST_IMAGE = 1 << 9;\n+\n+  private static final int AWTTEST_NONE = 0;\n+  private static final int AWTTEST_ALL  =   AWTTEST_LINES\n+                                          | AWTTEST_RECT\n+                                          | AWTTEST_POLYLINE\n+                                          | AWTTEST_POLYGON\n+                                          | AWTTEST_ARC\n+                                          | AWTTEST_OVAL\n+                                          | AWTTEST_ROUNDRECT\n+                                          | AWTTEST_STRING\n+                                          | AWTTEST_TRANSPARENTIMAGE\n+                                          | AWTTEST_IMAGE\n+                                          ;\n+\n+  int iterations = 1;\n+  private int screenWidth = DEFAULT_SCREEN_WIDTH;  \n+  private int screenHeight = DEFAULT_SCREEN_HEIGHT;  \n+  boolean doubleBufferFlag = true;\n+  private int awtTests = AWTTEST_ALL;\n+\n+  private Label testLabel;\n+\n+  private String testContext = \"\";\n+\n+  Logger logger = Logger.getLogger(\"AicasGraphicsBenchmark\");\n+\n+  private Image pngTestImage;\n+  private Image gifTestImage;\n+\n+  private TestSet testSetMap = new TestSet();\n+\n+  public AicasGraphicsBenchmark()\n+  {\n+    pngTestImage = loadImage(\"aicas.png\");\n+    gifTestImage = loadImage(\"palme.gif\");\n+\n+    setLayout(new BorderLayout());\n+    testLabel = new Label();\n+    add(testLabel,BorderLayout.NORTH);\n+    add(new GraphicsTest(),BorderLayout.CENTER);\n+  }\n+\n+  void setTestContext(String testName)\n+  {\n+    logger.logp(Level.INFO, \"AicasGraphicsBenchmark\", \"recordTest\",\n+                \"--- Starting new test context: \" + testName);\n+    testContext = testName;\n+    testLabel.setText(testName);\n+  }\n+\n+  private void recordTest(String testName, long time)\n+  {\n+    logger.logp(Level.INFO, \"AicasGraphicsBenchmark\", \"recordTest\",\n+                testContext + \": \" + testName + \" duration (ms): \" + time);\n+    TestRecorder recorder = testSetMap.getTest(testName);\n+    if (recorder == null)\n+      {\n+        recorder = new TestRecorder(testName);\n+        testSetMap.putTest(testName,recorder);\n+      }\n+    recorder.addRun(time);\n+  }\n+\n+  void printReport()\n+  {\n+    for (Iterator i = testSetMap.testIterator(); i.hasNext(); )\n+    {\n+      TestRecorder recorder = testSetMap.getTest((String)i.next());\n+      System.out.println(\"TEST \" + recorder.getTestName() + \": average \"\n+                         + recorder.getAverage() + \"ms [\"\n+                         + recorder.getMinTime() + \"-\" + recorder.getMaxTime()\n+                         + \"]\");\n+    }\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    int awtTests;\n+    int i;\n+    boolean endOfOptionsFlag;\n+    AicasGraphicsBenchmark speed= new AicasGraphicsBenchmark();\n+\n+    // Parse arguments.\n+    i = 0;\n+    endOfOptionsFlag = false;\n+    awtTests = AWTTEST_NONE;\n+    while (i < args.length)\n+      {\n+        if (!endOfOptionsFlag)\n+          {\n+            if (args[i].equals(\"--help\") || args[i].equals(\"-help\")\n+                || args[i].equals(\"-h\"))\n+              {\n+                System.out.println(\"Usage: AicasGraphicsBenchmark [<options>] [<test>  ...]\");\n+                System.out.println(\"\");\n+                System.out.println(\"Options: -i|--iterations=<n|-1> - number of iterations (-1 is infinite)\");\n+                System.out.println(\"         -w|--width=<n>         - screen width; default \"+DEFAULT_SCREEN_WIDTH);\n+                System.out.println(\"         -h|--height=<n>        - screen height; default \"+DEFAULT_SCREEN_HEIGHT);\n+                System.out.println(\"         -n|--noDoubleBuffer    - disable double-buffering test\");\n+                System.out.println(\"\");\n+                System.out.println(\"Tests: line\");\n+                System.out.println(\"       rect\");\n+                System.out.println(\"       polyline\");\n+                System.out.println(\"       polygon\");\n+                System.out.println(\"       arc\");\n+                System.out.println(\"       oval\");\n+                System.out.println(\"       roundrect\");\n+                System.out.println(\"       string\");\n+                System.out.println(\"       transparentimage\");\n+                System.out.println(\"       image\");\n+                System.exit(1);\n+              }\n+            else if ((args[i].startsWith(\"-i=\")\n+                || args[i].startsWith(\"--iterations=\")))\n+              {\n+                speed.iterations =\n+                  Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-i\") || args[i].equals(\"--iterations\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.iterations = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].startsWith(\"-w=\")\n+                || args[i].startsWith(\"--width=\")))\n+              {\n+                speed.screenWidth =\n+                  Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-w\") || args[i].equals(\"--width\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.screenWidth = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].startsWith(\"-h=\")\n+                || args[i].startsWith(\"--height=\")))\n+              {\n+                speed.screenHeight =\n+                  Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i+=1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-h\") || args[i].equals(\"--height\")))\n+              {\n+                if ((i+1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.screenHeight = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-n\")\n+                || args[i].equals(\"--noDoubleBuffer\")))\n+              {\n+                speed.doubleBufferFlag = false;\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].equals(\"--\"))\n+              {\n+                endOfOptionsFlag = true;\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"-\"))\n+              {\n+                System.err.println(\"ERROR: Unknown option '\" + args[i] + \"'!\");\n+                System.exit(2);\n+              }\n+          }\n+        StringTokenizer tokenizer = new StringTokenizer(args[i], \" +,\");\n+        while (tokenizer.hasMoreTokens())\n+          {\n+            String s = tokenizer.nextToken().toLowerCase();\n+            if (s.equals(\"line\"))\n+              awtTests |= AWTTEST_LINES;\n+            else if (s.equals(\"rect\"))\n+              awtTests |= AWTTEST_RECT;\n+            else if (s.equals(\"polyline\"))\n+              awtTests |= AWTTEST_POLYLINE;\n+            else if (s.equals(\"polygon\"))\n+              awtTests |= AWTTEST_POLYGON;\n+            else if (s.equals(\"arc\"))\n+              awtTests |= AWTTEST_ARC;\n+            else if (s.equals(\"oval\"))\n+              awtTests |= AWTTEST_OVAL;\n+            else if (s.equals(\"roundrect\"))\n+              awtTests |= AWTTEST_ROUNDRECT;\n+            else if (s.equals(\"string\"))\n+              awtTests |= AWTTEST_STRING;\n+            else if (s.equals(\"transparentimage\"))\n+              awtTests |= AWTTEST_TRANSPARENTIMAGE;\n+            else if (s.equals(\"image\"))\n+              awtTests |= AWTTEST_IMAGE;\n+            else\n+              {\n+                System.err.println(\"Unknown AWT test '\" + s + \"'!\");\n+                System.exit(2);\n+              }\n+          }\n+        i += 1;\n+      }\n+    if (awtTests != AWTTEST_NONE)\n+      speed.awtTests = awtTests;\n+\n+    // Create graphics.\n+    final Frame frame = new Frame(\"AicasGraphicsBenchmark\");\n+\n+    frame.addWindowListener(new WindowAdapter()\n+    {\n+      public void windowClosing(WindowEvent e)\n+      {\n+        frame.setVisible(false);\n+        System.exit(0);\n+      }\n+    });\n+\n+    frame.add(speed,BorderLayout.CENTER);\n+    frame.setSize(speed.screenWidth,speed.screenHeight);\n+    frame.setVisible(true);\n+\n+    // Insets are correctly set only after the native peer was created.\n+    Insets insets = frame.getInsets();\n+    // The internal size of the frame should be 320x240.\n+    frame.setSize(320 + insets.right + insets.left,\n+                  240 + insets.top + insets.bottom);\n+  }\n+\n+  private Image loadImage(String imageName)\n+  {\n+    Image result = null;\n+    logger.logp(Level.INFO, \"AicasGraphicsBenchmark\", \"loadImage\",\n+                \"Loading image: \" + imageName);\n+    URL url = getClass().getResource(imageName);\n+    if (url != null)\n+      {\n+        result = Toolkit.getDefaultToolkit().getImage(url);\n+        prepareImage(result, this);\n+      }\n+    else\n+      {\n+        logger.logp(Level.WARNING, \"AicasGraphicsBenchmark\", \"loadImage\",\n+                    \"Could not locate image resource in class path: \"\n+                    + imageName);\n+      }\n+    return result;\n+  }\n+\n+  /**\n+   * Executes the test methods.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  void runTestSet(Graphics g, Dimension size)\n+  {\n+    if ((awtTests & AWTTEST_LINES) != 0)\n+      test_drawLine(g, size);\n+    if ((awtTests & AWTTEST_RECT) != 0)\n+      test_drawRect(g, size);\n+    if ((awtTests & AWTTEST_RECT) != 0)\n+      test_fillRect(g, size);\n+    if ((awtTests & AWTTEST_POLYLINE) != 0)\n+      test_drawPolyline(g, size);\n+    if ((awtTests & AWTTEST_POLYGON) != 0)\n+      test_drawPolygon(g, size);\n+    if ((awtTests & AWTTEST_POLYGON) != 0)\n+      test_fillPolygon(g,size);\n+    if ((awtTests & AWTTEST_ARC) != 0)\n+      test_drawArc(g,size);\n+    if ((awtTests & AWTTEST_ARC) != 0)\n+      test_fillArc(g,size);\n+    if ((awtTests & AWTTEST_OVAL) != 0)\n+      test_drawOval(g, size);\n+    if ((awtTests & AWTTEST_OVAL) != 0)\n+      test_fillOval(g, size);\n+    if ((awtTests & AWTTEST_ROUNDRECT) != 0)\n+      test_fillRoundRect(g, size);\n+    if ((awtTests & AWTTEST_STRING) != 0)\n+      test_drawString(g, size);\n+    if ((awtTests & AWTTEST_TRANSPARENTIMAGE) != 0)\n+      test_drawTransparentImage(g,size);\n+    if ((awtTests & AWTTEST_IMAGE) != 0)\n+      test_drawImage(g,size);\n+  }\n+\n+  /**\n+   * Gets a new random Color.\n+   *\n+   * @returna new random Color\n+   */\n+  private Color getNextColor()\n+  {\n+    return new Color((int) (Math.random() * 254) + 1,\n+                     (int) (Math.random() * 254) + 1,\n+                     (int) (Math.random() * 254) + 1);\n+  }\n+\n+  /**\n+   * Draws random lines within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawLine(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x1 = (int) (Math.random() * (size.width-minSize));\n+        int y1 = (int) (Math.random() * (size.height-minSize));\n+        int x2 = (int) (Math.random() * (size.width-minSize));\n+        int y2 = (int) (Math.random() * (size.height-minSize));\n+        g.drawLine(x1, y1, x2, y2);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"drawLine \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random rectangles within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawRect(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x1 = (int) (Math.random() * (size.width-minSize));\n+        int y1 = (int) (Math.random() * (size.height-minSize));\n+        int x2 = (int) (Math.random() * (size.width-minSize));\n+        int y2 = (int) (Math.random() * (size.height-minSize));\n+        g.drawRect(x1, y1, x2, y2);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"drawRect \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random rectangles within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillRect(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x1 = (int) (Math.random() * (size.width-minSize));\n+        int y1 = (int) (Math.random() * (size.height-minSize));\n+        int x2 = (int) (Math.random() * (size.width-minSize));\n+        int y2 = (int) (Math.random() * (size.height-minSize));\n+        g.fillRect(x1, y1, x2, y2);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"fillRect \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random polylines within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawPolyline(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    long startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int points = (int)(Math.random() * 6) + 3;\n+        int[] x_coords = new int[points];\n+        int[] y_coords = new int[points];\n+        for (int j = 0; j < points; j+=1)\n+          {\n+            x_coords[j] = (int)(Math.random() * (size.width));\n+            y_coords[j] = (int)(Math.random() * (size.height));\n+          }\n+        g.drawPolyline(x_coords,y_coords, points);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"drawPolyline \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random polygons within the given dimensions.\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawPolygon(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    long startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int points = (int) (Math.random() * 6) + 3;\n+        int[] xcoords = new int[points];\n+        int[] ycoords = new int[points];\n+        for(int j = 0; j < points; j+=1)\n+          {\n+            xcoords[j] = (int) (Math.random() * (size.width));\n+            ycoords[j] = (int) (Math.random() * (size.height));\n+          }\n+        g.drawPolygon(xcoords, ycoords, points);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"drawPolygon \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random filled polygons within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillPolygon(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    long startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int points = (int) (Math.random() * 6) + 3;\n+        int[] xcoords = new int[points];\n+        int[] ycoords = new int[points];\n+        for (int j = 0; j < points; j+=1)\n+          {\n+            xcoords[j] = (int) (Math.random() * (size.width));\n+            ycoords[j] = (int) (Math.random() * (size.height));\n+          }\n+        g.fillPolygon(xcoords, ycoords, points);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"fillPolygon \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random arcs within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawArc(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        int startAngle = (int) (Math.random() * 360);\n+        int arcAngle = (int) (Math.random() * 360 - startAngle);\n+        g.drawArc(x, y, width, height, startAngle, arcAngle);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"drawArc \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random filled arcs within the given dimensions.\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillArc(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+    {\n+      g.setColor(getNextColor());\n+      int x = (int) (Math.random() * (size.width - minSize + 1));\n+      int y = (int) (Math.random() * (size.height - minSize + 1));\n+      int width = (int)(Math.random() * (size.width - x - minSize) + minSize);\n+      int height = (int)(Math.random() * (size.height - y - minSize) + minSize);\n+      int startAngle = (int)(Math.random() * 360);\n+      int arcAngle = (int)(Math.random() * 360);\n+      g.fillArc(x, y, width, height, startAngle, arcAngle);\n+\n+    }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"fillArc \" + maxTests + \" times\", (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random ovals within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawOval(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x = (int)(Math.random() * (size.width - minSize + 1));\n+        int y = (int)(Math.random() * (size.height - minSize + 1));\n+        int width = (int)(Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int)(Math.random() * (size.height - y - minSize) + minSize);\n+        g.drawOval(x, y, Math.min(width, height), Math.min(width, height));\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"drawOval \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random filled ovals within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillOval(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        g.fillOval(x, y, width,height);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"fillOval \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random filled rounded rectangles within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillRoundRect(Graphics g, Dimension size)\n+  {\n+    int maxTests = DEFAULT_TEST_SIZE;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i=0; i < maxTests; i+=1)\n+      {\n+        g.setColor(getNextColor());\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        int arcWidth = (int) (Math.random() * (width - 1) + 1);\n+        int arcHeight = (int) (Math.random() * (height - 1) + 5);\n+        g.fillRoundRect(x, y, width, height, arcWidth, arcHeight);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"fillRoundRect \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random images within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawImage(Graphics g, Dimension size)\n+  {\n+    if (gifTestImage == null)\n+      {\n+        logger.logp(Level.WARNING, \"AicasGraphicsBenchmark\", \"runTestSet\",\n+                    \"Skipping 'test_drawImage' due to missing resource.\");\n+        return;\n+      }\n+    \n+    int maxTests = DEFAULT_TEST_SIZE / 2;\n+    if(maxTests == 0)\n+      maxTests = 1;\n+    int imageWidth = gifTestImage.getWidth(this);\n+    int imageHeight = gifTestImage.getHeight(this);\n+    long  startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x = (int) (Math.random() * (size.width - imageWidth + 1));\n+        int y = (int) (Math.random() * (size.height - imageHeight + 1));\n+        g.drawImage(gifTestImage, x, y, this);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"drawImage \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random transparent images within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawTransparentImage(Graphics g, Dimension size)\n+  {\n+    if (pngTestImage == null)\n+      {\n+        logger.logp(Level.WARNING, \"AicasGraphicsBenchmark\", \"runTestSet\",\n+                    \"Skipping 'test_drawTransparentImage' due to missing resource.\");\n+        return;\n+      }\n+\n+    \n+    int maxTests = DEFAULT_TEST_SIZE / 5;\n+    if(maxTests == 0)\n+      maxTests = 1;\n+    int imageWidth = pngTestImage.getWidth(this);\n+    int imageHeight = pngTestImage.getHeight(this);\n+    long  startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        g.setColor(getNextColor());\n+        int x = (int) (Math.random() * (size.width - imageWidth + 1));\n+        int y = (int) (Math.random() * (size.height - imageHeight + 1));\n+        g.drawImage(pngTestImage, x, y, this);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw transparent image \" + maxTests + \" times\",\n+               (endTime-startTime));\n+  }\n+\n+  /**\n+   * Draws random strings within the given dimensions.\n+   *\n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawString(Graphics g, Dimension size)\n+  {\n+      int maxTests = DEFAULT_TEST_SIZE;\n+      String testString = \"HelloWorld\";\n+      int stringWidth = g.getFontMetrics().stringWidth(testString);\n+      int stringHeight = g.getFontMetrics().getHeight();\n+      \n+      long startTime = System.currentTimeMillis();\n+      for(int i = 0; i < maxTests; i += 1)\n+        {\n+          g.setColor(getNextColor());\n+          g.drawString(testString, (int) (Math.random() * (size.width - stringWidth + 1)),(int)(Math.random() * (size.height - stringHeight + 1)) + stringHeight);\n+        }\n+      long endTime = System.currentTimeMillis();\n+      recordTest(\"drawString \" + maxTests + \" times\", (endTime-startTime));\n+  }\n+\n+  private class GraphicsTest extends Canvas implements Runnable\n+  {\n+    Thread paintThread;\n+    boolean done = false;\n+    boolean doPaint = false;\n+    boolean withClipping = false;\n+\n+    public GraphicsTest()\n+    {\n+      paintThread = new Thread(this);\n+      paintThread.start();\n+    }\n+\n+    public void run()\n+    {\n+      int runCount = 0;\n+      while (!done)\n+        {\n+          runCount++;\n+\n+          try\n+            {\n+              synchronized (this)\n+                {\n+                  while (!doPaint)\n+                    {\n+                      try\n+                        {\n+                          wait(200);\n+                        }\n+                      catch (InterruptedException exception)\n+                        {\n+                          return;\n+                        }\n+                    }\n+                }\n+\n+              if (iterations != 0)\n+                System.out.println(\"--- run...(\" + runCount + \"/\" + iterations\n+                                   + \") ------------------------------------------------------\");\n+\n+              Graphics g = getGraphics();\n+              Dimension size = getSize();\n+              logger.logp(Level.INFO, \"AicasGraphicsBenchmark.GraphicsTest\", \"run\",\n+              \"Start testing non-double-buffered drawing\");\n+              runSet_noClipping(g,size);\n+              runSet_zeroClipping(g, size);\n+              runSet_withClipping(g, size);\n+              g.dispose();\n+\n+              if (doubleBufferFlag)\n+                {\n+                  logger.logp(Level.INFO, \"AicasGraphicsBenchmark.GraphicsTest\",\n+                              \"run\", \"Start testing double-buffered drawing\");\n+                  Graphics canvas = getGraphics();\n+                  Image doublebuffer = createImage(size.width,size.height);\n+                  g = doublebuffer.getGraphics();\n+                  runSet_noClipping(g,size);\n+                  g.dispose();\n+                  canvas.drawImage(doublebuffer, 0, 0, this);\n+\n+                  g = doublebuffer.getGraphics();\n+                  runSet_withClipping(g, size);\n+                  g.dispose();\n+                  canvas.drawImage(doublebuffer, 0, 0, this);\n+\n+                  g = doublebuffer.getGraphics();\n+                  runSet_zeroClipping(g, size);\n+                  g.dispose();\n+                  canvas.drawImage(doublebuffer, 0, 0, this);\n+                  canvas.dispose();\n+                }\n+\n+              printReport();\n+\n+              if (iterations != 0)\n+                {\n+                  if (iterations != -1)\n+                    iterations--;\n+                }\n+              else\n+                {\n+                  System.out.println(\"--- done --------------------------------------------------------\");\n+                  synchronized (this)\n+                    {\n+                      doPaint = false;\n+                    }\n+                  done = true;\n+                }\n+            }\n+          catch (Error error)\n+            {\n+              System.err.println(\"Error: \" + error);\n+              System.exit(129);\n+            }\n+        }\n+      System.exit(0);\n+    }\n+\n+    private void runSet_zeroClipping(Graphics g, Dimension size)\n+    {\n+      int clipped_width;\n+      int clipped_height;\n+      int clipped_x;\n+      int clipped_y;\n+\n+      clipped_width = 0;\n+      clipped_height = 0;\n+      clipped_x = (size.width) / 2;\n+      clipped_y = (size.height) / 2;\n+      g.setClip(0, 0, size.width, size.height);\n+      g.setColor(Color.BLACK);\n+      g.fillRect(0, 0, size.width, size.height);\n+      g.setColor(Color.WHITE);\n+      g.drawRect(0, 0, size.width - 1, size.height - 1);\n+      g.fillRect(clipped_x - 1, clipped_y - 1, clipped_width + 2, clipped_height + 2);\n+\n+      g.clipRect(clipped_x, clipped_y, clipped_width, clipped_height);\n+      g.setColor(Color.BLACK);\n+      g.fillRect(0, 0, size.width, size.height);\n+\n+      setTestContext(\"clipping to zero\");\n+\n+      runTestSet(g, size);\n+    }\n+\n+    private void runSet_withClipping(Graphics g, Dimension size)\n+    {\n+      int clipped_width = 2 * size.width / 3;\n+      int clipped_height = 2 * size.height / 3;\n+      int clipped_x = (size.width - clipped_width) / 2;\n+      int clipped_y = (size.height - clipped_height) / 2;\n+\n+      g.setClip(0,0,size.width,size.height);\n+\n+      g.setColor(Color.BLACK);\n+      g.fillRect(0, 0, size.width, size.height);\n+      g.setColor(Color.GREEN);\n+      g.drawRect(0, 0, size.width - 1, size.height - 1);\n+      g.setColor(Color.WHITE);\n+      g.fillRect(clipped_x - 1, clipped_y - 1, clipped_width + 2, clipped_height + 2);\n+\n+      g.clipRect(clipped_x, clipped_y, clipped_width, clipped_height);\n+      g.setColor(Color.BLACK);\n+      g.fillRect(0, 0, size.width, size.height);\n+\n+      setTestContext(\"with clipping\");\n+\n+      runTestSet(g, size);\n+    }\n+\n+    public void runSet_noClipping(Graphics g, Dimension size)\n+    {\n+      g.setColor(Color.BLACK);\n+      g.fillRect(0, 0, size.width, size.height);\n+\n+      setTestContext(\"without clipping\");\n+\n+      runTestSet(g, size);\n+    }\n+\n+    public void paint(Graphics g)\n+    {\n+      synchronized(this)\n+        {\n+          doPaint=true;\n+          notify();\n+        }\n+    }\n+  }\n+}\n+\n+class TestContext\n+{\n+}\n+\n+class TestSet\n+{\n+  private Map testsMap = new TreeMap();\n+\n+  public void putTest(String testName, TestRecorder recoder)\n+  {\n+    testsMap.put(testName,recoder);\n+  }\n+\n+  public TestRecorder getTest(String testName)\n+  {\n+    return (TestRecorder)testsMap.get(testName);\n+  }\n+\n+  public Iterator testIterator()\n+  {\n+    return testsMap.keySet().iterator();\n+  }\n+}\n+\n+class TestRecorder\n+{\n+  String test;\n+  long   totalTime = 0;\n+  long   minTime   = Long.MAX_VALUE;\n+  long   maxTime   = Long.MIN_VALUE;\n+  int    runCount  = 0;\n+\n+  /**\n+   * @return Returns the maxTime.\n+   */\n+  public final long getMaxTime()\n+  {\n+    return maxTime;\n+  }\n+\n+  /**\n+   * @return Returns the minTime.\n+   */\n+  public final long getMinTime()\n+  {\n+    return minTime;\n+  }\n+\n+  /**\n+   * @return Returns the test name.\n+   */\n+  public final String getTestName()\n+  {\n+    return test;\n+  }\n+\n+  public final double getAverage()\n+  {\n+    return ((double)totalTime) / ((double)runCount);\n+  }\n+\n+  public TestRecorder(String testName)\n+  {\n+    test = testName;\n+  }\n+\n+  public void addRun(long time)\n+  {\n+    totalTime += time;\n+    if(minTime > time)\n+      minTime = time;\n+    if(maxTime < time)\n+      maxTime = time;\n+    runCount += 1;\n+  }\n+}"}, {"sha": "bd5e755cbb50096ab7f2b8837d4d6d301d30bec0", "filename": "libjava/classpath/examples/gnu/classpath/examples/awt/Demo.java", "status": "modified", "additions": 293, "deletions": 3, "changes": 296, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FDemo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -20,11 +20,70 @@\n \n package gnu.classpath.examples.awt;\n \n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Checkbox;\n+import java.awt.CheckboxGroup;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.Cursor;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.DisplayMode;\n+import java.awt.FileDialog;\n+import java.awt.FlowLayout;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.GridLayout;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.Label;\n import java.awt.List;\n-import java.awt.event.*;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.MenuShortcut;\n+import java.awt.Panel;\n+import java.awt.ScrollPane;\n+import java.awt.TextField;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.StringSelection;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.datatransfer.UnsupportedFlavorException;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DragGestureEvent;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.DragSourceContext;\n+import java.awt.dnd.DragSourceDragEvent;\n+import java.awt.dnd.DragSourceDropEvent;\n+import java.awt.dnd.DragSourceEvent;\n+import java.awt.dnd.DragSourceListener;\n+import java.awt.dnd.DropTarget;\n+import java.awt.dnd.DropTargetDragEvent;\n+import java.awt.dnd.DropTargetDropEvent;\n+import java.awt.dnd.DropTargetEvent;\n+import java.awt.dnd.DropTargetListener;\n+import java.awt.dnd.InvalidDnDOperationException;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n import java.net.URL;\n-import java.util.*;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Vector;\n \n class Demo\n {\n@@ -154,6 +213,9 @@ public void actionPerformed(ActionEvent e)\n       addSubWindow (\"RandomTests\", new TestWindow (this));\n       addSubWindow (\"RoundRect\", new RoundRectWindow ());\n       addSubWindow (\"Animation\", new AnimationWindow ());\n+      addSubWindow (\"Resolution\", new ResolutionWindow ());\n+      addSubWindow (\"Fullscreen\", new FullscreenWindow ());\n+      addSubWindow (\"Drag n' Drop\", new DragDropWindow ());\n \n       Panel sp = new Panel();\n       PrettyPanel p = new PrettyPanel();\n@@ -744,6 +806,234 @@ public void mousePressed(MouseEvent e) {\n       t.beep();\n     }\n   }\n+  \n+  static class ResolutionWindow extends SubFrame\n+  {\n+    GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();\n+    \n+    public void init ()\n+    {\n+      initted = true;\n+      \n+      setTitle(\"Change Screen Resolution\");\n+      final List list = new List();\n+      DisplayMode[] modes = gd.getDisplayModes();\n+      \n+      for (int i=0;i<modes.length;i++ )\n+        list.add(modes[i].getWidth()  + \"x\"\n+                 + modes[i].getHeight()\n+                 + ((modes[i].getBitDepth() != DisplayMode.BIT_DEPTH_MULTI)\n+                   ? \"x\" + modes[i].getBitDepth() + \"bpp\"\n+                   : \"\")\n+                 + ((modes[i].getRefreshRate() != DisplayMode.REFRESH_RATE_UNKNOWN)\n+                   ? \"@\" + modes[i].getRefreshRate() + \"Hz\"\n+                   : \"\"));\n+      \n+      ActionListener al = new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent ae)\n+        {\n+          int i = list.getSelectedIndex();\n+          gd.setDisplayMode(gd.getDisplayModes()[i]);\n+        }\n+      };\n+      \n+      Button b = new Button(\"Switch\");\n+      Button c = new Button(\"Close\");\n+      \n+      list.addActionListener(al);\n+      b.addActionListener(al);\n+      \n+      c.addActionListener(new ActionListener () {\n+        public void actionPerformed (ActionEvent e) {\n+          dispose();\n+        }\n+      });\n+      \n+      setLayout(new GridLayout(3, 1, 5, 5));\n+      add(list);\n+      add(b);\n+      add(c);\n+      \n+      pack();\n+    }\n+  }\n+\n+  static class DragDropWindow\n+      extends SubFrame\n+      implements ActionListener, DropTargetListener\n+  {\n+    DragLabel source = new DragLabel(\"Drag and drop me to the following Button\",\n+                                     Label.CENTER);\n+\n+    Button target = new Button();\n+\n+    public void init()\n+    {\n+      source.setForeground(Color.red);\n+      add(source, BorderLayout.NORTH);\n+\n+      target.addActionListener(this);\n+      add(target, BorderLayout.SOUTH);\n+\n+      new DropTarget(target, DnDConstants.ACTION_COPY_OR_MOVE, this);\n+\n+      setSize(205, 100);\n+\n+      pack();\n+    }\n+\n+    public void actionPerformed(ActionEvent e)\n+    {\n+      Button b = (Button) e.getSource();\n+      b.setLabel(\"\");\n+    }\n+\n+    public void dragEnter(DropTargetDragEvent e)\n+    {\n+    }\n+\n+    public void dragExit(DropTargetEvent e)\n+    {\n+    }\n+\n+    public void dragOver(DropTargetDragEvent e)\n+    {\n+    }\n+\n+    public void drop(DropTargetDropEvent e)\n+    {\n+      try\n+        {\n+          Transferable t = e.getTransferable();\n+\n+          if (e.isDataFlavorSupported(DataFlavor.stringFlavor))\n+            {\n+              e.acceptDrop(e.getDropAction());\n+\n+              String s;\n+              s = (String) t.getTransferData(DataFlavor.stringFlavor);\n+\n+              target.setLabel(s);\n+\n+              e.dropComplete(true);\n+            }\n+          else\n+            e.rejectDrop();\n+        }\n+      catch (java.io.IOException e2)\n+        {\n+        }\n+      catch (UnsupportedFlavorException e2)\n+        {\n+        }\n+    }\n+\n+    public void dropActionChanged(DropTargetDragEvent e)\n+    {\n+    }\n+\n+    class DragLabel\n+        extends Label\n+        implements DragGestureListener, DragSourceListener\n+    {\n+      private DragSource ds = DragSource.getDefaultDragSource();\n+\n+      public DragLabel(String s, int alignment)\n+      {\n+        super(s, alignment);\n+        int action = DnDConstants.ACTION_COPY_OR_MOVE;\n+        ds.createDefaultDragGestureRecognizer(this, action, this);\n+      }\n+\n+      public void dragGestureRecognized(DragGestureEvent e)\n+      {\n+        try\n+          {\n+            Transferable t = new StringSelection(getText());\n+            e.startDrag(DragSource.DefaultCopyNoDrop, t, this);\n+          }\n+        catch (InvalidDnDOperationException e2)\n+          {\n+            System.out.println(e2);\n+          }\n+      }\n+\n+      public void dragDropEnd(DragSourceDropEvent e)\n+      {\n+        if (e.getDropSuccess() == false)\n+          return;\n+\n+        int action = e.getDropAction();\n+        if ((action & DnDConstants.ACTION_MOVE) != 0)\n+          setText(\"\");\n+      }\n+\n+      public void dragEnter(DragSourceDragEvent e)\n+      {\n+        DragSourceContext ctx = e.getDragSourceContext();\n+\n+        int action = e.getDropAction();\n+        if ((action & DnDConstants.ACTION_COPY) != 0)\n+          ctx.setCursor(DragSource.DefaultCopyDrop);\n+        else\n+          ctx.setCursor(DragSource.DefaultCopyNoDrop);\n+      }\n+\n+      public void dragExit(DragSourceEvent e)\n+      {\n+      }\n+\n+      public void dragOver(DragSourceDragEvent e)\n+      {\n+      }\n+\n+      public void dropActionChanged(DragSourceDragEvent e)\n+      {\n+      }\n+    }\n+  }\n+  \n+  static class FullscreenWindow extends SubFrame\n+  {\n+    GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();\n+    \n+    public void init ()\n+    {\n+      initted = true;\n+      \n+      setTitle(\"Fullscreen Exclusive Mode\");\n+\n+      ActionListener al = new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent ae)\n+        {\n+          if (gd.getFullScreenWindow() == FullscreenWindow.this)\n+            gd.setFullScreenWindow(null);\n+          else\n+            gd.setFullScreenWindow(FullscreenWindow.this);\n+        }\n+      };\n+      \n+      Button b = new Button(\"Toggle Fullscreen\");\n+      Button c = new Button(\"Close\");\n+      \n+      b.addActionListener(al);\n+      \n+      c.addActionListener(new ActionListener () {\n+        public void actionPerformed (ActionEvent e) {\n+          gd.setFullScreenWindow(null);\n+          dispose();\n+        }\n+      });\n+      \n+      setLayout(new GridLayout(3, 1, 5, 5));\n+      add(b);\n+      add(c);\n+      \n+      pack();\n+    }\n+  }\n \n   static class RoundRectWindow extends SubFrame\n   {"}, {"sha": "118ae2463b80ebe0303fd50cb1f5e8711af2e84c", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/J2dBenchmark.java", "status": "added", "additions": 1571, "deletions": 0, "changes": 1571, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmark.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmark.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmark.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,1571 @@\n+/* J2dBenchmark.java -- Benchmarking utility for java2d,\n+   based on the Aicas AWT benchmarker\n+ Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath examples.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA. */\n+\n+package gnu.classpath.examples.java2d;\n+\n+import java.awt.AlphaComposite;\n+import java.awt.BasicStroke;\n+import java.awt.BorderLayout;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.GradientPaint;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.Label;\n+import java.awt.MediaTracker;\n+import java.awt.Panel;\n+import java.awt.Rectangle;\n+import java.awt.RenderingHints;\n+import java.awt.TexturePaint;\n+import java.awt.Toolkit;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Arc2D;\n+import java.awt.geom.CubicCurve2D;\n+import java.awt.geom.Ellipse2D;\n+import java.awt.geom.GeneralPath;\n+import java.awt.geom.Line2D;\n+import java.awt.geom.QuadCurve2D;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.geom.RoundRectangle2D;\n+import java.awt.image.BufferedImage;\n+import java.net.URL;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.StringTokenizer;\n+import java.util.TreeMap;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+public class J2dBenchmark\n+    extends Panel\n+{\n+  /**\n+   * Default number of test-iterations.\n+   */\n+  protected static final int DEFAULT_TEST_SIZE = 1000;\n+\n+  /**\n+   * Default screen size.\n+   */\n+  protected static final int DEFAULT_SCREEN_WIDTH = 320;\n+\n+  protected static final int DEFAULT_SCREEN_HEIGHT = 240;\n+\n+  /**\n+   * Java2D tests.\n+   */\n+  protected static final int J2DTEST_ARC = 1 << 0;\n+\n+  protected static final int J2DTEST_CUBICCURVE = 1 << 1;\n+\n+  protected static final int J2DTEST_ELLIPSE = 1 << 2;\n+\n+  protected static final int J2DTEST_GENERALPATH = 1 << 3;\n+\n+  protected static final int J2DTEST_LINE = 1 << 4;\n+\n+  protected static final int J2DTEST_QUADCURVE = 1 << 5;\n+\n+  protected static final int J2DTEST_RECTANGLE = 1 << 6;\n+\n+  protected static final int J2DTEST_ROUNDRECTANGLE = 1 << 7;\n+\n+  protected static final int J2DTEST_IMAGE = 1 << 8;\n+\n+  protected static final int J2DTEST_NONE = 0;\n+\n+  /*\n+  private static final int J2DTEST_ALL = J2DTEST_ARC | J2DTEST_CUBICCURVE\n+                                         | J2DTEST_ELLIPSE\n+                                         | J2DTEST_GENERALPATH | J2DTEST_LINE\n+                                         | J2DTEST_QUADCURVE\n+                                         | J2DTEST_RECTANGLE\n+                                         | J2DTEST_ROUNDRECTANGLE\n+                                         | J2DTEST_IMAGE;\n+  */\n+  private static final int J2DTEST_ALL = J2DTEST_ARC | J2DTEST_CUBICCURVE\n+                                         | J2DTEST_ELLIPSE\n+                                         | J2DTEST_LINE\n+                                         | J2DTEST_QUADCURVE\n+                                         | J2DTEST_RECTANGLE\n+                                         | J2DTEST_ROUNDRECTANGLE\n+                                         | J2DTEST_IMAGE;\n+\n+  int iterations = 1;\n+\n+  protected int screenWidth = DEFAULT_SCREEN_WIDTH;\n+\n+  protected int screenHeight = DEFAULT_SCREEN_HEIGHT;\n+\n+  protected boolean noClippingFlag = true;\n+\n+  protected boolean withClippingFlag = true;\n+\n+  protected boolean zeroClippingFlag = true;\n+\n+  protected boolean singleBufferFlag = true;\n+\n+  protected boolean doubleBufferFlag = true;\n+\n+  protected boolean gradientFlag = false;\n+\n+  protected String texture = null;\n+\n+  protected boolean strokeFlag = false;\n+\n+  protected float composite = 1;\n+\n+  protected int xtranslate = 0;\n+\n+  protected int ytranslate = 0;\n+\n+  protected double xshear = 0;\n+\n+  protected double yshear = 0;\n+\n+  protected double rotate = 0;\n+\n+  protected boolean antialiasFlag = false;\n+\n+  protected AffineTransform affineTransform = null;\n+\n+  protected int awtTests = J2DTEST_ALL;\n+\n+  protected int testSize = DEFAULT_TEST_SIZE;\n+\n+  private Label testLabel;\n+\n+  private String testContext = \"\";\n+\n+  Logger logger = Logger.getLogger(\"J2dGraphicsBenchmark\");\n+\n+  private Image pngTestImage;\n+\n+  private Image gifTestImage;\n+\n+  protected BufferedImage textureImage;\n+\n+  protected TestSet testSetMap = new TestSet();\n+\n+  public String init()\n+  {\n+    boolean loadError = false;\n+    pngTestImage = loadImage(\"aicas.png\");\n+    gifTestImage = loadImage(\"palme.gif\");\n+\n+    if (texture != null)\n+      {\n+        textureImage = loadBufferedImage(texture);\n+\n+        if (textureImage == null)\n+          {\n+            logger.logp(Level.WARNING, \"J2dGraphicsBenchmark\", \"init\",\n+                        \"Unable to load texture - defaulting \"\n+                            + \"to solid colours\");\n+            texture = null;\n+            loadError = true;\n+          }\n+      }\n+\n+    setLayout(new BorderLayout());\n+    testLabel = new Label();\n+    add(testLabel, BorderLayout.NORTH);\n+    add(new GraphicsTest(), BorderLayout.CENTER);\n+\n+    if (loadError)\n+      return \"Unable to load image\";\n+    else\n+      return null;\n+  }\n+\n+  void setTestContext(String testName)\n+  {\n+    logger.logp(Level.INFO, \"J2dGraphicsBenchmark\", \"recordTest\",\n+                \"--- Starting new test context: \" + testName);\n+    testContext = testName;\n+    testLabel.setText(testName);\n+  }\n+\n+  private void recordTest(String testName, long time)\n+  {\n+    logger.logp(Level.INFO, \"J2dGraphicsBenchmark\", \"recordTest\",\n+                testContext + \": \" + testName + \" duration (ms): \" + time);\n+    TestRecorder recorder = testSetMap.getTest(testName);\n+    if (recorder == null)\n+      {\n+        recorder = new TestRecorder(testName);\n+        testSetMap.putTest(testName, recorder);\n+      }\n+    recorder.addRun(time);\n+  }\n+\n+  void printReport()\n+  {\n+    for (Iterator i = testSetMap.testIterator(); i.hasNext();)\n+      {\n+        TestRecorder recorder = testSetMap.getTest((String) i.next());\n+        System.out.println(\"TEST \" + recorder.getTestName() + \": average \"\n+                           + recorder.getAverage() + \"ms [\"\n+                           + recorder.getMinTime() + \"-\"\n+                           + recorder.getMaxTime() + \"]\");\n+      }\n+  }\n+\n+  void testComplete()\n+  {\n+    System.exit(0);\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    int awtTests;\n+    int i;\n+    boolean endOfOptionsFlag;\n+    J2dBenchmark speed = new J2dBenchmark();\n+\n+    // Parse arguments.\n+    i = 0;\n+    endOfOptionsFlag = false;\n+    awtTests = J2DTEST_NONE;\n+    while (i < args.length)\n+      {\n+        if (! endOfOptionsFlag)\n+          {\n+            if (args[i].equals(\"--help\") || args[i].equals(\"-help\")\n+                || args[i].equals(\"-h\"))\n+              {\n+                System.out.println(\"Usage: J2dBenchmark [<options>] [<test>  ...]\");\n+                System.out.println(\"\");\n+                System.out.println(\"Options: -i|--iterations=<n|-1> - number of iterations (-1 is infinite; default \"\n+                                   + speed.iterations + \")\");\n+                System.out.println(\"         -w|--width=<n>         - screen width; default \"\n+                                   + DEFAULT_SCREEN_WIDTH);\n+                System.out.println(\"         -h|--height=<n>        - screen height; default \"\n+                                   + DEFAULT_SCREEN_HEIGHT);\n+                System.out.println(\"         -d|--noDoubleBuffer    - disable double-buffering test\");\n+                System.out.println(\"         -s|--testsize=<n>      - size of each test; default \"\n+                                   + DEFAULT_TEST_SIZE);\n+                System.out.println(\"         -c|--noClipping        - disable clipping test\");\n+                System.out.println(\"         -z|--noZeroClipping    - disable clipping to zero test\");\n+                System.out.println(\"\");\n+                System.out.println(\"Additional options:\");\n+                System.out.println(\"         --with-gradients       - enable gradients (not compatible with --texture)\");\n+                System.out.println(\"         --with-stroking        - enable random stroking\");\n+                System.out.println(\"         --texture=<file>       - enable texturing with this file (not compatible with --with-gradients)\");\n+                System.out.println(\"         --composite=<n|-1>     - set alpha composite level; -1 for random; default 1.0 (no transparency)\");\n+                System.out.println(\"         --anti-alias=<on|off>  - set anti-aliasing hint (not all implementations respect this); default off\");\n+                System.out.println(\"         --x-translate=<n>      - set x-axis translation; default 0\");\n+                System.out.println(\"         --y-translate=<n>      - set y-axis translation; default 0\");\n+                System.out.println(\"         --x-shear=<n>          - set x-axis shear; default 0\");\n+                System.out.println(\"         --y-shear=<n>          - set y-axis shear; default 0\");\n+                System.out.println(\"         --rotate=<n|-1>        - set rotation (radians); -1 for random; default: 0 (none)\");\n+                System.out.println(\"\");\n+                System.out.println(\"Tests: arc\");\n+                System.out.println(\"       cubiccurve\");\n+                System.out.println(\"       ellipse\");\n+                // System.out.println(\" generalpath\");\n+                System.out.println(\"       line\");\n+                System.out.println(\"       quadcurve\");\n+                System.out.println(\"       rectangle\");\n+                System.out.println(\"       roundrectangle\");\n+                System.out.println(\"       image\");\n+                System.exit(1);\n+              }\n+            else if ((args[i].startsWith(\"-i=\") || args[i].startsWith(\"--iterations=\")))\n+              {\n+                speed.iterations = Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-i\") || args[i].equals(\"--iterations\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.iterations = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].startsWith(\"-w=\") || args[i].startsWith(\"--width=\")))\n+              {\n+                speed.screenWidth = Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-w\") || args[i].equals(\"--width\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.screenWidth = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].startsWith(\"-h=\") || args[i].startsWith(\"--height=\")))\n+              {\n+                speed.screenHeight = Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-h\") || args[i].equals(\"--height\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.screenHeight = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-d\") || args[i].equals(\"--noDoubleBuffer\")))\n+              {\n+                speed.doubleBufferFlag = false;\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].startsWith(\"-s=\") || args[i].startsWith(\"--testsize=\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.testSize = Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-s\") || args[i].equals(\"--testsize\")))\n+              {\n+                if ((i + 1) >= args.length)\n+                  {\n+                    System.err.println(\"ERROR: No argument given for option '\"\n+                                       + args[i] + \"'!\");\n+                    System.exit(2);\n+                  }\n+                speed.testSize = Integer.parseInt(args[i + 1]);\n+                i += 2;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-c\") || args[i].equals(\"--noClipping\")))\n+              {\n+                speed.noClippingFlag = false;\n+                i += 1;\n+                continue;\n+              }\n+            else if ((args[i].equals(\"-z\") || args[i].equals(\"--noZeroClipping\")))\n+              {\n+                speed.zeroClippingFlag = false;\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].equals(\"--with-gradients\"))\n+              {\n+                speed.gradientFlag = true;\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].equals(\"--with-stroking\"))\n+              {\n+                speed.strokeFlag = true;\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--texture=\"))\n+              {\n+                speed.texture = args[i].substring(args[i].indexOf('=') + 1);\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--composite=\"))\n+              {\n+                speed.composite = Float.parseFloat(args[i].substring(args[i].indexOf('=') + 1));\n+                if (speed.composite != - 1\n+                    && (speed.composite < 0 || speed.composite > 1))\n+                  {\n+                    System.err.println(\"ERROR: Invalid value for composite (must be between 0 and 1, or -1 for random)\");\n+                    System.exit(2);\n+                  }\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--anti-alias=\"))\n+              {\n+                speed.antialiasFlag = (args[i].substring(args[i].indexOf('=') + 1).equals(\"on\"));\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--x-translate=\"))\n+              {\n+                speed.xtranslate = Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--y-translate=\"))\n+              {\n+                speed.ytranslate = Integer.parseInt(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--x-shear=\"))\n+              {\n+                speed.xshear = Double.parseDouble(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--y-shear=\"))\n+              {\n+                speed.yshear = Double.parseDouble(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"--rotate=\"))\n+              {\n+                speed.rotate = Double.parseDouble(args[i].substring(args[i].indexOf('=') + 1));\n+                i += 1;\n+                continue;\n+              }\n+\n+            else if (args[i].equals(\"--\"))\n+              {\n+                endOfOptionsFlag = true;\n+                i += 1;\n+                continue;\n+              }\n+            else if (args[i].startsWith(\"-\"))\n+              {\n+                System.err.println(\"ERROR: Unknown option '\" + args[i] + \"'!\");\n+                System.exit(2);\n+              }\n+          }\n+        StringTokenizer tokenizer = new StringTokenizer(args[i], \" +,\");\n+        while (tokenizer.hasMoreTokens())\n+          {\n+            String s = tokenizer.nextToken().toLowerCase();\n+            if (s.equals(\"arc\"))\n+              awtTests |= J2DTEST_ARC;\n+            else if (s.equals(\"cubiccurve\"))\n+              awtTests |= J2DTEST_CUBICCURVE;\n+            else if (s.equals(\"ellipse\"))\n+              awtTests |= J2DTEST_ELLIPSE;\n+            else if (s.equals(\"generalpath\"))\n+              awtTests |= J2DTEST_GENERALPATH;\n+            else if (s.equals(\"line\"))\n+              awtTests |= J2DTEST_LINE;\n+            else if (s.equals(\"quadcurve\"))\n+              awtTests |= J2DTEST_QUADCURVE;\n+            else if (s.equals(\"rectangle\"))\n+              awtTests |= J2DTEST_RECTANGLE;\n+            else if (s.equals(\"roundrectangle\"))\n+              awtTests |= J2DTEST_ROUNDRECTANGLE;\n+            else if (s.equals(\"image\"))\n+              awtTests |= J2DTEST_IMAGE;\n+            else\n+              {\n+                System.err.println(\"Unknown AWT test '\" + s + \"'!\");\n+                System.exit(2);\n+              }\n+          }\n+        i += 1;\n+      }\n+    if (awtTests != J2DTEST_NONE)\n+      speed.awtTests = awtTests;\n+\n+    // Create graphics.\n+    speed.init();\n+    final Frame frame = new Frame(\"J2dGraphicsBenchmark\");\n+\n+    frame.addWindowListener(new WindowAdapter()\n+    {\n+      public void windowClosing(WindowEvent e)\n+      {\n+        frame.setVisible(false);\n+        System.exit(0);\n+      }\n+    });\n+\n+    frame.add(speed, BorderLayout.CENTER);\n+    frame.setSize(speed.screenWidth, speed.screenHeight);\n+    frame.setVisible(true);\n+\n+    // Insets are correctly set only after the native peer was created.\n+    Insets insets = frame.getInsets();\n+    // The internal size of the frame should be 320x240.\n+    frame.setSize(320 + insets.right + insets.left, 240 + insets.top\n+                                                    + insets.bottom);\n+  }\n+\n+  private Image loadImage(String imageName)\n+  {\n+    Image result = null;\n+    logger.logp(Level.INFO, \"J2dGraphicsBenchmark\", \"loadImage\",\n+                \"Loading image: \" + imageName);\n+    URL url = getClass().getResource(imageName);\n+    if (url != null)\n+      {\n+        result = Toolkit.getDefaultToolkit().getImage(url);\n+        prepareImage(result, this);\n+      }\n+    else\n+      {\n+        logger.logp(Level.WARNING, \"J2dGraphicsBenchmark\", \"loadImage\",\n+                    \"Could not locate image resource in class path: \"\n+                        + imageName);\n+      }\n+    return result;\n+  }\n+\n+  private BufferedImage loadBufferedImage(String imageName)\n+  {\n+    BufferedImage result = null;\n+    logger.logp(Level.INFO, \"J2dGraphicsBenchmark\", \"loadImage\",\n+                \"Loading image: \" + imageName);\n+\n+    // Try to load image out of classpath before trying an absolute filename\n+    URL url = getClass().getResource(imageName);\n+    Image img;\n+    if (url != null)\n+      img = Toolkit.getDefaultToolkit().getImage(url);\n+    else\n+      img = Toolkit.getDefaultToolkit().getImage(imageName);\n+\n+    if (img != null)\n+      {\n+        // Wait for image to load\n+        try\n+          {\n+            MediaTracker tracker = new MediaTracker(this);\n+            tracker.addImage(img, 1);\n+            tracker.waitForAll();\n+\n+            prepareImage(img, this);\n+            result = new BufferedImage(img.getWidth(this), img.getHeight(this),\n+                                       BufferedImage.TYPE_INT_RGB);\n+            result.createGraphics().drawImage(img, 0, 0, this);\n+          }\n+        catch (InterruptedException e)\n+          {\n+          }\n+        catch (IllegalArgumentException e)\n+          {\n+          }\n+      }\n+\n+    if (result == null)\n+      {\n+        logger.logp(Level.WARNING, \"J2dGraphicsBenchmark\", \"loadBufferedImage\",\n+                    \"Could not locate image resource in class path: \"\n+                        + imageName);\n+      }\n+    return result;\n+  }\n+\n+  /**\n+   * Executes the test methods.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  void runTestSet(Graphics2D g, Dimension size)\n+  {\n+    // Any user-specified options (ie set transforms, rendering hints)\n+    prepareGraphics((Graphics2D) g);\n+\n+    if ((awtTests & J2DTEST_ARC) != 0)\n+      {\n+        test_drawArc(g, size);\n+        test_fillArc(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_CUBICCURVE) != 0)\n+      {\n+        test_drawCubicCurve(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_ELLIPSE) != 0)\n+      {\n+        test_drawEllipse(g, size);\n+        test_fillEllipse(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_GENERALPATH) != 0)\n+      {\n+        // Current implementation doesn't work\n+        test_drawGeneralPath(g, size);\n+        test_fillGeneralPath(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_LINE) != 0)\n+      {\n+        test_drawLine(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_QUADCURVE) != 0)\n+      {\n+        test_drawQuadCurve(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_RECTANGLE) != 0)\n+      {\n+        test_drawRectangle(g, size);\n+        test_fillRectangle(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_ROUNDRECTANGLE) != 0)\n+      {\n+        test_drawRoundRectangle(g, size);\n+        test_fillRoundRectangle(g, size);\n+      }\n+\n+    if ((awtTests & J2DTEST_IMAGE) != 0)\n+      {\n+        test_drawImage(g, size);\n+        test_drawTransparentImage(g, size);\n+      }\n+  }\n+\n+  /**\n+   * Reset all graphics settings to the standard, default values\n+   * \n+   * @param g the object to apply settings to\n+   */\n+  private void resetGraphics(Graphics2D g)\n+  {\n+    g.setTransform(new AffineTransform());\n+    g.setStroke(new BasicStroke());\n+    g.setComposite(AlphaComposite.SrcOut);\n+  }\n+\n+  /**\n+   * Sets initial user graphics options\n+   * \n+   * @param g the object to apply settings to\n+   */\n+  private void prepareGraphics(Graphics2D g)\n+  {\n+    // Transforms\n+    if (affineTransform != null)\n+      g.setTransform(affineTransform);\n+\n+    else if (xtranslate != 0 || ytranslate != 0 || xshear != 0 || yshear != 0)\n+      {\n+        g.translate(xtranslate, ytranslate);\n+        g.shear(xshear, yshear);\n+      }\n+\n+    if (rotate > 0)\n+      g.rotate(rotate * Math.PI, screenWidth / 2, screenHeight / 2);\n+\n+    // Composite (transparency)\n+    if (composite > 0)\n+      {\n+        g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+                                                  composite));\n+      }\n+\n+    // Textures\n+    if (texture != null)\n+      g.setPaint(new TexturePaint(textureImage,\n+                                  new Rectangle(0, 0, textureImage.getWidth(),\n+                                                textureImage.getHeight())));\n+\n+    // Anti-alias setting\n+    if (antialiasFlag)\n+      g.setRenderingHints(new RenderingHints(RenderingHints.KEY_ANTIALIASING,\n+                                             RenderingHints.VALUE_ANTIALIAS_ON));\n+    else\n+      g.setRenderingHints(new RenderingHints(RenderingHints.KEY_ANTIALIASING,\n+                                             RenderingHints.VALUE_ANTIALIAS_OFF));\n+  }\n+\n+  /**\n+   * Gets new random settings\n+   * \n+   * @param g the object to set parameters for\n+   * @param size the screen size\n+   */\n+  private void setRandom(Graphics2D g, Dimension size)\n+  {\n+    // Set colour / paint\n+    if (gradientFlag)\n+      {\n+        Color c1 = new Color((int) (Math.random() * 254) + 1,\n+                             (int) (Math.random() * 254) + 1,\n+                             (int) (Math.random() * 254) + 1);\n+\n+        Color c2 = new Color((int) (Math.random() * 254) + 1,\n+                             (int) (Math.random() * 254) + 1,\n+                             (int) (Math.random() * 254) + 1);\n+\n+        g.setPaint(new GradientPaint(0, 0, c1, screenWidth / 5,\n+                                     screenHeight / 5, c2, true));\n+      }\n+\n+    else if (texture == null)\n+      g.setPaint(new Color((int) (Math.random() * 254) + 1,\n+                           (int) (Math.random() * 254) + 1,\n+                           (int) (Math.random() * 254) + 1));\n+\n+    // Set stroke width and options\n+    if (strokeFlag)\n+      {\n+        int cap = (int) (Math.random() * 3 + 1);\n+        if (cap == 1)\n+          cap = BasicStroke.CAP_SQUARE;\n+        else if (cap == 2)\n+          cap = BasicStroke.CAP_BUTT;\n+        else\n+          cap = BasicStroke.CAP_ROUND;\n+\n+        int join = (int) (Math.random() * 3 + 1);\n+        if (join == 1)\n+          join = BasicStroke.JOIN_MITER;\n+        else if (join == 2)\n+          join = BasicStroke.JOIN_BEVEL;\n+        else\n+          join = BasicStroke.JOIN_ROUND;\n+\n+        float[] dashes = { 10, 10 };\n+        g.setStroke(new BasicStroke((int) (Math.random() * 10), cap, join, 10f,\n+                                    dashes, 0));\n+      }\n+\n+    // Composite / transparency\n+    if (composite == - 1)\n+      {\n+        g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+                                                  (float) Math.random()));\n+      }\n+\n+    // Transformations\n+    if (rotate == - 1)\n+      g.rotate(Math.random() * Math.PI * 2);\n+  }\n+\n+  /**\n+   * Draws random arcs within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawArc(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        int startAngle = (int) (Math.random() * 360);\n+        int arcAngle = (int) (Math.random() * 360 - startAngle);\n+\n+        Arc2D arc = new Arc2D.Double(x, y, width, height, startAngle, arcAngle,\n+                                     Arc2D.OPEN);\n+        g.draw(arc);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"draw(Arc2D.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random filled arcs within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillArc(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        int startAngle = (int) (Math.random() * 360);\n+        int arcAngle = (int) (Math.random() * 360);\n+\n+        Arc2D arc = new Arc2D.Double(x, y, width, height, startAngle, arcAngle,\n+                                     Arc2D.OPEN);\n+        g.fill(arc);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"fill(Arc2D.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random cubic curves within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawCubicCurve(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int xc1 = (int) (Math.random() * (size.width - minSize));\n+        int yc1 = (int) (Math.random() * (size.height - minSize));\n+        int xc2 = (int) (Math.random() * (size.width - minSize));\n+        int yc2 = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+\n+        CubicCurve2D curve = new CubicCurve2D.Double(x1, y1, xc1, yc1, xc2,\n+                                                     yc2, x2, y2);\n+        g.draw(curve);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw(CubicCurve2D.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random ellipses within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawEllipse(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+        Ellipse2D ellipse = new Ellipse2D.Double(x1, y1, x2, y2);\n+        g.draw(ellipse);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw(Ellipse.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random ellipses within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillEllipse(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+        Ellipse2D ellipse = new Ellipse2D.Double(x1, y1, x2, y2);\n+        g.fill(ellipse);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"fill(Ellipse.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  // TODO: fix the GeneralPath methods.\n+  /**\n+   * Draws random polygons within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawGeneralPath(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    long startTime = System.currentTimeMillis();\n+\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int points = (int) (Math.random() * 6) + 2;\n+        GeneralPath shape = new GeneralPath();\n+        shape.moveTo((float) Math.random() * (size.width),\n+                     (float) Math.random() * (size.height));\n+        for (int j = 0; j < points; j += 1)\n+          {\n+            shape.lineTo((float) (Math.random() * (size.width)),\n+                         (float) (Math.random() * (size.height)));\n+          }\n+        g.draw(shape);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw(GeneralPath) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random filled polygons within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillGeneralPath(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    long startTime = System.currentTimeMillis();\n+\n+    GeneralPath shape = new GeneralPath();\n+    shape.moveTo((float) Math.random() * (size.width), (float) Math.random()\n+                                                       * (size.height));\n+\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int points = (int) (Math.random() * 6) + 2;\n+        for (int j = 0; j < points; j += 1)\n+          {\n+            shape.lineTo((float) (Math.random() * (size.width)),\n+                         (float) (Math.random() * (size.height)));\n+          }\n+        g.fill(shape);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"fill(GeneralPath) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random lines within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawLine(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+        Line2D line = new Line2D.Double(x1, y1, x2, y2);\n+        g.draw(line);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw(Line2D.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random quadratic curves within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawQuadCurve(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int xc = (int) (Math.random() * (size.width - minSize));\n+        int yc = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+\n+        QuadCurve2D curve = new QuadCurve2D.Double(x1, y1, xc, yc, x2, y2);\n+        g.draw(curve);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw(QuadCurve2D.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random rectangles within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawRectangle(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+        Rectangle2D rect = new Rectangle2D.Double(x1, y1, x2, y2);\n+        g.draw(rect);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw(Rectangle.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random rectangles within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillRectangle(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize = 10;\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x1 = (int) (Math.random() * (size.width - minSize));\n+        int y1 = (int) (Math.random() * (size.height - minSize));\n+        int x2 = (int) (Math.random() * (size.width - minSize));\n+        int y2 = (int) (Math.random() * (size.height - minSize));\n+        Rectangle2D rect = new Rectangle2D.Double(x1, y1, x2, y2);\n+        g.fill(rect);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"fill(Rectangle.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random rounded rectangles within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawRoundRectangle(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        int arcWidth = (int) (Math.random() * (width - 1) + 1);\n+        int arcHeight = (int) (Math.random() * (height - 1) + 5);\n+        RoundRectangle2D rect = new RoundRectangle2D.Double(x, y, width,\n+                                                            height, arcWidth,\n+                                                            arcHeight);\n+        g.draw(rect);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"draw(RoundRectangle.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random filled rounded rectangles within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_fillRoundRectangle(Graphics2D g, Dimension size)\n+  {\n+    int maxTests = testSize;\n+    int minSize;\n+    long startTime;\n+    long endTime;\n+    minSize = 10;\n+    startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x = (int) (Math.random() * (size.width - minSize + 1));\n+        int y = (int) (Math.random() * (size.height - minSize + 1));\n+        int width = (int) (Math.random() * (size.width - x - minSize) + minSize);\n+        int height = (int) (Math.random() * (size.height - y - minSize) + minSize);\n+        int arcWidth = (int) (Math.random() * (width - 1) + 1);\n+        int arcHeight = (int) (Math.random() * (height - 1) + 5);\n+        RoundRectangle2D rect = new RoundRectangle2D.Double(x, y, width,\n+                                                            height, arcWidth,\n+                                                            arcHeight);\n+        g.fill(rect);\n+      }\n+    endTime = System.currentTimeMillis();\n+    recordTest(\"fill(RoundRectangle.Double) \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random images within the given dimensions.\n+   * \n+   * @param g The Graphics2D object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawImage(Graphics2D g, Dimension size)\n+  {\n+    if (gifTestImage == null)\n+      {\n+        logger.logp(Level.WARNING, \"J2dGraphicsBenchmark\", \"runTestSet\",\n+                    \"Skipping 'test_drawImage' due to missing resource.\");\n+        return;\n+      }\n+\n+    int maxTests = testSize / 2;\n+    if (maxTests == 0)\n+      maxTests = 1;\n+    int imageWidth = gifTestImage.getWidth(this);\n+    int imageHeight = gifTestImage.getHeight(this);\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x = (int) (Math.random() * (size.width - imageWidth + 1));\n+        int y = (int) (Math.random() * (size.height - imageHeight + 1));\n+        g.drawImage(gifTestImage, x, y, this);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"drawImage \" + maxTests + \" times\", (endTime - startTime));\n+  }\n+\n+  /**\n+   * Draws random transparent images within the given dimensions.\n+   * \n+   * @param g The Graphics object that is used to paint.\n+   * @param size The size of the canvas.\n+   */\n+  private void test_drawTransparentImage(Graphics2D g, Dimension size)\n+  {\n+    if (pngTestImage == null)\n+      {\n+        logger.logp(Level.WARNING, \"AicasGraphicsBenchmark\", \"runTestSet\",\n+                    \"Skipping 'drawTransparentImage' due to missing resource.\");\n+        return;\n+      }\n+\n+    int maxTests = testSize / 5;\n+    if (maxTests == 0)\n+      maxTests = 1;\n+    int imageWidth = pngTestImage.getWidth(this);\n+    int imageHeight = pngTestImage.getHeight(this);\n+    long startTime = System.currentTimeMillis();\n+    for (int i = 0; i < maxTests; i += 1)\n+      {\n+        setRandom(g, size);\n+        int x = (int) (Math.random() * (size.width - imageWidth + 1));\n+        int y = (int) (Math.random() * (size.height - imageHeight + 1));\n+        g.drawImage(pngTestImage, x, y, this);\n+      }\n+    long endTime = System.currentTimeMillis();\n+    recordTest(\"draw transparent image \" + maxTests + \" times\",\n+               (endTime - startTime));\n+  }\n+\n+  private class GraphicsTest\n+      extends Canvas\n+      implements Runnable\n+  {\n+    Thread paintThread;\n+\n+    boolean done = false;\n+\n+    boolean doPaint = false;\n+\n+    boolean withClipping = false;\n+\n+    public GraphicsTest()\n+    {\n+      paintThread = new Thread(this);\n+      paintThread.start();\n+    }\n+\n+    public void run()\n+    {\n+      int runCount = 0;\n+      while (! done)\n+        {\n+          runCount++;\n+\n+          try\n+            {\n+              synchronized (this)\n+                {\n+                  while (! doPaint)\n+                    {\n+                      try\n+                        {\n+                          wait(200);\n+                        }\n+                      catch (InterruptedException exception)\n+                        {\n+                          return;\n+                        }\n+                    }\n+                }\n+\n+              // if (iterations != 0)\n+              // System.out.println(\"--- run...(\"\n+              // + runCount\n+              // + \"/\"\n+              // + iterations\n+              // + \") ------------------------------------------------------\");\n+\n+              Graphics g = getGraphics();\n+              Dimension size = getSize();\n+\n+              if (singleBufferFlag)\n+                {\n+                  logger.logp(Level.INFO, \"J2dGraphicsBenchmark.GraphicsTest\",\n+                              \"run\",\n+                              \"Start testing non-double-buffered drawing\");\n+\n+                  if (noClippingFlag)\n+                    runSet_noClipping((Graphics2D) g, size, runCount);\n+\n+                  if (withClippingFlag)\n+                    runSet_withClipping((Graphics2D) g, size, runCount);\n+\n+                  if (zeroClippingFlag)\n+                    runSet_zeroClipping((Graphics2D) g, size, runCount);\n+\n+                  g.dispose();\n+                }\n+\n+              if (doubleBufferFlag)\n+                {\n+                  logger.logp(Level.INFO, \"J2dGraphicsBenchmark.GraphicsTest\",\n+                              \"run\", \"Start testing double-buffered drawing\");\n+                  Graphics canvas = getGraphics();\n+                  Image doublebuffer = createImage(size.width, size.height);\n+\n+                  if (noClippingFlag)\n+                    {\n+                      g = doublebuffer.getGraphics();\n+                      runSet_noClipping((Graphics2D) g, size,\n+                                        \"double buffering\", runCount);\n+                      g.dispose();\n+                      canvas.drawImage(doublebuffer, 0, 0, this);\n+                    }\n+\n+                  if (withClippingFlag)\n+                    {\n+                      g = doublebuffer.getGraphics();\n+                      runSet_withClipping((Graphics2D) g, size,\n+                                          \"double buffering\", runCount);\n+                      g.dispose();\n+                      canvas.drawImage(doublebuffer, 0, 0, this);\n+                    }\n+\n+                  if (zeroClippingFlag)\n+                    {\n+                      g = doublebuffer.getGraphics();\n+                      runSet_zeroClipping((Graphics2D) g, size,\n+                                          \"double buffering\", runCount);\n+                      g.dispose();\n+                      canvas.drawImage(doublebuffer, 0, 0, this);\n+                      canvas.dispose();\n+                    }\n+                }\n+\n+              printReport();\n+\n+              if (iterations != 1)\n+                {\n+                  if (iterations != - 1)\n+                    iterations--;\n+                }\n+              else\n+                {\n+                  // System.out.println(\"--- done\n+                  // --------------------------------------------------------\");\n+                  synchronized (this)\n+                    {\n+                      doPaint = false;\n+                    }\n+                  done = true;\n+                }\n+            }\n+          catch (Error error)\n+            {\n+              System.err.println(\"Error: \" + error);\n+              System.exit(129);\n+            }\n+        }\n+      testComplete();\n+    }\n+\n+    private void runSet_zeroClipping(Graphics2D g, Dimension size, int runCount)\n+    {\n+      runSet_zeroClipping(g, size, \"\", runCount);\n+    }\n+\n+    private void runSet_zeroClipping(Graphics2D g, Dimension size,\n+                                     String context, int runCount)\n+    {\n+      int clipped_width;\n+      int clipped_height;\n+      int clipped_x;\n+      int clipped_y;\n+\n+      clipped_width = 0;\n+      clipped_height = 0;\n+      clipped_x = (size.width) / 2;\n+      clipped_y = (size.height) / 2;\n+\n+      // Reset any transforms from past tests\n+      resetGraphics(g);\n+\n+      Rectangle fullWindow = new Rectangle(0, 0, size.width, size.height);\n+      g.setClip(fullWindow);\n+      g.setPaint(Color.BLACK);\n+      g.fill(fullWindow);\n+\n+      Rectangle windowBorder = new Rectangle(0, 0, size.width - 1,\n+                                             size.width - 1);\n+      g.setPaint(Color.WHITE);\n+      g.draw(windowBorder);\n+\n+      Rectangle innerBorder = new Rectangle(clipped_x - 1, clipped_y - 1,\n+                                            clipped_width + 2,\n+                                            clipped_height + 2);\n+      g.fill(innerBorder);\n+\n+      Rectangle innerBox = new Rectangle(clipped_x, clipped_y, clipped_width,\n+                                         clipped_height);\n+      g.clip(innerBox);\n+      g.setPaint(Color.BLACK);\n+      g.fill(fullWindow);\n+\n+      if (context.equals(\"\"))\n+        setTestContext(\"(\" + runCount + \") clipping to zero\");\n+      else\n+        setTestContext(\"(\" + runCount + \") clipping to zero (\" + context + \")\");\n+\n+      runTestSet(g, size);\n+    }\n+\n+    private void runSet_withClipping(Graphics2D g, Dimension size, int runCount)\n+    {\n+      runSet_withClipping(g, size, \"\", runCount);\n+    }\n+\n+    private void runSet_withClipping(Graphics2D g, Dimension size,\n+                                     String context, int runCount)\n+    {\n+      int clipped_width = 2 * size.width / 3;\n+      int clipped_height = 2 * size.height / 3;\n+      int clipped_x = (size.width - clipped_width) / 2;\n+      int clipped_y = (size.height - clipped_height) / 2;\n+\n+      // Reset any transforms from past tests\n+      resetGraphics(g);\n+\n+      Rectangle fullWindow = new Rectangle(0, 0, size.width, size.height);\n+      g.setClip(fullWindow);\n+\n+      g.setPaint(Color.BLACK);\n+      g.fill(fullWindow);\n+\n+      Rectangle windowBorder = new Rectangle(0, 0, size.width - 1,\n+                                             size.height - 1);\n+      g.setPaint(Color.GREEN);\n+      g.draw(windowBorder);\n+\n+      Rectangle innerBorder = new Rectangle(clipped_x - 1, clipped_y - 1,\n+                                            clipped_width + 2,\n+                                            clipped_height + 2);\n+      g.setPaint(Color.WHITE);\n+      g.fill(innerBorder);\n+\n+      Rectangle innerBox = new Rectangle(clipped_x, clipped_y, clipped_width,\n+                                         clipped_height);\n+      g.clip(innerBox);\n+\n+      g.setPaint(Color.BLACK);\n+      g.fill(fullWindow);\n+\n+      if (context.equals(\"\"))\n+        setTestContext(\"(\" + runCount + \") with clipping \");\n+      else\n+        setTestContext(\"(\" + runCount + \") with clipping (\" + context + \")\");\n+\n+      runTestSet(g, size);\n+    }\n+\n+    private void runSet_noClipping(Graphics2D g, Dimension size, int runCount)\n+    {\n+      runSet_noClipping(g, size, \"\", runCount);\n+    }\n+\n+    private void runSet_noClipping(Graphics2D g, Dimension size,\n+                                   String context, int runCount)\n+    {\n+      // Reset any transforms from past tests\n+      resetGraphics(g);\n+\n+      Rectangle fullWindow = new Rectangle(0, 0, size.width, size.height);\n+      g.setPaint(Color.BLACK);\n+      g.fill(fullWindow);\n+\n+      if (context.equals(\"\"))\n+        setTestContext(\"(\" + runCount + \") without clipping\");\n+      else\n+        setTestContext(\"(\" + runCount + \") without clipping (\" + context + \")\");\n+\n+      runTestSet(g, size);\n+    }\n+\n+    public void paint(Graphics g)\n+    {\n+      synchronized (this)\n+        {\n+          doPaint = true;\n+          notify();\n+        }\n+    }\n+  }\n+}\n+\n+class TestContext\n+{\n+}\n+\n+class TestSet\n+{\n+  private Map testsMap = new TreeMap();\n+\n+  public void putTest(String testName, TestRecorder recoder)\n+  {\n+    testsMap.put(testName, recoder);\n+  }\n+\n+  public TestRecorder getTest(String testName)\n+  {\n+    return (TestRecorder) testsMap.get(testName);\n+  }\n+\n+  public Iterator testIterator()\n+  {\n+    return testsMap.keySet().iterator();\n+  }\n+}\n+\n+class TestRecorder\n+{\n+  String test;\n+\n+  long totalTime = 0;\n+\n+  long minTime = Long.MAX_VALUE;\n+\n+  long maxTime = Long.MIN_VALUE;\n+\n+  int runCount = 0;\n+\n+  /**\n+   * @return Returns the maxTime.\n+   */\n+  public final long getMaxTime()\n+  {\n+    return maxTime;\n+  }\n+\n+  /**\n+   * @return Returns the minTime.\n+   */\n+  public final long getMinTime()\n+  {\n+    return minTime;\n+  }\n+\n+  /**\n+   * @return Returns the test name.\n+   */\n+  public final String getTestName()\n+  {\n+    return test;\n+  }\n+\n+  public final long getAverage()\n+  {\n+    return (totalTime / runCount);\n+  }\n+\n+  public TestRecorder(String testName)\n+  {\n+    test = testName;\n+  }\n+\n+  public void addRun(long time)\n+  {\n+    totalTime += time;\n+    if (minTime > time)\n+      minTime = time;\n+    if (maxTime < time)\n+      maxTime = time;\n+    runCount += 1;\n+  }\n+}"}, {"sha": "bb583cbdcd24d55eb032c36bf626cdcb003e4b20", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/J2dBenchmarkGUI.java", "status": "added", "additions": 891, "deletions": 0, "changes": 891, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmarkGUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmarkGUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmarkGUI.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,891 @@\n+/* J2dBenchmarkGUI.java -- GUI for java2d benchmarker\n+ Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+package gnu.classpath.examples.java2d;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Container;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.GridLayout;\n+import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+import java.util.logging.Handler;\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+import javax.swing.Box;\n+import javax.swing.BoxLayout;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n+import javax.swing.border.BevelBorder;\n+\n+/**\n+ * Extends the J2dBenchmark to provide a GUI for selecting options and tests.\n+ */\n+public class J2dBenchmarkGUI\n+    implements ActionListener\n+{\n+\n+  JLabel errorLabel;\n+\n+  JCheckBox noClipping;\n+\n+  JCheckBox withClipping;\n+\n+  JCheckBox zeroClipping;\n+\n+  JCheckBox singleBuffer;\n+\n+  JCheckBox doubleBuffer;\n+\n+  public J2dBenchmarkGUI()\n+  {\n+    super();\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    new J2dBenchmarkGUI().run();\n+  }\n+\n+  /**\n+   * Sets up the initial GUI\n+   */\n+  public void run()\n+  {\n+    // Store all elements in a hashtable so that they can be passed into the\n+    // harness easily.\n+    Hashtable elements = new Hashtable();\n+\n+    // Set up frame\n+    final JFrame frame = new JFrame(\"Java2D benchmark\");\n+    errorLabel = new JLabel(\" \");\n+\n+    JPanel panel = new JPanel();\n+    panel.setLayout(new BoxLayout(panel, BoxLayout.PAGE_AXIS));\n+    Container content = frame.getContentPane();\n+\n+    // Display options for dimensions, iterations, test size, etc\n+    JPanel options = new JPanel(new GridLayout(0, 2));\n+\n+    options.add(new JLabel(\"Height: \"));\n+    JTextField heightField = new JTextField(Integer.toString(J2dBenchmark.DEFAULT_SCREEN_HEIGHT));\n+    heightField.setColumns(5);\n+    options.add(heightField);\n+    elements.put(\"height\", heightField);\n+\n+    options.add(new JLabel(\"Width: \"));\n+    JTextField widthField = new JTextField(Integer.toString(J2dBenchmark.DEFAULT_SCREEN_WIDTH));\n+    widthField.setColumns(5);\n+    options.add(widthField);\n+    elements.put(\"width\", widthField);\n+\n+    options.add(new JLabel(\"Iterations: \"));\n+    JTextField iterField = new JTextField(\"1\");\n+    iterField.setColumns(5);\n+    options.add(iterField);\n+    elements.put(\"iterations\", iterField);\n+\n+    options.add(new JLabel(\"Test size: \"));\n+    JTextField testSizeField = new JTextField(Integer.toString(J2dBenchmark.DEFAULT_TEST_SIZE));\n+    testSizeField.setColumns(5);\n+    options.add(testSizeField);\n+    elements.put(\"size\", testSizeField);\n+\n+    options.add(new JLabel(\"Test without clipping: \"));\n+    noClipping = new JCheckBox(\"\", true);\n+    noClipping.addActionListener(this);\n+    options.add(noClipping);\n+    elements.put(\"noclip\", noClipping);\n+\n+    options.add(new JLabel(\"Test with clipping: \"));\n+    withClipping = new JCheckBox(\"\", true);\n+    withClipping.addActionListener(this);\n+    options.add(withClipping);\n+    elements.put(\"withclip\", withClipping);\n+\n+    options.add(new JLabel(\"Test with clipping to zero: \"));\n+    zeroClipping = new JCheckBox(\"\", true);\n+    zeroClipping.addActionListener(this);\n+    options.add(zeroClipping);\n+    elements.put(\"zeroclip\", zeroClipping);\n+\n+    options.add(new JLabel(\"Run single-buffer test: \"));\n+    singleBuffer = new JCheckBox(\"\", true);\n+    singleBuffer.addActionListener(this);\n+    options.add(singleBuffer);\n+    elements.put(\"singlebuffer\", singleBuffer);\n+\n+    options.add(new JLabel(\"Run double-buffer test: \"));\n+    doubleBuffer = new JCheckBox(\"\", true);\n+    doubleBuffer.addActionListener(this);\n+    options.add(doubleBuffer);\n+    elements.put(\"doublebuffer\", doubleBuffer);\n+\n+    // Allow user to select tests to run\n+    JPanel tests = new JPanel();\n+    tests.setLayout(new BoxLayout(tests, BoxLayout.PAGE_AXIS));\n+    tests.setBorder(new BevelBorder(BevelBorder.RAISED));\n+    tests.add(new JLabel(\"Shapes to test:\"));\n+\n+    JCheckBox test_arcDraw = new JCheckBox(\"Arc\", true);\n+    tests.add(test_arcDraw);\n+    elements.put(\"test_arcDraw\", test_arcDraw);\n+\n+    JCheckBox test_ccurveDraw = new JCheckBox(\"Cubic Curve\", true);\n+    tests.add(test_ccurveDraw);\n+    elements.put(\"test_ccurveDraw\", test_ccurveDraw);\n+\n+    JCheckBox test_ellipseDraw = new JCheckBox(\"Ellipse\", true);\n+    tests.add(test_ellipseDraw);\n+    elements.put(\"test_ellipseDraw\", test_ellipseDraw);\n+\n+    /*\n+     JCheckBox test_pathDraw = new JCheckBox(\"General Path\", true);\n+     tests.add(test_pathDraw);\n+     elements.put(\"test_pathDraw\", test_pathDraw);\n+     */\n+\n+    JCheckBox test_lineDraw = new JCheckBox(\"Line\", true);\n+    tests.add(test_lineDraw);\n+    elements.put(\"test_lineDraw\", test_lineDraw);\n+\n+    JCheckBox test_qcurveDraw = new JCheckBox(\"Quadratic Curve\", true);\n+    tests.add(test_qcurveDraw);\n+    elements.put(\"test_qcurveDraw\", test_qcurveDraw);\n+\n+    JCheckBox test_rectDraw = new JCheckBox(\"Rectangle\", true);\n+    tests.add(test_rectDraw);\n+    elements.put(\"test_rectDraw\", test_rectDraw);\n+\n+    JCheckBox test_rrectDraw = new JCheckBox(\"Round Rectangle\", true);\n+    tests.add(test_rrectDraw);\n+    elements.put(\"test_rrectDraw\", test_rrectDraw);\n+\n+    JCheckBox test_image = new JCheckBox(\"Images\", true);\n+    tests.add(test_image);\n+    elements.put(\"test_image\", test_image);\n+\n+    // Additional image-processing options\n+    JPanel extras = new JPanel();\n+    extras.setBorder(new BevelBorder(BevelBorder.LOWERED));\n+    GridBagLayout layout = new GridBagLayout();\n+    GridBagConstraints gbc = new GridBagConstraints();\n+    gbc.anchor = GridBagConstraints.NORTHWEST;\n+    gbc.insets = new Insets(5, 2, 15, 15);\n+    extras.setLayout(layout);\n+\n+    // Filling (solid, gradient, or texture)\n+    JPanel opt_Fill = new JPanel();\n+    opt_Fill.setLayout(new BoxLayout(opt_Fill, BoxLayout.PAGE_AXIS));\n+    JLabel opt_FillLabel = new JLabel(\"Filling:\");\n+    opt_FillLabel.setBorder(new BevelBorder(BevelBorder.RAISED));\n+    opt_Fill.add(opt_FillLabel);\n+\n+    ButtonGroup opt_FillGroup = new ButtonGroup();\n+    JRadioButton opt_FillSolid = new JRadioButton(\"Solid colour\", true);\n+    opt_FillSolid.setActionCommand(\"solid\");\n+    opt_Fill.add(opt_FillSolid);\n+    opt_FillGroup.add(opt_FillSolid);\n+    JRadioButton opt_FillGradient = new JRadioButton(\"Gradient\", false);\n+    opt_FillGradient.setActionCommand(\"gradient\");\n+    opt_Fill.add(opt_FillGradient);\n+    opt_FillGroup.add(opt_FillGradient);\n+    JRadioButton opt_FillTexture = new JRadioButton(\"Texture\", false);\n+    opt_FillTexture.setActionCommand(\"texture\");\n+    opt_Fill.add(opt_FillTexture);\n+    opt_FillGroup.add(opt_FillTexture);\n+    JTextField opt_FillTextureFile = new JTextField(\"texture file\");\n+    opt_FillTextureFile.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+    opt_Fill.add(opt_FillTextureFile);\n+    elements.put(\"opt_FillGroup\", opt_FillGroup);\n+    elements.put(\"opt_FillTextureFile\", opt_FillTextureFile);\n+    layout.setConstraints(opt_Fill, gbc);\n+    extras.add(opt_Fill);\n+\n+    // Stroke\n+    JPanel opt_Stroke = new JPanel();\n+    opt_Stroke.setLayout(new BoxLayout(opt_Stroke, BoxLayout.PAGE_AXIS));\n+    JLabel opt_StrokeLabel = new JLabel(\"Stroke:\");\n+    opt_StrokeLabel.setBorder(new BevelBorder(BevelBorder.RAISED));\n+    opt_Stroke.add(opt_StrokeLabel);\n+    JCheckBox opt_StrokeRandom = new JCheckBox(\"random\", false);\n+    elements.put(\"opt_StrokeRandom\", opt_StrokeRandom);\n+    opt_Stroke.add(opt_StrokeRandom);\n+    gbc.gridwidth = GridBagConstraints.REMAINDER;\n+    layout.setConstraints(opt_Stroke, gbc);\n+    extras.add(opt_Stroke);\n+\n+    // Anti-Alias\n+    JPanel opt_Alias = new JPanel();\n+    opt_Alias.setLayout(new BoxLayout(opt_Alias, BoxLayout.PAGE_AXIS));\n+    JLabel opt_AliasLabel = new JLabel(\"Anti-Aliasing:\");\n+    opt_AliasLabel.setBorder(new BevelBorder(BevelBorder.RAISED));\n+    opt_Alias.add(opt_AliasLabel);\n+    JCheckBox opt_AliasOn = new JCheckBox(\"on\", false);\n+    elements.put(\"opt_AliasOn\", opt_AliasOn);\n+    opt_Alias.add(opt_AliasOn);\n+    gbc.gridwidth = 1;\n+    layout.setConstraints(opt_Alias, gbc);\n+    extras.add(opt_Alias);\n+\n+    // Alpha composite\n+    JPanel opt_Composite = new JPanel();\n+    opt_Composite.setLayout(new BoxLayout(opt_Composite, BoxLayout.PAGE_AXIS));\n+    JLabel opt_CompositeLabel = new JLabel(\"Alpha Composite:\");\n+    opt_CompositeLabel.setBorder(new BevelBorder(BevelBorder.RAISED));\n+    opt_Composite.add(opt_CompositeLabel);\n+    JTextField opt_CompositeValue = new JTextField(\"1.0\");\n+    opt_CompositeValue.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+    elements.put(\"opt_CompositeValue\", opt_CompositeValue);\n+    opt_Composite.add(opt_CompositeValue);\n+    gbc.gridwidth = GridBagConstraints.REMAINDER;\n+    layout.setConstraints(opt_Composite, gbc);\n+    extras.add(opt_Composite);\n+\n+    // Transformations\n+    // TODO: allow user-defined matrices for AffineTransform\n+    // (backend already has hooks for it, need to create gui)\n+    JLabel opt_TransformLabel = new JLabel(\"Transformations:\");\n+    opt_TransformLabel.setBorder(new BevelBorder(BevelBorder.RAISED));\n+    gbc.insets = new Insets(5, 2, 0, 15);\n+    layout.setConstraints(opt_TransformLabel, gbc);\n+    extras.add(opt_TransformLabel);\n+\n+    JPanel opt_Transform_Translate = new JPanel(new GridLayout(0, 2, 5, 5));\n+    opt_Transform_Translate.add(new JLabel(\"x-axis translation \"));\n+    JTextField opt_TransformTranslateX = new JTextField(\"0\");\n+    opt_TransformTranslateX.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+    opt_Transform_Translate.add(opt_TransformTranslateX);\n+    elements.put(\"opt_TransformTranslateX\", opt_TransformTranslateX);\n+    opt_Transform_Translate.add(new JLabel(\"y-axis translation \"));\n+    JTextField opt_TransformTranslateY = new JTextField(\"0\");\n+    opt_TransformTranslateY.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+    opt_Transform_Translate.add(opt_TransformTranslateY);\n+    elements.put(\"opt_TransformTranslateY\", opt_TransformTranslateY);\n+    gbc.gridwidth = 1;\n+    gbc.insets = new Insets(0, 2, 5, 15);\n+    layout.setConstraints(opt_Transform_Translate, gbc);\n+    extras.add(opt_Transform_Translate);\n+\n+    JPanel opt_Transform_Shear = new JPanel(new GridLayout(0, 2, 5, 5));\n+    opt_Transform_Shear.add(new JLabel(\"x-axis shear \"));\n+    JTextField opt_TransformShearX = new JTextField(\"0\");\n+    opt_TransformShearX.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+    opt_Transform_Shear.add(opt_TransformShearX);\n+    elements.put(\"opt_TransformShearX\", opt_TransformShearX);\n+    opt_Transform_Shear.add(new JLabel(\"y-axis shear \"));\n+    JTextField opt_TransformShearY = new JTextField(\"0\");\n+    opt_Transform_Shear.add(opt_TransformShearY);\n+    elements.put(\"opt_TransformShearY\", opt_TransformShearY);\n+    gbc.gridwidth = GridBagConstraints.REMAINDER;\n+    layout.setConstraints(opt_Transform_Shear, gbc);\n+    extras.add(opt_Transform_Shear);\n+\n+    JPanel opt_Transform_Rotate = new JPanel(new GridLayout(0, 2, 5, 5));\n+    opt_Transform_Rotate.add(new JLabel(\"rotation (radians) \"));\n+    JTextField opt_TransformRotate = new JTextField(\"0\");\n+    opt_Transform_Rotate.add(opt_TransformRotate);\n+    elements.put(\"opt_TransformRotate\", opt_TransformRotate);\n+    layout.setConstraints(opt_Transform_Rotate, gbc);\n+    extras.add(opt_Transform_Rotate);\n+\n+    // Final submit button\n+    JPanel submit = new JPanel();\n+    submit.setLayout(new BoxLayout(submit, BoxLayout.PAGE_AXIS));\n+\n+    JButton rectButton = new JButton(\"Run benchmark\");\n+    rectButton.setAlignmentX(JComponent.CENTER_ALIGNMENT);\n+    submit.add(rectButton, BorderLayout.CENTER);\n+\n+    errorLabel.setAlignmentX(JComponent.CENTER_ALIGNMENT);\n+    errorLabel.setForeground(Color.RED);\n+    submit.add(errorLabel);\n+\n+    rectButton.addActionListener(new Harness(elements, errorLabel));\n+\n+    // Lay it all out\n+    JPanel body = new JPanel();\n+    body.setLayout(new BoxLayout(body, BoxLayout.LINE_AXIS));\n+    options.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+    body.add(options);\n+    body.add(Box.createHorizontalStrut(50));\n+    tests.setAlignmentX(JComponent.RIGHT_ALIGNMENT);\n+    body.add(tests);\n+\n+    body.setAlignmentX(JComponent.CENTER_ALIGNMENT);\n+    panel.add(body);\n+    extras.setAlignmentX(JComponent.CENTER_ALIGNMENT);\n+    panel.add(extras);\n+    submit.setAlignmentX(JComponent.CENTER_ALIGNMENT);\n+    panel.add(submit);\n+\n+    content.add(panel, BorderLayout.CENTER);\n+\n+    // Leave some breathing space in the frame\n+    frame.pack();\n+\n+    frame.addWindowListener(new WindowAdapter()\n+    {\n+      public void windowClosing(WindowEvent e)\n+      {\n+        frame.setVisible(false);\n+        System.exit(0);\n+      }\n+    });\n+\n+    frame.show();\n+  }\n+\n+  /**\n+   * Handles user events on the options GUI, ensuring that user input is valid\n+   */\n+  public void actionPerformed(ActionEvent ev)\n+  {\n+    if (! noClipping.isSelected() && ! withClipping.isSelected()\n+        && ! zeroClipping.isSelected())\n+      errorLabel.setText(\"You must select at least one clipping option\");\n+\n+    else if (! singleBuffer.isSelected() && ! doubleBuffer.isSelected())\n+      errorLabel.setText(\"You must select at least one buffering option\");\n+\n+    else\n+      errorLabel.setText(\" \");\n+  }\n+\n+  /**\n+   * Parses GUI input and sets options in the benchmarker \n+   */\n+  private class Harness\n+      implements ActionListener\n+  {\n+    Hashtable elements;\n+\n+    JLabel errorLabel;\n+\n+    /**\n+     * Creates a new Harness object\n+     * \n+     * @param elements Hashtable containing the swing elements from the GUI\n+     * @param errorLabel JLabel on which to display any error messages\n+     */\n+    public Harness(Hashtable elements, JLabel errorLabel)\n+    {\n+      super();\n+\n+      this.elements = elements;\n+      this.errorLabel = errorLabel;\n+    }\n+\n+    /**\n+     * Handles user button-clicks, parsing the form, setting options, and\n+     * starting the J2dBenchmark\n+     * \n+     * @param ae event that triggered this action\n+     */\n+    public void actionPerformed(ActionEvent ae)\n+    {\n+      try\n+        {\n+          // Create benchmarker object\n+          final JFrame frame = new JFrame(\"Java2D benchmark\");\n+          J2dBenchmarkWrapper speed = new J2dBenchmarkWrapper(frame);\n+\n+          // Set options\n+          speed.setDimensions(Integer.parseInt(((JTextField) elements.get(\"width\")).getText()),\n+                              Integer.parseInt(((JTextField) elements.get(\"height\")).getText()));\n+\n+          speed.setIterations(Integer.parseInt(((JTextField) elements.get(\"iterations\")).getText()));\n+          speed.setTestSize(Integer.parseInt(((JTextField) elements.get(\"size\")).getText()));\n+\n+          speed.setClipping(((JCheckBox) elements.get(\"noclip\")).isSelected(),\n+                            ((JCheckBox) elements.get(\"withclip\")).isSelected(),\n+                            ((JCheckBox) elements.get(\"zeroclip\")).isSelected());\n+\n+          speed.setBuffers(((JCheckBox) elements.get(\"singlebuffer\")).isSelected(),\n+                           ((JCheckBox) elements.get(\"doublebuffer\")).isSelected());\n+\n+          // Set additional processing options\n+          speed.setFill(((ButtonGroup) elements.get(\"opt_FillGroup\")).getSelection().getActionCommand(),\n+                        ((JTextField) elements.get(\"opt_FillTextureFile\")).getText());\n+\n+          speed.setStroke(((JCheckBox) elements.get(\"opt_StrokeRandom\")).isSelected());\n+\n+          speed.setAlias(((JCheckBox) elements.get(\"opt_AliasOn\")).isSelected());\n+\n+          speed.setComposite(Float.parseFloat(((JTextField) elements.get(\"opt_CompositeValue\")).getText()));\n+\n+          speed.setTranslation(Integer.parseInt(((JTextField) elements.get(\"opt_TransformTranslateX\")).getText()),\n+                               Integer.parseInt(((JTextField) elements.get(\"opt_TransformTranslateY\")).getText()));\n+\n+          speed.setRotation(Double.parseDouble(((JTextField) elements.get(\"opt_TransformRotate\")).getText()));\n+\n+          speed.setShear(Double.parseDouble(((JTextField) elements.get(\"opt_TransformShearX\")).getText()),\n+                         Double.parseDouble(((JTextField) elements.get(\"opt_TransformShearY\")).getText()));\n+\n+          // Set tests\n+          int testSuite = 0;\n+          if (((JCheckBox) elements.get(\"test_arcDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_ARC;\n+          if (((JCheckBox) elements.get(\"test_ccurveDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_CUBICCURVE;\n+          if (((JCheckBox) elements.get(\"test_ellipseDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_ELLIPSE;\n+          //if (((JCheckBox)elements.get(\"test_pathDraw\")).isSelected())\n+          //  testSuite |= J2dBenchmarkWrapper.J2DTEST_GENERALPATH; \n+          if (((JCheckBox) elements.get(\"test_lineDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_LINE;\n+          if (((JCheckBox) elements.get(\"test_qcurveDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_QUADCURVE;\n+          if (((JCheckBox) elements.get(\"test_rectDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_RECTANGLE;\n+          if (((JCheckBox) elements.get(\"test_rrectDraw\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_ROUNDRECTANGLE;\n+          if (((JCheckBox) elements.get(\"test_image\")).isSelected())\n+            testSuite |= J2dBenchmarkWrapper.J2DTEST_IMAGE;\n+\n+          if (testSuite != 0)\n+            {\n+              speed.setTests(testSuite);\n+\n+              String initResult = speed.init();\n+\n+              if (initResult == null)\n+                {\n+                  // Create graphics.\n+                  frame.add(speed, BorderLayout.CENTER);\n+                  frame.setSize(\n+                                Integer.parseInt(((JTextField) elements.get(\"width\")).getText()),\n+                                Integer.parseInt(((JTextField) elements.get(\"height\")).getText()));\n+                  frame.setVisible(true);\n+\n+                  // Insets are correctly set only after the native peer was\n+                  // created.\n+                  Insets insets = frame.getInsets();\n+                  frame.setSize(frame.getWidth() + insets.right + insets.left,\n+                                frame.getHeight() + insets.top + insets.bottom);\n+\n+                  // Clear any old error messages\n+                  errorLabel.setText(\" \");\n+                }\n+              else\n+                errorLabel.setText(initResult);\n+            }\n+          else\n+            errorLabel.setText(\"Please select at least one test.\");\n+        }\n+      catch (NumberFormatException e)\n+        {\n+          errorLabel.setText(\"Please enter valid integers\");\n+        }\n+    }\n+  }\n+\n+  /**\n+   * Wrapper for the J2dBenchmark, which outputs the results to a GUI\n+   * instead of the command-line\n+   */\n+  private class J2dBenchmarkWrapper\n+      extends J2dBenchmark\n+  {\n+    JFrame myFrame;\n+\n+    ResultsDisplay display;\n+\n+    /**\n+     * Create new J2dBenchmarkWrapper object\n+     * \n+     * @param frame parent frame\n+     */\n+    public J2dBenchmarkWrapper(JFrame frame)\n+    {\n+      // Redirect log messages to the custom handler\n+      logger.setUseParentHandlers(false);\n+      display = new ResultsDisplay();\n+      display.setLevel(Level.INFO);\n+      logger.addHandler(display);\n+\n+      myFrame = frame;\n+    }\n+\n+    /**\n+     * Set dimensions of benchmarking canvas\n+     * \n+     * @param width width of canvas\n+     * @param height height of canvas\n+     */\n+    public void setDimensions(int width, int height)\n+    {\n+      screenHeight = height;\n+      screenWidth = width;\n+      setSize(width, height);\n+    }\n+\n+    /**\n+     * Set number of iterations\n+     * \n+     * @param it number of iterations\n+     */\n+    public void setIterations(int it)\n+    {\n+      iterations = it;\n+    }\n+\n+    /**\n+     * Set size of each test\n+     * \n+     * @param size size of test\n+     */\n+    public void setTestSize(int size)\n+    {\n+      testSize = size;\n+    }\n+\n+    /**\n+     * Set clipping options\n+     * \n+     * @param no run test with no clipping\n+     * @param with run test with clipping\n+     * @param zero run test with clipping to zero\n+     */\n+    public void setClipping(boolean no, boolean with, boolean zero)\n+    {\n+      this.noClippingFlag = no;\n+      this.withClippingFlag = with;\n+      this.zeroClippingFlag = zero;\n+    }\n+\n+    /**\n+     * Set buffering options\n+     * \n+     * @param single run test without double-buffering\n+     * @param doubleb run test with double-buffering\n+     */\n+    public void setBuffers(boolean single, boolean doubleb)\n+    {\n+      this.singleBufferFlag = single;\n+      this.doubleBufferFlag = doubleb;\n+    }\n+\n+    /**\n+     * Set fill options\n+     * \n+     * @param type fill type: \"solid\", \"gradient\", or \"texture\"\n+     * @param file filename to use if texturing\n+     */\n+    public void setFill(String type, String file)\n+    {\n+      if (type.equals(\"gradient\"))\n+        this.gradientFlag = true;\n+      else if (type.equals(\"texture\"))\n+        {\n+          this.texture = file;\n+        }\n+    }\n+\n+    /**\n+     * Set stroke options\n+     * \n+     * @param stroke boolean flag to use random stroking or not\n+     */\n+    public void setStroke(boolean stroke)\n+    {\n+      this.strokeFlag = stroke;\n+    }\n+\n+    /**\n+     * Set anti-aliasing options\n+     * \n+     * @param alias boolean flag to use anti-aliasing or not\n+     */\n+    public void setAlias(boolean alias)\n+    {\n+      this.antialiasFlag = alias;\n+    }\n+\n+    /**\n+     * Set alpha composite\n+     * \n+     * @param alpha alpha composite\n+     */\n+    public void setComposite(float alpha)\n+    {\n+      this.composite = alpha;\n+    }\n+\n+    /**\n+     * Set translation values\n+     * \n+     * @param x x-axis translation\n+     * @param y y-axis translation\n+     */\n+    public void setTranslation(int x, int y)\n+    {\n+      this.xtranslate = x;\n+      this.ytranslate = y;\n+    }\n+\n+    /**\n+     * Set rotation\n+     * \n+     * @param theta angle to rotate by (radians)\n+     */\n+    public void setRotation(double theta)\n+    {\n+      this.rotate = theta;\n+    }\n+\n+    /**\n+     * Set shear values\n+     * \n+     * @param x x-axis shear value\n+     * @param y-axis shear value\n+     */\n+    public void setShear(double x, double y)\n+    {\n+      this.xshear = x;\n+      this.yshear = y;\n+    }\n+\n+    /**\n+     * Set tests to run\n+     * \n+     * @param tests bit-shifted list of tests (see J2dBenchmark constants)\n+     */\n+    public void setTests(int tests)\n+    {\n+      awtTests = tests;\n+    }\n+\n+    /**\n+     * Saves test report after each iteration\n+     */\n+    void printReport()\n+    {\n+      // Report test results to the GUI display\n+      ArrayList results = new ArrayList();\n+      for (Iterator i = testSetMap.testIterator(); i.hasNext();)\n+        {\n+          TestRecorder recorder = testSetMap.getTest((String) i.next());\n+\n+          results.add(\"TEST \" + recorder.getTestName() + \": average \"\n+                      + recorder.getAverage() + \"ms [\" + recorder.getMinTime()\n+                      + \"-\" + recorder.getMaxTime() + \"]\");\n+        }\n+\n+      display.report(results);\n+    }\n+\n+    /**\n+     * Disables current frame and displays test results\n+     */\n+    void testComplete()\n+    {\n+      // Clear benchmarking canvas and display results instead\n+      myFrame.setVisible(false);\n+\n+      display.show();\n+    }\n+  }\n+\n+  /**\n+   * GUI to display results of benchmarking\n+   */\n+  private class ResultsDisplay\n+      extends Handler\n+      implements ActionListener\n+  {\n+    /**\n+     * Allow user to select results from each iteration\n+     */\n+    JComboBox iterations;\n+\n+    /**\n+     * Area to print results in\n+     */\n+    JTextArea results;\n+\n+    /**\n+     * Allow user to view summary or full details of test report\n+     */\n+    JCheckBox details;\n+\n+    /**\n+     * Store all test results\n+     */\n+    ArrayList testResults;\n+\n+    /**\n+     * Store all test details\n+     */\n+    ArrayList testDetails;\n+\n+    /**\n+     * Initialize variables\n+     */\n+    public ResultsDisplay()\n+    {\n+      testResults = new ArrayList();\n+      testDetails = new ArrayList();\n+      testDetails.add(new ArrayList());\n+    }\n+\n+    /**\n+     * Parse all results and display on a GUI\n+     */\n+    public void show()\n+    {\n+      // Set up panel\n+      JFrame frame = new JFrame(\"Java2D benchmark results\");\n+      Container cp = frame.getContentPane();\n+\n+      // Non-editable text area for the results\n+      results = new JTextArea();\n+      results.setEditable(false);\n+      results.setRows(15);\n+      results.setColumns(60);\n+\n+      // Checkbox to optionally display details (ie log messages)\n+      details = new JCheckBox(\"Details\", false);\n+      details.addActionListener(this);\n+\n+      // Combo box to allow selection of iteration number\n+      iterations = new JComboBox();\n+      iterations.addActionListener(this);\n+      for (int i = 0; i < testResults.size(); i++)\n+        iterations.addItem(\"Iteration #\" + (i + 1));\n+\n+      // Lay it all out\n+      JPanel topleft = new JPanel();\n+      topleft.add(new JLabel(\"View results from: \"));\n+      topleft.add(iterations);\n+      topleft.setAlignmentX(JComponent.LEFT_ALIGNMENT);\n+      details.setAlignmentX(JComponent.RIGHT_ALIGNMENT);\n+      JPanel top = new JPanel();\n+      top.setLayout(new BoxLayout(top, BoxLayout.LINE_AXIS));\n+      top.add(topleft);\n+      top.add(details);\n+\n+      cp.add(top, BorderLayout.NORTH);\n+      cp.add(new JScrollPane(results), BorderLayout.SOUTH);\n+\n+      frame.pack();\n+      frame.show();\n+    }\n+\n+    /**\n+     * This overrides the logger publish method, which accepts log messages and\n+     * saves them for later display\n+     * \n+     * @param record information about the log event\n+     */\n+    public void publish(LogRecord record)\n+    {\n+      ((ArrayList) testDetails.get(testDetails.size() - 1)).add(record.getMessage());\n+    }\n+\n+    /**\n+     * Accepts a test summary report, generated after each iteration of a test\n+     * \n+     * @param results test results\n+     */\n+    public void report(ArrayList results)\n+    {\n+      testResults.add(results);\n+      testDetails.add(new ArrayList());\n+    }\n+\n+    /**\n+     * Provided as part of the Handler interface; not used\n+     */\n+    public void flush()\n+    {\n+    }\n+\n+    /**\n+     * Provided as part of the Handler interface; not used\n+     */\n+    public void close()\n+    {\n+    }\n+\n+    /**\n+     * Handle user-generated events on the results GUI\n+     */\n+    public void actionPerformed(ActionEvent ev)\n+    {\n+      // Display information about the requested iteration\n+      int iteration = iterations.getSelectedIndex();\n+      String message = \"\";\n+\n+      // Display summary or details, as requested\n+      Iterator it;\n+      if (details.isSelected())\n+        it = ((ArrayList) testDetails.get(iteration)).iterator();\n+      else\n+        it = ((ArrayList) testResults.get(iteration)).iterator();\n+\n+      // Parse the ArrayList's\n+      while (it.hasNext())\n+        {\n+          message = message + ((String) it.next() + \"\\n\");\n+        }\n+\n+      // Output to screen\n+      results.setText(message);\n+    }\n+  }\n+\n+}"}, {"sha": "efa57d2a36fe4ff31c19bfa5283f85553d61210b", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/JNIOverhead.java", "status": "added", "additions": 390, "deletions": 0, "changes": 390, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJNIOverhead.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJNIOverhead.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJNIOverhead.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,390 @@\n+/* JNIOverhead.java - demonstrator for classpath/gcj fillrect performance issue\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.java2d;\n+\n+import gnu.classpath.examples.swing.DemoFactory;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+/** \n+ * @author Norman Hendrich\n+ */\n+public class JNIOverhead\n+  extends JPanel\n+  implements ActionListener \n+{\n+\n+  static JNIOverhead fillRectDemo;\n+\n+  LCDCanvas lcd;\n+  Worker worker;\n+  JLabel label;\n+  JCheckBox translate;\n+  JCheckBox lines;\n+\n+  int     nx = 128;\n+  int     ny = 64;\n+  int     matrix[][], future[][];\n+  int     generation = 0;\n+\n+  // 20 msec, or 50 repaints per sec (theoretically)\n+  int     sleepMillis = 20;\n+  long    lastMillis = System.currentTimeMillis();\n+\n+  boolean enableRepaints = true;\n+  \n+  /**\n+   * If true, test translation.\n+   */\n+  boolean testTranslation = false;\n+  \n+  /**\n+   * If true, paint lines rather than rectangles\n+   */\n+  boolean paintLines;\n+\n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+  }\n+\n+  public JNIOverhead()\n+  {\n+    setSize(nx, ny);\n+    createContent();\n+  }\n+\n+  public void createContent()\n+  {\n+    setLayout(new BorderLayout());\n+\n+    JPanel p = new JPanel(new BorderLayout());\n+    lcd   = new LCDCanvas();\n+    label = new JLabel();\n+    label.setText(\"not running\");\n+    \n+    translate = new JCheckBox(\"translate\");\n+    translate.addActionListener(new ActionListener()\n+    {\n+      public void actionPerformed(ActionEvent event)\n+      {\n+        testTranslation = translate.isSelected();\n+      }\n+    });\n+    \n+    lines = new JCheckBox(\"lines\");\n+    lines.addActionListener(new ActionListener()\n+    {\n+      public void actionPerformed(ActionEvent event)\n+      {\n+        paintLines = lines.isSelected();\n+      }\n+    });\n+    \n+    JPanel bottom = new JPanel();\n+    bottom.add(lines);\n+    bottom.add(translate);\n+    \n+    p.add(lcd, BorderLayout.CENTER);\n+    p.add(bottom, BorderLayout.SOUTH);\n+    p.add(label, BorderLayout.NORTH);\n+    add(p);\n+  }\n+\n+  public void setSize(int _nx,int _ny )\n+  {\n+    nx = _nx;\n+    ny = _ny;\n+    matrix = new int[nx][ny];\n+    future = new int[nx][ny];\n+  }\n+\n+  public void initFrameContent()\n+  {\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    add(closePanel, BorderLayout.SOUTH);\n+  }\n+\n+  public void setSleepMillis(int millis)\n+  {\n+    sleepMillis = millis;\n+  }\n+\n+  public class LCDCanvas extends JPanel\n+  {\n+    private int   sx, sy;\n+    private Color activePixel  = new Color(30, 30, 40);\n+    private Color passivePixel = new Color(200, 180, 240);\n+    private Color gridPixel    = new Color(255, 240, 240);\n+\n+    public LCDCanvas()\n+    {\n+      super();\n+      sx = 4 * nx;\n+      sy = 4 * ny;\n+    }\n+\n+    public void paintComponent(Graphics g)\n+    {\n+      // for buffered drawing - not used atm\n+      // g.drawImage( buffer, 0, 0, null );\n+      long t1 = System.currentTimeMillis();\n+\n+      g.setColor(gridPixel);\n+      g.fillRect(0, 0, sx, sy);\n+\n+      Color pixelColor = null;\n+\n+      int dx, dy;\n+\n+      if (paintLines)\n+        {\n+          for (int ix = 0; ix < nx; ix++)\n+            for (int iy = 0; iy < ny; iy++)\n+              {\n+                if (matrix[ix][iy] != 0)\n+                  pixelColor = activePixel;\n+                else\n+                  pixelColor = passivePixel;\n+\n+                dx = 4 * ix;\n+                dy = 4 * iy;\n+                g.setColor(pixelColor);\n+\n+                if (testTranslation)\n+                  {\n+                    g.translate(dx, dy);\n+                    g.drawLine(0, 0, 5, 5);\n+                    g.translate(- dx, - dy);\n+                  }\n+                else\n+                  g.drawLine(dx, dy, dx + 5, dy + 5);\n+              }\n+        }\n+      else\n+        for (int ix = 0; ix < nx; ix++)\n+          {\n+            for (int iy = 0; iy < ny; iy++)\n+              {\n+                if (matrix[ix][iy] != 0)\n+                  pixelColor = activePixel;\n+                else\n+                  pixelColor = passivePixel;\n+\n+                dx = 4 * ix;\n+                dy = 4 * iy;\n+                g.setColor(pixelColor);\n+\n+                if (testTranslation)\n+                  {\n+                    g.translate(dx, dy);\n+                    g.fillRect(0, 0, 3, 3);\n+                    g.translate(- dx, - dy);\n+                  }\n+                else\n+                  g.fillRect(dx, dy, 3, 3);\n+              }\n+          }\n+\n+      long t2 = System.currentTimeMillis();\n+\n+      label.setText(\"paintComponent took \" + (t2 - t1) + \" msec. \" + \"(\"\n+                    + (nx * ny + 1) + \" \"\n+                    + (paintLines ? \"drawLine\" : \"fillRect\") + \" calls)\");\n+\n+    }\n+\n+    public Dimension getPreferredSize()\n+    {\n+      return new Dimension(sx,sy);\n+    }\n+\n+    public Dimension getMinimumSize()\n+    {\n+      return new Dimension(sx,sy);\n+    }\n+  }\n+\n+  public class Worker extends Thread\n+  {\n+    public void run()\n+    {\n+      boolean running = true;\n+      while(running)\n+        {\n+          iteration();\n+\n+          if (enableRepaints)\n+            display();\n+\n+          if (sleepMillis > 0)\n+            {\n+              try\n+                {\n+                  Thread.sleep( sleepMillis );\n+                }\n+              catch(InterruptedException ie)\n+                {\n+                  running = false;\n+                }\n+            }\n+        }\n+    }\n+  }\n+\n+  /** \n+   * stupid animation algorithm: show binary representation of current\n+   * iteration.\n+   */\n+  public void iteration()\n+  {\n+    generation++;\n+\n+    for (int i = 0; i < nx; i++)\n+      {\n+        long tmp1 = 1L << i;\n+        for (int j = 0; j < ny; j++)\n+          {\n+            // count neighbors\n+            long tmp2 = (1L << j);\n+\n+        \n+            long tmp3 = generation & tmp1 & tmp2;\n+            if (tmp3 != 0) \n+              matrix[i][j] = 1;\n+            else\n+              matrix[i][j] = 0;\n+          }\n+    }\n+\n+    if ((generation % 100) == 0)\n+      {\n+        long t = System.currentTimeMillis();\n+        //        System.out.println(\n+        //           \" generation= \" + generation +\n+        //           \" iterations/sec= \" + 100.0*1000/(t-lastMillis) );\n+        lastMillis = t;\n+      }\n+  }\n+\n+  public void display()\n+  {\n+    lcd.repaint();\n+  }\n+\n+  public static void usage()\n+  {\n+    System.out.println( \n+      \"Usage: <java> FillRect2 [-sleep <millis>] [-size <int>] [-nopaint]\\n\"\n+    + \"Example: jamvm FillRect2 -sleep 10 -size 100\\n\"\n+    );\n+    System.exit(0);\n+  }\n+\n+  public static void main(String args[])\n+    throws Exception\n+  {\n+    fillRectDemo = new JNIOverhead();\n+    for (int i = 0; i < args.length; i++)\n+      {\n+        if (\"-help\".equals(args[i]))\n+          {\n+            usage();\n+          }\n+        if (\"-sleep\".equals(args[i]))\n+          {\n+            fillRectDemo.setSleepMillis( Integer.parseInt(args[i + 1]));\n+            i++;\n+          }\n+        if (\"-size\".equals(args[i]))\n+          {\n+            int size = Integer.parseInt(args[i + 1]);\n+            fillRectDemo.setSize(size, size);\n+            i++;\n+          }\n+        if (\"-nopaint\".equals(args[i]))\n+          {\n+            fillRectDemo.enableRepaints = false; \n+          }\n+      }\n+\n+    SwingUtilities.invokeLater (new Runnable()\n+     {\n+       public void run()\n+       {\n+\n+         fillRectDemo.initFrameContent();\n+         JFrame frame = new JFrame(\"FillRect performance test\");\n+         frame.getContentPane().add(fillRectDemo);\n+         frame.pack();\n+         frame.show();\n+         fillRectDemo.worker = fillRectDemo.new Worker();\n+         fillRectDemo.worker.start();\n+       }\n+      });\n+  }\n+\n+  /**\n+   * Returns a DemoFactory that creates a SliderDemo.\n+   *\n+   * @return a DemoFactory that creates a SliderDemo\n+   */\n+  public static DemoFactory createDemoFactory()\n+  {    \n+    return new DemoFactory()\n+    {\n+      public JComponent createDemo()\n+      {\n+        fillRectDemo = new JNIOverhead();\n+        SwingUtilities.invokeLater\n+        (new Runnable()\n+         {\n+           public void run()\n+           {\n+             fillRectDemo.worker = fillRectDemo.new Worker();\n+             fillRectDemo.worker.start();\n+           }\n+         });\n+        return fillRectDemo;\n+      }\n+    };\n+  }\n+}"}, {"sha": "e5b45aa1c15551e851f343200b2ff29d15554128", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/bench.c", "status": "added", "additions": 606, "deletions": 0, "changes": 606, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fbench.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fbench.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fbench.c?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,606 @@\n+/* bench.c -- native benchmark for Cairo library (meant to test java2d)\n+   Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+#include \"bench.h\"\n+#include <math.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <gtk/gtk.h>\n+#include <sys/timeb.h>\n+\n+G_DEFINE_TYPE (Benchmark, benchmark, GTK_TYPE_DRAWING_AREA);\n+\n+// Needed for the gtk widget, but not used:\n+static void\n+benchmark_class_init (BenchmarkClass *klass)\n+{\n+}\n+\n+static void\n+benchmark_init (Benchmark *obj)\n+{\n+}\n+\n+// The Arc2D's PathIterator uses some transforms, so we condense the required\n+// functionality of AffineTransform\n+static void\n+doTransform (double rx, double ry, double theta, double *cvec)\n+{\n+  // Define identity matrix (corresponds to new AffineTransform())\n+  double m00 = 1;\n+  double m10 = 0;\n+  double m01 = 0;\n+  double m11 = 1;\n+  double m02 = 0;\n+  double m12 = 0;\n+\n+  // AffineTransform.scale(rx, ry)\n+  m00 = m00 * rx;\n+  m01 = m01 * ry;\n+  m10 = m10 * rx;\n+  m11 = m11 * ry;\n+\n+  // AffineTransform.rotate(theta)\n+  double c = cos(theta);\n+  double s = sin(theta);\n+  double n00 = m00 *  c + m01 * s;\n+  double n01 = m00 * -s + m01 * c;\n+  double n10 = m10 *  c + m11 * s;\n+  double n11 = m10 * -s + m11 * c;\n+\n+  m00 = n00;\n+  m01 = n01;\n+  m10 = n10;\n+  m11 = n11;    \n+    \n+  // AffineTransform.transform(cvec, 0, cvec, 0, 1)\n+  double dstPts[2];\n+  dstPts[0] = (float) (m00 * cvec[0] + m01 * cvec[1] + m02);\n+  dstPts[1] = (float) (m10 * cvec[0] + m11 * cvec[1] + m12);\n+  cvec[0] = dstPts[0];\n+  cvec[1] = dstPts[1];\n+}\n+\n+// Place an arc on the cairo path, simulating java2d's Arc2D\n+static void \n+setupArc(cairo_t *cr, GtkWidget *bench, int shift)\n+{\n+  double x, y;\n+  \n+  // Normally passed into the Arc2D constructor\n+  x = bench->allocation.x + (rand() % (bench->allocation.width - minSize + 1));\n+  y = bench->allocation.y + (rand() % (bench->allocation.height - minSize + 1));\n+  \n+  int angle = rand() % 360;\n+  int length = (rand() % 360) - angle;\n+  int width = rand() % (int)((bench->allocation.width - x - 10) + 10);\n+  int height = rand() % (int)((bench->allocation.height - y - 10) + 10);\n+  \n+  // This is from the ArcPath iterator\n+  double start = angle * (M_PI / 180);\n+  double extent = length * (M_PI / 180);\n+\n+  if (extent < 0)\n+    {\n+      extent = -extent;\n+      start = 2 * M_PI - extent + start;\n+    }\n+\n+  int limit;\n+  if (width < 0 || height < 0)  // We assume type == 0; ie, Arc2D.OPEN\n+    limit = -1;\n+  else if (extent == 0)\n+    limit = 0;\n+  else if (extent <= M_PI / 2.0)\n+    limit = 1;\n+  else if (extent <= M_PI)\n+    limit = 2;\n+  else if (extent <= 3.0 * (M_PI / 2.0))\n+    limit = 3;\n+  else\n+    limit = 4;\n+    \n+  // This is from CairoGraphics2D.walkPath\n+  double xnew = 0;\n+  double ynew = 0;\n+  double coords[6];\n+\n+  cairo_fill_rule_t cfillrule = CAIRO_FILL_RULE_WINDING;\n+  cairo_set_fill_rule(cr, cfillrule);\n+  \n+  // First iteration will move to the starting point\n+  double rx = width / 2;\n+  double ry = height / 2;\n+  double xmid = x + rx;\n+  double ymid = y + ry;\n+  coords[0] = xmid + rx * cos(start);\n+  coords[1] = ymid - ry * sin(start);\n+  \n+  if (shift == 1)\n+    {\n+      xnew = floor(coords[0]) + 0.5;\n+      ynew = floor(coords[1]) + 0.5;\n+    }\n+  else\n+    {\n+      xnew = coords[0];\n+      ynew = coords[1];\n+    }\n+    \n+  cairo_move_to(cr, xnew, ynew);\n+\n+  // Iterate through segments of the arc  \n+  int current;\n+  for (current = 1; current <= limit; current++)\n+    {\n+      // Back to the ArcPath iterator's getCurrent\n+      double kappa = (sqrt(2.0) - 1.0) * (4.0 / 3.0);\n+      double quad = (M_PI / 2.0);\n+\n+      double curr_begin = start + (current - 1) * quad;\n+      double curr_extent;\n+      \n+      if (start + extent - curr_begin < quad)\n+        curr_extent = (start + extent) - curr_begin;\n+      else\n+        curr_extent = quad;\n+    \n+      double portion_of_a_quadrant = curr_extent / quad;\n+\n+      double x0 = xmid + rx * cos(curr_begin);\n+      double y0 = ymid - ry * sin(curr_begin);\n+\n+      double x1 = xmid + rx * cos(curr_begin + curr_extent);\n+      double y1 = ymid - ry * sin(curr_begin + curr_extent);\n+\n+      double cvec[2];\n+      double len = kappa * portion_of_a_quadrant;\n+      double angle = curr_begin;\n+\n+      cvec[0] = 0;\n+      cvec[1] = len;\n+      doTransform(rx, ry, angle, cvec);\n+      coords[0] = x0 + cvec[0];\n+      coords[1] = y0 - cvec[1];\n+\n+      cvec[0] = 0;\n+      cvec[1] = -len;\n+      doTransform(rx, ry, angle, cvec);\n+      doTransform(1, 1, curr_extent, cvec);\n+      coords[2] = x1 + cvec[0];\n+      coords[3] = y1 - cvec[1];\n+\n+      coords[4] = x1;\n+      coords[5] = y1;\n+    \n+      // draw it, from CairoGraphics2D.walkPath\n+      if (shift == 1)\n+        {\n+          xnew = floor(coords[4]) + 0.5;\n+          ynew = floor(coords[5]) + 0.5;\n+          cairo_curve_to(cr, floor(coords[0]) + 0.5, floor(coords[1]) + 0.5,\n+                         floor(coords[2]) + 0.5, floor(coords[3]) + 0.5,\n+                         xnew, ynew);\n+        }\n+      else\n+        {\n+          xnew = coords[4];\n+          ynew = coords[5];\n+          cairo_curve_to(cr, coords[0], coords[1], coords[2],\n+                         coords[3], xnew, ynew);\n+        }\n+    }\n+  \n+  // Randomize the colour, just for asthetics =)\n+  cairo_set_source_rgb(cr, (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100));\n+  \n+}\n+\n+// Place a beizer curve on the cairo path, simulating java2d's CubicCurve2D\n+static void \n+setupCurve(cairo_t *cr, GtkWidget *bench, int shift)\n+{\n+  // These are options when creating a new curve\n+  int x1 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int y1 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  int xc1 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int yc1 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  int xc2 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int yc2 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  int x2 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int y2 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  \n+  // From CairoGraphics2D.walkPath\n+  double xnew = 0;\n+  double ynew = 0;\n+  double coords[6];\n+\n+  cairo_fill_rule_t cfillrule = CAIRO_FILL_RULE_WINDING;\n+  cairo_set_fill_rule(cr, cfillrule);\n+  \n+  // And into CubicCurve's PathIterator...\n+  // start by moving to the starting coordinate\n+  coords[0] = (float) x1;\n+  coords[1] = (float) y1;\n+  \n+  if (shift == 1)\n+    {\n+      xnew = floor(coords[0]) + 0.5;\n+      ynew = floor(coords[1]) + 0.5;\n+    }\n+  else\n+    {\n+      xnew = coords[0];\n+      ynew = coords[1];\n+    }\n+    \n+  cairo_move_to(cr, xnew, ynew);\n+  \n+  // Now the curve itself\n+  coords[0] = (float) xc1;\n+  coords[1] = (float) yc1;\n+  coords[2] = (float) xc2;\n+  coords[3] = (float) yc2;\n+  coords[4] = (float) x2;\n+  coords[5] = (float) y2;\n+  \n+  if (shift == 1)\n+    {\n+      xnew = floor(coords[4]) + 0.5;\n+      ynew = floor(coords[5]) + 0.5;\n+      cairo_curve_to(cr, floor(coords[0]) + 0.5, floor(coords[1]) + 0.5,\n+                     floor(coords[2]) + 0.5, floor(coords[3]) + 0.5,\n+                     xnew, ynew);\n+    }\n+  else\n+    {\n+      xnew = coords[4];\n+      ynew = coords[5];\n+      cairo_curve_to(cr, coords[0], coords[1], coords[2], \n+                     coords[3], xnew, ynew);\n+    }\n+  \n+  // Randomize colour for asthetics\n+  cairo_set_source_rgb(cr, (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100));\n+}\n+\n+// Place a line on the cairo path, simulating java2d's Line2D\n+static void \n+setupLine(cairo_t *cr, GtkWidget *bench, int shift)\n+{\n+  // These are set when you create a line\n+  int x1 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int y1 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  int x2 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int y2 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  \n+  // This is from CairoGraphics2D.walkPath\n+  double xnew = 0;\n+  double ynew = 0;\n+  double coords[6];\n+\n+  cairo_fill_rule_t cfillrule = CAIRO_FILL_RULE_WINDING;\n+  cairo_set_fill_rule(cr, cfillrule);\n+  \n+  // And into Line2D's PathIterator\n+  coords[0] = (float) x1;\n+  coords[1] = (float) y1;\n+  \n+  if (shift == 1)\n+    {\n+      xnew = floor(coords[0]) + 0.5;\n+      ynew = floor(coords[1]) + 0.5;\n+    }\n+  else\n+    {\n+      xnew = coords[0];\n+      ynew = coords[1];\n+    }\n+    \n+  cairo_move_to(cr, xnew, ynew);\n+  \n+  coords[0] = (float) x2;\n+  coords[1] = (float) y2;\n+  \n+  if (shift == 1)\n+    {\n+      xnew = floor(coords[0]) + 0.5;\n+      ynew = floor(coords[1]) + 0.5;\n+    }\n+  else\n+    {\n+      xnew = coords[0];\n+      ynew = coords[1];\n+    }\n+    \n+  cairo_line_to(cr, xnew, ynew);\n+  \n+  // Randomize colour for asthetics\n+  cairo_set_source_rgb(cr, (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100));\n+}\n+\n+// Place a rectangle on the cairo path, simulating java2d's Rectangle2D\n+static void \n+setupRect(cairo_t *cr, GtkWidget *bench, int shift)\n+{\n+  // These are set when you create a rectangle\n+  int x1 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int y1 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  int x2 = bench->allocation.x + (rand() % (bench->allocation.width - minSize));\n+  int y2 = bench->allocation.y + (rand() % (bench->allocation.height - minSize));\n+  \n+  // draw() and fill() have been optimized to ignore the PathIterator.\n+  // We do the same here.\n+  double xnew = 0;\n+  double ynew = 0;\n+  \n+  if (shift == 1)\n+    {\n+      xnew = floor(x1) + 0.5;\n+      ynew = floor(y1) + 0.5;\n+    }\n+  else\n+    {\n+      xnew = x1;\n+      ynew = y1;\n+    }\n+    \n+  cairo_rectangle(cr, x1, y1, x2, y2);\n+    \n+  // Randomize colour for asthetics\n+  cairo_set_source_rgb(cr, (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100),\n+                       (rand() % 100 / (float)100));\n+}\n+\n+// The real work gets done here: this function is called when the widget\n+// is drawn on screen.\n+static void\n+draw (GtkWidget *bench, cairo_t *cr)\n+{\n+  // Setup\n+  struct timeb t1, t2;\n+  int i, timeElapsed;\n+\n+  cairo_set_line_width(cr, lineWidth);\n+  \n+  if (antialias == 0)\n+    cairo_set_antialias(cr, CAIRO_ANTIALIAS_NONE);\n+  else\n+    cairo_set_antialias(cr, CAIRO_ANTIALIAS_GRAY);\n+  \n+  // Tell the user what's going on\n+  printf(\"Testing native cairo drawing..\\n\");\n+  printf(\"  Screen size is %d x %d \\n\", screenWidth, screenHeight);\n+  printf(\"  Line width is %d\\n\", lineWidth);\n+  printf(\"  Test size: %d\\n\", testSize);\n+  \n+  if (antialias == 0)\n+    printf(\"  Anti-alias is off\\n\");\n+  else\n+    printf(\"  Anti-alias is on\\n\");\n+    \n+  printf(\"\\n\");\n+  fflush(stdout);\n+\n+  // Draw & fill Arc\n+  if (arcTest == 1)\n+    {\n+      // Draw\n+      ftime(&t1);\n+      for (i = 0; i < testSize; i++)\n+        {\n+          setupArc(cr, bench, 1);\n+          cairo_stroke (cr);\n+        }\n+        \n+      ftime(&t2);\n+      timeElapsed = 1000 * (t2.time - t1.time) + (t2.millitm - t1.millitm);\n+      printf(\"Draw arc: %d ms\\n\", timeElapsed);\n+      fflush(stdout);\n+\n+      // Fill\n+      ftime(&t1);\n+      for (i = 0; i < testSize; i++)\n+        {\n+          setupArc(cr, bench, 0);\n+          cairo_fill (cr);\n+        }\n+        \n+      ftime(&t2);\n+      timeElapsed = 1000 * (t2.time - t1.time) + (t2.millitm - t1.millitm);\n+      printf(\"Fill arc: %d ms\\n\", timeElapsed);\n+    }\n+\n+  // Draw cubic curve\n+  if (curveTest == 1)\n+    {\n+      ftime(&t1);\n+      for (i = 0; i < testSize; i++)\n+        {\n+          setupCurve(cr, bench, 1);\n+          cairo_stroke (cr);\n+        }\n+        \n+      ftime(&t2);\n+      timeElapsed = 1000 * (t2.time - t1.time) + (t2.millitm - t1.millitm);\n+      printf(\"Draw cubic curve: %d ms\\n\", timeElapsed);\n+    }\n+  \n+  // Ellipse: skip; this is just a special case of arc\n+  // General path: skip; this doesn't even work in java2d\n+\n+  // Draw Line\n+  if (lineTest == 1)\n+    {\n+      ftime(&t1);\n+      for (i = 0; i < testSize; i++)\n+        {\n+          setupLine(cr, bench, 1);\n+          cairo_stroke (cr);\n+        }\n+        \n+      ftime(&t2);\n+      timeElapsed = 1000 * (t2.time - t1.time) + (t2.millitm - t1.millitm);\n+      printf(\"Draw line: %d ms\\n\", timeElapsed);\n+    }\n+  \n+  // Draw & fill Rectangle\n+  if (rectTest == 1)\n+    {\n+      // Draw\n+      ftime(&t1);\n+      for (i = 0; i < testSize; i++)\n+        {\n+          setupRect(cr, bench, 1);\n+          cairo_stroke (cr);\n+        }\n+        \n+      ftime(&t2);\n+      timeElapsed = 1000 * (t2.time - t1.time) + (t2.millitm - t1.millitm);\n+      printf(\"Draw rectangle: %d ms\\n\", timeElapsed);\n+    \n+      // Fill\n+      ftime(&t1);\n+      for (i = 0; i < testSize; i++)\n+        {\n+          setupRect(cr, bench, 0);\n+          cairo_fill (cr);\n+        }\n+        \n+      ftime(&t2);\n+      timeElapsed = 1000 * (t2.time - t1.time) + (t2.millitm - t1.millitm);\n+      printf(\"Fill rectangle: %d ms\\n\", timeElapsed);\n+    }\n+  \n+  // Round rectangle: skip, it's just a combination of lines and curves\n+  // Image: skip?\n+  \n+  printf(\"\\n\");\n+}\n+\n+GtkWidget *\n+benchmark_new (void)\n+{\n+  return g_object_new (BENCHMARK_TYPE, NULL);\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  // Set defaults\n+  minSize = 10;\n+  arcTest = 0;\n+  curveTest = 0;\n+  lineTest = 0;\n+  rectTest = 0;\n+  screenWidth = 320;\n+  screenHeight = 240;\n+  testSize = 1000;\n+  antialias = 0;\n+  lineWidth = 1;\n+  \n+  // Process any command-line user options\n+  int i;\n+  for (i = 1; i < argc; i++)\n+    {\n+      // Process options first\n+      if (!strcmp(argv[i], \"-a\"))\n+        antialias = 1;\n+      else if (!strcmp(argv[i], \"-h\"))\n+        screenHeight = atoi(argv[++i]);\n+      else if (!strcmp(argv[i], \"-l\"))\n+        lineWidth = atoi(argv[++i]);\n+      else if (!strcmp(argv[i], \"-t\"))\n+        testSize = atoi(argv[++i]);\n+      else if (!strcmp(argv[i], \"-w\"))\n+        screenWidth = atoi(argv[++i]);\n+      else if (!strcmp(argv[i], \"-h\") || !strcmp(argv[i], \"--h\")\n+               || !strcmp(argv[i], \"-help\") || !strcmp(argv[i], \"--help\"))\n+        {\n+          printf(\"Cairo benchmarker, meant to measure JNI overhead\\n\");\n+          printf(\"Usage: bench [-a] [-h height] [-t test size] [-w width] [tests...]\\n\");\n+          printf(\"\\n\");\n+          printf(\"  Valid options: -a   turn on anti-aliasing (default off)\\n\");\n+          printf(\"                 -h   set screen height (default 240)\\n\");\n+          printf(\"                 -l   set stroke line width (default 1)\\n\");\n+          printf(\"                 -t   set test size (default 1000)\\n\");\n+          printf(\"                 -w   set screen width (default 320)\\n\");\n+          printf(\"                 -h | --help\\n\");\n+          printf(\"  Valid tests: arc\\n\");\n+          printf(\"               curve\\n\");\n+          printf(\"               line\\n\");\n+          printf(\"               rect\\n\");\n+          printf(\"               (default: run all)\\n\");\n+          exit (0);\n+        }\n+\n+      // Process tests\n+      else if (!strcmp(argv[i], \"arc\"))\n+        arcTest = 1;\n+      else if (!strcmp(argv[i], \"curve\"))\n+        curveTest = 1;\n+      else if (!strcmp(argv[i], \"line\"))\n+        lineTest = 1;\n+      else if (!strcmp(argv[i], \"rect\"))\n+        rectTest = 1;\n+    }\n+  \n+  // If no tests were specified, we default to running all of them\n+  if (arcTest == 0 && curveTest == 0 && lineTest == 0 && rectTest == 0)\n+    {\n+      arcTest = 1;\n+      curveTest = 1;\n+      lineTest = 1;\n+      rectTest = 1;\n+    }\n+  \n+  // Set up gtk widget\n+  GtkWidget *window, *bench;\n+  gtk_init (&argc, &argv);\n+\n+  window = gtk_window_new (GTK_WINDOW_TOPLEVEL);\n+  gtk_window_resize(GTK_WINDOW(window), screenWidth, screenHeight);\n+  gtk_window_set_title(GTK_WINDOW(window), \"cairo benchmark\");\n+  \n+  // Set up benchmkar and cairo surface\n+  bench = benchmark_new ();\n+  gtk_container_add (GTK_CONTAINER (window), bench);\n+  gtk_widget_show_all (window);\n+  \n+  cairo_t *cr;\n+  cr = gdk_cairo_create (bench->window);\n+\n+  // Run tests\n+  draw (bench, cr);\n+\n+  // Hold output on screen until user exits.\n+  printf(\"Press any key to exit.\\n\");\n+  getchar();\n+  exit(0);\n+gtk_main();\n+}"}, {"sha": "aebd50a6785b4c7691a2eba823dba65f78261d40", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/bench.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fbench.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fbench.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fbench.h?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,64 @@\n+/* bench.h -- native benchmark for Cairo library (meant to test java2d)\n+   Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+#ifndef __BENCH_H__\n+#define __BENCH_H__\n+\n+#include <gtk/gtk.h>\n+\n+G_BEGIN_DECLS\n+\n+#define BENCHMARK_TYPE             (benchmark_get_type())\n+#define BENCHMARK(obj)             (G_TYPE_CHECK_INSTANCE_CAST ((obj, BENCHMARK_TYPE, Benchmark)\n+#define BENCHMARK_CLASS(klass)     (G_TYPE_CHECK_CLASS_CAST ((klass), BENCHMARK_TYPE, BenchmarkClass);\n+#define IS_BENCHMARK(obj)          (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BENCHMARK_TYPE))\n+#define IS_BENCHMARK_CLASS(klass)  (G_TYPE_CHECK_CLASS_TYPE ((klass), BENCHMARK_TYPE))\n+#define BENCHMARK_GET_CLASS(obj)   (G_TYPE_INSTANCE_GET_CLASS ((obj), BENCHMARK_TYPE, BenchmarkClass))\n+\n+typedef struct _Benchmark Benchmark;\n+typedef struct _BenchmarkClass BenchmarkClass;\n+\n+struct _Benchmark {\n+\tGtkDrawingArea parent;\n+\t\n+};\n+\n+struct _BenchmarkClass {\n+\tGtkDrawingAreaClass parent_class;\n+};\n+\n+GType     benchmark_get_type (void);\n+GtkWidget *benchmark_new     (void);\n+\n+static int minSize;\n+static int antialias;\n+static int arcTest;\n+static int curveTest;\n+static int lineTest;\n+static int rectTest;\n+\n+static int screenHeight;\n+static int screenWidth;\n+static int testSize;\n+static int lineWidth;\n+\n+G_END_DECLS\n+\n+#endif"}, {"sha": "ad8234555e548bf186335fe60021c858f2a91c90", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestBeans.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestBeans.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestBeans.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestBeans.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,55 @@\n+/* TestBeans.java -- Tests the dynamic interface of the beans.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import javax.management.DynamicMBean;\n+\n+public class TestBeans\n+{\n+  public static void main(String[] args)\n+    throws Exception\n+  {\n+    List beans = new ArrayList();\n+    /* FIXME: When there's a server, this will be easier... :) */\n+    beans.add(ManagementFactory.getOperatingSystemMXBean());\n+    beans.add(ManagementFactory.getRuntimeMXBean());\n+    beans.add(ManagementFactory.getThreadMXBean());\n+    beans.add(ManagementFactory.getCompilationMXBean());\n+    beans.add(ManagementFactory.getClassLoadingMXBean());\n+    beans.add(ManagementFactory.getMemoryMXBean());\n+    beans.addAll(ManagementFactory.getMemoryPoolMXBeans());\n+    beans.addAll(ManagementFactory.getMemoryManagerMXBeans());\n+    beans.addAll(ManagementFactory.getGarbageCollectorMXBeans());\n+    Iterator it = beans.iterator();\n+    while (it.hasNext())\n+      {\n+\tDynamicMBean bean = (DynamicMBean) it.next();\n+\tif (bean != null)\n+\t  System.out.println(bean.getMBeanInfo());\n+      }\n+  }\n+}"}, {"sha": "113a4f2582cdc1595ab1a301d6a975dd6f6b845a", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestClassLoading.java", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestClassLoading.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestClassLoading.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestClassLoading.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,41 @@\n+/* TestClassLoading.java -- Tests the class loading bean.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ClassLoadingMXBean;\n+import java.lang.management.ManagementFactory;\n+\n+public class TestClassLoading\n+{\n+  public static void main(String[] args)\n+  {\n+    ClassLoadingMXBean bean = ManagementFactory.getClassLoadingMXBean();\n+    System.out.println(\"Bean: \" + bean);\n+    System.out.println(\"Loaded classes: \" + bean.getLoadedClassCount());\n+    System.out.println(\"Unloaded classes: \" + bean.getUnloadedClassCount());\n+    System.out.println(\"Total loaded classes: \" + bean.getTotalLoadedClassCount());\n+    boolean verbosity = bean.isVerbose();\n+    System.out.println(\"Verbose class output: \" + (verbosity ? \"yes\" : \"no\"));\n+    System.out.println(\"Changing verbose setting...\");\n+    bean.setVerbose(!verbosity);\n+    System.out.println(\"Verbose class output: \" + (bean.isVerbose() ? \"yes\" : \"no\"));\n+  }\n+}"}, {"sha": "ea8f45f6d1ebae93af3221b9858aaa89ab31c56f", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestCompilation.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestCompilation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestCompilation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestCompilation.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,48 @@\n+/* TestCompilation.java -- Tests the compilation bean.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.CompilationMXBean;\n+\n+public class TestCompilation\n+{\n+\n+  public static void main(String[] args)\n+  {\n+    CompilationMXBean bean = ManagementFactory.getCompilationMXBean();\n+    if (bean == null)\n+      {\n+\tSystem.out.println(\"The compilation bean is not supported by this VM.\");\n+\tSystem.exit(-1);\n+      }\n+    System.out.println(\"Bean: \" + bean);\n+    System.out.println(\"JIT compiler name: \" + bean.getName());\n+    boolean timeMonitoring = bean.isCompilationTimeMonitoringSupported();\n+    System.out.println(\"Compilation time monitoring supported: \" + timeMonitoring);\n+    if (timeMonitoring)\n+      {\n+\tSystem.out.println(\"Compilation time: \"\n+\t\t\t   + bean.getTotalCompilationTime() + \"ms\");\n+      }\n+  }\n+\n+}"}, {"sha": "5d6d56797c43688c982d6c9c947f4fd5bb502b7d", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestGarbageCollector.java", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestGarbageCollector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestGarbageCollector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestGarbageCollector.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,53 @@\n+/* TestGarbageCollector.java -- Tests the garbage collector beans.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.GarbageCollectorMXBean;\n+import java.lang.management.ManagementFactory;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+\n+public class TestGarbageCollector\n+{\n+\n+  public static void main(String[] args)\n+  {\n+    Iterator beans = ManagementFactory.getGarbageCollectorMXBeans().iterator();\n+    while (beans.hasNext())\n+      {\n+\tGarbageCollectorMXBean bean = (GarbageCollectorMXBean) beans.next();\n+\tSystem.out.println(\"Bean: \" + bean);\n+\tSystem.out.println(\"Name: \" + bean.getName());\n+\tSystem.out.println(\"Memory pool names: \" \n+\t\t\t   + Arrays.toString(bean.getMemoryPoolNames()));\n+\tSystem.out.println(\"Is valid: \" \n+\t\t\t   + (bean.isValid() ? \"yes\" : \"no\"));\n+\tSystem.out.println(\"Collection count: \" \n+\t\t\t   + bean.getCollectionCount());\n+\tSystem.out.println(\"Collection time: \" \n+\t\t\t   + bean.getCollectionTime() + \"ms\");\n+      }\n+  }\n+}\n+\n+\n+"}, {"sha": "ca25d62119b5ef1e868fdd994e3006cb8f3f0d98", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestMemory.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,52 @@\n+/* TestMemory.java -- Tests the memory bean.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.MemoryMXBean;\n+import java.lang.management.ManagementFactory;\n+\n+public class TestMemory\n+{\n+  public static void main(String[] args)\n+  {\n+    MemoryMXBean bean = ManagementFactory.getMemoryMXBean();\n+    System.out.println(\"Bean: \" + bean);\n+    System.out.println(\"Heap memory usage: \" \n+\t\t       + bean.getHeapMemoryUsage());\n+    System.out.println(\"Non-heap memory usage: \" \n+\t\t       + bean.getNonHeapMemoryUsage());\n+    System.out.println(\"Objects pending finalization: \" \n+\t\t       + bean.getObjectPendingFinalizationCount());\n+    System.out.println(\"Running garbage collector via bean...\");\n+    bean.gc();\n+    System.out.println(\"Heap memory usage: \" \n+\t\t       + bean.getHeapMemoryUsage());\n+    System.out.println(\"Non-heap memory usage: \" \n+\t\t       + bean.getNonHeapMemoryUsage());\n+    System.out.println(\"Objects pending finalization: \" \n+\t\t       + bean.getObjectPendingFinalizationCount());\n+    boolean verbosity = bean.isVerbose();\n+    System.out.println(\"Verbose memory output: \" + (verbosity ? \"yes\" : \"no\"));\n+    System.out.println(\"Changing verbose setting...\");\n+    bean.setVerbose(!verbosity);\n+    System.out.println(\"Verbose memory output: \" + (bean.isVerbose() ? \"yes\" : \"no\"));\n+  }\n+}"}, {"sha": "30a0c985b9fcbb87d889d317a42fdb7bab75c2c5", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestMemoryManager.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryManager.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,49 @@\n+/* TestMemoryManager.java -- Tests the memory manager beans.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.MemoryManagerMXBean;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+\n+public class TestMemoryManager\n+{\n+\n+  public static void main(String[] args)\n+  {\n+    Iterator beans = ManagementFactory.getMemoryManagerMXBeans().iterator();\n+    while (beans.hasNext())\n+      {\n+\tMemoryManagerMXBean bean = (MemoryManagerMXBean) beans.next();\n+\tSystem.out.println(\"Bean: \" + bean);\n+\tSystem.out.println(\"Name: \" + bean.getName());\n+\tSystem.out.println(\"Memory pool names: \" \n+\t\t\t   + Arrays.toString(bean.getMemoryPoolNames()));\n+\tSystem.out.println(\"Is valid: \" \n+\t\t\t   + (bean.isValid() ? \"yes\" : \"no\"));\n+      }\n+  }\n+}\n+\n+\n+"}, {"sha": "2476ed76fe083fd2102317cf69bfb73abdb450b7", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestMemoryPool.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryPool.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryPool.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryPool.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,93 @@\n+/* TestMemoryPool.java -- Tests the memory pool beans.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.MemoryPoolMXBean;\n+import java.lang.management.MemoryUsage;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+\n+public class TestMemoryPool\n+{\n+\n+  /**\n+   * 1mb in bytes\n+   */\n+  private static final int MB = 1 << 20;\n+\n+  public static void main(String[] args)\n+  {\n+    Iterator beans = ManagementFactory.getMemoryPoolMXBeans().iterator();\n+    while (beans.hasNext())\n+      {\n+\tMemoryPoolMXBean bean = (MemoryPoolMXBean) beans.next();\n+\tSystem.out.println(\"Bean: \" + bean);\n+\tSystem.out.println(\"Name: \" + bean.getName());\n+\tSystem.out.println(\"Collection usage: \" + bean.getCollectionUsage());\n+\tboolean collectionUsage = bean.isCollectionUsageThresholdSupported();\n+\tSystem.out.println(\"Collection usage threshold supported: \" \n+\t\t\t   + collectionUsage);\n+\tif (collectionUsage)\n+\t  {\n+\t    System.out.println(\"Collection usage threshold: \" \n+\t\t\t       + bean.getCollectionUsageThreshold());\n+\t    System.out.println(\"Setting collection usage threshold to 1MB (\" \n+\t\t\t       + MB + \" bytes)\");\n+\t    bean.setCollectionUsageThreshold(MB);\n+\t    System.out.println(\"Collection usage threshold: \" \n+\t\t\t       + bean.getCollectionUsageThreshold());\n+\t    System.out.println(\"Collection usage threshold count: \" \n+\t\t\t       + bean.getCollectionUsageThresholdCount());\n+\t    System.out.println(\"Collection usage threshold exceeded: \" \n+\t\t\t       + (bean.isCollectionUsageThresholdExceeded()\n+\t\t\t\t  ? \"yes\" : \"no\"));\n+\t  }\n+\tSystem.out.println(\"Memory manager names: \" \n+\t\t\t   + Arrays.toString(bean.getMemoryManagerNames()));\n+\tSystem.out.println(\"Peak usage: \" + bean.getPeakUsage());\n+\tSystem.out.println(\"Current usage: \" + bean.getUsage());\n+\tSystem.out.println(\"Resetting peak usage...\");\n+\tbean.resetPeakUsage();\n+\tSystem.out.println(\"Peak usage: \" + bean.getPeakUsage());\n+\tSystem.out.println(\"Current usage: \" + bean.getUsage());\n+\tboolean usage = bean.isUsageThresholdSupported();\n+\tSystem.out.println(\"Usage threshold supported: \" + usage);\n+\tif (usage)\n+\t  {\n+\t    System.out.println(\"Usage threshold: \" \n+\t\t\t       + bean.getUsageThreshold());\n+\t    System.out.println(\"Setting usage threshold to 1MB (\" \n+\t\t\t       + MB + \" bytes)\");\n+\t    bean.setUsageThreshold(MB);\n+\t    System.out.println(\"Usage threshold: \" \n+\t\t\t       + bean.getUsageThreshold());\n+\t    System.out.println(\"Usage threshold count: \" \n+\t\t\t       + bean.getUsageThresholdCount());\n+\t    System.out.println(\"Usage threshold exceeded: \" \n+\t\t\t       + (bean.isUsageThresholdExceeded()\n+\t\t\t\t  ? \"yes\" : \"no\"));\n+\t  }\n+\tSystem.out.println(\"Valid: \" + (bean.isValid() ? \"yes\" : \"no\"));\n+      }\n+  }\n+}"}, {"sha": "a13e514f8e17d740c8799e31a0806280dfea575c", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestOS.java", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestOS.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestOS.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestOS.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,37 @@\n+/* TestOS.java -- Tests the OS bean.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.OperatingSystemMXBean;\n+\n+public class TestOS\n+{\n+  public static void main(String[] args)\n+  {\n+    OperatingSystemMXBean osBean = ManagementFactory.getOperatingSystemMXBean();\n+    System.out.println(\"Bean: \" + osBean);\n+    System.out.println(\"OS Name: \" + osBean.getName());\n+    System.out.println(\"OS Version: \" + osBean.getVersion());\n+    System.out.println(\"Architecture: \" + osBean.getArch());\n+    System.out.println(\"Processors: \" + osBean.getAvailableProcessors());\n+  }\n+}"}, {"sha": "2a629ca83c6e59663468ff610d728cd4e014ee10", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestRuntime.java", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestRuntime.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,54 @@\n+/* TestRuntime.java -- Tests the runtime bean.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.RuntimeMXBean;\n+\n+import java.util.Date;\n+\n+public class TestRuntime\n+{\n+\n+  public static void main(String[] args)\n+  {\n+    RuntimeMXBean vmBean = ManagementFactory.getRuntimeMXBean();\n+    System.out.println(\"Bean: \" + vmBean);\n+    boolean bootClassPath = vmBean.isBootClassPathSupported();\n+    System.out.println(\"Boot Class Path Supported: \" + bootClassPath);\n+    if (bootClassPath)\n+      System.out.println(\"Boot Class Path: \" + vmBean.getBootClassPath());\n+    System.out.println(\"Class Path: \" + vmBean.getClassPath());\n+    System.out.println(\"Input Arguments: \" + vmBean.getInputArguments());\n+    System.out.println(\"Library Path: \" + vmBean.getLibraryPath());\n+    System.out.println(\"Management Spec. Version: \" + vmBean.getManagementSpecVersion());\n+    System.out.println(\"Name: \" + vmBean.getName());\n+    System.out.println(\"Spec Name: \" + vmBean.getSpecName());\n+    System.out.println(\"Spec Vendor: \" + vmBean.getSpecVendor());\n+    System.out.println(\"Spec Version: \" + vmBean.getSpecVersion());\n+    System.out.println(\"Start Time: \" + new Date(vmBean.getStartTime()));\n+    System.out.println(\"System Properties: \" + vmBean.getSystemProperties());\n+    System.out.println(\"Uptime: \" + vmBean.getUptime() + \"ms\");\n+    System.out.println(\"VM Name: \" + vmBean.getVmName());\n+    System.out.println(\"VM Vendor: \" + vmBean.getVmVendor());\n+    System.out.println(\"VM Version: \" + vmBean.getVmVersion());\n+  }\n+}"}, {"sha": "e49776ce2278200033acc4aedc647192b06455a8", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestThread.java", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestThread.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,118 @@\n+/* TestThread.java -- Tests the thread bean.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.management;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.ThreadInfo;\n+import java.lang.management.ThreadMXBean;\n+\n+import java.util.Arrays;\n+\n+public class TestThread\n+{\n+\n+  public static void main(String[] args)\n+  {\n+    ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+    System.out.println(\"Bean: \" + bean);\n+    System.out.println(\"Monitor deadlocked threads: \" + bean.findMonitorDeadlockedThreads());\n+    long[] ids = bean.getAllThreadIds();\n+    System.out.println(\"Live thread ids: \" + Arrays.toString(ids));\n+    boolean currentTimeMonitoring = bean.isCurrentThreadCpuTimeSupported();\n+    System.out.println(\"Current thread CPU time monitoring supported: \" + currentTimeMonitoring);\n+    if (currentTimeMonitoring)\n+      {\n+\tboolean timeEnabled = bean.isThreadCpuTimeEnabled();\n+\tSystem.out.println(\"Is time monitoring enabled... \" + \n+\t\t\t   (timeEnabled ? \"yes\" : \"no\"));\n+\tif (!timeEnabled)\n+\t  {\n+\t    System.out.println(\"Enabling...\");\n+\t    bean.setThreadCpuTimeEnabled(true);\n+\t    timeEnabled = bean.isThreadCpuTimeEnabled();\n+\t    System.out.println(\"Should now be enabled... \" +\n+\t\t\t   (timeEnabled ? \"yes\" : \"no\"));\n+\t  }\n+\tif (timeEnabled)\n+\t  {\n+\t    System.out.println(\"Current thread CPU time: \" \n+\t\t\t       + bean.getCurrentThreadCpuTime()\n+\t\t\t       + \"ns\");\n+\t    System.out.println(\"Current thread user time: \" \n+\t\t\t       + bean.getCurrentThreadUserTime()\n+\t\t\t       + \"ns\");\n+\t  }\n+      }\n+    System.out.println(\"Daemon thread count: \" + bean.getDaemonThreadCount());\n+    System.out.println(\"Peak thread count: \" + bean.getPeakThreadCount());\n+    System.out.println(\"Resetting...\");\n+    bean.resetPeakThreadCount();\n+    System.out.println(\"Peak thread count: \" + bean.getPeakThreadCount());\n+    System.out.println(\"Thread count: \" + bean.getThreadCount());\n+    boolean timeMonitoring = bean.isThreadCpuTimeSupported();\n+    System.out.println(\"Thread CPU time monitoring supported: \" + timeMonitoring);\n+    if (timeMonitoring)\n+      {\n+\tfor (int a = 0; a < ids.length; ++a)\n+\t  {\n+\t    System.out.println(\"Thread \" + a \n+\t\t\t       + \" CPU time: \" \n+\t\t\t       + bean.getThreadCpuTime(ids[a]) + \"ns\");\n+\t    System.out.println(\"Thread \" \n+\t\t\t       + a + \" user time: \" \n+\t\t\t       + bean.getThreadUserTime(ids[a]) + \"ns\");\n+\t  }\n+      }\n+    System.out.println(\"Current thread info: \"\n+\t\t       + bean.getThreadInfo(Thread.currentThread().getId()));\n+    System.out.println(\"All thread info: \" + Arrays.toString(bean.getThreadInfo(ids)));\n+    System.out.println(\"Total started threads: \" + bean.getTotalStartedThreadCount());\n+    boolean contentionMonitoring = bean.isThreadContentionMonitoringSupported();\n+    System.out.println(\"Thread contention monitoring supported: \" + contentionMonitoring);\n+    if (contentionMonitoring)\n+      {\n+\tboolean contentionEnabled = bean.isThreadContentionMonitoringEnabled();\n+\tSystem.out.println(\"Thread contention monitoring shouldn't be enabled... \" + \n+\t\t\t   (contentionEnabled ? \"but it is\" : \"true\"));\n+\tif (!contentionEnabled)\n+\t  {\n+\t    System.out.println(\"Enabling...\");\n+\t    bean.setThreadContentionMonitoringEnabled(true);\n+\t    contentionEnabled = bean.isThreadContentionMonitoringEnabled();\n+\t    System.out.println(\"Should now be enabled... \" +\n+\t\t\t       (contentionEnabled ? \"it is\" : \"nope\"));\n+\t  }\n+\tif (contentionEnabled)\n+\t  {\n+\t    ThreadInfo[] info = bean.getThreadInfo(ids);\n+\t    for (int a = 0; a < info.length; ++a)\n+\t      {\n+\t\tSystem.out.println(\"Blocked time for thread \" \n+\t\t\t\t   + info[a].getThreadId() + \": \" \n+\t\t\t\t   + info[a].getBlockedTime() + \"ms\");\n+\t\tSystem.out.println(\"Waited time for thread \" \n+\t\t\t\t   + info[a].getThreadId() + \": \" \n+\t\t\t\t   + info[a].getWaitedTime() + \"ms\");\n+\t      }\n+\t  }\n+      }\n+  }\n+}"}, {"sha": "19bc27c1de8e719c4f393f4252bd2a6a15ac7550", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/Demo.java", "status": "modified", "additions": 52, "deletions": 2, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -22,12 +22,15 @@\n \n package gnu.classpath.examples.swing;\n \n+import gnu.classpath.examples.java2d.JNIOverhead;\n+\n import java.awt.*;\n import java.awt.event.*;\n \n import javax.swing.*;\n import javax.swing.tree.*;\n \n+import javax.swing.plaf.basic.BasicLookAndFeel;\n import javax.swing.plaf.metal.DefaultMetalTheme;\n import javax.swing.plaf.metal.MetalLookAndFeel;\n import javax.swing.plaf.metal.MetalTheme;\n@@ -156,7 +159,10 @@ public void actionPerformed(ActionEvent e)\n \n     examples.add(new JMenuItem(new PopupAction(\"NavigationFilter\",\n                                                NavigationFilterDemo.createDemoFactory())));\n-    \n+    examples.add(new JMenuItem(new PopupAction(\"JNI Overhead\",\n+                                               JNIOverhead.createDemoFactory())));\n+\n+\n     final JMenuItem vmMenu;\n     \n     help.add(new JMenuItem(\"just play with the widgets\"));\n@@ -187,6 +193,10 @@ public void actionPerformed(ActionEvent ae)\n             }\n       });\n \n+    // Installs the BasicLookAndFeel.\n+    UIManager.installLookAndFeel(\"(Basic Look And Feel)\",\n+                                 InstantiableBasicLookAndFeel.class.getName());\n+    \n     // Create L&F menu.\n     JMenu lafMenu = new JMenu(\"Look and Feel\");\n     ButtonGroup lafGroup = new ButtonGroup();\n@@ -200,6 +210,8 @@ public void actionPerformed(ActionEvent ae)\n         boolean selected = laf.getClassName().equals(currentLaf);\n         lafItem.setSelected(selected);\n         lafMenu.add(lafItem);\n+        \n+        lafGroup.add(lafItem);\n       }\n \n     // Create themes menu.\n@@ -543,7 +555,10 @@ private JPanel mkButtonBar()\n     panel.add(new JButton(new PopupAction(\"Tree\",\n                                           TreeDemo.createDemoFactory())));\n     panel.add(new JButton(new PopupAction(\"Theme Editor\",\n-                                       MetalThemeEditor.createDemoFactory())));\n+                                      MetalThemeEditor.createDemoFactory())));\n+    panel.add(new JButton(new PopupAction(\"JNI Overhead\",\n+                                          JNIOverhead.createDemoFactory())));\n+\n     JButton exitDisposer = mkDisposerButton(frame);\n     panel.add(exitDisposer);\n     \n@@ -652,10 +667,45 @@ public void actionPerformed(ActionEvent event)\n         {\n           ex.printStackTrace();\n         }\n+      \n       SwingUtilities.updateComponentTreeUI(frame);\n       themesMenu.setEnabled(laf.getClassName()\n                            .equals(\"javax.swing.plaf.metal.MetalLookAndFeel\"));\n     }\n+  }\n     \n+  /**\n+   * An implementation of BasicLookAndFeel which can be instantiated.\n+   * \n+   * @author Robert Schuster (robertschuster@fsfe.org)\n+   *\n+   */\n+  public static class InstantiableBasicLookAndFeel extends BasicLookAndFeel\n+  {\n+    public String getDescription()\n+    {\n+      return \"An instantiable implementation of BasicLookAndFeel\";\n+    }\n+    \n+    public String getID()\n+    { \n+      return \"instantiableBasicLookAndFeel\";\n+    }\n+\n+    public String getName()\n+    {\n+      return \"Instantiable Basic Look And Feel\";\n+    }\n+    \n+    public boolean isNativeLookAndFeel()\n+    {\n+      return false;\n+    }\n+    \n+    public boolean isSupportedLookAndFeel()\n+    {\n+      return true;\n+    }\n   }\n+\n }"}, {"sha": "223ee07cd4a658fa7f3bb9a8a6f72774b8228515", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/HtmlDemo.java", "status": "added", "additions": 298, "deletions": 0, "changes": 298, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FHtmlDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FHtmlDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FHtmlDemo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,298 @@\n+/* HtmlDemo.java -- HTML viewer demo\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.Element;\n+import javax.swing.text.html.HTMLDocument;\n+\n+/**\n+ * Parses and displays HTML content.\n+ * \n+ * @author Audrius Meskauskas (audriusa@bioinformatics.org)\n+ */\n+public class HtmlDemo extends JPanel\n+{ \n+  \n+  JTextPane html = new JTextPane();\n+\n+  JTextArea text = new JTextArea(\"<html><body>\" +\n+    \"123456789HR!<hr>987654321\"+\n+    \"123456789BR!<br>987654321\"+\n+    \"<p id='insertHere'>Insertion target</p><p>\"+\n+    \"<font color=red>ma</font>\"+\n+    \"<sup>sup</sup>normal<sub>sub</sub>normal</p><p>Table:\"+\n+    \"<table><tr>a<td>b<td>c<tr>x<td>y<td>z</table></body></html>\");  \n+  \n+  JPanel buttons;\n+  \n+  int n;\n+\n+  public HtmlDemo()\n+  {\n+    super();\n+    html.setContentType(\"text/html\"); // not now.\n+    createContent();\n+  }\n+  \n+  /**\n+   * Returns a panel with the demo content. The panel uses a BorderLayout(), and\n+   * the BorderLayout.SOUTH area is empty, to allow callers to add controls to\n+   * the bottom of the panel if they want to (a close button is added if this\n+   * demo is being run as a standalone demo).\n+   */\n+  private void createContent()\n+  {\n+    setLayout(new BorderLayout());\n+    \n+    JPanel center = new JPanel();\n+    GridLayout layout = new GridLayout();\n+    layout.setRows(2);\n+    center.setLayout(layout);\n+    center.add(new JScrollPane(text));\n+    center.add(new JScrollPane(html));\n+    \n+    buttons = new JPanel();\n+    \n+    JButton parse = new JButton(\"parse\");\n+    parse.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            String t = text.getText();\n+            System.out.println(\"HtmlDemo.java.createContent:Parsing started\");\n+            html.setText(t);\n+            System.out.println(\"HtmlDemo.java.createContent:Parsing completed\");            \n+          }\n+      });\n+    \n+    buttons.add(parse);\n+    \n+    JButton insertBeforeEnd = new JButton(\"before end\");\n+    insertBeforeEnd.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            HTMLDocument doc = (HTMLDocument) html.getDocument();\n+            Element el = doc.getElement(\"insertHere\");\n+            System.out.println(\"Element found:\"+el);\n+            try\n+              {\n+                doc.insertBeforeEnd(el,\"before end \"+(n++));\n+              }\n+            catch (Exception e)\n+              {\n+                e.printStackTrace();\n+              }\n+          }\n+      });\n+    \n+    JButton insertBeforeStart = new JButton(\"before start\");\n+    insertBeforeStart.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            HTMLDocument doc = (HTMLDocument) html.getDocument();\n+            Element el = doc.getElement(\"insertHere\");\n+            System.out.println(\"Element found:\"+el);\n+            try\n+              {\n+                doc.insertBeforeStart(el,\"before start \"+(n++));\n+              }\n+            catch (Exception e)\n+              {\n+                e.printStackTrace();\n+              }\n+          }\n+      });\n+    \n+    JButton insertAfterEnd = new JButton(\"after end\");\n+    insertAfterEnd.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            HTMLDocument doc = (HTMLDocument) html.getDocument();\n+            Element el = doc.getElement(\"insertHere\");\n+            System.out.println(\"Element found:\"+el);\n+            try\n+              {\n+                doc.insertAfterEnd(el,\"after end \"+(n++));\n+              }\n+            catch (Exception e)\n+              {\n+                e.printStackTrace();\n+              }\n+          }\n+      });\n+    \n+    JButton insertAfterStart = new JButton(\"after start\");\n+    insertAfterStart.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            HTMLDocument doc = (HTMLDocument) html.getDocument();\n+            Element el = doc.getElement(\"insertHere\");\n+            System.out.println(\"Element found:\"+el);\n+            try\n+              {\n+                doc.insertAfterStart(el,\"after start \"+(n++));\n+              }\n+            catch (Exception e)\n+              {\n+                e.printStackTrace();\n+              }\n+          }\n+      });\n+    \n+\n+    JButton setInner = new JButton(\"inner\");\n+    setInner.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            HTMLDocument doc = (HTMLDocument) html.getDocument();\n+            Element el = doc.getElement(\"insertHere\");\n+            System.out.println(\"Element found:\"+el);\n+            try\n+              {\n+                doc.setInnerHTML(el,\"inner \"+(n++));\n+              }\n+            catch (Exception e)\n+              {\n+                e.printStackTrace();\n+              }\n+          }\n+      });\n+    \n+    JButton setOuter = new JButton(\"outer\");\n+    setOuter.addActionListener(new ActionListener()\n+      {\n+        public void actionPerformed(ActionEvent event)\n+          {\n+            HTMLDocument doc = (HTMLDocument) html.getDocument();\n+            Element el = doc.getElement(\"insertHere\");\n+            System.out.println(\"Element found:\"+el);\n+            try\n+              {\n+                doc.setOuterHTML(el,\"outer \"+(n++));\n+              }\n+            catch (Exception e)\n+              {\n+                e.printStackTrace();\n+              }\n+          }\n+      });\n+    \n+\n+    buttons.add(insertBeforeStart);\n+    buttons.add(insertAfterStart);    \n+    buttons.add(insertBeforeEnd);\n+    buttons.add(insertAfterEnd);\n+\n+    buttons.add(setInner);\n+    buttons.add(setOuter);\n+    \n+    add(center, BorderLayout.CENTER);\n+    add(buttons, BorderLayout.SOUTH);\n+  }\n+ \n+  /**\n+   * The executable method to display the editable table.\n+   * \n+   * @param args\n+   *          unused.\n+   */\n+  public static void main(String[] args)\n+  {\n+    SwingUtilities.invokeLater\n+    (new Runnable()\n+     {\n+       public void run()\n+       {\n+         HtmlDemo demo = new HtmlDemo();\n+         \n+         JButton exit = new JButton(\"exit\");\n+         exit.addActionListener(new ActionListener()\n+           {\n+             public void actionPerformed(ActionEvent event)\n+               {\n+                 System.exit(0);\n+               }\n+           });\n+         \n+         demo.buttons.add(exit);\n+         \n+         JFrame frame = new JFrame();\n+         frame.getContentPane().add(demo);\n+         frame.setSize(new Dimension(700, 480));\n+         frame.setVisible(true);\n+       }\n+     });\n+  }\n+\n+  /**\n+   * Returns a DemoFactory that creates a HtmlDemo.\n+   *\n+   * @return a DemoFactory that creates a HtmlDemo\n+   */\n+  public static DemoFactory createDemoFactory()\n+  {\n+    return new DemoFactory()\n+    {\n+      public JComponent createDemo()\n+      {\n+        return new HtmlDemo();\n+      }\n+    };\n+  }\n+}\n+"}, {"sha": "5184e5ba0f6592fddbfff8968967d766c4353f9d", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/NavigationFilterDemo.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FNavigationFilterDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FNavigationFilterDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FNavigationFilterDemo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -160,7 +160,7 @@ public int getNextVisualPositionFrom(JTextComponent text,\n           pt = text.getCaret().getMagicCaretPosition();\n           \n           // Calculate its position above.\n-          newpos = Utilities.getPositionAbove(text, pos, pt.x);\n+          newpos = Utilities.getPositionAbove(text, pos, (pt != null) ? pt.x : 0);\n \n           // If we have a valid position, then calculate the next word start\n           // from there.\n@@ -173,7 +173,7 @@ public int getNextVisualPositionFrom(JTextComponent text,\n           pt = text.getCaret().getMagicCaretPosition();\n \n           // Calculate its position below.\n-          newpos = Utilities.getPositionBelow(text, pos, pt.x);\n+          newpos = Utilities.getPositionBelow(text, pos, (pt != null) ? pt.x : 0);\n \n           // If we have a valid position, then calculate the next word start\n           // from there.\n@@ -192,7 +192,6 @@ public int getNextVisualPositionFrom(JTextComponent text,\n           else\n             return Utilities.getPreviousWord(text, newpos);\n         case SwingConstants.EAST:\n-          // Simply calculate the next word's start offset.\n           return Utilities.getNextWord(text, newpos);\n         default:\n           // Do whatever the super implementation did."}, {"sha": "527fe455e4b4849c00549c61cca958f3231d6145", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TabbedPaneDemo.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTabbedPaneDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTabbedPaneDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTabbedPaneDemo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -66,17 +66,17 @@ private void createContent()\n     JPanel p = new JPanel();\n     p.setLayout(new GridLayout(2, 2));\n     JTabbedPane tabs1 = new JTabbedPane(SwingConstants.TOP);\n-    tabs1.add(\"Top Item 1\", new JButton(\"Button\"));\n-    tabs1.add(\"Top Item 2\", new JButton(\"Button\"));\n+    tabs1.add(\"Top Item 1\", new JButton(\"Content: Top Item 1\"));\n+    tabs1.add(\"Top Item 2\", new JButton(\"Content: Top Item 2\"));\n     JTabbedPane tabs2 = new JTabbedPane(SwingConstants.LEFT);\n-    tabs2.add(\"Left Item 1\", new JButton(\"Button\"));\n-    tabs2.add(\"Left Item 2\", new JButton(\"Button\"));\n+    tabs2.add(\"Left Item 1\", new JButton(\"Content: Left Item 1\"));\n+    tabs2.add(\"Left Item 2\", new JButton(\"Content: Left Item 2\"));\n     JTabbedPane tabs3 = new JTabbedPane(SwingConstants.BOTTOM);\n-    tabs3.add(\"Bottom Item 1\", new JButton(\"Button\"));\n-    tabs3.add(\"Bottom Item 2\", new JButton(\"Button\"));\n+    tabs3.add(\"Bottom Item 1\", new JButton(\"Content: Bottom Item 1\"));\n+    tabs3.add(\"Bottom Item 2\", new JButton(\"Content: Bottom Item 2\"));\n     JTabbedPane tabs4 = new JTabbedPane(SwingConstants.RIGHT);\n-    tabs4.add(\"Right Item 1\", new JButton(\"Button\"));\n-    tabs4.add(\"Right Item 2\", new JButton(\"Button\"));\n+    tabs4.add(\"Right Item 1\", new JButton(\"Content: Right Item 1\"));\n+    tabs4.add(\"Right Item 2\", new JButton(\"Content: Right Item 2\"));\n     p.add(tabs1);\n     p.add(tabs2);\n     p.add(tabs3);"}, {"sha": "d4a97b3ef45f43cf45bf9c903a3f22c32e8e7698", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TableDemo.java", "status": "modified", "additions": 165, "deletions": 15, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,19 +39,36 @@\n package gnu.classpath.examples.swing;\n \n import java.awt.BorderLayout;\n+import java.awt.Component;\n import java.awt.Dimension;\n+import java.awt.Rectangle;\n+import java.text.DateFormat;\n+import java.util.Date;\n \n+import javax.swing.AbstractCellEditor;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultCellEditor;\n+import javax.swing.DefaultListCellRenderer;\n import javax.swing.Icon;\n+import javax.swing.JComboBox;\n import javax.swing.JComponent;\n import javax.swing.JFrame;\n+import javax.swing.JList;\n import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n import javax.swing.JScrollPane;\n+import javax.swing.JSlider;\n import javax.swing.JTable;\n+import javax.swing.JTextField;\n import javax.swing.SwingUtilities;\n+import javax.swing.border.Border;\n import javax.swing.plaf.metal.MetalIconFactory;\n import javax.swing.table.DefaultTableColumnModel;\n import javax.swing.table.DefaultTableModel;\n+import javax.swing.table.TableCellEditor;\n+import javax.swing.table.TableCellRenderer;\n import javax.swing.table.TableColumn;\n+import javax.swing.table.TableColumnModel;\n \n /**\n  * Displays the editable table. The first column consists of check boxes.\n@@ -78,12 +95,11 @@ class TModel extends DefaultTableModel\n   {\n     \n     /**\n-     * Return true if the cell is editable. \n-     * Icons are not editable, other cells are editable.\n+     * All cells are editable in our table.\n      */\n     public boolean isCellEditable(int row, int column)\n     {\n-      return column!=1;\n+      return true;\n     }\n     \n     /**\n@@ -143,6 +159,77 @@ else if (column == 1)\n     }    \n   }\n \n+  /**\n+   * The scroll bar renderer.\n+   */\n+  class SliderCell\n+      extends AbstractCellEditor\n+      implements TableCellEditor, TableCellRenderer\n+  {\n+    /**\n+     * The editor bar.\n+     */\n+    JSlider bar;\n+    \n+    /**\n+     * The renderer bar.\n+     */\n+    JSlider rendererBar;\n+    \n+    /**\n+     * The border around the bar, if required.\n+     */\n+    Border border = BorderFactory.createLineBorder(table.getGridColor());\n+\n+    SliderCell()\n+    {\n+      bar = new JSlider();\n+      bar.setOrientation(JScrollBar.HORIZONTAL);\n+      bar.setMinimum(0);\n+      bar.setMaximum(rows);      \n+      bar.setBorder(border);\n+      \n+      rendererBar = new JSlider();\n+      rendererBar.setMinimum(0);\n+      rendererBar.setMaximum(rows);\n+      rendererBar.setEnabled(false);\n+    }\n+\n+    /**\n+     * Get the editor.\n+     */\n+    public Component getTableCellEditorComponent(JTable table, Object value,\n+                                                 boolean isSelected, int row,\n+                                                 int column)\n+    {\n+      if (value instanceof Integer)\n+        bar.setValue(((Integer) value).intValue());\n+      return bar;\n+    }\n+    \n+    /**\n+     * Get the renderer.\n+     */\n+    public Component getTableCellRendererComponent(JTable table, Object value,\n+                                                   boolean isSelected,\n+                                                   boolean hasFocus, int row,\n+                                                   int column)\n+    {\n+      rendererBar.setValue(((Integer) value).intValue());\n+      if (hasFocus)\n+        rendererBar.setBorder(border);\n+      else\n+        rendererBar.setBorder(null);\n+      return rendererBar;\n+    }\n+\n+    public Object getCellEditorValue()\n+    {\n+      return new Integer(bar.getValue());\n+    }\n+\n+  }  \n+  \n   /**\n    * The table being displayed.\n    */\n@@ -158,6 +245,25 @@ else if (column == 1)\n    */\n   Object[][] values;\n   \n+  /**\n+   * The icons that appear in the icon column.\n+   */ \n+  Icon[] icons = new Icon[]\n+    {                            \n+      MetalIconFactory.getTreeComputerIcon(),\n+      MetalIconFactory.getTreeHardDriveIcon(),\n+      MetalIconFactory.getTreeFolderIcon(),\n+    };\n+    \n+  /**\n+   * The choices in the combo boxes\n+   */\n+  String [] sides = new String[]\n+    {\n+      \"north\", \"south\", \"east\", \"west\"                           \n+    };\n+  \n+  \n   /**\n    * Create the table demo with the given titel.\n    */\n@@ -178,29 +284,25 @@ private void createContent()\n     setLayout(new BorderLayout());\n     values = new Object[rows][];\n     \n-    // The icons that appear in the icon column.\n-    Icon[] icons = new Icon[]\n-      {                            \n-        MetalIconFactory.getTreeComputerIcon(),\n-        MetalIconFactory.getTreeHardDriveIcon(),\n-        MetalIconFactory.getTreeFolderIcon(),\n-      }; \n-    \n     for (int i = 0; i < values.length; i++)\n       {\n         values[i] = new Object[cols];\n-        for (int j = 2; j < cols; j++)\n+        for (int j = 3; j < cols; j++)\n           {\n             values[i][j] = \"\" + ((char) ('a' + j)) + i;\n           }\n         values [i][0] = i % 2 == 0? Boolean.TRUE : Boolean.FALSE;\n-        values [i][1] = icons [ i % icons.length ]; \n+        values [i][1] = icons [ i % icons.length ];\n+        values [i][2] = sides [ i % sides.length ];\n+        values [i][4] = new Integer(i);\n       }\n         \n     table.setModel(model);        \n         \n     // Make the columns with gradually increasing width:\n     DefaultTableColumnModel cm = new DefaultTableColumnModel();\n+    table.setColumnModel(cm);\n+    \n     for (int i = 0; i < cols; i++)\n       {\n         TableColumn column = new TableColumn(i);\n@@ -215,8 +317,9 @@ private void createContent()\n             \n         cm.addColumn(column);            \n       }\n-\n-    table.setColumnModel(cm);\n+    \n+    setCustomEditors();\n+    setInformativeHeaders();\n \n     // Create the table, place it into scroll pane and place\n     // the pane into this frame.\n@@ -226,6 +329,52 @@ private void createContent()\n     scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n     scroll.getViewport().add(table);\n     add(scroll, BorderLayout.CENTER);\n+    \n+    // Increase the row height to make the icons and sliders look better.\n+    table.setRowHeight(table.getRowHeight()+2);\n+  }\n+  \n+  /**\n+   * Set the more informative column headers for specific columns.\n+   */\n+  void setInformativeHeaders()\n+  {\n+    TableColumnModel cm = table.getColumnModel();\n+\n+    cm.getColumn(0).setHeaderValue(\"check\");\n+    cm.getColumn(1).setHeaderValue(\"icon\");\n+    cm.getColumn(2).setHeaderValue(\"combo\");\n+    cm.getColumn(3).setHeaderValue(\"edit combo\");\n+    cm.getColumn(4).setHeaderValue(\"slider\");\n+  }\n+  \n+  /**\n+   * Set the custom editors for combo boxes. This method also sets one\n+   * custom renderer.\n+   */\n+  void setCustomEditors()\n+  {\n+    TableColumnModel cm = table.getColumnModel();\n+    \n+    // Set combo-box based editor for icons (note that no custom\n+    // renderer is needed for JComboBox to work with icons.\n+    JComboBox combo0 = new JComboBox(icons);\n+    cm.getColumn(1).setCellEditor(new DefaultCellEditor(combo0));\n+    \n+    // Set the simple combo box editor for the third column:\n+    JComboBox combo1 = new JComboBox(sides);\n+    cm.getColumn(2).setCellEditor(new DefaultCellEditor(combo1));\n+    \n+    // Set the editable combo box for the forth column:\n+    JComboBox combo2 = new JComboBox(sides);\n+    combo2.setEditable(true);\n+    cm.getColumn(3).setCellEditor(new DefaultCellEditor(combo2));\n+    \n+    SliderCell scrollView = new SliderCell();\n+    cm.getColumn(4).setCellEditor(scrollView);\n+    cm.getColumn(4).setCellRenderer(scrollView);    \n+\n+    table.setColumnModel(cm);\n   }\n   \n   /**\n@@ -266,3 +415,4 @@ public JComponent createDemo()\n     };\n   }\n }\n+"}, {"sha": "308dd19217c1ee2d559e92a5c46e75407682f736", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -93,6 +93,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -113,6 +115,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -143,6 +146,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -193,6 +200,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -213,6 +221,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@"}, {"sha": "7db1816403c4baea2043d2a350db1197ffd434f6", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -84,6 +84,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -104,6 +106,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -134,6 +137,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -184,6 +191,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -204,6 +212,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@"}, {"sha": "af96334072254bea0d30c184358a79f2411974c0", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -84,6 +84,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -104,6 +106,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -134,6 +137,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -184,6 +191,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -204,6 +212,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@"}, {"sha": "7a5537c5fd6764cc94cbabd01ec636aaf8f387da", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -84,6 +84,8 @@ CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n+CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -104,6 +106,7 @@ CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n+DEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n ECHO_C = @ECHO_C@\n@@ -134,6 +137,10 @@ FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n+GCONF_CFLAGS = @GCONF_CFLAGS@\n+GCONF_LIBS = @GCONF_LIBS@\n+GDK_CFLAGS = @GDK_CFLAGS@\n+GDK_LIBS = @GDK_LIBS@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n@@ -184,6 +191,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PATH_TO_ESCHER = @PATH_TO_ESCHER@\n PATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n@@ -204,6 +212,8 @@ USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n+USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@"}, {"sha": "5b77fa030735b05802fc4b3e110029eda94ece3f", "filename": "libjava/classpath/gnu/CORBA/ForwardRequestHelper.java", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2FCORBA%2FForwardRequestHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2FCORBA%2FForwardRequestHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FForwardRequestHelper.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -61,11 +61,6 @@\n  */\n public abstract class ForwardRequestHelper\n {\n-  /**\n-   * The cached typecode value, computed only once.\n-   */\n-  private static TypeCode typeCode;\n-\n   /**\n    * Extract the ForwardRequest from given Any.\n    * This method uses the ForwardRequestHolder.\n@@ -132,18 +127,14 @@ public static ForwardRequest read(InputStream input)\n    */\n   public static TypeCode type()\n   {\n-    if (typeCode == null)\n-      {\n-        ORB orb = ORB.init();\n-        StructMember[] members = new StructMember[ 1 ];\n-\n-        TypeCode field;\n-\n-        field = ObjectHelper.type();\n-        members [ 0 ] = new StructMember(\"forward_reference\", field, null);\n-        typeCode = orb.create_exception_tc(id(), \"ForwardRequest\", members);\n-      }\n-    return typeCode;\n+    ORB orb = OrbRestricted.Singleton;\n+    StructMember[] members = new StructMember[ 1 ];\n+    \n+    TypeCode field;\n+    \n+    field = ObjectHelper.type();\n+    members [ 0 ] = new StructMember(\"forward_reference\", field, null);\n+    return orb.create_exception_tc(id(), \"ForwardRequest\", members);\n   }\n \n   /**"}, {"sha": "96573193a9e9e974fb6181d74094beb47098e48f", "filename": "libjava/classpath/gnu/classpath/debug/Simple1LineFormatter.java", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSimple1LineFormatter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSimple1LineFormatter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSimple1LineFormatter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,10 +38,11 @@\n \n package gnu.classpath.debug;\n \n-import gnu.classpath.SystemProperties;\n+import gnu.java.security.action.GetPropertyAction;\n \n import java.io.PrintWriter;\n import java.io.StringWriter;\n+import java.security.AccessController;\n import java.text.DateFormat;\n import java.text.DecimalFormat;\n import java.text.NumberFormat;\n@@ -91,20 +92,27 @@\n     extends Formatter\n {\n   private static final String DAT_PATTERN = \"yyyy-MM-dd HH:mm:ss.SSSS Z \";\n-  private static final DateFormat DAT_FORMAT = new SimpleDateFormat(DAT_PATTERN);\n   private static final String THREAD_PATTERN = \" #########0;-#########0\";\n-  private static final NumberFormat THREAD_FORMAT = new DecimalFormat(THREAD_PATTERN);\n   private static final String SPACES_32 = \"                                \";\n   private static final String SPACES_6 = \"      \";\n-  private static final String LS = SystemProperties.getProperty(\"line.separator\");\n+  private static final String LS = (String) AccessController.doPrivileged\n+    (new GetPropertyAction(\"line.separator\"));\n+  private DateFormat dateFormat;\n+  private NumberFormat threadFormat;\n \n   // default 0-arguments constructor\n \n   public String format(LogRecord record)\n   {\n-    StringBuffer sb = new StringBuffer(180)\n-        .append(DAT_FORMAT.format(new Date(record.getMillis())))\n-        .append(THREAD_FORMAT.format(record.getThreadID()))\n+    if (dateFormat == null)\n+      dateFormat = new SimpleDateFormat(DAT_PATTERN);\n+\n+    if (threadFormat == null)\n+      threadFormat = new DecimalFormat(THREAD_PATTERN);\n+\n+    StringBuilder sb = new StringBuilder(180)\n+        .append(dateFormat.format(new Date(record.getMillis())))\n+        .append(threadFormat.format(record.getThreadID()))\n         .append(\" \");\n     String s = record.getSourceClassName();\n     if (s == null)"}, {"sha": "502b488702b767aad8e841551fdaa885b8863c37", "filename": "libjava/classpath/gnu/classpath/debug/SystemLogger.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSystemLogger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSystemLogger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSystemLogger.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,7 +38,9 @@\n \n package gnu.classpath.debug;\n \n-import gnu.classpath.SystemProperties;\n+import gnu.java.security.action.GetPropertyAction;\n+\n+import java.security.AccessController;\n import java.util.StringTokenizer;\n import java.util.logging.Logger;\n \n@@ -49,8 +51,8 @@\n   static\n   {\n     SYSTEM.setFilter (PreciseFilter.GLOBAL);\n-\n-    String defaults = SystemProperties.getProperty (\"gnu.classpath.debug.components\");\n+    String defaults = (String) AccessController.doPrivileged\n+      (new GetPropertyAction(\"gnu.classpath.debug.components\"));\n \n     if (defaults != null)\n       {"}, {"sha": "ef6b2ed3dc1ef6b71ff4afa6811c65d0febe5b7c", "filename": "libjava/classpath/gnu/classpath/debug/TeeInputStream.java", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeInputStream.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,98 @@\n+/* TeeInputStream.java\n+   Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under terms\n+of your choice, provided that you also meet, for each linked independent\n+module, the terms and conditions of the license of that module.  An\n+independent module is a module which is not derived from or based on\n+this library.  If you modify this library, you may extend this exception\n+to your version of the library, but you are not obligated to do so.  If\n+you do not wish to do so, delete this exception statement from your\n+version.  */\n+\n+package gnu.classpath.debug;\n+\n+import java.io.*;\n+\n+/**\n+ * An input stream that copies all its input to a byte sink.\n+ *\n+ * @author Chris Burdess\n+ */\n+public class TeeInputStream\n+  extends InputStream\n+{\n+\n+  private final InputStream in;\n+  private final OutputStream out;\n+\n+  /**\n+   * Constructs a tee input stream.\n+   * @param in the underlying input stream\n+   * @param out the output sink\n+   */\n+  public TeeInputStream(InputStream in, OutputStream out)\n+  {\n+    this.in = in;\n+    this.out = out;\n+  }\n+\n+  public int read()\n+    throws IOException\n+  {\n+    int ret = in.read();\n+    out.write(ret);\n+    out.flush();\n+    return ret;\n+  }\n+\n+  public int read(byte[] b, int off, int len)\n+    throws IOException\n+  {\n+    int ret = in.read(b, off, len);\n+    if (ret != -1)\n+      {\n+        out.write(b, off, ret);\n+        out.flush();\n+      }\n+    return ret;\n+  }\n+\n+  public void close()\n+    throws IOException\n+  {\n+    in.close();\n+    out.close();\n+  }\n+\n+  public final boolean markSupported()\n+  {\n+    return false;\n+  }\n+  \n+}"}, {"sha": "cff60894a6c55e24995a1a4116d82f2c6bc6770c", "filename": "libjava/classpath/gnu/classpath/debug/TeeOutputStream.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeOutputStream.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,93 @@\n+/* TeeOutputStream.java\n+   Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under terms\n+of your choice, provided that you also meet, for each linked independent\n+module, the terms and conditions of the license of that module.  An\n+independent module is a module which is not derived from or based on\n+this library.  If you modify this library, you may extend this exception\n+to your version of the library, but you are not obligated to do so.  If\n+you do not wish to do so, delete this exception statement from your\n+version.  */\n+\n+package gnu.classpath.debug;\n+\n+import java.io.*;\n+\n+/**\n+ * An output stream that copies all its output to an additional byte sink.\n+ *\n+ * @author Chris Burdess\n+ */\n+public class TeeOutputStream\n+  extends OutputStream\n+{\n+\n+  private final OutputStream out;\n+  private final OutputStream sink;\n+\n+  /**\n+   * Constructs a tee output stream.\n+   * @param out the underlying output stream\n+   * @param sink the output sink\n+   */\n+  public TeeOutputStream(OutputStream out, OutputStream sink)\n+  {\n+    this.out = out;\n+    this.sink = sink;\n+  }\n+\n+  public void write(int c)\n+    throws IOException\n+  {\n+    out.write(c);\n+    sink.write(c);\n+  }\n+\n+  public void write(byte[] b, int off, int len)\n+    throws IOException\n+  {\n+    out.write(b, off, len);\n+    sink.write(b, off, len);\n+  }\n+\n+  public void flush()\n+    throws IOException\n+  {\n+    out.flush();\n+    sink.flush();\n+  }\n+\n+  public void close()\n+    throws IOException\n+  {\n+    out.close();\n+    sink.close();\n+  }\n+\n+}"}, {"sha": "8fa742e21a13f4395ead27c149ee6c588573c0a5", "filename": "libjava/classpath/gnu/classpath/debug/TeeReader.java", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeReader.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,98 @@\n+/* TeeReader.java\n+   Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under terms\n+of your choice, provided that you also meet, for each linked independent\n+module, the terms and conditions of the license of that module.  An\n+independent module is a module which is not derived from or based on\n+this library.  If you modify this library, you may extend this exception\n+to your version of the library, but you are not obligated to do so.  If\n+you do not wish to do so, delete this exception statement from your\n+version.  */\n+\n+package gnu.classpath.debug;\n+\n+import java.io.*;\n+\n+/**\n+ * A reader that copies all characters read to an output sink.\n+ *\n+ * @author Chris Burdess\n+ */\n+public class TeeReader\n+  extends Reader\n+{\n+\n+  private final Reader in;\n+  private final Writer out;\n+\n+  /**\n+   * Constructs a tee reader.\n+   * @param in the input\n+   * @param out the output sink\n+   */\n+  public TeeReader(Reader in, Writer out)\n+  {\n+    this.in = in;\n+    this.out = out;\n+  }\n+\n+  public int read()\n+    throws IOException\n+  {\n+    int ret = in.read();\n+    out.write(ret);\n+    out.flush();\n+    return ret;\n+  }\n+\n+  public int read(char[] b, int off, int len)\n+    throws IOException\n+  {\n+    int ret = in.read(b, off, len);\n+    if (ret != -1)\n+      {\n+        out.write(b, off, ret);\n+        out.flush();\n+      }\n+    return ret;\n+  }\n+\n+  public void close()\n+    throws IOException\n+  {\n+    in.close();\n+    out.close();\n+  }\n+\n+  public final boolean markSupported()\n+  {\n+    return false;\n+  }\n+  \n+}"}, {"sha": "f226c21658a97e96bbb2051d10c641ef423bb7f2", "filename": "libjava/classpath/gnu/classpath/debug/TeeWriter.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FTeeWriter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,93 @@\n+/* TeeWriter.java\n+   Copyright (C) 2006  Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under terms\n+of your choice, provided that you also meet, for each linked independent\n+module, the terms and conditions of the license of that module.  An\n+independent module is a module which is not derived from or based on\n+this library.  If you modify this library, you may extend this exception\n+to your version of the library, but you are not obligated to do so.  If\n+you do not wish to do so, delete this exception statement from your\n+version.  */\n+\n+package gnu.classpath.debug;\n+\n+import java.io.*;\n+\n+/**\n+ * A writer that copies all its output to an additional character sink.\n+ *\n+ * @author Chris Burdess\n+ */\n+public class TeeWriter\n+  extends Writer\n+{\n+\n+  private final Writer out;\n+  private final Writer sink;\n+\n+  /**\n+   * Constructs a tee writer.\n+   * @param out the underlying writer\n+   * @param sink the output sink\n+   */\n+  public TeeWriter(Writer out, Writer sink)\n+  {\n+    this.out = out;\n+    this.sink = sink;\n+  }\n+\n+  public void write(int c)\n+    throws IOException\n+  {\n+    out.write(c);\n+    sink.write(c);\n+  }\n+\n+  public void write(char[] b, int off, int len)\n+    throws IOException\n+  {\n+    out.write(b, off, len);\n+    sink.write(b, off, len);\n+  }\n+\n+  public void flush()\n+    throws IOException\n+  {\n+    out.flush();\n+    sink.flush();\n+  }\n+\n+  public void close()\n+    throws IOException\n+  {\n+    out.close();\n+    sink.close();\n+  }\n+\n+}"}, {"sha": "e63a9a353dda1c7fb70a2cc4dface244869e5537", "filename": "libjava/classpath/gnu/classpath/jdwp/Jdwp.java", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -56,6 +56,9 @@\n /**\n  * Main interface from the virtual machine to the JDWP back-end.\n  *\n+ * The thread created by this class is only used for initialization.\n+ * Once it exits, the JDWP backend is fully initialized.\n+ *\n  * @author Keith Seitz (keiths@redhat.com)\n  */\n public class Jdwp\n@@ -65,7 +68,8 @@\n   private static Jdwp _instance = null;\n \n   /**\n-   * Are we debugging?\n+   * Are we debugging? Only true if debugging\n+   * *and* initialized.\n    */\n   public static boolean isDebugging = false;\n \n@@ -89,13 +93,16 @@\n   // A thread group for the JDWP threads\n   private ThreadGroup _group;\n \n+  // Initialization synchronization\n+  private Object _initLock = new Object ();\n+  private int _initCount = 0;\n+\n   /**\n    * constructor\n    */\n   public Jdwp ()\n   {\n     _shutdown = false;\n-    isDebugging = true;\n     _instance = this;\n   }\n \n@@ -271,17 +278,52 @@ private void _enforceSuspendPolicy (byte suspendPolicy)\n       }\n   }\n \n+  /**\n+   * Allows subcomponents to specify that they are\n+   * initialized.\n+   *\n+   * Subcomponents include JdwpConnection and PacketProcessor.\n+   */\n+  public void subcomponentInitialized ()\n+  {\n+    synchronized (_initLock)\n+      {\n+\t++_initCount;\n+\t_initLock.notify ();\n+      }\n+  }\n+\n   public void run ()\n   {\n     try\n       {\n \t_doInitialization ();\n+\n+\t/* We need a little internal synchronization here, so that\n+\t   when this thread dies, the back-end will be fully initialized,\n+\t   ready to start servicing the VM and debugger. */\n+\tsynchronized (_initLock)\n+\t  {\n+\t    while (_initCount != 2)\n+\t      _initLock.wait ();\n+\t  }\n+\t_initLock = null;\n       }\n     catch (Throwable t)\n       {\n \tSystem.out.println (\"Exception in JDWP back-end: \" + t);\n \tSystem.exit (1);\n       }\n+\n+    /* Force creation of the EventManager. If the event manager\n+       has not been created when isDebugging is set, it is possible\n+       that the VM will call Jdwp.notify (which uses EventManager)\n+       while the EventManager is being created (or at least this is\n+       a problem with gcj/gij). */\n+    EventManager.getDefault();\n+\n+    // Now we are finally ready and initialized\n+    isDebugging = true;\n   }\n \n   // A helper function to process the configure string \"-Xrunjdwp:...\""}, {"sha": "abf280d6ec6d3353d4167c08fbfb5e53ef24120c", "filename": "libjava/classpath/gnu/classpath/jdwp/event/BreakpointEvent.java", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FBreakpointEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FBreakpointEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FBreakpointEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -62,18 +62,23 @@\n \n   // Location where breakpoint occurred\n   private Location _location;\n+  \n+  //object instance\n+  private Object _instance;\n \n   /**\n    * Constructs a new BreakpointEvent\n    *\n    * @param thread  thread in which event occurred\n    * @param loc     location where breakpoint occurred\n+   * @param instance object instance\n    */\n-  public BreakpointEvent(Thread thread, Location loc)\n+  public BreakpointEvent(Thread thread, Location loc, Object instance)\n   {\n     super(JdwpConstants.EventKind.BREAKPOINT);\n     _thread = thread;\n     _location = loc;\n+    _instance = instance;\n   }\n \n   /**\n@@ -83,12 +88,14 @@ public BreakpointEvent(Thread thread, Location loc)\n    * @param type  the type of parameter desired\n    * @returns the desired parameter or null\n    */\n-  public Object getParameter(Class type)\n+  public Object getParameter(int type)\n   {\n-    if (type == ThreadId.class)\n+    if (type == EVENT_THREAD)\n       return _thread;\n-    else if (type == Location.class)\n+    else if (type == EVENT_LOCATION)\n       return _location;\n+    else if (type == EVENT_INSTANCE)\n+      return _instance;\n \n     return null;\n   }"}, {"sha": "5341daa42b5e457779667d4d4faf9a160966309b", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ClassPrepareEvent.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FClassPrepareEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FClassPrepareEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FClassPrepareEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -116,11 +116,11 @@ public ClassPrepareEvent (Thread thread, Class clazz, int flags)\n    * @param type  the type of parameter desired\n    * @returns the desired parameter or <code>null</code>\n    */\n-  public Object getParameter (Class type)\n+  public Object getParameter (int type)\n   {\n-    if (type == ThreadId.class)\n+    if (type == EVENT_THREAD)\n       return _thread;\n-    else if (type == ReferenceTypeId.class)\n+    else if (type == EVENT_CLASS)\n       return _class;\n \n     return null;"}, {"sha": "4ba8bc8066686ef2bce010ac1cc7d3c07e13e155", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ClassUnloadEvent.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FClassUnloadEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FClassUnloadEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FClassUnloadEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,96 @@\n+/* ClassUnloadEvent.java -- event generated when a class is unloaded\n+ Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.event;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMIdManager;\n+import gnu.classpath.jdwp.util.JdwpString;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * \"Notification of a class unload in the target VM\" -- JDWP 1.4.2\n+ * \n+ * @author Kyle Galloway (kgallowa@redhat.com)\n+ */\n+public class ClassUnloadEvent\n+    extends Event\n+{\n+  //signature directly from VM\n+  private String _signature;\n+\n+  /**\n+   * Constructs a new <code>ClassUnloadEvent</code>\n+   * \n+   * @param signature the signature reported from the VM\n+   */\n+  public ClassUnloadEvent(String signature)\n+  {\n+    super(JdwpConstants.EventKind.CLASS_UNLOAD);\n+    _signature = signature;\n+  }\n+\n+  /**\n+   * Returns a specific filtering parameter for this event. Class is the only\n+   * valid type.\n+   * \n+   * @param type the type of parameter desired\n+   * @returns the desired parameter or <code>null</code>\n+   */\n+  public Object getParameter(int type)\n+  {\n+\n+    return null;\n+  }\n+\n+  /**\n+   * Writes the event to the given stream\n+   * \n+   * @param outStream the output stream to write the event to\n+   */\n+  protected void _writeData(DataOutputStream outStream) \n+    throws IOException\n+  {\n+    VMIdManager idm = VMIdManager.getDefault();\n+\n+    JdwpString.writeString(outStream, _signature);\n+  }\n+\n+}"}, {"sha": "e91108a61a849afa1a7ca6002e218eb2587f52be", "filename": "libjava/classpath/gnu/classpath/jdwp/event/Event.java", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -54,6 +54,41 @@\n  */\n public abstract class Event\n {\n+  /**\n+   * The class of the object in which the event occurred\n+   */\n+  public static final int EVENT_CLASS = 1;\n+  \n+  /**\n+   * The thread where the event occurred\n+   */\n+  public static final int EVENT_THREAD = 2;\n+  \n+  /**\n+   * The location where an event occurred\n+   */\n+  public static final int EVENT_LOCATION = 3;\n+  \n+  /**\n+   * The instance of the class where the event occurred\n+   */\n+  public static final int EVENT_INSTANCE = 4;\n+  \n+  /**\n+   * The field acted on by an event\n+   */\n+  public static final int EVENT_FIELD = 5;\n+\n+  /**\n+   * The class of the exception for ExceptionEvent\n+   */\n+  public static final int EVENT_EXCEPTION_CLASS = 6;\n+\n+  /**\n+   * Whether this exception was caught (only valid for ExceptionEvents)\n+   */\n+  public static final int EVENT_EXCEPTION_CAUGHT = 7;\n+  \n   // The kind of event represented by this event\n   private byte _eventKind;\n \n@@ -97,7 +132,7 @@ protected abstract void _writeData (DataOutputStream outStream)\n    * @returns the parameter (not the ID) or <code>null</code> if none is\n    *          is defined for this event\n    */\n-  public abstract Object getParameter (Class type);\n+  public abstract Object getParameter (int type);\n \n   /**\n    * Converts this event into to a JDWP packet"}, {"sha": "54a7b08312d9068dbf9871ab58737f3bbbdbb535", "filename": "libjava/classpath/gnu/classpath/jdwp/event/EventManager.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventManager.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* EventManager.java -- event management and notification infrastructure\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -69,7 +69,7 @@\n public class EventManager\n {\n   // Single instance\n-  private static EventManager _instance = new EventManager ();\n+  private static EventManager _instance = null;\n \n   // maps event (EVENT_*) to lists of EventRequests\n   private Hashtable _requests = null;\n@@ -79,8 +79,11 @@\n    *\n    * @return the event manager\n    */\n-  public static EventManager getDefault ()\n+  public static EventManager getDefault()\n   {\n+    if (_instance == null)\n+      _instance = new EventManager();\n+\n     return _instance;\n   }\n "}, {"sha": "1303c09be76c89903cd6d21c2a00f8ab3dc61454", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ExceptionEvent.java", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FExceptionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FExceptionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FExceptionEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,157 @@\n+/* ExceptionEvent.java -- an event specifying an exception has been thrown\n+ Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.event;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMIdManager;\n+import gnu.classpath.jdwp.id.ObjectId;\n+import gnu.classpath.jdwp.id.ThreadId;\n+import gnu.classpath.jdwp.util.Location;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * Notification from the VM that an exception has occurred along with where it\n+ * occurred, and if and where it was caught.\n+ * \n+ * @author Kyle Galloway (kgallowa@redhat.com)\n+ */\n+public class ExceptionEvent\n+    extends Event\n+{\n+  //object instance\n+  private Object _instance;\n+  \n+  // the exception thrown\n+  private Throwable _exception;\n+\n+  // the thread in which the exception occurred\n+  private Thread _thread;\n+\n+  // the location where the exception was thrown\n+  private Location _location;\n+  \n+  //the location where the exception was caught\n+  private Location _catchLocation;\n+  \n+  //the class where the exeption was thrown\n+  private Class _klass;\n+\n+  /**\n+   * Constructs a new <code>ExceptionEvent</code> where the exception was\n+   * caught.\n+   * \n+   * @param exception the throwable object that generated the event\n+   * @param thread the thread where the exception occurred\n+   * @param location the location where the exception was thrown\n+   * @param catchLocation the location where the exception was caught\n+   * @param instance the instance that threw the exception\n+   */\n+  public ExceptionEvent(Throwable exception, Thread thread, Location location,\n+                        Location catchLocation, Class clazz, Object instance)\n+  {\n+    super(JdwpConstants.EventKind.EXCEPTION);\n+    _exception = exception;\n+    _thread = thread;\n+    _location = location;\n+    _catchLocation = catchLocation;\n+    _klass = clazz;\n+    _instance = instance;\n+  }\n+\n+  /**\n+   * Returns a specific filtering parameter for this event. Valid types are\n+   * thread, location, and catchLocation.\n+   * \n+   * @param type the type of parameter desired\n+   * @returns the desired parameter or null\n+   */\n+  public Object getParameter(int type)\n+  {\n+    if (type == EVENT_THREAD)\n+      return _thread;\n+    else if (type == EVENT_LOCATION)\n+      return _location;\n+    else if (type == EVENT_INSTANCE)\n+      return _instance;\n+    else if (type == EVENT_CLASS)\n+      return _klass;\n+    else if (type == EVENT_EXCEPTION_CLASS)\n+      return _exception.getClass();\n+    else if (type == EVENT_EXCEPTION_CAUGHT)\n+      if (_catchLocation.getMethod() != null)\n+        return new Boolean(true);\n+      else\n+        return new Boolean(false);\n+\n+    return null;\n+  }\n+  \n+  /**\n+   * Sets the catchLocation, used for exceptions that are caught in different\n+   * stack frames from where they are thrown.\n+   * \n+   * @param catchLoc the location of the catch\n+   */\n+  public void setCatchLoc(Location catchLoc)\n+  {\n+    _catchLocation = catchLoc;\n+  }\n+\n+  /**\n+   * Writes the event to the given stream\n+   * \n+   * @param outStream the output stream to write the event to\n+   * @throws IOException\n+   */\n+  protected void _writeData(DataOutputStream outStream) \n+    throws IOException\n+  {\n+    VMIdManager idm = VMIdManager.getDefault();\n+    ThreadId tid = (ThreadId) idm.getObjectId(_thread);\n+    ObjectId oid = idm.getObjectId(_exception);\n+\n+    tid.write(outStream);\n+    _location.write(outStream);\n+    oid.writeTagged(outStream);\n+    _catchLocation.write(outStream);\n+\n+  }\n+}"}, {"sha": "40c0516c716e1e60fa78fc1f6a09efd5e305377c", "filename": "libjava/classpath/gnu/classpath/jdwp/event/MethodEntryEvent.java", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FMethodEntryEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FMethodEntryEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FMethodEntryEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,118 @@\n+/* MethodEntryEvent.java -- an event specifying that a method has been invoked\n+ Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.event;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMIdManager;\n+import gnu.classpath.jdwp.id.ThreadId;\n+import gnu.classpath.jdwp.util.Location;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * Notification from the VM that that a method has been invoked\n+ * \n+ * @author Kyle Galloway (kgallowa@redhat.com)\n+ */\n+public class MethodEntryEvent\n+    extends Event\n+{\n+  // The thread where the event occurred\n+  private Thread _thread;\n+\n+  // the location where the event occurred\n+  private Location _location;\n+\n+  //object instance\n+  private Object _instance;\n+\n+  /**\n+   * Constructs a new <code>MethodEntryEvent</code>\n+   * \n+   * @param thread the thread where the exception occurred\n+   * @param location the location single stepped to\n+   * @param instance instance from which the method was called\n+   */\n+  public MethodEntryEvent(Thread thread, Location location, Object instance)\n+  {\n+    super(JdwpConstants.EventKind.METHOD_ENTRY);\n+    _thread = thread;\n+    _location = location;\n+    _instance = instance;\n+  }\n+\n+  /**\n+   * Returns a specific filtering parameter for this event. Valid types are\n+   * thread and location\n+   * \n+   * @param type the type of parameter desired\n+   * @returns the desired parameter or null\n+   */\n+  public Object getParameter(int type)\n+  {\n+    if (type == EVENT_THREAD)\n+      return _thread;\n+    else if (type == EVENT_LOCATION)\n+      return _location;\n+    else if (type == EVENT_INSTANCE)\n+      return _instance;\n+    else if (type == EVENT_CLASS)\n+      return _instance.getClass();\n+\n+    return null;\n+  }\n+\n+  /**\n+   * Writes the event to the given stream\n+   * \n+   * @param outStream the output stream to write the event to\n+   * @throws IOException\n+   */\n+  protected void _writeData(DataOutputStream outStream) \n+    throws IOException\n+  {\n+    VMIdManager idm = VMIdManager.getDefault();\n+    ThreadId tid = (ThreadId) idm.getObjectId(_thread);\n+\n+    tid.write(outStream);\n+    _location.write(outStream);\n+  }\n+\n+}"}, {"sha": "ce03dd264e2821be02723d733b832dd0d5ae98a8", "filename": "libjava/classpath/gnu/classpath/jdwp/event/MethodExitEvent.java", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FMethodExitEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FMethodExitEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FMethodExitEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,115 @@\n+/* MethodExitEvent.java -- an event specifying that a method has returned\n+ Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.event;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMIdManager;\n+import gnu.classpath.jdwp.id.ThreadId;\n+import gnu.classpath.jdwp.util.Location;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+/**\n+ * Notification from the VM that that a method has returned\n+ * \n+ * @author Kyle Galloway (kgallowa@redhat.com)\n+ */\n+public class MethodExitEvent\n+    extends Event\n+{\n+  // The thread where the event occurred\n+  private Thread _thread;\n+\n+  // the location where the event occurred\n+  private Location _location;\n+\n+  // object instance\n+  private Object _instance;\n+\n+  /**\n+   * Constructs a new <code>MethodExitEvent</code>\n+   * \n+   * @param thread the thread where the exception occurred\n+   * @param location the location single stepped to\n+   * @param instance the instance from which the method was called\n+   */\n+  public MethodExitEvent(Thread thread, Location location, Object instance)\n+  {\n+    super(JdwpConstants.EventKind.METHOD_EXIT);\n+    _thread = thread;\n+    _location = location;\n+    _instance = instance;\n+  }\n+\n+  /**\n+   * Returns a specific filtering parameter for this event. Valid types are\n+   * thread and location\n+   * \n+   * @param type the type of parameter desired\n+   * @returns the desired parameter or null\n+   */\n+  public Object getParameter(int type)\n+  {\n+    if (type == EVENT_THREAD)\n+      return _thread;\n+    else if (type == EVENT_LOCATION)\n+      return _location;\n+    else if (type == EVENT_CLASS)\n+      return _instance.getClass();\n+\n+    return null;\n+  }\n+\n+  /**\n+   * Writes the event to the given stream\n+   * \n+   * @param outStream the output stream to write the event to\n+   * @throws IOException\n+   */\n+  protected void _writeData(DataOutputStream outStream) \n+    throws IOException\n+  {\n+    VMIdManager idm = VMIdManager.getDefault();\n+    ThreadId tid = (ThreadId) idm.getObjectId(_thread);\n+\n+    tid.write(outStream);\n+    _location.write(outStream);\n+  }\n+}"}, {"sha": "cd69dd99d6beaf6e150ef7d2c718e8793c3ef386", "filename": "libjava/classpath/gnu/classpath/jdwp/event/SingleStepEvent.java", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FSingleStepEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FSingleStepEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FSingleStepEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,121 @@\n+/* SingleStepEvent.java -- an event specifying that a single step has\n+ compleated\n+ Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.event;\n+\n+import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMIdManager;\n+import gnu.classpath.jdwp.id.ThreadId;\n+import gnu.classpath.jdwp.util.Location;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n+\n+/**\n+ * Notification from the VM that a single step has compleated including the\n+ * thread and location stepped to\n+ * \n+ * @author Kyle Galloway (kgallowa@redhat.com)\n+ */\n+public class SingleStepEvent\n+    extends Event\n+{\n+  // the thread where the event occurred\n+  private Thread _thread;\n+\n+  // the location where the event occurred\n+  private Location _location;\n+\n+  //object instance\n+  private Object _instance;\n+\n+  /**\n+   * Constructs a new <code>SingleStepEvent</code>\n+   * \n+   * @param thread the thread where the exception occurred\n+   * @param location the location single stepped to\n+   * @param instance the instance in which the single step occurred\n+   */\n+  public SingleStepEvent(Thread thread, Location location, Object instance)\n+  {\n+    super(JdwpConstants.EventKind.SINGLE_STEP);\n+    _thread = thread;\n+    _location = location;\n+    _instance = instance;\n+  }\n+\n+  /**\n+   * Returns a specific filtering parameter for this event. Valid types are\n+   * thread and location\n+   * \n+   * @param type the type of parameter desired\n+   * @returns the desired parameter or null\n+   */\n+  public Object getParameter(int type)\n+  {\n+    if (type == EVENT_THREAD)\n+      return _thread;\n+    else if (type == EVENT_LOCATION)\n+      return _location;\n+    else if (type == EVENT_INSTANCE)\n+      return _instance;\n+    else if (type == EVENT_CLASS)\n+      return _instance.getClass();\n+\n+    return null;\n+  }\n+\n+  /**\n+   * Writes the event to the given stream\n+   * \n+   * @param outStream the output stream to write the event to\n+   * @throws IOException\n+   */\n+  protected void _writeData(DataOutputStream outStream) \n+    throws IOException\n+  {\n+    VMIdManager idm = VMIdManager.getDefault();\n+    ThreadId tid = (ThreadId) idm.getObjectId(_thread);\n+\n+    tid.write(outStream);\n+    _location.write(outStream);\n+  }\n+\n+}"}, {"sha": "c665428fb6af46f76121dff1ca21445245b3e849", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ThreadEndEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadEndEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadEndEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadEndEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -81,9 +81,9 @@ public ThreadEndEvent (Thread thread)\n    * @param type  the type of parameter desired\n    * @returns the desired parameter or <code>null</code>\n    */\n-  public Object getParameter (Class type)\n+  public Object getParameter (int type)\n   {\n-    if (type == ThreadId.class)\n+    if (type == EVENT_THREAD)\n       return _thread;\n \n     return null;"}, {"sha": "f9c507dfb168eb9db89a1111fc44748666f73ba4", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ThreadStartEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadStartEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadStartEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadStartEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -86,9 +86,9 @@ public ThreadStartEvent (Thread thread) {\n    * @param type  the type of parameter desired\n    * @returns the desired parameter or <code>null</code>\n    */\n-  public Object getParameter (Class type)\n+  public Object getParameter (int type)\n   {\n-    if (type == ThreadId.class)\n+    if (type == EVENT_THREAD)\n       return _thread;\n \n     return null;"}, {"sha": "a729bd47ec0297df353af4b6c81bc3447382ab07", "filename": "libjava/classpath/gnu/classpath/jdwp/event/VmDeathEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmDeathEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmDeathEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmDeathEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -67,7 +67,7 @@ public VmDeathEvent ()\n    * @param type  the type of parameter desired\n    * @returns the desired parameter or <code>null</code>\n    */\n-  public Object getParameter (Class type)\n+  public Object getParameter (int type)\n   {\n     return null;\n   }"}, {"sha": "1ed63b247995c1c1bcec57d252b3037e450d501e", "filename": "libjava/classpath/gnu/classpath/jdwp/event/VmInitEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmInitEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmInitEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmInitEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -76,7 +76,7 @@ public VmInitEvent (Thread thread)\n    * @param type  the type of parameter desired\n    * @returns the desired parameter or <code>null</code>\n    */\n-  public Object getParameter (Class type)\n+  public Object getParameter (int type)\n   {\n     return null;\n   }"}, {"sha": "a8984316957260b449f3aaf534e90a411c0f9e11", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/ClassMatchFilter.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FClassMatchFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FClassMatchFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FClassMatchFilter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -41,7 +41,6 @@\n \n import gnu.classpath.jdwp.event.Event;\n import gnu.classpath.jdwp.exception.InvalidStringException;\n-import gnu.classpath.jdwp.id.ReferenceTypeId;\n \n /**\n  * An event filter which includes events matching a \n@@ -91,7 +90,7 @@ public String getPattern ()\n    */\n   public boolean matches (Event event)\n   {\n-    Object type = event.getParameter (ReferenceTypeId.class);\n+    Object type = event.getParameter (Event.EVENT_CLASS);\n     if (type != null)\n       {\n \tClass eventClass = (Class) type;"}, {"sha": "455cac6c04ce33449a83ec8e55f40415f2bf6e32", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/ClassOnlyFilter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FClassOnlyFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FClassOnlyFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FClassOnlyFilter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -87,7 +87,7 @@ public ReferenceTypeId getType ()\n    */\n   public boolean matches (Event event)\n   {\n-    Object type = event.getParameter (ReferenceTypeId.class);\n+    Object type = event.getParameter (Event.EVENT_CLASS);\n     if (type != null)\n       {\n \ttry"}, {"sha": "8bb56ed78f7d8c6c8f744ca9e602691d877e49d1", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/ExceptionOnlyFilter.java", "status": "modified", "additions": 32, "deletions": 30, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FExceptionOnlyFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FExceptionOnlyFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FExceptionOnlyFilter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n-/* ExceptionOnlyFilter.java -- \n-   Copyright (C) 2005 Free Software Foundation\n+/* ExceptionOnlyFilter.java -- filter for excetions by caught/uncaught and type\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -61,7 +61,7 @@\n   /**\n    * Constructs a new ExceptionOnlyFilter\n    *\n-   * @param  refId     ID of the exception to report\n+   * @param  refId     ID of the exception to report(null for all exceptions)\n    * @param  caught    Report caught exceptions\n    * @param  uncaught  Report uncaught exceptions\n    * @throws InvalidClassException if refid is invalid\n@@ -70,8 +70,8 @@ public ExceptionOnlyFilter (ReferenceTypeId refId, boolean caught,\n \t\t\t      boolean uncaught)\n     throws InvalidClassException\n   {\n-    if (refId == null || refId.getReference().get () == null)\n-      throw new InvalidClassException (refId.getId ());\n+    if (refId != null && refId.getReference().get() == null)\n+      throw new InvalidClassException(refId.getId());\n \n     _refId = refId;\n     _caught = caught;\n@@ -88,34 +88,36 @@ public ReferenceTypeId getType ()\n     return _refId;\n   }\n \n-  /**\n-   * Report caught exceptions?\n-   *\n-   * @return whether to report caught exceptions\n-   */\n-  public boolean forCaught ()\n-  {\n-    return _caught;\n-  }\n-\n-  /**\n-   * Report uncaught exceptions?\n-   *\n-   * @return whether to report uncaught exceptions\n-   */\n-  public boolean forUncaught ()\n-  {\n-    return _uncaught;\n-  }\n-\n+  \n   /**\n    * Does the given event match the filter?\n-   *\n-   * @param event  the <code>Event</code> to scrutinize\n+   * \n+   * @param event the <code>Event</code> to scrutinize\n    */\n-  public boolean matches (Event event)\n+  public boolean matches(Event event)\n   {\n-    // FIXME\n-    throw new RuntimeException (\"ExceptionOnlyFilter.matches not implemented\");\n+    boolean classMatch = true;\n+\n+    // if not allowing all exceptions check if the exception matches\n+    if (_refId != null)\n+      {\n+        try\n+          {\n+            Class klass \n+              = (Class) event.getParameter(Event.EVENT_EXCEPTION_CLASS);\n+            classMatch = klass == _refId.getType();\n+          }\n+        catch (InvalidClassException ex)\n+          {\n+            classMatch = false;\n+          }\n+      }\n+    \n+    // check against the caught and uncaught options\n+    Boolean caught \n+      = (Boolean) event.getParameter(Event.EVENT_EXCEPTION_CAUGHT);\n+\n+    return classMatch && ((caught.booleanValue()) ? _caught : _uncaught);\n   }\n+  \n }"}, {"sha": "bda5b27d6c152c629b2e19af7e95ea6e15a18f39", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/InstanceOnlyFilter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FInstanceOnlyFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FInstanceOnlyFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FInstanceOnlyFilter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -89,7 +89,7 @@ public ObjectId getInstance ()\n    */\n   public boolean matches (Event event)\n   {\n-    Object eventInstance = event.getParameter (ObjectId.class);\n+    Object eventInstance = event.getParameter (Event.EVENT_INSTANCE);\n     if (eventInstance != null)\n       {\n \tObject myInstance = _instance.getReference().get ();"}, {"sha": "bc1eab883d379bdb179e05263eea17a961acd086", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/ThreadOnlyFilter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FThreadOnlyFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FThreadOnlyFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FThreadOnlyFilter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -65,7 +65,7 @@\n   public ThreadOnlyFilter (ThreadId tid)\n     throws InvalidThreadException\n   {\n-    if (tid.getReference().get () == null)\n+    if (tid == null || tid.getReference().get () == null)\n       throw new InvalidThreadException (tid.getId ());\n \n     _tid = tid;\n@@ -88,7 +88,7 @@ public ThreadId getThread ()\n    */\n   public boolean matches (Event event)\n   {\n-    Object thread = event.getParameter (ThreadId.class);\n+    Object thread = event.getParameter (Event.EVENT_THREAD);\n     if (thread != null)\n       {\n \tThread eventThread = (Thread) thread;"}, {"sha": "a3a7ca05e593d2bbbfc876d6f960cbc7fec30c35", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ClassTypeCommandSet.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassTypeCommandSet.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -106,8 +106,12 @@ private void executeSuperclass(ByteBuffer bb, DataOutputStream os)\n     Class clazz = refId.getType();\n     Class superClazz = clazz.getSuperclass();\n \n-    ReferenceTypeId clazzId = idMan.getReferenceTypeId(superClazz);\n-    clazzId.write(os);\n+    if (superClazz == null) {\n+    \tos.writeLong(0L);\n+    } else {\n+    \tReferenceTypeId clazzId = idMan.getReferenceTypeId(superClazz);\n+    \tclazzId.write(os);\n+    }\n   }\n \n   private void executeSetValues(ByteBuffer bb, DataOutputStream os)"}, {"sha": "59cfb94d39b7111bdc22096cd28f8a94baa39a3a", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/EventRequestCommandSet.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FEventRequestCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FEventRequestCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FEventRequestCommandSet.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -147,7 +147,7 @@ private void executeSet(ByteBuffer bb, DataOutputStream os)\n             if (id == 0)\n               refId = null;\n             else\n-              refId = idMan.readReferenceTypeId(bb);\n+              refId = idMan.getReferenceType(id);\n             boolean caught = (bb.get() == 0) ? false : true;\n             boolean unCaught = (bb.get() == 0) ? false : true;\n             filter = new ExceptionOnlyFilter(refId, caught, unCaught);"}, {"sha": "4df3f472875e4e0718585d31ba3c366f5b8d775d", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/PacketProcessor.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FPacketProcessor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FPacketProcessor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FPacketProcessor.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,6 +1,6 @@\n /* PacketProcessor.java -- a thread which processes command packets\n    from the debugger\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -137,14 +137,18 @@ public PacketProcessor (JdwpConnection con)\n    */\n   public Object run ()\n   {\n+    // Notify initialization thread (gnu.classpath.jdwp.Jdwp) that\n+    // the PacketProcessor thread is ready.\n+    Jdwp.getDefault().subcomponentInitialized ();\n+\t\n     try\n       {\n         while (!_shutdown)\n           {\n             _processOnePacket ();\n           }\n       }\n-    catch (IOException ex)\n+    catch (Exception ex)\n       {\n         ex.printStackTrace();\n       }"}, {"sha": "103199a2b6eeb1904d959d3969eda603bcb7b5bc", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ThreadGroupReferenceCommandSet.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadGroupReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadGroupReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadGroupReferenceCommandSet.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -103,8 +103,12 @@ private void executeParent(ByteBuffer bb, DataOutputStream os)\n     ObjectId oid = idMan.readObjectId(bb);\n     ThreadGroup group = (ThreadGroup) oid.getObject();\n     ThreadGroup parent = group.getParent();\n-    ObjectId parentId = idMan.getObjectId(parent);\n-    parentId.write(os);\n+    if (parent == null) {\n+    \tos.writeLong(0L);\n+    } else {\n+    \tObjectId parentId = idMan.getObjectId(parent);\n+    \tparentId.write(os);   \t\n+    }\n   }\n \n   private void executeChildren(ByteBuffer bb, DataOutputStream os)"}, {"sha": "82a2380bb7b422f421c6a9c08ed9c0621f4d8e66", "filename": "libjava/classpath/gnu/classpath/jdwp/transport/JdwpConnection.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* JdwpConnection.java -- A JDWP-speaking connection\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -165,6 +165,10 @@ private void _doHandshake ()\n    */\n   public void run ()\n   {\n+    // Notify initialization thread (gnu.classpath.jdwp.Jdwp) that\n+    // the JdwpConnection thread is ready.\n+    Jdwp.getDefault().subcomponentInitialized ();\n+\n     while (!_shutdown)\n       {\n \ttry"}, {"sha": "89e81e563a1c3b2d58fc8e9a79f88a57b7d9e6d0", "filename": "libjava/classpath/gnu/classpath/jdwp/util/Location.java", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FLocation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FLocation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FLocation.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -94,18 +94,40 @@ public Location(ByteBuffer bb)\n    * @param os stream to write to\n    * @throws IOException when an error occurs writing to the stream\n    */\n-  public void write(DataOutputStream os)\n+  public void write(DataOutputStream os) \n     throws IOException\n   {\n-    VMIdManager idm = VMIdManager.getDefault();\n-    ClassReferenceTypeId crti = (ClassReferenceTypeId)\n-      idm.getReferenceTypeId(method.getDeclaringClass());\n-\n-    crti.writeTagged(os);\n-    method.writeId(os);\n-    os.writeLong(index);\n+    // check if this is an empty location\n+    if (method != null)\n+      {\n+        VMIdManager idm = VMIdManager.getDefault();\n+        ClassReferenceTypeId crti = \n+          (ClassReferenceTypeId) \n+          idm.getReferenceTypeId(method.getDeclaringClass());\n+\n+        crti.writeTagged(os);\n+        method.writeId(os);\n+        os.writeLong(index);\n+      }\n+    else\n+      {\n+        os.writeByte(1);\n+        os.writeLong((long) 0);\n+        os.writeLong((long) 0);\n+        os.writeLong((long) 0);\n+      }\n   }\n-\n+  \n+  /**\n+   * Sets up an empty location\n+   * \n+   * @return new Location (setup as empty)\n+   */\n+  public static Location getEmptyLocation()\n+  {\n+       return new Location(null, 0);\n+  }\n+   \n   /**\n    * Gets the method of this location\n    * "}, {"sha": "968cc3b1643287cb1202335fa55cde126089e7f9", "filename": "libjava/classpath/gnu/java/awt/ClasspathToolkit.java", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* ClasspathToolkit.java -- Abstract superclass for Classpath toolkits.\n-   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import gnu.java.awt.EmbeddedWindow;\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n-import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n import gnu.java.security.action.SetAccessibleAction;\n \n import java.awt.AWTException;\n@@ -53,6 +52,7 @@\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n import java.awt.Image;\n+import java.awt.Point;\n import java.awt.Toolkit;\n import java.awt.font.FontRenderContext;\n import java.awt.image.ColorModel;\n@@ -120,10 +120,6 @@\n    */\n   public abstract ClasspathFontPeer getClasspathFontPeer (String name, Map attrs); \n \n-  public abstract ClasspathTextLayoutPeer \n-  getClasspathTextLayoutPeer (AttributedString str, FontRenderContext frc); \n-\n-\n   /** \n    * Creates a {@link Font}, in a platform-specific manner.\n    * \n@@ -193,6 +189,9 @@ public Font getFont (String name, Map attrs)\n    */\n   public abstract Font createFont(int format, InputStream stream);\n \n+  /**\n+   * Creates a RobotPeer on a given GraphicsDevice.\n+   */\n   public abstract RobotPeer createRobot (GraphicsDevice screen)\n     throws AWTException;\n \n@@ -206,8 +205,24 @@ public abstract RobotPeer createRobot (GraphicsDevice screen)\n \n   /**\n    * Used to register ImageIO SPIs provided by the toolkit.\n+   *\n+   * Our default implementation does nothing.\n    */\n    public void registerImageIOSpis(IIORegistry reg)\n    {\n    }\n+\n+   /**\n+    * Returns the number of mouse buttons.\n+    * (used by java.awt.MouseInfo).\n+    *\n+    * This dummy implementation returns -1 (no mouse).\n+    * toolkit implementors should overload this method if possible.\n+    * @since 1.5\n+    */\n+   public int getMouseNumberOfButtons() \n+   {\n+     return -1;\n+   }\n }\n+"}, {"sha": "1f0c3ad2da64a82555ce00f4f76654dc81bd30db", "filename": "libjava/classpath/gnu/java/awt/dnd/GtkMouseDragGestureRecognizer.java", "status": "added", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2FGtkMouseDragGestureRecognizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2FGtkMouseDragGestureRecognizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2FGtkMouseDragGestureRecognizer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,172 @@\n+/* GtkMouseDragGestureRecognizer.java --\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.dnd;\n+\n+import java.awt.Component;\n+import java.awt.Point;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.MouseDragGestureRecognizer;\n+import java.awt.event.MouseEvent;\n+\n+public class GtkMouseDragGestureRecognizer\n+    extends MouseDragGestureRecognizer\n+{\n+\n+  public GtkMouseDragGestureRecognizer (DragSource ds)\n+  {\n+    this(ds, null, 0, null);\n+  }\n+\n+  public GtkMouseDragGestureRecognizer (DragSource ds, Component c)\n+  {\n+    this (ds, c, 0, null);\n+  }\n+  \n+  public GtkMouseDragGestureRecognizer (DragSource ds, Component c, int act)\n+  {\n+    this(ds, c, act, null);\n+  }\n+  \n+  public GtkMouseDragGestureRecognizer (DragSource ds, Component c, int act,\n+                                        DragGestureListener dgl)\n+  {\n+    super(ds, c, act, dgl);\n+  }\n+  \n+  public void registerListeners ()\n+  {\n+    super.registerListeners();\n+  }\n+  \n+  public void unregisterListeners ()\n+  {\n+    super.unregisterListeners();\n+  }\n+  \n+  public void mouseClicked (MouseEvent e)\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  public void mousePressed (MouseEvent e)\n+  {\n+    events.clear();\n+    if (getDropActionFromEvent(e) != DnDConstants.ACTION_NONE)\n+      appendEvent(e);\n+  }\n+\n+  public void mouseReleased (MouseEvent e)\n+  {\n+    events.clear();\n+  }\n+\n+  public void mouseEntered (MouseEvent e)\n+  {\n+    events.clear();\n+  }\n+\n+  public void mouseExited(MouseEvent e)\n+  {\n+    if (!events.isEmpty())\n+      if (getDropActionFromEvent(e) == DnDConstants.ACTION_NONE)\n+        events.clear();\n+  }\n+\n+  public void mouseDragged(MouseEvent e)\n+  {\n+    if (!events.isEmpty())\n+      {\n+        int act = getDropActionFromEvent(e);\n+        \n+        if (act == DnDConstants.ACTION_NONE)\n+          return;\n+\n+        Point origin = ((MouseEvent) events.get(0)).getPoint();\n+        Point current = e.getPoint();\n+        int dx = Math.abs(origin.x - current.x);\n+        int dy = Math.abs(origin.y - current.y);\n+        int threshold = DragSource.getDragThreshold();\n+        \n+        if (dx > threshold || dy > threshold)\n+          fireDragGestureRecognized(act, origin);\n+        else\n+          appendEvent(e);\n+      }\n+  }\n+  \n+  public void mouseMoved (MouseEvent e)\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  private int getDropActionFromEvent(MouseEvent e)\n+  {\n+    int modEx = e.getModifiersEx();\n+    int buttons =  modEx & (MouseEvent.BUTTON1_DOWN_MASK\n+               | MouseEvent.BUTTON2_DOWN_MASK | MouseEvent.BUTTON3_DOWN_MASK);\n+    if (!(buttons == MouseEvent.BUTTON1_DOWN_MASK || \n+        buttons == MouseEvent.BUTTON2_DOWN_MASK))\n+      return DnDConstants.ACTION_NONE;\n+    \n+    // Convert modifier to a drop action\n+    int sourceActions = getSourceActions();\n+    int mod = modEx\n+              & (MouseEvent.SHIFT_DOWN_MASK | MouseEvent.CTRL_DOWN_MASK);\n+    switch (mod)\n+      {\n+      case MouseEvent.SHIFT_DOWN_MASK | MouseEvent.CTRL_DOWN_MASK:\n+        return DnDConstants.ACTION_LINK & sourceActions;\n+      case MouseEvent.CTRL_DOWN_MASK:\n+        return DnDConstants.ACTION_COPY & sourceActions;\n+      case MouseEvent.SHIFT_DOWN_MASK:\n+        return DnDConstants.ACTION_MOVE & sourceActions;\n+      default:\n+        if ((sourceActions & DnDConstants.ACTION_MOVE) != 0)\n+          return DnDConstants.ACTION_MOVE & sourceActions;\n+        else if ((sourceActions & DnDConstants.ACTION_COPY) != 0)\n+          return DnDConstants.ACTION_COPY & sourceActions;\n+        else if ((sourceActions & DnDConstants.ACTION_LINK) != 0)\n+          return DnDConstants.ACTION_LINK & sourceActions;\n+      }\n+\n+    return DnDConstants.ACTION_NONE & sourceActions;\n+  }\n+}"}, {"sha": "4f922982273fdcfdeecb2d62536098fd4c983533", "filename": "libjava/classpath/gnu/java/awt/dnd/peer/gtk/GtkDragSourceContextPeer.java", "status": "added", "additions": 174, "deletions": 0, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDragSourceContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDragSourceContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDragSourceContextPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,174 @@\n+/* GtkDragSourceContextPeer.java --\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.dnd.peer.gtk;\n+\n+import gnu.java.awt.peer.gtk.GtkGenericPeer;\n+\n+import java.awt.Component;\n+import java.awt.Cursor;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.dnd.DragGestureEvent;\n+import java.awt.dnd.DragSourceContext;\n+import java.awt.dnd.DragSourceDragEvent;\n+import java.awt.dnd.DragSourceDropEvent;\n+import java.awt.dnd.DragSourceEvent;\n+import java.awt.dnd.InvalidDnDOperationException;\n+import java.awt.dnd.peer.DragSourceContextPeer;\n+import java.awt.peer.ComponentPeer;\n+import java.awt.peer.LightweightPeer;\n+\n+public class GtkDragSourceContextPeer\n+    extends GtkGenericPeer\n+    implements DragSourceContextPeer\n+{\n+  private ComponentPeer peer;\n+  private Cursor cursor;\n+  private DragSourceContext context;\n+  \n+  native void nativeStartDrag(Image i, int x, int y, int action, String target);\n+  native void connectSignals(ComponentPeer comp);\n+  native void create(ComponentPeer comp);\n+  native void nativeSetCursor(int cursor);\n+  \n+  public GtkDragSourceContextPeer(DragGestureEvent e)\n+  {\n+    super(e.getComponent());\n+    Component comp = e.getComponent();\n+    peer = getComponentPeer(comp);\n+    \n+    create(peer);\n+    connectSignals(peer);\n+    cursor = comp.getCursor();\n+  }\n+  \n+  ComponentPeer getComponentPeer(Component c)\n+  {\n+    Component curr = c;\n+    while (curr.getPeer() instanceof LightweightPeer)\n+      curr = curr.getParent();\n+    \n+    if (curr != null)\n+      return curr.getPeer();\n+    return null;\n+  }\n+  \n+  public void startDrag(DragSourceContext context, Cursor c, Image i, Point p)\n+      throws InvalidDnDOperationException\n+  {   \n+    this.context = context;\n+    \n+    if (p == null)\n+      p = new Point();\n+    \n+    // FIXME: use proper DataFlavor, not \"text/plain\".\n+    // Also, add check to determine if dragging.\n+    \n+    setCursor(c);\n+    nativeStartDrag(i, p.x, p.y, context.getTrigger().getDragAction(),\n+                    \"text/plain\");\n+  }\n+\n+  public Cursor getCursor()\n+  {\n+    return cursor;\n+  }\n+\n+  public void setCursor(Cursor c) throws InvalidDnDOperationException\n+  {\n+    if (c != null)\n+      {\n+        nativeSetCursor(c.getType());\n+        cursor = c;\n+      }\n+  }\n+\n+  public void transferablesFlavorsChanged()\n+  {\n+    // Nothing to do here.\n+  }\n+  \n+  /**\n+   * Called from native code.\n+   */\n+\n+  public void dragEnter(int action, int modifiers)\n+  {\n+    context.dragEnter(new DragSourceDragEvent(context, action,\n+                                              action\n+                                                  & context.getSourceActions(),\n+                                              modifiers));\n+  }\n+\n+  public void dragExit(int action, int x, int y)\n+  {\n+    context.dragExit(new DragSourceEvent(context, x, y));\n+  }\n+\n+  public void dragDropEnd(int action, boolean success, int x, int y)\n+  {\n+    context.dragDropEnd(new DragSourceDropEvent(context, action, success, x, y));\n+  }\n+\n+  public void dragMouseMoved(int action, int modifiers)\n+  {\n+    context.dragMouseMoved(new DragSourceDragEvent(context,\n+                                                   action,\n+                                                   action\n+                                                       & context.getSourceActions(),\n+                                                   modifiers));\n+  }\n+\n+  public void dragOver(int action, int modifiers)\n+  {\n+    context.dragOver(new DragSourceDragEvent(context, action,\n+                                             action\n+                                                 & context.getSourceActions(),\n+                                             modifiers));\n+  }\n+\n+  public void dragActionChanged(int newAction, int modifiers)\n+  {\n+    context.dropActionChanged(new DragSourceDragEvent(context,\n+                                                      newAction,\n+                                                      newAction\n+                                                          & context.getSourceActions(),\n+                                                      modifiers));\n+  }\n+}"}, {"sha": "50cd95d41ad8faed8ce12f883d72ed32e36a11d5", "filename": "libjava/classpath/gnu/java/awt/dnd/peer/gtk/GtkDropTargetContextPeer.java", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetContextPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,125 @@\n+/* GtkDropTargetContextPeer.java --\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.dnd.peer.gtk;\n+\n+import gnu.java.awt.peer.gtk.GtkGenericPeer;\n+\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.dnd.DropTarget;\n+import java.awt.dnd.InvalidDnDOperationException;\n+import java.awt.dnd.peer.DropTargetContextPeer;\n+\n+public class GtkDropTargetContextPeer\n+    extends GtkGenericPeer\n+    implements DropTargetContextPeer\n+{\n+\n+  public GtkDropTargetContextPeer()\n+  {\n+    super(null);\n+  }\n+  \n+  public void setTargetActions(int actions)\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+  public int getTargetActions()\n+  {\n+    // FIXME: Not Implemented\n+    return 0;\n+  }\n+\n+  public DropTarget getDropTarget()\n+  {\n+    // FIXME: Not Implemented\n+    return null;\n+  }\n+\n+  public DataFlavor[] getTransferDataFlavors()\n+  {\n+    // FIXME: Not Implemented\n+    return null;\n+  }\n+\n+  public Transferable getTransferable() throws InvalidDnDOperationException\n+  {\n+    // FIXME: Not Implemented\n+    return null;\n+  }\n+\n+  public boolean isTransferableJVMLocal()\n+  {\n+    // FIXME: Not Implemented\n+    return false;\n+  }\n+\n+  public void acceptDrag(int dragAction)\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+  public void rejectDrag()\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+  public void acceptDrop(int dropAction)\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+  public void rejectDrop()\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+  public void dropComplete(boolean success)\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+}"}, {"sha": "88b75ad96ee7fe4a0adf4a4ffb08e6e0bd9ab8bf", "filename": "libjava/classpath/gnu/java/awt/dnd/peer/gtk/GtkDropTargetPeer.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,68 @@\n+/* GtkDropTargetPeer.java --\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.dnd.peer.gtk;\n+\n+import gnu.java.awt.peer.gtk.GtkGenericPeer;\n+\n+import java.awt.dnd.DropTarget;\n+import java.awt.dnd.peer.DropTargetPeer;\n+\n+public class GtkDropTargetPeer\n+    extends GtkGenericPeer\n+    implements DropTargetPeer\n+{\n+\n+  public GtkDropTargetPeer()\n+  {\n+    super(null);\n+  }\n+  \n+  public void addDropTarget(DropTarget target)\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+  public void removeDropTarget(DropTarget target)\n+  {\n+    // FIXME: Not Implemented\n+\n+  }\n+\n+}"}, {"sha": "9d017240d607522cc35417659e11638d59d0339b", "filename": "libjava/classpath/gnu/java/awt/java2d/AbstractGraphics2D.java", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,6 +39,7 @@\n \n import java.awt.AWTError;\n import java.awt.AlphaComposite;\n+import java.awt.AWTPermission;\n import java.awt.BasicStroke;\n import java.awt.Color;\n import java.awt.Composite;\n@@ -72,6 +73,7 @@\n import java.awt.image.BufferedImage;\n import java.awt.image.BufferedImageOp;\n import java.awt.image.ColorModel;\n+import java.awt.image.DataBuffer;\n import java.awt.image.ImageObserver;\n import java.awt.image.Raster;\n import java.awt.image.RenderedImage;\n@@ -144,7 +146,7 @@\n   /**\n    * The transformation for this Graphics2D instance\n    */\n-  private AffineTransform transform;\n+  protected AffineTransform transform;\n \n   /**\n    * The foreground.\n@@ -539,6 +541,15 @@ public boolean hit(Rectangle rect, Shape text, boolean onStroke)\n    */\n   public void setComposite(Composite comp)\n   {\n+    if (! (comp instanceof AlphaComposite))\n+      {\n+        // FIXME: this check is only required \"if this Graphics2D\n+        // context is drawing to a Component on the display screen\".\n+        SecurityManager sm = System.getSecurityManager();\n+        if (sm != null)\n+          sm.checkPermission(new AWTPermission(\"readDisplayPixels\"));\n+      }\n+\n     composite = comp;\n     if (! (comp.equals(AlphaComposite.SrcOver)))\n       isOptimized = false;\n@@ -2054,7 +2065,34 @@ protected void init()\n    *\n    * @return the destination raster\n    */\n-  protected abstract WritableRaster getDestinationRaster();\n+  protected WritableRaster getDestinationRaster()\n+  {\n+    // TODO: Ideally we would fetch the xdrawable's surface pixels for\n+    // initialization of the raster.\n+    Rectangle db = getDeviceBounds();\n+    if (destinationRaster == null)\n+      {\n+        int[] bandMasks = new int[]{ 0xFF0000, 0xFF00, 0xFF };\n+        destinationRaster = Raster.createPackedRaster(DataBuffer.TYPE_INT,\n+                                                      db.width, db.height,\n+                                                      bandMasks, null);\n+        // Initialize raster with white.\n+        int x0 = destinationRaster.getMinX();\n+        int x1 = destinationRaster.getWidth() + x0;\n+        int y0 = destinationRaster.getMinY();\n+        int y1 = destinationRaster.getHeight() + y0;\n+        int numBands = destinationRaster.getNumBands();\n+        for (int y = y0; y < y1; y++)\n+          {\n+            for (int x = x0; x < x1; x++)\n+              {\n+                for (int b = 0; b < numBands; b++)\n+                  destinationRaster.setSample(x, y, b, 255);\n+              }\n+          }\n+      }\n+    return destinationRaster;\n+  }\n \n   /**\n    * Notifies the backend that the raster has changed in the specified"}, {"sha": "bf66be870c0aadc95e6999ae7fca7bbef807742b", "filename": "libjava/classpath/gnu/java/awt/java2d/CubicSegment.java", "status": "modified", "additions": 77, "deletions": 21, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FCubicSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FCubicSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FCubicSegment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,6 +39,7 @@\n package gnu.java.awt.java2d;\n \n \n+import java.awt.geom.CubicCurve2D;\n import java.awt.geom.Point2D;\n \n /**\n@@ -78,34 +79,89 @@ public CubicSegment(Point2D p1, Point2D cp1, Point2D cp2, Point2D p2)\n    */\n   public Object clone()\n   {\n-    return new CubicSegment(P1.getX(), P1.getY(), cp1.getX(), cp1.getY(),\n-                            cp2.getX(), cp2.getY(), P2.getX(), P2.getY());\n+    CubicSegment segment = null;\n+    \n+    try\n+      {\n+        segment = (CubicSegment) super.clone();\n+        \n+        segment.P1 = (Point2D) P1.clone();\n+        segment.P2 = (Point2D) P2.clone();\n+        segment.cp1 = (Point2D) cp1.clone();\n+        segment.cp2 = (Point2D) cp2.clone();\n+      }\n+    catch (CloneNotSupportedException cnse)\n+      {\n+        InternalError ie = new InternalError();\n+        ie.initCause(cnse);\n+        throw ie;\n+      }\n+  \n+    return segment;\n   }\n \n   /**\n-   * Get the \"top\" and \"bottom\" segments of this segment.\n-   * First array element is p0 + normal, second is p0 - normal.\n+   * Get the \"top\" and \"bottom\" segments of this segment. First array element is\n+   * p0 + normal, second is p0 - normal.\n    */\n   public Segment[] getDisplacedSegments(double radius)\n   {\n+    // It is, apparently, impossible to derive a curve parallel to a bezier\n+    // curve (unless it's a straight line), so we have no choice but to\n+    // approximate the displaced segments. Similar to FlattenPathIterator.\n+\n+    Segment segmentTop = null;\n+    Segment segmentBottom = null;\n     this.radius = radius;\n-    double x0 = P1.getX();\n-    double y0 = P1.getY();\n-    double x1 = cp1.getX();\n-    double y1 = cp1.getY();\n-    double x2 = cp2.getX();\n-    double y2 = cp2.getY();\n-    double x3 = P2.getX();\n-    double y3 = P2.getY();\n-    double[] p1 = normal(x0, y0, x1, y1);\n-    double[] p2 = normal(x2, y2, x3, y3);\n \n-    \n-    // FIXME: Doesn't compile.\n-    // return new Segment[]{s1, s2};\n-    return new Segment[0];\n+    CubicCurve2D[] curves = new CubicCurve2D[10];\n+    curves[0] = new CubicCurve2D.Double(P1.getX(), P1.getY(), cp1.getX(),\n+                                        cp1.getY(), cp2.getX(), cp2.getY(),\n+                                        P2.getX(), P2.getY());\n+    int numCurves = 1;\n+\n+    // Hard-coded a recursion limit of 10 and flatness of 1... should we make\n+    // this an option somewhere?\n+    while (numCurves > 0)\n+      {\n+        // The curve is flat enough, or we've reached our recursion limit,\n+        // so take the current start/end points and add it as a line segment\n+        // to our final approximated curves\n+        if (curves[numCurves - 1].getFlatnessSq() <= (radius / 3) || numCurves == 10)\n+          {\n+            Segment[] displaced = new LineSegment(\n+                                                  curves[numCurves - 1].getP1(),\n+                                                  curves[numCurves - 1].getP2()).getDisplacedSegments(radius);\n+            if (segmentTop == null)\n+              {\n+                segmentTop = displaced[0];\n+                segmentBottom = displaced[1];\n+              }\n+            else\n+              {\n+                segmentTop.add(displaced[0]);\n+                segmentBottom.add(displaced[1]);\n+              }\n+            numCurves--;\n+          }\n+\n+        // Otherwise, subdivide again and continue\n+        else\n+          {\n+            CubicCurve2D left = new CubicCurve2D.Double();\n+            CubicCurve2D right = new CubicCurve2D.Double();\n+            curves[numCurves - 1].subdivide(left, right);\n+            curves[numCurves - 1] = right;\n+            curves[numCurves] = left;\n+            curves[numCurves - 1] = right;\n+            curves[numCurves] = left;\n+            numCurves++;\n+          }\n+      }\n+\n+    return new Segment[] { segmentTop, segmentBottom };\n   }\n-\n+  \n   public void reverse()\n   {\n     Point2D temp = P1;\n@@ -116,12 +172,12 @@ public void reverse()\n     cp2 = temp;\n   }\n \n-  public double[] first()\n+  public double[] cp1()\n   {\n     return new double[]{cp1.getX(), cp1.getY()}; \n   }\n \n-  public double[] last()\n+  public double[] cp2()\n   {\n     return new double[]{cp2.getX(), cp2.getY()}; \n   }"}, {"sha": "0395fd0af7be178f613efca6bf5795312a33f578", "filename": "libjava/classpath/gnu/java/awt/java2d/LineSegment.java", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FLineSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FLineSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FLineSegment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -62,7 +62,22 @@ public LineSegment(Point2D p1, Point2D p2)\n    */\n   public Object clone()\n   {\n-    return new LineSegment(P1, P2);\n+    LineSegment segment = null;\n+    \n+    try\n+      {\n+        segment = (LineSegment) super.clone();\n+        segment.P1 = (Point2D) P1.clone();\n+        segment.P2 = (Point2D) P2.clone();\n+      }\n+    catch (CloneNotSupportedException cnse)\n+      {\n+        InternalError ie = new InternalError();\n+        ie.initCause(cnse);\n+        throw ie;\n+      }\n+    \n+    return segment;\n   }\n \n   /**\n@@ -91,12 +106,12 @@ public void reverse()\n     P2 = p;\n   }\n \n-  public double[] first()\n+  public double[] cp1()\n   {\n     return new double[]{P2.getX(), P2.getY()}; \n   }\n \n-  public double[] last()\n+  public double[] cp2()\n   {\n     return new double[]{P1.getX(), P1.getY()}; \n   }"}, {"sha": "5e15fe881d83590b86fbdd5435595d96a1c46be4", "filename": "libjava/classpath/gnu/java/awt/java2d/QuadSegment.java", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FQuadSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FQuadSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FQuadSegment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -88,8 +88,24 @@ public QuadSegment(QuadCurve2D curve)\n    */\n   public Object clone()\n   {\n-    return new QuadSegment(P1.getX(), P1.getY(), cp.getX(), cp.getY(),\n-                           P2.getX(), P2.getY());\n+    QuadSegment segment = null;\n+    \n+    try\n+      {\n+        segment = (QuadSegment) super.clone();\n+\n+        segment.P1 = (Point2D) P1.clone();\n+        segment.P2 = (Point2D) P2.clone();\n+        segment.cp = (Point2D) cp.clone();\n+      }\n+    catch (CloneNotSupportedException cnse)\n+      {\n+        InternalError ie = new InternalError();\n+        ie.initCause(cnse);\n+        throw ie;\n+      }\n+    \n+    return segment;\n   }\n \n   /**\n@@ -201,12 +217,12 @@ public void reverse()\n     P2 = p;\n   }\n \n-  public double[] first()\n+  public double[] cp1()\n   {\n     return new double[]{cp.getX(), cp.getY()}; \n   }\n \n-  public double[] last()\n+  public double[] cp2()\n   {\n     return new double[]{cp.getX(), cp.getY()}; \n   }"}, {"sha": "df1f67605d0126944b44941877fc7637822bb0a0", "filename": "libjava/classpath/gnu/java/awt/java2d/Segment.java", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FSegment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -42,24 +42,38 @@\n \n public abstract class Segment implements Cloneable\n {\n-  // segment type, PathIterator segment types are used.\n+  // Start and end points of THIS segment\n   public Point2D P1;\n   public Point2D P2;\n+  \n+  // Segments can be linked together internally as a linked list\n+  public Segment first;\n   public Segment next;\n   public Segment last;\n+  \n+  // Half the stroke width\n   protected double radius;\n \n+  /**\n+   * Create a new, empty segment\n+   */\n   public Segment()\n   {\n     P1 = P2 = null;\n+    first = this;\n     next = null;\n     last = this;\n   }\n \n+  /**\n+   * Add a segment to the polygon\n+   * @param newsegment segment to add\n+   */\n   public void add(Segment newsegment)\n   {\n+    newsegment.first = first;\n     last.next = newsegment;\n-    last = last.next;\n+    last = last.next.last;\n   }\n \n   /**\n@@ -68,6 +82,7 @@ public void add(Segment newsegment)\n   public void reverseAll()\n   {\n     reverse();\n+    first = last;\n     Segment v = next;\n     Segment former = this;\n     next = null;\n@@ -91,7 +106,7 @@ public String toString()\n \n   /**\n    * Get the normal vector to the slope of the line.\n-   * Returns: 0.5*width*(norm of derivative of the (x0,y0)-(x1,y1) vector)\n+   * @return vector of length radius, normal to the (x0,y0)-(x1,y1) vector)\n    */\n   protected double[] normal(double x0, double y0, double x1, double y1)\n   {\n@@ -117,6 +132,9 @@ else if( dx == 0 )\n     return new double[]{ dx, dy };\n   }\n \n+  /**\n+   * Reverse the current segment\n+   */\n   public abstract void reverse();\n \n   /**\n@@ -125,7 +143,16 @@ else if( dx == 0 )\n    */\n   public abstract Segment[] getDisplacedSegments(double radius);\n \n-  public abstract double[] first();\n-  public abstract double[] last();\n+  /**\n+   * Returns the coordinates of the first control point, or the start point\n+   * for a line segment.\n+   */\n+  public abstract double[] cp1();\n+  \n+  /**\n+   * Returns the coordinates of the second control point, or the end point\n+   * for a line segment.\n+   */\n+  public abstract double[] cp2();\n \n }"}, {"sha": "dad7bb0b08f64046196bd02cead20eb0621f0cfc", "filename": "libjava/classpath/gnu/java/awt/peer/ClasspathFontPeer.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -145,7 +145,8 @@ protected static boolean isLogicalFontName(String name)\n             uname.equals (\"SERIF\") ||\n             uname.equals (\"MONOSPACED\") ||\n             uname.equals (\"DIALOG\") ||\n-            uname.equals (\"DIALOGINPUT\"));\n+            uname.equals (\"DIALOGINPUT\") ||\n+            uname.equals (\"DEFAULT\"));\n   }\n \n   protected static String logicalFontNameToFaceName (String name)\n@@ -161,6 +162,8 @@ else if (uname.equals (\"DIALOG\"))\n       return \"Helvetica\";\n     else if (uname.equals (\"DIALOGINPUT\"))\n       return \"Helvetica\";\n+    else if (uname.equals (\"DEFAULT\"))\n+      return \"Dialog.plain\";\n     else\n       return \"Helvetica\";\n   }\n@@ -233,7 +236,7 @@ protected void setStandardAttributes (String name, Map attribs)\n       family = (String) attribs.get (TextAttribute.FAMILY);\n \n     if (name == null)\n-      name = \"SansSerif\";\n+      name = \"Default\";\n \n     if (attribs.containsKey (TextAttribute.WEIGHT))\n       {"}, {"sha": "70df2ef74ef2d4fc89b36b9e664dc480d7695e60", "filename": "libjava/classpath/gnu/java/awt/peer/ClasspathTextLayoutPeer.java", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abab460491408e05ea93fb85e1975296a87df504/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abab460491408e05ea93fb85e1975296a87df504/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java?ref=abab460491408e05ea93fb85e1975296a87df504", "patch": "@@ -1,104 +0,0 @@\n-/* ClasspathTextLayoutPeer.java\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.java.awt.peer;\n-\n-import java.awt.Graphics2D;\n-import java.awt.Shape;\n-import java.awt.font.TextHitInfo;\n-import java.awt.font.TextLayout;\n-import java.awt.geom.AffineTransform;\n-import java.awt.geom.Rectangle2D;\n-\n-/**\n- * @author Graydon Hoare\n- */\n-\n-public interface ClasspathTextLayoutPeer\n-{\n-  TextHitInfo getStrongCaret (TextHitInfo hit1, \n-                              TextHitInfo hit2);\n-\n-  void draw (Graphics2D g2, float x, float y);\n-\n-  byte getBaseline ();\n-\n-  boolean isLeftToRight ();\n-  boolean isVertical ();\n-\n-  float getAdvance ();\n-  float getAscent ();\n-  float getDescent ();\n-  float getLeading ();\n-\n-  int getCharacterCount ();\n-  byte getCharacterLevel (int index);\n-\n-  float[] getBaselineOffsets ();\n-  Shape getBlackBoxBounds (int firstEndpoint, int secondEndpoint);\n-  Rectangle2D getBounds ();\n-\n-  float[] getCaretInfo (TextHitInfo hit, Rectangle2D bounds);\n-  Shape getCaretShape (TextHitInfo hit, Rectangle2D bounds);\n-  Shape[] getCaretShapes (int offset, Rectangle2D bounds,\n-                          TextLayout.CaretPolicy policy);\n-\n-  Shape getLogicalHighlightShape (int firstEndpoint, int secondEndpoint,\n-                                  Rectangle2D bounds);\n-  int[] getLogicalRangesForVisualSelection (TextHitInfo firstEndpoint,\n-                                            TextHitInfo secondEndpoint);\n-\n-  TextHitInfo getNextLeftHit (int offset, TextLayout.CaretPolicy policy);\n-  TextHitInfo getNextRightHit (int offset, TextLayout.CaretPolicy policy);\n-  TextHitInfo hitTestChar (float x, float y, Rectangle2D bounds);\n-  TextHitInfo getVisualOtherHit (TextHitInfo hit);\n-\n-  float getVisibleAdvance ();\n-  Shape getOutline (AffineTransform tx);\n-  Shape getVisualHighlightShape (TextHitInfo firstEndpoint,\n-                                 TextHitInfo secondEndpoint,\n-                                 Rectangle2D bounds);\n-\n-  TextLayout getJustifiedLayout (float justificationWidth);\n-  void handleJustify (float justificationWidth);\n-\n-  Object clone ();\n-  int hashCode ();\n-  boolean equals (ClasspathTextLayoutPeer tl);\n-  String toString ();\n-}"}, {"sha": "6a74eabc5d6a77b35fd2fd5bc0b58cab526deb19", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/BufferedImageGraphics.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FBufferedImageGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FBufferedImageGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FBufferedImageGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -40,10 +40,8 @@\n \n import java.awt.Color;\n import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n-import java.awt.Point;\n import java.awt.Rectangle;\n import java.awt.Shape;\n import java.awt.font.GlyphVector;"}, {"sha": "b665f562e25dcaf7767642a9e4c6c26358a93fce", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoGraphics2D.java", "status": "modified", "additions": 158, "deletions": 64, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -40,6 +40,7 @@\n \n import gnu.java.awt.ClasspathToolkit;\n \n+import java.awt.AWTPermission;\n import java.awt.AlphaComposite;\n import java.awt.BasicStroke;\n import java.awt.Color;\n@@ -52,11 +53,11 @@\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Paint;\n+import java.awt.Polygon;\n import java.awt.Rectangle;\n import java.awt.RenderingHints;\n import java.awt.Shape;\n import java.awt.Stroke;\n-import java.awt.Polygon;\n import java.awt.TexturePaint;\n import java.awt.Toolkit;\n import java.awt.font.FontRenderContext;\n@@ -65,8 +66,8 @@\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Arc2D;\n import java.awt.geom.Area;\n+import java.awt.geom.Ellipse2D;\n import java.awt.geom.GeneralPath;\n-import java.awt.geom.Line2D;\n import java.awt.geom.NoninvertibleTransformException;\n import java.awt.geom.PathIterator;\n import java.awt.geom.Point2D;\n@@ -322,6 +323,11 @@ private native void setTexturePixels(long pointer, int[] pixels, int w,\n    * Set the current transform matrix\n    */\n   private native void cairoSetMatrix(long pointer, double[] m);\n+  \n+  /**\n+   * Scaling method\n+   */\n+  private native void cairoScale(long pointer, double x, double y);\n \n   /**\n    * Set the compositing operator\n@@ -369,6 +375,18 @@ private native void cairoRelCurveTo(long pointer, double dx1, double dy1,\n    */\n   private native void cairoRectangle(long pointer, double x, double y,\n                                      double width, double height);\n+  \n+  /**\n+   * Appends an arc to the current path\n+   */\n+  private native void cairoArc(long pointer, double x, double y,\n+                               double radius, double angle1, double angle2);\n+\n+  /**\n+   * Save / restore a cairo path\n+   */\n+  private native void cairoSave(long pointer);\n+  private native void cairoRestore(long pointer);\n \n   /**\n    * New current path\n@@ -427,6 +445,46 @@ private native void cairoCurveTo(long pointer, double x1, double y1,\n    */\n   private native void cairoSurfaceSetFilter(long pointer, int filter);\n \n+  /**\n+   * Draws a line from (x1,y1) to (x2,y2).\n+   *\n+   * @param pointer the native pointer\n+   *\n+   * @param x1 the x coordinate of the starting point\n+   * @param y1 the y coordinate of the starting point\n+   * @param x2 the x coordinate of the end point\n+   * @param y2 the y coordinate of the end point\n+   */\n+  private native void cairoDrawLine(long pointer, double x1, double y1,\n+                                    double x2, double y2);\n+\n+  /**\n+   * Draws a rectangle at starting point (x,y) and with the specified width\n+   * and height.\n+   *\n+   * @param pointer the native pointer\n+   * @param x the x coordinate of the upper left corner\n+   * @param y the y coordinate of the upper left corner\n+   * @param w the width of the rectangle\n+   * @param h the height of the rectangle\n+   */\n+  private native void cairoDrawRect(long pointer, double x, double y, double w,\n+                                    double h);\n+\n+  /**\n+   * Fills a rectangle at starting point (x,y) and with the specified width\n+   * and height.\n+   *\n+   * @param pointer the native pointer\n+   * @param x the x coordinate of the upper left corner\n+   * @param y the y coordinate of the upper left corner\n+   * @param w the width of the rectangle\n+   * @param h the height of the rectangle\n+   */\n+  private native void cairoFillRect(long pointer, double x, double y, double w,\n+                                    double h);\n+\n+\n   ///////////////////////// TRANSFORMS ///////////////////////////////////\n   /**\n    * Set the current transform\n@@ -625,8 +683,8 @@ else if (paint instanceof TexturePaint)\n \tint width = (int) tp.getAnchorRect().getWidth();\n \tint height = (int) tp.getAnchorRect().getHeight();\n \n-\tdouble scaleX = (width+1) / (double) img.getWidth();\n-\tdouble scaleY = (height+1) / (double) img.getHeight();\n+\tdouble scaleX = width / (double) img.getWidth();\n+\tdouble scaleY = height / (double) img.getHeight();\n \n \tAffineTransform at = new AffineTransform(scaleX, 0, 0, scaleY, 0, 0);\n \tAffineTransformOp op = new AffineTransformOp(at, getRenderingHints());\n@@ -737,7 +795,7 @@ else if (clip instanceof Rectangle2D)\n     else\n       {\n         GeneralPath p = new GeneralPath();\n-        PathIterator pi = clip.getPathIterator(new AffineTransform());\n+        PathIterator pi = clip.getPathIterator(null);\n         p.append(pi, false);\n         return p;\n       }\n@@ -847,6 +905,12 @@ public void setComposite(Composite comp)\n       }\n     else\n       {\n+        // FIXME: this check is only required \"if this Graphics2D\n+        // context is drawing to a Component on the display screen\".\n+        SecurityManager sm = System.getSecurityManager();\n+        if (sm != null)\n+          sm.checkPermission(new AWTPermission(\"readDisplayPixels\"));\n+\n         // FIXME: implement general Composite support\n         throw new java.lang.UnsupportedOperationException();\n       }\n@@ -857,54 +921,79 @@ public void setComposite(Composite comp)\n   public void draw(Shape s)\n   {\n     if ((stroke != null && ! (stroke instanceof BasicStroke))\n-        || (comp instanceof AlphaComposite\n-            && ((AlphaComposite) comp).getAlpha() != 1.0))\n+        || (comp instanceof AlphaComposite && ((AlphaComposite) comp).getAlpha() != 1.0))\n       {\n-        // FIXME: This is a hack to work around BasicStrokes's current\n-        // limitations wrt cubic curves.\n-        // See CubicSegment.getDisplacedSegments().\n-        if (stroke instanceof BasicStroke)\n-          {\n-            PathIterator flatten = s.getPathIterator(new AffineTransform(),\n-                                                       1.0);\n-            GeneralPath p = new GeneralPath();\n-            p.append(flatten, false);\n-            s = p;\n-          }\n-\tfill(stroke.createStrokedShape(s));\n-\treturn;\n+        // Cairo doesn't support stroking with alpha, so we create the stroked\n+        // shape and fill with alpha instead\n+        fill(stroke.createStrokedShape(s));\n+        return;\n       }\n \n-    cairoNewPath(nativePointer);\n-\n-    if (s instanceof Rectangle2D)\n-      {\n-\tRectangle2D r = (Rectangle2D) s;\n-\tcairoRectangle(nativePointer, shifted(r.getX(), shiftDrawCalls),\n-\t               shifted(r.getY(), shiftDrawCalls), r.getWidth(),\n-\t               r.getHeight());\n-      }\n-    else\n-      walkPath(s.getPathIterator(null), shiftDrawCalls);\n+    createPath(s);\n     cairoStroke(nativePointer);\n   }\n \n   public void fill(Shape s)\n+  {\n+    createPath(s);\n+\n+    double alpha = 1.0;\n+    if (comp instanceof AlphaComposite)\n+      alpha = ((AlphaComposite) comp).getAlpha();\n+    cairoFill(nativePointer, alpha);\n+  }\n+\n+  private void createPath(Shape s)\n   {\n     cairoNewPath(nativePointer);\n+\n+    // Optimize rectangles, since there is a direct Cairo function\n     if (s instanceof Rectangle2D)\n       {\n-\tRectangle2D r = (Rectangle2D) s;\n-\tcairoRectangle(nativePointer, r.getX(), r.getY(), r.getWidth(),\n+        Rectangle2D r = (Rectangle2D) s;\n+        cairoRectangle(nativePointer, shifted(r.getX(), shiftDrawCalls),\n+                       shifted(r.getY(), shiftDrawCalls), r.getWidth(),\n                        r.getHeight());\n       }\n-    else\n-      walkPath(s.getPathIterator(null), false);\n \n-    double alpha = 1.0;\n-    if (comp instanceof AlphaComposite)\n-      alpha = ((AlphaComposite) comp).getAlpha();\n-    cairoFill(nativePointer, alpha);\n+    // We can optimize ellipses too; however we don't bother optimizing arcs:\n+    // the iterator is fast enough (an ellipse requires 5 steps using the\n+    // iterator, while most arcs are only 2-3)\n+    else if (s instanceof Ellipse2D)\n+      {\n+        Ellipse2D e = (Ellipse2D) s;\n+\n+        double radius = Math.min(e.getHeight(), e.getWidth()) / 2;\n+\n+        // Cairo only draws circular shapes, but we can use a stretch to make\n+        // them into ellipses\n+        double xscale = 1, yscale = 1;\n+        if (e.getHeight() != e.getWidth())\n+          {\n+            cairoSave(nativePointer);\n+\n+            if (e.getHeight() < e.getWidth())\n+              xscale = e.getWidth() / (radius * 2);\n+            else\n+              yscale = e.getHeight() / (radius * 2);\n+\n+            if (xscale != 1 || yscale != 1)\n+              cairoScale(nativePointer, xscale, yscale);\n+          }\n+\n+        cairoArc(nativePointer,\n+                 shifted(e.getCenterX() / xscale, shiftDrawCalls),\n+                 shifted(e.getCenterY() / yscale, shiftDrawCalls), radius, 0,\n+                 Math.PI * 2);\n+\n+        if (xscale != 1 || yscale != 1)\n+          cairoRestore(nativePointer);\n+      }\n+\n+    // All other shapes are broken down and drawn in steps using the\n+    // PathIterator\n+    else\n+      walkPath(s.getPathIterator(null), shiftDrawCalls);\n   }\n \n   /**\n@@ -940,12 +1029,19 @@ public void drawArc(int x, int y, int width, int height, int startAngle,\n \n   public void drawLine(int x1, int y1, int x2, int y2)\n   {\n-    draw(new Line2D.Double(x1, y1, x2, y2));\n+    // The coordinates being pairwise identical means one wants\n+    // to draw a single pixel. This is emulated by drawing\n+    // a one pixel sized rectangle.\n+    if (x1 == x2 && y1 == y2)\n+      cairoFillRect(nativePointer, x1, y1, 1, 1);\n+    else\n+      cairoDrawLine(nativePointer, x1 + 0.5, y1 + 0.5, x2 + 0.5, y2 + 0.5);\n   }\n \n   public void drawRect(int x, int y, int width, int height)\n   {\n-    draw(new Rectangle(x, y, width, height));\n+    cairoDrawRect(nativePointer, shifted(x, shiftDrawCalls),\n+                  shifted(y, shiftDrawCalls), width, height);\n   }\n \n   public void fillArc(int x, int y, int width, int height, int startAngle,\n@@ -958,7 +1054,7 @@ public void fillArc(int x, int y, int width, int height, int startAngle,\n \n   public void fillRect(int x, int y, int width, int height)\n   {\n-    fill(new Rectangle(x, y, width, height));\n+    cairoFillRect(nativePointer, x, y, width, height);\n   }\n \n   public void fillPolygon(int[] xPoints, int[] yPoints, int nPoints)\n@@ -1137,6 +1233,9 @@ protected boolean drawImage(Image img, AffineTransform xform,\n     if (img == null)\n       return false;\n \n+    if (xform == null)\n+      xform = new AffineTransform();\n+\n     // In this case, xform is an AffineTransform that transforms bounding\n     // box of the specified image from image space to user space. However\n     // when we pass this transform to cairo, cairo will use this transform\n@@ -1160,6 +1259,7 @@ protected boolean drawImage(Image img, AffineTransform xform,\n     // Note - this can get us in trouble when the gdk lock is re-acquired.\n     // for example by VolatileImage. See ComponentGraphics for how we work\n     // around this.\n+    \n     if( !(img instanceof BufferedImage) )\n       {\n \tImageProducer source = img.getSource();\n@@ -1176,6 +1276,7 @@ protected boolean drawImage(Image img, AffineTransform xform,\n \n     // If this BufferedImage has a BufferedImageGraphics object, \n     // use the cached CairoSurface that BIG is drawing onto\n+    \n     if( BufferedImageGraphics.bufferedImages.get( b ) != null )\n       db = (DataBuffer)BufferedImageGraphics.bufferedImages.get( b );\n     else\n@@ -1190,6 +1291,7 @@ protected boolean drawImage(Image img, AffineTransform xform,\n     if(db instanceof CairoSurface)\n       {\n \t((CairoSurface)db).drawSurface(nativePointer, i2u, alpha);\n+        updateColor();\n \treturn true;\n       }\n \t    \n@@ -1206,24 +1308,7 @@ protected boolean drawImage(Image img, AffineTransform xform,\n \tsetPaint( oldPaint );\n       }\n \n-    int[] pixels;\n-\n-    // Shortcut for easy color models.\n-    if( b.getColorModel().equals(rgb32) )\n-      {\n-\tpixels = ((DataBufferInt)db).getData();\n-\tfor(int i = 0; i < pixels.length; i++)\n-\t  pixels[i] |= 0xFF000000;\n-      }\n-    else if( b.getColorModel().equals(argb32) )\n-      {\n-\tpixels = ((DataBufferInt)db).getData();\n-      }\n-    else\n-      {\n-\tpixels = b.getRGB(0, 0, width, height,\n-\t\t\t  null, 0, width);\n-      }\n+    int[] pixels = b.getRGB(0, 0, width, height, null, 0, width);\n \n     drawPixels(nativePointer, pixels, width, height, width, i2u, alpha);\n \n@@ -1249,7 +1334,9 @@ public boolean drawImage(Image img, AffineTransform xform, ImageObserver obs)\n \n   public void drawImage(BufferedImage image, BufferedImageOp op, int x, int y)\n   {\n-    Image filtered = op.filter(image, null);\n+    Image filtered = image;\n+    if (op != null)\n+      filtered = op.filter(image, null);\n     drawImage(filtered, new AffineTransform(1f, 0f, 0f, 1f, x, y), null, null);\n   }\n \n@@ -1317,7 +1404,7 @@ public boolean drawImage(Image img, int dx1, int dy1, int dx2, int dy2,\n     else\n       { cy = dy2; ch = dy1 - dy2; }\n     \n-    setClip( cx, cy, cw, ch );\n+    clipRect( cx, cy, cw, ch );\n \n     AffineTransform tx = new AffineTransform();\n     tx.translate( dx1 - sx1*scaleX, dy1 - sy1*scaleY );\n@@ -1358,6 +1445,10 @@ public void drawString(AttributedCharacterIterator ci, int x, int y)\n   public void drawGlyphVector(GlyphVector gv, float x, float y)\n   {\n     double alpha = 1.0;\n+\n+    if( gv.getNumGlyphs() <= 0 )\n+      return;\n+\n     if (comp instanceof AlphaComposite)\n       alpha = ((AlphaComposite) comp).getAlpha();\n     if (gv instanceof FreetypeGlyphVector && alpha == 1.0)\n@@ -1367,8 +1458,11 @@ public void drawGlyphVector(GlyphVector gv, float x, float y)\n         float[] positions = gv.getGlyphPositions (0, n, null);\n \n         setFont (gv.getFont ());\n-        cairoDrawGlyphVector(nativePointer, (GdkFontPeer)getFont().getPeer(),\n-                             x, y, n, codes, positions);\n+\tsynchronized( this.font ) \n+\t  { \n+\t    cairoDrawGlyphVector(nativePointer, (GdkFontPeer)getFont().getPeer(),\n+\t\t\t\t x, y, n, codes, positions);\n+\t  }\n       }\n     else\n       {"}, {"sha": "78bc1e02db0403ec93dd9c5c7a84373fa8cc16f7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoSurface.java", "status": "modified", "additions": 35, "deletions": 28, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,26 +38,16 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Graphics;\n-import java.awt.Color;\n-import java.awt.Image;\n import java.awt.Point;\n import java.awt.Graphics2D;\n-import java.awt.GraphicsConfiguration;\n import java.awt.image.DataBuffer;\n import java.awt.image.Raster;\n import java.awt.image.WritableRaster;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n-import java.io.File;\n-import java.io.IOException;\n+import java.nio.ByteOrder;\n import java.util.Hashtable;\n-import java.util.Vector;\n-import java.io.ByteArrayOutputStream;\n-import java.io.BufferedInputStream;\n-import java.net.URL;\n-import gnu.classpath.Pointer;\n \n /**\n  * CairoSurface - wraps a Cairo surface.\n@@ -79,10 +69,10 @@ public class CairoSurface extends DataBuffer\n   long bufferPointer;\n \n \n-  static ColorModel nativeModel = new DirectColorModel(32, \n-\t\t\t\t\t\t       0x000000FF,\n-\t\t\t\t\t\t       0x0000FF00,\n+  static ColorModel nativeModel = new DirectColorModel(32,\n \t\t\t\t\t\t       0x00FF0000,\n+\t\t\t\t\t\t       0x0000FF00,\n+\t\t\t\t\t\t       0x000000FF,\n \t\t\t\t\t\t       0xFF000000);\n \n   /**\n@@ -177,28 +167,45 @@ public CairoSurface(int width, int height)\n     height = image.height;\n \n     create(width, height, width);\n-    \n+\n     if(surfacePointer == 0 || bufferPointer == 0)\n       throw new Error(\"Could not allocate bitmap.\");\n-    \n+\n     // Copy the pixel data from the GtkImage.\n     int[] data = image.getPixels();\n \n     // Swap ordering from GdkPixbuf to Cairo\n-    for(int i = 0; i < data.length; i++ )\n+    if (ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN)\n+      {\n+\tfor (int i = 0; i < data.length; i++ )\n+\t  {\n+\t    // On a big endian system we get a RRGGBBAA data array.\n+\t    int alpha = data[i] & 0xFF;\n+\t    if( alpha == 0 ) // I do not know why we need this, but it works.\n+\t      data[i] = 0;\n+\t    else\n+\t      {\n+\t\t// Cairo needs a ARGB32 native array.\n+\t\tdata[i] = (data[i] >>> 8) | (alpha << 24);\n+\t      }\n+\t  }\n+      }\n+    else\n       {\n-\tint alpha = (data[i] & 0xFF000000) >> 24;\n-\tif( alpha == 0 ) // I do not know why we need this, but it works.\n-\t  data[i] = 0;\n-\telse\n+\tfor (int i = 0; i < data.length; i++ )\n \t  {\n-\t    int r = (((data[i] & 0x00FF0000) >> 16) );\n-\t    int g = (((data[i] & 0x0000FF00) >> 8) );\n-\t    int b = ((data[i] & 0x000000FF) );\n-\t    data[i] = (( alpha << 24 ) & 0xFF000000) \n-\t      | (( b << 16 ) & 0x00FF0000)\n-\t      | (( g << 8 )  & 0x0000FF00)\n-\t      | ( r  & 0x000000FF);\n+\t    // On a little endian system we get a AABBGGRR data array.\n+\t    int alpha = data[i] & 0xFF000000;\n+\t    if( alpha == 0 ) // I do not know why we need this, but it works.\n+\t      data[i] = 0;\n+\t    else\n+\t      {\n+\t\tint b = (data[i] & 0xFF0000) >> 16;\n+\t\tint g = (data[i] & 0xFF00);\n+\t\tint r = (data[i] & 0xFF) << 16;\n+\t\t// Cairo needs a ARGB32 native array.\n+\t\tdata[i] = alpha | r | g | b;\n+\t      }\n \t  }\n       }\n "}, {"sha": "7bd136c38450ebbb2cb25f197e67a6cefa1e8b1f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoSurfaceGraphics.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurfaceGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurfaceGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurfaceGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,14 +39,9 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Graphics;\n-import java.awt.Color;\n import java.awt.GraphicsEnvironment;\n-import java.awt.Image;\n-import java.awt.Point;\n-import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.geom.Rectangle2D;\n-import java.awt.image.*;\n \n /**\n  * Implementation of Graphics2D on a Cairo surface."}, {"sha": "ffa78e9c9049d16496d36eef2eb48533692bdd09", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/ComponentGraphics.java", "status": "modified", "additions": 109, "deletions": 37, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,24 +39,21 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Color;\n-import java.awt.Font;\n import java.awt.Graphics;\n import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Rectangle;\n import java.awt.Shape;\n import java.awt.Toolkit;\n-import java.awt.Point;\n-import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphVector;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n import java.awt.image.BufferedImage;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n-import java.awt.image.ImagingOpException;\n import java.awt.image.RenderedImage;\n+import gnu.classpath.Pointer;\n \n /**\n  * ComponentGraphics - context for drawing directly to a component,\n@@ -66,6 +63,8 @@\n  */\n public class ComponentGraphics extends CairoGraphics2D\n {\n+  private static final boolean hasXRenderExtension = hasXRender();\n+\n   private GtkComponentPeer component;\n   protected long cairo_t;\n \n@@ -164,21 +163,35 @@ public void dispose()\n    */\n   public static native boolean hasXRender();\n \n+  /**\n+   * This is a utility method (used by GtkComponentPeer) for grabbing the\n+   * image of a component.\n+   */\n+  private static native Pointer nativeGrab(GtkComponentPeer component);\n \n   private native void copyAreaNative(GtkComponentPeer component, int x, int y, \n \t\t\t\t     int width, int height, int dx, int dy);\n \n   private native void drawVolatile(GtkComponentPeer component,\n \t\t\t\t   long vimg, int x, int y, \n-\t\t\t\t   int width, int height);\n+\t\t\t\t   int width, int height, int cx, int cy,\n+                                   int cw, int ch);\n+\n+  /**\n+   * Not really related (moveme?). Utility method used by GtkComponent.\n+   */\n+  public static GtkImage grab( GtkComponentPeer component )\n+  {\n+    return new GtkImage( nativeGrab( component ) );\n+  }\n \n   /**\n    * Returns a Graphics2D object for a component, either an instance of this \n    * class (if xrender is supported), or a context which copies.\n    */\n   public static Graphics2D getComponentGraphics(GtkComponentPeer component)\n   {\n-    if( hasXRender() )\n+    if( hasXRenderExtension )\n       return new ComponentGraphics(component);\n \n     Rectangle r = component.awtComponent.getBounds();\n@@ -285,21 +298,24 @@ public boolean drawImage(Image img, int x, int y, ImageObserver observer)\n     if (img instanceof GtkVolatileImage)\n       {\n         GtkVolatileImage vimg = (GtkVolatileImage) img;\n-\tint type = transform.getType();\n-\tif (type == AffineTransform.TYPE_IDENTITY)\n-\t  {\n-\t    drawVolatile(component, vimg.nativePointer,\n-\t\t\t x, y, vimg.width, vimg.height);\n-\t    return true;\n-\t  }\n-\t  else if (type == AffineTransform.TYPE_TRANSLATION)\n-\t  {\n-\t    x += transform.getTranslateX();\n-\t    y += transform.getTranslateY();\n-\t    drawVolatile(component, vimg.nativePointer,\n-\t\t\t x, y, vimg.width, vimg.height);\n-\t    return true;\n-\t  }\n+        int type = transform.getType();\n+        if ((type == AffineTransform.TYPE_IDENTITY\n+             || type == AffineTransform.TYPE_TRANSLATION)\n+             && (clip == null || clip instanceof Rectangle2D))\n+          {\n+            Rectangle2D r = (Rectangle2D) clip;\n+            if (r == null)\n+              r = getRealBounds();\n+            x += transform.getTranslateX();\n+            y += transform.getTranslateY();\n+            drawVolatile(component, vimg.nativePointer,\n+                         x, y, vimg.width, vimg.height,\n+                         (int) (r.getX() + transform.getTranslateX()),\n+                         (int) (r.getY() + transform.getTranslateY()),\n+                         (int) r.getWidth(),\n+                         (int) r.getHeight());\n+            return true;\n+          }\n \telse\n \t  return super.drawImage(vimg.getSnapshot(), x, y, observer);\n       }\n@@ -323,24 +339,28 @@ public boolean drawImage(Image img, int x, int y, int width, int height,\n     // If it is a GtkVolatileImage with an \"easy\" transform then\n     // draw directly. Always pass a BufferedImage to super to avoid\n     // deadlock (see Note in CairoGraphics.drawImage()).\n-    if (img instanceof GtkVolatileImage)\n+    if (img instanceof GtkVolatileImage\n+        && (clip == null || clip instanceof Rectangle2D))\n       {\n         GtkVolatileImage vimg = (GtkVolatileImage) img;\n-\tint type = transform.getType();\n-\tif (type == AffineTransform.TYPE_IDENTITY)\n-\t  {\n-\t    drawVolatile(component, vimg.nativePointer,\n-\t\t\t x, y, width, height);\n-\t    return true;\n-\t  }\n-\t  else if (type == AffineTransform.TYPE_TRANSLATION)\n-\t  {\n-\t    x += transform.getTranslateX();\n-\t    y += transform.getTranslateY();\n-\t    drawVolatile(component, vimg.nativePointer,\n-\t\t\t x, y, width, height);\n-\t    return true;\n-\t  }\n+        int type = transform.getType();\n+        if ((type == AffineTransform.TYPE_IDENTITY\n+             || type == AffineTransform.TYPE_TRANSLATION)\n+             && (clip == null || clip instanceof Rectangle2D))\n+          {\n+            Rectangle2D r = (Rectangle2D) clip;\n+            if (r == null)\n+              r = getRealBounds();\n+            x += transform.getTranslateX();\n+            y += transform.getTranslateY();\n+            drawVolatile(component, vimg.nativePointer,\n+                         x, y, width, height,\n+                         (int) (r.getX() + transform.getTranslateX()),\n+                         (int) (r.getY() + transform.getTranslateY()),\n+                         (int) r.getWidth(),\n+                         (int) r.getHeight());\n+            return true;\n+          }\n \telse\n \t  return super.drawImage(vimg.getSnapshot(), x, y,\n \t\t\t\t width, height, observer);\n@@ -359,5 +379,57 @@ else if (type == AffineTransform.TYPE_TRANSLATION)\n     return super.drawImage(bimg, x, y, width, height, observer);\n   }\n \n+  public void drawLine(int x1, int y1, int x2, int y2)\n+  {\n+    lock();\n+    try\n+      {\n+        super.drawLine(x1, y1, x2, y2);\n+      }\n+    finally\n+      {\n+        unlock();\n+      }\n+  }\n+\n+  public void drawRect(int x, int y, int width, int height)\n+  {\n+    lock();\n+    try\n+      {\n+        super.drawRect(x, y, width, height);\n+      }\n+    finally\n+      {\n+        unlock();\n+      }\n+  }\n+\n+  public void fillRect(int x, int y, int width, int height)\n+  {\n+    lock();\n+    try\n+      {\n+        super.fillRect(x, y, width, height);\n+      }\n+    finally\n+      {\n+        unlock();\n+      }\n+  }\n+\n+  public void setClip(Shape s)\n+  {\n+    lock();\n+    try\n+      {\n+\tsuper.setClip(s);\n+      }\n+    finally\n+      {\n+\tunlock();\n+      }\n+  }\n+\n }\n "}, {"sha": "2216d459a0e762682044d21330528e904eb6ba52", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/ComponentGraphicsCopy.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphicsCopy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphicsCopy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphicsCopy.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,17 +39,11 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Color;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n-import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n-import java.awt.Point;\n import java.awt.Rectangle;\n import java.awt.Shape;\n import java.awt.font.GlyphVector;\n import java.awt.geom.AffineTransform;\n-import java.awt.image.BufferedImage;\n-import java.awt.image.DataBuffer;\n import java.awt.image.RenderedImage;\n import java.awt.image.ImageObserver;\n "}, {"sha": "2c9d917934f24d04eb2b84057273a4c0c79cf24b", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/FreetypeGlyphVector.java", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FFreetypeGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FFreetypeGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FFreetypeGlyphVector.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -136,6 +136,35 @@ public FreetypeGlyphVector(Font f, int[] codes, FontRenderContext frc)\n     performDefaultLayout();\n   }\n \n+  /**\n+   * Cloning constructor\n+   */  \n+  private FreetypeGlyphVector( FreetypeGlyphVector gv )\n+  {\n+    font = gv.font;\n+    peer = gv.peer;\n+    frc = gv.frc;\n+    s = gv.s;\n+    nGlyphs = gv.nGlyphs;\n+    logicalBounds = gv.logicalBounds.getBounds2D();\n+\n+    if( gv.metricsCache != null )\n+      {\n+\tmetricsCache = new GlyphMetrics[ nGlyphs ];\n+\tSystem.arraycopy(gv.metricsCache, 0, metricsCache, 0, nGlyphs);\n+      }\n+\n+    glyphCodes = new int[ nGlyphs ];\n+    glyphPositions = new float[ nGlyphs ];\n+    glyphTransforms = new AffineTransform[ nGlyphs ];\n+    for(int i = 0; i < nGlyphs; i++ )\n+      {\n+\tglyphTransforms[ i ] = new AffineTransform( gv.glyphTransforms[ i ] );\n+\tglyphCodes[i] = gv.glyphCodes[ i ];\n+\tglyphPositions[i] = gv.glyphPositions[ i ];\n+      }\n+  }\n+\n   /**\n    * Create the array of glyph codes.\n    */\n@@ -172,6 +201,12 @@ private void getGlyphs()\n \n   private native GeneralPath getGlyphOutlineNative(int glyphIndex);\n \n+\n+  public Object clone()\n+  {\n+    return new FreetypeGlyphVector( this );\n+  }\n+\n   /**\n    * Duh, compares two instances.\n    */\n@@ -260,8 +295,11 @@ public Shape getGlyphLogicalBounds(int glyphIndex)\n     if( gm == null )\n       return null; \n     Rectangle2D r = gm.getBounds2D();\n-    return new Rectangle2D.Double( r.getX() - gm.getLSB(), r.getY(),\n-\t\t\t\t   gm.getAdvanceX(), r.getHeight() );\n+    Point2D p = getGlyphPosition( glyphIndex );\n+    return new Rectangle2D.Double( p.getX() + r.getX() - gm.getLSB(), \n+\t\t\t\t   p.getY() + r.getY(),\n+\t\t\t\t   gm.getAdvanceX(), \n+\t\t\t\t   r.getHeight() );\n   }\n \n   /*\n@@ -385,8 +423,6 @@ public Rectangle2D getLogicalBounds()\n     for( int i = 1; i < nGlyphs; i++ )\n       {\n \tRectangle2D r2 = (Rectangle2D)getGlyphLogicalBounds( i );\n-\tPoint2D p = getGlyphPosition( i );\n-\tr2.setRect( p.getX(), p.getY(), r2.getWidth(), r2.getHeight() );\n \trect = rect.createUnion( r2 );\n       }\n "}, {"sha": "11635c3544e45f404f0d49a3182940209b0faa33", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import gnu.classpath.Configuration;\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.font.opentype.NameDecoder;\n \n@@ -50,9 +49,7 @@\n import java.awt.font.GlyphMetrics;\n import java.awt.font.LineMetrics;\n import java.awt.geom.Rectangle2D;\n-import java.awt.geom.Point2D;\n import java.text.CharacterIterator;\n-import java.text.StringCharacterIterator;\n import java.util.Locale;\n import java.util.Map;\n import java.util.ResourceBundle;"}, {"sha": "e095c7dad4b15a689969b7e9dd7ef42728133197", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -134,5 +134,9 @@ public String[] getAvailableFontFamilyNames (Locale l)\n   {\n     throw new java.lang.UnsupportedOperationException ();\n   }\n-  \n+\n+  /**\n+   * Used by GtkMouseInfoPeer.\n+   */ \n+  native int[] getMouseCoordinates();\n }"}, {"sha": "6d0a52b91be5165ffc7b7680878dfaaeb2f1f365", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,13 +38,10 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import gnu.classpath.Configuration;\n-\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n import java.awt.image.ImageConsumer;\n-import java.awt.image.ImageProducer;\n import java.awt.image.Raster;\n import java.awt.image.RenderedImage;\n import java.io.DataInput;"}, {"sha": "a8765222e0e9d0a2a44c543db86f7c09f9d7baf7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkTextLayout.java", "status": "removed", "additions": 0, "deletions": 393, "changes": 393, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abab460491408e05ea93fb85e1975296a87df504/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abab460491408e05ea93fb85e1975296a87df504/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java?ref=abab460491408e05ea93fb85e1975296a87df504", "patch": "@@ -1,393 +0,0 @@\n-/* GdkTextLayout.java\n-   Copyright (C) 2003, 2005, 2006  Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.java.awt.peer.gtk;\n-\n-import gnu.classpath.Configuration;\n-import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n-\n-import java.awt.Font;\n-import java.awt.Graphics2D;\n-import java.awt.Shape;\n-import java.awt.font.FontRenderContext;\n-import java.awt.font.GlyphMetrics;\n-import java.awt.font.GlyphVector;\n-import java.awt.font.TextAttribute;\n-import java.awt.font.TextHitInfo;\n-import java.awt.font.TextLayout;\n-import java.awt.geom.AffineTransform;\n-import java.awt.geom.GeneralPath;\n-import java.awt.geom.Rectangle2D;\n-import java.text.AttributedCharacterIterator;\n-import java.text.AttributedString;\n-import java.text.CharacterIterator;\n-\n-/**\n- * This is an implementation of the text layout peer interface which\n- * delegates all the hard work to pango.\n- *\n- * @author Graydon Hoare\n- */\n-\n-public class GdkTextLayout \n-  implements ClasspathTextLayoutPeer\n-{\n-  // native side, plumbing, etc.\n-  static \n-  {\n-    System.loadLibrary(\"gtkpeer\");\n-\n-    initStaticState ();\n-  }\n-  private native void setText(String str);\n-  private native void setFont(GdkFontPeer font);\n-  private native void getExtents(double[] inkExtents,\n-                                 double[] logExtents);\n-  private native void indexToPos(int idx, double[] pos);\n-\n-  private native void initState ();\n-\n-  private native void dispose ();\n-\n-  private native void cairoDrawGdkTextLayout(long cg2d, float x, float y);\n-\n-  static native void initStaticState();\n-\n-  private final int native_state = GtkGenericPeer.getUniqueInteger ();\n-\n-  protected void finalize ()\n-  {\n-    dispose ();\n-  }\n-\n-  // we hold on to these to make sure we can render when presented\n-  // with non-GdkGraphics2D paint targets\n-  private AttributedString attributedString;\n-  private FontRenderContext fontRenderContext;\n-\n-  public GdkTextLayout(AttributedString str, FontRenderContext frc)\n-  {\n-    initState();\n-    attributedString = str;\n-    fontRenderContext = frc;\n-    AttributedCharacterIterator aci = str.getIterator();\n-    char[] chars = new char[aci.getEndIndex() - aci.getBeginIndex()];\n-    for(int i = aci.getBeginIndex(); i < aci.getEndIndex(); i++)\n-      chars[i] = aci.setIndex(i);    \n-    setText(new String(chars));\n-\n-    Object fnt = aci.getAttribute(TextAttribute.FONT);\n-    if (fnt != null && fnt instanceof Font) \t \n-      setFont( (GdkFontPeer) ((Font)fnt).getPeer() );\n-  }\n-\n-  protected class CharacterIteratorProxy \n-    implements CharacterIterator\n-  {\n-    public CharacterIterator target;\n-    public int begin;\n-    public int limit;\n-    public int index;\n-\n-    public CharacterIteratorProxy (CharacterIterator ci)\n-    {\n-      target = ci;\n-    }\n-\n-    public int getBeginIndex ()\n-    {\n-      return begin;\n-    }\n-\n-    public int getEndIndex ()\n-    {\n-      return limit;\n-    }\n-\n-    public int getIndex ()\n-    {\n-      return index;\n-    }\n-\n-    public char setIndex (int idx) \n-      throws IllegalArgumentException\n-    {\n-      if (idx < begin || idx >= limit)\n-        throw new IllegalArgumentException ();\n-      char ch = target.setIndex (idx);\n-      index = idx;\n-      return ch;\n-    }\n-\n-    public char first ()\n-    {\n-      int save = target.getIndex ();\n-      char ch = target.setIndex (begin);\n-      target.setIndex (save);\n-      return ch;\n-    }\n-\n-    public char last ()\n-    {\n-      if (begin == limit)\n-        return this.first ();\n-\n-      int save = target.getIndex ();\n-      char ch = target.setIndex (limit - 1);\n-      target.setIndex (save);\n-      return ch;\n-    }\n-\n-    public char current ()\n-    {\n-      return target.current();\n-    }\n-\n-    public char next ()\n-    {\n-      if (index >= limit - 1)\n-        return CharacterIterator.DONE;\n-      else\n-        {\n-          index++;\n-          return target.next();\n-        }\n-    }\n-\n-    public char previous ()\n-    {\n-      if (index <= begin)\n-        return CharacterIterator.DONE;\n-      else\n-        {\n-          index--;\n-          return target.previous ();\n-        }\n-    }\n-\n-    public Object clone ()\n-    {\n-      CharacterIteratorProxy cip = new CharacterIteratorProxy (this.target);\n-      cip.begin = this.begin;\n-      cip.limit = this.limit;\n-      cip.index = this.index;\n-      return cip;\n-    }\n-    \n-  }\n-\n-\n-  // public side\n-\n-  public void draw (Graphics2D g2, float x, float y)\n-  {\n-    cairoDrawGdkTextLayout(((CairoGraphics2D) g2).nativePointer, x, y);\n-  }\n-\n-  public TextHitInfo getStrongCaret (TextHitInfo hit1, \n-                                     TextHitInfo hit2)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public byte getBaseline ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public boolean isLeftToRight ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public boolean isVertical ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public float getAdvance ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public float getAscent ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public float getDescent ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public float getLeading ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public int getCharacterCount ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public byte getCharacterLevel (int index)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public float[] getBaselineOffsets ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public Shape getBlackBoxBounds (int firstEndpoint, int secondEndpoint)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public Rectangle2D getBounds ()\n-  {\n-    double[] inkExtents = new double[4];\n-    double[] logExtents = new double[4];\n-    getExtents(inkExtents, logExtents);\n-    return new Rectangle2D.Double(logExtents[0], logExtents[1],\n-                                  logExtents[2], logExtents[3]);\n-  }\n-\n-  public float[] getCaretInfo (TextHitInfo hit, Rectangle2D bounds)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public Shape getCaretShape (TextHitInfo hit, Rectangle2D bounds)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public Shape[] getCaretShapes (int offset, Rectangle2D bounds,\n-                                 TextLayout.CaretPolicy policy)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public Shape getLogicalHighlightShape (int firstEndpoint, int secondEndpoint,\n-                                         Rectangle2D bounds)\n-  {\n-    AffineTransform at = new AffineTransform();\n-    GeneralPath gp = new GeneralPath();\n-    double [] rect = new double[4];\n-    Rectangle2D tmp = new Rectangle2D.Double();\n-    for (int i = firstEndpoint; i <= secondEndpoint; ++i)\n-      {\n-        indexToPos(i, rect);\n-        tmp.setRect(rect[0], rect[1], rect[2], rect[3]);\n-        Rectangle2D.intersect(tmp, bounds, tmp);\n-        gp.append(tmp.getPathIterator(at), false);\n-      }\n-    return gp;\n-  }\n-\n-  public int[] getLogicalRangesForVisualSelection (TextHitInfo firstEndpoint,\n-                                                   TextHitInfo secondEndpoint)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-  \n-  public TextHitInfo getNextLeftHit (int offset, TextLayout.CaretPolicy policy)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-  public TextHitInfo getNextRightHit (int offset, TextLayout.CaretPolicy policy)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-  public TextHitInfo hitTestChar (float x, float y, Rectangle2D bounds)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-  public TextHitInfo getVisualOtherHit (TextHitInfo hit)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public float getVisibleAdvance ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public native Shape getOutline (AffineTransform tx);\n-\n-  public Shape getVisualHighlightShape (TextHitInfo firstEndpoint,\n-                                        TextHitInfo secondEndpoint,\n-                                        Rectangle2D bounds)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  \n-  public TextLayout getJustifiedLayout (float justificationWidth)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public void handleJustify (float justificationWidth)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public Object clone ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public int hashCode ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public boolean equals (ClasspathTextLayoutPeer tl)\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-  public String toString ()\n-  {\n-    throw new Error(\"not implemented\");\n-  }\n-\n-}"}, {"sha": "f18db7af9f170ba08ec3a65963a9729757e7adc6", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,13 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n import java.awt.Button;\n-import java.awt.Component;\n-import java.awt.Point;\n import java.awt.event.ActionEvent;\n-import java.awt.event.KeyEvent;\n-import java.awt.event.MouseEvent;\n import java.awt.peer.ButtonPeer;\n \n // A composite widget.  GtkButtons have transparent backgrounds.  An"}, {"sha": "30c39dedeac79a76bef3ffaae72c02474ace1a02", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkCanvasPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCanvasPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCanvasPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCanvasPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -53,8 +53,8 @@ public GtkCanvasPeer (Canvas c)\n \n   // Preferred size for a drawing widget is always what the user\n   // requested.\n-  public Dimension getPreferredSize ()\n+  public Dimension preferredSize()\n   {\n-    return awtComponent.getSize ();\n+    return awtComponent.getSize();\n   }\n }"}, {"sha": "90d16c572822303a3112295a5981f8b43fc7f004", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 141, "deletions": 26, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -40,20 +40,32 @@\n \n import java.awt.Checkbox;\n import java.awt.CheckboxGroup;\n-import java.awt.peer.CheckboxPeer;\n-\n import java.awt.event.ItemEvent;\n+import java.awt.peer.CheckboxPeer;\n+import java.util.WeakHashMap;\n \n+/**\n+ * This class wraps either a GtkCheckButton or a GtkOptionButton\n+ * depending on if this peer's owner belongs to a CheckboxGroup.\n+ */\n public class GtkCheckboxPeer extends GtkComponentPeer\n   implements CheckboxPeer\n {\n-  // Group from last time it was set.\n-  public GtkCheckboxGroupPeer old_group;\n+  // The CheckboxGroup to which this GtkCheckboxPeer's owner belongs.\n+  public CheckboxGroup current_group;\n   // The current state of the GTK checkbox.\n-  private boolean currentState;  \n+  private boolean currentState;\n+\n+  // A map from CheckboxGroup to GSList* GTK option group pointer.\n+  private static WeakHashMap groupMap = new WeakHashMap();\n+\n+  public native void createCheckButton ();\n+  public native void createRadioButton (long groupPointer);\n \n-  public native void create (GtkCheckboxGroupPeer group);\n-  public native void nativeSetCheckboxGroup (GtkCheckboxGroupPeer group);\n+  public native void addToGroup (long groupPointer);\n+  public native void removeFromGroup ();\n+  public native void switchToGroup (long groupPointer);\n+  \n   public native void connectSignals ();\n \n   /**\n@@ -68,17 +80,47 @@ public GtkCheckboxPeer (Checkbox c)\n     super (c);\n   }\n \n-  // FIXME: we must be able to switch between a checkbutton and a\n-  // radiobutton dynamically.\n   public void create ()\n   {\n     Checkbox checkbox = (Checkbox) awtComponent;\n-    CheckboxGroup g = checkbox.getCheckboxGroup ();\n-    old_group = GtkCheckboxGroupPeer.getCheckboxGroupPeer (g);\n-    create (old_group);\n+    current_group = checkbox.getCheckboxGroup ();\n+    if (current_group == null)\n+      {\n+        // Initially we're not part of a group so we're backed by a\n+        // GtkCheckButton.\n+        createCheckButton();\n+      }\n+    else\n+      {\n+        // Initially we're part of a group.\n+\n+        // See if this group is already stored in our map.\n+        Long groupPointer = null;\n+        synchronized (groupMap)\n+        {\n+          groupPointer = (Long) groupMap.get(current_group);\n+        }\n+        \n+        if (groupPointer == null)\n+          {\n+            // We don't know about this group.  Create a new native\n+            // group pointer for this group and store it in our map.\n+           createRadioButton(0);\n+          }\n+        else\n+          {\n+            // We already know about this group.  Pass the\n+            // corresponding native group pointer value to the native\n+            // create method.\n+            createRadioButton(groupPointer.longValue());\n+          }\n+      }\n     currentState = checkbox.getState();\n     gtkToggleButtonSetActive(currentState);\n-    gtkButtonSetLabel (checkbox.getLabel ());\n+    \n+    String label = checkbox.getLabel();\n+    if (label != null)\n+      gtkButtonSetLabel(label);\n   }\n \n   /**\n@@ -87,7 +129,7 @@ public void create ()\n    * event since events should only be posted for user initiated\n    * clicks on the GtkCheckButton.\n    */\n-  synchronized public void setState (boolean state)\n+  public synchronized void setState (boolean state)\n   {\n     if (currentState != state)\n       {\n@@ -103,21 +145,87 @@ public void setLabel (String label)\n \n   public void setCheckboxGroup (CheckboxGroup group)\n   {\n-    GtkCheckboxGroupPeer gp\n-      = GtkCheckboxGroupPeer.getCheckboxGroupPeer (group);\n-    if (gp != old_group)\n+    if (current_group == null && group != null)\n       {\n-\tif (old_group != null)\n-\t  old_group.remove (this);\n-\tnativeSetCheckboxGroup (gp);\n-\told_group = gp;\n+        // This peer's owner is currently not in a group, and now\n+        // we're adding it to a group.  This means that the backing\n+        // GtkWidget will change from a GtkCheckButton to a\n+        // GtkRadioButton.\n+\n+        current_group = group;\n+\n+        // See if the new group is already stored in our map.\n+        Long groupPointer = null;\n+        synchronized (groupMap)\n+        {\n+          groupPointer = (Long) groupMap.get(current_group);\n+        }\n+        \n+        if (groupPointer == null)\n+          {\n+            // We don't know about this group.  Create a new native\n+            // group pointer for this group and store it in our map.\n+            addToGroup(0);\n+          }\n+        else\n+          {\n+            // We already know about this group.  Pass the\n+            // corresponding native group pointer value to the native\n+            // create method.\n+            addToGroup(groupPointer.longValue());\n+          }\n+      }\n+    else if (current_group != null && group == null)\n+      {\n+        // This peer's owner is currently in a group, and now we're\n+        // removing it from a group.  This means that the backing\n+        // GtkWidget will change from a GtkRadioButton to a\n+        // GtkCheckButton.\n+        removeFromGroup();\n+        current_group = null;\n+      }\n+    else if (current_group == null && group == null)\n+      {\n+        // This peer's owner is currently not in a group, and we're\n+        // not adding it to a group, so simply return.\n+        return;\n+      }\n+    else if (current_group != group)\n+      {\n+        // This peer's owner is currently in a group, and now we're\n+        // putting it in another group.  This means that we must\n+        // remove the backing GtkRadioButton from one group and add it\n+        // to the other group.\n+\n+        current_group = group;\n+        \n+        // See if the new group is already stored in our map.\n+        Long groupPointer = null;\n+        synchronized (groupMap)\n+        {\n+          groupPointer = (Long) groupMap.get(current_group);\n+        }\n+        \n+        if (groupPointer == null)\n+          {\n+            // We don't know about this group.  Create a new native\n+            // group pointer for this group and store it in our map.\n+            switchToGroup(0);\n+          }\n+        else\n+          {\n+            // We already know about this group.  Pass the\n+            // corresponding native group pointer value to the native\n+            // create method.\n+            switchToGroup(groupPointer.longValue());\n+          }\n       }\n   }\n \n   // Override the superclass postItemEvent so that the peer doesn't\n   // need information that we have.\n   // called back by native side: item_toggled_cb\n-  synchronized public void postItemEvent(Object item, boolean state)\n+  public synchronized void postItemEvent(Object item, boolean state)\n   {\n     // Only fire event is state actually changed.\n     if (currentState != state)\n@@ -127,13 +235,20 @@ synchronized public void postItemEvent(Object item, boolean state)\n \t\t\t    state ? ItemEvent.SELECTED : ItemEvent.DESELECTED);\n       }\n   }\n+  \n+  public void addToGroupMap(long groupPointer)\n+  {\n+    synchronized (groupMap)\n+    {\n+      groupMap.put(current_group, new Long (groupPointer));\n+    }\n+  }\n \n   public void dispose ()\n   {\n-    // Notify the group so that the native state can be cleaned up\n-    // appropriately.\n-    if (old_group != null)\n-      old_group.remove (this);\n+    groupMap.clear();\n+    current_group = null;\n+    currentState = false;\n     super.dispose ();\n   }\n }"}, {"sha": "61df796dc00b7d7b51363f1ea4be0541b27bc898", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkClipboardNotifier.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboardNotifier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboardNotifier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboardNotifier.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* GtkClipboardNotifier.java -- Helper for announcing GtkSelection changes.\n-   Copyright (C) 2005  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.datatransfer.*;\n-import java.util.*;\n \n class GtkClipboardNotifier extends Thread\n {"}, {"sha": "c11c45e207095d7f3c05a1994663bfe46b9f0721", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 84, "deletions": 9, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -52,9 +52,12 @@\n import java.awt.FontMetrics;\n import java.awt.Graphics;\n import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n import java.awt.Image;\n import java.awt.Insets;\n import java.awt.ItemSelectable;\n+import java.awt.KeyboardFocusManager;\n import java.awt.Point;\n import java.awt.Rectangle;\n import java.awt.Toolkit;\n@@ -66,13 +69,13 @@\n import java.awt.event.MouseWheelEvent;\n import java.awt.event.PaintEvent;\n import java.awt.event.TextEvent;\n-import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.awt.image.VolatileImage;\n import java.awt.peer.ComponentPeer;\n import java.awt.peer.ContainerPeer;\n+import java.awt.peer.LightweightPeer;\n import java.awt.peer.WindowPeer;\n import java.util.Timer;\n import java.util.TimerTask;\n@@ -109,6 +112,9 @@ native void gtkWidgetSetCursorUnlocked (int type, GtkImage image,\n   native void gtkWidgetRequestFocus ();\n   native void gtkWidgetDispatchKeyEvent (int id, long when, int mods,\n                                          int keyCode, int keyLocation);\n+  native boolean gtkWidgetHasFocus();\n+  native boolean gtkWidgetCanFocus();\n+\n   native void realize();\n   native void setNativeEventMask ();\n \n@@ -365,7 +371,7 @@ public boolean prepareImage (Image image, int width, int height,\n \n   public void print (Graphics g) \n   {\n-    throw new RuntimeException ();\n+    g.drawImage( ComponentGraphics.grab( this ), 0, 0, null );\n   }\n \n   public void repaint (long tm, int x, int y, int width, int height)\n@@ -414,8 +420,7 @@ static void schedule(long tm, int x, int y, int width, int height,\n \n   public void requestFocus ()\n   {\n-    gtkWidgetRequestFocus();\n-    postFocusEvent(FocusEvent.FOCUS_GAINED, false);\n+    assert false: \"Call new requestFocus() method instead\";\n   }\n \n   public void reshape (int x, int y, int width, int height) \n@@ -628,6 +633,12 @@ protected void postKeyEvent (int id, long when, int mods,\n       q.postEvent(keyEvent);\n   }\n \n+  /**\n+   * Referenced from native code.\n+   *\n+   * @param id\n+   * @param temporary\n+   */\n   protected void postFocusEvent (int id, boolean temporary)\n   {\n     q().postEvent (new FocusEvent (awtComponent, id, temporary));\n@@ -647,8 +658,10 @@ protected void postTextEvent ()\n \n   public GraphicsConfiguration getGraphicsConfiguration ()\n   {\n-    // FIXME: just a stub for now.\n-    return null;\n+    // FIXME: The component might be showing on a non-default screen.\n+    GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    GraphicsDevice dev = env.getDefaultScreenDevice();\n+    return dev.getDefaultConfiguration();\n   }\n \n   public void setEventMask (long mask)\n@@ -661,10 +674,72 @@ public boolean isFocusable ()\n     return false;\n   }\n \n-  public boolean requestFocus (Component source, boolean b1, \n-                               boolean b2, long x)\n+  public boolean requestFocus (Component request, boolean temporary, \n+                               boolean allowWindowFocus, long time)\n   {\n-    return false;\n+    assert request == awtComponent || isLightweightDescendant(request);\n+    boolean retval = false;\n+    if (gtkWidgetHasFocus())\n+      {\n+        KeyboardFocusManager kfm =\n+          KeyboardFocusManager.getCurrentKeyboardFocusManager();\n+        Component currentFocus = kfm.getFocusOwner();\n+        if (currentFocus == request)\n+          // Nothing to do in this trivial case.\n+          retval = true;\n+        else\n+          {\n+            // Requested component is a lightweight descendant of this one\n+            // or the actual heavyweight.\n+            // Since this (native) component is already focused, we simply\n+            // change the actual focus and be done.\n+            postFocusEvent(FocusEvent.FOCUS_GAINED, temporary);\n+            retval = true;\n+          }\n+      }\n+    else\n+      {\n+        if (gtkWidgetCanFocus())\n+          {\n+            if (allowWindowFocus)\n+              {\n+                Window window = getWindowFor(request);\n+                GtkWindowPeer wPeer = (GtkWindowPeer) window.getPeer();\n+                if (! wPeer.gtkWindowHasFocus())\n+                  wPeer.requestWindowFocus();\n+              }\n+            // Store requested focus component so that the corresponding\n+            // event is dispatched correctly.\n+            gtkWidgetRequestFocus();\n+            retval = true;\n+          }\n+      }\n+    return retval;\n+  }\n+\n+  private Window getWindowFor(Component c)\n+  {\n+    Component comp = c;\n+    while (! (comp instanceof Window))\n+      comp = comp.getParent();\n+    return (Window) comp;\n+  }\n+\n+  /**\n+   * Returns <code>true</code> if the component is a direct (== no intermediate\n+   * heavyweights) lightweight descendant of this peer's component.\n+   *\n+   * @param c the component to check\n+   *\n+   * @return <code>true</code> if the component is a direct (== no intermediate\n+   *         heavyweights) lightweight descendant of this peer's component\n+   */\n+  protected boolean isLightweightDescendant(Component c)\n+  {\n+    Component comp = c;\n+    while (comp.getPeer() instanceof LightweightPeer)\n+      comp = comp.getParent();\n+    return comp == awtComponent;\n   }\n \n   public boolean isObscured ()"}, {"sha": "541de3d82a8f27d5c81c0d0454e4b3152ab6af68", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -42,10 +42,7 @@\n import java.awt.Component;\n import java.awt.Container;\n import java.awt.Font;\n-import java.awt.Graphics;\n import java.awt.Insets;\n-import java.awt.Window;\n-import java.awt.peer.ComponentPeer;\n import java.awt.peer.ContainerPeer;\n \n public class GtkContainerPeer extends GtkComponentPeer"}, {"sha": "13906544d273c57460c1d2bcbfe7296545ced448", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* GtkDialogPeer.java -- Implements DialogPeer with GTK\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,9 +39,6 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Dialog;\n-import java.awt.Graphics;\n-import java.awt.Rectangle;\n-import java.awt.event.PaintEvent;\n import java.awt.peer.DialogPeer;\n \n public class GtkDialogPeer extends GtkWindowPeer"}, {"sha": "bb6f8b3bb3bc70e198944cc376c3b63ab586e030", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,11 +39,9 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Frame;\n-import java.awt.Graphics;\n import java.awt.Image;\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n-import java.awt.event.PaintEvent;\n import java.awt.peer.FramePeer;\n import java.awt.peer.MenuBarPeer;\n \n@@ -218,11 +216,7 @@ public void setBoundsPrivate(int x, int y, int width, int height)\n     // TODO Auto-generated method stub\n     \n   }\n-  public void updateAlwaysOnTop()\n-  {\n-    // TODO Auto-generated method stub\n-    \n-  }\n+\n   public boolean requestWindowFocus()\n   {\n     // TODO Auto-generated method stub"}, {"sha": "0fd98bbd7b4a9d99dcb80ec80b7a0bbff9214d92", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkImage.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,12 +39,10 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Graphics;\n-import java.awt.Color;\n import java.awt.Image;\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n import java.awt.image.MemoryImageSource;\n-import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.io.File;"}, {"sha": "f1a74b8cc99f04e0a9b8fe5008e2afc58f4dcd2d", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkImageConsumer.java", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* GtkImageConsumer.java\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,16 +38,11 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Graphics;\n-import java.awt.Image;\n import java.awt.image.ColorModel;\n-import java.awt.image.DirectColorModel;\n import java.awt.image.ImageConsumer;\n-import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.awt.image.MemoryImageSource;\n import java.util.Hashtable;\n-import java.util.Vector;\n \n /**\n  * Helper class to GtkImage. Sits and gathers pixels for a GtkImage and then"}, {"sha": "02db90d72bda58f7444839d8490f8a1acdc8c853", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkLabelPeer.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -56,7 +56,7 @@ public class GtkLabelPeer extends GtkComponentPeer\n \n   native void nativeSetAlignment (float alignment);\n \n-  public native void setText(String text);\n+  public native void setNativeText(String text);\n   native void setNativeBounds (int x, int y, int width, int height);\n \n   // Because this is a composite widget, we need to retrieve the\n@@ -69,6 +69,12 @@ void create ()\n     create (label.getText (), getGtkAlignment (label.getAlignment ()));\n   }\n \n+  public void setText(String text)\n+  {\n+    if (text != null)\n+      setNativeText(text);\n+  }\n+  \n   public GtkLabelPeer (Label l)\n   {\n     super (l);"}, {"sha": "898f224f5e1629bbc978975ed1f29351161dbee3", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,12 +38,9 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Font;\n import java.awt.Menu;\n import java.awt.MenuBar;\n-import java.awt.MenuComponent;\n import java.awt.peer.MenuBarPeer;\n-import java.awt.peer.MenuPeer;\n \n public class GtkMenuBarPeer extends GtkMenuComponentPeer\n   implements MenuBarPeer"}, {"sha": "ea523e953e70f19167cc4a23512b39344043c228", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,13 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Font;\n-import java.awt.Menu;\n-import java.awt.MenuBar;\n-import java.awt.MenuComponent;\n import java.awt.MenuItem;\n import java.awt.peer.MenuItemPeer;\n-import java.awt.peer.MenuPeer;\n \n public class GtkMenuItemPeer extends GtkMenuComponentPeer\n   implements MenuItemPeer"}, {"sha": "02bf84d4e8efbabd255a57285a30f2af71e9acd1", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMouseInfoPeer.java", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMouseInfoPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMouseInfoPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMouseInfoPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,76 @@\n+/* GtkToolkit.java -- Implements an AWT Toolkit using GTK for peers\n+   Copyright (C) 2006\n+   Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.gtk;\n+\n+import java.awt.Point;\n+import java.awt.GraphicsDevice;\n+import java.awt.Window;\n+import java.awt.peer.MouseInfoPeer;\n+\n+/**\n+ * The MouseInfoPeer is so small, I'm including it here.\n+ */\n+public class GtkMouseInfoPeer implements MouseInfoPeer\n+{\n+  private static GdkGraphicsEnvironment gde = new GdkGraphicsEnvironment();\n+  \n+  public int fillPointWithCoords(Point p)\n+  {\n+    int[] coords = gde.getMouseCoordinates();\n+      p.x = coords[1]; \n+      p.y = coords[2];\n+      return coords[0];\n+  }\n+  \n+  public boolean isWindowUnderMouse(Window w)\n+  {\n+    int[] coords = gde.getMouseCoordinates();\n+    GraphicsDevice[] gds = gde.getScreenDevices();\n+\n+    // Check if the screen  of the Window and the cursor match\n+    if( gds[ coords[0] ] != w.getGraphicsConfiguration().getDevice() )\n+      return false;\n+\n+    // Return the bounds-check.\n+    Point p = w.getLocationOnScreen();\n+    return (coords[1] >= p.x && coords[1] < p.x + w.getWidth() &&\n+\t    coords[2] >= p.y && coords[2] < p.y + w.getHeight() );\n+    }\n+}\n+"}, {"sha": "e0053f763f57082f4529c06e516bea834f08cde9", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkPanelPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* GtkPanelPeer.java -- Implements PanelPeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import java.awt.AWTEvent;\n import java.awt.Panel;\n import java.awt.event.MouseEvent;\n-import java.awt.event.PaintEvent;\n import java.awt.peer.PanelPeer;\n \n public class GtkPanelPeer extends GtkContainerPeer"}, {"sha": "4d66a3f509d0b11d4cda2f67738e56945a5a6320", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkPopupMenuPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPopupMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPopupMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPopupMenuPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -40,7 +40,6 @@\n \n import java.awt.Component;\n import java.awt.Event;\n-import java.awt.MenuItem;\n import java.awt.Point;\n import java.awt.PopupMenu;\n import java.awt.peer.PopupMenuPeer;"}, {"sha": "e4147d36c974ec23051b0cc3432f8aaab8d86a9e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkScrollbarPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Adjustable;\n-import java.awt.EventQueue;\n import java.awt.Scrollbar;\n import java.awt.event.AdjustmentEvent;\n import java.awt.peer.ScrollbarPeer;"}, {"sha": "6aa87fc2ecf4b4861e417bb37aadc3ca05e6f499", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 94, "deletions": 17, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -39,32 +39,83 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import gnu.classpath.Configuration;\n import gnu.java.awt.EmbeddedWindow;\n+import gnu.java.awt.dnd.GtkMouseDragGestureRecognizer;\n+import gnu.java.awt.dnd.peer.gtk.GtkDragSourceContextPeer;\n import gnu.java.awt.peer.ClasspathFontPeer;\n-import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n \n-import java.awt.*;\n+import java.awt.AWTException;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Checkbox;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Choice;\n+import java.awt.Component;\n+import java.awt.Cursor;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FileDialog;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Frame;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Image;\n+import java.awt.Label;\n+import java.awt.List;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.PopupMenu;\n+import java.awt.PrintJob;\n+import java.awt.Rectangle;\n+import java.awt.ScrollPane;\n+import java.awt.Scrollbar;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.Window;\n import java.awt.datatransfer.Clipboard;\n import java.awt.dnd.DragGestureEvent;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragGestureRecognizer;\n+import java.awt.dnd.DragSource;\n import java.awt.dnd.peer.DragSourceContextPeer;\n-import java.awt.font.FontRenderContext;\n import java.awt.im.InputMethodHighlight;\n-import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n-import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n-import java.awt.peer.*;\n+import java.awt.peer.ButtonPeer;\n+import java.awt.peer.CanvasPeer;\n+import java.awt.peer.CheckboxMenuItemPeer;\n+import java.awt.peer.CheckboxPeer;\n+import java.awt.peer.ChoicePeer;\n+import java.awt.peer.DialogPeer;\n+import java.awt.peer.FileDialogPeer;\n+import java.awt.peer.FontPeer;\n+import java.awt.peer.FramePeer;\n+import java.awt.peer.LabelPeer;\n+import java.awt.peer.ListPeer;\n+import java.awt.peer.MenuBarPeer;\n+import java.awt.peer.MenuItemPeer;\n+import java.awt.peer.MouseInfoPeer;\n+import java.awt.peer.MenuPeer;\n+import java.awt.peer.PanelPeer;\n+import java.awt.peer.PopupMenuPeer;\n+import java.awt.peer.RobotPeer;\n+import java.awt.peer.ScrollPanePeer;\n+import java.awt.peer.ScrollbarPeer;\n+import java.awt.peer.TextAreaPeer;\n+import java.awt.peer.TextFieldPeer;\n+import java.awt.peer.WindowPeer;\n import java.io.InputStream;\n import java.net.URL;\n-import java.text.AttributedString;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.Hashtable;\n-import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Properties;\n@@ -310,6 +361,11 @@ public Image getImage (URL url)\n \n   public PrintJob getPrintJob (Frame frame, String jobtitle, Properties props) \n   {\n+    SecurityManager sm;\n+    sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPrintJobAccess();\n+\n     return null;\n   }\n \n@@ -528,12 +584,6 @@ public ClasspathFontPeer getClasspathFontPeer (String name, Map attrs)\n       }\n   }\n \n-  public ClasspathTextLayoutPeer getClasspathTextLayoutPeer (AttributedString str, \n-                                                             FontRenderContext frc)\n-  {\n-    return new GdkTextLayout(str, frc);\n-  }\n-\n   protected EventQueue getSystemEventQueueImpl() \n   {\n     synchronized (GtkToolkit.class)\n@@ -555,7 +605,26 @@ public Cursor createCustomCursor(Image image, Point hotspot, String name)\n \n   public DragSourceContextPeer createDragSourceContextPeer(DragGestureEvent e)\n   {\n-    throw new Error(\"not implemented\");\n+    return new GtkDragSourceContextPeer(e);\n+  }\n+  \n+  public DragGestureRecognizer createDragGestureRecognizer(Class recognizer,\n+                                                           DragSource ds,\n+                                                           Component comp,\n+                                                           int actions,\n+                                                           DragGestureListener l)\n+  {\n+    if (recognizer.getName().equals(\"java.awt.dnd.MouseDragGestureRecognizer\"))\n+      {\n+        GtkMouseDragGestureRecognizer gestureRecognizer\n+          = new GtkMouseDragGestureRecognizer(ds, comp, actions, l);\n+        gestureRecognizer.registerListeners();\n+        return gestureRecognizer;\n+      }\n+    else\n+      {\n+        return null;\n+      }\n   }\n \n   public Map mapInputMethodHighlight(InputMethodHighlight highlight)\n@@ -593,4 +662,12 @@ public void registerImageIOSpis(IIORegistry reg)\n   }\n \n   public static native void gtkMain();\n+\n+  protected MouseInfoPeer getMouseInfoPeer()\n+  {\n+    return new GtkMouseInfoPeer();\n+  }\n+\n+  public native int getMouseNumberOfButtons();\n+\n } // class GtkToolkit"}, {"sha": "44e7b027b0bd2a7756e62b07fba0df1dbb50e1c7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkVolatileImage.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkVolatileImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkVolatileImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkVolatileImage.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -50,6 +50,8 @@ public class GtkVolatileImage extends VolatileImage\n   int width, height;\n   private ImageCapabilities caps;\n \n+  final GtkComponentPeer component;\n+\n   /**\n    * Don't touch, accessed from native code.\n    */\n@@ -85,6 +87,7 @@ public GtkVolatileImage(GtkComponentPeer component,\n     this.width = width;\n     this.height = height;\n     this.caps = caps;\n+    this.component = component;\n     nativePointer = init( component, width, height );\n   }\n "}, {"sha": "866d9c8816a418b9a08ad32a38fd04c210ca0ae7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 43, "deletions": 5, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,13 +38,14 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n import java.awt.Component;\n import java.awt.Frame;\n import java.awt.Graphics;\n+import java.awt.KeyboardFocusManager;\n import java.awt.Rectangle;\n import java.awt.Window;\n import java.awt.event.ComponentEvent;\n+import java.awt.event.FocusEvent;\n import java.awt.event.PaintEvent;\n import java.awt.event.WindowEvent;\n import java.awt.peer.WindowPeer;\n@@ -70,7 +71,8 @@ public class GtkWindowPeer extends GtkContainerPeer\n   native void gtkWindowSetTitle (String title);\n   native void gtkWindowSetResizable (boolean resizable);\n   native void gtkWindowSetModal (boolean modal);\n-\n+  native void gtkWindowSetAlwaysOnTop ( boolean alwaysOnTop );\n+  native boolean gtkWindowHasFocus();\n   native void realize ();\n \n   /** Returns the cached width of the AWT window component. */\n@@ -275,10 +277,13 @@ else if (id == WindowEvent.WINDOW_STATE_CHANGED)\n     else\n       q().postEvent (new WindowEvent ((Window) awtComponent, id, opposite));\n   }\n+\n+  /**\n+   * Update the always-on-top status of the native window.\n+   */\n   public void updateAlwaysOnTop()\n   {\n-    // TODO Auto-generated method stub\n-    \n+    gtkWindowSetAlwaysOnTop( ((Window)awtComponent).isAlwaysOnTop() );\n   }\n \n   protected void postExposeEvent (int x, int y, int width, int height)\n@@ -299,7 +304,40 @@ public boolean requestWindowFocus()\n     // TODO Auto-generated method stub\n     return false;\n   }\n-  \n+\n+  public boolean requestFocus (Component request, boolean temporary, \n+                               boolean allowWindowFocus, long time)\n+  {\n+    assert request == awtComponent || isLightweightDescendant(request);\n+    boolean retval = false;\n+    if (gtkWindowHasFocus())\n+      {\n+        KeyboardFocusManager kfm =\n+          KeyboardFocusManager.getCurrentKeyboardFocusManager();\n+        Component currentFocus = kfm.getFocusOwner();\n+        if (currentFocus == request)\n+          // Nothing to do in this trivial case.\n+          retval = true;\n+        else\n+          {\n+            // Requested component is a lightweight descendant of this one\n+            // or the actual heavyweight.\n+            // Since this (native) component is already focused, we simply\n+            // change the actual focus and be done.\n+            postFocusEvent(FocusEvent.FOCUS_GAINED, temporary);\n+            retval = true;\n+          }\n+      }\n+    else\n+      {\n+        if (allowWindowFocus)\n+          {\n+            retval = requestWindowFocus();\n+          }\n+      }\n+    return retval;\n+  }\n+\n   public Graphics getGraphics ()\n   {\n     Graphics g = super.getGraphics ();"}, {"sha": "5849655932089bced28d6dab103e71675b18545f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/VolatileImageGraphics.java", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FVolatileImageGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FVolatileImageGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FVolatileImageGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -38,25 +38,11 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Color;\n import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n-import java.awt.Point;\n-import java.awt.Rectangle;\n-import java.awt.Shape;\n-import java.awt.font.GlyphVector;\n-import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n-import java.awt.image.BufferedImage;\n-import java.awt.image.DataBuffer;\n-import java.awt.image.DataBufferInt;\n-import java.awt.image.ColorModel;\n-import java.awt.image.DirectColorModel;\n-import java.awt.image.RenderedImage;\n import java.awt.image.ImageObserver;\n-import java.util.WeakHashMap;\n \n public class VolatileImageGraphics extends ComponentGraphics\n {\n@@ -83,7 +69,7 @@ public void copyAreaImpl(int x, int y, int width, int height, int dx, int dy)\n \n   public GraphicsConfiguration getDeviceConfiguration()\n   {\n-    return null;\n+    return owner.component.getGraphicsConfiguration();\n   }\n \n   public Graphics create()"}, {"sha": "acac5e460a4061439c45af597fb38a5d4437d0f3", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtCheckboxPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtCheckboxPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtCheckboxPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,7 +37,6 @@\n \n package gnu.java.awt.peer.qt;\n \n-import java.awt.Rectangle;\n import java.awt.Checkbox;\n import java.awt.CheckboxGroup;\n import java.awt.event.ItemEvent;"}, {"sha": "c5c839e321a3c2a6427b06989a496cfa5c2e5ba0", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtComponentGraphics.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtComponentGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtComponentGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtComponentGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtComponentGraphics.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,9 +40,7 @@\n import java.awt.Color;\n import java.awt.GraphicsConfiguration;\n import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.Rectangle;\n-import java.awt.Paint;\n \n /**\n  * QtComponentPainter is a Graphics2D context for painting directly to AWT "}, {"sha": "4d7b58c4d872ff5bd85169dd62674675c75fcecb", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtComponentPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtComponentPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtComponentPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import java.awt.AWTException;\n import java.awt.BufferCapabilities;\n import java.awt.Component;\n-import java.awt.Container;\n import java.awt.Color;\n import java.awt.Cursor;\n import java.awt.Dimension;"}, {"sha": "ec04b0567d8603927aee0957a7e43936505b569e", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtContainerPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtContainerPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtContainerPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,7 +37,6 @@\n \n package gnu.java.awt.peer.qt;\n \n-import java.awt.Container;\n import java.awt.Component;\n import java.awt.Insets;\n import java.awt.peer.ContainerPeer;"}, {"sha": "23e5c06539638668c569ce69f8230cf76ea1fac2", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtDialogPeer.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtDialogPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtDialogPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,8 +38,6 @@\n package gnu.java.awt.peer.qt;\n \n import java.awt.Dialog;\n-import java.awt.MenuBar;\n-import java.awt.Rectangle;\n import java.awt.peer.DialogPeer;\n \n public class QtDialogPeer extends QtWindowPeer implements DialogPeer"}, {"sha": "0f859b78e4f4ff2cacc3037e77b123ad3b890f11", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtEmbeddedWindowPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtEmbeddedWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtEmbeddedWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtEmbeddedWindowPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtEmbeddedWindowPeer.java -- embedded window peer\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,6 @@\n package gnu.java.awt.peer.qt;\n \n import java.awt.Component;\n-import java.awt.peer.WindowPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n \n /** "}, {"sha": "2438fcc3282ebc04503e45d42305fff0395cdd89", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtFontMetrics.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtFontMetrics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtFontMetrics.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,9 +41,6 @@\n import java.awt.FontMetrics;\n import java.awt.Graphics;\n import java.awt.geom.Rectangle2D;\n-import java.awt.font.FontRenderContext;\n-import java.awt.font.GlyphVector;\n-import java.awt.font.LineMetrics;\n \n public class QtFontMetrics extends FontMetrics\n {"}, {"sha": "d847a805396430f308157fbbba19e7032678affb", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtFontPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtFontPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtFontPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,6 @@\n import java.text.CharacterIterator;\n import java.util.Locale;\n import java.util.Map;\n-import java.awt.peer.FontPeer;\n \n import gnu.java.awt.peer.ClasspathFontPeer;\n "}, {"sha": "842cbbbf8baa6238568a880f40456b0b57f8f7ad", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtGraphics.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtGraphics.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,6 +38,7 @@\n package gnu.java.awt.peer.qt;\n \n import java.awt.AlphaComposite;\n+import java.awt.AWTPermission;\n import java.awt.BasicStroke;\n import java.awt.Color;\n import java.awt.Composite;\n@@ -57,7 +58,6 @@\n import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphVector;\n import java.awt.geom.AffineTransform;\n-import java.awt.geom.PathIterator;\n import java.awt.geom.Arc2D;\n import java.awt.geom.Ellipse2D;\n import java.awt.geom.Line2D;\n@@ -605,8 +605,16 @@ public void setComposite(Composite comp)\n \tcomposite = comp;\n       }\n     else\n-      throw new UnsupportedOperationException(\"We don't support custom\"+\n-\t\t\t\t\t      \" composites yet.\");\n+      {\n+\t// FIXME: this check is only required \"if this Graphics2D\n+\t// context is drawing to a Component on the display screen\".\n+\tSecurityManager sm = System.getSecurityManager();\n+\tif (sm != null)\n+\t  sm.checkPermission(new AWTPermission(\"readDisplayPixels\"));\n+\n+\tthrow new UnsupportedOperationException(\"We don't support custom\"+\n+\t\t\t\t\t\t\" composites yet.\");\n+      }\n   }\n \n   public Composite getComposite()"}, {"sha": "15a01592277bd30f93f7d731b94e816d9ad4e558", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtGraphicsEnvironment.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtGraphicsEnvironment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtGraphicsEnvironment.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import java.awt.Graphics2D;\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n-import java.awt.HeadlessException;\n import java.awt.image.BufferedImage;\n import java.util.Locale;\n "}, {"sha": "b6fbb1dca4193833c8e2cfd83a94408e14204c34", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtImage.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImage.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtImage.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,7 +43,6 @@\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n import java.awt.image.MemoryImageSource;\n-import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.io.File;"}, {"sha": "7096c21e48d9d3c50192e7973805b1edfb1c1f66", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtImageConsumer.java", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageConsumer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageConsumer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageConsumer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtImageConsumer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,15 +37,10 @@\n \n package gnu.java.awt.peer.qt;\n \n-import java.awt.Graphics;\n-import java.awt.Image;\n import java.awt.image.ColorModel;\n-import java.awt.image.DirectColorModel;\n import java.awt.image.ImageConsumer;\n-import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.util.Hashtable;\n-import java.util.Vector;\n \n /**\n  * Helper class to QtImage. Sits and gathers pixels for a QtImage and then"}, {"sha": "d49084af83171cd8d2cb3ff591fbf32d58a1288e", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtImageDirectGraphics.java", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageDirectGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageDirectGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageDirectGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtImageDirectGraphics.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,29 +38,10 @@\n package gnu.java.awt.peer.qt;\n \n import java.awt.Color;\n-import java.awt.GraphicsConfiguration;\n-import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.Image;\n-import java.awt.Paint;\n-import java.awt.Rectangle;\n-import java.util.Stack;\n import java.awt.Shape;\n-import java.awt.Stroke;\n-import java.awt.font.FontRenderContext;\n-import java.awt.font.GlyphVector;\n import java.awt.geom.AffineTransform;\n-import java.awt.geom.PathIterator;\n-import java.awt.geom.Arc2D;\n-import java.awt.geom.Ellipse2D;\n-import java.awt.geom.Line2D;\n-import java.awt.geom.Rectangle2D;\n-import java.awt.geom.RoundRectangle2D;\n-import java.awt.image.BufferedImage;\n-import java.awt.image.BufferedImageOp;\n import java.awt.image.ImageObserver;\n-import java.awt.image.RenderedImage;\n-import java.awt.image.renderable.RenderableImage;\n \n /**\n  * A QtImagePainter that does an update after every drawing op."}, {"sha": "1224d69150f9bfe4cca05952f92bfa1a6df70cb7", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtImageGraphics.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtImageGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtImageGraphics.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,9 +40,7 @@\n import java.awt.Color;\n import java.awt.GraphicsConfiguration;\n import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.Image;\n-import java.awt.Paint;\n import java.awt.Rectangle;\n import java.util.Stack;\n "}, {"sha": "c91b37f3711f0b6c77959ebb8065db9b9356d9a4", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtMenuBarPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuBarPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtMenuBarPeer.java -- Qt peer for a menu bar.\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,7 +40,6 @@\n import java.awt.Menu;\n import java.awt.MenuBar;\n import java.awt.peer.MenuBarPeer;\n-import java.util.Vector;\n \n public class QtMenuBarPeer extends QtMenuComponentPeer implements MenuBarPeer\n {"}, {"sha": "7658ff078f1c14725aec50108f58054f3b402fa8", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtMenuItemPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuItemPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtMenuItemPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,7 +37,6 @@\n \n package gnu.java.awt.peer.qt;\n \n-import java.awt.Menu;\n import java.awt.MenuItem;\n import java.awt.CheckboxMenuItem;\n import java.awt.event.ActionEvent;"}, {"sha": "b96c5c51045c2d0f369876263ea317dcf16fbcca", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtPopupMenuPeer.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtPopupMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtPopupMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtPopupMenuPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtPopupMenuPeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,12 +38,9 @@\n package gnu.java.awt.peer.qt;\n \n import java.awt.Component;\n-import java.awt.Menu;\n-import java.awt.MenuItem;\n import java.awt.Point;\n import java.awt.PopupMenu;\n import java.awt.Event;\n-import java.awt.event.ActionEvent;\n import java.awt.peer.PopupMenuPeer;\n \n public class QtPopupMenuPeer extends QtMenuPeer implements PopupMenuPeer"}, {"sha": "c67b55bf42f64a6012a05739321db56624513d19", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtScreenDeviceConfiguration.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtScreenDeviceConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtScreenDeviceConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtScreenDeviceConfiguration.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtScreenDeviceConfiguration.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,11 +37,9 @@\n \n package gnu.java.awt.peer.qt;\n \n-import java.awt.DisplayMode;\n import java.awt.ImageCapabilities;\n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n-import java.awt.GraphicsConfigTemplate;\n import java.awt.Rectangle;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;"}, {"sha": "c3731cbd5f2ec61c43358a853f48cf05af54bf6d", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtScrollPanePeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtScrollPanePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtScrollPanePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtScrollPanePeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtScrollPanePeer.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,6 @@\n package gnu.java.awt.peer.qt;\n \n import java.awt.Adjustable;\n-import java.awt.Dimension;\n import java.awt.Insets;\n import java.awt.ScrollPane;\n import java.awt.peer.ScrollPanePeer;"}, {"sha": "5116769389e463d0d615ccb56ae6b12dd96032f6", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtToolkit.java", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtToolkit.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtToolkit.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -37,19 +37,16 @@\n \n package gnu.java.awt.peer.qt;\n \n-import gnu.classpath.Configuration;\n import gnu.java.awt.EmbeddedWindow;\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n-import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n-import java.awt.AWTEvent;\n+\n import java.awt.AWTException;\n import java.awt.Button;\n import java.awt.Canvas;\n import java.awt.Checkbox;\n import java.awt.CheckboxMenuItem;\n import java.awt.Choice;\n-import java.awt.Component;\n import java.awt.Dialog;\n import java.awt.Dimension;\n import java.awt.EventQueue;\n@@ -68,18 +65,13 @@\n import java.awt.FileDialog;\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n-import java.awt.HeadlessException;\n import java.awt.PopupMenu;\n import java.awt.PrintJob;\n import java.awt.Scrollbar;\n import java.awt.ScrollPane;\n-import java.awt.Toolkit;\n import java.awt.Window;\n import java.awt.datatransfer.Clipboard;\n import java.awt.dnd.DragGestureEvent;\n-import java.awt.dnd.DragGestureListener;\n-import java.awt.dnd.DragGestureRecognizer;\n-import java.awt.dnd.DragSource;\n import java.awt.dnd.peer.DragSourceContextPeer;\n import java.awt.event.AWTEventListener;\n import java.awt.image.ColorModel;\n@@ -91,37 +83,29 @@\n import java.awt.peer.FontPeer;\n import java.awt.peer.PanelPeer;\n import java.awt.peer.CanvasPeer;\n-import java.awt.peer.FramePeer; \n+import java.awt.peer.FramePeer;\n import java.awt.peer.PopupMenuPeer;\n import java.awt.peer.CheckboxMenuItemPeer;\n import java.awt.peer.LabelPeer;\n import java.awt.peer.RobotPeer;\n import java.awt.peer.CheckboxPeer;\n-import java.awt.peer.LightweightPeer; \n import java.awt.peer.ScrollPanePeer;\n-import java.awt.peer.ChoicePeer;        \n+import java.awt.peer.ChoicePeer;\n import java.awt.peer.ListPeer;\n import java.awt.peer.ScrollbarPeer;\n-import java.awt.peer.ComponentPeer;    \n import java.awt.peer.MenuBarPeer;\n import java.awt.peer.TextAreaPeer;\n-import java.awt.peer.ContainerPeer;\n-import java.awt.peer.MenuComponentPeer;\n-import java.awt.peer.TextComponentPeer;\n import java.awt.peer.DialogPeer;\n import java.awt.peer.MenuItemPeer;\n import java.awt.peer.TextFieldPeer;\n import java.awt.peer.FileDialogPeer;\n import java.awt.peer.MenuPeer;\n import java.awt.peer.WindowPeer;\n-import java.awt.font.FontRenderContext;\n import java.io.InputStream;\n import java.net.URL;\n-import java.text.AttributedString;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Properties;\n-import javax.imageio.spi.IIORegistry;\n \n import gnu.java.awt.ClasspathToolkit;\n \n@@ -402,6 +386,11 @@ public PrintJob getPrintJob(Frame frame,\n \t\t\t      String jobtitle,\n \t\t\t      Properties props)\n   {\n+    SecurityManager sm;\n+    sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPrintJobAccess();\n+    \n     throw new RuntimeException(\"Not implemented\");\n   }\n \n@@ -445,12 +434,6 @@ public ClasspathFontPeer getClasspathFontPeer (String name, Map attrs)\n     return new QtFontPeer (name, attrs);\n   }\n \n-  public ClasspathTextLayoutPeer getClasspathTextLayoutPeer(AttributedString str, \n-\t\t\t\t\t\t\t    FontRenderContext frc)\n-  {\n-    return null;\n-  }\n-\n   // FIXME\n   public Font createFont(int format, InputStream stream)\n   {"}, {"sha": "c81bb2a098b733fe1a8d0dac25c9b42a522a5780", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtVolatileImage.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtVolatileImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtVolatileImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtVolatileImage.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -1,5 +1,5 @@\n /* QtVolatileImage.java --\n-   Copyright (C)  2005  Free Software Foundation, Inc.\n+   Copyright (C)  2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,15 +47,11 @@\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;\n import java.awt.image.MemoryImageSource;\n-import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.awt.image.VolatileImage;\n-import java.io.File;\n-import java.io.IOException;\n import java.util.Hashtable;\n import java.util.WeakHashMap;\n-import java.util.Vector;\n \n /**\n  * QtVolatileImage - wraps a QImage"}, {"sha": "96ccc00b8f0a14eee5c17fa2505809f6970ea27a", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingComponentPeer.java", "status": "modified", "additions": 42, "deletions": 34, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponentPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -48,8 +48,6 @@\n import java.awt.FontMetrics;\n import java.awt.Graphics;\n import java.awt.GraphicsConfiguration;\n-import java.awt.GraphicsDevice;\n-import java.awt.GraphicsEnvironment;\n import java.awt.Image;\n import java.awt.Point;\n import java.awt.Rectangle;\n@@ -101,8 +99,8 @@\n   /**\n    * Creates a SwingComponentPeer instance. Subclasses are expected to call\n    * this constructor and thereafter call\n-   * {@link #init(Component, SwingComponent)} in order to setup the AWT and\n-   * Swing components properly.\n+   * {@link #init(Component,SwingComponent)}\n+   * in order to setup the AWT and Swing components properly.\n    */\n   protected SwingComponentPeer()\n   {\n@@ -167,12 +165,9 @@ public Image createImage(ImageProducer prod)\n    */\n   public Image createImage(int width, int height)\n   {\n-    GraphicsEnvironment graphicsEnv =\n-      GraphicsEnvironment.getLocalGraphicsEnvironment();\n-    GraphicsDevice dev = graphicsEnv.getDefaultScreenDevice();\n-    GraphicsConfiguration conf = dev.getDefaultConfiguration();\n-    Image image = conf.createCompatibleImage(width, height);\n-    return image;\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.createImage(width, height);\n   }\n \n   /**\n@@ -336,21 +331,24 @@ public void handleEvent(AWTEvent e)\n     {\n       case PaintEvent.UPDATE:\n       case PaintEvent.PAINT:\n-        Graphics g = getGraphics();\n-        Rectangle clip = ((PaintEvent)e).getUpdateRect();\n-        g.clipRect(clip.x, clip.y, clip.width, clip.height);\n-        //if (this instanceof LightweightPeer)\n-        //  {\n+        // This only will work when the component is showing.\n+        if (awtComponent.isShowing())\n+          {\n+            Graphics g = getGraphics();\n+            Rectangle clip = ((PaintEvent)e).getUpdateRect();\n+            g.clipRect(clip.x, clip.y, clip.width, clip.height);\n+            //if (this instanceof LightweightPeer)\n+            //  {\n             if (e.getID() == PaintEvent.UPDATE)\n               awtComponent.update(g);\n             else\n               awtComponent.paint(g);\n-        //  }\n-        // We paint the 'heavyweights' at last, so that they appear on top of\n-        // everything else.\n-        peerPaint(g);\n-\n-        g.dispose();\n+            //  }\n+            // We paint the 'heavyweights' at last, so that they appear on top of\n+            // everything else.\n+            peerPaint(g);\n+            g.dispose();\n+          }\n         break;\n       case MouseEvent.MOUSE_PRESSED:\n       case MouseEvent.MOUSE_RELEASED:\n@@ -384,6 +382,11 @@ public void hide()\n   {\n     if (swingComponent != null)\n       swingComponent.getJComponent().setVisible(false);\n+\n+    Component parent = awtComponent.getParent();\n+    if (parent != null)\n+      parent.repaint(awtComponent.getX(), awtComponent.getY(),\n+                     awtComponent.getWidth(), awtComponent.getHeight());\n   }\n \n   /**\n@@ -470,17 +473,15 @@ public void paint(Graphics graphics)\n   public boolean prepareImage(Image img, int width, int height, ImageObserver ob)\n   {\n     Component parent = awtComponent.getParent();\n-    boolean res;\n     if(parent != null)\n-      {\n-        ComponentPeer parentPeer = parent.getPeer();\n-        res = parentPeer.prepareImage(img, width, height, ob);\n-      }\n+    {\n+      ComponentPeer parentPeer = parent.getPeer();\n+      return parentPeer.prepareImage(img, width, height, ob);\n+    }\n     else\n-      {\n-        res = Toolkit.getDefaultToolkit().prepareImage(img, width, height, ob);\n-      }\n-    return res;\n+    {\n+      return Toolkit.getDefaultToolkit().prepareImage(img, width, height, ob);\n+    }\n   }\n \n   public void print(Graphics graphics)\n@@ -662,8 +663,10 @@ public void setForeground(Color color)\n    */\n   public void setVisible(boolean visible)\n   {\n-    if (swingComponent != null)\n-      swingComponent.getJComponent().setVisible(visible);\n+    if (visible)\n+      show();\n+    else\n+      hide();\n   }\n \n   /**\n@@ -782,8 +785,13 @@ public boolean handlesWheelScrolling()\n   public VolatileImage createVolatileImage(int width, int height)\n   {\n     Component parent = awtComponent.getParent();\n-    ComponentPeer parentPeer = parent.getPeer();\n-    return parentPeer.createVolatileImage(width, height);\n+    VolatileImage im = null;\n+    if (parent != null)\n+      {\n+        ComponentPeer parentPeer = parent.getPeer();\n+        im = parentPeer.createVolatileImage(width, height);\n+      }\n+    return im;\n   }\n \n   /**"}, {"sha": "c80c85c28f067b80ffed274b66105aba3dd0d88a", "filename": "libjava/classpath/gnu/java/awt/peer/x/GLGraphics.java", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FGLGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FGLGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FGLGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,123 @@\n+/* GLGraphics.java -- Graphics2D impl on top of GLX\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.Color;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.image.ColorModel;\n+\n+import gnu.java.awt.java2d.AbstractGraphics2D;\n+import gnu.x11.extension.glx.GL;\n+\n+/**\n+ * An implementation of Graphics2D on top of the GLX extension of X.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class GLGraphics extends AbstractGraphics2D\n+{\n+\n+  /**\n+   * The rendering context.\n+   */\n+  private GL gl;\n+\n+  /**\n+   * Creates a new GLGraphics that paints on the specified GL context.\n+   *\n+   * @param g the GL context to paint to\n+   */\n+  GLGraphics(GL g)\n+  {\n+    gl = g;\n+  }\n+\n+  public void setBackground(Color b)\n+  {\n+    super.setBackground(b);\n+    gl.clear_color(b.getRed() / 255.F, b.getGreen() / 255.F,\n+                   b.getBlue() / 255.F, b.getAlpha() / 255.F);\n+  }\n+\n+  public void clearRect(int x, int y, int w, int h)\n+  {\n+    // TODO: Maybe use fillRect().\n+    gl.clear(GL.COLOR_BUFFER_BIT);\n+  }\n+\n+  public void drawLine(int x1, int y1, int x2, int y2)\n+  {\n+    gl.begin(GL.LINES);\n+    gl.vertex2i(x1, y1);\n+    gl.vertex2i(x2, y2);\n+    gl.end();\n+    // TODO: Maybe do:\n+    // gl.flush();\n+  }\n+\n+  public void drawRect(int x, int y, int w, int h)\n+  {\n+    gl.polygon_mode(GL.FRONT_AND_BACK, GL.LINE);\n+    gl.begin(GL.POLYGON);\n+    gl.recti(x, y, x + w, y + h);\n+    gl.end();\n+    // TODO: Maybe do:\n+    // gl.flush();\n+  }\n+\n+  public void fillRect(int x, int y, int w, int h)\n+  {\n+    gl.polygon_mode(GL.FRONT_AND_BACK, GL.FILL);\n+    gl.recti(x, y, x + w, y + h);\n+    // TODO: Maybe do:\n+    // gl.flush();\n+  }\n+\n+  protected ColorModel getColorModel()\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public GraphicsConfiguration getDeviceConfiguration()\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+}"}, {"sha": "6d32448eececa02dbb5167b57594124198216269", "filename": "libjava/classpath/gnu/java/awt/peer/x/ImageConverter.java", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FImageConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FImageConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FImageConverter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,113 @@\n+/* ImageConverter.java -- Convert arbitrary Image impl to XImage\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.image.ColorModel;\n+import java.awt.image.ImageConsumer;\n+import java.util.Hashtable;\n+\n+/**\n+ * Convert a non-XImage to an XImage.\n+ * \n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class ImageConverter implements ImageConsumer\n+{\n+\n+  private XImage image;\n+  private Graphics imageGraphics;\n+\n+  public void setDimensions(int width, int height)\n+  {\n+    image = new XImage(width, height);\n+  }\n+\n+  public void setProperties(Hashtable props)\n+  {\n+    // Ignore for now.\n+  }\n+\n+  public void setColorModel(ColorModel model)\n+  {\n+    // Ignore for now.\n+  }\n+\n+  public void setHints(int flags)\n+  {\n+    // Ignore for now.\n+  }\n+\n+  public void setPixels(int x, int y, int w, int h, ColorModel model,\n+                        byte[] pixels, int offset, int scansize)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public void setPixels(int x, int y, int w, int h, ColorModel model,\n+                        int[] pixels, int offset, int scansize)\n+  {\n+    System.err.println(\"transferType: \" + model.getTransferType());\n+    System.err.println(\"colorModel: \" + model);\n+    if (imageGraphics == null)\n+      imageGraphics = image.getGraphics();\n+    int xend = x + w;\n+    int yend = y + h;\n+    for (int yy = y; yy < yend; yy++)\n+      {\n+        for (int xx = x; xx < xend; xx++)\n+          {\n+            int pixel = pixels[yy * scansize + xx + offset];\n+            imageGraphics.setColor(new Color(model.getRGB(pixel)));\n+            imageGraphics.fillRect(xx, yy, 1, 1);\n+          }\n+      }\n+  }\n+\n+  public void imageComplete(int status)\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  XImage getXImage()\n+  {\n+    return image;\n+  }\n+}"}, {"sha": "8e0a31f5d3639229337af25f659cd849ad5af9a5", "filename": "libjava/classpath/gnu/java/awt/peer/x/KeyboardMapping.java", "status": "added", "additions": 415, "deletions": 0, "changes": 415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FKeyboardMapping.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FKeyboardMapping.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FKeyboardMapping.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,415 @@\n+/* KeyboardMapping.java -- Maps X keysyms to Java keyCode and keyChar\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.x;\n+\n+import gnu.x11.Input;\n+import gnu.x11.keysym.Latin1;\n+import gnu.x11.keysym.Misc;\n+\n+import java.awt.event.KeyEvent;\n+\n+/**\n+ * Defines the keyboard mapping from X keysyms to Java\n+ * keycodes and keychars.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+final class KeyboardMapping\n+{\n+\n+  /**\n+   * Maps X keycodes to AWT keycodes.\n+   * \n+   * @param xInput the X input event\n+   * @param xKeyCode the X keycode to map\n+   * @param xMods the X modifiers\n+   *\n+   * @return the AWT keycode and keychar\n+   */\n+  static int mapToKeyCode(gnu.x11.Input xInput, int xKeyCode, int xMods)\n+  {\n+    int mapped = KeyEvent.VK_UNDEFINED;\n+    int keysym = xInput.keycode_to_keysym(xKeyCode, xMods, true);\n+\n+    // Special keys.\n+    if (keysym >= 255 << 8)\n+      {\n+        // FIXME: Add missing mappings.\n+        switch (keysym)\n+        {\n+          case Misc.BACKSPACE:\n+            mapped = KeyEvent.VK_BACK_SPACE;\n+            break;\n+          case Misc.TAB:\n+            mapped = KeyEvent.VK_TAB;\n+            break;\n+          case Misc.CLEAR:\n+            mapped = KeyEvent.VK_CLEAR;\n+            break;\n+          case Misc.RETURN:\n+            mapped = KeyEvent.VK_ENTER;\n+            break;\n+          case Misc.PAUSE:\n+            mapped = KeyEvent.VK_PAUSE;\n+            break;\n+          case Misc.SCROLL_LOCK:\n+            mapped = KeyEvent.VK_SCROLL_LOCK;\n+            break;\n+          case Misc.ESCAPE:\n+            mapped = KeyEvent.VK_ESCAPE;\n+            break;\n+          case Misc.HOME:\n+            mapped = KeyEvent.VK_HOME;\n+            break;\n+          case Misc.LEFT:\n+            mapped = KeyEvent.VK_LEFT;\n+            break;\n+          case Misc.UP:\n+            mapped = KeyEvent.VK_UP;\n+            break;\n+          case Misc.RIGHT:\n+            mapped = KeyEvent.VK_RIGHT;\n+            break;\n+          case Misc.DOWN:\n+            mapped = KeyEvent.VK_DOWN;\n+            break;\n+          case Misc.PAGE_UP:\n+            mapped = KeyEvent.VK_PAGE_UP;\n+            break;\n+          case Misc.PAGE_DOWN:\n+            mapped = KeyEvent.VK_PAGE_DOWN;\n+            break;\n+          case Misc.END:\n+            mapped = KeyEvent.VK_END;\n+            break;\n+          case Misc.BEGIN:\n+            mapped = KeyEvent.VK_BEGIN;\n+            break;\n+          case Misc.INSERT:\n+            mapped = KeyEvent.VK_INSERT;\n+            break;\n+          case Misc.UNDO:\n+            mapped = KeyEvent.VK_UNDO;\n+            break;\n+          case Misc.FIND:\n+            mapped = KeyEvent.VK_FIND;\n+            break;\n+          case Misc.CANCEL:\n+            mapped = KeyEvent.VK_CANCEL;\n+            break;\n+          case Misc.HELP:\n+            mapped = KeyEvent.VK_HELP;\n+            break;\n+          case Misc.MODE_SWITCH:\n+            mapped = KeyEvent.VK_MODECHANGE;\n+            break;\n+          case Misc.NUM_LOCK:\n+            mapped = KeyEvent.VK_NUM_LOCK;\n+            break;\n+          case Misc.KP_LEFT:\n+            mapped = KeyEvent.VK_KP_LEFT;\n+            break;\n+          case Misc.KP_UP:\n+            mapped = KeyEvent.VK_KP_UP;\n+            break;\n+          case Misc.KP_RIGHT:\n+            mapped = KeyEvent.VK_KP_RIGHT;\n+            break;\n+          case Misc.KP_DOWN:\n+            mapped = KeyEvent.VK_KP_DOWN;\n+            break;\n+          case Misc.F1:\n+            mapped = KeyEvent.VK_F1;\n+            break;\n+          case Misc.F2:\n+            mapped = KeyEvent.VK_F2;\n+            break;\n+          case Misc.F3:\n+            mapped = KeyEvent.VK_F3;\n+            break;\n+          case Misc.F4:\n+            mapped = KeyEvent.VK_F4;\n+            break;\n+          case Misc.F5:\n+            mapped = KeyEvent.VK_F5;\n+            break;\n+          case Misc.F6:\n+            mapped = KeyEvent.VK_F6;\n+            break;\n+          case Misc.F7:\n+            mapped = KeyEvent.VK_F7;\n+            break;\n+          case Misc.F8:\n+            mapped = KeyEvent.VK_F8;\n+            break;\n+          case Misc.F9:\n+            mapped = KeyEvent.VK_F9;\n+            break;\n+          case Misc.F10:\n+            mapped = KeyEvent.VK_F10;\n+            break;\n+          case Misc.F11:\n+            mapped = KeyEvent.VK_F11;\n+            break;\n+          case Misc.F12:\n+            mapped = KeyEvent.VK_F12;\n+            break;\n+          case Misc.F13:\n+            mapped = KeyEvent.VK_F13;\n+            break;\n+          case Misc.F14:\n+            mapped = KeyEvent.VK_F14;\n+            break;\n+          case Misc.F15:\n+            mapped = KeyEvent.VK_F15;\n+            break;\n+          case Misc.F16:\n+            mapped = KeyEvent.VK_F16;\n+            break;\n+          case Misc.F17:\n+            mapped = KeyEvent.VK_F17;\n+            break;\n+          case Misc.F18:\n+            mapped = KeyEvent.VK_F18;\n+            break;\n+          case Misc.F19:\n+            mapped = KeyEvent.VK_F19;\n+            break;\n+          case Misc.F20:\n+            mapped = KeyEvent.VK_F20;\n+            break;\n+          case Misc.F21:\n+            mapped = KeyEvent.VK_F21;\n+            break;\n+          case Misc.F22:\n+            mapped = KeyEvent.VK_F22;\n+            break;\n+          case Misc.F23:\n+            mapped = KeyEvent.VK_F23;\n+            break;\n+          case Misc.F24:\n+            mapped = KeyEvent.VK_F24;\n+            break;\n+          case Misc.SHIFT_L:\n+          case Misc.SHIFT_R:\n+            mapped = KeyEvent.VK_SHIFT;\n+            break;\n+          case Misc.CONTROL_L:\n+          case Misc.CONTROL_R:\n+            mapped = KeyEvent.VK_CONTROL;\n+            break;\n+          case Misc.CAPS_LOCK:\n+          case Misc.SHIFT_LOCK:\n+            mapped = KeyEvent.VK_CAPS_LOCK;\n+            break;\n+          case Misc.META_L:\n+          case Misc.META_R:\n+            mapped = KeyEvent.VK_META;\n+            break;\n+          case Misc.ALT_L:\n+          case Misc.ALT_R:\n+            mapped = KeyEvent.VK_ALT;\n+            break;\n+          case Misc.DELETE:\n+            mapped = KeyEvent.VK_DELETE;\n+            break;\n+          default:\n+            mapped = KeyEvent.VK_UNDEFINED;\n+        }\n+      }\n+    // Map Latin1 characters.\n+    else if (keysym < 256)\n+      {\n+        // TODO: Add missing mappings, if any.\n+        // Lowercase characters are mapped to\n+        // their corresponding upper case pendants.\n+        if (keysym >= Latin1.A_SMALL && keysym <= Latin1.Z_SMALL)\n+          mapped = keysym - 0x20;\n+        // Uppercase characters are mapped 1:1.\n+        else if (keysym >= Latin1.A && keysym <= Latin1.Z)\n+          mapped = keysym;\n+        // Digits are mapped 1:1.\n+        else if (keysym >= Latin1.NUM_0 && keysym <= Latin1.NUM_9)\n+          mapped = keysym;\n+        else\n+          {\n+            switch (keysym)\n+            {\n+              case Latin1.SPACE:\n+                mapped = KeyEvent.VK_SPACE;\n+                break;\n+              case Latin1.EXCLAM:\n+                mapped = KeyEvent.VK_EXCLAMATION_MARK;\n+                break;\n+              case Latin1.QUOTE_DBL:\n+                mapped = KeyEvent.VK_QUOTEDBL;\n+                break;\n+              case Latin1.NUMBER_SIGN:\n+                mapped = KeyEvent.VK_NUMBER_SIGN;\n+                break;\n+              case Latin1.DOLLAR:\n+                mapped = KeyEvent.VK_DOLLAR;\n+                break;\n+              case Latin1.AMPERSAND:\n+                mapped = KeyEvent.VK_AMPERSAND;\n+                break;\n+              case Latin1.APOSTROPHE:\n+                mapped = KeyEvent.VK_QUOTE;\n+                break;\n+              case Latin1.PAREN_LEFT:\n+                mapped = KeyEvent.VK_LEFT_PARENTHESIS;\n+                break;\n+              case Latin1.PAREN_RIGHT:\n+                mapped = KeyEvent.VK_RIGHT_PARENTHESIS;\n+                break;\n+              case Latin1.ASTERISK:\n+                mapped = KeyEvent.VK_ASTERISK;\n+                break;\n+              case Latin1.PLUS:\n+                mapped = KeyEvent.VK_PLUS;\n+                break;\n+              case Latin1.COMMA:\n+                mapped = KeyEvent.VK_COMMA;\n+                break;\n+              case Latin1.MINUS:\n+                mapped = KeyEvent.VK_MINUS;\n+                break;\n+              case Latin1.PERIOD:\n+                mapped = KeyEvent.VK_PERIOD;\n+                break;\n+              case Latin1.SLASH:\n+                mapped = KeyEvent.VK_SLASH;\n+                break;\n+              case Latin1.COLON:\n+                mapped = KeyEvent.VK_COLON;\n+                break;\n+              case Latin1.SEMICOLON:\n+                mapped = KeyEvent.VK_SEMICOLON;\n+                break;\n+              case Latin1.LESS:\n+                mapped = KeyEvent.VK_LESS;\n+                break;\n+              case Latin1.EQUAL:\n+                mapped = KeyEvent.VK_EQUALS;\n+                break;\n+              case Latin1.GREATER:\n+                mapped = KeyEvent.VK_GREATER;\n+                break;\n+              case Latin1.AT:\n+                mapped = KeyEvent.VK_AT;\n+                break;\n+              case Latin1.BRACKET_LEFT:\n+                mapped = KeyEvent.VK_OPEN_BRACKET;\n+                break;\n+              case Latin1.BACKSLASH:\n+                mapped = KeyEvent.VK_BACK_SLASH;\n+                break;\n+              case Latin1.BRACKET_RIGHT:\n+                mapped = KeyEvent.VK_CLOSE_BRACKET;\n+                break;\n+              case Latin1.ASCII_CIRCUM:\n+                mapped = KeyEvent.VK_CIRCUMFLEX;\n+                break;\n+              case Latin1.UNDERSCORE:\n+                mapped = KeyEvent.VK_UNDERSCORE;\n+                break;\n+              case Latin1.GRAVE:\n+                mapped = KeyEvent.VK_DEAD_GRAVE;\n+                break;\n+              case Latin1.BRACE_LEFT:\n+                mapped = KeyEvent.VK_BRACELEFT;\n+                break;\n+              case Latin1.BRACE_RIGHT:\n+                mapped = KeyEvent.VK_BRACERIGHT;\n+                break;\n+              case Latin1.ASCII_TILDE:\n+                mapped = KeyEvent.VK_DEAD_TILDE;\n+                break;\n+              case Latin1.EXCLAM_DOWN:\n+                mapped = KeyEvent.VK_INVERTED_EXCLAMATION_MARK;\n+                break;\n+              default:\n+                mapped = KeyEvent.VK_UNDEFINED;\n+            }\n+          }\n+      }\n+    return mapped;\n+  }\n+\n+  /**\n+   * Maps X keycodes+modifiers to Java keychars.\n+   *\n+   * @param xInput The X Input to use for mapping\n+   * @param xKeyCode the X keycode\n+   * @param xMods the X key modifiers\n+   *\n+   * @return the Java keychar\n+   */\n+  static char mapToKeyChar(gnu.x11.Input xInput, int xKeyCode, int xMods)\n+  {\n+    char mapped = KeyEvent.CHAR_UNDEFINED;\n+    char keysym = (char) xInput.keycode_to_keysym(xKeyCode, xMods, false);\n+    // FIXME: Map other encodings properly.\n+    if (keysym < 256) // Latin1.\n+      {\n+        mapped = keysym;\n+      }\n+    return mapped;\n+  }\n+\n+  /**\n+   * Maps X modifier masks to AWT modifier masks.\n+   *\n+   * @param xMods the X modifiers\n+   *\n+   * @return the AWT modifiers\n+   */\n+  static int mapModifiers(int xMods)\n+  {\n+    int mods = 0;\n+\n+    if ((xMods & Input.SHIFT_MASK) != 0)\n+      mods |= KeyEvent.SHIFT_MASK | KeyEvent.SHIFT_DOWN_MASK;\n+    if ((xMods & Input.ALT_MASK) != 0)\n+      mods |= KeyEvent.ALT_MASK | KeyEvent.ALT_DOWN_MASK;\n+    if ((xMods & Input.CONTROL_MASK) != 0)\n+      mods |= KeyEvent.CTRL_MASK | KeyEvent.CTRL_DOWN_MASK;\n+\n+    return mods;\n+  }\n+}"}, {"sha": "45ad24d67e9b0679db6b85c9369e1e2c947abf20", "filename": "libjava/classpath/gnu/java/awt/peer/x/XDialogPeer.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXDialogPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,61 @@\n+/* XDialogPeer.java -- The peer for AWT dialogs\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.Dialog;\n+import java.awt.peer.DialogPeer;\n+\n+public class XDialogPeer\n+  extends XWindowPeer\n+  implements DialogPeer\n+{\n+\n+  XDialogPeer(Dialog target)\n+  {\n+    super(target);\n+  }\n+\n+  public void setResizable(boolean resizeable)\n+  {\n+  }\n+\n+  public void setTitle(String title)\n+  {\n+  }\n+}"}, {"sha": "870edf3796d2b0a9a7332256536fb30283470339", "filename": "libjava/classpath/gnu/java/awt/peer/x/XEventPump.java", "status": "added", "additions": 287, "deletions": 0, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,287 @@\n+/* XEventPump.java -- Pumps events from X to AWT\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.PaintEvent;\n+import java.util.HashMap;\n+\n+import gnu.x11.Display;\n+import gnu.x11.event.ButtonPress;\n+import gnu.x11.event.ButtonRelease;\n+import gnu.x11.event.ConfigureNotify;\n+import gnu.x11.event.Event;\n+import gnu.x11.event.Expose;\n+import gnu.x11.event.Input;\n+import gnu.x11.event.KeyPress;\n+import gnu.x11.event.KeyRelease;\n+import gnu.x11.event.MotionNotify;\n+\n+/**\n+ * Fetches events from X, translates them to AWT events and pumps them up\n+ * into the AWT event queue.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class XEventPump\n+  implements Runnable\n+{\n+\n+  /**\n+   * The X Display from which we fetch and pump up events.\n+   */\n+  private Display display;\n+\n+  /**\n+   * Maps X Windows to AWT Windows to be able to correctly determine the\n+   * event targets.\n+   */\n+  private HashMap windows;\n+\n+  /**\n+   * Indicates if we are currently inside a drag operation. This is\n+   * set to the button ID when a button is pressed and to -1 (indicating\n+   * that no drag is active) when the mouse is released.\n+   */\n+  private int drag;\n+\n+  /**\n+   * Creates a new XEventPump for the specified X Display.\n+   *\n+   * @param d the X Display\n+   */\n+  XEventPump(Display d)\n+  {\n+    display = d;\n+    windows = new HashMap();\n+    drag = -1;\n+    Thread t = new Thread(this);\n+    t.start();\n+  }\n+\n+  /**\n+   * The main event pump loop. This basically fetches events from the\n+   * X Display and pumps them into the system event queue.\n+   */\n+  public void run()\n+  {\n+    while (display.connected)\n+      {\n+        try\n+          {\n+            Event xEvent = display.next_event();\n+            handleEvent(xEvent);\n+          }\n+        catch (ThreadDeath death)\n+          {\n+            // If someone wants to kill us, let them.\n+            return;\n+          }\n+        catch (Throwable x)\n+          {\n+            System.err.println(\"Exception during event dispatch:\");\n+            x.printStackTrace(System.err);\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Adds an X Window to AWT Window mapping. This is required so that the\n+   * event pump can correctly determine the event targets.\n+   *\n+   * @param xWindow the X Window\n+   * @param awtWindow the AWT Window\n+   */\n+  void registerWindow(gnu.x11.Window xWindow, Window awtWindow)\n+  {\n+    if (XToolkit.DEBUG)\n+      System.err.println(\"registering window id: \" + xWindow.id);\n+    windows.put(new Integer(xWindow.id), awtWindow);\n+  }\n+\n+  void unregisterWindow(gnu.x11.Window xWindow)\n+  {\n+    windows.remove(new Integer(xWindow.id));\n+  }\n+\n+  private void handleEvent(Event xEvent)\n+  {\n+    Integer key = new Integer(xEvent.window_id());;\n+    Window awtWindow = (Window) windows.get(key);\n+\n+    if (XToolkit.DEBUG)\n+      System.err.println(\"fetched event: \" + xEvent);\n+    switch (xEvent.code())\n+    {\n+    case ButtonPress.CODE:\n+      ButtonPress bp = (ButtonPress) xEvent;\n+      // Create and post the mouse event.\n+      int button = bp.detail();\n+      drag = button;\n+      MouseEvent mp = new MouseEvent(awtWindow, MouseEvent.MOUSE_PRESSED,\n+                                     System.currentTimeMillis(), 0,\n+                                     bp.event_x(), bp.event_y(),\n+                                     1, false, button);\n+      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mp);\n+      break;\n+    case ButtonRelease.CODE:\n+      ButtonRelease br = (ButtonRelease) xEvent;\n+      drag = -1;\n+      MouseEvent mr = new MouseEvent(awtWindow, MouseEvent.MOUSE_RELEASED,\n+                                     System.currentTimeMillis(), 0,\n+                                     br.event_x(), br.event_y(),\n+                                     1, false, br.detail());\n+      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mr);\n+      break;\n+    case MotionNotify.CODE:\n+      MotionNotify mn = (MotionNotify) xEvent;\n+      MouseEvent mm;\n+      if (drag == -1)\n+        {\n+          mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_MOVED,\n+                              System.currentTimeMillis(), 0,\n+                              mn.event_x(), mn.event_y(),\n+                              1, false);\n+        }\n+      else\n+        {\n+          mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_DRAGGED,\n+                              System.currentTimeMillis(), 0,\n+                              mn.event_x(), mn.event_y(),\n+                              1, false);\n+        }\n+      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mm);\n+      break;\n+    case ConfigureNotify.CODE:\n+      ConfigureNotify c = (ConfigureNotify) xEvent;\n+      if (XToolkit.DEBUG)\n+        System.err.println(\"resize request for window id: \" + key);\n+\n+      // Detect and report size changes.\n+      if (c.width() != awtWindow.getWidth()\n+          || c.height() != awtWindow.getHeight())\n+        {\n+          if (XToolkit.DEBUG)\n+            System.err.println(\"Setting size on AWT window: \" + c.width()\n+                             + \", \" + c.height() + \", \" + awtWindow.getWidth()\n+                             + \", \" + awtWindow.getHeight());\n+          ((XWindowPeer) awtWindow.getPeer()).callback = true;\n+          awtWindow.setSize(c.width(), c.height());\n+          ((XWindowPeer) awtWindow.getPeer()).callback = false;\n+        }\n+      break;\n+    case Expose.CODE:\n+      Expose exp = (Expose) xEvent;\n+      if (XToolkit.DEBUG)\n+        System.err.println(\"expose request for window id: \" + key);\n+      Rectangle r = new Rectangle(exp.x(), exp.y(), exp.width(),\n+                                  exp.height());\n+      //System.err.println(\"expose paint: \" + r);\n+      // We need to clear the background of the exposed rectangle.\n+      Graphics g = awtWindow.getGraphics();\n+      g.clearRect(r.x, r.y, r.width, r.height);\n+      g.dispose();\n+      PaintEvent pev = new PaintEvent(awtWindow, PaintEvent.PAINT, r);\n+      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(pev);\n+      break;\n+    case KeyPress.CODE:\n+    case KeyRelease.CODE:\n+      handleKeyEvent(xEvent, awtWindow);\n+      break;\n+    default:\n+      if (XToolkit.DEBUG)\n+        System.err.println(\"Unhandled X event: \" + xEvent);\n+    }\n+  }\n+\n+  /**\n+   * Handles key events from X.\n+   *\n+   * @param xEvent the X event\n+   * @param awtWindow the AWT window to which the event gets posted\n+   */\n+  private void handleKeyEvent(Event xEvent, Window awtWindow)\n+  {\n+    Input keyEvent = (Input) xEvent;\n+    int xKeyCode = keyEvent.detail();\n+    int xMods = keyEvent.state();\n+    int keyCode = KeyboardMapping.mapToKeyCode(xEvent.display.input, xKeyCode,\n+                                               xMods);\n+    char keyChar = KeyboardMapping.mapToKeyChar(xEvent.display.input, xKeyCode,\n+                                                xMods);\n+    if (XToolkit.DEBUG)\n+      System.err.println(\"XEventPump.handleKeyEvent: \" + xKeyCode + \", \"\n+                         + xMods + \": \" + ((int) keyChar) + \", \" + keyCode);\n+    int awtMods = KeyboardMapping.mapModifiers(xMods);\n+    long when = System.currentTimeMillis();\n+    KeyEvent ke;\n+    if (keyEvent.code() == KeyPress.CODE)\n+      {\n+        ke = new KeyEvent(awtWindow, KeyEvent.KEY_PRESSED, when,\n+                          awtMods, keyCode,\n+                          KeyEvent.CHAR_UNDEFINED);\n+        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(ke);\n+        if (keyChar != KeyEvent.CHAR_UNDEFINED)\n+          {\n+            ke = new KeyEvent(awtWindow, KeyEvent.KEY_TYPED, when,\n+                              awtMods, KeyEvent.VK_UNDEFINED,\n+                              keyChar);\n+            Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(ke);\n+          }\n+          \n+      }\n+    else\n+      {\n+        ke = new KeyEvent(awtWindow, KeyEvent.KEY_RELEASED, when,\n+                          awtMods, keyCode,\n+                          KeyEvent.CHAR_UNDEFINED);\n+        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(ke);\n+      }\n+\n+  }\n+\n+\n+}\n+"}, {"sha": "fd293d8dd43b63e66046bc8ed1e95e7a3c60edec", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFontPeer.java", "status": "added", "additions": 766, "deletions": 0, "changes": 766, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,766 @@\n+/* XFontPeer.java -- The font peer for X\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.AWTError;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.LineMetrics;\n+import java.awt.font.TextAttribute;\n+import java.awt.geom.Rectangle2D;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.text.CharacterIterator;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+import gnu.x11.Display;\n+import gnu.x11.Fontable;\n+\n+/**\n+ * The bridge from AWT to X fonts.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class XFontPeer\n+  extends ClasspathFontPeer\n+{\n+\n+  /**\n+   * The font mapping as specified in the file fonts.properties.\n+   */\n+  private static Properties fontProperties;\n+  static\n+  {\n+    fontProperties = new Properties();\n+    InputStream in = XFontPeer.class.getResourceAsStream(\"fonts.properties\");\n+    try\n+      {\n+        fontProperties.load(in);\n+      }\n+    catch (IOException e)\n+      {\n+        e.printStackTrace();\n+      }\n+  }\n+\n+  /**\n+   * The FontMetrics implementation for XFontPeer.\n+   */\n+  private class XFontMetrics\n+    extends FontMetrics\n+  {\n+    /**\n+     * The ascent of the font.\n+     */ \n+    int ascent;\n+\n+    /**\n+     * The descent of the font.\n+     */ \n+    int descent;\n+\n+    /**\n+     * The maximum of the character advances.\n+     */\n+    private int maxAdvance;\n+\n+    /**\n+     * The internal leading.\n+     */\n+    int leading;\n+\n+    /**\n+     * Cached string metrics. This caches string metrics locally so that the\n+     * server doesn't have to be asked each time.\n+     */\n+    private HashMap metricsCache;\n+\n+    /**\n+     * The widths of the characters indexed by the characters themselves.\n+     */\n+    private int[] charWidths;\n+\n+    /**\n+     * Creates a new XFontMetrics for the specified font.\n+     *\n+     * @param font the font\n+     */\n+    protected XFontMetrics(Font font)\n+    {\n+      super(font);\n+      metricsCache = new HashMap();\n+      Fontable.FontReply info = getXFont().info();\n+      ascent = info.font_ascent();\n+      descent = info.font_descent();\n+      maxAdvance = info.max_bounds().character_width();\n+      leading = 0; // TODO: Not provided by X. Possible not needed.\n+\n+      if (info.min_byte1() == 0 && info.max_byte1() == 0)\n+        readCharWidthsLinear(info);\n+      else\n+        readCharWidthsNonLinear(info);\n+    }\n+\n+    /**\n+     * Reads the character widths when specified in a linear fashion. That is\n+     * when the min-byte1 and max-byte2 fields are both zero in the X protocol.\n+     *\n+     * @param info the font info reply\n+     */\n+    private void readCharWidthsLinear(Fontable.FontReply info)\n+    {\n+      int startIndex = info.min_char_or_byte2();\n+      int endIndex = info.max_char_or_byte2();\n+      charWidths = new int[endIndex + 1];\n+      // All the characters before startIndex are zero width.\n+      for (int i = 0; i < startIndex; i++)\n+        {\n+          charWidths[i] = 0;\n+        }\n+      // All the other character info is fetched from the font info.\n+      int index = startIndex;\n+      Iterator charInfos = info.char_infos().iterator();\n+      while (charInfos.hasNext())\n+        {\n+          Fontable.FontReply.CharInfo charInfo =\n+            (Fontable.FontReply.CharInfo) charInfos.next();\n+          charWidths[index] = charInfo.character_width();\n+          index++;\n+        }\n+    }\n+\n+    private void readCharWidthsNonLinear(Fontable.FontReply info)\n+    {\n+      // TODO: Implement.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    /**\n+     * Returns the ascent of the font.\n+     *\n+     * @return the ascent of the font\n+     */\n+    public int getAscent()\n+    {\n+      return ascent;\n+    }\n+\n+    /**\n+     * Returns the descent of the font.\n+     *\n+     * @return the descent of the font\n+     */\n+    public int getDescent()\n+    {\n+      return descent;\n+    }\n+\n+    /**\n+     * Returns the overall height of the font. This is the distance from\n+     * baseline to baseline (usually ascent + descent + leading).\n+     *\n+     * @return the overall height of the font\n+     */\n+    public int getHeight()\n+    {\n+      return ascent + descent;\n+    }\n+\n+    /**\n+     * Returns the leading of the font.\n+     *\n+     * @return the leading of the font\n+     */\n+    public int getLeading()\n+    {\n+      return leading;\n+    }\n+\n+    /**\n+     * Returns the maximum advance for this font.\n+     *\n+     * @return the maximum advance for this font\n+     */\n+    public int getMaxAdvance()\n+    {\n+      return maxAdvance;\n+    }\n+\n+    /**\n+     * Determines the width of the specified character <code>c</code>.\n+     *\n+     * @param c the character\n+     *\n+     * @return the width of the character\n+     */\n+    public int charWidth(char c)\n+    {\n+      int width;\n+      if (c > charWidths.length)\n+        width = charWidths['?'];\n+      else\n+        width = charWidths[c];\n+      return width;\n+    }\n+\n+    /**\n+     * Determines the overall width of the specified string.\n+     *\n+     * @param c the char buffer holding the string\n+     * @param offset the starting offset of the string in the buffer\n+     * @param length the number of characters in the string buffer \n+     *\n+     * @return the overall width of the specified string\n+     */\n+    public int charsWidth(char[] c, int offset, int length)\n+    {\n+      int width = 0;\n+      if (c.length > 0 && length > 0)\n+        {\n+          String s = new String(c, offset, length);\n+          width = stringWidth(s);\n+        }\n+      return width;\n+    }\n+\n+    /**\n+     * Determines the overall width of the specified string.\n+     *\n+     * @param s the string\n+     *\n+     * @return the overall width of the specified string\n+     */\n+    public int stringWidth(String s)\n+    {\n+      int width = 0;\n+      if (s.length() > 0)\n+        {\n+          if (metricsCache.containsKey(s))\n+            {\n+              width = ((Integer) metricsCache.get(s)).intValue();\n+            }\n+          else\n+            {\n+              Fontable.TextExtentReply extents = getXFont().text_extent(s);\n+              /*\n+               System.err.println(\"string: '\" + s + \"' : \");\n+               System.err.println(\"ascent: \" + extents.getAscent());\n+               System.err.println(\"descent: \" + extents.getDescent());\n+               System.err.println(\"overall ascent: \" + extents.getOverallAscent());\n+               System.err.println(\"overall descent: \" + extents.getOverallDescent());\n+               System.err.println(\"overall width: \" + extents.getOverallWidth());\n+               System.err.println(\"overall left: \" + extents.getOverallLeft());\n+               System.err.println(\"overall right: \" + extents.getOverallRight());\n+               */\n+              width = extents.overall_width(); // + extents.overall_left();\n+              //System.err.println(\"String: \" + s + \", width: \" + width);\n+              metricsCache.put(s, new Integer(width));\n+            }\n+        }\n+      //System.err.print(\"stringWidth: '\" + s + \"': \");\n+      //System.err.println(width);\n+      return width;\n+    }\n+  }\n+\n+  /**\n+   * The LineMetrics implementation for the XFontPeer.\n+   */\n+  private class XLineMetrics\n+    extends LineMetrics\n+  {\n+\n+    /**\n+     * Returns the ascent of the font.\n+     *\n+     * @return the ascent of the font\n+     */\n+    public float getAscent()\n+    {\n+      return fontMetrics.ascent;\n+    }\n+\n+    public int getBaselineIndex()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    public float[] getBaselineOffsets()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    /**\n+     * Returns the descent of the font.\n+     *\n+     * @return the descent of the font\n+     */\n+    public float getDescent()\n+    {\n+      return fontMetrics.descent;\n+    }\n+\n+    /**\n+     * Returns the overall height of the font. This is the distance from\n+     * baseline to baseline (usually ascent + descent + leading).\n+     *\n+     * @return the overall height of the font\n+     */\n+    public float getHeight()\n+    {\n+      return fontMetrics.ascent + fontMetrics.descent;\n+    }\n+\n+    /**\n+     * Returns the leading of the font.\n+     *\n+     * @return the leading of the font\n+     */\n+    public float getLeading()\n+    {\n+      return fontMetrics.leading;\n+    }\n+\n+    public int getNumChars()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    public float getStrikethroughOffset()\n+    {\n+      return 0.F; // TODO: Provided by X??\n+    }\n+\n+    public float getStrikethroughThickness()\n+    {\n+      return 1.F; // TODO: Provided by X??\n+    }\n+\n+    public float getUnderlineOffset()\n+    {\n+      return 0.F; // TODO: Provided by X??\n+    }\n+\n+    public float getUnderlineThickness()\n+    {\n+      return 1.F; // TODO: Provided by X??\n+    }\n+      \n+  }\n+\n+  /**\n+   * The X font.\n+   */\n+  private gnu.x11.Font xfont;\n+\n+  private String name;\n+\n+  private int style;\n+\n+  private int size;\n+\n+  /**\n+   * The font metrics for this font.\n+   */\n+  XFontMetrics fontMetrics; \n+\n+  /**\n+   * Creates a new XFontPeer for the specified font name, style and size.\n+   *\n+   * @param name the font name\n+   * @param style the font style (bold / italic / normal)\n+   * @param size the size of the font\n+   */\n+  public XFontPeer(String name, int style, int size)\n+  {\n+    super(name, style, size);\n+    this.name = name;\n+    this.style = style;\n+    this.size = size;\n+  }\n+\n+  /**\n+   * Creates a new XFontPeer for the specified font name and style\n+   * attributes.\n+   *\n+   * @param name the font name\n+   * @param atts the font attributes\n+   */\n+  public XFontPeer(String name, Map atts)\n+  {\n+    super(name, atts);\n+    String family = name;\n+    if (family == null || family.equals(\"\"))\n+      family = (String) atts.get(TextAttribute.FAMILY);\n+    if (family == null)\n+      family = \"SansSerif\";\n+\n+    int size = 12;\n+    Float sizeFl = (Float) atts.get(TextAttribute.SIZE);\n+    if (sizeFl != null)\n+      size = sizeFl.intValue();\n+\n+    int style = 0;\n+    // Detect italic attribute.\n+    Float posture = (Float) atts.get(TextAttribute.POSTURE);\n+    if (posture != null && !posture.equals(TextAttribute.POSTURE_REGULAR))\n+      style |= Font.ITALIC;\n+\n+    // Detect bold attribute.\n+    Float weight = (Float) atts.get(TextAttribute.WEIGHT);\n+    if (weight != null && weight.compareTo(TextAttribute.WEIGHT_REGULAR) > 0)\n+      style |= Font.BOLD;\n+\n+    this.name = name;\n+    this.style = style;\n+    this.size = size;\n+  }\n+\n+  /**\n+   * Initializes the font peer with the specified attributes. This method is\n+   * called from both constructors.\n+   *\n+   * @param name the font name\n+   * @param style the font style\n+   * @param size the font size\n+   */\n+  private void init(String name, int style, int size)\n+  {\n+    GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    GraphicsDevice dev = env.getDefaultScreenDevice();\n+    if (dev instanceof XGraphicsDevice)\n+      {\n+        Display display = ((XGraphicsDevice) dev).getDisplay();\n+        String fontDescr = encodeFont(name, style, size);\n+        if (XToolkit.DEBUG)\n+          System.err.println(\"XLFD font description: \" + fontDescr);\n+        xfont = new gnu.x11.Font(display, fontDescr);\n+      }\n+    else\n+      {\n+        throw new AWTError(\"Local GraphicsEnvironment is not XWindowGraphicsEnvironment\");\n+      }\n+  }\n+\n+  public boolean canDisplay(Font font, char c)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int canDisplayUpTo(Font font, CharacterIterator i, int start, int limit)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public String getSubFamilyName(Font font, Locale locale)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public String getPostScriptName(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int getNumGlyphs(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int getMissingGlyphCode(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public byte getBaselineFor(Font font, char c)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public String getGlyphName(Font font, int glyphIndex)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public GlyphVector createGlyphVector(Font font, FontRenderContext frc,\n+                                       CharacterIterator ci)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public GlyphVector createGlyphVector(Font font, FontRenderContext ctx,\n+                                       int[] glyphCodes)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public GlyphVector layoutGlyphVector(Font font, FontRenderContext frc,\n+                                       char[] chars, int start, int limit,\n+                                       int flags)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  /**\n+   * Returns the font metrics for the specified font.\n+   *\n+   * @param font the font for which to fetch the font metrics\n+   *\n+   * @return the font metrics for the specified font\n+   */\n+  public FontMetrics getFontMetrics(Font font)\n+  {\n+    if (font.getPeer() != this)\n+      throw new AWTError(\"The specified font has a different peer than this\");\n+\n+    if (fontMetrics == null)\n+      fontMetrics = new XFontMetrics(font);\n+    return fontMetrics;\n+  }\n+\n+  /**\n+   * Frees the font in the X server.\n+   */\n+  protected void finalize()\n+  {\n+    if (xfont != null)\n+      xfont.close();\n+  }\n+\n+  public boolean hasUniformLineMetrics(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  /**\n+   * Returns the line metrics for this font and the specified string and\n+   * font render context.\n+   */\n+  public LineMetrics getLineMetrics(Font font, CharacterIterator ci, int begin,\n+                                    int limit, FontRenderContext rc)\n+  {\n+    return new XLineMetrics();\n+  }\n+\n+  public Rectangle2D getMaxCharBounds(Font font, FontRenderContext rc)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public Rectangle2D getStringBounds(Font font, CharacterIterator ci,\n+                                     int begin, int limit, FontRenderContext frc)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  /**\n+   * Encodes a font name + style + size specification into a X logical font\n+   * description (XLFD) as described here:\n+   *\n+   * http://www.meretrx.com/e93/docs/xlfd.html\n+   *\n+   * This is implemented to look up the font description in the\n+   * fonts.properties of this package.\n+   *\n+   * @param name the font name\n+   * @param atts the text attributes\n+   *\n+   * @return the encoded font description\n+   */\n+  static String encodeFont(String name, Map atts)\n+  {\n+    String family = name;\n+    if (family == null || family.equals(\"\"))\n+      family = (String) atts.get(TextAttribute.FAMILY);\n+    if (family == null)\n+      family = \"SansSerif\";\n+\n+    int size = 12;\n+    Float sizeFl = (Float) atts.get(TextAttribute.SIZE);\n+    if (sizeFl != null)\n+      size = sizeFl.intValue();\n+\n+    int style = 0;\n+    // Detect italic attribute.\n+    Float posture = (Float) atts.get(TextAttribute.POSTURE);\n+    if (posture != null && !posture.equals(TextAttribute.POSTURE_REGULAR))\n+      style |= Font.ITALIC;\n+\n+    // Detect bold attribute.\n+    Float weight = (Float) atts.get(TextAttribute.WEIGHT);\n+    if (weight != null && weight.compareTo(TextAttribute.WEIGHT_REGULAR) > 0)\n+      style |= Font.BOLD;\n+\n+    return encodeFont(name, style, size);\n+  }\n+\n+  /**\n+   * Encodes a font name + style + size specification into a X logical font\n+   * description (XLFD) as described here:\n+   *\n+   * http://www.meretrx.com/e93/docs/xlfd.html\n+   *\n+   * This is implemented to look up the font description in the\n+   * fonts.properties of this package.\n+   *\n+   * @param name the font name\n+   * @param style the font style\n+   * @param size the font size\n+   *\n+   * @return the encoded font description\n+   */\n+  static String encodeFont(String name, int style, int size)\n+  {\n+    StringBuilder key = new StringBuilder();\n+    key.append(validName(name));\n+    key.append('.');\n+    switch (style)\n+    {\n+      case Font.BOLD:\n+        key.append(\"bold\");\n+        break;\n+      case Font.ITALIC:\n+        key.append(\"italic\");\n+        break;\n+      case (Font.BOLD | Font.ITALIC):\n+        key.append(\"bolditalic\");\n+        break;\n+      case Font.PLAIN:\n+      default:\n+        key.append(\"plain\");\n+      \n+    }\n+\n+    String protoType = fontProperties.getProperty(key.toString());\n+    int s = validSize(size);\n+    return protoType.replaceFirst(\"%d\", String.valueOf(s * 10));\n+  }\n+\n+  /**\n+   * Checks the specified font name for a valid font name. If the font name\n+   * is not known, then this returns 'sansserif' as fallback.\n+   *\n+   * @param name the font name to check\n+   *\n+   * @return a valid font name\n+   */\n+  static String validName(String name)\n+  {\n+    String retVal;\n+    if (name.equalsIgnoreCase(\"sansserif\")\n+        || name.equalsIgnoreCase(\"serif\")\n+        || name.equalsIgnoreCase(\"monospaced\")\n+        || name.equalsIgnoreCase(\"dialog\")\n+        || name.equalsIgnoreCase(\"dialoginput\"))\n+      {\n+        retVal = name.toLowerCase();\n+      }\n+    else\n+      {\n+        retVal = \"sansserif\";\n+      }\n+    return retVal;\n+  }\n+\n+  /**\n+   * Translates an arbitrary point size to a size that is typically available\n+   * on an X server. These are the sizes 8, 10, 12, 14, 18 and 24.\n+   *\n+   * @param size the queried size\n+   * @return the real available size\n+   */\n+  private static final int validSize(int size)\n+  {\n+    int val;\n+    if (size <= 9)\n+      val = 8;\n+    else if (size <= 11)\n+      val = 10;\n+    else if (size <= 13)\n+      val = 12;\n+    else if (size <= 17)\n+      val = 14;\n+    else if (size <= 23)\n+      val = 18;\n+    else\n+      val = 24;\n+    return val;\n+  }\n+\n+  /**\n+   * Returns the X Font reference. This lazily loads the font when first\n+   * requested.\n+   *\n+   * @return the X Font reference\n+   */\n+  gnu.x11.Font getXFont()\n+  {\n+    if (xfont == null)\n+      {\n+        init(name, style, size);\n+      }\n+    return xfont;\n+  }\n+}"}, {"sha": "25371de1a41b58c8e10621100bb67bacb026ee5d", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFontPeer2.java", "status": "added", "additions": 335, "deletions": 0, "changes": 335, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer2.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,335 @@\n+/* XFontPeer2.java -- A Java based TTF font peer for X\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.LineMetrics;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.text.CharacterIterator;\n+import java.text.StringCharacterIterator;\n+import java.util.Locale;\n+import java.util.Map;\n+\n+import gnu.java.awt.font.FontDelegate;\n+import gnu.java.awt.font.FontFactory;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+\n+public class XFontPeer2\n+  extends ClasspathFontPeer\n+{\n+\n+  private class XLineMetrics\n+    extends LineMetrics\n+  {\n+\n+    private Font font;\n+//    private CharacterIterator characterIterator;\n+//    private int begin;\n+//    private int limit;\n+    private FontRenderContext fontRenderContext;\n+    XLineMetrics(Font f, CharacterIterator ci, int b, int l,\n+                 FontRenderContext rc)\n+    {\n+      font = f;\n+//      characterIterator = ci;\n+//      begin = b;\n+//      limit = l;\n+      fontRenderContext = rc;\n+    }\n+\n+    public float getAscent()\n+    {\n+      return fontDelegate.getAscent(font.getSize(), fontRenderContext.getTransform(),\n+                             fontRenderContext.isAntiAliased(),\n+                             fontRenderContext.usesFractionalMetrics(), true);\n+      }\n+\n+    public int getBaselineIndex()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    public float[] getBaselineOffsets()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    public float getDescent()\n+    {\n+      return (int) fontDelegate.getDescent(font.getSize(),\n+                                           new AffineTransform(), false, false,\n+                                           false);\n+    }\n+\n+    public float getHeight()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    public float getLeading()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    public int getNumChars()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    public float getStrikethroughOffset()\n+    {\n+      return 0.F;\n+    }\n+\n+    public float getStrikethroughThickness()\n+    {\n+      return 0.F;\n+    }\n+\n+    public float getUnderlineOffset()\n+    {\n+      return 0.F;\n+    }\n+\n+    public float getUnderlineThickness()\n+    {\n+      return 0.F;\n+    }\n+    \n+  }\n+\n+  private class XFontMetrics\n+    extends FontMetrics\n+  {\n+    XFontMetrics(Font f)\n+    {\n+      super(f);\n+    }\n+\n+    public int getAscent()\n+    {\n+      return (int) fontDelegate.getAscent(getFont().getSize(),\n+                                          new AffineTransform(), false, false,\n+                                          false);\n+    }\n+\n+    public int getDescent()\n+    {\n+      return (int) fontDelegate.getDescent(getFont().getSize(),\n+                                           new AffineTransform(), false, false,\n+                                           false);\n+    }\n+    \n+    public int getHeight()\n+    {\n+      GlyphVector gv = fontDelegate.createGlyphVector(getFont(),\n+                    new FontRenderContext(new AffineTransform(), false, false),\n+                    new StringCharacterIterator(\"m\"));\n+      Rectangle2D b = gv.getVisualBounds();\n+      return (int) b.getHeight();\n+    }\n+\n+    public int charWidth(char c)\n+    {\n+      Point2D advance = new Point2D.Double();\n+      fontDelegate.getAdvance(c, getFont().getSize(), new AffineTransform(),\n+                              false, false, true, advance);\n+      return (int) advance.getX();\n+    }\n+\n+    public int charsWidth(char[] chars, int offs, int len)\n+    {\n+      return stringWidth(new String(chars, offs, len));\n+    }\n+\n+    public int stringWidth(String s)\n+    {\n+      GlyphVector gv = fontDelegate.createGlyphVector(getFont(),\n+                    new FontRenderContext(new AffineTransform(), false, false),\n+                    new StringCharacterIterator(s));\n+      Rectangle2D b = gv.getVisualBounds();\n+      return (int) b.getWidth();\n+    }\n+  }\n+\n+  private FontDelegate fontDelegate;\n+\n+  XFontPeer2(String name, int style, int size)\n+  {\n+    super(name, style, size);\n+    try\n+      {\n+        File fontfile = new File(\"/usr/share/fonts/truetype/ttf-bitstream-vera/Vera.ttf\");\n+        FileInputStream in = new FileInputStream(fontfile);\n+        FileChannel ch = in.getChannel();\n+        ByteBuffer buffer = ch.map(FileChannel.MapMode.READ_ONLY, 0,\n+                                   fontfile.length());\n+        fontDelegate = FontFactory.createFonts(buffer)[0];\n+      }\n+    catch (Exception ex)\n+      {\n+        ex.printStackTrace();\n+      }\n+  }\n+\n+  XFontPeer2(String name, Map atts)\n+  {\n+    super(name, atts);\n+    try\n+      {\n+        File fontfile = new File(\"/usr/share/fonts/truetype/freefont/FreeSans.ttf\");\n+        FileInputStream in = new FileInputStream(fontfile);\n+        FileChannel ch = in.getChannel();\n+        ByteBuffer buffer = ch.map(FileChannel.MapMode.READ_ONLY, 0,\n+                                   fontfile.length());\n+        fontDelegate = FontFactory.createFonts(buffer)[0];\n+      }\n+    catch (Exception ex)\n+      {\n+        ex.printStackTrace();\n+      }\n+  }\n+\n+  public boolean canDisplay(Font font, char c)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public int canDisplayUpTo(Font font, CharacterIterator i, int start, int limit)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public String getSubFamilyName(Font font, Locale locale)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public String getPostScriptName(Font font)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public int getNumGlyphs(Font font)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public int getMissingGlyphCode(Font font)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public byte getBaselineFor(Font font, char c)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public String getGlyphName(Font font, int glyphIndex)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public GlyphVector createGlyphVector(Font font, FontRenderContext frc, CharacterIterator ci)\n+  {\n+    return fontDelegate.createGlyphVector(font, frc, ci);\n+  }\n+\n+  public GlyphVector createGlyphVector(Font font, FontRenderContext ctx, int[] glyphCodes)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public GlyphVector layoutGlyphVector(Font font, FontRenderContext frc, char[] chars, int start, int limit, int flags)\n+  {\n+    StringCharacterIterator i = new StringCharacterIterator(new String(chars), start, limit, 0);\n+    return fontDelegate.createGlyphVector(font, frc, i);\n+  }\n+\n+  public FontMetrics getFontMetrics(Font font)\n+  {\n+    return new XFontMetrics(font);\n+  }\n+\n+  public boolean hasUniformLineMetrics(Font font)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public LineMetrics getLineMetrics(Font font, CharacterIterator ci, int begin, int limit, FontRenderContext rc)\n+  {\n+    return new XLineMetrics(font, ci, begin, limit, rc);\n+  }\n+\n+  public Rectangle2D getMaxCharBounds(Font font, FontRenderContext rc)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public Rectangle2D getStringBounds(Font font, CharacterIterator ci, int begin, int limit, FontRenderContext frc)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+}"}, {"sha": "439a2a7bbf18898b4cf6fa1d3fcb98ee44b7c436", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFramePeer.java", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,140 @@\n+/* XFramePeer.java -- The X FramePeer implementation\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.Component;\n+import java.awt.EventQueue;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.MenuBar;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.PaintEvent;\n+import java.awt.event.WindowEvent;\n+import java.awt.peer.FramePeer;\n+\n+import gnu.java.awt.peer.swing.SwingFramePeer;\n+import gnu.x11.Window;\n+import gnu.x11.event.Event;\n+\n+public class XFramePeer\n+  extends XWindowPeer\n+  implements FramePeer\n+{\n+\n+  XFramePeer(Frame f)\n+  {\n+    super(f);\n+  }\n+\n+  public void setIconImage(Image image)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public void setMenuBar(MenuBar mb)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public void setResizable(boolean resizable)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public void setTitle(String title)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int getState()\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public void setState(int state)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public void setMaximizedBounds(Rectangle r)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+  \n+  /**\n+   * Check if this frame peer supports being restacked.\n+   * \n+   * @return true if this frame peer can be restacked,\n+   * false otherwise\n+   * @since 1.5\n+   */\n+  public boolean isRestackSupported()\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+  \n+  /**\n+   * Sets the bounds of this frame peer.\n+   * \n+   * @param x the new x co-ordinate\n+   * @param y the new y co-ordinate\n+   * @param width the new width\n+   * @param height the new height\n+   * @since 1.5\n+   */\n+  public void setBoundsPrivate(int x, int y, int width, int height)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+}"}, {"sha": "134d7d3305e2d45bd05942b7590e44591a2e86ec", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphics.java", "status": "added", "additions": 792, "deletions": 0, "changes": 792, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "patch": "@@ -0,0 +1,792 @@\n+/* XGraphics.java -- The Graphics implementation for X\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.x;\n+\n+import gnu.x11.Colormap;\n+import gnu.x11.Data;\n+import gnu.x11.Display;\n+import gnu.x11.Drawable;\n+import gnu.x11.GC;\n+import gnu.x11.Pixmap;\n+import gnu.x11.Point;\n+import gnu.x11.image.ZPixmap;\n+\n+import java.awt.AWTError;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.Toolkit;\n+import java.awt.Transparency;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.ImageProducer;\n+import java.text.AttributedCharacterIterator;\n+import java.util.HashMap;\n+\n+public class XGraphics\n+  extends Graphics\n+  implements Cloneable\n+{\n+\n+  /**\n+   * The X Drawable to draw on.\n+   */\n+  private Drawable xdrawable;\n+\n+  /**\n+   * The X graphics context (GC).\n+   */\n+  private GC xgc;\n+\n+  /**\n+   * The current translation.\n+   */\n+  private int translateX;\n+  private int translateY;\n+\n+  /**\n+   * The current clip. Possibly null.\n+   */\n+  private Rectangle clip;\n+\n+  /**\n+   * The current font, possibly null.\n+   */\n+  private Font font;\n+\n+  /**\n+   * The current foreground color, possibly null.\n+   */\n+  private Color foreground;\n+\n+  /**\n+   * Indicates if this object has been disposed.\n+   */\n+  private boolean disposed = false;\n+\n+  // TODO: Workaround for limitation in current Escher.\n+  private Pixmap.Format pixmapFormat;\n+  private int imageByteOrder;\n+  private int pixelByteCount;\n+  \n+  /**\n+   * Creates a new XGraphics on the specified X Drawable.\n+   *\n+   * @param d the X Drawable for which we create the Graphics\n+   */\n+  XGraphics(Drawable d)\n+  {\n+    xdrawable = d;\n+    xgc = new GC(d);\n+    translateX = 0;\n+    translateY = 0;\n+    clip = new Rectangle(0, 0, d.width, d.height);\n+\n+    Display display = xdrawable.display;\n+    pixmapFormat = display.default_pixmap_format;\n+    imageByteOrder = display.image_byte_order;\n+    pixelByteCount = pixmapFormat.bits_per_pixel () / 8;\n+  }\n+\n+  /**\n+   * Creates an exact copy of this graphics context.\n+   *\n+   * @return an exact copy of this graphics context\n+   */\n+  public Graphics create()\n+  {\n+    XGraphics copy = (XGraphics) clone();\n+    return copy;\n+  }\n+\n+  /**\n+   * Translates the origin by (x, y).\n+   */\n+  public void translate(int x, int y)\n+  {\n+    translateX += x;\n+    translateY += y;\n+    if (clip != null)\n+      {\n+        clip.x -= x;\n+        clip.y -= y;\n+      }\n+  }\n+\n+  /**\n+   * Returns the current foreground color, possibly <code>null</code>.\n+   *\n+   * @return the current foreground color, possibly <code>null</code>\n+   */\n+  public Color getColor()\n+  {\n+    return foreground;\n+  }\n+\n+  /**\n+   * Sets the current foreground color. A <code>null</code> value doesn't\n+   * change the current setting.\n+   *\n+   * @param c the foreground color to set\n+   */\n+  public void setColor(Color c)\n+  {\n+    if (c != null)\n+      {\n+        XToolkit tk = (XToolkit) Toolkit.getDefaultToolkit();\n+        HashMap colorMap = tk.colorMap;\n+        gnu.x11.Color col = (gnu.x11.Color) colorMap.get(c);\n+        if (col == null)\n+          {\n+            Colormap map = xdrawable.display.default_colormap;\n+            col = map.alloc_color (c.getRed() * 256,\n+                                   c.getGreen() * 256,\n+                                   c.getBlue() * 256);\n+            colorMap.put(c, col);\n+          }\n+        xgc.set_foreground(col);\n+        foreground = c;\n+      }\n+  }\n+\n+  public void setPaintMode()\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public void setXORMode(Color color)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  /**\n+   * Returns the current font, possibly <code>null</code>.\n+   *\n+   * @return the current font, possibly <code>null</code>\n+   */\n+  public Font getFont()\n+  {\n+    return font;\n+  }\n+\n+  /**\n+   * Sets the font on the graphics context. A <code>null</code> value doesn't\n+   * change the current setting.\n+   *\n+   * @param f the font to set\n+   */\n+  public void setFont(Font f)\n+  {\n+    if (f != null)\n+      {\n+        XFontPeer xFontPeer = (XFontPeer) f.getPeer();\n+        xgc.set_font(xFontPeer.getXFont());\n+        font = f;\n+      }\n+  }\n+\n+  /**\n+   * Returns the font metrics for the specified font.\n+   *\n+   * @param font the font for which we want the font metrics\n+   *\n+   * @return the font metrics for the specified font\n+   */\n+  public FontMetrics getFontMetrics(Font font)\n+  {\n+    if (font == null)\n+      {\n+        if (this.font == null)\n+          setFont(new Font(\"Dialog\", Font.PLAIN, 12));\n+        font = this.font;\n+      }\n+    XFontPeer xFontPeer = (XFontPeer) font.getPeer();\n+    return xFontPeer.getFontMetrics(font);\n+  }\n+\n+  /**\n+   * Returns the bounds of the current clip.\n+   *\n+   * @return the bounds of the current clip\n+   */\n+  public Rectangle getClipBounds()\n+  {\n+    return clip != null ? clip.getBounds() : null;\n+  }\n+\n+  /**\n+   * Clips the current clip with the specified clip.\n+   */\n+  public void clipRect(int x, int y, int width, int height)\n+  {\n+    if (clip == null)\n+      {\n+        clip = new Rectangle(x, y, width, height);\n+      }\n+    else\n+      {\n+        computeIntersection(x, y, width, height, clip);\n+      }\n+    // Update the X clip setting.\n+    setXClip(clip.x, clip.y, clip.width, clip.height);\n+  }\n+\n+  /**\n+   * Returns <code>true</code> when the specified rectangle intersects with\n+   * the current clip, <code>false</code> otherwise. This is overridden to\n+   * avoid unnecessary creation of Rectangles via getBounds().\n+   *\n+   * @param x the x coordinate of the rectangle\n+   * @param y the y coordinate of the rectangle\n+   * @param w the width of the rectangle\n+   * @param h the height of the rectangle\n+   *\n+   * @return <code>true</code> when the specified rectangle intersects with\n+   *         the current clip, <code>false</code> otherwise\n+   */\n+  public boolean hitClip(int x, int y, int w, int h)\n+  {\n+    boolean hit;\n+    if (clip == null)\n+      {\n+        hit = true;\n+      }\n+    else\n+      {\n+        // It's easier to determine if the rectangle lies outside the clip,\n+        // so we determine that and reverse the result (if it's not completely\n+        // outside, it most likely hits the clip rectangle).\n+        int x2 = x + w;\n+        int y2 = y + h;\n+        int clipX2 = clip.x + clip.width;\n+        int clipY2 = clip.y + clip.height;\n+        boolean outside = (x < clip.x && x2 < clip.x)     // Left.\n+                          || (x > clipX2  && x2 > clipX2) // Right.\n+                          || (y < clip.y && y2 < clip.y)  // Top.\n+                          || (y > clipY2 && y2 > clipY2); // Bottom.\n+        hit = ! outside;\n+      }\n+    return hit;\n+  }\n+\n+  public void setClip(int x, int y, int width, int height)\n+  {\n+    if (clip != null)\n+      clip.setBounds(x, y, width, height);\n+    else\n+      clip = new Rectangle(x, y, width, height);\n+    setXClip(clip.x, clip.y, clip.width, clip.height);\n+  }\n+\n+  /**\n+   * Sets the clip on the X server GC. The coordinates are not yet translated,\n+   * this will be performed by the X server.\n+   *\n+   * @param x the clip, X coordinate\n+   * @param y the clip, Y coordinate\n+   * @param w the clip, width\n+   * @param h the clip, height\n+   */\n+  private void setXClip(int x, int y, int w, int h)\n+  {\n+    gnu.x11.Rectangle[] clipRects = new gnu.x11.Rectangle[] {\n+                                  new gnu.x11.Rectangle(x, y, w, h) };\n+    xgc.set_clip_rectangles(translateX, translateY, clipRects, GC.YX_BANDED);\n+  }\n+\n+  public Shape getClip()\n+  {\n+    // Return a copy here, so nobody can trash our clip.\n+    return clip == null ? null : clip.getBounds();\n+  }\n+\n+  /**\n+   * Sets the current clip.\n+   *\n+   * @param c the clip to set\n+   */\n+  public void setClip(Shape c)\n+  {\n+    if (c != null)\n+      {\n+        Rectangle b;\n+        if (c instanceof Rectangle)\n+          {\n+            b = (Rectangle) c;\n+          }\n+        else\n+          {\n+            b = c.getBounds();\n+          }\n+        clip.setBounds(b);\n+        setXClip(b.x, b.y, b.width, b.height);\n+      }\n+    else\n+      {\n+        clip.setBounds(0, 0, xdrawable.width, xdrawable.height);\n+        setXClip(0, 0, xdrawable.width, xdrawable.height);\n+      }\n+  }\n+\n+  public void copyArea(int x, int y, int width, int height, int dx, int dy)\n+  {\n+    // Clip and translate src rectangle.\n+    int srcX = Math.min(Math.max(x, clip.x), clip.x + clip.width)\n+               + translateX;\n+    int srcY = Math.min(Math.max(y, clip.y), clip.y + clip.height)\n+               + translateY;\n+    int srcWidth = Math.min(Math.max(x + width, clip.x),\n+                            clip.x + clip.width) - x;\n+    int srcHeight = Math.min(Math.max(y + height, clip.y),\n+                            clip.y + clip.height) - y;\n+    xdrawable.copy_area(xdrawable, xgc, srcX, srcY, srcWidth, srcHeight,\n+                        srcX + dx, srcY + dy);\n+  }\n+\n+  /**\n+   * Draws a line from point (x1, y1) to point (x2, y2).\n+   */\n+  public void drawLine(int x1, int y1, int x2, int y2)\n+  {\n+    //System.err.println(\"drawLine: \" + (x1 + translateX) + \", \" + ( y1 + translateY) + \", \" + (x2 + translateX) + \", \" + (y2 + translateY) + \" on: \" + xdrawable);\n+    xdrawable.line(xgc, x1 + translateX, y1 + translateY,\n+                   x2 + translateX, y2 + translateY);\n+  }\n+\n+  /**\n+   * Fills the specified rectangle.\n+   */\n+  public void fillRect(int x, int y, int width, int height)\n+  {\n+    xdrawable.rectangle(xgc, x + translateX, y + translateY,\n+                        width, height, true);\n+  }\n+\n+  public void clearRect(int x, int y, int width, int height)\n+  {\n+    xgc.set_foreground(Color.WHITE.getRGB());\n+    xdrawable.rectangle(xgc, x, y, width, height, true);\n+    if (foreground != null)\n+      xgc.set_foreground(foreground.getRGB());\n+  }\n+\n+  public void drawRoundRect(int x, int y, int width, int height, int arcWidth,\n+                            int arcHeight)\n+  {\n+    // Draw 4 lines.\n+    int arcRadiusX = arcWidth / 2;\n+    int arcRadiusY = arcHeight / 2;\n+    drawLine(x + arcRadiusX, y, x + width - arcRadiusX, y);\n+    drawLine(x, y + arcRadiusY, x, y + height - arcRadiusY);\n+    drawLine(x + arcRadiusX, y + height, x + width - arcRadiusX, y + height);\n+    drawLine(x + width, y + arcRadiusY, x + width, y + height - arcRadiusY);\n+\n+    // Draw the 4 arcs at the corners.\n+    // Upper left.\n+    drawArc(x, y, arcWidth, arcHeight, 90, 90);\n+    // Lower left.\n+    drawArc(x, y + height - arcHeight, arcWidth, arcHeight, 180, 90);\n+    // Upper right.\n+    drawArc(x + width - arcWidth, y, arcWidth, arcHeight, 0, 90);\n+    // Lower right.\n+    drawArc(x + width - arcWidth, y + height - arcHeight, arcWidth, arcHeight,\n+            270, 90);\n+  }\n+\n+  public void fillRoundRect(int x, int y, int width, int height, int arcWidth,\n+                            int arcHeight)\n+  {\n+    // Fill the 3 rectangles that make up the inner area.\n+    int arcRadiusX = arcWidth / 2;\n+    int arcRadiusY = arcHeight / 2;\n+    // Left.\n+    fillRect(x, y + arcRadiusY, arcRadiusX, height - arcHeight);\n+    // Middle.\n+    fillRect(x + arcRadiusX, y, width - arcWidth, height);\n+    // Right.\n+    fillRect(x + width - arcRadiusX, y + arcRadiusY, arcRadiusX,\n+             height - arcHeight);\n+\n+    // Fill the 4 arcs in the corners.\n+    // Upper left.\n+    fillArc(x, y, arcWidth, arcHeight, 90, 90);\n+    // Lower left.\n+    fillArc(x, y + height - arcHeight, arcWidth, arcHeight, 180, 90);\n+    // Upper right.\n+    fillArc(x + width - arcWidth, y, arcWidth, arcHeight, 0, 90);\n+    // Lower right.\n+    fillArc(x + width - arcWidth, y + height - arcHeight, arcWidth, arcHeight,\n+            270, 90);\n+  }\n+\n+  public void drawOval(int x, int y, int width, int height)\n+  {\n+    xdrawable.arc(xgc, x, y, width, height, 0, 360 * 64, false);\n+  }\n+\n+  public void fillOval(int x, int y, int width, int height)\n+  {\n+    xdrawable.arc(xgc, x, y, width, height, 0, 360 * 64, true);\n+  }\n+\n+  public void drawArc(int x, int y, int width, int height, int arcStart,\n+                      int arcAngle)\n+  {\n+    xdrawable.arc(xgc, x, y, width, height, arcStart * 64, arcAngle * 64, false);\n+  }\n+\n+  public void fillArc(int x, int y, int width, int height, int arcStart,\n+                      int arcAngle)\n+  {\n+    xdrawable.arc(xgc, x, y, width, height, arcStart * 64, arcAngle * 64, true);\n+  }\n+\n+  public void drawPolyline(int[] xPoints, int[] yPoints, int npoints)\n+  {\n+    int numPoints = Math.min(xPoints.length, yPoints.length);\n+    Point[] points = new Point[numPoints];\n+    // FIXME: Improve Escher API to accept arrays to avoid creation\n+    // of many Point objects.\n+    for (int i = 0; i < numPoints; i++)\n+      points[i] = new Point(xPoints[i], yPoints[i]);\n+    xdrawable.poly_line(xgc, points, Drawable.ORIGIN);\n+  }\n+\n+  public void drawPolygon(int[] xPoints, int[] yPoints, int npoints)\n+  {\n+    int numPoints = Math.min(xPoints.length, yPoints.length);\n+    Point[] points = new Point[numPoints];\n+    // FIXME: Improve Escher API to accept arrays to avoid creation\n+    // of many Point objects.\n+    for (int i = 0; i < numPoints; i++)\n+      points[i] = new Point(xPoints[i], yPoints[i]);\n+    xdrawable.poly_line(xgc, points, Drawable.ORIGIN);\n+  }\n+\n+  public void fillPolygon(int[] xPoints, int[] yPoints, int npoints)\n+  {\n+    int numPoints = Math.min(xPoints.length, yPoints.length);\n+    Point[] points = new Point[numPoints];\n+    // FIXME: Improve Escher API to accept arrays to avoid creation\n+    // of many Point objects.\n+    for (int i = 0; i < numPoints; i++)\n+      points[i] = new Point(xPoints[i], yPoints[i]);\n+    xdrawable.fill_poly(xgc, points, Drawable.COMPLEX, Drawable.ORIGIN);\n+  }\n+\n+  /**\n+   * Draws the specified string at (x, y).\n+   */\n+  public void drawString(String string, int x, int y)\n+  {\n+    if (disposed)\n+      throw new AWTError(\"XGraphics already disposed\");\n+\n+    xdrawable.text(xgc, x + translateX, y + translateY, string);\n+  }\n+\n+  public void drawString(AttributedCharacterIterator ci, int x, int y)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  /**\n+   * Draws the specified image on the drawable at position (x,y).\n+   */\n+  public boolean drawImage(Image image, int x, int y, ImageObserver observer)\n+  {\n+    if (image instanceof XImage)\n+      {\n+        XImage xim = (XImage) image;\n+        Pixmap pm = xim.pixmap;\n+        xdrawable.copy_area(pm, xgc, 0, 0, pm.width, pm.height,\n+                            x + translateX, y + translateY);\n+      }\n+    else if (image instanceof BufferedImage\n+        && ((BufferedImage) image).getTransparency() != Transparency.OPAQUE)\n+      {\n+        BufferedImage bi = (BufferedImage) image;\n+        int width = bi.getWidth();\n+        int height = bi.getHeight();\n+        Data img = xdrawable.image(x + translateX, y + translateY,\n+                                   width, height, 0xFFFFFFFF, 2);\n+\n+        // Compute line byte count.\n+        int lineBitCount = width * pixmapFormat.bits_per_pixel ();\n+        int rem = lineBitCount % pixmapFormat.scanline_pad ();\n+        int linePadCount = lineBitCount / pixmapFormat.scanline_pad ()\n+                             + (rem == 0 ? 0 : 1);\n+        int lineByteCount = linePadCount * pixmapFormat.scanline_pad () / 8;\n+\n+        // Composite source and destination pixel data.\n+        int[] trgb = new int[3]; // The device rgb pixels.\n+        for (int yy = 0; yy < height; yy++)\n+          {\n+            for (int xx = 0; xx < width; xx++)\n+              {\n+                getRGB(xx, yy, img, trgb, lineByteCount);\n+                int srgb = bi.getRGB(xx, yy);\n+                float alpha = ((srgb >> 24) & 0xff) / 256F;\n+                float tAlpha = 1.F - alpha;\n+                int red = (srgb >> 16) & 0xFF;\n+                int green = (srgb >> 8) & 0xFF;\n+                int blue = (srgb) & 0xFF;\n+                trgb[0] = (int) (trgb[0] * tAlpha + red * alpha);\n+                trgb[1] = (int) (trgb[1] * tAlpha + green * alpha);\n+                trgb[2] = (int) (trgb[2] * tAlpha + blue * alpha);\n+                setRGB(xx, yy, img, trgb, lineByteCount);\n+              }\n+          }\n+\n+        // Now we have the transparent image composited onto the target\n+        // Image, now we only must copy it to the Drawable.\n+        ZPixmap pm = new ZPixmap(xdrawable.display);\n+        pm.width = width;\n+        pm.height = height;\n+        pm.init();\n+        System.arraycopy(img.data, 32, pm.data, 0, img.data.length - 32);\n+        xdrawable.put_image(xgc, pm, x + translateX, y + translateY);\n+      }\n+    else\n+      {\n+        // Pre-render the image into an XImage.\n+        ImageProducer source = image.getSource();\n+        ImageConverter conv = new ImageConverter();\n+        source.startProduction(conv);\n+        XImage xim = conv.getXImage();\n+        Pixmap pm = xim.pixmap;\n+        xdrawable.copy_area(pm, xgc, 0, 0, pm.width, pm.height,\n+                            x + translateX, y + translateY);\n+      }\n+    return true;\n+  }\n+\n+  /**\n+   * Helper method to work around limitation in the current Escher impl.\n+   *\n+   * @param x the x position\n+   * @param y the y position\n+   * @param img the image data\n+   * @param rgb an 3-size array that holds the rgb values on method exit\n+   */\n+  private void getRGB(int x, int y, Data img, int[] rgb, int lineByteCount)\n+  {\n+    // TODO: Does this also work on non-RGB devices?\n+    int i = y * lineByteCount + pixelByteCount * x;\n+    if (imageByteOrder == gnu.x11.image.Image.LSB_FIRST)\n+      {//if (i >= 5716-33) System.err.println(\"lbc: \" + lineByteCount + \", \" + pixelByteCount);\n+        rgb[2] = img.data[32 + i];\n+        rgb[1] = img.data[32 + i + 1];\n+        rgb[0] = img.data[32 + i + 2];\n+      }\n+    else\n+      {                    // MSB_FIRST\n+        rgb[0] = img.data[32 + i];\n+        rgb[1] = img.data[32 + i + 1];\n+        rgb[2] = img.data[32 + i + 2];\n+      }\n+\n+  }\n+\n+  /**\n+   * Helper method to work around limitation in the current Escher impl.\n+   *\n+   * @param x the x position\n+   * @param y the y position\n+   * @param img the image data\n+   * @param rgb an 3-size array that holds the rgb values on method exit\n+   */\n+  private void setRGB(int x, int y, Data img, int[] rgb, int lineByteCount)\n+  {\n+    // TODO: Does this also work on non-RGB devices?\n+    int i = y * lineByteCount + pixelByteCount * x;\n+    if (imageByteOrder == gnu.x11.image.Image.LSB_FIRST)\n+      {\n+        img.data[32 + i] = (byte) rgb[2];\n+        img.data[32 + i + 1] = (byte) rgb[1];\n+        img.data[32 + i + 2] = (byte) rgb[0];\n+      }\n+    else\n+      {                    // MSB_FIRST\n+        img.data[32 + i] = (byte) rgb[0];\n+        img.data[32 + i + 1] = (byte) rgb[1];\n+        img.data[32 + i + 2] = (byte) rgb[2];\n+      }\n+  }\n+\n+  public boolean drawImage(Image image, int x, int y, int width, int height,\n+                           ImageObserver observer)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public boolean drawImage(Image image, int x, int y, Color bgcolor,\n+                           ImageObserver observer)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public boolean drawImage(Image image, int x, int y, int width, int height,\n+                           Color bgcolor, ImageObserver observer)\n+  {\n+    // FIXME: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented\");\n+  }\n+\n+  public boolean drawImage(Image image, int dx1, int dy1, int dx2, int dy2,\n+                           int sx1, int sy1, int sx2, int sy2,\n+                           ImageObserver observer)\n+  {\n+    return drawImage(image, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, null,\n+                     observer);\n+  }\n+\n+  public boolean drawImage(Image image, int dx1, int dy1, int dx2, int dy2,\n+                           int sx1, int sy1, int sx2, int sy2, Color bgcolor,\n+                           ImageObserver observer)\n+  {\n+\n+    // FIXME: What to do with bgcolor?\n+\n+    // Scale the image.\n+    int sw = image.getWidth(observer);\n+    int sh = image.getHeight(observer);\n+    double scaleX = Math.abs(dx2 - dx1) / (double) Math.abs(sx2 - sx1);\n+    double scaleY = Math.abs(dy2 - dy1) / (double) Math.abs(sy2 - sy1);\n+    Image scaled = image.getScaledInstance((int) (scaleX * sw),\n+                                           (int) (scaleY * sh),\n+                                           Image.SCALE_FAST);\n+\n+    // Scaled source coordinates.\n+    int sx1s = (int) (scaleX * Math.min(sx1, sx2));\n+    int sx2s = (int) (scaleX * Math.max(sx1, sx2));\n+\n+    // Temporarily clip to the target rectangle.\n+    Rectangle old = clip;\n+    clipRect(dx1, dy1, dx2 - dx1, dy2 - dy1);\n+\n+    // Draw scaled image.\n+    boolean res = drawImage(scaled, dx1 - sx1s, dy1 - sx2s, observer);\n+\n+    // Reset clip.\n+    setClip(old);\n+\n+    return res;\n+  }\n+\n+  /**\n+   * Frees any resources associated with this object.\n+   */\n+  public void dispose()\n+  {\n+    if (! disposed)\n+      {\n+        xgc.free();\n+        xdrawable.display.flush();\n+        disposed = true;\n+      }\n+  }\n+\n+  // Additional helper methods.\n+\n+  /**\n+   * Creates and returns an exact copy of this XGraphics.\n+   */\n+  protected Object clone()\n+  {\n+    try\n+      {\n+        XGraphics copy = (XGraphics) super.clone();\n+        copy.xgc = xgc.copy();\n+        if (clip != null)\n+          {\n+            copy.clip = new Rectangle(clip);\n+            copy.setXClip(clip.x, clip.y, clip.width, clip.height);\n+          }\n+        return copy;\n+      }\n+    catch (CloneNotSupportedException ex)\n+      {\n+        assert false;\n+      }\n+    return null;\n+  }\n+  \n+  /**\n+   * Computes the intersection between two rectangles and stores the result\n+   * int the second rectangle.\n+   *\n+   * This method has been copied from {@link javax.swing.SwingUtilities}.\n+   *\n+   * @param x the x coordinate of the rectangle #1\n+   * @param y the y coordinate of the rectangle #1\n+   * @param w the width of the rectangle #1\n+   * @param h the height of the rectangle #1\n+   * @param rect the rectangle #2 and output rectangle\n+   */\n+  private static void computeIntersection(int x, int y, int w, int h,\n+                                          Rectangle rect)\n+  {\n+    int x2 = (int) rect.x;\n+    int y2 = (int) rect.y;\n+    int w2 = (int) rect.width;\n+    int h2 = (int) rect.height;\n+\n+    int dx = (x > x2) ? x : x2;\n+    int dy = (y > y2) ? y : y2;\n+    int dw = (x + w < x2 + w2) ? (x + w - dx) : (x2 + w2 - dx);\n+    int dh = (y + h < y2 + h2) ? (y + h - dy) : (y2 + h2 - dy);\n+\n+    if (dw >= 0 && dh >= 0)\n+      rect.setBounds(dx, dy, dw, dh);\n+    else\n+      rect.setBounds(0, 0, 0, 0);\n+  }\n+\n+\n+}"}, {"sha": "5dc79ff5c2b4250f31a831609a2f3acde4553726", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphics2D.java", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "d6e66cbd202cea0d03bcfcedabba786cf54b816b", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsConfiguration.java", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "6a020ec4e7a55fa7fc1758e8697ec438c0c269bf", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsDevice.java", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsDevice.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "65383a6cb0fe4831be34e3ed5857ac33dad82106", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsEnvironment.java", "status": "added", "additions": 202, "deletions": 0, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsEnvironment.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "b9e993628f5c45f8115ac398b01872286aea1d83", "filename": "libjava/classpath/gnu/java/awt/peer/x/XImage.java", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXImage.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "2613d84d80cc99ac25a67ba11ed81c5b8be0fd14", "filename": "libjava/classpath/gnu/java/awt/peer/x/XLightweightPeer.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXLightweightPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a286fd6f006e5b721262c1bb8604b342924ab510", "filename": "libjava/classpath/gnu/java/awt/peer/x/XToolkit.java", "status": "added", "additions": 608, "deletions": 0, "changes": 608, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "28cc5a5edf55ceeb2a7fdb13074f42bd4016c4f8", "filename": "libjava/classpath/gnu/java/awt/peer/x/XWindowPeer.java", "status": "added", "additions": 255, "deletions": 0, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e4cc8199a5493a1e7723c0bce0b7120511cc0eb6", "filename": "libjava/classpath/gnu/java/awt/print/PostScriptGraphics2D.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FPostScriptGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FPostScriptGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FPostScriptGraphics2D.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e54c56da9359cb1c6c14c93d45074a0bdb367489", "filename": "libjava/classpath/gnu/java/io/PlatformHelper.java", "status": "modified", "additions": 1, "deletions": 93, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "24572a25d5db94b442dd7fd2ee4817c9b735c518", "filename": "libjava/classpath/gnu/java/lang/management/BeanImpl.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "92e68ae76787b8b3d307e47adde5da6f85131e38", "filename": "libjava/classpath/gnu/java/lang/management/ClassLoadingMXBeanImpl.java", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FClassLoadingMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FClassLoadingMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FClassLoadingMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "b3ad898b57cc1f0c733813445a29ea815fb1f9cd", "filename": "libjava/classpath/gnu/java/lang/management/CompilationMXBeanImpl.java", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FCompilationMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FCompilationMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FCompilationMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "b752e6b867297456a0bf31f06519769fdd23cf1c", "filename": "libjava/classpath/gnu/java/lang/management/GarbageCollectorMXBeanImpl.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FGarbageCollectorMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FGarbageCollectorMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FGarbageCollectorMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "064e19a19701dbfb9f84f4d93b1b66a8d5ed250a", "filename": "libjava/classpath/gnu/java/lang/management/MemoryMXBeanImpl.java", "status": "added", "additions": 322, "deletions": 0, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "5766af9cc641929ac08831e9390c8ffe0622681f", "filename": "libjava/classpath/gnu/java/lang/management/MemoryManagerMXBeanImpl.java", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryManagerMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryManagerMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryManagerMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "ed4dccd769e10d9d4f92db63984766f27e0606ee", "filename": "libjava/classpath/gnu/java/lang/management/MemoryPoolMXBeanImpl.java", "status": "added", "additions": 225, "deletions": 0, "changes": 225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryPoolMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryPoolMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryPoolMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9eefc0d9db56167f6a736b608c0f10559f0f1f3f", "filename": "libjava/classpath/gnu/java/lang/management/OperatingSystemMXBeanImpl.java", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FOperatingSystemMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FOperatingSystemMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FOperatingSystemMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e3ebd162e17b5692ee3f4f34359c3d64ca1d2204", "filename": "libjava/classpath/gnu/java/lang/management/RuntimeMXBeanImpl.java", "status": "added", "additions": 197, "deletions": 0, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FRuntimeMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FRuntimeMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FRuntimeMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "609b58da737baf57734c4f82e7af02b4157412f7", "filename": "libjava/classpath/gnu/java/lang/management/ThreadMXBeanImpl.java", "status": "added", "additions": 291, "deletions": 0, "changes": 291, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FThreadMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FThreadMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FThreadMXBeanImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "fc1bafc0cdf3c1ade1ce7bcfda3f39329250b33b", "filename": "libjava/classpath/gnu/java/lang/management/package.html", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2Fpackage.html?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "1165929fc3503cae2c895cfd5ece85766d3c37dc", "filename": "libjava/classpath/gnu/java/net/IndexListParser.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FIndexListParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FIndexListParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FIndexListParser.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8071bbf91f85cef237ebbfaf37c1a2d40eae7181", "filename": "libjava/classpath/gnu/java/net/loader/FileResource.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FFileResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FFileResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FFileResource.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "39d33a4e4be434bc3a282ad53e5bd64bb595ea81", "filename": "libjava/classpath/gnu/java/net/loader/FileURLLoader.java", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FFileURLLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FFileURLLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FFileURLLoader.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9385760d547ba78411d8e9df2f14a2d6a34a8bc7", "filename": "libjava/classpath/gnu/java/net/loader/JarURLLoader.java", "status": "added", "additions": 215, "deletions": 0, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FJarURLLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FJarURLLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FJarURLLoader.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a9db5ce0b1e23a210d573d9b9918aa8b76449d18", "filename": "libjava/classpath/gnu/java/net/loader/JarURLResource.java", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FJarURLResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FJarURLResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FJarURLResource.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f18031581ea6e71b146591eb0f55f9b2b90b32a7", "filename": "libjava/classpath/gnu/java/net/loader/RemoteResource.java", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FRemoteResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FRemoteResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FRemoteResource.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f044740faa559bb1f9d46b4e6fbdc9262063e006", "filename": "libjava/classpath/gnu/java/net/loader/RemoteURLLoader.java", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FRemoteURLLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FRemoteURLLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FRemoteURLLoader.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e367a3388026962b2cdf66a595ab1c50348cdb8a", "filename": "libjava/classpath/gnu/java/net/loader/Resource.java", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FResource.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "d073c54296a3691c8d46877dbe6cbe12c3a8298d", "filename": "libjava/classpath/gnu/java/net/loader/URLLoader.java", "status": "added", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FURLLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FURLLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FURLLoader.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "295a15d2b537a1b3def5e4e000deb20cb80d2af8", "filename": "libjava/classpath/gnu/java/net/loader/URLStreamHandlerCache.java", "status": "renamed", "additions": 35, "deletions": 37, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FURLStreamHandlerCache.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FURLStreamHandlerCache.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Floader%2FURLStreamHandlerCache.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "previous_filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java"}, {"sha": "b262c794e3d11825d2263a49404f70429a93a7c2", "filename": "libjava/classpath/gnu/java/net/local/LocalSocket.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Flocal%2FLocalSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Flocal%2FLocalSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Flocal%2FLocalSocket.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f43305a80279fcbf03c3347e8019e6067272fcee", "filename": "libjava/classpath/gnu/java/net/local/LocalSocketImpl.java", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Flocal%2FLocalSocketImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Flocal%2FLocalSocketImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Flocal%2FLocalSocketImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f5e831c6a01ab9f0d4cf0d87ff02fa5de3cd482e", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPConnection.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a46d1204b6d811c1345a0da1b7867b3ad96a35ff", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPURLConnection.java", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f99806ae42da6ccd251061d5882dd3d0d460173f", "filename": "libjava/classpath/gnu/java/net/protocol/jar/Connection.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "cccaa39885fc08ed6c634077aa971dee07a3407b", "filename": "libjava/classpath/gnu/java/nio/PipeImpl.java", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8745377c58f5376742937c2e004fe25977fa47bf", "filename": "libjava/classpath/gnu/java/nio/SelectionKeyImpl.java", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSelectionKeyImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSelectionKeyImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSelectionKeyImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "d0ec4871367b155a3c3b97561a5a220945291d95", "filename": "libjava/classpath/gnu/java/nio/SelectorImpl.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "30fb2dfba44188929f07070e1f8cc06a8c64deba", "filename": "libjava/classpath/gnu/java/nio/SocketChannelSelectionKeyImpl.java", "status": "renamed", "additions": 27, "deletions": 45, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelSelectionKeyImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelSelectionKeyImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelSelectionKeyImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808", "previous_filename": "libjava/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c"}, {"sha": "ed439e141efb772730e5a97cf227130d5cb11a04", "filename": "libjava/classpath/gnu/java/nio/channels/FileChannelImpl.java", "status": "modified", "additions": 18, "deletions": 31, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "b56e5a90e7209756612c64460dfc32854e345f54", "filename": "libjava/classpath/gnu/java/nio/charset/Provider.java", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "5b7dadfd217c3c208bd4c25206ab1f32a0433299", "filename": "libjava/classpath/gnu/java/rmi/server/ActivatableServerRef.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FActivatableServerRef.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FActivatableServerRef.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FActivatableServerRef.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "2f7cb9a2d948b227efdd8f7fa958a5998759e251", "filename": "libjava/classpath/gnu/java/rmi/server/UnicastServerRef.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServerRef.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServerRef.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServerRef.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "1deb543d4b3036efdfbd147de5fc5c15f175b1f9", "filename": "libjava/classpath/gnu/java/security/Configuration.java.in", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FConfiguration.java.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FConfiguration.java.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FConfiguration.java.in?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "c6271e3f219e8c04c32037c765b2ee07a244e845", "filename": "libjava/classpath/gnu/java/security/Engine.java", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f61cf0fc37ceb3111d2bd7aefa0f7a7fccd7a981", "filename": "libjava/classpath/gnu/java/security/OID.java", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8da3a7d72fe1f51650c5866a9c381e177e48a851", "filename": "libjava/classpath/gnu/java/security/PolicyFile.java", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a515a54280a6871c3f64ba7795592f62476b6abc", "filename": "libjava/classpath/gnu/java/security/Properties.java", "status": "modified", "additions": 67, "deletions": 93, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FProperties.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "053d71778337aaf56efdad951376aa73ae4b2866", "filename": "libjava/classpath/gnu/java/security/Registry.java", "status": "modified", "additions": 38, "deletions": 31, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FRegistry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FRegistry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FRegistry.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "ff1750aeae006b320f02efee84e1a93bd192aa49", "filename": "libjava/classpath/gnu/java/security/hash/BaseHash.java", "status": "modified", "additions": 19, "deletions": 42, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FBaseHash.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FBaseHash.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FBaseHash.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "2a4e487858c1a3c7a6278592b500d62f606df465", "filename": "libjava/classpath/gnu/java/security/hash/HashFactory.java", "status": "modified", "additions": 23, "deletions": 66, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHashFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHashFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHashFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "662934f34ea5430826cebcb55c699c0663798c48", "filename": "libjava/classpath/gnu/java/security/hash/Haval.java", "status": "modified", "additions": 229, "deletions": 181, "changes": 410, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHaval.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHaval.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHaval.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "2c5bdd41a579a2726cc711b2a90b1889a5044166", "filename": "libjava/classpath/gnu/java/security/hash/IMessageDigest.java", "status": "modified", "additions": 32, "deletions": 40, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FIMessageDigest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FIMessageDigest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FIMessageDigest.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8f6b265b037d217f3ea72a73ceac643d51511c37", "filename": "libjava/classpath/gnu/java/security/hash/MD2.java", "status": "modified", "additions": 59, "deletions": 104, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD2.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "dfc1c6bd69f7c2e799e7c19050bf5c83180ebb25", "filename": "libjava/classpath/gnu/java/security/hash/MD4.java", "status": "modified", "additions": 89, "deletions": 80, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD4.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "653078512d5173d6d8acb731370fe2e90ba85c3e", "filename": "libjava/classpath/gnu/java/security/hash/MD5.java", "status": "modified", "additions": 86, "deletions": 80, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD5.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "62f5a05e5bfcc3d05e40bcee80e740d639a3b69f", "filename": "libjava/classpath/gnu/java/security/hash/RipeMD128.java", "status": "modified", "additions": 57, "deletions": 91, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD128.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD128.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD128.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "7949bc2547c18ae70942acfaa6b15647b0a83c36", "filename": "libjava/classpath/gnu/java/security/hash/RipeMD160.java", "status": "modified", "additions": 63, "deletions": 100, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD160.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD160.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD160.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "6adeba0707984635a226850faee1d5d1c33f25bb", "filename": "libjava/classpath/gnu/java/security/hash/Sha160.java", "status": "modified", "additions": 37, "deletions": 104, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha160.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha160.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha160.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "536b1c8bab3cad024ebfdc18a4b7c3e4cb98876c", "filename": "libjava/classpath/gnu/java/security/hash/Sha256.java", "status": "modified", "additions": 62, "deletions": 88, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha256.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha256.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha256.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a47eb67db954514cdfec3e85ba82625b2c7a096e", "filename": "libjava/classpath/gnu/java/security/hash/Sha384.java", "status": "modified", "additions": 80, "deletions": 123, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha384.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha384.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha384.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e6f553ed40ab131afd74c61e7b2830304287cf1e", "filename": "libjava/classpath/gnu/java/security/hash/Sha512.java", "status": "modified", "additions": 84, "deletions": 125, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha512.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha512.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha512.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "101df39efe9e455fee1ddc96f34c6ee5d57d1e0b", "filename": "libjava/classpath/gnu/java/security/hash/Tiger.java", "status": "modified", "additions": 630, "deletions": 709, "changes": 1339, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FTiger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FTiger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FTiger.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "89df5c51bf350c776a04269ae59a9823bc05a38d", "filename": "libjava/classpath/gnu/java/security/hash/Whirlpool.java", "status": "modified", "additions": 67, "deletions": 110, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "159ba3dd8ff5b0c847ef365850cda8e8f933867d", "filename": "libjava/classpath/gnu/java/security/jce/hash/HavalSpi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FHavalSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FHavalSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FHavalSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "268f2fa694104bf99a5aec964b63b713270cd6bc", "filename": "libjava/classpath/gnu/java/security/jce/hash/MD2Spi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD2Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD2Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD2Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "c050ef2df7f60c5109266414b1121d83612d9435", "filename": "libjava/classpath/gnu/java/security/jce/hash/MD4Spi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD4Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD4Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD4Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "6297416940e0fa29a39a2c5c129f12eff2411d6d", "filename": "libjava/classpath/gnu/java/security/jce/hash/MD5Spi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD5Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD5Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD5Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "7342ee55123d2f115af94a868c3c54f1e93fc7e5", "filename": "libjava/classpath/gnu/java/security/jce/hash/MessageDigestAdapter.java", "status": "modified", "additions": 19, "deletions": 31, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMessageDigestAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMessageDigestAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMessageDigestAdapter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "159a1173c1505c29ea1d6700ba8ef3cd32bf9528", "filename": "libjava/classpath/gnu/java/security/jce/hash/RipeMD128Spi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD128Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD128Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD128Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "579ccb26f1453c3010868afe1901d720c9c3390e", "filename": "libjava/classpath/gnu/java/security/jce/hash/RipeMD160Spi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD160Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD160Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD160Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "901cac1915880b72c7cf2b8c3a518b58051e431f", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha160Spi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha160Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha160Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha160Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9d471e65a665d7807f2aa8929609373a488753f7", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha256Spi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha256Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha256Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha256Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "30d5fce09bc2c85a2f97d1362f41096fea794f51", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha384Spi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha384Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha384Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha384Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a2d44ab246196764bc270c5730cd23b75698049d", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha512Spi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha512Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha512Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha512Spi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a21e5fe1081a517bb46d3878a16b92985ffa661c", "filename": "libjava/classpath/gnu/java/security/jce/hash/TigerSpi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FTigerSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FTigerSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FTigerSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "d7a7a4504d4a47c21181df63c66cf02ae8488c61", "filename": "libjava/classpath/gnu/java/security/jce/hash/WhirlpoolSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FWhirlpoolSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FWhirlpoolSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FWhirlpoolSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "c3d4b9412615d6c16e2c37ddb4c558306a27bd09", "filename": "libjava/classpath/gnu/java/security/jce/prng/HavalRandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FHavalRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FHavalRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FHavalRandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8ba286804e64292b8aa0531dc7ec5bb5698769aa", "filename": "libjava/classpath/gnu/java/security/jce/prng/MD2RandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD2RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD2RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD2RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "d4d182970c716813a5e5fb3dbd4d521150c9d461", "filename": "libjava/classpath/gnu/java/security/jce/prng/MD4RandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD4RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD4RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD4RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "be38add0a0d5839615dacd532a27ac7b9d7f987a", "filename": "libjava/classpath/gnu/java/security/jce/prng/MD5RandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD5RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD5RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD5RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "530c3ec2141c392db5f217c85077b9bac3f61cdf", "filename": "libjava/classpath/gnu/java/security/jce/prng/RipeMD128RandomSpi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD128RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD128RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD128RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "6875cdfa91a006460ab26020d811bdec80317306", "filename": "libjava/classpath/gnu/java/security/jce/prng/RipeMD160RandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD160RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD160RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD160RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "5be402ff0054b02b1addeec27dc1417836f18351", "filename": "libjava/classpath/gnu/java/security/jce/prng/SecureRandomAdapter.java", "status": "modified", "additions": 18, "deletions": 35, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSecureRandomAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSecureRandomAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSecureRandomAdapter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9fded67e0cef68d47b947f437a65a1aa33770858", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha160RandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha160RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha160RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha160RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e3999ffe6e9e67c347b583ba7132278332e3c6d0", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha256RandomSpi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha256RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha256RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha256RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "978c8fe38b20c2bdc795998e94cd32cfeddecb4f", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha384RandomSpi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha384RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha384RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha384RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a89e26f004e2b781a2948cf3e84d5f154bf3e0c5", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha512RandomSpi.java", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha512RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha512RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha512RandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "ba4b22fb8927cb6e8ae5ae00036d74bc3072b8a2", "filename": "libjava/classpath/gnu/java/security/jce/prng/TigerRandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FTigerRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FTigerRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FTigerRandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9d937e65f3e5a40b0312172718704dcc047ec819", "filename": "libjava/classpath/gnu/java/security/jce/prng/WhirlpoolRandomSpi.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FWhirlpoolRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FWhirlpoolRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FWhirlpoolRandomSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "7b57dba70a50df1999d79e9446c21b761b2c9d32", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSKeyFactory.java", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "c4453810653835ad06230e933cc594a7ab26d290", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSKeyPairGeneratorSpi.java", "status": "modified", "additions": 21, "deletions": 42, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyPairGeneratorSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyPairGeneratorSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyPairGeneratorSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "eaccb009551b310286926ea4bf437ed4f9a16e1b", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSParameters.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9b20c03b1105457026588567b0c02226fadf54f8", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSRawSignatureSpi.java", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSRawSignatureSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSRawSignatureSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSRawSignatureSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "19ec088c555a4decdfec01557ded3113ece2f096", "filename": "libjava/classpath/gnu/java/security/jce/sig/EncodedKeyFactory.java", "status": "modified", "additions": 37, "deletions": 60, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FEncodedKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FEncodedKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FEncodedKeyFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "bcbbe477d1e3a569b68be7fa350a8a6f45547eed", "filename": "libjava/classpath/gnu/java/security/jce/sig/KeyPairGeneratorAdapter.java", "status": "modified", "additions": 16, "deletions": 28, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FKeyPairGeneratorAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FKeyPairGeneratorAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FKeyPairGeneratorAdapter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "3ba49edc256527f222cbf393e7f4c646de0b51a8", "filename": "libjava/classpath/gnu/java/security/jce/sig/RSAKeyFactory.java", "status": "modified", "additions": 8, "deletions": 42, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "ef53b81159c92c1059c62d4ba8a34169b5dd4940", "filename": "libjava/classpath/gnu/java/security/jce/sig/RSAKeyPairGeneratorSpi.java", "status": "modified", "additions": 14, "deletions": 33, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyPairGeneratorSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyPairGeneratorSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyPairGeneratorSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f1ccbde4dc2da53e8bf75f218ffd1af12b6949ca", "filename": "libjava/classpath/gnu/java/security/jce/sig/RSAPSSRawSignatureSpi.java", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAPSSRawSignatureSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAPSSRawSignatureSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAPSSRawSignatureSpi.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a65d727eed3331657b2c6bf7943e987809f0ef42", "filename": "libjava/classpath/gnu/java/security/jce/sig/SignatureAdapter.java", "status": "modified", "additions": 32, "deletions": 43, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSignatureAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSignatureAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSignatureAdapter.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "f09743d2b6083e4b7d363872d4c28fe380bb1768", "filename": "libjava/classpath/gnu/java/security/key/IKeyPairCodec.java", "status": "modified", "additions": 25, "deletions": 31, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairCodec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8d7842e935fcc94ed4f5128be53dece09da98a2e", "filename": "libjava/classpath/gnu/java/security/key/IKeyPairGenerator.java", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairGenerator.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "e68a7d65c3ae2ed18e2eb8352e855198e0eec619", "filename": "libjava/classpath/gnu/java/security/key/KeyPairCodecFactory.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairCodecFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairCodecFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairCodecFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "4872fc3d1a1d247480b1d378fff2bf06c5aa7da6", "filename": "libjava/classpath/gnu/java/security/key/KeyPairGeneratorFactory.java", "status": "modified", "additions": 18, "deletions": 43, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairGeneratorFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairGeneratorFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairGeneratorFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "657de8dd02dd9eb0bd682b999673cc4a28106eb7", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKey.java", "status": "modified", "additions": 69, "deletions": 59, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "1bad0b62ed6034f04e62757741cae6088aa9988e", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairGenerator.java", "status": "modified", "additions": 98, "deletions": 161, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairGenerator.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "06b8e849a506d09973955500be5c948649aaeac5", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairPKCS8Codec.java", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairPKCS8Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairPKCS8Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairPKCS8Codec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "b1135b75f1f550505c9f3b181b8b605bc9812b06", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairRawCodec.java", "status": "modified", "additions": 108, "deletions": 142, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairRawCodec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "a5e8e9d47eb6984e789ab5ce6ed21b67c1e92bd8", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairX509Codec.java", "status": "modified", "additions": 63, "deletions": 35, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairX509Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairX509Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairX509Codec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "6ed8de8460d4bfc310be2a1661bac937a309f54a", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSPrivateKey.java", "status": "modified", "additions": 31, "deletions": 47, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9e1c4cf0a047a755869d65f8a4f2b2de20250468", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSPublicKey.java", "status": "modified", "additions": 28, "deletions": 44, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "7277599bd540c0443cb2953ec649c944ec27cc24", "filename": "libjava/classpath/gnu/java/security/key/dss/FIPS186.java", "status": "modified", "additions": 38, "deletions": 70, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "4bdce4011a59c82076c4e8e9d4bd4c74e3307df5", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAKey.java", "status": "modified", "additions": 26, "deletions": 46, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "00a1b822ad010654c935c4ecb2804cd074656094", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAPrivateKey.java", "status": "modified", "additions": 55, "deletions": 64, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "fe28d0ba3b050e761a751ea441c1aee0d7d68bff", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAPublicKey.java", "status": "modified", "additions": 32, "deletions": 42, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "c31cc4cc1e02dc2ed498eea1c7c547e1cbf3589d", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairGenerator.java", "status": "modified", "additions": 41, "deletions": 69, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairGenerator.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "7a51d0a0dd07cabbfe2d04a3bd5c3f9384a2de2c", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairPKCS8Codec.java", "status": "modified", "additions": 32, "deletions": 26, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairPKCS8Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairPKCS8Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairPKCS8Codec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "c2650e6a49c68b88971d462562fc165911d13581", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairRawCodec.java", "status": "modified", "additions": 89, "deletions": 121, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairRawCodec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "b11e1c0137136b21d7bcf1f1ec257304bc7e31de", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairX509Codec.java", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairX509Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairX509Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairX509Codec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "d59dba3cd0f5ec542451f79ff057565eae04721b", "filename": "libjava/classpath/gnu/java/security/pkcs/PKCS7SignedData.java", "status": "modified", "additions": 36, "deletions": 30, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fpkcs%2FPKCS7SignedData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fpkcs%2FPKCS7SignedData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fpkcs%2FPKCS7SignedData.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "3066401ac4bae783d6f1319977eb4c079f2de8bc", "filename": "libjava/classpath/gnu/java/security/pkcs/SignerInfo.java", "status": "modified", "additions": 47, "deletions": 32, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fpkcs%2FSignerInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fpkcs%2FSignerInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fpkcs%2FSignerInfo.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "3b7c8cf071f7e03e1048dcf29e9f7aa148400527", "filename": "libjava/classpath/gnu/java/security/prng/BasePRNG.java", "status": "modified", "additions": 9, "deletions": 30, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FBasePRNG.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FBasePRNG.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FBasePRNG.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "95f68f048721db0e9ec22a3871087e359931648f", "filename": "libjava/classpath/gnu/java/security/prng/EntropySource.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FEntropySource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FEntropySource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FEntropySource.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "66ad6d2241bc724d47f2058b68a1ffc91dd1ddfd", "filename": "libjava/classpath/gnu/java/security/prng/IRandom.java", "status": "modified", "additions": 75, "deletions": 81, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FIRandom.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FIRandom.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FIRandom.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "8d5b30baf9042fe58fe2eed663685ce22604dc01", "filename": "libjava/classpath/gnu/java/security/prng/LimitReachedException.java", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FLimitReachedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FLimitReachedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FLimitReachedException.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "574a2f9d64bb622f11022ee1b6768da3e605790e", "filename": "libjava/classpath/gnu/java/security/prng/MDGenerator.java", "status": "modified", "additions": 19, "deletions": 41, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FMDGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FMDGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FMDGenerator.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "ae15d053b82926e06d74795b4ecbfce1bdf4bef5", "filename": "libjava/classpath/gnu/java/security/prng/PRNGFactory.java", "status": "modified", "additions": 12, "deletions": 29, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FPRNGFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FPRNGFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FPRNGFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "fc4607a8a1e8a2355cff5f248377d15e351f6140", "filename": "libjava/classpath/gnu/java/security/prng/RandomEvent.java", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEvent.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "beb9087f4180941e6e801385aa0ab041ba12ac07", "filename": "libjava/classpath/gnu/java/security/prng/RandomEventListener.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEventListener.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "62bb0a29eeffaca45837e9bf37ac9a0acc493dc9", "filename": "libjava/classpath/gnu/java/security/provider/Gnu.java", "status": "modified", "additions": 55, "deletions": 27, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "cdfad3f61c23af246733b75a498790a2a881e8a5", "filename": "libjava/classpath/gnu/java/security/provider/PKIXCertPathValidatorImpl.java", "status": "modified", "additions": 120, "deletions": 133, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "7d61779f937cd38dd6665e77f35c1885be83bee3", "filename": "libjava/classpath/gnu/java/security/provider/X509CertificateFactory.java", "status": "modified", "additions": 25, "deletions": 36, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FX509CertificateFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FX509CertificateFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FX509CertificateFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "9c76cacba0f1607c0d829b0b2f7693e2c5f45ecd", "filename": "libjava/classpath/gnu/java/security/sig/BaseSignature.java", "status": "modified", "additions": 28, "deletions": 70, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FBaseSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FBaseSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FBaseSignature.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "ff25f29d9fa890bfcc90160fa75760aff53ab616", "filename": "libjava/classpath/gnu/java/security/sig/ISignature.java", "status": "modified", "additions": 52, "deletions": 59, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignature.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "aaae6ccb034ff8dae00ded028f1381a77f919519", "filename": "libjava/classpath/gnu/java/security/sig/ISignatureCodec.java", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignatureCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignatureCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignatureCodec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "28b68925b21eb73b8311d4f9b2b5431aab339ea0", "filename": "libjava/classpath/gnu/java/security/sig/SignatureFactory.java", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureFactory.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "1ef1bea1a7fff9489d9337080a6288996509dadb", "filename": "libjava/classpath/gnu/java/security/sig/dss/DSSSignature.java", "status": "modified", "additions": 67, "deletions": 137, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignature.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "903d7aad6c9195755fb8cab382f44566801e32f1", "filename": "libjava/classpath/gnu/java/security/sig/dss/DSSSignatureRawCodec.java", "status": "modified", "additions": 40, "deletions": 65, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureRawCodec.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}, {"sha": "39de01f021368758e196ecb45c82a191a0c7e0bb", "filename": "libjava/classpath/gnu/java/security/sig/rsa/EME_PKCS1_V1_5.java", "status": "modified", "additions": 55, "deletions": 87, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEME_PKCS1_V1_5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ed908de999523efc36f38e69bca1aadfe0808/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEME_PKCS1_V1_5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEME_PKCS1_V1_5.java?ref=ac1ed908de999523efc36f38e69bca1aadfe0808"}]}