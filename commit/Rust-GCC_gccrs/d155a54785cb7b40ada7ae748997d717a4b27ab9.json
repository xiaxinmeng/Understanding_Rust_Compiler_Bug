{"sha": "d155a54785cb7b40ada7ae748997d717a4b27ab9", "node_id": "C_kwDOANBUbNoAKGQxNTVhNTQ3ODVjYjdiNDBhZGE3YWU3NDg5OTdkNzE3YTRiMjdhYjk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-07-15T09:27:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-15T09:27:28Z"}, "message": "Merge #1384\n\n1384: Support generics in check for valid types in arithmetic expressions r=philberty a=philberty\n\nWhen we check for valid types we need to be sure to call destructure which\r\nwill extract out any generics so that we are checking the actual concrete\r\ntype that is being used here.\r\n\r\nFixes #1383\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "335a66022bc0c5b0472b5f3d98d17fc445c9adaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/335a66022bc0c5b0472b5f3d98d17fc445c9adaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d155a54785cb7b40ada7ae748997d717a4b27ab9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi0TMACRBK7hj4Ov3rIwAAUv8IACnpXnx7U8Wjg5sw4TzmVwyK\nzBDAthyehrOMJ3I4t2tLLGy2r+S6JTVSsr4OdHHmqp3MNLx92IW+oJe0QLptHeHw\nHemOUnzuJ6GbnELPY0rEPwepVgpKNxkK7MiPaRV/x7YN1v1Ifk5ZBJxGafwqBj7P\n1BdIjQcsI/POBE3rLyfa3gmCevRu1B5R+xr4vjs27iCJO9Mcxs+h6bLb5L+2E2NO\nPjWDEiEXlmgqqSXVDQnDps7/SR3cOGWGX4TRCaWf7g51CrVF4uExF/UU7FZ0GhKO\nil9MlCtP6k0fanBONXN1qUxnQMy2w3/285DB4xeDveBcfQtywRF98YKx9gMFMvA=\n=ibih\n-----END PGP SIGNATURE-----\n", "payload": "tree 335a66022bc0c5b0472b5f3d98d17fc445c9adaa\nparent ab9f7f287ef0a775ac6a504d743e20c2f5488f6f\nparent 95aa351e65723ce1ff9aa568523b1d5173acacf4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1657877248 +0000\ncommitter GitHub <noreply@github.com> 1657877248 +0000\n\nMerge #1384\n\n1384: Support generics in check for valid types in arithmetic expressions r=philberty a=philberty\n\nWhen we check for valid types we need to be sure to call destructure which\r\nwill extract out any generics so that we are checking the actual concrete\r\ntype that is being used here.\r\n\r\nFixes #1383\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d155a54785cb7b40ada7ae748997d717a4b27ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d155a54785cb7b40ada7ae748997d717a4b27ab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d155a54785cb7b40ada7ae748997d717a4b27ab9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9f7f287ef0a775ac6a504d743e20c2f5488f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9f7f287ef0a775ac6a504d743e20c2f5488f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9f7f287ef0a775ac6a504d743e20c2f5488f6f"}, {"sha": "95aa351e65723ce1ff9aa568523b1d5173acacf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95aa351e65723ce1ff9aa568523b1d5173acacf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95aa351e65723ce1ff9aa568523b1d5173acacf4"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "df07cb3e9202110044bc61e3fed95fdcd8c4e8b0", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a54785cb7b40ada7ae748997d717a4b27ab9/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a54785cb7b40ada7ae748997d717a4b27ab9/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=d155a54785cb7b40ada7ae748997d717a4b27ab9", "patch": "@@ -1060,9 +1060,11 @@ class TypeCheckExpr : public TypeCheckBase\n \t\t\t Location expr_locus);\n \n   bool\n-  validate_arithmetic_type (TyTy::BaseType *type,\n+  validate_arithmetic_type (const TyTy::BaseType *tyty,\n \t\t\t    HIR::ArithmeticOrLogicalExpr::ExprType expr_type)\n   {\n+    const TyTy::BaseType *type = tyty->destructure ();\n+\n     // https://doc.rust-lang.org/reference/expressions/operator-expr.html#arithmetic-and-logical-binary-operators\n     // this will change later when traits are added\n     switch (expr_type)\n@@ -1078,10 +1080,10 @@ class TypeCheckExpr : public TypeCheckBase\n \t       || (type->get_kind () == TyTy::TypeKind::USIZE)\n \t       || (type->get_kind () == TyTy::TypeKind::ISIZE)\n \t       || (type->get_kind () == TyTy::TypeKind::INFER\n-\t\t   && (((TyTy::InferType *) type)->get_infer_kind ()\n+\t\t   && (((const TyTy::InferType *) type)->get_infer_kind ()\n \t\t       == TyTy::InferType::INTEGRAL))\n \t       || (type->get_kind () == TyTy::TypeKind::INFER\n-\t\t   && (((TyTy::InferType *) type)->get_infer_kind ()\n+\t\t   && (((const TyTy::InferType *) type)->get_infer_kind ()\n \t\t       == TyTy::InferType::FLOAT));\n \n \t// integers or bools\n@@ -1094,7 +1096,7 @@ class TypeCheckExpr : public TypeCheckBase\n \t       || (type->get_kind () == TyTy::TypeKind::ISIZE)\n \t       || (type->get_kind () == TyTy::TypeKind::BOOL)\n \t       || (type->get_kind () == TyTy::TypeKind::INFER\n-\t\t   && (((TyTy::InferType *) type)->get_infer_kind ()\n+\t\t   && (((const TyTy::InferType *) type)->get_infer_kind ()\n \t\t       == TyTy::InferType::INTEGRAL));\n \n \t// integers only\n@@ -1105,10 +1107,12 @@ class TypeCheckExpr : public TypeCheckBase\n \t       || (type->get_kind () == TyTy::TypeKind::USIZE)\n \t       || (type->get_kind () == TyTy::TypeKind::ISIZE)\n \t       || (type->get_kind () == TyTy::TypeKind::INFER\n-\t\t   && (((TyTy::InferType *) type)->get_infer_kind ()\n+\t\t   && (((const TyTy::InferType *) type)->get_infer_kind ()\n \t\t       == TyTy::InferType::INTEGRAL));\n       }\n+\n     gcc_unreachable ();\n+    return false;\n   }\n \n   /* The return value of TypeCheckExpr::Resolve */"}, {"sha": "cca12e8fc714c41a6fb373be01ba7fd487402c6d", "filename": "gcc/testsuite/rust/compile/issue-1383.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a54785cb7b40ada7ae748997d717a4b27ab9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1383.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a54785cb7b40ada7ae748997d717a4b27ab9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1383.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1383.rs?ref=d155a54785cb7b40ada7ae748997d717a4b27ab9", "patch": "@@ -0,0 +1,8 @@\n+pub fn generic_function<X>(a: X) -> X {\n+    a\n+}\n+\n+fn main() -> i32 {\n+    let a = generic_function(123);\n+    a - 123\n+}"}]}