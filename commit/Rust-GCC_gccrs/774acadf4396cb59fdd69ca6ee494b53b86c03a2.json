{"sha": "774acadf4396cb59fdd69ca6ee494b53b86c03a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc0YWNhZGY0Mzk2Y2I1OWZkZDY5Y2E2ZWU0OTRiNTNiODZjMDNhMg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-08-20T15:11:43Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-08-20T15:11:43Z"}, "message": "pa-protos.h (readonly_data, [...]): Rename to som_readonly_data_section...\n\n        * config/pa/pa-protos.h (readonly_data, one_only_readonly_data_section,\n\tone_only_data_section): Rename to som_readonly_data_section,\n\tsom_one_only_readonly_data_section and som_one_only_data_section.\n        * config/pa/pa.c (ONE_ONLY_TEXT_SECTION_ASM_OP, NEW_TEXT_SECTION_ASM_OP,\n\tDEFAULT_TEXT_SECTION_ASM_OP): Delete conditional defines.\n\t(som_text_section_asm_op): Replace ONE_ONLY_TEXT_SECTION_ASM_OP,\n\tNEW_TEXT_SECTION_ASM_OP and DEFAULT_TEXT_SECTION_ASM_OP with actual\n\tstring values.\n\t(pa_select_section): Use renamed section functions.\n\t* config/pa/pa.h (EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS,\n        SOM_READONLY_DATA_SECTION_FUNCTION,\n\tSOM_ONE_ONLY_READONLY_DATA_SECTION_FUNCTION,\n        SOM_ONE_ONLY_DATA_SECTION_FUNCTION, FORGET_SECTION_FUNCTION):\n        Define here ...\n        * config/pa/som.h: ... not here.\n        (DEFAULT_TEXT_SECTION_ASM_OP, NEW_TEXT_SECTION_ASM_OP,\n\tONE_ONLY_TEXT_SECTION_ASM_OP, READONLY_DATA_ASM_OP,\n\tONE_ONLY_READONLY_DATA_SECTION_ASM_OP,\n        ONE_ONLY_DATA_SECTION_ASM_OP): Delete.\n        (READONLY_DATA_SECTION): Use som_readonly_data_section.\n\nCo-Authored-By: John David Anglin <dave.anglin@nrc-cnrc.gc.ca>\n\nFrom-SVN: r86325", "tree": {"sha": "1817e2bb34df511800db73c9357763e37d6819a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1817e2bb34df511800db73c9357763e37d6819a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/774acadf4396cb59fdd69ca6ee494b53b86c03a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774acadf4396cb59fdd69ca6ee494b53b86c03a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/774acadf4396cb59fdd69ca6ee494b53b86c03a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/774acadf4396cb59fdd69ca6ee494b53b86c03a2/comments", "author": null, "committer": null, "parents": [{"sha": "888705fbfef97a13e150fbf7e5dfcfa17d4dd83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888705fbfef97a13e150fbf7e5dfcfa17d4dd83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888705fbfef97a13e150fbf7e5dfcfa17d4dd83a"}], "stats": {"total": 212, "additions": 113, "deletions": 99}, "files": [{"sha": "06a8bd405f57fc8406b7d2f74dafbc1e23057a38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=774acadf4396cb59fdd69ca6ee494b53b86c03a2", "patch": "@@ -1,3 +1,27 @@\n+2004-08-20  Zack Weinberg  <zack@codesourcery.com>\n+\t    John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+        * config/pa/pa-protos.h (readonly_data, one_only_readonly_data_section,\n+\tone_only_data_section): Rename to som_readonly_data_section,\n+\tsom_one_only_readonly_data_section and som_one_only_data_section.\n+        * config/pa/pa.c (ONE_ONLY_TEXT_SECTION_ASM_OP, NEW_TEXT_SECTION_ASM_OP,\n+\tDEFAULT_TEXT_SECTION_ASM_OP): Delete conditional defines.\n+\t(som_text_section_asm_op): Replace ONE_ONLY_TEXT_SECTION_ASM_OP,\n+\tNEW_TEXT_SECTION_ASM_OP and DEFAULT_TEXT_SECTION_ASM_OP with actual\n+\tstring values.\n+\t(pa_select_section): Use renamed section functions.\n+\t* config/pa/pa.h (EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS,\n+        SOM_READONLY_DATA_SECTION_FUNCTION,\n+\tSOM_ONE_ONLY_READONLY_DATA_SECTION_FUNCTION,\n+        SOM_ONE_ONLY_DATA_SECTION_FUNCTION, FORGET_SECTION_FUNCTION):\n+        Define here ...\n+        * config/pa/som.h: ... not here.\n+        (DEFAULT_TEXT_SECTION_ASM_OP, NEW_TEXT_SECTION_ASM_OP,\n+\tONE_ONLY_TEXT_SECTION_ASM_OP, READONLY_DATA_ASM_OP,\n+\tONE_ONLY_READONLY_DATA_SECTION_ASM_OP,\n+        ONE_ONLY_DATA_SECTION_ASM_OP): Delete.\n+        (READONLY_DATA_SECTION): Use som_readonly_data_section.\n+\n 2004-08-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* fold-const.c (int_const_binop): Don't generate non-overflowing"}, {"sha": "46d26b6d41c82dcf55f26b3fec907ad84e2862d3", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=774acadf4396cb59fdd69ca6ee494b53b86c03a2", "patch": "@@ -177,7 +177,7 @@ extern void pa_asm_output_aligned_local (FILE *, const char *,\n \t\t\t\t\t unsigned int);\n \n /* Functions in varasm.c used by pa.c.  */\n-extern void readonly_data (void);\n-extern void one_only_readonly_data_section (void);\n-extern void one_only_data_section (void);\n+extern void som_readonly_data_section (void);\n+extern void som_one_only_readonly_data_section (void);\n+extern void som_one_only_data_section (void);\n extern void forget_section (void);"}, {"sha": "a35820be23bce3870a0218125b5730b05e03fb85", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=774acadf4396cb59fdd69ca6ee494b53b86c03a2", "patch": "@@ -9236,27 +9236,18 @@ cmpib_comparison_operator (rtx op, enum machine_mode mode)\n \t      || GET_CODE (op) == LEU));\n }\n \n-#ifndef ONE_ONLY_TEXT_SECTION_ASM_OP\n-#define ONE_ONLY_TEXT_SECTION_ASM_OP \"\"\n-#endif\n-\n-#ifndef NEW_TEXT_SECTION_ASM_OP\n-#define NEW_TEXT_SECTION_ASM_OP \"\"\n-#endif\n-\n-#ifndef DEFAULT_TEXT_SECTION_ASM_OP\n-#define DEFAULT_TEXT_SECTION_ASM_OP \"\"\n-#endif\n-\n-/* Select and return a TEXT_SECTION_ASM_OP for the current function.\n+/* Return a string to output before text in the current function.\n \n    This function is only used with SOM.  Because we don't support\n    named subspaces, we can only create a new subspace or switch back\n-   into the default text subspace.  */\n+   to the default text subspace.  */\n const char *\n som_text_section_asm_op (void)\n {\n-  if (TARGET_SOM && TARGET_GAS)\n+  if (!TARGET_SOM)\n+    return \"\";\n+\n+  if (TARGET_GAS)\n     {\n       if (cfun && !cfun->machine->in_nsubspa)\n \t{\n@@ -9269,23 +9260,24 @@ som_text_section_asm_op (void)\n \t  if (cfun->decl\n \t      && DECL_ONE_ONLY (cfun->decl)\n \t      && !DECL_WEAK (cfun->decl))\n-\t    return ONE_ONLY_TEXT_SECTION_ASM_OP;\n+\t    return\n+ \"\\t.SPACE $TEXT$\\n\\t.NSUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,SORT=24,COMDAT\";\n \n-\t  return NEW_TEXT_SECTION_ASM_OP;\n+\t  return \"\\t.SPACE $TEXT$\\n\\t.NSUBSPA $CODE$\";\n \t}\n       else\n \t{\n \t  /* There isn't a current function or the body of the current\n \t     function has been completed.  So, we are changing to the\n \t     text section to output debugging information.  Do this in\n \t     the default text section.  We need to forget that we are\n-\t     in the text section so that text_section will call us the\n-\t     next time around.  */\n+\t     in the text section so that the function text_section in\n+\t     varasm.c will call us the next time around.  */\n \t  forget_section ();\n \t}\n     }\n \n-  return DEFAULT_TEXT_SECTION_ASM_OP;\n+  return \"\\t.SPACE $TEXT$\\n\\t.SUBSPA $CODE$\";\n }\n \n /* On hpux10, the linker will give an error if we have a reference\n@@ -9308,7 +9300,7 @@ pa_select_section (tree exp, int reloc,\n       if (TARGET_SOM\n \t  && DECL_ONE_ONLY (exp)\n \t  && !DECL_WEAK (exp))\n-\tone_only_readonly_data_section ();\n+\tsom_one_only_readonly_data_section ();\n       else\n \treadonly_data_section ();\n     }\n@@ -9320,7 +9312,7 @@ pa_select_section (tree exp, int reloc,\n \t   && DECL_ONE_ONLY (exp)\n \t   && !DECL_WEAK (exp)\n \t   && DECL_INITIAL (exp))\n-    one_only_data_section ();\n+    som_one_only_data_section ();\n   else\n     data_section ();\n }"}, {"sha": "b7e32c46979f401e786a6ca60de6ad3a1a145d35", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=774acadf4396cb59fdd69ca6ee494b53b86c03a2", "patch": "@@ -1653,12 +1653,78 @@ do { \t\t\t\t\t\t\t\t\t\\\n     goto LABEL\n \f\n #define TARGET_ASM_SELECT_SECTION  pa_select_section\n-   \n+\n /* Return a nonzero value if DECL has a section attribute.  */\n #define IN_NAMED_SECTION_P(DECL) \\\n   ((TREE_CODE (DECL) == FUNCTION_DECL || TREE_CODE (DECL) == VAR_DECL) \\\n    && DECL_SECTION_NAME (DECL) != NULL_TREE)\n \n+/* The following extra sections and extra section functions are only used\n+   for SOM, but they must be provided unconditionally because pa.c's calls\n+   to the functions might not get optimized out when other object formats\n+   are in use.  */\n+\n+#define EXTRA_SECTIONS\t\t\t\t\t\t\t\\\n+  in_som_readonly_data,\t\t\t\t\t\t\t\\\n+  in_som_one_only_readonly_data,\t\t\t\t\t\\\n+  in_som_one_only_data\n+\n+#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n+  SOM_READONLY_DATA_SECTION_FUNCTION\t\t\t\t\t\\\n+  SOM_ONE_ONLY_READONLY_DATA_SECTION_FUNCTION\t\t\t\t\\\n+  SOM_ONE_ONLY_DATA_SECTION_FUNCTION\t\t\t\t\t\\\n+  FORGET_SECTION_FUNCTION\n+\n+/* SOM puts readonly data in the default $LIT$ subspace when PIC code\n+   is not being generated.  */\n+#define SOM_READONLY_DATA_SECTION_FUNCTION\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+som_readonly_data_section (void)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (!TARGET_SOM)\t\t\t\t\t\t\t\\\n+    return;\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_som_readonly_data)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      in_section = in_som_readonly_data;\t\t\t\t\\\n+      fputs (\"\\t.SPACE $TEXT$\\n\\t.SUBSPA $LIT$\\n\", asm_out_file);\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n+/* When secondary definitions are not supported, SOM makes readonly data one\n+   only by creating a new $LIT$ subspace in $TEXT$ with the comdat flag.  */\n+#define SOM_ONE_ONLY_READONLY_DATA_SECTION_FUNCTION\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+som_one_only_readonly_data_section (void)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (!TARGET_SOM)\t\t\t\t\t\t\t\\\n+    return;\t\t\t\t\t\t\t\t\\\n+  in_section = in_som_one_only_readonly_data;\t\t\t\t\\\n+  fputs (\"\\t.SPACE $TEXT$\\n\"\t\t\t\t\t\t\\\n+\t \"\\t.NSUBSPA $LIT$,QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=16,COMDAT\\n\",\\\n+\t asm_out_file);\t\t\t\t\t\t\t\\\n+}\n+\n+/* When secondary definitions are not supported, SOM makes data one only by\n+   creating a new $DATA$ subspace in $PRIVATE$ with the comdat flag.  */\n+#define SOM_ONE_ONLY_DATA_SECTION_FUNCTION\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+som_one_only_data_section (void)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (!TARGET_SOM)\t\t\t\t\t\t\t\\\n+    return;\t\t\t\t\t\t\t\t\\\n+  in_section = in_som_one_only_data;\t\t\t\t\t\\\n+  fputs (\"\\t.SPACE $PRIVATE$\\n\"\t\t\t\t\t\t\\\n+\t \"\\t.NSUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31,SORT=24,COMDAT\\n\",\t\\\n+\t asm_out_file);\t\t\t\t\t\t\t\\\n+}\n+\n+#define FORGET_SECTION_FUNCTION\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+forget_section (void)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  in_section = no_section;\t\t\t\t\t\t\\\n+}\n+\n /* Define this macro if references to a symbol must be treated\n    differently depending on something about the variable or\n    function named by the symbol (such as what section it is in)."}, {"sha": "ff152aecf962d5cdadc42e79a83f56e173a8609a", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 5, "deletions": 73, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/774acadf4396cb59fdd69ca6ee494b53b86c03a2/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=774acadf4396cb59fdd69ca6ee494b53b86c03a2", "patch": "@@ -206,84 +206,15 @@ do {\t\t\t\t\t\t\t\t\\\n \n #define TARGET_ASM_FILE_START pa_som_file_start\n \n-/* Select and return a TEXT_SECTION_ASM_OP string.  */\n+/* String to output before text.  */\n #define TEXT_SECTION_ASM_OP som_text_section_asm_op ()\n \n-/* Output before code in the default text section.  */\n-#define DEFAULT_TEXT_SECTION_ASM_OP \"\\t.SPACE $TEXT$\\n\\t.SUBSPA $CODE$\"\n-\n-/* Output before text in a new subspace.  This allows the linker to\n-   place stubs between functions.  */\n-#define NEW_TEXT_SECTION_ASM_OP \"\\t.SPACE $TEXT$\\n\\t.NSUBSPA $CODE$\"\n-    \n-/* Output before text in a new one-only subspace.  */\n-#define ONE_ONLY_TEXT_SECTION_ASM_OP \"\\t.SPACE $TEXT$\\n\\\n-\\t.NSUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,SORT=24,COMDAT\"\n-\n-/* Output before read-only data.  */\n-#define READONLY_DATA_ASM_OP \"\\t.SPACE $TEXT$\\n\\t.SUBSPA $LIT$\\n\"\n-\n-/* Output before one-only readonly data.  We make readonly data one only\n-   by creating a new $LIT$ subspace in $TEXT$ with the comdat flag.  */\n-#define ONE_ONLY_READONLY_DATA_SECTION_ASM_OP \"\\t.SPACE $TEXT$\\n\\\n-\\t.NSUBSPA $LIT$,QUAD=0,ALIGN=8,ACCESS=0x2c,SORT=16,COMDAT\\n\"\n-\n-/* Output before writable data.  */\n+/* String to output before writable data.  */\n #define DATA_SECTION_ASM_OP \"\\t.SPACE $PRIVATE$\\n\\t.SUBSPA $DATA$\\n\"\n \n-/* Output before one-only data.  We make data one only by creating\n-   a new $DATA$ subspace in $PRIVATE$ with the comdat flag.  */\n-#define ONE_ONLY_DATA_SECTION_ASM_OP \"\\t.SPACE $PRIVATE$\\n\\\n-\\t.NSUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31,SORT=24,COMDAT\\n\"\n-\n-/* Output before uninitialized data.  */\n+/* String to output before uninitialized data.  */\n #define BSS_SECTION_ASM_OP \"\\t.SPACE $PRIVATE$\\n\\t.SUBSPA $BSS$\\n\"\n \n-#define EXTRA_SECTIONS\t\t\t\t\t\t\t\\\n-  in_readonly_data,\t\t\t\t\t\t\t\\\n-  in_one_only_readonly_data,\t\t\t\t\t\t\\\n-  in_one_only_data\n-\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-  READONLY_DATA_FUNCTION\t\t\t\t\t\t\\\n-  ONE_ONLY_READONLY_DATA_SECTION_FUNCTION\t\t\t\t\\\n-  ONE_ONLY_DATA_SECTION_FUNCTION\t\t\t\t\t\\\n-  FORGET_SECTION_FUNCTION\n-\n-#define READONLY_DATA_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-readonly_data (void)\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_readonly_data)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      in_section = in_readonly_data;\t\t\t\t\t\\\n-      fputs (READONLY_DATA_ASM_OP, asm_out_file);\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\n-#define ONE_ONLY_READONLY_DATA_SECTION_FUNCTION\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-one_only_readonly_data_section (void)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  in_section = in_one_only_readonly_data;\t\t\t\t\\\n-  fputs (ONE_ONLY_READONLY_DATA_SECTION_ASM_OP, asm_out_file);\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\n-#define ONE_ONLY_DATA_SECTION_FUNCTION\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-one_only_data_section (void)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  in_section = in_one_only_data;\t\t\t\t\t\\\n-  fputs (ONE_ONLY_DATA_SECTION_ASM_OP, asm_out_file);\t\t\t\\\n-}\n-\n-#define FORGET_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-forget_section (void)\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  in_section = no_section;\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\n /* FIXME: HPUX ld generates incorrect GOT entries for \"T\" fixups\n    which reference data within the $TEXT$ space (for example constant\n    strings in the $LIT$ subspace).\n@@ -296,7 +227,8 @@ forget_section (void)\t\t\t\t\t\t\t\\\n    $TEXT$ space during PIC generation.  Instead place all constant\n    data into the $PRIVATE$ subspace (this reduces sharing, but it\n    works correctly).  */\n-#define READONLY_DATA_SECTION (flag_pic ? data_section : readonly_data)\n+#define READONLY_DATA_SECTION \\\n+  (flag_pic ? data_section : som_readonly_data_section)\n \n /* We must not have a reference to an external symbol defined in a\n    shared library in a readonly section, else the SOM linker will"}]}