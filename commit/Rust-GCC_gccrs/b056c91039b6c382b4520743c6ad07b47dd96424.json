{"sha": "b056c91039b6c382b4520743c6ad07b47dd96424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA1NmM5MTAzOWI2YzM4MmI0NTIwNzQzYzZhZDA3YjQ3ZGQ5NjQyNA==", "commit": {"author": {"name": "Naveen H.S", "email": "Naveen.Hurugalawadi@caviumnetworks.com", "date": "2013-04-12T04:19:14Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2013-04-12T04:19:14Z"}, "message": "aarch64.c (aarch64_select_cc_mode): Allow NEG code in CC_NZ mode.\n\ngcc\n\n2013-04-10   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Allow NEG\n\tcode in CC_NZ mode.\n\t* config/aarch64/aarch64.md (*neg_<shift><mode>3_compare0): New\n\tpattern.\n\ngcc/testsuite\n\n2013-04-10   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* gcc.target/aarch64/negs.c: New.\n\nFrom-SVN: r197838", "tree": {"sha": "4d8f02927bc3fa02e51a7705aea78ce38ee8c473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d8f02927bc3fa02e51a7705aea78ce38ee8c473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b056c91039b6c382b4520743c6ad07b47dd96424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b056c91039b6c382b4520743c6ad07b47dd96424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b056c91039b6c382b4520743c6ad07b47dd96424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b056c91039b6c382b4520743c6ad07b47dd96424/comments", "author": null, "committer": null, "parents": [{"sha": "c030f9b8f4e7211e7e2f20d981a206dfa69925db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c030f9b8f4e7211e7e2f20d981a206dfa69925db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c030f9b8f4e7211e7e2f20d981a206dfa69925db"}], "stats": {"total": 137, "additions": 136, "deletions": 1}, "files": [{"sha": "208fc23df26b48a842046b31ad40546c96d68c73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b056c91039b6c382b4520743c6ad07b47dd96424", "patch": "@@ -1,3 +1,10 @@\n+2013-04-11   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Allow NEG\n+\tcode in CC_NZ mode.\n+\t* config/aarch64/aarch64.md (*neg_<shift><mode>3_compare0): New\n+\tpattern.\n+\n 2013-04-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/48184"}, {"sha": "68f847a2977cc3b12da69cad117fb8241a8b71bb", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b056c91039b6c382b4520743c6ad07b47dd96424", "patch": "@@ -3087,7 +3087,8 @@ aarch64_select_cc_mode (RTX_CODE code, rtx x, rtx y)\n   if ((GET_MODE (x) == SImode || GET_MODE (x) == DImode)\n       && y == const0_rtx\n       && (code == EQ || code == NE || code == LT || code == GE)\n-      && (GET_CODE (x) == PLUS || GET_CODE (x) == MINUS || GET_CODE (x) == AND))\n+      && (GET_CODE (x) == PLUS || GET_CODE (x) == MINUS || GET_CODE (x) == AND\n+\t  || GET_CODE (x) == NEG))\n     return CC_NZmode;\n \n   /* A compare with a shifted operand.  Because of canonicalization,"}, {"sha": "dab5b40d59f122db70b9679ff2b176d3a0b5259d", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=b056c91039b6c382b4520743c6ad07b47dd96424", "patch": "@@ -1901,6 +1901,21 @@\n    (set_attr \"mode\" \"SI\")]\n )\n \n+(define_insn \"*neg_<shift><mode>3_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (neg:GPI (ASHIFT:GPI\n+\t\t   (match_operand:GPI 1 \"register_operand\" \"r\")\n+\t\t   (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\")))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(neg:GPI (ASHIFT:GPI (match_dup 1) (match_dup 2))))]\n+  \"\"\n+  \"negs\\\\t%<w>0, %<w>1, <shift> %2\"\n+  [(set_attr \"v8type\" \"alus_shift\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n (define_insn \"*neg_<shift>_<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(neg:GPI (ASHIFT:GPI"}, {"sha": "4ee12e84ed89948b99710434571f418a2dea3649", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b056c91039b6c382b4520743c6ad07b47dd96424", "patch": "@@ -1,3 +1,7 @@\n+2013-04-11   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* gcc.target/aarch64/negs.c: New.\n+\n 2013-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56895"}, {"sha": "1c23041eae769637cb96bfef0ab5da23c11f3268", "filename": "gcc/testsuite/gcc.target/aarch64/negs.c", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnegs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b056c91039b6c382b4520743c6ad07b47dd96424/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnegs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnegs.c?ref=b056c91039b6c382b4520743c6ad07b47dd96424", "patch": "@@ -0,0 +1,108 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps\" } */\n+\n+extern void abort (void);\n+int z;\n+\n+int\n+negs_si_test1 (int a, int b, int c)\n+{\n+  int d = -b;\n+\n+  /* { dg-final { scan-assembler \"negs\\tw\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  if (d < 0)\n+    return a + c;\n+\n+  z = d;\n+    return b + c + d;\n+}\n+\n+int\n+negs_si_test3 (int a, int b, int c)\n+{\n+  int d = -(b) << 3;\n+\n+  /* { dg-final { scan-assembler \"negs\\tw\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+\n+  z = d;\n+    return b + c + d;\n+}\n+\n+typedef long long s64;\n+s64 zz;\n+\n+s64\n+negs_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = -b;\n+\n+  /* { dg-final { scan-assembler \"negs\\tx\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  if (d < 0)\n+    return a + c;\n+\n+  zz = d;\n+    return b + c + d;\n+}\n+\n+s64\n+negs_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = -(b) << 3;\n+\n+  /* { dg-final { scan-assembler \"negs\\tx\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+\n+  zz = d;\n+    return b + c + d;\n+}\n+\n+int main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = negs_si_test1 (2, 12, 5);\n+  if (x != 7)\n+    abort ();\n+\n+  x = negs_si_test1 (1, 2, 32);\n+  if (x != 33)\n+    abort ();\n+\n+  x = negs_si_test3 (13, 14, 5);\n+  if (x != -93)\n+    abort ();\n+\n+  x = negs_si_test3 (15, 21, 2);\n+  if (x != -145)\n+    abort ();\n+\n+  y = negs_di_test1 (0x20202020ll,\n+\t\t     0x65161611ll,\n+\t\t     0x42434243ll);\n+  if (y != 0x62636263ll)\n+    abort ();\n+\n+  y = negs_di_test1 (0x1010101010101ll,\n+\t\t     0x123456789abcdll,\n+\t\t     0x5555555555555ll);\n+  if (y != 0x6565656565656ll)\n+    abort ();\n+\n+  y = negs_di_test3 (0x62523781ll,\n+\t\t     0x64234978ll,\n+\t\t     0x12345123ll);\n+  if (y != 0xfffffffd553d4edbll)\n+    abort ();\n+\n+  y = negs_di_test3 (0x763526268ll,\n+\t\t     0x101010101ll,\n+\t\t     0x222222222ll);\n+  if (y != 0xfffffffb1b1b1b1bll)\n+    abort ();\n+\n+  return 0;\n+}"}]}