{"sha": "991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkxYTQwZmNjMmQxZmEyZjIwNTg0ZWI1YTk4YmY5NDlmYjg3YmQ2MA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2000-05-11T02:40:34Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-05-11T02:40:34Z"}, "message": "std_cmath.h: Tweaks.\n\n\n2000-05-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* bits/std_cmath.h: Tweaks.\n\t* math/mathconf.h: Tweaks and fixes for HP-UX 11.\n\t(sqrtf): Define away iff !builtin and !in <math.h>.\n\t(sinf): Same.\n\t(cosf): Same.\n\t(fabsf): Same.\n\tAt some point this directory should be converted to c++, the\n\tautoconf tests should be run by the c++ compiler (not c), and\n\t<cmath> should be used instead of math.h.\n\tMove declaration of nan() here.\n\t* math/complex-stub.h (cabsl): Remove nan() declaration.\n\n\tFinish up FreeBSD4.0 support.\n\t* config/bsd/ctype.cc: Scope out toupper, tolower calls.\n\t* config/generic/ctype.cc: And here.\n\t* testsuite/21_strings/char_traits.cc (test02): Guard with\n\t_GLIBCPP_USE_WCHAR_T.\n\n\tvia Phil Edwards  <pme@sourceware.cygnus.com>\n\t* bits/std_cctype.h: Remove _GLIBCPP_USE_NAMESPACES.\n\t* acconfig.h: And here.\n\t* acinclude.m4: Same.\n\t* testsuite/27_io/istream.cc: And here.\n\t* testsuite/27_io/ostream.cc: And here.\n\nFrom-SVN: r33835", "tree": {"sha": "e18ea6c352406e1c18bb32df73f14f884e4db083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e18ea6c352406e1c18bb32df73f14f884e4db083"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/comments", "author": null, "committer": null, "parents": [{"sha": "8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e9bf55e19b0bab167a86e57757651a4b0de8e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e9bf55e19b0bab167a86e57757651a4b0de8e9c"}], "stats": {"total": 548, "additions": 265, "deletions": 283}, "files": [{"sha": "309e506949f4c4ba7d5bf6ca87e8f245002d130b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,11 +1,30 @@\n 2000-05-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n+\t* bits/std_cmath.h: Tweaks.\n+\t* math/mathconf.h: Tweaks and fixes for HP-UX 11.\n+\t(sqrtf): Define away iff !builtin and !in <math.h>. \n+\t(sinf): Same.\n+\t(cosf): Same.\n+\t(fabsf): Same.\n+\tAt some point this directory should be converted to c++, the\n+\tautoconf tests should be run by the c++ compiler (not c), and\n+\t<cmath> should be used instead of math.h.\n+\tMove declaration of nan() here.\n+\t* math/complex-stub.h (cabsl): Remove nan() declaration.\n+\n \tFinish up FreeBSD4.0 support.\n \t* config/bsd/ctype.cc: Scope out toupper, tolower calls.\n \t* config/generic/ctype.cc: And here.\n \t* testsuite/21_strings/char_traits.cc (test02): Guard with\n \t_GLIBCPP_USE_WCHAR_T.\n \n+\tvia Phil Edwards  <pme@sourceware.cygnus.com>\n+\t* bits/std_cctype.h: Remove _GLIBCPP_USE_NAMESPACES.\n+\t* acconfig.h: And here.\n+\t* acinclude.m4: Same.\n+\t* testsuite/27_io/istream.cc: And here.\n+\t* testsuite/27_io/ostream.cc: And here.\n+\n 2000-05-09  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_CPU): Change powerpc bits to"}, {"sha": "be98cc196c1e30de108da84d9f8d161b0c2a5588", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,12 +1,5 @@\n // acconfig.h symbols and macros for libstdc++ v3 -*- C++ -*-\n \n-// If using the namespace std, you need this. Eventually this should\n-// not be an option. In the meantime, and as things like std_ctype.h\n-// need to be hacked out, give people the option. If this is set to 1,\n-// CXXFLAGS should include -fhonor-std. If this is undefined, CXXFLAGS\n-// should include -fno-honor-std.\n-#undef _GLIBCPP_USE_NAMESPACES\n-\n // Include support for 'long long' and 'unsigned long long'.\n #undef _GLIBCPP_USE_LONG_LONG\n "}, {"sha": "fc86165973b681851554afa52d6a65cdfaaa50d1", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -664,7 +664,7 @@ dnl Run through flags (either default or command-line) and set things.\n if test -n \"$enable_cxx_flags\"; then\n     for f in $enable_cxx_flags; do\n         case \"$f\" in\n-            -fhonor-std)  AC_DEFINE(_GLIBCPP_USE_NAMESPACES) ;;\n+            -fhonor-std)  ;;\n             -*)  ;;\n             *)   # and we're trying to pass /what/ exactly?\n                  AC_MSG_ERROR([compiler flags start with a -]) ;;\n@@ -680,7 +680,7 @@ dnl\n dnl Check for certain special build configurations.\n dnl\n dnl GLIBCPP_ENABLE_NAMESPACES\n-dnl --enable-namespaces sets '-fhonor-std' and defines _GLIBCPP_USE_NAMESPACES\n+dnl --enable-namespaces sets '-fhonor-std' and \n dnl --disable-namespaces sets '-fno-honor-std' (the macro should be\n dnl     undefined by default in whatever.h.in).\n dnl  +  Eventually, this will go away.\n@@ -702,7 +702,6 @@ enable_namespaces=GLIBCPP_ENABLE_NAMESPACES_DEFAULT)dnl\n dnl Option parsed, now set things appropriately\n case \"$enable_namespaces\" in\n     yes)  NAMESPACES='-fhonor-std'\n-          AC_DEFINE(_GLIBCPP_USE_NAMESPACES)\n           ;;\n     no)   NAMESPACES='-fno-honor-std'\n           ;;"}, {"sha": "c5258815a6a16a7888d4d1f353ee5c41f9086772", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -676,7 +676,7 @@ dnl Run through flags (either default or command-line) and set things.\n if test -n \"$enable_cxx_flags\"; then\n     for f in $enable_cxx_flags; do\n         case \"$f\" in\n-            -fhonor-std)  AC_DEFINE(_GLIBCPP_USE_NAMESPACES) ;;\n+            -fhonor-std)  ;;\n             -*)  ;;\n             *)   # and we're trying to pass /what/ exactly?\n                  AC_MSG_ERROR([compiler flags start with a -]) ;;\n@@ -692,7 +692,7 @@ dnl\n dnl Check for certain special build configurations.\n dnl\n dnl GLIBCPP_ENABLE_NAMESPACES\n-dnl --enable-namespaces sets '-fhonor-std' and defines _GLIBCPP_USE_NAMESPACES\n+dnl --enable-namespaces sets '-fhonor-std' and \n dnl --disable-namespaces sets '-fno-honor-std' (the macro should be\n dnl     undefined by default in whatever.h.in).\n dnl  +  Eventually, this will go away.\n@@ -714,7 +714,6 @@ enable_namespaces=GLIBCPP_ENABLE_NAMESPACES_DEFAULT)dnl\n dnl Option parsed, now set things appropriately\n case \"$enable_namespaces\" in\n     yes)  NAMESPACES='-fhonor-std'\n-          AC_DEFINE(_GLIBCPP_USE_NAMESPACES)\n           ;;\n     no)   NAMESPACES='-fno-honor-std'\n           ;;"}, {"sha": "4e106c58747c011b3b87a7ea997e703c94b7a4f6", "filename": "libstdc++-v3/bits/std_cctype.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fbits%2Fstd_cctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fbits%2Fstd_cctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_cctype.h?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- forwarding header.\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,7 +56,7 @@ namespace std\n # undef toupper\n   inline int \n   toupper(int __c) { return _S_toupper_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   toupper(int __c) { return ::toupper(__c); }\n #endif\n@@ -67,7 +67,7 @@ namespace std\n # undef tolower\n   inline int \n   tolower(int __c) { return _S_tolower_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   tolower(int __c) { return ::tolower(__c); }\n #endif\n@@ -78,7 +78,7 @@ namespace std\n # undef isspace\n   inline int \n   isspace(int __c) { return _S_isspace_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isspace(int __c) { return ::isspace(__c); }\n #endif\n@@ -89,7 +89,7 @@ namespace std\n # undef isprint\n   inline int \n   isprint(int __c) { return _S_isprint_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isprint(int __c) { return ::isprint(__c); }\n #endif\n@@ -100,7 +100,7 @@ namespace std\n # undef iscntrl\n   inline int \n   iscntrl(int __c) { return _S_iscntrl_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   iscntrl(int __c) { return ::iscntrl(__c); }\n #endif\n@@ -111,7 +111,7 @@ namespace std\n # undef isupper\n   inline int \n   isupper(int __c) { return _S_isupper_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isupper(int __c) { return ::isupper(__c); }\n #endif\n@@ -122,7 +122,7 @@ namespace std\n # undef islower\n   inline int \n   islower(int __c) { return _S_islower_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   islower(int __c) { return ::islower(__c); }\n #endif\n@@ -133,7 +133,7 @@ namespace std\n # undef isalpha\n   inline int \n   isalpha(int __c) { return _S_isalpha_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isalpha(int __c) { return ::isalpha(__c); }\n #endif\n@@ -144,7 +144,7 @@ namespace std\n # undef isdigit\n   inline int \n   isdigit(int __c) { return _S_isdigit_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isdigit(int __c) { return ::isdigit(__c); }\n #endif\n@@ -155,7 +155,7 @@ namespace std\n # undef ispunct\n   inline int \n   ispunct(int __c) { return _S_ispunct_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   ispunct(int __c) { return ::ispunct(__c); }\n #endif\n@@ -166,7 +166,7 @@ namespace std\n # undef isxdigit\n   inline int \n   isxdigit(int __c) { return _S_isxdigit_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isxdigit(int __c) { return ::isxdigit(__c); }\n #endif\n@@ -177,7 +177,7 @@ namespace std\n # undef isalnum\n   inline int \n   isalnum(int __c) { return _S_isalnum_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isalnum(int __c) { return ::isalnum(__c); }\n #endif\n@@ -188,7 +188,7 @@ namespace std\n # undef isgraph\n   inline int \n   isgraph(int __c) { return _S_isgraph_helper(__c); }\n-#elif _GLIBCPP_USE_NAMESPACES \n+#else\n   inline int \n   isgraph(int __c) { return ::isgraph(__c); }\n #endif"}, {"sha": "3b53bb101e2de238ffec895e807c021d25740dd2", "filename": "libstdc++-v3/bits/std_cmath.h", "status": "modified", "additions": 114, "deletions": 114, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_cmath.h?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -42,203 +42,203 @@\n \n namespace std {\n \n-    inline long\n-    abs(long __l) { return ::labs(__l); }\n+  inline long\n+  abs(long __l) { return ::labs(__l); }\n \n-    inline ldiv_t\n-    div(long __a, long __b) { return ::ldiv(__a, __b); }\n+  inline ldiv_t\n+  div(long __a, long __b) { return ::ldiv(__a, __b); }\n \n-    // double\n-    inline double\n-    abs(double __x) { return ::fabs(__x); }\n+  // double\n+  inline double\n+  abs(double __x) { return ::fabs(__x); }\n \n-    double\n-    pow(double, int);\n+  double\n+  pow(double, int);\n \n-    // float\n-    inline float\n-    ceil(float __x) { return ::ceil(static_cast<double>(__x)); }\n+  // float\n+  inline float\n+  ceil(float __x) { return ::ceil(static_cast<double>(__x)); }\n \n-    inline float\n-    floor(float __x) { return ::floor(static_cast<double>(__x)); }\n+  inline float\n+  floor(float __x) { return ::floor(static_cast<double>(__x)); }\n \n-    inline float\n-    fmod(float __x, float __y) \n-    { return ::fmod(static_cast<double>(__x), static_cast<double>(__y)); }\n+  inline float\n+  fmod(float __x, float __y) \n+  { return ::fmod(static_cast<double>(__x), static_cast<double>(__y)); }\n \n-    inline float\n-    frexp(float __x, int* __p) \n-    { return ::frexp(static_cast<double>(__x), __p); }\n+  inline float\n+  frexp(float __x, int* __p) \n+  { return ::frexp(static_cast<double>(__x), __p); }\n \n-    inline float\n-    ldexp(float __x, int __i) \n-    { return ::ldexp(static_cast<double>(__x), __i); }\n+  inline float\n+  ldexp(float __x, int __i) \n+  { return ::ldexp(static_cast<double>(__x), __i); }\n \n-    inline float\n-    pow(float __x, float __y) \n-    { return ::pow(static_cast<double>(__x), static_cast<double>(__y)); }\n+  inline float\n+  pow(float __x, float __y) \n+  { return ::pow(static_cast<double>(__x), static_cast<double>(__y)); }\n \n-    float\n-    pow(float, int); \n+  float\n+  pow(float, int); \n \n #if _GLIBCPP_HAVE_ABSF\n-    inline float\n-    abs(float __x) { return ::absf(__x); }\n+  inline float\n+  abs(float __x) { return ::absf(__x); }\n #else\n-    inline float\n-    abs(float __x) { return ::fabs(static_cast<double>(__x)); }\n+  inline float\n+  abs(float __x) { return ::fabs(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_ACOSF\n-    inline float\n-    acos(float __x) { return ::acosf(__x); }\n+  inline float\n+  acos(float __x) { return ::acosf(__x); }\n #else\n-    inline float\n-    acos(float __x) { return ::acos(static_cast<double>(__x)); }\n+  inline float\n+  acos(float __x) { return ::acos(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_ASINF\n-    inline float\n-    asin(float __x) { return ::asinf(__x); }\n+  inline float\n+  asin(float __x) { return ::asinf(__x); }\n #else\n-    inline float\n-    asin(float __x) { return ::asin(static_cast<double>(__x)); }\n+  inline float\n+  asin(float __x) { return ::asin(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_ATANF\n-    inline float\n-    atan(float __x) { return ::atanf(__x); }\n+  inline float\n+  atan(float __x) { return ::atanf(__x); }\n #else\n-    inline float\n-    atan(float __x) { return ::atan(static_cast<double>(__x)); }\n+  inline float\n+  atan(float __x) { return ::atan(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_ATAN2F\n-    inline float\n-    atan2(float __x, float __y) { return ::atan2f(__x, __y); }\n+  inline float\n+  atan2(float __x, float __y) { return ::atan2f(__x, __y); }\n #else\n-    inline float\n-    atan2(float __x, float __y) \n-    { return ::atan2(static_cast<double>(__x), static_cast<double>(__y)); }\n+  inline float\n+  atan2(float __x, float __y) \n+  { return ::atan2(static_cast<double>(__x), static_cast<double>(__y)); }\n #endif\n \n #if _GLIBCPP_HAVE_TANF\n-    inline float\n-    tan(float __x) { return ::tanf(__x); }\n+  inline float\n+  tan(float __x) { return ::tanf(__x); }\n #else\n-    inline float\n-    tan(float __x) { return ::tan(static_cast<double>(__x)); }\n+  inline float\n+  tan(float __x) { return ::tan(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_SINHF\n-    inline float\n-    sinh(float __x) { return ::sinhf(__x); }\n+  inline float\n+  sinh(float __x) { return ::sinhf(__x); }\n #else\n-    inline float\n-    sinh(float __x) { return ::sinh(static_cast<double>(__x)); }\n+  inline float\n+  sinh(float __x) { return ::sinh(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_TANHF\n-    inline float\n-    tanh(float __x) { return ::tanhf(__x); }\n+  inline float\n+  tanh(float __x) { return ::tanhf(__x); }\n #else\n-    inline float\n-    tanh(float __x) { return ::tanh(static_cast<double>(__x)); }\n+  inline float\n+  tanh(float __x) { return ::tanh(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_COSHF\n-    inline float\n-    cosh(float __x) { return ::coshf(__x); }\n+  inline float\n+  cosh(float __x) { return ::coshf(__x); }\n #else\n-    inline float\n-    cosh(float __x) { return ::cosh(static_cast<double>(__x)); }\n+  inline float\n+  cosh(float __x) { return ::cosh(static_cast<double>(__x)); }\n #endif\n  \n #if _GLIBCPP_HAVE_EXPF\n-    inline float\n-    exp(float __x) { return ::expf(__x); }\n+  inline float\n+  exp(float __x) { return ::expf(__x); }\n #else\n-    inline float\n-    exp(float __x) { return ::exp(static_cast<double>(__x)); }\n+  inline float\n+  exp(float __x) { return ::exp(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_LOGF\n-    inline float\n-    log(float __x) { return ::logf(__x); }\n+  inline float\n+  log(float __x) { return ::logf(__x); }\n #else\n-    inline float\n-    log(float __x) { return ::log(static_cast<double>(__x)); }\n+  inline float\n+  log(float __x) { return ::log(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_LOG10F\n-    inline float\n-    log10(float __x) { return ::log10f(__x); }\n+  inline float\n+  log10(float __x) { return ::log10f(__x); }\n #else\n-    inline float\n-    log10(float __x) { return ::log10(static_cast<double>(__x)); }\n+  inline float\n+  log10(float __x) { return ::log10(static_cast<double>(__x)); }\n #endif\n \n #if _GLIBCPP_HAVE_MODFF\n-    inline float\n-    modf(float __x, float* __p) { return ::modff(__x, __p); }\n+  inline float\n+  modf(float __x, float* __p) { return ::modff(__x, __p); }\n #else\n-    inline float\n-    modf(float __x, float* __p) \n-    {\n-      double __tmp;\n-      double __res = ::modf(static_cast<double>(__x), &__tmp);\n-      *__p = static_cast<float> (__tmp);\n-      return __res;\n-    }\n+  inline float\n+  modf(float __x, float* __p) \n+  {\n+    double __tmp;\n+    double __res = ::modf(static_cast<double>(__x), &__tmp);\n+    *__p = static_cast<float> (__tmp);\n+    return __res;\n+  }\n #endif\n \n #if GLIBCPP_HAS_BUILTIN_SINF\n-    inline float\n-    sin(float __x) { return __builtin_sinf(__x); }\n+  inline float\n+  sin(float __x) { return __builtin_sinf(__x); }\n #elif _GLIBCPP_HAVE_SINF\n-    inline float\n-    sin(float __x) { return ::sinf(__x); }\n+  inline float\n+  sin(float __x) { return ::sinf(__x); }\n #else\n-    inline float\n-    sin(float __x) { return ::sin(static_cast<double>(__x)); }\n+  inline float\n+  sin(float __x) { return ::sin(static_cast<double>(__x)); }\n #endif\n \n #if GLIBCPP_HAS_BUILTIN_COSF\n-    inline float\n-    cos(float __x) { return __builtin_cosf(__x); }\n+  inline float\n+  cos(float __x) { return __builtin_cosf(__x); }\n #elif _GLIBCPP_HAVE_COSF\n-    inline float\n-    cos(float __x) { return ::cosf(__x); }\n+  inline float\n+  cos(float __x) { return ::cosf(__x); }\n #else\n-    inline float\n-    cos(float __x) { return ::cos(static_cast<double>(__x)); }\n+  inline float\n+  cos(float __x) { return ::cos(static_cast<double>(__x)); }\n #endif\n \n #if GLIBCPP_HAS_BUILTIN_FABSF\n-    inline float\n-    fabs(float __x) { return __builtin_fabsf(__x); }\n+  inline float\n+  fabs(float __x) { return __builtin_fabsf(__x); }\n #elif _GLIBCPP_HAVE_FABSF\n-    inline float\n-    fabs(float __x) { return ::fabsf(__x); }\n+  inline float\n+  fabs(float __x) { return ::fabsf(__x); }\n #else\n-    inline float\n-    fabs(float __x) { return ::fabs(static_cast<double>(__x)); }\n+  inline float\n+  fabs(float __x) { return ::fabs(static_cast<double>(__x)); }\n #endif\n \n #if GLIBCPP_HAS_BUILTIN_SQRTF\n-    inline float\n-    sqrt(float __x) { return __builtin_sqrtf(__x); }\n+  inline float\n+  sqrt(float __x) { return __builtin_sqrtf(__x); }\n #elif _GLIBCPP_HAVE_SQRTF\n-    inline float\n-    sqrt(float __x) { return ::sqrtf(__x); }\n+  inline float\n+  sqrt(float __x) { return ::sqrtf(__x); }\n #else\n-    inline float\n-    sqrt(float __x) { return ::fabs(static_cast<double>(__x)); }\n+  inline float\n+  sqrt(float __x) { return ::fabs(static_cast<double>(__x)); }\n #endif\n \n-    // XXX long double\n-    long double\n-    pow(long double, int);\n+  // XXX long double\n+  long double\n+  pow(long double, int);\n \n } // std\n "}, {"sha": "b657fdf306f7c96c1b86a9199e9a59595e61ffbe", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -3,13 +3,6 @@\n /* Define if you have a working `mmap' system call.  */\n #undef HAVE_MMAP\n \n-// If using the namespace std, you need this. Eventually this should\n-// not be an option. In the meantime, and as things like std_ctype.h\n-// need to be hacked out, give people the option. If this is set to 1,\n-// CXXFLAGS should include -fhonor-std. If this is undefined, CXXFLAGS\n-// should include -fno-honor-std.\n-#undef _GLIBCPP_USE_NAMESPACES\n-\n // Include support for 'long long' and 'unsigned long long'.\n #undef _GLIBCPP_USE_LONG_LONG\n "}, {"sha": "f4d49447f861c38a59907c19d65cc9969a27fe69", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 95, "deletions": 98, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -2468,10 +2468,7 @@ fi\n if test -n \"$enable_cxx_flags\"; then\n     for f in $enable_cxx_flags; do\n         case \"$f\" in\n-            -fhonor-std)  cat >> confdefs.h <<\\EOF\n-#define _GLIBCPP_USE_NAMESPACES 1\n-EOF\n- ;;\n+            -fhonor-std)  ;;\n             -*)  ;;\n             *)   # and we're trying to pass /what/ exactly?\n                  { echo \"configure: error: compiler flags start with a -\" 1>&2; exit 1; } ;;\n@@ -2608,17 +2605,17 @@ else\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:2612: checking for $ac_hdr\" >&5\n+echo \"configure:2609: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2617 \"configure\"\n+#line 2614 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2622: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2619: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2648,7 +2645,7 @@ done\n   \n   \n   echo $ac_n \"checking for GNU C++ __complex__ support\"\"... $ac_c\" 1>&6\n-echo \"configure:2652: checking for GNU C++ __complex__ support\" >&5\n+echo \"configure:2649: checking for GNU C++ __complex__ support\" >&5\n   if eval \"test \\\"`echo '$''{'glibcpp_cv_complex'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2662,7 +2659,7 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n \n     cat > conftest.$ac_ext <<EOF\n-#line 2666 \"configure\"\n+#line 2663 \"configure\"\n #include \"confdefs.h\"\n struct dcomplex { __complex__ double x; }; \\\n \t\t    dcomplex f(const dcomplex& x) { return dcomplex(x); }\n@@ -2671,7 +2668,7 @@ int main() {\n \t\t     dcomplex x; f(x); \n ; return 0; }\n EOF\n-if { (eval echo configure:2675: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2672: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcpp_cv_complex=ok\n else\n@@ -2703,7 +2700,7 @@ EOF\n   \n   \n   echo $ac_n \"checking for GNU C++ __complex__ float support\"\"... $ac_c\" 1>&6\n-echo \"configure:2707: checking for GNU C++ __complex__ float support\" >&5\n+echo \"configure:2704: checking for GNU C++ __complex__ float support\" >&5\n   if eval \"test \\\"`echo '$''{'glibcpp_cv_float_complex'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2736,14 +2733,14 @@ cross_compiling=$ac_cv_prog_cxx_cross\n       };\n EOB\n     cat > conftest.$ac_ext <<EOF\n-#line 2740 \"configure\"\n+#line 2737 \"configure\"\n #include \"confdefs.h\"\n #include \"conftest.h\"\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2747: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2744: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcpp_cv_float_complex=ok\n else\n@@ -2774,16 +2771,16 @@ EOF\n \n   \n     echo $ac_n \"checking for __builtin_sinf\"\"... $ac_c\" 1>&6\n-echo \"configure:2778: checking for __builtin_sinf\" >&5\n+echo \"configure:2775: checking for __builtin_sinf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2780 \"configure\"\n+#line 2777 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_sinf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2787: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2784: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_sinf=yes\n else\n@@ -2802,16 +2799,16 @@ EOF\n   fi\n \n   echo $ac_n \"checking for __builtin_cosf\"\"... $ac_c\" 1>&6\n-echo \"configure:2806: checking for __builtin_cosf\" >&5\n+echo \"configure:2803: checking for __builtin_cosf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2808 \"configure\"\n+#line 2805 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_cosf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2815: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2812: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_cosf=yes\n else\n@@ -2830,16 +2827,16 @@ EOF\n   fi\n \n   echo $ac_n \"checking for __builtin_fabsf\"\"... $ac_c\" 1>&6\n-echo \"configure:2834: checking for __builtin_fabsf\" >&5\n+echo \"configure:2831: checking for __builtin_fabsf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2836 \"configure\"\n+#line 2833 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_fabsf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2843: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2840: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_fabsf=yes\n else\n@@ -2858,16 +2855,16 @@ EOF\n   fi\n \n   echo $ac_n \"checking for __builtin_sqrtf\"\"... $ac_c\" 1>&6\n-echo \"configure:2862: checking for __builtin_sqrtf\" >&5\n+echo \"configure:2859: checking for __builtin_sqrtf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2864 \"configure\"\n+#line 2861 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_sqrtf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2871: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2868: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_sqrtf=yes\n else\n@@ -2887,15 +2884,15 @@ EOF\n \n   \n   echo $ac_n \"checking for sin in -lm\"\"... $ac_c\" 1>&6\n-echo \"configure:2891: checking for sin in -lm\" >&5\n+echo \"configure:2888: checking for sin in -lm\" >&5\n ac_lib_var=`echo m'_'sin | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lm  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 2899 \"configure\"\n+#line 2896 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -2906,7 +2903,7 @@ int main() {\n sin()\n ; return 0; }\n EOF\n-if { (eval echo configure:2910: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2907: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -2933,17 +2930,17 @@ fi\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:2937: checking for $ac_hdr\" >&5\n+echo \"configure:2934: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2942 \"configure\"\n+#line 2939 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2947: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2944: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2975,12 +2972,12 @@ done\n   carg cargf nan hypot hypotf atan2f expf copysignf\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2979: checking for $ac_func\" >&5\n+echo \"configure:2976: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2984 \"configure\"\n+#line 2981 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3003,7 +3000,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3007: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3004: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3032,12 +3029,12 @@ done\n \n       USE_LONG_DOUBLE=no\n   echo $ac_n \"checking for copysignl\"\"... $ac_c\" 1>&6\n-echo \"configure:3036: checking for copysignl\" >&5\n+echo \"configure:3033: checking for copysignl\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_copysignl'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3041 \"configure\"\n+#line 3038 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char copysignl(); below.  */\n@@ -3060,7 +3057,7 @@ copysignl();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3064: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3061: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_copysignl=yes\"\n else\n@@ -3079,12 +3076,12 @@ if eval \"test \\\"`echo '$ac_cv_func_'copysignl`\\\" = yes\"; then\n   csqrtl ctanhl ctanl cargl hypotl signbitl c_logl clog10l\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3083: checking for $ac_func\" >&5\n+echo \"configure:3080: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3088 \"configure\"\n+#line 3085 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3107,7 +3104,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3111: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3108: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3145,12 +3142,12 @@ fi\n   fpclass qfpclass\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3149: checking for $ac_func\" >&5\n+echo \"configure:3146: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3154 \"configure\"\n+#line 3151 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3173,7 +3170,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3177: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3174: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3208,12 +3205,12 @@ _strtof _strtold _fabsf _sincos _sincosf _sincosl _finite _finitef _qfinite \\\n _fpclass _qfpclass\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3212: checking for $ac_func\" >&5\n+echo \"configure:3209: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3217 \"configure\"\n+#line 3214 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3236,7 +3233,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3240: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3237: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3266,17 +3263,17 @@ LIBS=\"$save_LIBS\"\n   \n   ac_safe=`echo \"wchar.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for wchar.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3270: checking for wchar.h\" >&5\n+echo \"configure:3267: checking for wchar.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3275 \"configure\"\n+#line 3272 \"configure\"\n #include \"confdefs.h\"\n #include <wchar.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3280: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3277: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3294,16 +3291,16 @@ if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   \n     echo $ac_n \"checking for native mbstate_t\"\"... $ac_c\" 1>&6\n-echo \"configure:3298: checking for native mbstate_t\" >&5\n+echo \"configure:3295: checking for native mbstate_t\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 3300 \"configure\"\n+#line 3297 \"configure\"\n #include \"confdefs.h\"\n #include <wchar.h>\n int main() {\n mbstate_t teststate;\n ; return 0; }\n EOF\n-if { (eval echo configure:3307: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3304: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_native_mbstatet=yes\n else\n@@ -3322,16 +3319,16 @@ EOF\n   fi\n   \n       echo $ac_n \"checking for WCHAR_MIN and WCHAR_MAX\"\"... $ac_c\" 1>&6\n-echo \"configure:3326: checking for WCHAR_MIN and WCHAR_MAX\" >&5\n+echo \"configure:3323: checking for WCHAR_MIN and WCHAR_MAX\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 3328 \"configure\"\n+#line 3325 \"configure\"\n #include \"confdefs.h\"\n #include <wchar.h>\n int main() {\n int i = WCHAR_MIN; int j = WCHAR_MAX;\n ; return 0; }\n EOF\n-if { (eval echo configure:3335: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3332: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   has_wchar_minmax=yes\n else\n@@ -3352,9 +3349,9 @@ EOF\n   # Test wchar.h for WEOF, which is what we use to determine whether\n   # to specialize for wchar_t or not.\n   echo $ac_n \"checking for WEOF\"\"... $ac_c\" 1>&6\n-echo \"configure:3356: checking for WEOF\" >&5\n+echo \"configure:3353: checking for WEOF\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 3358 \"configure\"\n+#line 3355 \"configure\"\n #include \"confdefs.h\"\n \n     #include <wchar.h>\n@@ -3363,7 +3360,7 @@ int main() {\n wint_t i = WEOF;\n ; return 0; }\n EOF\n-if { (eval echo configure:3367: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3364: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   has_weof=yes\n else\n@@ -3378,12 +3375,12 @@ rm -f conftest*\n     for ac_func in wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3382: checking for $ac_func\" >&5\n+echo \"configure:3379: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3387 \"configure\"\n+#line 3384 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3406,7 +3403,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3410: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3407: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3435,7 +3432,7 @@ done\n   \n \n   echo $ac_n \"checking for wide character support\"\"... $ac_c\" 1>&6\n-echo \"configure:3439: checking for wide character support\" >&5\n+echo \"configure:3436: checking for wide character support\" >&5\n   if test $has_weof = \"yes\" && test $has_wchar_minmax = \"yes\"; then\n     libinst_wstring_la=\"libinst-wstring.la\"\n     cat >> confdefs.h <<\\EOF\n@@ -3463,17 +3460,17 @@ fi\n   \n   ac_safe=`echo \"ctype.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for ctype.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3467: checking for ctype.h\" >&5\n+echo \"configure:3464: checking for ctype.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3472 \"configure\"\n+#line 3469 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3477: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3474: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3494,9 +3491,9 @@ if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n         ctype_default=yes\n \n         echo $ac_n \"checking <ctype> for gnu-linux \"\"... $ac_c\" 1>&6\n-echo \"configure:3498: checking <ctype> for gnu-linux \" >&5\n+echo \"configure:3495: checking <ctype> for gnu-linux \" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3500 \"configure\"\n+#line 3497 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3507,7 +3504,7 @@ int\n \t+ __ctype_tolower[a] + __ctype_toupper[a] + __ctype_b[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3511: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3508: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_linux=yes\n@@ -3525,9 +3522,9 @@ rm -f conftest*\n     fi\n \n         echo $ac_n \"checking <ctype> for bsd \"\"... $ac_c\" 1>&6\n-echo \"configure:3529: checking <ctype> for bsd \" >&5\n+echo \"configure:3526: checking <ctype> for bsd \" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3531 \"configure\"\n+#line 3528 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3537,7 +3534,7 @@ int\n \t+ _CTYPE_D + _CTYPE_P + _CTYPE_X + _CTYPE_G ;}\n ; return 0; }\n EOF\n-if { (eval echo configure:3541: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3538: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_bsd=yes\n@@ -3556,9 +3553,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking <ctype> for solaris 2.6,7,8 \"\"... $ac_c\" 1>&6\n-echo \"configure:3560: checking <ctype> for solaris 2.6,7,8 \" >&5\n+echo \"configure:3557: checking <ctype> for solaris 2.6,7,8 \" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3562 \"configure\"\n+#line 3559 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3569,7 +3566,7 @@ int\n \t+ __trans_lower[a] + __trans_upper[a] + __ctype_mask[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3573: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3570: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_solaris=yes\n@@ -3584,7 +3581,7 @@ rm -f conftest*\n \n     if test $ctype_solaris = \"yes\"; then\n       echo $ac_n \"checking   for version\"\"... $ac_c\" 1>&6\n-echo \"configure:3588: checking   for version\" >&5\n+echo \"configure:3585: checking   for version\" >&5\n       ac_ext=C\n # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n ac_cpp='$CXXCPP $CPPFLAGS'\n@@ -3593,14 +3590,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n  \n       cat > conftest.$ac_ext <<EOF\n-#line 3597 \"configure\"\n+#line 3594 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n typedef long* __to_type; __to_type const& _M_toupper = __trans_upper;\n ; return 0; }\n EOF\n-if { (eval echo configure:3604: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3601: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n       ctype_solaris26=yes\n@@ -3632,9 +3629,9 @@ cross_compiling=$ac_cv_prog_cc_cross\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking <ctype> for solaris 2.5.1 \"\"... $ac_c\" 1>&6\n-echo \"configure:3636: checking <ctype> for solaris 2.5.1 \" >&5\n+echo \"configure:3633: checking <ctype> for solaris 2.5.1 \" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3638 \"configure\"\n+#line 3635 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3644,7 +3641,7 @@ int\n \t+ __ctype[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3648: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3645: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_solaris25=yes\n@@ -3664,9 +3661,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking <ctype> for aix \"\"... $ac_c\" 1>&6\n-echo \"configure:3668: checking <ctype> for aix \" >&5\n+echo \"configure:3665: checking <ctype> for aix \" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3670 \"configure\"\n+#line 3667 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3677,7 +3674,7 @@ int\n \t+ _VALC('a') + _IS('c', 0);}\n ; return 0; }\n EOF\n-if { (eval echo configure:3681: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3678: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_aix=yes\n@@ -3697,9 +3694,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking <ctype> for newlib \"\"... $ac_c\" 1>&6\n-echo \"configure:3701: checking <ctype> for newlib \" >&5\n+echo \"configure:3698: checking <ctype> for newlib \" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3703 \"configure\"\n+#line 3700 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3709,7 +3706,7 @@ int\n \t+ _ctype_[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3713: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3710: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_newlib=yes\n@@ -3743,17 +3740,17 @@ fi\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:3747: checking for $ac_hdr\" >&5\n+echo \"configure:3744: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3752 \"configure\"\n+#line 3749 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3757: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3754: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3782,12 +3779,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3786: checking for $ac_func\" >&5\n+echo \"configure:3783: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3791 \"configure\"\n+#line 3788 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3810,7 +3807,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3814: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3811: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3835,15 +3832,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:3839: checking for working mmap\" >&5\n+echo \"configure:3836: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3847 \"configure\"\n+#line 3844 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -3983,7 +3980,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:3987: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3984: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -4046,19 +4043,19 @@ fi\n \n if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:4050: checking for LC_MESSAGES\" >&5\n+echo \"configure:4047: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4055 \"configure\"\n+#line 4052 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:4062: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4059: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_val_LC_MESSAGES=yes\n else"}, {"sha": "5028b2a6cd5e7916046d656c0273f68526affca6", "filename": "libstdc++-v3/math/complex-stub.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fmath%2Fcomplex-stub.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fmath%2Fcomplex-stub.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2Fcomplex-stub.h?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,5 +1,5 @@\n \n-/* Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+/* Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n \n    This file is part of the GNU ISO C++ Library.  This library is free\n    software; you can redistribute it and/or modify it under the\n@@ -82,7 +82,5 @@ double cabs (__complex__ double x);\n float cabsf (__complex__ float x);\n long double cabsl (__complex__ long double x);\n \n-double nan (void);\n-\n #endif\n "}, {"sha": "dfc59edff17042f1a1636bc4c506c4f79169a08b", "filename": "libstdc++-v3/math/mathconf.h", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fmath%2Fmathconf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Fmath%2Fmathconf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2Fmathconf.h?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,6 +1,6 @@\n /* Configuration data for libmath subpart of libstdc++. */\n \n-/* Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+/* Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n \n    This file is part of the GNU ISO C++ Library.  This library is free\n    software; you can redistribute it and/or modify it under the\n@@ -74,6 +74,11 @@ typedef int Int32_t __attribute ((mode (SI)));\n # include <nan.h>\n #endif\n \n+#ifndef NAN\n+# define NAN (nan())\n+double nan (void);\n+#endif\n+\n #ifdef _GLIBCPP_HAVE_IEEEFP_H\n # include <ieeefp.h>\n #endif\n@@ -117,10 +122,6 @@ typedef int Int32_t __attribute ((mode (SI)));\n # endif\n #endif\n \n-#ifndef NAN\n-# define NAN (nan())\n-#endif\n-\n #ifndef M_PI\n # define M_PI 3.14159265358979323846\n #endif\n@@ -327,15 +328,10 @@ do {                                                            \\\n \n \n /* Replacement for non-existing float functions.  */\n-#ifndef _GLIBCPP_HAVE_FABSF\n-# ifdef __GNUC__\n-/* gcc has fabsf as a builtin command.  */\n-extern float fabsf (float);\n-# else\n-#  define fabsf(x) fabs (x)\n-# endif\n+#if !defined(_GLIBCPP_HAVE_FABSF) && !defined(_GLIBCPP_HAS_BUILTIN_FABSF)\n+# define fabsf(x) fabs (x)\n #endif\n-#ifndef _GLIBCPP_HAVE_COSF\n+#if !defined(_GLIBCPP_HAVE_COSF) && !defined(_GLIBCPP_HAS_BUILTIN_COSF)\n # define cosf(x) cos (x)\n #endif\n #ifndef _GLIBCPP_HAVE_COSHF\n@@ -353,13 +349,13 @@ extern float fabsf (float);\n #ifndef _GLIBCPP_HAVE_POWF\n # define powf(x, y) pow (x, y)\n #endif\n-#ifndef _GLIBCPP_HAVE_SINF\n+#if !defined(_GLIBCPP_HAVE_SINF) && !defined(_GLIBCPP_HAS_BUILTIN_SINF)\n # define sinf(x) sin (x)\n #endif\n #ifndef _GLIBCPP_HAVE_SINHF\n # define sinhf(x) sinh (x)\n #endif\n-#ifndef _GLIBCPP_HAVE_SQRTF\n+#if !defined(_GLIBCPP_HAVE_SQRTF) && !defined(_GLIBCPP_HAS_BUILTIN_SQRTF)\n # define sqrtf(x) sqrt (x)\n #endif\n #ifndef _GLIBCPP_HAVE_TANF\n@@ -375,7 +371,3 @@ extern float fabsf (float);\n #ifdef __cplusplus\n }\n #endif\n-\n-\n-\n-"}, {"sha": "0eaa3e0bb8df32fe968154bedbc997f3c0b092d7", "filename": "libstdc++-v3/testsuite/27_io/istream.cc", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream.cc?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,6 +1,6 @@\n // 1999-09-20 bkoz\n \n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,20 +30,16 @@\n // 27.6.1.1 basic_istream\n // NB: This file is for testing istream with NO OTHER INCLUDES.\n \n-// XXX only if using namespaces, as without leads to duplicate symbols\n-#if _GLIBCPP_USE_NAMESPACES \n #include <istream>\n-#include <bits/basic_ios.tcc> // XXX Hack, in a perfect world this not needed.\n-#include <locale> // XXX As above, needed for ctype/num_get use_facets(...)\n-#include <bits/locale_facets.tcc> // XXX\n \n namespace test {\n  \n+#if 0\n+  // XXX Should work, but doesn't.\n   using namespace std;\n   typedef short type_t;\n   template class basic_istream<type_t, char_traits<type_t> >;\n \n-#if 0\n   template\n     const ctype<type_t>& \n     use_facet<ctype<type_t> >(const locale&);\n@@ -55,7 +51,6 @@ namespace test {\n #endif\n \n } // test\n-#endif\n \n int main() {\n   return 0;"}, {"sha": "33cc35876449df36b01e6995fcff09217b02f9ff", "filename": "libstdc++-v3/testsuite/27_io/ostream.cc", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991a40fcc2d1fa2f20584eb5a98bf949fb87bd60/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream.cc?ref=991a40fcc2d1fa2f20584eb5a98bf949fb87bd60", "patch": "@@ -1,6 +1,6 @@\n // 1999-09-20 bkoz\n \n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,21 +30,18 @@\n // 27.6.2.1 basic_ostream\n // NB: This file is for testing ostream with NO OTHER INCLUDES.\n \n-// XXX only if using namespaces, as without leads to duplicate symbols\n-#if _GLIBCPP_USE_NAMESPACES \n #include <ostream>\n-#include <bits/basic_ios.tcc> // XXX Hack, in a perfect world this not needed.\n-#include <locale> // XXX As above, needed for ctype/num_get use_facets(...)\n-#include <bits/locale_facets.tcc>\n \n namespace test {\n  \n+#if 0\n+  // XXX Should work, but doesn't.\n   using namespace std;\n   typedef short type_t;\n   template class basic_ostream<type_t, char_traits<type_t> >;\n+#endif\n \n } // test\n-#endif\n \n int main() {\n   return 0;"}]}