{"sha": "57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NDRjMjlkNTBlNjM5NGUyYTVmN2U1ZTc0ZjI3Yjg2NWZiZmUxZg==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-03-13T12:17:46Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-03-13T12:17:46Z"}, "message": "Update BUGS, INSTALL, NEWS derived files\n\nFrom-SVN: r25744", "tree": {"sha": "e1f0404efa37192e5f3a8286916aa55d13f43c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1f0404efa37192e5f3a8286916aa55d13f43c90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/comments", "author": null, "committer": null, "parents": [{"sha": "51efa892bf3e3bdf5a3563965e8f1d4f02efb4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51efa892bf3e3bdf5a3563965e8f1d4f02efb4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51efa892bf3e3bdf5a3563965e8f1d4f02efb4ad"}], "stats": {"total": 2834, "additions": 142, "deletions": 2692}, "files": [{"sha": "0ff536d4aaa294500367b6203558dd1dddeb33cb", "filename": "gcc/f/BUGS", "status": "modified", "additions": 38, "deletions": 25, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/gcc%2Ff%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/gcc%2Ff%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FBUGS?ref=57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "patch": "@@ -1,27 +1,46 @@\n-NOTE: This file is automatically generated from the files `bugs0.texi'\n-and `bugs.texi'.  `BUGS' is *not* a source file, although it is\n-normally included within source distributions.\n+*Note:* This file is automatically generated from the files\n+`bugs0.texi' and `bugs.texi'.  `BUGS' is *not* a source file, although\n+it is normally included within source distributions.\n \n-   This file lists known bugs in the GNU Fortran compiler.  Copyright\n-(C) 1995-1998 Free Software Foundation, Inc.  You may copy, distribute,\n-and modify it freely as long as you preserve this copyright notice and\n-permission notice.\n+   This file lists known bugs in the EGCS-1.2 version of the GNU\n+Fortran compiler.  Copyright (C) 1995-1999 Free Software Foundation,\n+Inc.  You may copy, distribute, and modify it freely as long as you\n+preserve this copyright notice and permission notice.\n \n-Bugs in GNU Fortran\n-*******************\n+Known Bugs In GNU Fortran\n+*************************\n \n    This section identifies bugs that `g77' *users* might run into in\n-version {No Value For \"version-g77\"} of `g77'.  This includes bugs that\n-are actually in the `gcc' back end (GBE) or in `libf2c', because those\n-sets of code are at least somewhat under the control of (and\n-necessarily intertwined with) `g77', so it isn't worth separating them\n-out.\n-\n-   For information on bugs in *other* versions of `g77', *Note News\n-About GNU Fortran: News.\n+the EGCS-1.2 version of `g77'.  This includes bugs that are actually in\n+the `gcc' back end (GBE) or in `libf2c', because those sets of code are\n+at least somewhat under the control of (and necessarily intertwined\n+with) `g77', so it isn't worth separating them out.\n+\n+   For information on bugs in *other* versions of `g77', see\n+`egcs/gcc/f/NEWS'.  There, lists of bugs fixed in various versions of\n+`g77', can help determine what bugs existed in prior versions.\n+\n+   *Warning:* The information below is still under development, and\n+might not accurately reflect the `g77' code base of which it is a part.\n+Efforts are made to keep it somewhat up-to-date, but they are\n+particularly concentrated on any version of this information that is\n+distributed as part of a *released* `g77'.\n+\n+   In particular, while this information is intended to apply to the\n+EGCS-1.2 version of `g77', only an official *release* of that version\n+is expected to contain documentation that is most consistent with the\n+`g77' product in that version.\n+\n+   An online, \"live\" version of this document (derived directly from\n+the mainline, development version of `g77' within `egcs') is available\n+via `http://egcs.cygnus.com/onlinedocs/g77_bugs.html'.  Follow the\n+\"Known Bugs\" link.\n \n    For information on bugs that might afflict people who configure,\n-port, build, and install `g77', *Note Problems Installing::.\n+port, build, and install `g77', see \"Problems Installing\" in\n+`egcs/gcc/f/INSTALL'.\n+\n+   The following information was last updated on 1999-03-13:\n \n    * Automatic arrays possibly aren't working on HP-UX systems, at\n      least in HP-UX version 10.20.  Writing into them apparently causes\n@@ -78,10 +97,7 @@ port, build, and install `g77', *Note Problems Installing::.\n      compiler.)\n \n      Note that `g77' does display a warning message to notify the user\n-     before the compiler appears to hang.  *Note Initialization of\n-     Large Aggregate Areas: Large Initialization, for information on\n-     how to change the point at which `g77' decides to issue this\n-     warning.\n+     before the compiler appears to hang.\n \n    * `g77' doesn't emit variable and array members of common blocks for\n      use with a debugger (the `-g' command-line option).  The code is\n@@ -94,9 +110,6 @@ port, build, and install `g77', *Note Problems Installing::.\n      whereby some rudimentary information on a member is written as a\n      string that is the member's value as a character string.\n \n-     *Note Options for Code Generation Conventions: Code Gen Options,\n-     for information on the `-fdebug-kludge' option.\n-\n    * When debugging, after starting up the debugger but before being\n      able to see the source code for the main program unit, the user\n      must currently set a breakpoint at `MAIN__' (or `MAIN___' or"}, {"sha": "e1bac001019be1d413e8206a58888b0e680fda4a", "filename": "gcc/f/INSTALL", "status": "modified", "additions": 37, "deletions": 1248, "changes": 1285, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/gcc%2Ff%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/gcc%2Ff%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FINSTALL?ref=57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "patch": "@@ -1,252 +1,40 @@\n-NOTE: This file is automatically generated from the files\n+*Note:* This file is automatically generated from the files\n `install0.texi' and `g77install.texi'.  `INSTALL' is *not* a source\n file, although it is normally included within source distributions.\n \n    This file contains installation information for the GNU Fortran\n-compiler.  Copyright (C) 1995-1998 Free Software Foundation, Inc.  You\n-may copy, distribute, and modify it freely as long as you preserve this\n-copyright notice and permission notice.\n+compiler.  Copyright (C) {No Value For \"copyrights-install\"} Free\n+Software Foundation, Inc.  You may copy, distribute, and modify it\n+freely as long as you preserve this copyright notice and permission\n+notice.\n \n Installing GNU Fortran\n **********************\n \n    The following information describes how to install `g77'.\n \n-   Note that, for `egcs' users, much of this information is obsolete,\n+   Note that, for `egcs' users, much of the information is obsolete,\n and is superceded by the `egcs' installation procedures.  Such\n-information is explicitly flagged as such.\n+information is accordingly omitted and flagged as such.\n \n-   The information in this file generally pertains to dealing with\n-*source* distributions of `g77' and `gcc'.  It is possible that some of\n-this information will be applicable to some *binary* distributions of\n-these products--however, since these distributions are not made by the\n-maintainers of `g77', responsibility for binary distributions rests with\n-whoever built and first distributed them.\n+   *Warning:* The information below is still under development, and\n+might not accurately reflect the `g77' code base of which it is a part.\n+Efforts are made to keep it somewhat up-to-date, but they are\n+particularly concentrated on any version of this information that is\n+distributed as part of a *released* `g77'.\n \n-   Nevertheless, efforts to make `g77' easier to both build and install\n-from source and package up as a binary distribution are ongoing.\n+   In particular, while this information is intended to apply to the\n+EGCS-1.2 version of `g77', only an official *release* of that version\n+is expected to contain documentation that is most consistent with the\n+`g77' product in that version.\n+\n+   The following information was last updated on 1999-03-13:\n \n Prerequisites\n =============\n \n-   *Version info:* For `egcs' users, the following information is\n-superceded by the `egcs' installation instructions.\n-\n-   The procedures described to unpack, configure, build, and install\n-`g77' assume your system has certain programs already installed.\n-\n-   The following prerequisites should be met by your system before you\n-follow the `g77' installation instructions:\n-\n-`gzip' and `tar'\n-     To unpack the `gcc' and `g77' distributions, you'll need the\n-     `gunzip' utility in the `gzip' distribution.  Most UNIX systems\n-     already have `gzip' installed.  If yours doesn't, you can get it\n-     from the FSF.\n-\n-     Note that you'll need `tar' and other utilities as well, but all\n-     UNIX systems have these.  There are GNU versions of all these\n-     available--in fact, a complete GNU UNIX system can be put together\n-     on most systems, if desired.\n-\n-     The version of GNU `gzip' used to package this release is\n-     1.2.4.  (The version of GNU `tar' used to package this release is\n-     1.12.)\n-\n-`gcc-2.8.1.tar.gz'\n-     You need to have this, or some other applicable, version of `gcc'\n-     on your system.  The version should be an exact copy of a\n-     distribution from the FSF.  Its size is approximately 8.4MB.\n-\n-     If you've already unpacked `gcc-2.8.1.tar.gz' into a directory\n-     (named `gcc-2.8.1') called the \"source tree\" for `gcc', you can\n-     delete the distribution itself, but you'll need to remember to\n-     skip any instructions to unpack this distribution.\n-\n-     Without an applicable `gcc' source tree, you cannot build `g77'.\n-     You can obtain an FSF distribution of `gcc' from the FSF.\n-\n-`g77-0.5.24.tar.gz'\n-     You probably have already unpacked this package, or you are\n-     reading an advance copy of these installation instructions, which\n-     are contained in this distribution.  The size of this package is\n-     approximately 1.4MB.\n-\n-     You can obtain an FSF distribution of `g77' from the FSF, the same\n-     way you obtained `gcc'.\n-\n-Enough disk space\n-     The amount of disk space needed to unpack, build, install, and use\n-     `g77' depends on the type of system you're using, how you build\n-     `g77', and how much of it you install (primarily, which languages\n-     you install).\n-\n-     The sizes shown below assume all languages distributed in\n-     `gcc-2.8.1', plus `g77', will be built and installed.  These sizes\n-     are indicative of GNU/Linux systems on Intel x86 running COFF and\n-     on Digital Alpha (AXP) systems running ELF.  These should be\n-     fairly representative of 32-bit and 64-bit systems, respectively.\n-\n-     Note that all sizes are approximate and subject to change without\n-     notice!  They are based on preliminary releases of g77 made shortly\n-     before the public beta release.\n-\n-        -- `gcc' and `g77' distributions occupy 10MB packed, 40MB\n-          unpacked.  These consist of the source code and documentation,\n-          plus some derived files (mostly documentation), for `gcc' and\n-          `g77'.  Any deviations from these numbers for different kinds\n-          of systems are likely to be very minor.\n-\n-        -- A \"bootstrap\" build requires an additional 91MB for a total\n-          of 132MB on an ix86, and an additional 136MB for a total of\n-          177MB on an Alpha.\n-\n-        -- Removing `gcc/stage1' after the build recovers 13MB for a\n-          total of 119MB on an ix86, and recovers 21MB for a total of\n-          155MB on an Alpha.\n-\n-          After doing this, the integrity of the build can still be\n-          verified via `make compare', and the `gcc' compiler modified\n-          and used to build itself for testing fairly quickly, using\n-          the copy of the compiler kept in `gcc/stage2'.\n-\n-        -- Removing `gcc/stage2' after the build further recovers 39MB\n-          for a total of 80MB, and recovers 57MB for a total of 98MB on\n-          an Alpha.\n-\n-          After doing this, the compiler can still be installed,\n-          especially if GNU `make' is used to avoid gratuitous rebuilds\n-          (or, the installation can be done by hand).\n-\n-        -- Installing `gcc' and `g77' copies 23MB onto the `--prefix'\n-          disk for a total of 103MB on an ix86, and copies 31MB onto\n-          the `--prefix' disk for a total of 130MB on an Alpha.\n-\n-     After installation, if no further modifications and builds of\n-     `gcc' or `g77' are planned, the source and build directory may be\n-     removed, leaving the total impact on a system's disk storage as\n-     that of the amount copied during installation.\n-\n-     Systems with the appropriate version of `gcc' installed don't\n-     require the complete bootstrap build.  Doing a \"straight build\"\n-     requires about as much space as does a bootstrap build followed by\n-     removing both the `gcc/stage1' and `gcc/stage2' directories.\n-\n-     Installing `gcc' and `g77' over existing versions might require\n-     less *new* disk space, but note that, unlike many products, `gcc'\n-     installs itself in a way that avoids overwriting other installed\n-     versions of itself, so that other versions may easily be invoked\n-     (via `gcc -V VERSION').\n-\n-     So, the amount of space saved as a result of having an existing\n-     version of `gcc' and `g77' already installed is not\n-     much--typically only the command drivers (`gcc', `g77', `g++', and\n-     so on, which are small) and the documentation is overwritten by\n-     the new installation.  The rest of the new installation is done\n-     without replacing existing installed versions (assuming they have\n-     different version numbers).\n-\n-`make'\n-     Your system must have `make', and you will probably save yourself\n-     a lot of trouble if it is GNU `make' (sometimes referred to as\n-     `gmake').  In particular, you probably need GNU `make' to build\n-     outside the source directory (with `configure''s `--srcdir'\n-     option.)\n-\n-     The version of GNU `make' used to develop this release is\n-     3.76.1.\n-\n-`cc'\n-     Your system must have a working C compiler.  If it doesn't, you\n-     might be able to obtain a prebuilt binary of some version of `gcc'\n-     from the network or on CD-ROM, perhaps from the FSF.  The best\n-     source of information about binaries is probably a system-specific\n-     Usenet news group, initially via its FAQ.\n-\n-     *Note Installing GNU CC: (gcc)Installation, for more information\n-     on prerequisites for installing `gcc'.\n-\n-`sed'\n-     All UNIX systems have `sed', but some have a broken version that\n-     cannot handle configuring, building, or installing `gcc' or `g77'.\n-\n-     The version of GNU `sed' used to develop this release is\n-     2.05.  (Note that GNU `sed' version 3.0 was withdrawn by the\n-     FSF--if you happen to have this version installed, replace it with\n-     version 2.05 immediately.  See a GNU distribution site for further\n-     explanation.)\n-\n-`root' access or equivalent\n-     To perform the complete installation procedures on a system, you\n-     need to have `root' access to that system, or equivalent access to\n-     the `--prefix' directory tree specified on the `configure' command\n-     line.\n-\n-     Portions of the procedure (such as configuring and building `g77')\n-     can be performed by any user with enough disk space and virtual\n-     memory.\n-\n-     However, these instructions are oriented towards less-experienced\n-     users who want to install `g77' on their own personal systems.\n-\n-     System administrators with more experience will want to determine\n-     for themselves how they want to modify the procedures described\n-     below to suit the needs of their installation.\n-\n-`autoconf'\n-     The version of GNU `autoconf' used to develop this release is\n-     2.12.\n-\n-     `autoconf' is not needed in the typical case of installing `gcc'\n-     and `g77'.  *Note Missing tools?::, for information on when it\n-     might be needed and how to work around not having it.\n-\n-`bison'\n-     The version of GNU `bison' used to develop this release is\n-     1.25.\n-\n-     `bison' is not needed in the typical case of installing `gcc' and\n-     `g77'.  *Note Missing tools?::, for information on when it might\n-     be needed and how to work around not having it.\n-\n-`gperf'\n-     The version of GNU `gperf' used to develop this release is\n-     2.5.\n-\n-     `gperf' is not needed in the typical case of installing `gcc' and\n-     `g77'.  *Note Missing tools?::, for information on when it might\n-     be needed and how to work around not having it.\n-\n-`makeinfo'\n-     The version of GNU `makeinfo' used to develop this release is\n-     1.68.\n-\n-     `makeinfo' is part of the GNU `texinfo' package; `makeinfo'\n-     version 1.68 is distributed as part of GNU `texinfo' version\n-     3.12.\n-\n-     `makeinfo' is not needed in the typical case of installing `gcc'\n-     and `g77'.  *Note Missing tools?::, for information on when it\n-     might be needed and how to work around not having it.\n-\n-     An up-to-date version of GNU `makeinfo' is still convenient when\n-     obtaining a new version of a GNU distribution such as `gcc' or\n-     `g77', as it allows you to obtain the `.diff.gz' file instead of\n-     the entire `.tar.gz' distribution (assuming you have installed\n-     `patch').\n-\n-`patch'\n-     The version of GNU `patch' used to develop this release is\n-     2.5.\n-\n-     Beginning with `g77' version 0.5.23, it is no longer necessary to\n-     patch the `gcc' back end to build `g77'.\n-\n-     An up-to-date version of GNU `patch' is still convenient when\n-     obtaining a new version of a GNU distribution such as `gcc' or\n-     `g77', as it allows you to obtain the `.diff.gz' file instead of\n-     the entire `.tar.gz' distribution (assuming you have installed the\n-     tools needed to rebuild derived files, such as `makeinfo').\n+   For `egcs' users, this information is superceded by the `egcs'\n+installation instructions.\n \n Problems Installing\n ===================\n@@ -274,7 +62,7 @@ are no plans for an interim fix.\n \n    This requirement does not mean you must already have `gcc' installed\n to build `g77'.  As long as you have a working C compiler, you can use a\n-bootstrap build to automate the process of first building `gcc' using\n+\"bootstrap\" build to automate the process of first building `gcc' using\n the working C compiler you have, then building `g77' and rebuilding\n `gcc' using that just-built `gcc', and so on.\n \n@@ -295,47 +83,7 @@ not yet established.\n Missing strtoul or bsearch\n ..........................\n \n-   *Version info:* The following information does not apply to the\n-`egcs' version of `g77'.\n-\n-   On SunOS4 systems, linking the `f771' program used to produce an\n-error message concerning an undefined symbol named `_strtoul', because\n-the `strtoul' library function is not provided on that system.\n-\n-   Other systems have, in the past, been reported to not provide their\n-own `strtoul' or `bsearch' function.\n-\n-   Some versions `g77' tried to default to providing bare-bones\n-versions of `bsearch' and `strtoul' automatically, but every attempt at\n-this has failed for at least one kind of system.\n-\n-   To limit the failures to those few systems actually missing the\n-required routines, the bare-bones versions are still provided, in\n-`gcc/f/proj.c', if the appropriate macros are defined.  These are\n-`NEED_BSEARCH' for `bsearch' and `NEED_STRTOUL' for `NEED_STRTOUL'.\n-\n-   Therefore, if you are sure your system is missing `bsearch' or\n-`strtoul' in its library, define the relevant macro(s) before building\n-`g77'.  This can be done by editing `gcc/f/proj.c' and inserting either\n-or both of the following `#define' statements before the comment shown:\n-\n-     /* Insert #define statements here.  */\n-     \n-     #define NEED_BSEARCH\n-     #define NEED_STRTOUL\n-\n-   Then, continue configuring and building `g77' as usual.\n-\n-   Or, you can define these on the `make' command line.  To build with\n-the bundled `cc' on SunOS4, for example, try:\n-     make bootstrap BOOT_CFLAGS='-O2 -g -DNEED_STRTOUL'\n-\n-   If you then encounter problems compiling `gcc/f/proj.c', it might be\n-due to a discrepancy between how `bsearch' or `strtoul' are defined by\n-that file and how they're declared by your system's header files.\n-\n-   In that case, you'll have to use some basic knowledge of C to work\n-around the problem, perhaps by editing `gcc/f/proj.c' somewhat.\n+   This information does not apply to the `egcs' version of `g77'.\n \n Cleanup Kills Stage Directories\n ...............................\n@@ -375,7 +123,7 @@ System-specific Problems\n \n    A linker bug on some versions of AIX 4.1 might prevent building when\n `g77' is built within `gcc'.  It might also occur when building within\n-`egcs'.  *Note LINKFAIL::.\n+`egcs'.\n \n Cross-compiler Problems\n -----------------------\n@@ -426,7 +174,7 @@ Changing Settings Before Building\n =================================\n \n    Here are some internal `g77' settings that can be changed by editing\n-source files in `gcc/f/' before building.\n+source files in `egcs/gcc/f/' before building.\n \n    This information, and perhaps even these settings, represent\n stop-gap solutions to problems people doing various ports of `g77' have\n@@ -446,7 +194,7 @@ use of unit numbers higher than 99, you can change the value of the\n `MXUNIT' macro, which represents the maximum unit number, to an\n appropriately higher value.\n \n-   To do this, edit the file `f/runtime/libI77/fio.h' in your `g77'\n+   To do this, edit the file `egcs/libf2c/libI77/fio.h' in your `g77'\n source tree, changing the following line:\n \n      #define MXUNIT 100\n@@ -495,8 +243,8 @@ are building, you might wish to modify the `g77' source tree so that\n the version of `libg2c' is built with the `ALWAYS_FLUSH' macro defined,\n enabling this behavior.\n \n-   To do this, find this line in `f/runtime/f2c.h' in your `g77' source\n-tree:\n+   To do this, find this line in `egcs/libf2c/f2c.h' in your `g77'\n+source tree:\n \n      /* #define ALWAYS_FLUSH */\n \n@@ -510,7 +258,7 @@ Maximum Stackable Size\n \n    `g77', on most machines, puts many variables and arrays on the stack\n where possible, and can be configured (by changing\n-`FFECOM_sizeMAXSTACKITEM' in `gcc/f/com.c') to force smaller-sized\n+`FFECOM_sizeMAXSTACKITEM' in `egcs/gcc/f/com.c') to force smaller-sized\n entities into static storage (saving on stack space) or permit\n larger-sized entities to be put on the stack (which can improve\n run-time performance, as it presents more opportunities for the GBE to\n@@ -545,9 +293,9 @@ factor of 10.\n \n    This size currently is quite small, since `g77' currently has a\n known bug requiring too much memory and time to handle such cases.  In\n-`gcc/f/data.c', the macro `FFEDATA_sizeTOO_BIG_INIT_' is defined to the\n-minimum size for the warning to appear.  The size is specified in\n-storage units, which can be bytes, words, or whatever, on a\n+`egcs/gcc/f/data.c', the macro `FFEDATA_sizeTOO_BIG_INIT_' is defined\n+to the minimum size for the warning to appear.  The size is specified\n+in storage units, which can be bytes, words, or whatever, on a\n case-by-case basis.\n \n    After changing this macro definition, you must (of course) rebuild\n@@ -586,977 +334,18 @@ support 64-bit systems.\n Quick Start\n ===========\n \n-   *Version info:* For `egcs' users, the following information is\n-superceded by the `egcs' installation instructions.\n-\n-   This procedure configures, builds, and installs `g77' \"out of the\n-box\" and works on most UNIX systems.  Each command is identified by a\n-unique number, used in the explanatory text that follows.  For the most\n-part, the output of each command is not shown, though indications of\n-the types of responses are given in a few cases.\n-\n-   To perform this procedure, the installer must be logged in as user\n-`root'.  Much of it can be done while not logged in as `root', and\n-users experienced with UNIX administration should be able to modify the\n-procedure properly to do so.\n-\n-   Following traditional UNIX conventions, it is assumed that the\n-source trees for `g77' and `gcc' will be placed in `/usr/src'.  It also\n-is assumed that the source distributions themselves already reside in\n-`/usr/FSF', a naming convention used by the author of `g77' on his own\n-system:\n-\n-     /usr/FSF/gcc-2.8.1.tar.gz\n-     /usr/FSF/g77-0.5.24.tar.gz\n-\n-   If you vary *any* of the steps below, you might run into trouble,\n-including possibly breaking existing programs for other users of your\n-system.  Before doing so, it is wise to review the explanations of some\n-of the steps.  These explanations follow this list of steps.\n-\n-     sh[ 1]# cd /usr/src\n-     \n-     sh[ 2]# gunzip -c < /usr/FSF/gcc-2.8.1.tar.gz | tar xf -\n-     [Might say \"Broken pipe\"...that is normal on some systems.]\n-     \n-     sh[ 3]# gunzip -c < /usr/FSF/g77-0.5.24.tar.gz | tar xf -\n-     [\"Broken pipe\" again possible.]\n-     \n-     sh[ 4]# ln -s gcc-2.8.1 gcc\n-     \n-     sh[ 5]# ln -s g77-0.5.24 g77\n-     \n-     sh[ 6]# mv -i g77/* gcc\n-     [No questions should be asked by mv here; or, you made a mistake.]\n-     \n-     sh[ 7]# cd gcc\n-     sh[ 8]# ./configure --prefix=/usr\n-     [Do not do the above if gcc is not installed in /usr/bin.\n-     You might need a different --prefix=..., as\n-     described below.]\n-     \n-     sh[ 9]# make bootstrap\n-     [This takes a long time, and is where most problems occur.]\n-     \n-     sh[10]# make compare\n-     [This verifies that the compiler is `sane'.\n-     If any files are printed, you have likely found a g77 bug.]\n-     \n-     sh[11]# rm -fr stage1\n-     \n-     sh[12]# make -k install\n-     [The actual installation.]\n-     \n-     sh[13]# g77 -v\n-     [Verify that g77 is installed, obtain version info.]\n-     \n-     sh[14]#\n-\n-   *Note Updating Your Info Directory: Updating Documentation, for\n-information on how to update your system's top-level `info' directory\n-to contain a reference to this manual, so that users of `g77' can\n-easily find documentation instead of having to ask you for it.\n-\n-   Elaborations of many of the above steps follows:\n-\n-Step 1: `cd /usr/src'\n-     You can build `g77' pretty much anyplace.  By convention, this\n-     manual assumes `/usr/src'.  It might be helpful if other users on\n-     your system knew where to look for the source code for the\n-     installed version of `g77' and `gcc' in any case.\n-\n-Step 3: `gunzip -d < /usr/FSF/g77-0.5.24.tar.gz | tar xf -'\n-     It is not always necessary to obtain the latest version of `g77'\n-     as a complete `.tar.gz' file if you have a complete, earlier\n-     distribution of `g77'.  If appropriate, you can unpack that earlier\n-     version of `g77', and then apply the appropriate patches to\n-     achieve the same result--a source tree containing version\n-     0.5.24 of `g77'.\n-\n-Step 4: `ln -s gcc-2.8.1 gcc'\n-\n-Step 5: `ln -s g77-0.5.24 g77'\n-     These commands mainly help reduce typing, and help reduce visual\n-     clutter in examples in this manual showing what to type to install\n-     `g77'.\n-\n-     *Note Unpacking::, for information on using distributions of `g77'\n-     made by organizations other than the FSF.\n-\n-Step 6: `mv -i g77/* gcc'\n-     After doing this, you can, if you like, type `rm g77' and `rmdir\n-     g77-0.5.24' to remove the empty directory and the symbol link to\n-     it.  But, it might be helpful to leave them around as quick\n-     reminders of which version(s) of `g77' are installed on your\n-     system.\n-\n-     *Note Unpacking::, for information on the contents of the `g77'\n-     directory (as merged into the `gcc' directory).\n-\n-Step 8: `./configure --prefix=/usr'\n-     This is where you specify that the `g77' and `gcc' executables are\n-     to be installed in `/usr/bin/', the `g77' and `gcc' documentation\n-     is to be installed in `/usr/info/' and `/usr/man/', and so on.\n-\n-     You should ensure that any existing installation of the `gcc'\n-     executable is in `/usr/bin/'.\n-\n-     However, if that existing version of `gcc' is not 2.8.1, or if you\n-     simply wish to avoid risking overwriting it with a newly built\n-     copy of the same version, you can specify `--prefix=/usr/local'\n-     (which is the default) or some other path, and invoke the newly\n-     installed version directly from that path's `bin' directory.\n-\n-     *Note Where in the World Does Fortran (and GNU CC) Go?: Where to\n-     Install, for more information on determining where to install\n-     `g77'.  *Note Configuring gcc::, for more information on the\n-     configuration process triggered by invoking the `./configure'\n-     script.\n-\n-Step 9: `make bootstrap'\n-     *Note Installing GNU CC: (gcc)Installation, for information on the\n-     kinds of diagnostics you should expect during this procedure.\n-\n-     *Note Building gcc::, for complete `g77'-specific information on\n-     this step.\n-\n-Step 10: `make compare'\n-     *Note Where to Port Bugs: Bug Lists, for information on where to\n-     report that you observed files having different contents during\n-     this phase.\n-\n-     *Note How to Report Bugs: Bug Reporting, for information on *how*\n-     to report bugs like this.\n-\n-Step 11: `rm -fr stage1'\n-     You don't need to do this, but it frees up disk space.\n-\n-Step 12: `make -k install'\n-     If this doesn't seem to work, try:\n-\n-          make -k install install-libf77\n-\n-     Or, make sure you're using GNU `make'.\n-\n-     *Note Installation of Binaries::, for more information.\n-\n-     *Note Updating Your Info Directory: Updating Documentation, for\n-     information on entering this manual into your system's list of\n-     texinfo manuals.\n-\n-Step 13: `g77 -v'\n-     If this command prints approximately 25 lines of output, including\n-     the GNU Fortran Front End version number (which should be the same\n-     as the version number for the version of `g77' you just built and\n-     installed) and the version numbers for the three parts of the\n-     `libf2c' library (`libF77', `libI77', `libU77'), and those version\n-     numbers are all in agreement, then there is a high likelihood that\n-     the installation has been successfully completed.\n-\n-     You might consider doing further testing.  For example, log in as\n-     a non-privileged user, then create a small Fortran program, such\n-     as:\n-\n-                PROGRAM SMTEST\n-                DO 10 I=1, 10\n-                   PRINT *, 'Hello World #', I\n-          10    CONTINUE\n-                END\n-\n-     Compile, link, and run the above program, and, assuming you named\n-     the source file `smtest.f', the session should look like this:\n-\n-          sh# g77 -o smtest smtest.f\n-          sh# ./smtest\n-           Hello World # 1\n-           Hello World # 2\n-           Hello World # 3\n-           Hello World # 4\n-           Hello World # 5\n-           Hello World # 6\n-           Hello World # 7\n-           Hello World # 8\n-           Hello World # 9\n-           Hello World # 10\n-          sh#\n-\n-     If invoking `g77' doesn't seem to work, the problem might be that\n-     you've installed it in a location that is not in your shell's\n-     search path.  For example, if you specified `--prefix=/gnu', and\n-     `/gnu/bin' is not in your `PATH' environment variable, you must\n-     explicitly specify the location of the compiler via `/gnu/bin/g77\n-     -o smtest smtest.f'.\n-\n-     After proper installation, you don't need to keep your gcc and g77\n-     source and build directories around anymore.  Removing them can\n-     free up a lot of disk space.\n+   For `egcs' users, this information is superceded by the `egcs'\n+installation instructions.\n \n Complete Installation\n =====================\n \n-   *Version info:* For `egcs' users, the following information is\n-mostly superceded by the `egcs' installation instructions.\n-\n-   Here is the complete `g77'-specific information on how to configure,\n-build, and install `g77'.\n-\n-Unpacking\n----------\n-\n-   The `gcc' source distribution is a stand-alone distribution.  It is\n-designed to be unpacked (producing the `gcc' source tree) and built as\n-is, assuming certain prerequisites are met (including the availability\n-of compatible UNIX programs such as `make', `cc', and so on).\n-\n-   However, before building `gcc', you will want to unpack and merge\n-the `g77' distribution in with it, so that you build a Fortran-capable\n-version of `gcc', which includes the `g77' command, the necessary\n-run-time libraries, and this manual.\n-\n-   Unlike `gcc', the `g77' source distribution is *not* a stand-alone\n-distribution.  It is designed to be unpacked and, afterwards,\n-immediately merged into an applicable `gcc' source tree.  That is, the\n-`g77' distribution *augments* a `gcc' distribution--without `gcc',\n-generally only the documentation is immediately usable.\n-\n-   A sequence of commands typically used to unpack `gcc' and `g77' is:\n-\n-     sh# cd /usr/src\n-     sh# gunzip -c /usr/FSF/gcc-2.8.1.tar.gz | tar xf -\n-     sh# gunzip -c /usr/FSF/g77-0.5.24.tar.gz | tar xf -\n-     sh# ln -s gcc-2.8.1 gcc\n-     sh# ln -s g77-0.5.24 g77\n-     sh# mv -i g77/* gcc\n-\n-   *Notes:* The commands beginning with `gunzip...' might print `Broken\n-pipe...' as they complete.  That is nothing to worry about, unless you\n-actually *hear* a pipe breaking.  The `ln' commands are helpful in\n-reducing typing and clutter in installation examples in this manual.\n-Hereafter, the top level of `gcc' source tree is referred to as `gcc',\n-and the top level of just the `g77' source tree (prior to issuing the\n-`mv' command, above) is referred to as `g77'.\n-\n-   There are three top-level names in a `g77' distribution:\n-\n-     g77/COPYING.g77\n-     g77/README.g77\n-     g77/f\n-\n-   All three entries should be moved (or copied) into a `gcc' source\n-tree (typically named after its version number and as it appears in the\n-FSF distributions--e.g. `gcc-2.8.1').\n-\n-   `g77/f' is the subdirectory containing all of the code,\n-documentation, and other information that is specific to `g77'.  The\n-other two files exist to provide information on `g77' to someone\n-encountering a `gcc' source tree with `g77' already present, who has\n-not yet read these installation instructions and thus needs help\n-understanding that the source tree they are looking at does not come\n-from a single FSF distribution.  They also help people encountering an\n-unmerged `g77' source tree for the first time.\n-\n-   *Note:* Please use *only* `gcc' and `g77' source trees as\n-distributed by the FSF.  Use of modified versions is likely to result\n-in problems that appear to be in the `g77' code but, in fact, are not.\n-Do not use such modified versions unless you understand all the\n-differences between them and the versions the FSF distributes--in which\n-case you should be able to modify the `g77' (or `gcc') source trees\n-appropriately so `g77' and `gcc' can coexist as they do in the stock\n-FSF distributions.\n-\n-Merging Distributions\n----------------------\n-\n-   After merging the `g77' source tree into the `gcc' source tree, you\n-have put together a complete `g77' source tree.\n-\n-   As of version 0.5.23, `g77' no longer modifies the version number of\n-`gcc', nor does it patch `gcc' itself.\n-\n-   `g77' still depends on being merged with an appropriate version of\n-`gcc'.  For version 0.5.24 of `g77', the specific version of `gcc'\n-supported is 2.8.1.\n-\n-   However, other versions of `gcc' might be suitable \"hosts\" for this\n-version of `g77'.\n-\n-   GNU version numbers make it easy to figure out whether a particular\n-version of a distribution is newer or older than some other version of\n-that distribution.  The format is, generally, MAJOR.MINOR.PATCH, with\n-each field being a decimal number.  (You can safely ignore leading\n-zeros; for example, 1.5.3 is the same as 1.5.03.)  The MAJOR field only\n-increases with time.  The other two fields are reset to 0 when the\n-field to their left is incremented; otherwise, they, too, only increase\n-with time.  So, version 2.6.2 is newer than version 2.5.8, and version\n-3.0 is newer than both.  (Trailing `.0' fields often are omitted in\n-announcements and in names for distributions and the directories they\n-create.)\n-\n-   If your version of `gcc' is older than the oldest version supported\n-by `g77' (as casually determined by listing the contents of\n-`gcc/f/INSTALL/', which contains these installation instructions in\n-plain-text format), you should obtain a newer, supported version of\n-`gcc'.  (You could instead obtain an older version of `g77', or try and\n-get your `g77' to work with the old `gcc', but neither approach is\n-recommended, and you shouldn't bother reporting any bugs you find if you\n-take either approach, because they're probably already fixed in the\n-newer versions you're not using.)\n-\n-   If your version of `gcc' is newer than the newest version supported\n-by `g77', it is possible that your `g77' will work with it anyway.  If\n-the version number for `gcc' differs only in the PATCH field, you might\n-as well try that version of `gcc'.  Since it has the same MAJOR and\n-MINOR fields, the resulting combination is likely to work.\n-\n-   So, for example, if a particular version of `g77' has support for\n-`gcc' versions 2.8.0 and 2.8.1, it is likely that `gcc-2.8.2' would\n-work well with `g77'.\n-\n-   However, `gcc-2.9.0' would almost certainly not work with that\n-version of `g77' without appropriate modifications, so a new version of\n-`g77' would be needed (and you should wait for it rather than bothering\n-the maintainers--*note User-Visible Changes: Changes.).\n-\n-   This complexity is the result of `gcc' and `g77' being separate\n-distributions.  By keeping them separate, each product is able to be\n-independently improved and distributed to its user base more frequently.\n-\n-   However, the GBE interface defined by `gcc' typically undergoes some\n-incompatible changes at least every time the MINOR field of the version\n-number is incremented, and such changes require corresponding changes to\n-the `g77' front end (FFE).\n-\n-Where in the World Does Fortran (and GNU CC) Go?\n-------------------------------------------------\n-\n-   Before configuring, you should make sure you know where you want the\n-`g77' and `gcc' binaries to be installed after they're built, because\n-this information is given to the configuration tool and used during the\n-build itself.\n-\n-   A `g77' installation normally includes installation of a\n-Fortran-aware version of `gcc', so that the `gcc' command recognizes\n-Fortran source files and knows how to compile them.\n-\n-   For this to work, the version of `gcc' that you will be building as\n-part of `g77' *must* be installed as the \"active\" version of `gcc' on\n-the system.\n-\n-   Sometimes people make the mistake of installing `gcc' as\n-`/usr/local/bin/gcc', leaving an older, non-Fortran-aware version in\n-`/usr/bin/gcc'.  (Or, the opposite happens.)  This can result in `gcc'\n-being unable to compile Fortran source files, because when the older\n-version of `gcc' is invoked, it complains that it does not recognize\n-the language, or the file name suffix.\n-\n-   So, determine whether `gcc' already is installed on your system,\n-and, if so, *where* it is installed, and prepare to configure the new\n-version of `gcc' you'll be building so that it installs over the\n-existing version of `gcc'.\n-\n-   You might want to back up your existing copy of `/usr/bin/gcc', and\n-the entire `/usr/lib' directory, before you perform the actual\n-installation (as described in this manual).\n-\n-   Existing `gcc' installations typically are found in `/usr' or\n-`/usr/local'.  (This means the commands are installed in `/usr/bin' or\n-`/usr/local/bin', the libraries in `/usr/lib' or `/usr/local/lib', and\n-so on.)\n-\n-   If you aren't certain where the currently installed version of `gcc'\n-and its related programs reside, look at the output of this command:\n-\n-     gcc -v -o /tmp/delete-me -xc /dev/null -xnone\n-\n-   All sorts of interesting information on the locations of various\n-`gcc'-related programs and data files should be visible in the output\n-of the above command.  (The output also is likely to include a\n-diagnostic from the linker, since there's no `main_()' function.)\n-However, you do have to sift through it yourself; `gcc' currently\n-provides no easy way to ask it where it is installed and where it looks\n-for the various programs and data files it calls on to do its work.\n-\n-   Just *building* `g77' should not overwrite any installed\n-programs--but, usually, after you build `g77', you will want to install\n-it, so backing up anything it might overwrite is a good idea.  (This is\n-true for any package, not just `g77', though in this case it is\n-intentional that `g77' overwrites `gcc' if it is already installed--it\n-is unusual that the installation process for one distribution\n-intentionally overwrites a program or file installed by another\n-distribution, although, in this case, `g77' is an augmentation of the\n-`gcc' distribution.)\n-\n-   Another reason to back up the existing version first, or make sure\n-you can restore it easily, is that it might be an older version on\n-which other users have come to depend for certain behaviors.  However,\n-even the new version of `gcc' you install will offer users the ability\n-to specify an older version of the actual compilation programs if\n-desired, and these older versions need not include any `g77' components.\n-*Note Specifying Target Machine and Compiler Version: (gcc)Target\n-Options, for information on the `-V' option of `gcc'.\n-\n-Configuring GNU CC\n-------------------\n-\n-   `g77' is configured automatically when you configure `gcc'.  There\n-are two parts of `g77' that are configured in two different\n-ways--`g77', which \"camps on\" to the `gcc' configuration mechanism, and\n-`libg2c', which uses a variation of the GNU `autoconf' configuration\n-system.\n-\n-   Generally, you shouldn't have to be concerned with either `g77' or\n-`libg2c' configuration, unless you're configuring `g77' as a\n-cross-compiler.  In this case, the `libg2c' configuration, and possibly\n-the `g77' and `gcc' configurations as well, might need special\n-attention.  (This also might be the case if you're porting `gcc' to a\n-whole new system--even if it is just a new operating system on an\n-existing, supported CPU.)\n-\n-   To configure the system, see *Note Installing GNU CC:\n-(gcc)Installation, following the instructions for running `./configure'.\n-Pay special attention to the `--prefix=' option, which you almost\n-certainly will need to specify.\n-\n-   (Note that `gcc' installation information is provided as a\n-plain-text file in `gcc/INSTALL'.)\n-\n-   The information printed by the invocation of `./configure' should\n-show that the `f' directory (the Fortran language) has been configured.\n-If it does not, there is a problem.\n-\n-   *Note:* Configuring with the `--srcdir' argument, or by starting in\n-an empty directory and typing a command such as `../gcc/configure' to\n-build with separate build and source directories, is known to work with\n-GNU `make', but it is known to not work with other variants of `make'.\n-Irix5.2 and SunOS4.1 versions of `make' definitely won't work outside\n-the source directory at present.\n-\n-   `g77''s portion of the `configure' script used to issue a warning\n-message about this when configuring for building binaries outside the\n-source directory, but no longer does this as of version 0.5.23.\n-\n-   Instead, `g77' simply rejects most common attempts to build it using\n-a non-GNU `make' when the build directory is not the same as the source\n-directory, issuing an explanatory diagnostic.\n-\n-Building GNU CC\n----------------\n-\n-   Building `g77' requires building enough of `gcc' that these\n-instructions assume you're going to build all of `gcc', including\n-`g++', `protoize', and so on.  You can save a little time and disk\n-space by changes the `LANGUAGES' macro definition in `gcc/Makefile.in'\n-or `gcc/Makefile', but if you do that, you're on your own.  One change\n-is almost *certainly* going to cause failures: removing `c' or `f77'\n-from the definition of the `LANGUAGES' macro.\n-\n-   After configuring `gcc', which configures `g77' and `libg2c'\n-automatically, you're ready to start the actual build by invoking\n-`make'.\n-\n-   *Note:* You *must* have run the `configure' script in `gcc' before\n-you run `make', even if you're using an already existing `gcc'\n-development directory, because `./configure' does the work to recognize\n-that you've added `g77' to the configuration.\n-\n-   There are two general approaches to building GNU CC from scratch:\n-\n-\"bootstrap\"\n-     This method uses minimal native system facilities to build a\n-     barebones, unoptimized `gcc', that is then used to compile\n-     (\"bootstrap\") the entire system.\n-\n-\"straight\"\n-     This method assumes a more complete native system exists, and uses\n-     that just once to build the entire system.\n-\n-   On all systems without a recent version of `gcc' already installed,\n-the bootstrap method must be used.  In particular, `g77' uses\n-extensions to the C language offered, apparently, only by `gcc'.\n-\n-   On most systems with a recent version of `gcc' already installed,\n-the straight method can be used.  This is an advantage, because it\n-takes less CPU time and disk space for the build.  However, it does\n-require that the system have fairly recent versions of many GNU\n-programs and other programs, which are not enumerated here.\n-\n-Bootstrap Build\n-...............\n-\n-   A complete bootstrap build is done by issuing a command beginning\n-with `make bootstrap ...', as described in *Note Installing GNU CC:\n-(gcc)Installation.  This is the most reliable form of build, but it\n-does require the most disk space and CPU time, since the complete system\n-is built twice (in Stages 2 and 3), after an initial build (during\n-Stage 1) of a minimal `gcc' compiler using the native compiler and\n-libraries.\n-\n-   You might have to, or want to, control the way a bootstrap build is\n-done by entering the `make' commands to build each stage one at a time,\n-as described in the `gcc' manual.  For example, to save time or disk\n-space, you might want to not bother doing the Stage 3 build, in which\n-case you are assuming that the `gcc' compiler you have built is\n-basically sound (because you are giving up the opportunity to compare a\n-large number of object files to ensure they're identical).\n-\n-   To save some disk space during installation, after Stage 2 is built,\n-you can type `rm -fr stage1' to remove the binaries built during Stage\n-1.\n-\n-   Also, *Note Installing GNU CC: (gcc)Installation, for important\n-information on building `gcc' that is not described in this `g77'\n-manual.  For example, explanations of diagnostic messages and whether\n-they're expected, or indicate trouble, are found there.\n-\n-Straight Build\n-..............\n-\n-   If you have a recent version of `gcc' already installed on your\n-system, and if you're reasonably certain it produces code that is\n-object-compatible with the version of `gcc' you want to build as part\n-of building `g77', you can save time and disk space by doing a straight\n-build.\n-\n-   To build just the compilers along with the necessary run-time\n-libraries, issue the following command:\n-\n-     make -k CC=gcc\n-\n-   If you run into problems using this method, you have two options:\n-\n-   * Abandon this approach and do a bootstrap build.\n-\n-   * Try to make this approach work by diagnosing the problems you're\n-     running into and retrying.\n-\n-   Especially if you do the latter, you might consider submitting any\n-solutions as bug/fix reports.  *Note Known Causes of Trouble with GNU\n-Fortran: Trouble.\n-\n-   However, understand that many problems preventing a straight build\n-from working are not `g77' problems, and, in such cases, are not likely\n-to be addressed in future versions of `g77'.  Consider treating them as\n-`gcc' bugs instead.\n-\n-Pre-installation Checks\n------------------------\n-\n-   Before installing the system, which includes installing `gcc', you\n-might want to do some minimum checking to ensure that some basic things\n-work.\n-\n-   Here are some commands you can try, and output typically printed by\n-them when they work:\n-\n-     sh# cd /usr/src/gcc\n-     sh# ./g77 -B./ -v\n-     g77 version 0.5.24\n-     Driving: ./g77 -B./ -v -c -xf77-version /dev/null -xnone\n-     Reading specs from ./specs\n-     gcc version 2.8.1\n-      cpp -lang-c -v -isystem ./include -undef -D__GNUC__=2 ...\n-     GNU CPP version 2.8.1 (Alpha GNU/Linux with ELF)\n-     #include \"...\" search starts here:\n-     #include <...> search starts here:\n-      include\n-      /usr/alpha-linux/include\n-      /usr/lib/gcc-lib/alpha-linux/2.8.1/include\n-      /usr/include\n-     End of search list.\n-      ./f771 -fnull-version -quiet -dumpbase g77-version.f -version ...\n-     GNU F77 version 2.8.1 (alpha-linux) compiled ...\n-     GNU Fortran Front End version 0.5.24\n-      as -nocpp -o /tmp/cca14485.o /tmp/cca14485.s\n-      ld -m elf64alpha -G 8 -O1 -dynamic-linker /lib/ld-linux.so.2 ...\n-      /tmp/cca14485\n-     __G77_LIBF77_VERSION__: 0.5.24\n-     @(#)LIBF77 VERSION 19970919\n-     __G77_LIBI77_VERSION__: 0.5.24\n-     @(#) LIBI77 VERSION pjw,dmg-mods 19980405\n-     __G77_LIBU77_VERSION__: 0.5.24\n-     @(#) LIBU77 VERSION 19970919\n-     sh# ./xgcc -B./ -v -o /tmp/delete-me -xc /dev/null -xnone\n-     Reading specs from ./specs\n-     gcc version 2.8.1\n-      ./cpp -lang-c -v -isystem ./include -undef ...\n-     GNU CPP version 2.8.1 (Alpha GNU/Linux with ELF)\n-     #include \"...\" search starts here:\n-     #include <...> search starts here:\n-      include\n-      /usr/alpha-linux/include\n-      /usr/lib/gcc-lib/alpha-linux/2.8.1/include\n-      /usr/include\n-     End of search list.\n-      ./cc1 /tmp/cca18063.i -quiet -dumpbase null.c -version ...\n-     GNU C version 2.8.1 (alpha-linux) compiled ...\n-      as -nocpp -o /tmp/cca180631.o /tmp/cca18063.s\n-      ld -m elf64alpha -G 8 -O1 -dynamic-linker /lib/ld-linux.so.2 ...\n-     /usr/lib/crt1.o: In function `_start':\n-     ../sysdeps/alpha/elf/start.S:77: undefined reference to `main'\n-     ../sysdeps/alpha/elf/start.S:77: undefined reference to `main'\n-     sh#\n-\n-   (Note that long lines have been truncated, and `...'  used to\n-indicate such truncations.)\n-\n-   The above two commands test whether `g77' and `gcc', respectively,\n-are able to compile empty (null) source files, whether invocation of\n-the C preprocessor works, whether libraries can be linked, and so on.\n-\n-   If the output you get from either of the above two commands is\n-noticeably different, especially if it is shorter or longer in ways\n-that do not look consistent with the above sample output, you probably\n-should not install `gcc' and `g77' until you have investigated further.\n-\n-   For example, you could try compiling actual applications and seeing\n-how that works.  (You might want to do that anyway, even if the above\n-tests work.)\n-\n-   To compile using the not-yet-installed versions of `gcc' and `g77',\n-use the following commands to invoke them.\n-\n-   To invoke `g77', type:\n-\n-     /usr/src/gcc/g77 -B/usr/src/gcc/ ...\n-\n-   To invoke `gcc', type:\n-\n-     /usr/src/gcc/xgcc -B/usr/src/gcc/ ...\n-\n-Installation of Binaries\n-------------------------\n-\n-   After configuring, building, and testing `g77' and `gcc', when you\n-are ready to install them on your system, type:\n-\n-     make -k CC=gcc install\n-\n-   As described in *Note Installing GNU CC: (gcc)Installation, the\n-values for the `CC' and `LANGUAGES' macros should be the same as those\n-you supplied for the build itself.\n-\n-   So, the details of the above command might vary if you used a\n-bootstrap build (where you might be able to omit both definitions, or\n-might have to supply the same definitions you used when building the\n-final stage) or if you deviated from the instructions for a straight\n-build.\n-\n-   If the above command does not install `libg2c.a' as expected, try\n-this:\n-\n-     make -k ... install install-libf77\n-\n-   We don't know why some non-GNU versions of `make' sometimes require\n-this alternate command, but they do.  (Remember to supply the\n-appropriate definition for `CC' where you see `...' in the above\n-command.)\n-\n-   Note that using the `-k' option tells `make' to continue after some\n-installation problems, like not having `makeinfo' installed on your\n-system.  It might not be necessary for your system.\n-\n-   *Note:* `g77' no longer installs files not directly part of `g77',\n-such as `/usr/bin/f77', `/usr/lib/libf2c.a', and `/usr/include/f2c.h',\n-or their `/usr/local' equivalents.\n-\n-   *Note Distributing Binaries::, for information on how to accommodate\n-systems with no existing non-`g77' `f77' compiler and systems with\n-`f2c' installed.\n-\n-Updating Your Info Directory\n-----------------------------\n-\n-   As part of installing `g77', you should make sure users of `info'\n-can easily access this manual on-line.\n-\n-   `g77' does this automatically by invoking the `install-info' command\n-when you use `make install' to install `g77'.\n-\n-   If that fails, or if the `info' directory it updates is not the one\n-normally accessed by users, consider invoking it yourself.  For example:\n-\n-     install-info --info-dir=/usr/info /usr/info/g77.info\n-\n-   The above example assumes the `g77' documentation already is\n-installed in `/usr/info' and that `/usr/info/dir' is the file you wish\n-to update.  Adjust the command accordingly, if those assumptions are\n-wrong.\n-\n-Missing tools?\n---------------\n-\n-   A build of `gcc' might fail due to one or more tools being called\n-upon by `make' (during the build or install process), when those tools\n-are not installed on your system.\n-\n-   This situation can result from any of the following actions\n-(performed by you or someone else):\n-\n-   * Changing the source code or documentation yourself (as a developer\n-     or technical writer).\n-\n-   * Applying a patch that changes the source code or documentation\n-     (including, sometimes, the official patches distributed by the\n-     FSF).\n-\n-   * Deleting the files that are created by the (missing) tools.\n-\n-     The `make maintainer-clean' command is supposed to delete these\n-     files, so invoking this command without having all the appropriate\n-     tools installed is not recommended.\n-\n-   * Creating the source directory using a method that does not\n-     preserve the date-time-modified information in the original\n-     distribution.\n-\n-     For example, the UNIX `cp -r' command copies a directory tree\n-     without preserving the date-time-modified information.  Use `cp\n-     -pr' instead.\n-\n-   The reason these activities cause `make' to try and invoke tools\n-that it probably wouldn't when building from a perfectly \"clean\" source\n-directory containing `gcc' and `g77' is that some files in the source\n-directory (and the corresponding distribution) aren't really source\n-files, but *derived* files that are produced by running tools with the\n-corresponding source files as input.  These derived files \"depend\", in\n-`make' terminology, on the corresponding source files.\n-\n-   `make' determines that a file that depends on another needs to be\n-updated if the date-time-modified information for the source file shows\n-that it is newer than the corresponding information for the derived\n-file.\n-\n-   If it makes that determination, `make' runs the appropriate commands\n-(specified in the \"Makefile\") to update the derived file, and this\n-process typically calls upon one or more installed tools to do the work.\n-\n-   The \"safest\" approach to dealing with this situation is to recreate\n-the `gcc' and `g77' source directories from complete `gcc' and `g77'\n-distributions known to be provided by the FSF.\n-\n-   Another fairly \"safe\" approach is to simply install the tools you\n-need to complete the build process.  This is especially appropriate if\n-you've changed the source code or applied a patch to do so.\n-\n-   However, if you're certain that the problem is limited entirely to\n-incorrect date-time-modified information, that there are no\n-discrepancies between the contents of source files and files derived\n-from them in the source directory, you can often update the\n-date-time-modified information for the derived files to work around the\n-problem of not having the appropriate tools installed.\n-\n-   On UNIX systems, the simplest way to update the date-time-modified\n-information of a file is to use the use the `touch' command.\n-\n-   How to use `touch' to update the derived files updated by each of\n-the tools is described below.  *Note:* New versions of `g77' might\n-change the set of files it generates by invoking each of these tools.\n-If you cannot figure out for yourself how to handle such a situation,\n-try an older version of `g77' until you find someone who can (or until\n-you obtain and install the relevant tools).\n-\n-Missing `autoconf'?\n-...................\n-\n-   If you cannot install `autoconf', make sure you have started with a\n-*fresh* distribution of `gcc' and `g77', do *not* do `make\n-maintainer-clean', and, to ensure that `autoconf' is not invoked by\n-`make' during the build, type these commands:\n-\n-     sh# cd gcc/f/runtime\n-     sh# touch configure libU77/configure\n-     sh# cd ../../..\n-     sh#\n-\n-Missing `bison'?\n-................\n-\n-   If you cannot install `bison', make sure you have started with a\n-*fresh* distribution of `gcc', do *not* do `make maintainer-clean',\n-and, to ensure that `bison' is not invoked by `make' during the build,\n-type these commands:\n-\n-     sh# cd gcc\n-     sh# touch bi-parser.c bi-parser.h c-parse.c c-parse.h cexp.c\n-     sh# touch cp/parse.c cp/parse.h objc-parse.c\n-     sh# cd ..\n-     sh#\n-\n-Missing `gperf'?\n-................\n-\n-   If you cannot install `gperf', make sure you have started with a\n-*fresh* distribution of `gcc', do *not* do `make maintainer-clean',\n-and, to ensure that `gperf' is not invoked by `make' during the build,\n-type these commands:\n-\n-     sh# cd gcc\n-     sh# touch c-gperf.h\n-     sh# cd ..\n-     sh#\n-\n-Missing `makeinfo'?\n-...................\n-\n-   If `makeinfo' is needed but unavailable when installing (via `make\n-install'), some files, like `libg2c.a', might not be installed, because\n-once `make' determines that it cannot invoke `makeinfo', it cancels any\n-further processing.\n-\n-   If you cannot install `makeinfo', an easy work-around is to specify\n-`MAKEINFO=true' on the `make' command line, or to specify the `-k'\n-option (`make -k install').\n-\n-   Another approach is to force the relevant files to be up-to-date by\n-typing these commands and then re-trying the installation step:\n-\n-     sh# cd gcc\n-     sh# touch f/g77.info f/BUGS f/INSTALL f/NEWS\n-     sh# cd ..\n-     sh#\n+   For `egcs' users, this information is superceded by the `egcs'\n+installation instructions.\n \n Distributing Binaries\n =====================\n \n-   If you are building `g77' for distribution to others in binary form,\n-first make sure you are aware of your legal responsibilities (read the\n-file `gcc/COPYING' thoroughly).\n-\n-   Then, consider your target audience and decide where `g77' should be\n-installed.\n-\n-   For systems like GNU/Linux that have no native Fortran compiler (or\n-where `g77' could be considered the native compiler for Fortran and\n-`gcc' for C, etc.), you should definitely configure `g77' for\n-installation in `/usr/bin' instead of `/usr/local/bin'.  Specify the\n-`--prefix=/usr' option when running `./configure'.\n-\n-   You might also want to set up the distribution so the `f77' command\n-is a link to `g77', although a script that accepts \"classic\" UNIX `f77'\n-options and translates the command-line to the appropriate `g77'\n-command line would be more appropriate.  If you do this, *please* also\n-provide a \"man page\" in `man/man1/f77.1' describing the command.  (A\n-link to `man/man1/g77.1' is appropriate if `bin/f77' is a link to\n-`bin/g77'.)\n-\n-   For a system that might already have `f2c' installed, consider\n-whether inter-operation with `g77' will be important to users of `f2c'\n-on that system.  If you want to improve the likelihood that users will\n-be able to use both `f2c' and `g77' to compile code for a single program\n-without encountering link-time or run-time incompatibilities, make sure\n-that, whenever they intend to combine `f2c'-produced code with\n-`g77'-produced code in an executable, they:\n-\n-   * Use the `lib/gcc-lib/.../include/g2c.h' file generated by the\n-     `g77' build in place of the `f2c.h' file that normally comes with\n-     `f2c' (or versions of `g77' prior to 0.5.23) when compiling *all*\n-     of the `f2c'-produced C code\n-\n-   * Link to the `lib/gcc-lib/.../libg2c.a' library built by the `g77'\n-     build instead of the `libf2c.a' library that normally comes with\n-     `f2c' (or versions of `g77' prior to 0.5.23)\n-\n-   How you choose to effect the above depends on whether the existing\n-installation of `f2c' must be maintained.\n-\n-   In any case, it is important to try and ensure that the installation\n-keeps working properly even after subsequent re-installation of `f2c',\n-which probably involves overwriting `/usr/local/lib/libf2c.a' and\n-`/usr/local/include/f2c.h', or similar.\n-\n-   At least, copying `libg2c.a' and `g2c.h' into the appropriate\n-\"public\" directories allows users to more easily select the version of\n-`libf2c' they wish to use for a particular build.  The names are\n-changed by `g77' to make this coexistence easier to maintain; even if\n-`f2c' is installed later, the `g77' files normally installed by its\n-installation process aren't disturbed.  Use of symbolic links from one\n-set of files to another might result in problems after a subsequent\n-reinstallation of either `f2c' or `g77', so be sure to alert users of\n-your distribution accordingly.\n-\n-   (Make sure you clearly document, in the description of your\n-distribution, how installation of your distribution will affect\n-existing installations of `gcc', `f2c', `f77', `libf2c.a', and so on.\n-Similarly, you should clearly document any requirements you assume will\n-be met by users of your distribution.)\n-\n-   For other systems with native `f77' (and `cc') compilers, configure\n-`g77' as you (or most of your audience) would configure `gcc' for their\n-installations.  Typically this is for installation in `/usr/local', and\n-would not include a new version of `/usr/bin/f77' or\n-`/usr/local/bin/f77', so users could still use the native `f77'.\n-\n-   In any case, for `g77' to work properly, you *must* ensure that the\n-binaries you distribute include:\n-\n-`bin/g77'\n-     This is the command most users use to compile Fortran.\n-\n-`bin/gcc'\n-     This is the command some users use to compile Fortran, typically\n-     when compiling programs written in other languages at the same\n-     time.  The `bin/gcc' executable file must have been built from a\n-     `gcc' source tree into which a `g77' source tree was merged and\n-     configured, or it will not know how to compile Fortran programs.\n-\n-`info/g77.info*'\n-     This is the documentation for `g77'.  If it is not included, users\n-     will have trouble understanding diagnostics messages and other\n-     such things, and will send you a lot of email asking questions.\n-\n-     Please edit this documentation (by editing `gcc/f/*.texi' and\n-     doing `make doc' from the `/usr/src/gcc' directory) to reflect any\n-     changes you've made to `g77', or at least to encourage users of\n-     your binary distribution to report bugs to you first.\n-\n-     Also, whether you distribute binaries or install `g77' on your own\n-     system, it might be helpful for everyone to add a line listing\n-     this manual by name and topic to the top-level `info' node in\n-     `/usr/info/dir'.  That way, users can find `g77' documentation more\n-     easily.  *Note Updating Your Info Directory: Updating\n-     Documentation.\n-\n-`man/man1/g77.1'\n-     This is the short man page for `g77'.  It is not always kept\n-     up-to-date, but you might as well include it for people who really\n-     like \"man\" pages.\n-\n-`lib/gcc-lib'\n-     This is the directory containing the \"private\" files installed by\n-     and for `gcc', `g77', `g++', and other GNU compilers.\n-\n-`lib/gcc-lib/.../f771'\n-     This is the actual Fortran compiler.\n-\n-`lib/gcc-lib/.../libg2c.a'\n-     This is the run-time library for `g77'-compiled programs.\n-\n-   Whether you want to include the slightly updated (and possibly\n-improved) versions of `cc1', `cc1plus', and whatever other binaries get\n-rebuilt with the changes the GNU Fortran distribution makes to the GNU\n-back end, is up to you.  These changes are highly unlikely to break any\n-compilers, because they involve doing things like adding to the list of\n-acceptable compiler options (so, for example, `cc1plus' accepts, and\n-ignores, options that only `f771' actually processes).\n-\n-   Please assure users that unless they have a specific need for their\n-existing, older versions of `gcc' command, they are unlikely to\n-experience any problems by overwriting it with your version--though\n-they could certainly protect themselves by making backup copies first!\n-\n-   Otherwise, users might try and install your binaries in a \"safe\"\n-place, find they cannot compile Fortran programs with your distribution\n-(because, perhaps, they're invoking their old version of the `gcc'\n-command, which does not recognize Fortran programs), and assume that\n-your binaries (or, more generally, GNU Fortran distributions in\n-general) are broken, at least for their system.\n-\n-   Finally, *please* ask for bug reports to go to you first, at least\n-until you're sure your distribution is widely used and has been well\n-tested.  This especially goes for those of you making any changes to\n-the `g77' sources to port `g77', e.g. to OS/2.  <fortran@gnu.org> has\n-received a fair number of bug reports that turned out to be problems\n-with other peoples' ports and distributions, about which nothing could\n-be done for the user.  Once you are quite certain a bug report does not\n-involve your efforts, you can forward it to us.\n+   For `egcs' users, this information is superceded by the `egcs'\n+installation instructions.\n "}, {"sha": "8004df5a9284b80acab81baba292b76be01b00cb", "filename": "gcc/f/NEWS", "status": "modified", "additions": 67, "deletions": 1419, "changes": 1486, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/gcc%2Ff%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57544c29d50e6394e2a5f7e5e74f27b865fbfe1f/gcc%2Ff%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FNEWS?ref=57544c29d50e6394e2a5f7e5e74f27b865fbfe1f", "patch": "@@ -1,11 +1,12 @@\n-NOTE: This file is automatically generated from the files `news0.texi'\n-and `news.texi'.  `NEWS' is *not* a source file, although it is\n-normally included within source distributions.\n+*Note:* This file is automatically generated from the files\n+`news0.texi' and `news.texi'.  `NEWS' is *not* a source file, although\n+it is normally included within source distributions.\n \n-   This file lists recent changes to the GNU Fortran compiler.\n-Copyright (C) 1995-1999 Free Software Foundation, Inc.  You may copy,\n-distribute, and modify it freely as long as you preserve this copyright\n-notice and permission notice.\n+   This file lists news about the EGCS-1.2 version (and some other\n+versions) of the GNU Fortran compiler.  Copyright (C) 1995-1999 Free\n+Software Foundation, Inc.  You may copy, distribute, and modify it\n+freely as long as you preserve this copyright notice and permission\n+notice.\n \n News About GNU Fortran\n **********************\n@@ -42,15 +43,40 @@ clarify how they differ from other versions, though this can make\n getting a complete picture of what a particular `egcs' version contains\n somewhat more difficult.\n \n-In `egcs' 1.2:\n-==============\n+   *Warning:* The information below is still under development, and\n+might not accurately reflect the `g77' code base of which it is a part.\n+Efforts are made to keep it somewhat up-to-date, but they are\n+particularly concentrated on any version of this information that is\n+distributed as part of a *released* `g77'.\n \n-   * Fix `g77' so it no longer crashes when compiling I/O statements\n+   In particular, while this information is intended to apply to the\n+EGCS-1.2 version of `g77', only an official *release* of that version\n+is expected to contain documentation that is most consistent with the\n+`g77' product in that version.\n+\n+   Nevertheless, information on *previous* releases of `g77', below, is\n+likely to be more up-to-date and accurate than the equivalent\n+information that accompanied those releases, assuming the last-updated\n+date of the information below is later than the dates of those releases.\n+\n+   That's due to attempts to keep this development version of news\n+about previous `g77' versions up-to-date.\n+\n+   An online, \"live\" version of this document (derived directly from\n+the mainline, development version of `g77' within `egcs') is available\n+at `http://egcs.cygnus.com/onlinedocs/g77_news.html'.\n+\n+   The following information was last updated on 1999-03-13:\n+\n+In `egcs' 1.2 (versus 1.1.2):\n+=============================\n+\n+  1. Fix `g77' so it no longer crashes when compiling I/O statements\n      using keywords that define `INTEGER' values, such as `IOSTAT=J',\n      where J is other than default `INTEGER' (such as `INTEGER*2').\n      Instead, it issues a diagnostic.\n \n-   * The `-ax' option is now obeyed when compiling Fortran programs.\n+  2. The `-ax' option is now obeyed when compiling Fortran programs.\n      (It is passed to the `f771' driver.)\n \n    * Source file names with the suffixes `.FOR' and `.FPP' now are\n@@ -63,13 +89,11 @@ In `egcs' 1.2:\n      references to the implementations of these intrinsics using the\n      `EXTERNAL' mechanism (which would avoid the new warnings).\n \n-     *Note Year 2000 (Y2K) Problems::, for more information.\n-\n-   * `g77' now warns about a reference to a function when the\n+  3. `g77' now warns about a reference to a function when the\n      corresponding *subsequent* function program unit disagrees with\n      the reference concerning the type of the function.\n \n-   * Improve documentation and indexing, including information on Year\n+  4. Improve documentation and indexing, including information on Year\n      2000 (Y2K) compliance.\n \n In 0.5.24 and `egcs' 1.1.2 (versus 0.5.23 and 1.1.1):\n@@ -79,8 +103,6 @@ In 0.5.24 and `egcs' 1.1.2 (versus 0.5.23 and 1.1.1):\n      documented, non-Y2K-compliant range of 0-99, instead of being\n      returned as 100 in the year 2000.\n \n-     *Note IDate Intrinsic (VXT)::, for more information.\n-\n    * Fix the `Date_and_Time' intrinsic (in `libg2c') to return the\n      milliseconds value properly in VALUES(8).\n \n@@ -114,14 +136,14 @@ In 0.5.24 and `egcs' 1.1.1 (versus 0.5.23 and 1.1):\n In `egcs' 1.1 (versus 0.5.24):\n ==============================\n \n-   * Fix `g77' crash compiling code containing the construct\n+  5. Fix `g77' crash compiling code containing the construct\n      `CMPLX(0.)' or similar.\n \n-   * Fix `g77' crash (or apparently infinite run-time) when compiling\n+  6. Fix `g77' crash (or apparently infinite run-time) when compiling\n      certain complicated expressions involving `COMPLEX' arithmetic\n      (especially multiplication).\n \n-   * Fix a code-generation bug that afflicted Intel x86 targets when\n+  7. Fix a code-generation bug that afflicted Intel x86 targets when\n      `-O2' was specified compiling, for example, an old version of the\n      `DNRM2' routine.\n \n@@ -137,25 +159,25 @@ In `egcs' 1.1 (versus 0.5.24):\n In `egcs' 1.1 (versus `egcs' 1.0.3):\n ====================================\n \n-   * Fix bugs in the `libU77' intrinsic `HostNm' that wrote one byte\n+  8. Fix bugs in the `libU77' intrinsic `HostNm' that wrote one byte\n      beyond the end of its `CHARACTER' argument, and in the `libU77'\n      intrinsics `GMTime' and `LTime' that overwrote their arguments.\n \n-   * Assumed arrays with negative bounds (such as `REAL A(-1:*)') no\n+  9. Assumed arrays with negative bounds (such as `REAL A(-1:*)') no\n      longer elicit spurious diagnostics from `g77', even on systems\n      with pointers having different sizes than integers.\n \n      This bug is not known to have existed in any recent version of\n      `gcc'.  It was introduced in an early release of `egcs'.\n \n-   * Valid combinations of `EXTERNAL', passing that external as a dummy\n+ 10. Valid combinations of `EXTERNAL', passing that external as a dummy\n      argument without explicitly giving it a type, and, in a subsequent\n      program unit, referencing that external as an external function\n      with a different type no longer crash `g77'.\n \n-   * `CASE DEFAULT' no longer crashes `g77'.\n+ 11. `CASE DEFAULT' no longer crashes `g77'.\n \n-   * The `-Wunused' option no longer issues a spurious warning about\n+ 12. The `-Wunused' option no longer issues a spurious warning about\n      the \"master\" procedure generated by `g77' for procedures\n      containing `ENTRY' statements.\n \n@@ -180,25 +202,25 @@ In `egcs' 1.1 (versus `egcs' 1.0.3):\n      `libf2c' environment, even when `libf2c' (now `libg2c') is a\n      shared library.\n \n-   * `g77' no longer installs the `f77' command and `f77.1' man page in\n+ 13. `g77' no longer installs the `f77' command and `f77.1' man page in\n      the `/usr' or `/usr/local' heirarchy, even if the `f77-install-ok'\n      file exists in the source or build directory.  See the\n      installation documentation for more information.\n \n-   * `g77' no longer installs the `libf2c.a' library and `f2c.h'\n+ 14. `g77' no longer installs the `libf2c.a' library and `f2c.h'\n      include file in the `/usr' or `/usr/local' heirarchy, even if the\n      `f2c-install-ok' or `f2c-exists-ok' files exist in the source or\n      build directory.  See the installation documentation for more\n      information.\n \n-   * The `libf2c.a' library produced by `g77' has been renamed to\n+ 15. The `libf2c.a' library produced by `g77' has been renamed to\n      `libg2c.a'.  It is installed only in the `gcc' \"private\" directory\n      heirarchy, `gcc-lib'.  This allows system administrators and users\n      to choose which version of the `libf2c' library from `netlib' they\n      wish to use on a case-by-case basis.  See the installation\n      documentation for more information.\n \n-   * The `f2c.h' include (header) file produced by `g77' has been\n+ 16. The `f2c.h' include (header) file produced by `g77' has been\n      renamed to `g2c.h'.  It is installed only in the `gcc' \"private\"\n      directory heirarchy, `gcc-lib'.  This allows system administrators\n      and users to choose which version of the include file from\n@@ -210,11 +232,11 @@ In `egcs' 1.1 (versus `egcs' 1.0.3):\n      than the one built and installed as part of the same `g77' version\n      is picked up.\n \n-   * During the configuration and build process, `g77' creates\n+ 17. During the configuration and build process, `g77' creates\n      subdirectories it needs only as it needs them.  Other cleaning up\n      of the configuration and build process has been performed as well.\n \n-   * `install-info' now used to update the directory of Info\n+ 18. `install-info' now used to update the directory of Info\n      documentation to contain an entry for `g77' (during installation).\n \n    * Some diagnostics have been changed from warnings to errors, to\n@@ -223,28 +245,28 @@ In `egcs' 1.1 (versus `egcs' 1.0.3):\n      in the `OPEN', `INQUIRE', `READ', and `WRITE' statements, and\n      about truncations of various sorts of constants.\n \n-   * Improve compilation of `FORMAT' expressions so that a null byte is\n+ 19. Improve compilation of `FORMAT' expressions so that a null byte is\n      appended to the last operand if it is a constant.  This provides a\n      cleaner run-time diagnostic as provided by `libf2c' for statements\n      like `PRINT '(I1', 42'.\n \n-   * Improve documentation and indexing.\n+ 20. Improve documentation and indexing.\n \n-   * The upgrade to `libf2c' as of 1998-06-18 should fix a variety of\n+ 21. The upgrade to `libf2c' as of 1998-06-18 should fix a variety of\n      problems, including those involving some uses of the `T' format\n      specifier, and perhaps some build (porting) problems as well.\n \n In 0.5.24 and `egcs' 1.1 (versus 0.5.23):\n =========================================\n \n-   * `g77' no longer produces incorrect code and initial values for\n+ 22. `g77' no longer produces incorrect code and initial values for\n      `EQUIVALENCE' and `COMMON' aggregates that, due to \"unnatural\"\n      ordering of members vis-a-vis their types, require initial padding.\n \n-   * `g77' no longer crashes when compiling code containing\n+ 23. `g77' no longer crashes when compiling code containing\n      specification statements such as `INTEGER(KIND=7) PTR'.\n \n-   * `g77' no longer crashes when compiling code such as `J = SIGNAL(1,\n+ 24. `g77' no longer crashes when compiling code such as `J = SIGNAL(1,\n      2)'.\n \n    * `g77' now treats `%LOC(EXPR)' and `LOC(EXPR)' as \"ordinary\"\n@@ -275,1389 +297,15 @@ In 0.5.24 and `egcs' 1.1 (versus 0.5.23):\n    * The F90 `System_Clock' intrinsic allows the optional arguments\n      (except for the `Count' argument) to be omitted.\n \n-   * Upgrade to `libf2c' as of 1998-06-18.\n-\n-   * Improve documentation and indexing.\n-\n-In 0.5.23 (versus 0.5.22):\n-==========================\n-\n-   * This release contains several regressions against version 0.5.22\n-     of `g77', due to using the \"vanilla\" `gcc' back end instead of\n-     patching it to fix a few bugs and improve performance in a few\n-     cases.\n-\n-     *Note Actual Bugs We Haven't Fixed Yet: Actual Bugs, available in\n-     plain-text format in `gcc/f/BUGS', for information on the known\n-     bugs in this version, including the regressions.\n-\n-     Features that have been dropped from this version of `g77' due to\n-     their being implemented via `g77'-specific patches to the `gcc'\n-     back end in previous releases include:\n-\n-        - Support for `__restrict__' keyword, the options\n-          `-fargument-alias', `-fargument-noalias', and\n-          `-fargument-noalias-global', and the corresponding\n-          alias-analysis code.\n-\n-          (`egcs' has the alias-analysis code, but not the\n-          `__restrict__' keyword.  `egcs' `g77' users benefit from the\n-          alias-analysis code despite the lack of the `__restrict__'\n-          keyword, which is a C-language construct.)\n-\n-        - Support for the GNU compiler options `-fmove-all-movables',\n-          `-freduce-all-givs', and `-frerun-loop-opt'.\n-\n-          (`egcs' supports these options.  `g77' users of `egcs'\n-          benefit from them even if they are not explicitly specified,\n-          because the defaults are optimized for `g77' users.)\n-\n-        - Support for the `-W' option warning about integer division by\n-          zero.\n-\n-        - The Intel x86-specific option `-malign-double' applying to\n-          stack-allocated data as well as statically-allocate data.\n-\n-     Note that the `gcc/f/gbe/' subdirectory has been removed from this\n-     distribution as a result of `g77' no longer including patches for\n-     the `gcc' back end.\n-\n-   * Fix bugs in the `libU77' intrinsic `HostNm' that wrote one byte\n-     beyond the end of its `CHARACTER' argument, and in the `libU77'\n-     intrinsics `GMTime' and `LTime' that overwrote their arguments.\n-\n-   * Support `gcc' version 2.8, and remove support for prior versions\n-     of `gcc'.\n-\n-   * Remove support for the `--driver' option, as `g77' now does all\n-     the driving, just like `gcc'.\n-\n-   * `CASE DEFAULT' no longer crashes `g77'.\n-\n-   * Valid combinations of `EXTERNAL', passing that external as a dummy\n-     argument without explicitly giving it a type, and, in a subsequent\n-     program unit, referencing that external as an external function\n-     with a different type no longer crash `g77'.\n-\n-   * `g77' no longer installs the `f77' command and `f77.1' man page in\n-     the `/usr' or `/usr/local' heirarchy, even if the `f77-install-ok'\n-     file exists in the source or build directory.  See the\n-     installation documentation for more information.\n-\n-   * `g77' no longer installs the `libf2c.a' library and `f2c.h'\n-     include file in the `/usr' or `/usr/local' heirarchy, even if the\n-     `f2c-install-ok' or `f2c-exists-ok' files exist in the source or\n-     build directory.  See the installation documentation for more\n-     information.\n-\n-   * The `libf2c.a' library produced by `g77' has been renamed to\n-     `libg2c.a'.  It is installed only in the `gcc' \"private\" directory\n-     heirarchy, `gcc-lib'.  This allows system administrators and users\n-     to choose which version of the `libf2c' library from `netlib' they\n-     wish to use on a case-by-case basis.  See the installation\n-     documentation for more information.\n-\n-   * The `f2c.h' include (header) file produced by `g77' has been\n-     renamed to `g2c.h'.  It is installed only in the `gcc' \"private\"\n-     directory heirarchy, `gcc-lib'.  This allows system administrators\n-     and users to choose which version of the include file from\n-     `netlib' they wish to use on a case-by-case basis.  See the\n-     installation documentation for more information.\n-\n-   * The `g77' command now expects the run-time library to be named\n-     `libg2c.a' instead of `libf2c.a', to ensure that a version other\n-     than the one built and installed as part of the same `g77' version\n-     is picked up.\n-\n-   * The `-Wunused' option no longer issues a spurious warning about\n-     the \"master\" procedure generated by `g77' for procedures\n-     containing `ENTRY' statements.\n-\n-   * `g77''s version of `libf2c' separates out the setting of global\n-     state (such as command-line arguments and signal handling) from\n-     `main.o' into distinct, new library archive members.\n-\n-     This should make it easier to write portable applications that\n-     have their own (non-Fortran) `main()' routine properly set up the\n-     `libf2c' environment, even when `libf2c' (now `libg2c') is a\n-     shared library.\n-\n-   * During the configuration and build process, `g77' creates\n-     subdirectories it needs only as it needs them, thus avoiding\n-     unnecessary creation of, for example, `stage1/f/runtime' when\n-     doing a non-bootstrap build.  Other cleaning up of the\n-     configuration and build process has been performed as well.\n-\n-   * `install-info' now used to update the directory of Info\n-     documentation to contain an entry for `g77' (during installation).\n-\n-   * Some diagnostics have been changed from warnings to errors, to\n-     prevent inadvertent use of the resulting, probably buggy, programs.\n-     These mostly include diagnostics about use of unsupported features\n-     in the `OPEN', `INQUIRE', `READ', and `WRITE' statements, and\n-     about truncations of various sorts of constants.\n-\n-   * Improve documentation and indexing.\n-\n-   * Upgrade to `libf2c' as of 1998-04-20.\n-\n-     This should fix a variety of problems, including those involving\n-     some uses of the `T' format specifier, and perhaps some build\n-     (porting) problems as well.\n-\n-In 0.5.22 (versus 0.5.21):\n-==========================\n-\n-   * Fix code generation for iterative `DO' loops that have one or more\n-     references to the iteration variable, or to aliases of it, in\n-     their control expressions.  For example, `DO 10 J=2,J' now is\n-     compiled correctly.\n-\n-   * Fix a code-generation bug that afflicted Intel x86 targets when\n-     `-O2' was specified compiling, for example, an old version of the\n-     `DNRM2' routine.\n-\n-     The x87 coprocessor stack was being mismanaged in cases involving\n-     assigned `GOTO' and `ASSIGN'.\n-\n-   * Fix `DTime' intrinsic so as not to truncate results to integer\n-     values (on some systems).\n-\n-   * Fix `Signal' intrinsic so it offers portable support for 64-bit\n-     systems (such as Digital Alphas running GNU/Linux).\n-\n-   * Fix run-time crash involving `NAMELIST' on 64-bit machines such as\n-     Alphas.\n-\n-   * Fix `g77' version of `libf2c' so it no longer produces a spurious\n-     `I/O recursion' diagnostic at run time when an I/O operation (such\n-     as `READ *,I') is interrupted in a manner that causes the program\n-     to be terminated via the `f_exit' routine (such as via `C-c').\n-\n-   * Fix `g77' crash triggered by `CASE' statement with an omitted\n-     lower or upper bound.\n-\n-   * Fix `g77' crash compiling references to `CPU_Time' intrinsic.\n-\n-   * Fix `g77' crash (or apparently infinite run-time) when compiling\n-     certain complicated expressions involving `COMPLEX' arithmetic\n-     (especially multiplication).\n-\n-   * Fix `g77' crash on statements such as `PRINT *,\n-     (REAL(Z(I)),I=1,2)', where `Z' is `DOUBLE COMPLEX'.\n-\n-   * Fix a `g++' crash.\n-\n-   * Support `FORMAT(I<EXPR>)' when EXPR is a compile-time constant\n-     `INTEGER' expression.\n-\n-   * Fix `g77' `-g' option so procedures that use `ENTRY' can be\n-     stepped through, line by line, in `gdb'.\n-\n-   * Fix a profiling-related bug in `gcc' back end for Intel x86\n-     architecture.\n-\n-   * Allow any `REAL' argument to intrinsics `Second' and `CPU_Time'.\n-\n-   * Allow any numeric argument to intrinsics `Int2' and `Int8'.\n-\n-   * Use `tempnam', if available, to open scratch files (as in\n-     `OPEN(STATUS='SCRATCH')') so that the `TMPDIR' environment\n-     variable, if present, is used.\n-\n-   * Rename the `gcc' keyword `restrict' to `__restrict__', to avoid\n-     rejecting valid, existing, C programs.  Support for `restrict' is\n-     now more like support for `complex'.\n-\n-   * Fix `-fpedantic' to not reject procedure invocations such as\n-     `I=J()' and `CALL FOO()'.\n-\n-   * Fix `-fugly-comma' to affect invocations of only external\n-     procedures.  Restore rejection of gratuitous trailing omitted\n-     arguments to intrinsics, as in `I=MAX(3,4,,)'.\n-\n-   * Fix compiler so it accepts `-fgnu-intrinsics-*' and\n-     `-fbadu77-intrinsics-*' options.\n-\n-   * Improve diagnostic messages from `libf2c' so it is more likely\n-     that the printing of the active format string is limited to the\n-     string, with no trailing garbage being printed.\n-\n-     (Unlike `f2c', `g77' did not append a null byte to its compiled\n-     form of every format string specified via a `FORMAT' statement.\n-     However, `f2c' would exhibit the problem anyway for a statement\n-     like `PRINT '(I)garbage', 1' by printing `(I)garbage' as the\n-     format string.)\n-\n-   * Improve compilation of `FORMAT' expressions so that a null byte is\n-     appended to the last operand if it is a constant.  This provides a\n-     cleaner run-time diagnostic as provided by `libf2c' for statements\n-     like `PRINT '(I1', 42'.\n-\n-   * Fix various crashes involving code with diagnosed errors.\n-\n-   * Fix cross-compilation bug when configuring `libf2c'.\n-\n-   * Improve diagnostics.\n-\n-   * Improve documentation and indexing.\n-\n-   * Upgrade to `libf2c' as of 1997-09-23.  This fixes a formatted-I/O\n-     bug that afflicted 64-bit systems with 32-bit integers (such as\n-     Digital Alpha running GNU/Linux).\n-\n-In `egcs' 1.0.2 (versus `egcs' 1.0.1):\n-======================================\n-\n-   * Fix `g77' crash triggered by `CASE' statement with an omitted\n-     lower or upper bound.\n-\n-   * Fix `g77' crash on statements such as `PRINT *,\n-     (REAL(Z(I)),I=1,2)', where `Z' is `DOUBLE COMPLEX'.\n-\n-   * Fix `-fPIC' (such as compiling for ELF targets) on the Intel x86\n-     architecture target so invalid assembler code is no longer\n-     produced.\n-\n-   * Fix `-fpedantic' to not reject procedure invocations such as\n-     `I=J()' and `CALL FOO()'.\n-\n-   * Fix `-fugly-comma' to affect invocations of only external\n-     procedures.  Restore rejection of gratuitous trailing omitted\n-     arguments to intrinsics, as in `I=MAX(3,4,,)'.\n-\n-   * Fix compiler so it accepts `-fgnu-intrinsics-*' and\n-     `-fbadu77-intrinsics-*' options.\n-\n-In `egcs' 1.0.1 (versus `egcs' 1.0):\n-====================================\n-\n-   * Fix run-time crash involving `NAMELIST' on 64-bit machines such as\n-     Alphas.\n-\n-In `egcs' 1.0 (versus 0.5.21):\n-==============================\n-\n-   * Version 1.0 of `egcs' contains several regressions against version\n-     0.5.21 of `g77', due to using the \"vanilla\" `gcc' back end instead\n-     of patching it to fix a few bugs and improve performance in a few\n-     cases.\n-\n-     *Note Actual Bugs We Haven't Fixed Yet: Actual Bugs, available in\n-     plain-text format in `gcc/f/BUGS', for information on the known\n-     bugs in this version, including the regressions.\n-\n-     Features that have been dropped from this version of `g77' due to\n-     their being implemented via `g77'-specific patches to the `gcc'\n-     back end in previous releases include:\n-\n-        - Support for the C-language `restrict' keyword.\n-\n-        - Support for the `-W' option warning about integer division by\n-          zero.\n-\n-        - The Intel x86-specific option `-malign-double' applying to\n-          stack-allocated data as well as statically-allocate data.\n-\n-     Note that the `gcc/f/gbe/' subdirectory has been removed from this\n-     distribution as a result of `g77' being fully integrated with the\n-     `egcs' variant of the `gcc' back end.\n-\n-   * Fix code generation for iterative `DO' loops that have one or more\n-     references to the iteration variable, or to aliases of it, in\n-     their control expressions.  For example, `DO 10 J=2,J' now is\n-     compiled correctly.\n-\n-   * Fix `DTime' intrinsic so as not to truncate results to integer\n-     values (on some systems).\n-\n-   * Some Fortran code, miscompiled by `g77' built on `gcc' version\n-     2.8.1 on m68k-next-nextstep3 configurations when using the `-O2'\n-     option, is now compiled correctly.  It is believed that a C\n-     function known to miscompile on that configuration when using the\n-     `-O2 -funroll-loops' options also is now compiled correctly.\n-\n-   * Remove support for non-`egcs' versions of `gcc'.\n-\n-   * Remove support for the `--driver' option, as `g77' now does all\n-     the driving, just like `gcc'.\n-\n-   * Allow any numeric argument to intrinsics `Int2' and `Int8'.\n-\n-   * Improve diagnostic messages from `libf2c' so it is more likely\n-     that the printing of the active format string is limited to the\n-     string, with no trailing garbage being printed.\n-\n-     (Unlike `f2c', `g77' did not append a null byte to its compiled\n-     form of every format string specified via a `FORMAT' statement.\n-     However, `f2c' would exhibit the problem anyway for a statement\n-     like `PRINT '(I)garbage', 1' by printing `(I)garbage' as the\n-     format string.)\n-\n-   * Upgrade to `libf2c' as of 1997-09-23.  This fixes a formatted-I/O\n-     bug that afflicted 64-bit systems with 32-bit integers (such as\n-     Digital Alpha running GNU/Linux).\n-\n-In 0.5.21:\n-==========\n-\n-   * Fix a code-generation bug introduced by 0.5.20 caused by loop\n-     unrolling (by specifying `-funroll-loops' or similar).  This bug\n-     afflicted all code compiled by version 2.7.2.2.f.2 of `gcc' (C,\n-     C++, Fortran, and so on).\n-\n-   * Fix a code-generation bug manifested when combining local\n-     `EQUIVALENCE' with a `DATA' statement that follows the first\n-     executable statement (or is treated as an executable-context\n-     statement as a result of using the `-fpedantic' option).\n-\n-   * Fix a compiler crash that occured when an integer division by a\n-     constant zero is detected.  Instead, when the `-W' option is\n-     specified, the `gcc' back end issues a warning about such a case.\n-     This bug afflicted all code compiled by version 2.7.2.2.f.2 of\n-     `gcc' (C, C++, Fortran, and so on).\n-\n-   * Fix a compiler crash that occurred in some cases of procedure\n-     inlining.  (Such cases became more frequent in 0.5.20.)\n-\n-   * Fix a compiler crash resulting from using `DATA' or similar to\n-     initialize a `COMPLEX' variable or array to zero.\n-\n-   * Fix compiler crashes involving use of `AND', `OR', or `XOR'\n-     intrinsics.\n-\n-   * Fix compiler bug triggered when using a `COMMON' or `EQUIVALENCE'\n-     variable as the target of an `ASSIGN' or assigned-`GOTO' statement.\n-\n-   * Fix compiler crashes due to using the name of a some non-standard\n-     intrinsics (such as `FTELL' or `FPUTC') as such and as the name of\n-     a procedure or common block.  Such dual use of a name in a program\n-     is allowed by the standard.\n-\n-   * Place automatic arrays on the stack, even if `SAVE' or the\n-     `-fno-automatic' option is in effect.  This avoids a compiler\n-     crash in some cases.\n-\n-   * The `-malign-double' option now reliably aligns `DOUBLE PRECISION'\n-     optimally on Pentium and Pentium Pro architectures (586 and 686 in\n-     `gcc').\n-\n-   * New option `-Wno-globals' disables warnings about \"suspicious\" use\n-     of a name both as a global name and as the implicit name of an\n-     intrinsic, and warnings about disagreements over the number or\n-     natures of arguments passed to global procedures, or the natures\n-     of the procedures themselves.\n-\n-     The default is to issue such warnings, which are new as of this\n-     version of `g77'.\n-\n-   * New option `-fno-globals' disables diagnostics about potentially\n-     fatal disagreements analysis problems, such as disagreements over\n-     the number or natures of arguments passed to global procedures, or\n-     the natures of those procedures themselves.\n-\n-     The default is to issue such diagnostics and flag the compilation\n-     as unsuccessful.  With this option, the diagnostics are issued as\n-     warnings, or, if `-Wno-globals' is specified, are not issued at\n-     all.\n-\n-     This option also disables inlining of global procedures, to avoid\n-     compiler crashes resulting from coding errors that these\n-     diagnostics normally would identify.\n-\n-   * Diagnose cases where a reference to a procedure disagrees with the\n-     type of that procedure, or where disagreements about the number or\n-     nature of arguments exist.  This avoids a compiler crash.\n-\n-   * Fix parsing bug whereby `g77' rejected a second initialization\n-     specification immediately following the first's closing `/' without\n-     an intervening comma in a `DATA' statement, and the second\n-     specification was an implied-DO list.\n-\n-   * Improve performance of the `gcc' back end so certain complicated\n-     expressions involving `COMPLEX' arithmetic (especially\n-     multiplication) don't appear to take forever to compile.\n-\n-   * Fix a couple of profiling-related bugs in `gcc' back end.\n-\n-   * Integrate GNU Ada's (GNAT's) changes to the back end, which\n-     consist almost entirely of bug fixes.  These fixes are circa\n-     version 3.10p of GNAT.\n-\n-   * Include some other `gcc' fixes that seem useful in `g77''s version\n-     of `gcc'.  (See `gcc/ChangeLog' for details--compare it to that\n-     file in the vanilla `gcc-2.7.2.3.tar.gz' distribution.)\n-\n-   * Fix `libU77' routines that accept file and other names to strip\n-     trailing blanks from them, for consistency with other\n-     implementations.  Blanks may be forcibly appended to such names by\n-     appending a single null character (`CHAR(0)') to the significant\n-     trailing blanks.\n-\n-   * Fix `CHMOD' intrinsic to work with file names that have embedded\n-     blanks, commas, and so on.\n-\n-   * Fix `SIGNAL' intrinsic so it accepts an optional third `Status'\n-     argument.\n-\n-   * Fix `IDATE()' intrinsic subroutine (VXT form) so it accepts\n-     arguments in the correct order.  Documentation fixed accordingly,\n-     and for `GMTIME()' and `LTIME()' as well.\n-\n-   * Make many changes to `libU77' intrinsics to support existing code\n-     more directly.\n-\n-     Such changes include allowing both subroutine and function forms\n-     of many routines, changing `MCLOCK()' and `TIME()' to return\n-     `INTEGER(KIND=1)' values, introducing `MCLOCK8()' and `TIME8()' to\n-     return `INTEGER(KIND=2)' values, and placing functions that are\n-     intended to perform side effects in a new intrinsic group,\n-     `badu77'.\n-\n-   * Improve `libU77' so it is more portable.\n-\n-   * Add options `-fbadu77-intrinsics-delete',\n-     `-fbadu77-intrinsics-hide', and so on.\n-\n-   * Fix crashes involving diagnosed or invalid code.\n-\n-   * `g77' and `gcc' now do a somewhat better job detecting and\n-     diagnosing arrays that are too large to handle before these cause\n-     diagnostics during the assembler or linker phase, a compiler\n-     crash, or generation of incorrect code.\n-\n-   * Make some fixes to alias analysis code.\n-\n-   * Add support for `restrict' keyword in `gcc' front end.\n-\n-   * Support `gcc' version 2.7.2.3 (modified by `g77' into version\n-     2.7.2.3.f.1), and remove support for prior versions of `gcc'.\n-\n-   * Incorporate GNAT's patches to the `gcc' back end into `g77''s, so\n-     GNAT users do not need to apply GNAT's patches to build both GNAT\n-     and `g77' from the same source tree.\n-\n-   * Modify `make' rules and related code so that generation of Info\n-     documentation doesn't require compilation using `gcc'.  Now, any\n-     ANSI C compiler should be adequate to produce the `g77'\n-     documentation (in particular, the tables of intrinsics) from\n-     scratch.\n-\n-   * Add `INT2' and `INT8' intrinsics.\n-\n-   * Add `CPU_TIME' intrinsic.\n-\n-   * Add `ALARM' intrinsic.\n-\n-   * `CTIME' intrinsic now accepts any `INTEGER' argument, not just\n-     `INTEGER(KIND=2)'.\n-\n-   * Warn when explicit type declaration disagrees with the type of an\n-     intrinsic invocation.\n-\n-   * Support `*f771' entry in `gcc' `specs' file.\n-\n-   * Fix typo in `make' rule `g77-cross', used only for cross-compiling.\n-\n-   * Fix `libf2c' build procedure to re-archive library if previous\n-     attempt to archive was interrupted.\n-\n-   * Change `gcc' to unroll loops only during the last invocation (of\n-     as many as two invocations) of loop optimization.\n-\n-   * Improve handling of `-fno-f2c' so that code that attempts to pass\n-     an intrinsic as an actual argument, such as `CALL FOO(ABS)', is\n-     rejected due to the fact that the run-time-library routine is,\n-     effectively, compiled with `-ff2c' in effect.\n-\n-   * Fix `g77' driver to recognize `-fsyntax-only' as an option that\n-     inhibits linking, just like `-c' or `-S', and to recognize and\n-     properly handle the `-nostdlib', `-M', `-MM', `-nodefaultlibs',\n-     and `-Xlinker' options.\n-\n-   * Upgrade to `libf2c' as of 1997-08-16.\n-\n-   * Modify `libf2c' to consistently and clearly diagnose recursive I/O\n-     (at run time).\n-\n-   * `g77' driver now prints version information (such as produced by\n-     `g77 -v') to `stderr' instead of `stdout'.\n-\n-   * The `.r' suffix now designates a Ratfor source file, to be\n-     preprocessed via the `ratfor' command, available separately.\n-\n-   * Fix some aspects of how `gcc' determines what kind of system is\n-     being configured and what kinds are supported.  For example, GNU\n-     Linux/Alpha ELF systems now are directly supported.\n-\n-   * Improve diagnostics.\n-\n-   * Improve documentation and indexing.\n-\n-   * Include all pertinent files for `libf2c' that come from\n-     `netlib.bell-labs.com'; give any such files that aren't quite\n-     accurate in `g77''s version of `libf2c' the suffix `.netlib'.\n-\n-   * Reserve `INTEGER(KIND=0)' for future use.\n-\n-In 0.5.20:\n-==========\n-\n-   * The `-fno-typeless-boz' option is now the default.\n-\n-     This option specifies that non-decimal-radix constants using the\n-     prefixed-radix form (such as `Z'1234'') are to be interpreted as\n-     `INTEGER' constants.  Specify `-ftypeless-boz' to cause such\n-     constants to be interpreted as typeless.\n-\n-     (Version 0.5.19 introduced `-fno-typeless-boz' and its inverse.)\n-\n-   * Options `-ff90-intrinsics-enable' and `-fvxt-intrinsics-enable'\n-     now are the defaults.\n-\n-     Some programs might use names that clash with intrinsic names\n-     defined (and now enabled) by these options or by the new `libU77'\n-     intrinsics.  Users of such programs might need to compile them\n-     differently (using, for example, `-ff90-intrinsics-disable') or,\n-     better yet, insert appropriate `EXTERNAL' statements specifying\n-     that these names are not intended to be names of intrinsics.\n-\n-   * The `ALWAYS_FLUSH' macro is no longer defined when building\n-     `libf2c', which should result in improved I/O performance,\n-     especially over NFS.\n-\n-     *Note:* If you have code that depends on the behavior of `libf2c'\n-     when built with `ALWAYS_FLUSH' defined, you will have to modify\n-     `libf2c' accordingly before building it from this and future\n-     versions of `g77'.\n-\n-   * Dave Love's implementation of `libU77' has been added to the\n-     version of `libf2c' distributed with and built as part of `g77'.\n-     `g77' now knows about the routines in this library as intrinsics.\n-\n-   * New option `-fvxt' specifies that the source file is written in\n-     VXT Fortran, instead of GNU Fortran.\n-\n-   * The `-fvxt-not-f90' option has been deleted, along with its\n-     inverse, `-ff90-not-vxt'.\n-\n-     If you used one of these deleted options, you should re-read the\n-     pertinent documentation to determine which options, if any, are\n-     appropriate for compiling your code with this version of `g77'.\n-\n-   * The `-fugly' option now issues a warning, as it likely will be\n-     removed in a future version.\n-\n-     (Enabling all the `-fugly-*' options is unlikely to be feasible,\n-     or sensible, in the future, so users should learn to specify only\n-     those `-fugly-*' options they really need for a particular source\n-     file.)\n-\n-   * The `-fugly-assumed' option, introduced in version 0.5.19, has\n-     been changed to better accommodate old and new code.\n-\n-   * Make a number of fixes to the `g77' front end and the `gcc' back\n-     end to better support Alpha (AXP) machines.  This includes\n-     providing at least one bug-fix to the `gcc' back end for Alphas.\n-\n-   * Related to supporting Alpha (AXP) machines, the `LOC()' intrinsic\n-     and `%LOC()' construct now return values of integer type that is\n-     the same width (holds the same number of bits) as the pointer type\n-     on the machine.\n-\n-     On most machines, this won't make a difference, whereas on Alphas,\n-     the type these constructs return is `INTEGER*8' instead of the\n-     more common `INTEGER*4'.\n-\n-   * Emulate `COMPLEX' arithmetic in the `g77' front end, to avoid bugs\n-     in `complex' support in the `gcc' back end.  New option\n-     `-fno-emulate-complex' causes `g77' to revert the 0.5.19 behavior.\n-\n-   * Fix bug whereby `REAL A(1)', for example, caused a compiler crash\n-     if `-fugly-assumed' was in effect and A was a local (automatic)\n-     array.  That case is no longer affected by the new handling of\n-     `-fugly-assumed'.\n-\n-   * Fix `g77' command driver so that `g77 -o foo.f' no longer deletes\n-     `foo.f' before issuing other diagnostics, and so the `-x' option\n-     is properly handled.\n-\n-   * Enable inlining of subroutines and functions by the `gcc' back end.\n-     This works as it does for `gcc' itself--program units may be\n-     inlined for invocations that follow them in the same program unit,\n-     as long as the appropriate compile-time options are specified.\n-\n-   * Dummy arguments are no longer assumed to potentially alias\n-     (overlap) other dummy arguments or `COMMON' areas when any of\n-     these are defined (assigned to) by Fortran code.\n-\n-     This can result in faster and/or smaller programs when compiling\n-     with optimization enabled, though on some systems this effect is\n-     observed only when `-fforce-addr' also is specified.\n-\n-     New options `-falias-check', `-fargument-alias',\n-     `-fargument-noalias', and `-fno-argument-noalias-global' control\n-     the way `g77' handles potential aliasing.\n-\n-   * The `CONJG()' and `DCONJG()' intrinsics now are compiled in-line.\n-\n-   * The bug-fix for 0.5.19.1 has been re-done.  The `g77' compiler has\n-     been changed back to assume `libf2c' has no aliasing problems in\n-     its implementations of the `COMPLEX' (and `DOUBLE COMPLEX')\n-     intrinsics.  The `libf2c' has been changed to have no such\n-     problems.\n-\n-     As a result, 0.5.20 is expected to offer improved performance over\n-     0.5.19.1, perhaps as good as 0.5.19 in most or all cases, due to\n-     this change alone.\n-\n-     *Note:* This change requires version 0.5.20 of `libf2c', at least,\n-     when linking code produced by any versions of `g77' other than\n-     0.5.19.1.  Use `g77 -v' to determine the version numbers of the\n-     `libF77', `libI77', and `libU77' components of the `libf2c'\n-     library.  (If these version numbers are not printed--in\n-     particular, if the linker complains about unresolved references to\n-     names like `g77__fvers__'--that strongly suggests your\n-     installation has an obsolete version of `libf2c'.)\n-\n-   * New option `-fugly-assign' specifies that the same memory\n-     locations are to be used to hold the values assigned by both\n-     statements `I = 3' and `ASSIGN 10 TO I', for example.  (Normally,\n-     `g77' uses a separate memory location to hold assigned statement\n-     labels.)\n-\n-   * `FORMAT' and `ENTRY' statements now are allowed to precede\n-     `IMPLICIT NONE' statements.\n-\n-   * Produce diagnostic for unsupported `SELECT CASE' on `CHARACTER'\n-     type, instead of crashing, at compile time.\n-\n-   * Fix crashes involving diagnosed or invalid code.\n-\n-   * Change approach to building `libf2c' archive (`libf2c.a') so that\n-     members are added to it only when truly necessary, so the user\n-     that installs an already-built `g77' doesn't need to have write\n-     access to the build tree (whereas the user doing the build might\n-     not have access to install new software on the system).\n-\n-   * Support `gcc' version 2.7.2.2 (modified by `g77' into version\n-     2.7.2.2.f.2), and remove support for prior versions of `gcc'.\n-\n-   * Upgrade to `libf2c' as of 1997-02-08, and fix up some of the build\n-     procedures.\n-\n-   * Improve general build procedures for `g77', fixing minor bugs\n-     (such as deletion of any file named `f771' in the parent directory\n-     of `gcc/').\n-\n-   * Enable full support of `INTEGER*8' available in `libf2c' and\n-     `f2c.h' so that `f2c' users may make full use of its features via\n-     the `g77' version of `f2c.h' and the `INTEGER*8' support routines\n-     in the `g77' version of `libf2c'.\n-\n-   * Improve `g77' driver and `libf2c' so that `g77 -v' yields version\n-     information on the library.\n-\n-   * The `SNGL' and `FLOAT' intrinsics now are specific intrinsics,\n-     instead of synonyms for the generic intrinsic `REAL'.\n-\n-   * New intrinsics have been added.  These are `REALPART', `IMAGPART',\n-     `COMPLEX', `LONG', and `SHORT'.\n-\n-   * A new group of intrinsics, `gnu', has been added to contain the\n-     new `REALPART', `IMAGPART', and `COMPLEX' intrinsics.  An old\n-     group, `dcp', has been removed.\n-\n-   * Complain about industry-wide ambiguous references `REAL(EXPR)' and\n-     `AIMAG(EXPR)', where EXPR is `DOUBLE COMPLEX' (or any complex type\n-     other than `COMPLEX'), unless `-ff90' option specifies Fortran 90\n-     interpretation or new `-fugly-complex' option, in conjunction with\n-     `-fnot-f90', specifies `f2c' interpretation.\n-\n-   * Make improvements to diagnostics.\n-\n-   * Speed up compiler a bit.\n-\n-   * Improvements to documentation and indexing, including a new\n-     chapter containing information on one, later more, diagnostics\n-     that users are directed to pull up automatically via a message in\n-     the diagnostic itself.\n-\n-     (Hence the menu item `M' for the node `Diagnostics' in the\n-     top-level menu of the Info documentation.)\n-\n-In 0.5.19.1:\n-============\n-\n-   * Code-generation bugs afflicting operations on complex data have\n-     been fixed.\n-\n-     These bugs occurred when assigning the result of an operation to a\n-     complex variable (or array element) that also served as an input\n-     to that operation.\n-\n-     The operations affected by this bug were: `CONJG()', `DCONJG()',\n-     `CCOS()', `CDCOS()', `CLOG()', `CDLOG()', `CSIN()', `CDSIN()',\n-     `CSQRT()', `CDSQRT()', complex division, and raising a `DOUBLE\n-     COMPLEX' operand to an `INTEGER' power.  (The related generic and\n-     `Z'-prefixed intrinsics, such as `ZSIN()', also were affected.)\n-\n-     For example, `C = CSQRT(C)', `Z = Z/C', and `Z = Z**I' (where `C'\n-     is `COMPLEX' and `Z' is `DOUBLE COMPLEX') have been fixed.\n-\n-In 0.5.19:\n-==========\n-\n-   * Fix `FORMAT' statement parsing so negative values for specifiers\n-     such as `P' (e.g. `FORMAT(-1PF8.1)') are correctly processed as\n-     negative.\n-\n-   * Fix `SIGNAL' intrinsic so it once again accepts a procedure as its\n-     second argument.\n-\n-   * A temporary kludge option provides bare-bones information on\n-     `COMMON' and `EQUIVALENCE' members at debug time.\n-\n-   * New `-fonetrip' option specifies FORTRAN-66-style one-trip `DO'\n-     loops.\n-\n-   * New `-fno-silent' option causes names of program units to be\n-     printed as they are compiled, in a fashion similar to UNIX `f77'\n-     and `f2c'.\n-\n-   * New `-fugly-assumed' option specifies that arrays dimensioned via\n-     `DIMENSION X(1)', for example, are to be treated as assumed-size.\n-\n-   * New `-fno-typeless-boz' option specifies that non-decimal-radix\n-     constants using the prefixed-radix form (such as `Z'1234'') are to\n-     be interpreted as `INTEGER' constants.\n-\n-   * New `-ff66' option is a \"shorthand\" option that specifies\n-     behaviors considered appropriate for FORTRAN 66 programs.\n-\n-   * New `-ff77' option is a \"shorthand\" option that specifies\n-     behaviors considered appropriate for UNIX `f77' programs.\n-\n-   * New `-fugly-comma' and `-fugly-logint' options provided to perform\n-     some of what `-fugly' used to do.  `-fugly' and `-fno-ugly' are\n-     now \"shorthand\" options, in that they do nothing more than enable\n-     (or disable) other `-fugly-*' options.\n-\n-   * Fix parsing of assignment statements involving targets that are\n-     substrings of elements of `CHARACTER' arrays having names such as\n-     `READ', `WRITE', `GOTO', and `REALFUNCTIONFOO'.\n-\n-   * Fix crashes involving diagnosed code.\n-\n-   * Fix handling of local `EQUIVALENCE' areas so certain cases of\n-     valid Fortran programs are not misdiagnosed as improperly\n-     extending the area backwards.\n-\n-   * Support `gcc' version 2.7.2.1.\n-\n-   * Upgrade to `libf2c' as of 1996-09-26, and fix up some of the build\n-     procedures.\n-\n-   * Change code generation for list-directed I/O so it allows for new\n-     versions of `libf2c' that might return non-zero status codes for\n-     some operations previously assumed to always return zero.\n-\n-     This change not only affects how `IOSTAT=' variables are set by\n-     list-directed I/O, it also affects whether `END=' and `ERR='\n-     labels are reached by these operations.\n-\n-   * Add intrinsic support for new `FTELL' and `FSEEK' procedures in\n-     `libf2c'.\n-\n-   * Modify `fseek_()' in `libf2c' to be more portable (though, in\n-     practice, there might be no systems where this matters) and to\n-     catch invalid `whence' arguments.\n-\n-   * Some useless warnings from the `-Wunused' option have been\n-     eliminated.\n-\n-   * Fix a problem building the `f771' executable on AIX systems by\n-     linking with the `-bbigtoc' option.\n-\n-   * Abort configuration if `gcc' has not been patched using the patch\n-     file provided in the `gcc/f/gbe/' subdirectory.\n-\n-   * Add options `--help' and `--version' to the `g77' command, to\n-     conform to GNU coding guidelines.  Also add printing of `g77'\n-     version number when the `--verbose' (`-v') option is used.\n-\n-   * Change internally generated name for local `EQUIVALENCE' areas to\n-     one based on the alphabetically sorted first name in the list of\n-     names for entities placed at the beginning of the areas.\n-\n-   * Improvements to documentation and indexing.\n-\n-In 0.5.18:\n-==========\n-\n-   * Add some rudimentary support for `INTEGER*1', `INTEGER*2',\n-     `INTEGER*8', and their `LOGICAL' equivalents.  (This support works\n-     on most, maybe all, `gcc' targets.)\n-\n-     Thanks to Scott Snyder (<snyder@d0sgif.fnal.gov>) for providing\n-     the patch for this!\n-\n-     Among the missing elements from the support for these features are\n-     full intrinsic support and constants.\n-\n-   * Add some rudimentary support for the `BYTE' and `WORD'\n-     type-declaration statements.  `BYTE' corresponds to `INTEGER*1',\n-     while `WORD' corresponds to `INTEGER*2'.\n-\n-     Thanks to Scott Snyder (<snyder@d0sgif.fnal.gov>) for providing\n-     the patch for this!\n-\n-   * The compiler code handling intrinsics has been largely rewritten\n-     to accommodate the new types.  No new intrinsics or arguments for\n-     existing intrinsics have been added, so there is, at this point,\n-     no intrinsic to convert to `INTEGER*8', for example.\n-\n-   * Support automatic arrays in procedures.\n-\n-   * Reduce space/time requirements for handling large *sparsely*\n-     initialized aggregate arrays.  This improvement applies to only a\n-     subset of the general problem to be addressed in 0.6.\n-\n-   * Treat initial values of zero as if they weren't specified (in DATA\n-     and type-declaration statements).  The initial values will be set\n-     to zero anyway, but the amount of compile time processing them\n-     will be reduced, in some cases significantly (though, again, this\n-     is only a subset of the general problem to be addressed in 0.6).\n-\n-     A new option, `-fzeros', is introduced to enable the traditional\n-     treatment of zeros as any other value.\n-\n-   * With `-ff90' in force, `g77' incorrectly interpreted `REAL(Z)' as\n-     returning a `REAL' result, instead of as a `DOUBLE PRECISION'\n-     result.  (Here, `Z' is `DOUBLE COMPLEX'.)\n-\n-     With `-fno-f90' in force, the interpretation remains unchanged,\n-     since this appears to be how at least some F77 code using the\n-     `DOUBLE COMPLEX' extension expected it to work.\n-\n-     Essentially, `REAL(Z)' in F90 is the same as `DBLE(Z)', while in\n-     extended F77, it appears to be the same as `REAL(REAL(Z))'.\n-\n-   * An expression involving exponentiation, where both operands were\n-     type `INTEGER' and the right-hand operand was negative, was\n-     erroneously evaluated.\n-\n-   * Fix bugs involving `DATA' implied-`DO' constructs (these involved\n-     an errant diagnostic and a crash, both on good code, one involving\n-     subsequent statement-function definition).\n-\n-   * Close `INCLUDE' files after processing them, so compiling source\n-     files with lots of `INCLUDE' statements does not result in being\n-     unable to open `INCLUDE' files after all the available file\n-     descriptors are used up.\n-\n-   * Speed up compiling, especially of larger programs, and perhaps\n-     slightly reduce memory utilization while compiling (this is *not*\n-     the improvement planned for 0.6 involving large aggregate\n-     areas)--these improvements result from simply turning off some\n-     low-level code to do self-checking that hasn't been triggered in a\n-     long time.\n-\n-   * Introduce three new options that implement optimizations in the\n-     `gcc' back end (GBE).  These options are `-fmove-all-movables',\n-     `-freduce-all-givs', and `-frerun-loop-opt', which are enabled, by\n-     default, for Fortran compilations.  These optimizations are\n-     intended to help toon Fortran programs.\n-\n-   * Patch the GBE to do a better job optimizing certain kinds of\n-     references to array elements.\n-\n-   * Due to patches to the GBE, the version number of `gcc' also is\n-     patched to make it easier to manage installations, especially\n-     useful if it turns out a `g77' change to the GBE has a bug.\n-\n-     The `g77'-modified version number is the `gcc' version number with\n-     the string `.f.N' appended, where `f' identifies the version as\n-     enhanced for Fortran, and N is `1' for the first Fortran patch for\n-     that version of `gcc', `2' for the second, and so on.\n-\n-     So, this introduces version 2.7.2.f.1 of `gcc'.\n-\n-   * Make several improvements and fixes to diagnostics, including the\n-     removal of two that were inappropriate or inadequate.\n-\n-   * Warning about two successive arithmetic operators, produced by\n-     `-Wsurprising', now produced *only* when both operators are,\n-     indeed, arithmetic (not relational/boolean).\n-\n-   * `-Wsurprising' now warns about the remaining cases of using\n-     non-integral variables for implied-`DO' loops, instead of these\n-     being rejected unless `-fpedantic' or `-fugly' specified.\n-\n-   * Allow `SAVE' of a local variable or array, even after it has been\n-     given an initial value via `DATA', for example.\n-\n-   * Introduce an Info version of `g77' documentation, which supercedes\n-     `gcc/f/CREDITS', `gcc/f/DOC', and `gcc/f/PROJECTS'.  These files\n-     will be removed in a future release.  The files `gcc/f/BUGS',\n-     `gcc/f/INSTALL', and `gcc/f/NEWS' now are automatically built from\n-     the texinfo source when distributions are made.\n-\n-     This effort was inspired by a first pass at translating\n-     `g77-0.5.16/f/DOC' that was contributed to Craig by David Ronis\n-     (<ronis@onsager.chem.mcgill.ca>).\n-\n-   * New `-fno-second-underscore' option to specify that, when\n-     `-funderscoring' is in effect, a second underscore is not to be\n-     appended to Fortran names already containing an underscore.\n-\n-   * Change the way iterative `DO' loops work to follow the F90\n-     standard.  In particular, calculation of the iteration count is\n-     still done by converting the start, end, and increment parameters\n-     to the type of the `DO' variable, but the result of the\n-     calculation is always converted to the default `INTEGER' type.\n-\n-     (This should have no effect on existing code compiled by `g77',\n-     but code written to assume that use of a *wider* type for the `DO'\n-     variable will result in an iteration count being fully calculated\n-     using that wider type (wider than default `INTEGER') must be\n-     rewritten.)\n-\n-   * Support `gcc' version 2.7.2.\n-\n-   * Upgrade to `libf2c' as of 1996-03-23, and fix up some of the build\n-     procedures.\n-\n-     Note that the email addresses related to `f2c' have changed--the\n-     distribution site now is named `netlib.bell-labs.com', and the\n-     maintainer's new address is <dmg@bell-labs.com>.\n-\n-In 0.5.17:\n-==========\n-\n-   * *Fix serious bug* in `g77 -v' command that can cause removal of a\n-     system's `/dev/null' special file if run by user `root'.\n-\n-     *All users* of version 0.5.16 should ensure that they have not\n-     removed `/dev/null' or replaced it with an ordinary file (e.g. by\n-     comparing the output of `ls -l /dev/null' with `ls -l /dev/zero'.\n-     If the output isn't basically the same, contact your system\n-     administrator about restoring `/dev/null' to its proper status).\n-\n-     This bug is particularly insidious because removing `/dev/null' as\n-     a special file can go undetected for quite a while, aside from\n-     various applications and programs exhibiting sudden, strange\n-     behaviors.\n-\n-     I sincerely apologize for not realizing the implications of the\n-     fact that when `g77 -v' runs the `ld' command with `-o /dev/null'\n-     that `ld' tries to *remove* the executable it is supposed to build\n-     (especially if it reports unresolved references, which it should\n-     in this case)!\n-\n-   * Fix crash on `CHARACTER*(*) FOO' in a main or block data program\n-     unit.\n-\n-   * Fix crash that can occur when diagnostics given outside of any\n-     program unit (such as when input file contains `@foo').\n-\n-   * Fix crashes, infinite loops (hangs), and such involving diagnosed\n-     code.\n-\n-   * Fix `ASSIGN''ed variables so they can be `SAVE''d or dummy\n-     arguments, and issue clearer error message in cases where target\n-     of `ASSIGN' or `ASSIGN'ed `GOTO'/`FORMAT' is too small (which\n-     should never happen).\n-\n-   * Make `libf2c' build procedures work on more systems again by\n-     eliminating unnecessary invocations of `ld -r -x' and `mv'.\n-\n-   * Fix omission of `-funix-intrinsics-...' options in list of\n-     permitted options to compiler.\n-\n-   * Fix failure to always diagnose missing type declaration for\n-     `IMPLICIT NONE'.\n-\n-   * Fix compile-time performance problem (which could sometimes crash\n-     the compiler, cause a hang, or whatever, due to a bug in the back\n-     end) involving exponentiation with a large `INTEGER' constant for\n-     the right-hand operator (e.g. `I**32767').\n-\n-   * Fix build procedures so cross-compiling `g77' (the `fini' utility\n-     in particular) is properly built using the host compiler.\n-\n-   * Add new `-Wsurprising' option to warn about constructs that are\n-     interpreted by the Fortran standard (and `g77') in ways that are\n-     surprising to many programmers.\n-\n-   * Add `ERF()' and `ERFC()' as generic intrinsics mapping to existing\n-     `ERF'/`DERF' and `ERFC'/`DERFC' specific intrinsics.\n-\n-     *Note:* You should specify `INTRINSIC ERF,ERFC' in any code where\n-     you might use these as generic intrinsics, to improve likelihood\n-     of diagnostics (instead of subtle run-time bugs) when using a\n-     compiler that doesn't support these as intrinsics (e.g. `f2c').\n-\n-   * Remove from `-fno-pedantic' the diagnostic about `DO' with\n-     non-`INTEGER' index variable; issue that under `-Wsurprising'\n-     instead.\n-\n-   * Clarify some diagnostics that say things like \"ignored\" when that's\n-     misleading.\n-\n-   * Clarify diagnostic on use of `.EQ.'/`.NE.' on `LOGICAL' operands.\n-\n-   * Minor improvements to code generation for various operations on\n-     `LOGICAL' operands.\n-\n-   * Minor improvement to code generation for some `DO' loops on some\n-     machines.\n-\n-   * Support `gcc' version 2.7.1.\n-\n-   * Upgrade to `libf2c' as of 1995-11-15.\n-\n-In 0.5.16:\n-==========\n-\n-   * Fix a code-generation bug involving complicated `EQUIVALENCE'\n-     statements not involving `COMMON'.\n-\n-   * Fix code-generation bugs involving invoking \"gratis\" library\n-     procedures in `libf2c' from code compiled with `-fno-f2c' by\n-     making these procedures known to `g77' as intrinsics (not affected\n-     by -fno-f2c).  This is known to fix code invoking `ERF()',\n-     `ERFC()', `DERF()', and `DERFC()'.\n-\n-   * Update `libf2c' to include netlib patches through 1995-08-16, and\n-     `#define' `WANT_LEAD_0' to 1 to make `g77'-compiled code more\n-     consistent with other Fortran implementations by outputting\n-     leading zeros in formatted and list-directed output.\n-\n-   * Fix a code-generation bug involving adjustable dummy arrays with\n-     high bounds whose primaries are changed during procedure\n-     execution, and which might well improve code-generation\n-     performance for such arrays compared to `f2c' plus `gcc' (but\n-     apparently only when using `gcc-2.7.0' or later).\n-\n-   * Fix a code-generation bug involving invocation of `COMPLEX' and\n-     `DOUBLE COMPLEX' `FUNCTION's and doing `COMPLEX' and `DOUBLE\n-     COMPLEX' divides, when the result of the invocation or divide is\n-     assigned directly to a variable that overlaps one or more of the\n-     arguments to the invocation or divide.\n-\n-   * Fix crash by not generating new optimal code for `X**I' if `I' is\n-     nonconstant and the expression is used to dimension a dummy array,\n-     since the `gcc' back end does not support the necessary mechanics\n-     (and the `gcc' front end rejects the equivalent construct, as it\n-     turns out).\n-\n-   * Fix crash on expressions like `COMPLEX**INTEGER'.\n-\n-   * Fix crash on expressions like `(1D0,2D0)**2', i.e. raising a\n-     `DOUBLE COMPLEX' constant to an `INTEGER' constant power.\n-\n-   * Fix crashes and such involving diagnosed code.\n-\n-   * Diagnose, instead of crashing on, statement function definitions\n-     having duplicate dummy argument names.\n-\n-   * Fix bug causing rejection of good code involving statement function\n-     definitions.\n-\n-   * Fix bug resulting in debugger not knowing size of local equivalence\n-     area when any member of area has initial value (via `DATA', for\n-     example).\n-\n-   * Fix installation bug that prevented installation of `g77' driver.\n-     Provide for easy selection of whether to install copy of `g77' as\n-     `f77' to replace the broken code.\n-\n-   * Fix `gcc' driver (affects `g77' thereby) to not gratuitously\n-     invoke the `f771' program (e.g. when `-E' is specified).\n-\n-   * Fix diagnostic to point to correct source line when it immediately\n-     follows an `INCLUDE' statement.\n-\n-   * Support more compiler options in `gcc'/`g77' when compiling\n-     Fortran files.  These options include `-p', `-pg', `-aux-info',\n-     `-P', correct setting of version-number macros for preprocessing,\n-     full recognition of `-O0', and automatic insertion of\n-     configuration-specific linker specs.\n-\n-   * Add new intrinsics that interface to existing routines in `libf2c':\n-     `ABORT', `DERF', `DERFC', `ERF', `ERFC', `EXIT', `FLUSH',\n-     `GETARG', `GETENV', `IARGC', `SIGNAL', and `SYSTEM'.  Note that\n-     `ABORT', `EXIT', `FLUSH', `SIGNAL', and `SYSTEM' are intrinsic\n-     subroutines, not functions (since they have side effects), so to\n-     get the return values from `SIGNAL' and `SYSTEM', append a final\n-     argument specifying an `INTEGER' variable or array element (e.g.\n-     `CALL SYSTEM('rm foo',ISTAT)').\n-\n-   * Add new intrinsic group named `unix' to contain the new intrinsics,\n-     and by default enable this new group.\n-\n-   * Move `LOC()' intrinsic out of the `vxt' group to the new `unix'\n-     group.\n-\n-   * Improve `g77' so that `g77 -v' by itself (or with certain other\n-     options, including `-B', `-b', `-i', `-nostdlib', and `-V')\n-     reports lots more useful version info, and so that long-form\n-     options `gcc' accepts are understood by `g77' as well (even in\n-     truncated, unambiguous forms).\n-\n-   * Add new `g77' option `--driver=name' to specify driver when\n-     default, `gcc', isn't appropriate.\n-\n-   * Add support for `#' directives (as output by the preprocessor) in\n-     the compiler, and enable generation of those directives by the\n-     preprocessor (when compiling `.F' files) so diagnostics and\n-     debugging info are more useful to users of the preprocessor.\n-\n-   * Produce better diagnostics, more like `gcc', with info such as `In\n-     function `foo':' and `In file included from...:'.\n-\n-   * Support `gcc''s `-fident' and `-fno-ident' options.\n-\n-   * When `-Wunused' in effect, don't warn about local variables used as\n-     statement-function dummy arguments or `DATA' implied-`DO' iteration\n-     variables, even though, strictly speaking, these are not uses of\n-     the variables themselves.\n-\n-   * When `-W -Wunused' in effect, don't warn about unused dummy\n-     arguments at all, since there's no way to turn this off for\n-     individual cases (`g77' might someday start warning about\n-     these)--applies to `gcc' versions 2.7.0 and later, since earlier\n-     versions didn't warn about unused dummy arguments.\n-\n-   * New option `-fno-underscoring' that inhibits transformation of\n-     names (by appending one or two underscores) so users may experiment\n-     with implications of such an environment.\n-\n-   * Minor improvement to `gcc/f/info' module to make it easier to build\n-     `g77' using the native (non-`gcc') compiler on certain machines\n-     (but definitely not all machines nor all non-`gcc' compilers).\n-     Please do not report bugs showing problems compilers have with\n-     macros defined in `gcc/f/target.h' and used in places like\n-     `gcc/f/expr.c'.\n-\n-   * Add warning to be printed for each invocation of the compiler if\n-     the target machine `INTEGER', `REAL', or `LOGICAL' size is not 32\n-     bits, since `g77' is known to not work well for such cases (to be\n-     fixed in Version 0.6--*note Actual Bugs We Haven't Fixed Yet:\n-     Actual Bugs.).\n-\n-   * Lots of new documentation (though work is still needed to put it\n-     into canonical GNU format).\n-\n-   * Build `libf2c' with `-g0', not `-g2', in effect (by default), to\n-     produce smaller library without lots of debugging clutter.\n-\n-In 0.5.15:\n-==========\n-\n-   * Fix bad code generation involving `X**I' and temporary, internal\n-     variables generated by `g77' and the back end (such as for `DO'\n-     loops).\n-\n-   * Fix crash given `CHARACTER A;DATA A/.TRUE./'.\n-\n-   * Replace crash with diagnostic given `CHARACTER A;DATA A/1.0/'.\n-\n-   * Fix crash or other erratic behavior when null character constant\n-     (`''') is encountered.\n-\n-   * Fix crash or other erratic behavior involving diagnosed code.\n-\n-   * Fix code generation for external functions returning type `REAL'\n-     when the `-ff2c' option is in force (which it is by default) so\n-     that `f2c' compatibility is indeed provided.\n-\n-   * Disallow `COMMON I(10)' if `I' has previously been specified with\n-     an array declarator.\n-\n-   * New `-ffixed-line-length-N' option, where N is the maximum length\n-     of a typical fixed-form line, defaulting to 72 columns, such that\n-     characters beyond column N are ignored, or N is `none', meaning no\n-     characters are ignored.  does not affect lines with `&' in column\n-     1, which are always processed as if `-ffixed-line-length-none' was\n-     in effect.\n-\n-   * No longer generate better code for some kinds of array references,\n-     as `gcc' back end is to be fixed to do this even better, and it\n-     turned out to slow down some code in some cases after all.\n-\n-   * In `COMMON' and `EQUIVALENCE' areas with any members given initial\n-     values (e.g. via `DATA'), uninitialized members now always\n-     initialized to binary zeros (though this is not required by the\n-     standard, and might not be done in future versions of `g77').\n-     Previously, in some `COMMON'/`EQUIVALENCE' areas (essentially\n-     those with members of more than one type), the uninitialized\n-     members were initialized to spaces, to cater to `CHARACTER' types,\n-     but it seems no existing code expects that, while much existing\n-     code expects binary zeros.\n-\n-In 0.5.14:\n-==========\n-\n-   * Don't emit bad code when low bound of adjustable array is\n-     nonconstant and thus might vary as an expression at run time.\n-\n-   * Emit correct code for calculation of number of trips in `DO' loops\n-     for cases where the loop should not execute at all.  (This bug\n-     affected cases where the difference between the begin and end\n-     values was less than the step count, though probably not for\n-     floating-point cases.)\n-\n-   * Fix crash when extra parentheses surround item in `DATA'\n-     implied-`DO' list.\n-\n-   * Fix crash over minor internal inconsistencies in handling\n-     diagnostics, just substitute dummy strings where necessary.\n-\n-   * Fix crash on some systems when compiling call to `MVBITS()'\n-     intrinsic.\n-\n-   * Fix crash on array assignment `TYPEDDD(...)=...', where DDD is a\n-     string of one or more digits.\n-\n-   * Fix crash on `DCMPLX()' with a single `INTEGER' argument.\n-\n-   * Fix various crashes involving code with diagnosed errors.\n-\n-   * Support `-I' option for `INCLUDE' statement, plus `gcc''s\n-     `header.gcc' facility for handling systems like MS-DOS.\n-\n-   * Allow `INCLUDE' statement to be continued across multiple lines,\n-     even allow it to coexist with other statements on the same line.\n-\n-   * Incorporate Bellcore fixes to `libf2c' through 1995-03-15--this\n-     fixes a bug involving infinite loops reading EOF with empty\n-     list-directed I/O list.\n-\n-   * Remove all the `g77'-specific auto-configuration scripts, code,\n-     and so on, except for temporary substitutes for bsearch() and\n-     strtoul(), as too many configure/build problems were reported in\n-     these areas.  People will have to fix their systems' problems\n-     themselves, or at least somewhere other than `g77', which expects\n-     a working ANSI C environment (and, for now, a GNU C compiler to\n-     compile `g77' itself).\n-\n-   * Complain if initialized common redeclared as larger in subsequent\n-     program unit.\n-\n-   * Warn if blank common initialized, since its size can vary and hence\n-     related warnings that might be helpful won't be seen.\n-\n-   * New `-fbackslash' option, on by default, that causes `\\' within\n-     `CHARACTER' and Hollerith constants to be interpreted a la GNU C.\n-     Note that this behavior is somewhat different from `f2c''s, which\n-     supports only a limited subset of backslash (escape) sequences.\n-\n-   * Make `-fugly-args' the default.\n-\n-   * New `-fugly-init' option, on by default, that allows\n-     typeless/Hollerith to be specified as initial values for variables\n-     or named constants (`PARAMETER'), and also allows\n-     character<->numeric conversion in those contexts--turn off via\n-     `-fno-ugly-init'.\n-\n-   * New `-finit-local-zero' option to initialize local variables to\n-     binary zeros.  This does not affect whether they are `SAVE'd, i.e.\n-     made automatic or static.\n-\n-   * New `-Wimplicit' option to warn about implicitly typed variables,\n-     arrays, and functions.  (Basically causes all program units to\n-     default to `IMPLICIT NONE'.)\n-\n-   * `-Wall' now implies `-Wuninitialized' as with `gcc' (i.e. unless\n-     `-O' not specified, since `-Wuninitialized' requires `-O'), and\n-     implies `-Wunused' as well.\n-\n-   * `-Wunused' no longer gives spurious messages for unused `EXTERNAL'\n-     names (since they are assumed to refer to block data program\n-     units, to make use of libraries more reliable).\n-\n-   * Support `%LOC()' and `LOC()' of character arguments.\n-\n-   * Support null (zero-length) character constants and expressions.\n-\n-   * Support `f2c''s `IMAG()' generic intrinsic.\n-\n-   * Support `ICHAR()', `IACHAR()', and `LEN()' of character\n-     expressions that are valid in assignments but not normally as\n-     actual arguments.\n-\n-   * Support `f2c'-style `&' in column 1 to mean continuation line.\n-\n-   * Allow `NAMELIST', `EXTERNAL', `INTRINSIC', and `VOLATILE' in\n-     `BLOCK DATA', even though these are not allowed by the standard.\n-\n-   * Allow `RETURN' in main program unit.\n-\n-   * Changes to Hollerith-constant support to obey Appendix C of the\n-     standard:\n-\n-        - Now padded on the right with zeros, not spaces.\n-\n-        - Hollerith \"format specifications\" in the form of arrays of\n-          non-character allowed.\n-\n-        - Warnings issued when non-space truncation occurs when\n-          converting to another type.\n-\n-        - When specified as actual argument, now passed by reference to\n-          `INTEGER' (padded on right with spaces if constant too small,\n-          otherwise fully intact if constant wider the `INTEGER' type)\n-          instead of by value.\n-\n-     *Warning:* `f2c' differs on the interpretation of `CALL FOO(1HX)',\n-     which it treats exactly the same as `CALL FOO('X')', but which the\n-     standard and `g77' treat as `CALL FOO(%REF('X   '))' (padded with\n-     as many spaces as necessary to widen to `INTEGER'), essentially.\n-\n-   * Changes and fixes to typeless-constant support:\n-\n-        - Now treated as a typeless double-length `INTEGER' value.\n-\n-        - Warnings issued when overflow occurs.\n-\n-        - Padded on the left with zeros when converting to a larger\n-          type.\n-\n-        - Should be properly aligned and ordered on the target machine\n-          for whatever type it is turned into.\n-\n-        - When specified as actual argument, now passed as reference to\n-          a default `INTEGER' constant.\n-\n-   * `%DESCR()' of a non-`CHARACTER' expression now passes a pointer to\n-     the expression plus a length for the expression just as if it were\n-     a `CHARACTER' expression.  For example, `CALL FOO(%DESCR(D))',\n-     where `D' is `REAL*8', is the same as `CALL FOO(D,%VAL(8)))'.\n-\n-   * Name of multi-entrypoint master function changed to incorporate\n-     the name of the primary entry point instead of a decimal value, so\n-     the name of the master function for `SUBROUTINE X' with alternate\n-     entry points is now `__g77_masterfun_x'.\n-\n-   * Remove redundant message about zero-step-count `DO' loops.\n-\n-   * Clean up diagnostic messages, shortening many of them.\n-\n-   * Fix typo in `g77' man page.\n-\n-   * Clarify implications of constant-handling bugs in `f/BUGS'.\n-\n-   * Generate better code for `**' operator with a right-hand operand of\n-     type `INTEGER'.\n+ 25. Upgrade to `libf2c' as of 1998-06-18.\n \n-   * Generate better code for `SQRT()' and `DSQRT()', also when\n-     `-ffast-math' specified, enable better code generation for `SIN()'\n-     and `COS()'.\n+ 26. Improve documentation and indexing.\n \n-   * Generate better code for some kinds of array references.\n+In previous versions:\n+=====================\n \n-   * Speed up lexing somewhat (this makes the compilation phase\n-     noticeably faster).\n+   Information on previous versions is not provided in this\n+`egcs/gcc/f/NEWS' file, to keep it short.  See `egcs/gcc/f/news.texi',\n+or any of its other derivations (Info, HTML, dvi forms) for such\n+information.\n "}]}