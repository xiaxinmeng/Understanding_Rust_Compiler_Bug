{"sha": "bde6de5d4ba6258094a7a6fb47af74935711d3c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlNmRlNWQ0YmE2MjU4MDk0YTdhNmZiNDdhZjc0OTM1NzExZDNjNg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2012-09-04T21:07:48Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2012-09-04T21:07:48Z"}, "message": "Fix bootstrap failure with clang++.\n\nThis patch fixes a bootstrap failure when using clang as the host\ncompiler.  Default arguments for class template member functions\nshould be added in the declaration, not the definition.\n\nFrom Jason:\n\n> 8.3.6 says \"Default arguments for a member function of a class template shall\n> be specified on the initial declaration of the member function within the\n> class template.\"\n\n\tPR bootstrap/54484\n\t* vec.h (vec_t::embedded_init): Move default argument value\n\tto function declaration.\n\nFrom-SVN: r190951", "tree": {"sha": "864e76a639738a9d7af588491843d89196e3cac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864e76a639738a9d7af588491843d89196e3cac7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bde6de5d4ba6258094a7a6fb47af74935711d3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde6de5d4ba6258094a7a6fb47af74935711d3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde6de5d4ba6258094a7a6fb47af74935711d3c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde6de5d4ba6258094a7a6fb47af74935711d3c6/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afba316b4627a4ce2613af1321319c85c7cf6ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afba316b4627a4ce2613af1321319c85c7cf6ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afba316b4627a4ce2613af1321319c85c7cf6ebe"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "d0c7a73a4f4c80a783e9ba811f366306c82bccc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde6de5d4ba6258094a7a6fb47af74935711d3c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde6de5d4ba6258094a7a6fb47af74935711d3c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bde6de5d4ba6258094a7a6fb47af74935711d3c6", "patch": "@@ -1,3 +1,9 @@\n+2012-09-04  Diego Novillo  <dnovillo@google.com>\n+\n+\tPR bootstrap/54484\n+\t* vec.h (vec_t::embedded_init): Move default argument value\n+\tto function declaration.\n+\n 2012-09-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* bb-reorder.c (gate_handle_reorder_blocks): Move around."}, {"sha": "441c9b5f7911f9f5e839dab3a8f07bbcaa045ef1", "filename": "gcc/vec.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde6de5d4ba6258094a7a6fb47af74935711d3c6/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde6de5d4ba6258094a7a6fb47af74935711d3c6/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=bde6de5d4ba6258094a7a6fb47af74935711d3c6", "patch": "@@ -171,7 +171,7 @@ struct GTY(()) vec_t\n   T &last (ALONE_VEC_CHECK_DECL);\n   const T &operator[] (unsigned) const;\n   T &operator[] (unsigned);\n-  void embedded_init (int, int);\n+  void embedded_init (int, int = 0);\n \n   template<enum vec_allocation_t A>\n   vec_t<T> *copy (ALONE_MEM_STAT_DECL);\n@@ -599,7 +599,7 @@ vec_t<T>::iterate (const vec_t<T> *vec, unsigned ix, T **ptr)\n    final member):\n \n    size_t vec_t<T>::embedded_size<T> (int reserve);\n-   void v->embedded_init(int reserve, int active = 0);\n+   void v->embedded_init(int reserve, int active);\n \n    These allow the caller to perform the memory allocation.  */\n \n@@ -616,7 +616,7 @@ vec_t<T>::embedded_size (int nelems)\n \n template<typename T>\n void\n-vec_t<T>::embedded_init (int nelems, int active = 0)\n+vec_t<T>::embedded_init (int nelems, int active)\n {\n   prefix_.num_ = active;\n   prefix_.alloc_ = nelems;"}]}