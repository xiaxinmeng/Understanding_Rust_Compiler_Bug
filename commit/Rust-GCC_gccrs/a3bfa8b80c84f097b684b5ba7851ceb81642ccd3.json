{"sha": "a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNiZmE4YjgwYzg0ZjA5N2I2ODRiNWJhNzg1MWNlYjgxNjQyY2NkMw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-10-29T18:25:17Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-10-29T18:25:17Z"}, "message": "Convert symtab, cgraph and varpool nodes into a real class hierarchy\n\nThis is the handwritten part of the patch; automated part to follow.\n\n\t* cgraph.h (symtab_node_base): Convert to a class;\n\tadd GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"))), and take\n\tchain_next/prev from symtab_node_def.\n\t(cgraph_node): Inherit from symtab_node; add GTY option\n\ttag (\"SYMTAB_FUNCTION\").\n\t(varpool_node): Inherit from symtab_node; add GTY option\n\ttag (\"SYMTAB_VARIABLE\").\n\t(symtab_node_def): Remove.\n\t(is_a_helper <cgraph_node>::test (symtab_node_def *)): Convert to...\n\t(is_a_helper <cgraph_node>::test (symtab_node_base *)): ...this.\n\t(is_a_helper <varpool_node>::test (symtab_node_def *)): Convert to...\n\t(is_a_helper <varpool_node>::test (symtab_node_base *)): ...this.\n\n\t* ipa-ref.h (symtab_node_def): Drop.\n\t(symtab_node): Change underlying type from symtab_node_def to\n\tsymtab_node_base.\n\t(const_symtab_node): Likwise.\n\n\t* is-a.h: Update examples in comment.\n\n\t* symtab.c (symtab_hash): Change symtab_node_def to symtab_node_base.\n\t(assembler_name_hash): Likewise.\n\nFrom-SVN: r204170", "tree": {"sha": "1448b6640c11838946a37fc6783f028e1f3c26bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1448b6640c11838946a37fc6783f028e1f3c26bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c960732f0526add82cdf51879ee1b97c221feb08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c960732f0526add82cdf51879ee1b97c221feb08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c960732f0526add82cdf51879ee1b97c221feb08"}], "stats": {"total": 81, "additions": 46, "deletions": 35}, "files": [{"sha": "8a7df7d97df44e7af1bfac2a7078327623b0bc5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "patch": "@@ -1,3 +1,28 @@\n+2013-10-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* cgraph.h (symtab_node_base): Convert to a class;\n+\tadd GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"))), and take\n+\tchain_next/prev from symtab_node_def.\n+\t(cgraph_node): Inherit from symtab_node; add GTY option\n+\ttag (\"SYMTAB_FUNCTION\").\n+\t(varpool_node): Inherit from symtab_node; add GTY option\n+\ttag (\"SYMTAB_VARIABLE\").\n+\t(symtab_node_def): Remove.\n+\t(is_a_helper <cgraph_node>::test (symtab_node_def *)): Convert to...\n+\t(is_a_helper <cgraph_node>::test (symtab_node_base *)): ...this.\n+\t(is_a_helper <varpool_node>::test (symtab_node_def *)): Convert to...\n+\t(is_a_helper <varpool_node>::test (symtab_node_base *)): ...this.\n+\n+\t* ipa-ref.h (symtab_node_def): Drop.\n+\t(symtab_node): Change underlying type from symtab_node_def to\n+\tsymtab_node_base.\n+\t(const_symtab_node): Likwise.\n+\n+\t* is-a.h: Update examples in comment.\n+\n+\t* symtab.c (symtab_hash): Change symtab_node_def to symtab_node_base.\n+\t(assembler_name_hash): Likewise.\n+\n 2013-10-29  Martin Liska <marxin.liska@gmail.com>\n \n        * doc/tree-ssa.texi (gimple_phi_result): Document."}, {"sha": "4cc20491f6e94466f80781243e81a79f75d4f629", "filename": "gcc/cgraph.h", "status": "modified", "additions": 13, "deletions": 27, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "patch": "@@ -39,8 +39,11 @@ enum symtab_type\n \n /* Base of all entries in the symbol table.\n    The symtab_node is inherited by cgraph and varpol nodes.  */\n-struct GTY(()) symtab_node_base\n+class GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"),\n+\t   chain_next (\"%h.next\"), chain_prev (\"%h.previous\")))\n+  symtab_node_base\n {\n+public:\n   /* Type of the symbol.  */\n   ENUM_BITFIELD (symtab_type) type : 8;\n \n@@ -251,25 +254,19 @@ struct GTY(()) cgraph_clone_info\n /* The cgraph data structure.\n    Each function decl has assigned cgraph_node listing callees and callers.  */\n \n-struct GTY(()) cgraph_node {\n-  struct symtab_node_base symbol;\n+struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node_base {\n+public:\n   struct cgraph_edge *callees;\n   struct cgraph_edge *callers;\n   /* List of edges representing indirect calls with a yet undetermined\n      callee.  */\n   struct cgraph_edge *indirect_calls;\n   /* For nested functions points to function the node is nested in.  */\n-  struct cgraph_node *\n-    GTY ((nested_ptr (union symtab_node_def, \"(struct cgraph_node *)(%h)\", \"(symtab_node)%h\")))\n-    origin;\n+  struct cgraph_node *origin;\n   /* Points to first nested function, if any.  */\n-  struct cgraph_node *\n-    GTY ((nested_ptr (union symtab_node_def, \"(struct cgraph_node *)(%h)\", \"(symtab_node)%h\")))\n-    nested;\n+  struct cgraph_node *nested;\n   /* Pointer to the next function with same origin, if any.  */\n-  struct cgraph_node *\n-    GTY ((nested_ptr (union symtab_node_def, \"(struct cgraph_node *)(%h)\", \"(symtab_node)%h\")))\n-    next_nested;\n+  struct cgraph_node *next_nested;\n   /* Pointer to the next clone.  */\n   struct cgraph_node *next_sibling_clone;\n   struct cgraph_node *prev_sibling_clone;\n@@ -517,9 +514,8 @@ typedef struct cgraph_edge *cgraph_edge_p;\n /* The varpool data structure.\n    Each static variable decl has assigned varpool_node.  */\n \n-struct GTY(()) varpool_node {\n-  struct symtab_node_base symbol;\n-\n+class GTY((tag (\"SYMTAB_VARIABLE\"))) varpool_node : public symtab_node_base {\n+public:\n   /* Set when variable is scheduled to be assembled.  */\n   unsigned output : 1;\n };\n@@ -535,22 +531,12 @@ struct GTY(()) asm_node {\n   int order;\n };\n \n-/* Symbol table entry.  */\n-union GTY((desc (\"%h.symbol.type\"), chain_next (\"%h.symbol.next\"),\n-\t   chain_prev (\"%h.symbol.previous\"))) symtab_node_def {\n-  struct symtab_node_base GTY ((tag (\"SYMTAB_SYMBOL\"))) symbol;\n-  /* To access the following fields,\n-     use the use dyn_cast or as_a to obtain the concrete type.  */\n-  struct cgraph_node GTY ((tag (\"SYMTAB_FUNCTION\"))) x_function;\n-  struct varpool_node GTY ((tag (\"SYMTAB_VARIABLE\"))) x_variable;\n-};\n-\n /* Report whether or not THIS symtab node is a function, aka cgraph_node.  */\n \n template <>\n template <>\n inline bool\n-is_a_helper <cgraph_node>::test (symtab_node_def *p)\n+is_a_helper <cgraph_node>::test (symtab_node_base *p)\n {\n   return p->symbol.type == SYMTAB_FUNCTION;\n }\n@@ -560,7 +546,7 @@ is_a_helper <cgraph_node>::test (symtab_node_def *p)\n template <>\n template <>\n inline bool\n-is_a_helper <varpool_node>::test (symtab_node_def *p)\n+is_a_helper <varpool_node>::test (symtab_node_base *p)\n {\n   return p->symbol.type == SYMTAB_VARIABLE;\n }"}, {"sha": "dc6e238568c3cb3b2094929f7f5da4e0bc0fd640", "filename": "gcc/ipa-ref.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fipa-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fipa-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-ref.h?ref=a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "patch": "@@ -20,9 +20,9 @@ along with GCC; see the file COPYING3.  If not see\n \n struct cgraph_node;\n struct varpool_node;\n-union symtab_node_def;\n-typedef union symtab_node_def *symtab_node;\n-typedef const union symtab_node_def *const_symtab_node;\n+class symtab_node_base;\n+typedef symtab_node_base *symtab_node;\n+typedef const symtab_node_base *const_symtab_node;\n \n \n /* How the reference is done.  */"}, {"sha": "ccf12be3d90fa3645b80acecb358fcb2d954d185", "filename": "gcc/is-a.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fis-a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fis-a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fis-a.h?ref=a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "patch": "@@ -31,7 +31,7 @@ bool is_a <TYPE> (pointer)\n \n     Tests whether the pointer actually points to a more derived TYPE.\n \n-    Suppose you have a symtab_node_def *ptr, AKA symtab_node ptr.  You can test\n+    Suppose you have a symtab_node_base *ptr, AKA symtab_node ptr.  You can test\n     whether it points to a 'derived' cgraph_node as follows.\n \n       if (is_a <cgraph_node> (ptr))\n@@ -110,7 +110,7 @@ example,\n   template <>\n   template <>\n   inline bool\n-  is_a_helper <cgraph_node>::test (symtab_node_def *p)\n+  is_a_helper <cgraph_node>::test (symtab_node_base *p)\n   {\n     return p->symbol.type == SYMTAB_FUNCTION;\n   }\n@@ -122,7 +122,7 @@ when needed may result in a crash.  For example,\n   template <>\n   template <>\n   inline bool\n-  is_a_helper <cgraph_node>::cast (symtab_node_def *p)\n+  is_a_helper <cgraph_node>::cast (symtab_node_base *p)\n   {\n     return &p->x_function;\n   }"}, {"sha": "7232291e1cba8aa13abfd4fad11b2219c2c660f6", "filename": "gcc/symtab.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3bfa8b80c84f097b684b5ba7851ceb81642ccd3/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=a3bfa8b80c84f097b684b5ba7851ceb81642ccd3", "patch": "@@ -49,9 +49,9 @@ const char * const ld_plugin_symbol_resolution_names[]=\n };\n \n /* Hash table used to convert declarations into nodes.  */\n-static GTY((param_is (union symtab_node_def))) htab_t symtab_hash;\n+static GTY((param_is (symtab_node_base))) htab_t symtab_hash;\n /* Hash table used to convert assembler names into nodes.  */\n-static GTY((param_is (union symtab_node_def))) htab_t assembler_name_hash;\n+static GTY((param_is (symtab_node_base))) htab_t assembler_name_hash;\n \n /* Linked list of symbol table nodes.  */\n symtab_node symtab_nodes;"}]}