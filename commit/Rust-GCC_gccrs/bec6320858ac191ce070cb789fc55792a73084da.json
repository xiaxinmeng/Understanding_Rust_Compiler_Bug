{"sha": "bec6320858ac191ce070cb789fc55792a73084da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjNjMyMDg1OGFjMTkxY2UwNzBjYjc4OWZjNTU3OTJhNzMwODRkYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-09-10T11:34:09Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-09-10T11:34:09Z"}, "message": "re PR middle-end/61654 (ICE in release_function_body, at cgraph.c:1699)\n\n2014-09-10  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/61654\n\t* cgraphclones.c (duplicate_thunk_for_node): Copy arguments of the\n\tnew decl properly.  Analyze the new thunk if it is expanded.\n\ngcc/testsuite/\n\t* g++.dg/ipa/pr61654.C: New test.\n\nFrom-SVN: r215122", "tree": {"sha": "d7ee14246bd51291d717e5677748ab95847ddc12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7ee14246bd51291d717e5677748ab95847ddc12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec6320858ac191ce070cb789fc55792a73084da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec6320858ac191ce070cb789fc55792a73084da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec6320858ac191ce070cb789fc55792a73084da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec6320858ac191ce070cb789fc55792a73084da/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3955ea361ad6652af0cd456be138ec6ba5c7d68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3955ea361ad6652af0cd456be138ec6ba5c7d68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3955ea361ad6652af0cd456be138ec6ba5c7d68"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "3c919063c9fe14383752e552852100f0300f9d6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec6320858ac191ce070cb789fc55792a73084da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec6320858ac191ce070cb789fc55792a73084da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bec6320858ac191ce070cb789fc55792a73084da", "patch": "@@ -1,3 +1,9 @@\n+2014-09-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/61654\n+\t* cgraphclones.c (duplicate_thunk_for_node): Copy arguments of the\n+\tnew decl properly.  Analyze the new thunk if it is expanded.\n+\n 2014-09-10  Andreas Schwab  <schwab@suse.de>\n \n \t* coretypes.h (struct _dont_use_rtx_insn_here_, rtx_insn)"}, {"sha": "2a17de5d552538280e8073551681395ce3f581c3", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec6320858ac191ce070cb789fc55792a73084da/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec6320858ac191ce070cb789fc55792a73084da/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=bec6320858ac191ce070cb789fc55792a73084da", "patch": "@@ -334,6 +334,22 @@ duplicate_thunk_for_node (cgraph_node *thunk, cgraph_node *node)\n \t\t\t\t\t\tnode->clone.args_to_skip,\n \t\t\t\t\t\tfalse);\n     }\n+\n+  tree *link = &DECL_ARGUMENTS (new_decl);\n+  int i = 0;\n+  for (tree pd = DECL_ARGUMENTS (thunk->decl); pd; pd = DECL_CHAIN (pd), i++)\n+    {\n+      if (!node->clone.args_to_skip\n+\t  || !bitmap_bit_p (node->clone.args_to_skip, i))\n+\t{\n+\t  tree nd = copy_node (pd);\n+\t  DECL_CONTEXT (nd) = new_decl;\n+\t  *link = nd;\n+\t  link = &DECL_CHAIN (nd);\n+\t}\n+    }\n+  *link = NULL_TREE;\n+\n   gcc_checking_assert (!DECL_STRUCT_FUNCTION (new_decl));\n   gcc_checking_assert (!DECL_INITIAL (new_decl));\n   gcc_checking_assert (!DECL_RESULT (new_decl));\n@@ -357,6 +373,11 @@ duplicate_thunk_for_node (cgraph_node *thunk, cgraph_node *node)\n   symtab->call_edge_duplication_hooks (thunk->callees, e);\n   if (!new_thunk->expand_thunk (false, false))\n     new_thunk->analyzed = true;\n+  else\n+    {\n+      new_thunk->thunk.thunk_p = false;\n+      new_thunk->analyze ();\n+    }\n \n   symtab->call_cgraph_duplication_hooks (thunk, new_thunk);\n   return new_thunk;"}, {"sha": "e4fc660c1a79aea51b2e181e59fda10db7cc3277", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec6320858ac191ce070cb789fc55792a73084da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec6320858ac191ce070cb789fc55792a73084da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bec6320858ac191ce070cb789fc55792a73084da", "patch": "@@ -1,3 +1,8 @@\n+2014-09-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/61654\n+\t* g++.dg/ipa/pr61654.C: New test.\n+\n 2014-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/ubsan/attrib-3.c: New test."}, {"sha": "d07e4586bdbac95b4aac4b012825df68ddb49c0c", "filename": "gcc/testsuite/g++.dg/ipa/pr61654.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec6320858ac191ce070cb789fc55792a73084da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61654.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec6320858ac191ce070cb789fc55792a73084da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61654.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61654.C?ref=bec6320858ac191ce070cb789fc55792a73084da", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+/* The bug only presented itself on a 32 bit i386 but in theory it might also\n+   pop up elsewhere and we do not want to put -m32 options to testcase\n+   options.  */\n+\n+struct A\n+{\n+  virtual int a (int, int = 0) = 0;\n+  void b ();\n+  void c ();\n+  int d;\n+};\n+\n+struct B : virtual A\n+{\n+  int a (int, int);\n+  int e;\n+};\n+\n+int f;\n+\n+void\n+A::b ()\n+{\n+  a (0);\n+}\n+\n+void\n+A::c ()\n+{\n+  a (f);\n+}\n+\n+int\n+B::a (int, int)\n+{\n+  return e;\n+}"}]}