{"sha": "a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1YzFiMDc3ZTMyZTRiNTUyZGQxZDBmMjM4NWEzODg1ZmNhYmY0Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-12-13T09:05:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:05:18Z"}, "message": "[Ada] Clear confusion about subcomponents of atomic object\n\n2019-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.ads (Is_Atomic_Object): Mention relevant RM clauses.\n\t* sem_util.adb (Is_Atomic_Object): For an indexed component,\n\tonly look at the Has_Atomic_Components aspect of the prefix and\n\tdo not recurse on it; for a selected component, do not look at\n\tthe prefix.\n\t(Is_Atomic_Or_VFA_Object): Minor tweak.\n\nFrom-SVN: r279363", "tree": {"sha": "8a550a5392f4e8c6fb2f7fcfec0752ae8a26f473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a550a5392f4e8c6fb2f7fcfec0752ae8a26f473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/comments", "author": null, "committer": null, "parents": [{"sha": "309ff6fb2332471dbe0e5ee692ea88b0a7dc1c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/309ff6fb2332471dbe0e5ee692ea88b0a7dc1c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/309ff6fb2332471dbe0e5ee692ea88b0a7dc1c94"}], "stats": {"total": 63, "additions": 26, "deletions": 37}, "files": [{"sha": "a1f971ab748f45f6c4fee5b71aa80ab880e02ae5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "patch": "@@ -1,3 +1,12 @@\n+2019-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_util.ads (Is_Atomic_Object): Mention relevant RM clauses.\n+\t* sem_util.adb (Is_Atomic_Object): For an indexed component,\n+\tonly look at the Has_Atomic_Components aspect of the prefix and\n+\tdo not recurse on it; for a selected component, do not look at\n+\tthe prefix.\n+\t(Is_Atomic_Or_VFA_Object): Minor tweak.\n+\n 2019-12-13  Arnaud Charlet  <charlet@adacore.com>\n \n \t* libgnat/a-calfor.ads, libgnat/a-calfor.adb (Split_Duration):"}, {"sha": "30a227307fe5b8a042caa71223367ce78006b7d5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 36, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "patch": "@@ -13724,54 +13724,33 @@ package body Sem_Util is\n    ----------------------\n \n    function Is_Atomic_Object (N : Node_Id) return Boolean is\n-      function Is_Atomic_Entity (Id : Entity_Id) return Boolean;\n-      pragma Inline (Is_Atomic_Entity);\n-      --  Determine whether arbitrary entity Id is either atomic or has atomic\n+      function Prefix_Has_Atomic_Components (Pref : Node_Id) return Boolean;\n+      --  Determine whether prefix Pref of an indexed component has atomic\n       --  components.\n \n-      function Is_Atomic_Prefix (Pref : Node_Id) return Boolean;\n-      --  Determine whether prefix Pref of an indexed or selected component is\n-      --  an atomic object.\n-\n-      ----------------------\n-      -- Is_Atomic_Entity --\n-      ----------------------\n-\n-      function Is_Atomic_Entity (Id : Entity_Id) return Boolean is\n-      begin\n-         return Is_Atomic (Id) or else Has_Atomic_Components (Id);\n-      end Is_Atomic_Entity;\n-\n-      ----------------------\n-      -- Is_Atomic_Prefix --\n-      ----------------------\n+      ---------------------------------\n+      -- Prefix_Has_Atomic_Components --\n+      ---------------------------------\n \n-      function Is_Atomic_Prefix (Pref : Node_Id) return Boolean is\n+      function Prefix_Has_Atomic_Components (Pref : Node_Id) return Boolean is\n          Typ : constant Entity_Id := Etype (Pref);\n \n       begin\n          if Is_Access_Type (Typ) then\n             return Has_Atomic_Components (Designated_Type (Typ));\n \n-         elsif Is_Atomic_Entity (Typ) then\n+         elsif Has_Atomic_Components (Typ) then\n             return True;\n \n          elsif Is_Entity_Name (Pref)\n-           and then Is_Atomic_Entity (Entity (Pref))\n+           and then Has_Atomic_Components (Entity (Pref))\n          then\n             return True;\n \n-         elsif Nkind (Pref) = N_Indexed_Component then\n-            return Is_Atomic_Prefix (Prefix (Pref));\n-\n-         elsif Nkind (Pref) = N_Selected_Component then\n-            return\n-              Is_Atomic_Prefix (Prefix (Pref))\n-                or else Is_Atomic (Entity (Selector_Name (Pref)));\n+         else\n+            return False;\n          end if;\n-\n-         return False;\n-      end Is_Atomic_Prefix;\n+      end Prefix_Has_Atomic_Components;\n \n    --  Start of processing for Is_Atomic_Object\n \n@@ -13780,12 +13759,13 @@ package body Sem_Util is\n          return Is_Atomic_Object_Entity (Entity (N));\n \n       elsif Nkind (N) = N_Indexed_Component then\n-         return Is_Atomic (Etype (N)) or else Is_Atomic_Prefix (Prefix (N));\n+         return\n+           Is_Atomic (Etype (N))\n+             or else Prefix_Has_Atomic_Components (Prefix (N));\n \n       elsif Nkind (N) = N_Selected_Component then\n          return\n            Is_Atomic (Etype (N))\n-             or else Is_Atomic_Prefix (Prefix (N))\n              or else Is_Atomic (Entity (Selector_Name (N)));\n       end if;\n \n@@ -13810,8 +13790,8 @@ package body Sem_Util is\n    function Is_Atomic_Or_VFA_Object (N : Node_Id) return Boolean is\n    begin\n       return Is_Atomic_Object (N)\n-        or else (Is_Object_Reference (N)\n-                   and then Is_Entity_Name (N)\n+        or else (Is_Entity_Name (N)\n+                   and then Is_Object (Entity (N))\n                    and then (Is_Volatile_Full_Access (Entity (N))\n                                 or else\n                              Is_Volatile_Full_Access (Etype (Entity (N)))));"}, {"sha": "c354d7e9072291c5a5dd46b937bd23db30a7ed35", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35c1b077e32e4b552dd1d0f2385a3885fcabf4b/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=a35c1b077e32e4b552dd1d0f2385a3885fcabf4b", "patch": "@@ -1531,7 +1531,7 @@ package Sem_Util is\n \n    function Is_Atomic_Object (N : Node_Id) return Boolean;\n    --  Determine whether arbitrary node N denotes a reference to an atomic\n-   --  object as per Ada RM C.6(12).\n+   --  object as per Ada RM C.6(7) and the crucial remark in C.6(8).\n \n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n "}]}