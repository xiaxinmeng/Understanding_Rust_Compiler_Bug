{"sha": "7386e3ee260414735222ea6559f3bb94ecd011f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4NmUzZWUyNjA0MTQ3MzUyMjJlYTY1NTlmM2JiOTRlY2QwMTFmOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-07-16T21:38:15Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-07-16T21:38:15Z"}, "message": "cgraph.h (varpool_empty_needed_queue): Declare.\n\n\n\t* cgraph.h (varpool_empty_needed_queue): Declare.\n\t* cgraphunit.c (output_in_order): Mark all variables as needed;\n\tempty the queue.\n\t* varpool.c (varpool_assemble_node): Update debug queue.\n\t(varpool_assemble_pending_decls): Don't do it here.\n\t(varpool_empty_needed_queue):  New function.\n\nFrom-SVN: r137903", "tree": {"sha": "e06ba8171841b599b4229f871ff4b5a27a61ccb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e06ba8171841b599b4229f871ff4b5a27a61ccb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7386e3ee260414735222ea6559f3bb94ecd011f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7386e3ee260414735222ea6559f3bb94ecd011f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7386e3ee260414735222ea6559f3bb94ecd011f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7386e3ee260414735222ea6559f3bb94ecd011f9/comments", "author": null, "committer": null, "parents": [{"sha": "de498dd486218343a3db23354de14e6da81ada81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de498dd486218343a3db23354de14e6da81ada81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de498dd486218343a3db23354de14e6da81ada81"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "322e47d8399307a558bbe729c7c5fcac843dba6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7386e3ee260414735222ea6559f3bb94ecd011f9", "patch": "@@ -1,3 +1,12 @@\n+2008-07-16  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.h (varpool_empty_needed_queue): Declare.\n+\t* cgraphunit.c (output_in_order): Mark all variables as needed;\n+\tempty the queue.\n+\t* varpool.c (varpool_assemble_node): Update debug queue.\n+\t(varpool_assemble_pending_decls): Don't do it here.\n+\t(varpool_empty_needed_queue):  New function.\n+\n 2008-07-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* recog.c (peephole2_optimize): Fix formatting."}, {"sha": "b817f87f7f0abe7a142cfb6be932679a573eadde", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=7386e3ee260414735222ea6559f3bb94ecd011f9", "patch": "@@ -401,6 +401,7 @@ bool varpool_assemble_decl (struct varpool_node *node);\n bool varpool_analyze_pending_decls (void);\n void varpool_output_debug_info (void);\n void varpool_remove_unreferenced_decls (void);\n+void varpool_empty_needed_queue (void);\n \n /* Walk all reachable static variables.  */\n #define FOR_EACH_STATIC_VARIABLE(node) \\"}, {"sha": "5994ad12a03c003918138160ddee8806181653a8", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=7386e3ee260414735222ea6559f3bb94ecd011f9", "patch": "@@ -1291,6 +1291,16 @@ cgraph_output_in_order (void)\n       nodes[i].u.a = pa;\n     }\n \n+  /* In toplevel reorder mode we output all statics; mark them as needed.  */\n+  for (i = 0; i < max; ++i)\n+    {\n+      if (nodes[i].kind == ORDER_VAR)\n+        {\n+\t  varpool_mark_needed_node (nodes[i].u.v);\n+\t}\n+    }\n+  varpool_empty_needed_queue ();\n+\n   for (i = 0; i < max; ++i)\n     {\n       switch (nodes[i].kind)"}, {"sha": "c2410f664f509396ba7f508eecd11cc05e073930", "filename": "gcc/varpool.c", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7386e3ee260414735222ea6559f3bb94ecd011f9/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=7386e3ee260414735222ea6559f3bb94ecd011f9", "patch": "@@ -357,7 +357,13 @@ varpool_assemble_decl (struct varpool_node *node)\n       && (TREE_CODE (decl) != VAR_DECL || !DECL_HAS_VALUE_EXPR_P (decl)))\n     {\n       assemble_variable (decl, 0, 1, 0);\n-      return TREE_ASM_WRITTEN (decl);\n+      if (TREE_ASM_WRITTEN (decl))\n+\t{\n+\t  node->next_needed = varpool_assembled_nodes_queue;\n+\t  varpool_assembled_nodes_queue = node;\n+\t  node->finalized = 1;\n+\t  return true;\n+\t}\n     }\n \n   return false;\n@@ -423,12 +429,7 @@ varpool_assemble_pending_decls (void)\n \n       varpool_nodes_queue = varpool_nodes_queue->next_needed;\n       if (varpool_assemble_decl (node))\n-\t{\n-\t  changed = true;\n-\t  node->next_needed = varpool_assembled_nodes_queue;\n-\t  varpool_assembled_nodes_queue = node;\n-\t  node->finalized = 1;\n-\t}\n+\tchanged = true;\n       else\n         node->next_needed = NULL;\n     }\n@@ -438,6 +439,26 @@ varpool_assemble_pending_decls (void)\n   return changed;\n }\n \n+/* Remove all elements from the queue so we can re-use it for debug output.  */\n+void\n+varpool_empty_needed_queue (void)\n+{\n+  /* EH might mark decls as needed during expansion.  This should be safe since\n+     we don't create references to new function, but it should not be used\n+     elsewhere.  */\n+  varpool_analyze_pending_decls ();\n+\n+  while (varpool_nodes_queue)\n+    {\n+      struct varpool_node *node = varpool_nodes_queue;\n+      varpool_nodes_queue = varpool_nodes_queue->next_needed;\n+      node->next_needed = NULL;\n+    }\n+  /* varpool_nodes_queue is now empty, clear the pointer to the last element\n+     in the queue.  */\n+  varpool_last_needed_node = NULL;\n+}\n+\n /* Output all variables enqueued to be assembled.  */\n void\n varpool_output_debug_info (void)"}]}