{"sha": "b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAwZTZlNzU4YWI5YmExY2NjMmI2YzMyZjczNTAxM2RlMzcwOTJhNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-08-22T21:53:59Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-08-22T21:53:59Z"}, "message": "re PR c++/77321 (crash in warn_for_memset)\n\n\tPR c++/77321\n\t* c-common.c (warn_for_memset): Check type for null.\n\n\t* g++.dg/cpp1y/pr77321.C: New test.\n\nFrom-SVN: r239676", "tree": {"sha": "b58bd9ccb553baa7fdeab15929228481b247c105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b58bd9ccb553baa7fdeab15929228481b247c105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb748b89dfae944fe6e075f1b5d1c3d1501c0948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb748b89dfae944fe6e075f1b5d1c3d1501c0948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb748b89dfae944fe6e075f1b5d1c3d1501c0948"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "fe98090ba02507e7d5101016d2bc2ea4997adeb2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "patch": "@@ -1,3 +1,8 @@\n+2016-08-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/77321\n+\t* c-common.c (warn_for_memset): Check type for null.\n+\n 2016-08-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-family/c-cppbuiltin.c (c_cpp_builtins): Check _FloatN and"}, {"sha": "3feb910f09fa966981a772861b8bc7e98bc836ea", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "patch": "@@ -11991,7 +11991,7 @@ warn_for_memset (location_t loc, tree arg0, tree arg2,\n       if (TREE_CODE (arg0) == ADDR_EXPR)\n \targ0 = TREE_OPERAND (arg0, 0);\n       tree type = TREE_TYPE (arg0);\n-      if (TREE_CODE (type) == ARRAY_TYPE)\n+      if (type != NULL_TREE && TREE_CODE (type) == ARRAY_TYPE)\n \t{\n \t  tree elt_type = TREE_TYPE (type);\n \t  tree domain = TYPE_DOMAIN (type);"}, {"sha": "f25acf494d69bd7cb862536c2215cf86023650a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "patch": "@@ -1,3 +1,8 @@\n+2016-08-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/77321\n+\t* g++.dg/cpp1y/pr77321.C: New test.\n+\n 2016-08-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/60774"}, {"sha": "b25f492dc4f9402d815c2fe4bef7f9ceedc8a723", "filename": "gcc/testsuite/g++.dg/cpp1y/pr77321.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr77321.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00e6e758ab9ba1ccc2b6c32f735013de37092a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr77321.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr77321.C?ref=b00e6e758ab9ba1ccc2b6c32f735013de37092a4", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/77321\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-Wall\" }\n+\n+extern \"C\" void *memset (void *, int, __SIZE_TYPE__);\n+extern \"C\" void *malloc(__SIZE_TYPE__);\n+\n+struct S {\n+    char *a;\n+};\n+\n+template <typename T>\n+void Test(T & Obj) {\n+    auto && a(Obj.a);\n+    a = (char*)::malloc(1024 * 1024);\n+    ::memset(a + 28, 'X', 6);\n+}\n+\n+int main()\n+{\n+  S d;\n+  Test(d);\n+  return 0;\n+}"}]}