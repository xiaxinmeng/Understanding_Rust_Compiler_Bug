{"sha": "7f4028ae9bbbd35bff34738d5e2f9b6810242ba7", "node_id": "C_kwDOANBUbNoAKDdmNDAyOGFlOWJiYmQzNWJmZjM0NzM4ZDVlMmY5YjY4MTAyNDJiYTc", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-04T12:58:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-05T10:55:32Z"}, "message": "Maintain LC SSA when doing SVE vectorization\n\nThe final loop IV use after the loop has that not in LC SSA\n(and inserts not simplified _2 = _3 - 0 stmts).  In particular\nsince it splits the exit edge when there's a virtual PHI in the\ndestination it breaks virtual LC SSA form (but likely also\nnon-virtual).\n\nThe following properly inserts LC PHIs instead.\n\n2022-07-04  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop-manip.cc (vect_set_loop_condition_normal):\n\tMaintain LC SSA.", "tree": {"sha": "e78e8064e82f007e6c4ee01a7b6ff34856f6644b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e78e8064e82f007e6c4ee01a7b6ff34856f6644b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f4028ae9bbbd35bff34738d5e2f9b6810242ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f4028ae9bbbd35bff34738d5e2f9b6810242ba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f4028ae9bbbd35bff34738d5e2f9b6810242ba7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f4028ae9bbbd35bff34738d5e2f9b6810242ba7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "510ac273a785361f7c8f24e4815bfb477a6a2e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510ac273a785361f7c8f24e4815bfb477a6a2e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510ac273a785361f7c8f24e4815bfb477a6a2e07"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "d7410d7b4bde1351f7a0795a386dd8c0cf5cdddb", "filename": "gcc/tree-vect-loop-manip.cc", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f4028ae9bbbd35bff34738d5e2f9b6810242ba7/gcc%2Ftree-vect-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f4028ae9bbbd35bff34738d5e2f9b6810242ba7/gcc%2Ftree-vect-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.cc?ref=7f4028ae9bbbd35bff34738d5e2f9b6810242ba7", "patch": "@@ -920,9 +920,22 @@ vect_set_loop_condition_normal (class loop *loop, tree niters, tree step,\n \n   if (final_iv)\n     {\n-      gassign *assign = gimple_build_assign (final_iv, MINUS_EXPR,\n-\t\t\t\t\t     indx_after_incr, init);\n-      gsi_insert_on_edge_immediate (single_exit (loop), assign);\n+      gassign *assign;\n+      edge exit = single_exit (loop);\n+      gcc_assert (single_pred_p (exit->dest));\n+      tree phi_dest\n+\t= integer_zerop (init) ? final_iv : copy_ssa_name (indx_after_incr);\n+      /* Make sure to maintain LC SSA form here and elide the subtraction\n+\t if the value is zero.  */\n+      gphi *phi = create_phi_node (phi_dest, exit->dest);\n+      add_phi_arg (phi, indx_after_incr, exit, UNKNOWN_LOCATION);\n+      if (!integer_zerop (init))\n+\t{\n+\t  assign = gimple_build_assign (final_iv, MINUS_EXPR,\n+\t\t\t\t\tphi_dest, init);\n+\t  gimple_stmt_iterator gsi = gsi_after_labels (exit->dest);\n+\t  gsi_insert_before (&gsi, assign, GSI_SAME_STMT);\n+\t}\n     }\n \n   return cond_stmt;"}]}