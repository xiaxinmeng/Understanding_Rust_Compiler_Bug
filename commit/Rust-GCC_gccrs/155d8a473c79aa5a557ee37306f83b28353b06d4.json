{"sha": "155d8a473c79aa5a557ee37306f83b28353b06d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1ZDhhNDczYzc5YWE1YTU1N2VlMzczMDZmODNiMjgzNTNiMDZkNA==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2000-04-08T04:33:28Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2000-04-08T04:33:28Z"}, "message": "i386.md (ashrsi3, [...]): Fix typo.\n\n\t* i386.md (ashrsi3, ashrhi3, ashrqi3): Fix typo.\n\n\t* i386.md (floathisf2, floathidf2, floathixf2): New patterns.\n\t* i386.c (print_operand): Use the proper suffix for a 387 HImode\n\toperand.  Abort if a 387 operand has an unsupported size.\n\nFrom-SVN: r33018", "tree": {"sha": "388cfb9a421393c5148dad45374df036b7a3b0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/388cfb9a421393c5148dad45374df036b7a3b0f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/155d8a473c79aa5a557ee37306f83b28353b06d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155d8a473c79aa5a557ee37306f83b28353b06d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155d8a473c79aa5a557ee37306f83b28353b06d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155d8a473c79aa5a557ee37306f83b28353b06d4/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ddf4d7b814ee1138262464b2e9fc1a7905a68ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ddf4d7b814ee1138262464b2e9fc1a7905a68ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ddf4d7b814ee1138262464b2e9fc1a7905a68ac"}], "stats": {"total": 65, "additions": 57, "deletions": 8}, "files": [{"sha": "3ed3fff1a052e52e7c39f82fb12bf745286d1be6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155d8a473c79aa5a557ee37306f83b28353b06d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155d8a473c79aa5a557ee37306f83b28353b06d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=155d8a473c79aa5a557ee37306f83b28353b06d4", "patch": "@@ -1,3 +1,11 @@\n+Sat Apr  8 00:21:51 EDT 2000  John Wehle  (john@feith.com)\n+\n+\t* i386.md (ashrsi3, ashrhi3, ashrqi3): Fix typo.\n+\n+\t* i386.md (floathisf2, floathidf2, floathixf2): New patterns.\n+\t* i386.c (print_operand): Use the proper suffix for a 387 HImode\n+\toperand.  Abort if a 387 operand has an unsupported size.\n+\n 2000-04-08  Neil Booth  <NeilB@earthling.net>\n \n \t* cppexp.c (parse_charconst): Null does not end character"}, {"sha": "9eb13ea355965148823d314e1270754e3ec8713c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155d8a473c79aa5a557ee37306f83b28353b06d4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155d8a473c79aa5a557ee37306f83b28353b06d4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=155d8a473c79aa5a557ee37306f83b28353b06d4", "patch": "@@ -3109,12 +3109,10 @@ print_operand (file, x, code)\n \t  /* this is the size of op from size of operand */\n \t  switch (GET_MODE_SIZE (GET_MODE (x)))\n \t    {\n-\t    case 1:\n-\t      putc ('b', file);\n-\t      return;\n-\n \t    case 2:\n-\t      putc ('w', file);\n+#ifdef HAVE_GAS_FILDS_FISTS\n+\t      putc ('s', file);\n+#endif\n \t      return;\n \n \t    case 4:\n@@ -3144,6 +3142,9 @@ print_operand (file, x, code)\n \t      else\n \t        putc ('l', file);\n \t      return;\n+\n+\t    default:\n+\t      abort ();\n \t    }\n \n \tcase 'b':"}, {"sha": "dc24d5f6d4cac718ec942c06f919d6f431ad740e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155d8a473c79aa5a557ee37306f83b28353b06d4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155d8a473c79aa5a557ee37306f83b28353b06d4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=155d8a473c79aa5a557ee37306f83b28353b06d4", "patch": "@@ -3135,6 +3135,16 @@\n ;; Even though we only accept memory inputs, the backend _really_\n ;; wants to be able to do this between registers.\n \n+(define_insn \"floathisf2\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+\t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n+  \"TARGET_80387\"\n+  \"@\n+   fild%z1\\\\t%1\n+   #\"\n+  [(set_attr \"type\" \"fmov,multi\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n (define_insn \"floatsisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n \t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r\")))]\n@@ -3155,6 +3165,16 @@\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n+(define_insn \"floathidf2\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n+  \"TARGET_80387\"\n+  \"@\n+   fild%z1\\\\t%1\n+   #\"\n+  [(set_attr \"type\" \"fmov,multi\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n (define_insn \"floatsidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r\")))]\n@@ -3175,6 +3195,16 @@\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n+(define_insn \"floathixf2\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n+\t(float:XF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n+  \"TARGET_80387\"\n+  \"@\n+   fild%z1\\\\t%1\n+   #\"\n+  [(set_attr \"type\" \"fmov,multi\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n (define_insn \"floatsixf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(float:XF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r\")))]\n@@ -3196,6 +3226,16 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n ;; %%% Kill these when reload knows how to do it.\n+(define_split\n+  [(set (match_operand 0 \"register_operand\" \"\")\n+\t(float (match_operand:HI 1 \"register_operand\" \"\")))]\n+  \"reload_completed && FLOAT_MODE_P (GET_MODE (operands[0]))\"\n+  [(set (mem:HI (pre_dec:SI (reg:SI 7))) (match_dup 1))\n+   (set (match_dup 0) (match_dup 2))\n+   (set (reg:SI 7) (plus:SI (reg:SI 7) (const_int 2)))]\n+  \"operands[2] = gen_rtx_FLOAT (GET_MODE (operands[0]),\n+\t\t\t       \tgen_rtx_MEM (HImode, stack_pointer_rtx));\")\n+\n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(float (match_operand:SI 1 \"register_operand\" \"\")))]\n@@ -6052,7 +6092,7 @@\n \n (define_expand \"ashrsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n    (clobber (reg:CC 17))]\n   \"\"\n@@ -6088,7 +6128,7 @@\n \n (define_expand \"ashrhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n-\t(lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t(ashiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_HIMODE_MATH\"\n@@ -6124,7 +6164,7 @@\n \n (define_expand \"ashrqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n-\t(lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t(ashiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_QIMODE_MATH\""}]}