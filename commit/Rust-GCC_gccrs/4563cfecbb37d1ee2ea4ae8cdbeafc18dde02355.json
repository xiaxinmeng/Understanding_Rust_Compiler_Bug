{"sha": "4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU2M2NmZWNiYjM3ZDFlZTJlYTRhZThjZGJlYWZjMThkZGUwMjM1NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-07-22T17:02:26Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-07-22T17:02:26Z"}, "message": "re PR fortran/57762 (Memory leak in gfortran.dg/class_array_7.f03 after revision 200084)\n\n2013-07-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57762\n        * gfortran.dg/class_array_7.f03: Fix memory leak.\n\nFrom-SVN: r201137", "tree": {"sha": "76c4761ee35fcb4b24615c58993d50780cc5a221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76c4761ee35fcb4b24615c58993d50780cc5a221"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae4d1777954917faf876f15c4c6ea6fc6d2f35cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4d1777954917faf876f15c4c6ea6fc6d2f35cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4d1777954917faf876f15c4c6ea6fc6d2f35cc"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "5b167b2a891260e1b285db2e54c072566165bed2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355", "patch": "@@ -1,3 +1,8 @@\n+2013-07-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57762\n+\t* gfortran.dg/class_array_7.f03: Fix memory leak.\n+\n 2013-07-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/52816"}, {"sha": "5c9673ff72bf6135b2362dd626ca3e65d18c7359", "filename": "gcc/testsuite/gfortran.dg/class_array_7.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_7.f03?ref=4563cfecbb37d1ee2ea4ae8cdbeafc18dde02355", "patch": "@@ -54,4 +54,5 @@ program main\n   if (trim (print_type (\"a\", a)) .ne. \"a is extended_type\") call abort\n   call reallocate (a)\n   if (trim (print_type (\"a\", a)) .ne. \"a is base_type\") call abort\n+  deallocate (a)\n end program main"}]}