{"sha": "672fd7e23872348476fea0af028ae867d7160f37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyZmQ3ZTIzODcyMzQ4NDc2ZmVhMGFmMDI4YWU4NjdkNzE2MGYzNw==", "commit": {"author": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-23T16:48:35Z"}, "committer": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-23T16:48:35Z"}, "message": "added bytecode dependencies\n\nFrom-SVN: r5432", "tree": {"sha": "e32618786545c050ecb445ca823b4f836fa3f149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e32618786545c050ecb445ca823b4f836fa3f149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/672fd7e23872348476fea0af028ae867d7160f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/672fd7e23872348476fea0af028ae867d7160f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/672fd7e23872348476fea0af028ae867d7160f37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/672fd7e23872348476fea0af028ae867d7160f37/comments", "author": null, "committer": null, "parents": [{"sha": "c059f055c22a7d9638dbed317e30368302aad020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c059f055c22a7d9638dbed317e30368302aad020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c059f055c22a7d9638dbed317e30368302aad020"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "1a8c425687eccbfcd3113151537bebe4a01fabbd", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/672fd7e23872348476fea0af028ae867d7160f37/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/672fd7e23872348476fea0af028ae867d7160f37/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=672fd7e23872348476fea0af028ae867d7160f37", "patch": "@@ -920,15 +920,18 @@ rtl.o : rtl.c $(CONFIG_H) $(RTL_H)\n print-rtl.o : print-rtl.c $(CONFIG_H) $(RTL_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) $(RTL_H)\n \n+toplev.o: bytecode.h bc-emit.h\n varasm.o : varasm.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h function.h \\\n-   defaults.h insn-codes.h expr.h hard-reg-set.h regs.h xcoffout.h\n+   defaults.h insn-codes.h expr.h hard-reg-set.h regs.h xcoffout.h bytecode.h\n function.o : function.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-flags.h insn-codes.h expr.h regs.h hard-reg-set.h insn-config.h \\\n-   recog.h output.h\n+   recog.h output.h bytecode.h\n stmt.o : stmt.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-flags.h insn-config.h insn-codes.h hard-reg-set.h expr.h loop.h recog.h\n+   bytecode.h bc-typecd.h bc-opcode.h bc-optab.h bc-emit.h\n expr.o : expr.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n-   insn-flags.h insn-codes.h expr.h insn-config.h recog.h output.h typeclass.h\n+   insn-flags.h insn-codes.h expr.h insn-config.h recog.h output.h typeclass.h \\\n+   bytecode.h bc-opcode.h bc-typecd.h bc-optab.h bc-emit.h modemap.def\n calls.o : calls.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h expr.h insn-codes.h \\\n    insn-flags.h gvarargs.h \n expmed.o : expmed.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h  \\\n@@ -945,12 +948,14 @@ dwarfout.o : dwarfout.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf.h flags.h \\\n    insn-config.h reload.h output.h defaults.h\n xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoffout.h flags.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) flags.h gvarargs.h function.h  \\\n-   regs.h insn-config.h insn-codes.h real.h expr.h\n+   regs.h insn-config.h insn-codes.h real.h expr.h bytecode.h bc-opcode.h \\\n+   bc-typecd.h bc-optab.h bc-emit.h bc-opname.h\n real.o : real.c $(CONFIG_H) $(TREE_H)\n getpwd.o : getpwd.c $(CONFIG_H)\n \n integrate.o : integrate.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h integrate.h \\\n-   insn-flags.h insn-config.h insn-codes.h expr.h real.h function.h\n+   insn-flags.h insn-config.h insn-codes.h expr.h real.h function.h \\\n+   bytecode.h\n \n jump.o : jump.c $(CONFIG_H) $(RTL_H) flags.h hard-reg-set.h regs.h \\\n    insn-config.h insn-flags.h insn-codes.h expr.h real.h\n@@ -968,7 +973,7 @@ combine.o : combine.c $(CONFIG_H) $(RTL_H) gvarargs.h flags.h  \\\n    insn-config.h insn-flags.h insn-codes.h insn-attr.h regs.h expr.h \\\n    basic-block.h recog.h real.h hard-reg-set.h\n regclass.o : regclass.c $(CONFIG_H) $(RTL_H) hard-reg-set.h flags.h \\\n-   basic-block.h regs.h insn-config.h recog.h reload.h real.h\n+   basic-block.h regs.h insn-config.h recog.h reload.h real.h bytecode.h\n local-alloc.o : local-alloc.c $(CONFIG_H) $(RTL_H) flags.h basic-block.h \\\n    regs.h hard-reg-set.h insn-config.h recog.h output.h\n global.o : global.c $(CONFIG_H) $(RTL_H) flags.h  \\\n@@ -1292,9 +1297,12 @@ bi-parser.o:\t$(srcdir)/bi-parser.c $(srcdir)/bi-defs.h\n \n bi-lexer.c:\t$(srcdir)/bi-lexer.l $(srcdir)/bi-parser.h\n \n-bi-lexer.o:\tbi-lexer.c bi-parser.h\n+bi-lexer.o:\t$(srcdir)/bi-lexer.c $(srcdir)/bi-parser.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/bi-lexer.c\n \n+bi-arity.o bi-opcode.o bi-opname.o bi-parser.o bi-reverse.o: $(srcdir)/bi-defs.h\n+\n+\n bc-arity.h:\t$(srcdir)/bytecode.def bi-arity\n \t-rm -f bc-arity.h\n \t./bi-arity < $(srcdir)/bytecode.def > bc-arity.h"}]}