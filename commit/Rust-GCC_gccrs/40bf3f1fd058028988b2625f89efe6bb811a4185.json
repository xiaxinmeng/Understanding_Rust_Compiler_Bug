{"sha": "40bf3f1fd058028988b2625f89efe6bb811a4185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBiZjNmMWZkMDU4MDI4OTg4YjI2MjVmODllZmU2YmI4MTFhNDE4NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-27T02:34:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-27T02:37:01Z"}, "message": "c++: Testsuite adjustments for PR 90992.\n\nIt occurred to me that the NotNoexcept class is irrelevant to the issue I\nwas fixing, so let's remove it.", "tree": {"sha": "c948f9a57a65b2cec52042a4ca1129257c694906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c948f9a57a65b2cec52042a4ca1129257c694906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40bf3f1fd058028988b2625f89efe6bb811a4185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bf3f1fd058028988b2625f89efe6bb811a4185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40bf3f1fd058028988b2625f89efe6bb811a4185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bf3f1fd058028988b2625f89efe6bb811a4185/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5035cd662459b09605370f2ba41b2238119c69b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5035cd662459b09605370f2ba41b2238119c69b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5035cd662459b09605370f2ba41b2238119c69b1"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "b25e7327947c65896ecf381792cfef52752dea94", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept03.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept03.C?ref=40bf3f1fd058028988b2625f89efe6bb811a4185", "patch": "@@ -35,7 +35,7 @@ void f2(T a) noexcept (noexcept (f (a)))\n   f(a);\n }\n \n-struct A { A() { } };\t\t// { dg-warning \"does not throw\" }\n+struct A { A() { } };\t\t// { dg-message \"does not throw\" }\n \n int main()\n {"}, {"sha": "bda7269d927ea0471331bfa837d06e5ee30907f8", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept09.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept09.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept09.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept09.C?ref=40bf3f1fd058028988b2625f89efe6bb811a4185", "patch": "@@ -3,7 +3,7 @@\n // { dg-options \"-Wnoexcept\" }\n \n template <class T>\n-T f (T t) { return t; }\t\t// { dg-warning \"does not throw\" }\n+T f (T t) { return t; }\t\t// { dg-message \"does not throw\" }\n \n #define SA(X) static_assert(X, #X)\n "}, {"sha": "93210dead041559b4d2cc884d82bfc78cf83d7fe", "filename": "gcc/testsuite/g++.dg/warn/Wnoexcept1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnoexcept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnoexcept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnoexcept1.C?ref=40bf3f1fd058028988b2625f89efe6bb811a4185", "patch": "@@ -7,15 +7,14 @@\n // We expect a warning at the declaration of construct2, since Automatic2 is\n // defined below; we don't expect one for construct1, because Automatic1 is\n // defined in the fake system header.\n-// { dg-warning \"noexcept-expression\" \"\" { target *-*-* } 26 }\n+// { dg-warning \"noexcept-expression\" \"\" { target *-*-* } 15 }\n \n class Automatic2 {\n public:\n   Automatic2(size_t bla) : Bla(bla) {}; // { dg-message \"noexcept\" }\n \n private:\n   size_t Bla;\n-  NotNoexcept Dummy;\n };\n \n union U"}, {"sha": "8843ab4237ba05f8f7c321ac3cf02cf2a3e389a4", "filename": "gcc/testsuite/g++.dg/warn/Wnoexcept1.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnoexcept1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40bf3f1fd058028988b2625f89efe6bb811a4185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnoexcept1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnoexcept1.h?ref=40bf3f1fd058028988b2625f89efe6bb811a4185", "patch": "@@ -4,17 +4,6 @@\n using size_t = decltype(sizeof(42));\n inline void * operator new (size_t, void *p) noexcept { return p; }\n \n-class NotNoexcept {\n-public:\n-  NotNoexcept() noexcept(false) {}\n-  NotNoexcept(const NotNoexcept&) noexcept(false) {}\n-  NotNoexcept(NotNoexcept &&) noexcept(false) {}\n-  ~NotNoexcept() noexcept(false) {}\n-\n-  NotNoexcept&operator=(const NotNoexcept&) noexcept(false) { return *this;}\n-  NotNoexcept&operator=(NotNoexcept &&) noexcept(false) {return *this;}\n-};\n-\n template<typename _Up, typename... _Args>\n void\n construct1(_Up* __p, _Args... __args)\n@@ -33,5 +22,4 @@ class Automatic1 {\n \n private:\n   size_t Bla;\n-  NotNoexcept Dummy;\n };"}]}