{"sha": "ac8a2fbedf59eecda6d1c049952e10946ffc4a61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM4YTJmYmVkZjU5ZWVjZGE2ZDFjMDQ5OTUyZTEwOTQ2ZmZjNGE2MQ==", "commit": {"author": {"name": "Cherry Mui", "email": "cherryyz@google.com", "date": "2021-08-04T22:24:47Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-08-05T04:24:00Z"}, "message": "compiler: make escape analysis more robust about builtin functions\n\nIn the places where we handle builtin functions, list all\nsupported ones, and fail if an unexpected one is seen. So if a\nnew builtin function is added in the future we can detect it,\ninstead of silently treating it as nonescaping.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/339992", "tree": {"sha": "ef823a4dfd8c8527048853b7f61ec572fa3f4d4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef823a4dfd8c8527048853b7f61ec572fa3f4d4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac8a2fbedf59eecda6d1c049952e10946ffc4a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8a2fbedf59eecda6d1c049952e10946ffc4a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8a2fbedf59eecda6d1c049952e10946ffc4a61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8a2fbedf59eecda6d1c049952e10946ffc4a61/comments", "author": {"login": "cherrymui", "id": 14119929, "node_id": "MDQ6VXNlcjE0MTE5OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/14119929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherrymui", "html_url": "https://github.com/cherrymui", "followers_url": "https://api.github.com/users/cherrymui/followers", "following_url": "https://api.github.com/users/cherrymui/following{/other_user}", "gists_url": "https://api.github.com/users/cherrymui/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherrymui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherrymui/subscriptions", "organizations_url": "https://api.github.com/users/cherrymui/orgs", "repos_url": "https://api.github.com/users/cherrymui/repos", "events_url": "https://api.github.com/users/cherrymui/events{/privacy}", "received_events_url": "https://api.github.com/users/cherrymui/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c16f21c7cf97ce48967e42d3b5d22ea169a9c2c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16f21c7cf97ce48967e42d3b5d22ea169a9c2c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16f21c7cf97ce48967e42d3b5d22ea169a9c2c8"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "394530c1cbc34150d89f13b5213cb606cf9dd545", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8a2fbedf59eecda6d1c049952e10946ffc4a61/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8a2fbedf59eecda6d1c049952e10946ffc4a61/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=ac8a2fbedf59eecda6d1c049952e10946ffc4a61", "patch": "@@ -1,4 +1,4 @@\n-616ee658a6238e7de53592ebda5997f6de6a00de\n+b47bcf942daa9a0c252db9b57b8f138adbfcdaa2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "c8978ac923932fd375d14ace853f4ef66ac9ea26", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8a2fbedf59eecda6d1c049952e10946ffc4a61/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8a2fbedf59eecda6d1c049952e10946ffc4a61/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=ac8a2fbedf59eecda6d1c049952e10946ffc4a61", "patch": "@@ -1608,8 +1608,33 @@ Escape_analysis_assign::expression(Expression** pexpr)\n                 }\n                 break;\n \n-              default:\n+              case Builtin_call_expression::BUILTIN_CLOSE:\n+              case Builtin_call_expression::BUILTIN_DELETE:\n+              case Builtin_call_expression::BUILTIN_PRINT:\n+              case Builtin_call_expression::BUILTIN_PRINTLN:\n+              case Builtin_call_expression::BUILTIN_LEN:\n+              case Builtin_call_expression::BUILTIN_CAP:\n+              case Builtin_call_expression::BUILTIN_COMPLEX:\n+              case Builtin_call_expression::BUILTIN_REAL:\n+              case Builtin_call_expression::BUILTIN_IMAG:\n+              case Builtin_call_expression::BUILTIN_RECOVER:\n+              case Builtin_call_expression::BUILTIN_ALIGNOF:\n+              case Builtin_call_expression::BUILTIN_OFFSETOF:\n+              case Builtin_call_expression::BUILTIN_SIZEOF:\n+                // these do not escape.\n+                break;\n+\n+              case Builtin_call_expression::BUILTIN_ADD:\n+              case Builtin_call_expression::BUILTIN_SLICE:\n+                // handled in ::assign.\n                 break;\n+\n+              case Builtin_call_expression::BUILTIN_MAKE:\n+              case Builtin_call_expression::BUILTIN_NEW:\n+                // should have been lowered to runtime calls at this point.\n+                // fallthrough\n+              default:\n+                go_unreachable();\n               }\n             break;\n           }\n@@ -2372,8 +2397,35 @@ Escape_analysis_assign::assign(Node* dst, Node* src)\n                     }\n                     break;\n \n-                  default:\n+                  case Builtin_call_expression::BUILTIN_LEN:\n+                  case Builtin_call_expression::BUILTIN_CAP:\n+                  case Builtin_call_expression::BUILTIN_COMPLEX:\n+                  case Builtin_call_expression::BUILTIN_REAL:\n+                  case Builtin_call_expression::BUILTIN_IMAG:\n+                  case Builtin_call_expression::BUILTIN_RECOVER:\n+                  case Builtin_call_expression::BUILTIN_ALIGNOF:\n+                  case Builtin_call_expression::BUILTIN_OFFSETOF:\n+                  case Builtin_call_expression::BUILTIN_SIZEOF:\n+                    // these do not escape.\n+                    break;\n+\n+                  case Builtin_call_expression::BUILTIN_COPY:\n+                    // handled in ::expression.\n                     break;\n+\n+                  case Builtin_call_expression::BUILTIN_CLOSE:\n+                  case Builtin_call_expression::BUILTIN_DELETE:\n+                  case Builtin_call_expression::BUILTIN_PRINT:\n+                  case Builtin_call_expression::BUILTIN_PRINTLN:\n+                  case Builtin_call_expression::BUILTIN_PANIC:\n+                    // these do not have result.\n+                    // fallthrough\n+                  case Builtin_call_expression::BUILTIN_MAKE:\n+                  case Builtin_call_expression::BUILTIN_NEW:\n+                    // should have been lowered to runtime calls at this point.\n+                    // fallthrough\n+                  default:\n+                    go_unreachable();\n                   }\n                 break;\n               }"}]}