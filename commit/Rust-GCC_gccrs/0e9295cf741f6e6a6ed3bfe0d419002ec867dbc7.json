{"sha": "0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5Mjk1Y2Y3NDFmNmU2YTZlZDNiZmUwZDQxOTAwMmVjODY3ZGJjNw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.stanford.edu", "date": "2000-11-03T22:24:21Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-11-03T22:24:21Z"}, "message": "builtins.c (expand_builtin_strlen): Remove unused mode argument.\n\n\t* builtins.c (expand_builtin_strlen): Remove unused mode\n\targument.\n\t* gcc.c (process_command): Remove unused variable.\n\t* fold-const.c: Include expr.h.\n\t* recog.c: Include reload.h.\n\t* Makefile.in (recog.o, fold-const.o): Update deps.\ncp:\n\t* decl.c: Include tm_p.h.\n\nFrom-SVN: r37237", "tree": {"sha": "f2b01e95a183f0360c1ccbe697b0808a2bd3d8ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2b01e95a183f0360c1ccbe697b0808a2bd3d8ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/comments", "author": null, "committer": null, "parents": [{"sha": "f2682362a5006ec91e05294e8671f9ee0b8e12a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2682362a5006ec91e05294e8671f9ee0b8e12a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2682362a5006ec91e05294e8671f9ee0b8e12a9"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "220929fa569a0dd78711ad06f1092a5887fdc475", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -1,3 +1,12 @@\n+2000-11-03  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* builtins.c (expand_builtin_strlen): Remove unused mode\n+\targument.\n+\t* gcc.c (process_command): Remove unused variable.\n+\t* fold-const.c: Include expr.h.\n+\t* recog.c: Include reload.h.\n+\t* Makefile.in (recog.o, fold-const.o): Update deps.\n+\n 2000-11-02  Geoffrey Keating  <geoffk@cygnus.com>\n \n \t* fixinc/gnu-regex.c: Change 'CYGNUS LOCAL' to 'EGCS LOCAL'."}, {"sha": "df2016dc4c04a1f8c80b811783db38b17ecba91c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -1284,7 +1284,7 @@ print-tree.o : print-tree.c $(CONFIG_H) system.h $(TREE_H) $(GGC_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) system.h $(TREE_H) flags.h \\\n    function.h $(EXPR_H) $(RTL_H) toplev.h $(GGC_H)\n fold-const.o : fold-const.c $(CONFIG_H) system.h $(TREE_H) flags.h toplev.h \\\n-   $(RTL_H) $(GGC_H)\n+   $(EXPR_H) $(RTL_H) $(GGC_H)\n diagnostic.o : diagnostic.c diagnostic.h \\\n    $(CONFIG_H) system.h $(TREE_H) $(RTL_H) tm_p.h flags.h \\\n    $(GGC_H) input.h $(INSN_ATTR_H) insn-codes.h insn-config.h toplev.h intl.h \n@@ -1440,7 +1440,7 @@ final.o : final.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h intl.h \\\n    dbxout.h $(BASIC_BLOCK_H)\n recog.o : recog.c $(CONFIG_H) system.h $(RTL_H) function.h $(BASIC_BLOCK_H) \\\n    $(REGS_H) $(RECOG_H) hard-reg-set.h flags.h insn-config.h $(INSN_ATTR_H) \\\n-   insn-flags.h insn-codes.h real.h toplev.h output.h\n+   insn-flags.h insn-codes.h real.h toplev.h output.h reload.h\n reg-stack.o : reg-stack.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) $(RECOG_H) \\\n    $(REGS_H) hard-reg-set.h flags.h insn-config.h insn-flags.h toplev.h \\\n    varray.h function.h"}, {"sha": "c058ebaca2c401057f3fb6e8dd4a7ec95c8aa8fc", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -106,8 +106,7 @@ static rtx expand_builtin_memcpy\tPARAMS ((tree));\n static rtx expand_builtin_strcpy\tPARAMS ((tree));\n static rtx expand_builtin_memset\tPARAMS ((tree));\n static rtx expand_builtin_bzero\t\tPARAMS ((tree));\n-static rtx expand_builtin_strlen\tPARAMS ((tree, rtx,\n-\t\t\t\t\t\t enum machine_mode));\n+static rtx expand_builtin_strlen\tPARAMS ((tree, rtx));\n static rtx expand_builtin_strstr\tPARAMS ((tree, rtx,\n \t\t\t\t\t\t enum machine_mode));\n static rtx expand_builtin_alloca\tPARAMS ((tree, rtx));\n@@ -1298,14 +1297,12 @@ expand_builtin_mathfn (exp, target, subtarget)\n \n /* Expand expression EXP which is a call to the strlen builtin.  Return 0\n    if we failed the caller should emit a normal call, otherwise\n-   try to get the result in TARGET, if convenient (and in mode MODE if that's\n-   convenient).  */\n+   try to get the result in TARGET, if convenient.  */\n \n static rtx\n-expand_builtin_strlen (exp, target, mode)\n+expand_builtin_strlen (exp, target)\n      tree exp;\n      rtx target;\n-     enum machine_mode mode;\n {\n   tree arglist = TREE_OPERAND (exp, 1);\n   enum machine_mode value_mode = TYPE_MODE (TREE_TYPE (exp));\n@@ -2624,7 +2621,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n       break;\n \n     case BUILT_IN_STRLEN:\n-      target = expand_builtin_strlen (exp, target, mode);\n+      target = expand_builtin_strlen (exp, target);\n       if (target)\n \treturn target;\n       break;"}, {"sha": "f180ac1db3e8878a296fe6fb2b9db6b953859ef0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -1,3 +1,7 @@\n+2000-11-03  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* decl.c: Include tm_p.h.\n+\n 2000-11-03  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* tree.c (cp_tree_equal): Use memcmp () instead of bcmp ()."}, {"sha": "d4d9bbaa80d225f473a366879c745fdf6777a464", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -43,6 +43,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"../hash.h\"\n #include \"ggc.h\"\n+#include \"tm_p.h\"\n \n extern int current_class_depth;\n "}, {"sha": "58d84ef3dd9f90336e9c7f50f22754e7850dd5c9", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -48,6 +48,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"expr.h\"\n #include \"tm_p.h\"\n #include \"toplev.h\"\n #include \"ggc.h\""}, {"sha": "30ae0b164e81509f9dd84d53d3508c93d8a87fe7", "filename": "gcc/gcc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -2871,7 +2871,6 @@ process_command (argc, argv)\n      const char *const *argv;\n {\n   register int i;\n-  unsigned int j;\n   const char *temp;\n   char *temp1;\n   const char *spec_lang = 0;"}, {"sha": "1d5a8a61a0268bb69dd83c1fca777ce06cfe6841", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=0e9295cf741f6e6a6ed3bfe0d419002ec867dbc7", "patch": "@@ -37,6 +37,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n+#include \"reload.h\"\n \n #ifndef STACK_PUSH_CODE\n #ifdef STACK_GROWS_DOWNWARD"}]}