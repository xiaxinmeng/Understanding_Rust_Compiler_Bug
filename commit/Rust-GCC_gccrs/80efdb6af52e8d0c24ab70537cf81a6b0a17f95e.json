{"sha": "80efdb6af52e8d0c24ab70537cf81a6b0a17f95e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBlZmRiNmFmNTJlOGQwYzI0YWI3MDUzN2NmODFhNmIwYTE3Zjk1ZQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2008-03-16T00:58:57Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2008-03-16T00:58:57Z"}, "message": "arm.c (arm_unwind_emit): Suppress unused unwinding annotations.\n\n2008-03-15  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.c (arm_unwind_emit): Suppress unused unwinding\n\tannotations.\n\t(arm_output_fn_unwind): Mark functions that can not be unwound.\n\nFrom-SVN: r133266", "tree": {"sha": "b5d4dd29fc14b449358799f47a76a45cbf01daf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5d4dd29fc14b449358799f47a76a45cbf01daf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e/comments", "author": null, "committer": null, "parents": [{"sha": "393ab2528439344bdad70371c8a1023474e087da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393ab2528439344bdad70371c8a1023474e087da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/393ab2528439344bdad70371c8a1023474e087da"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "bb89350e4d485794167b694d7b5b53081328dd68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80efdb6af52e8d0c24ab70537cf81a6b0a17f95e", "patch": "@@ -1,3 +1,9 @@\n+2008-03-15  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_unwind_emit): Suppress unused unwinding\n+\tannotations.\n+\t(arm_output_fn_unwind): Mark functions that can not be unwound.\n+\n 2008-03-15  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_rtx_costs_1): Add costs for ARMv6 value"}, {"sha": "43a3078278d6a9d94b3b0a621967bd512783431d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80efdb6af52e8d0c24ab70537cf81a6b0a17f95e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=80efdb6af52e8d0c24ab70537cf81a6b0a17f95e", "patch": "@@ -18633,6 +18633,11 @@ arm_unwind_emit (FILE * asm_out_file, rtx insn)\n   if (!ARM_EABI_UNWIND_TABLES)\n     return;\n \n+  if (!(flag_unwind_tables || cfun->uses_eh_lsda)\n+      && (TREE_NOTHROW (current_function_decl)\n+\t  || cfun->all_throwers_are_sibcalls))\n+    return;\n+\n   if (GET_CODE (insn) == NOTE || !RTX_FRAME_RELATED_P (insn))\n     return;\n \n@@ -18713,7 +18718,17 @@ arm_output_fn_unwind (FILE * f, bool prologue)\n   if (prologue)\n     fputs (\"\\t.fnstart\\n\", f);\n   else\n-    fputs (\"\\t.fnend\\n\", f);\n+    {\n+      /* If this function will never be unwound, then mark it as such.\n+         The came condition is used in arm_unwind_emit to suppress\n+\t the frame annotations.  */\n+      if (!(flag_unwind_tables || cfun->uses_eh_lsda)\n+\t  && (TREE_NOTHROW (current_function_decl)\n+\t      || cfun->all_throwers_are_sibcalls))\n+\tfputs(\"\\t.cantunwind\\n\", f);\n+\n+      fputs (\"\\t.fnend\\n\", f);\n+    }\n }\n \n static bool"}]}