{"sha": "9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4MjJmYzc5ZGVlY2RjM2JhZDFiY2NhMGJiMWZmZWJkZDNiNDA0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-14T19:36:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-14T19:36:58Z"}, "message": "re PR middle-end/77959 (ICE in ix86_decompose_address, at i386/i386.c:14954)\n\n\tPR middle-end/77959\n\t* expr.c (expand_expr_real_1) <case CONST_DECL>: For EXPAND_WRITE\n\treturn a MEM.\n\n\t* gfortran.dg/pr77959.f90: New test.\n\nFrom-SVN: r241182", "tree": {"sha": "36bed8b0d91b88b82bc830d5b4b61a43f841f21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36bed8b0d91b88b82bc830d5b4b61a43f841f21d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6af11d2bf41df9baf3fda28f4a270d6d4de65341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6af11d2bf41df9baf3fda28f4a270d6d4de65341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6af11d2bf41df9baf3fda28f4a270d6d4de65341"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "732ccb28f0e3155ce06ca2d240d20f6c6d9281b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "patch": "@@ -1,3 +1,9 @@\n+2016-10-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/77959\n+\t* expr.c (expand_expr_real_1) <case CONST_DECL>: For EXPAND_WRITE\n+\treturn a MEM.\n+\n 2016-10-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc-passes.def: New file."}, {"sha": "28242b2551d017ca354ada6db1fcd39521f4af6c", "filename": "gcc/expr.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "patch": "@@ -9915,6 +9915,19 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,\n       }\n \n     case CONST_DECL:\n+      if (modifier == EXPAND_WRITE)\n+\t{\n+\t  /* Writing into CONST_DECL is always invalid, but handle it\n+\t     gracefully.  */\n+\t  addr_space_t as = TYPE_ADDR_SPACE (TREE_TYPE (exp));\n+\t  machine_mode address_mode = targetm.addr_space.address_mode (as);\n+\t  op0 = expand_expr_addr_expr_1 (exp, NULL_RTX, address_mode,\n+\t\t\t\t\t EXPAND_NORMAL, as);\n+\t  op0 = memory_address_addr_space (mode, op0, as);\n+\t  temp = gen_rtx_MEM (mode, op0);\n+\t  set_mem_addr_space (temp, as);\n+\t  return temp;\n+\t}\n       return expand_expr (DECL_INITIAL (exp), target, VOIDmode, modifier);\n \n     case REAL_CST:"}, {"sha": "849c6e49de6809cec913f47190c35c7023d7cb44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "patch": "@@ -1,5 +1,8 @@\n 2016-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/77959\n+\t* gfortran.dg/pr77959.f90: New test.\n+\n \tDR 1511 - const volatile variables and ODR\n \t* g++.dg/DRs/dr1511-1.C: New test.\n \t* g++.dg/DRs/dr1511-2.C: New test."}, {"sha": "36754a0bd32320ba2909da9e6e05d668a81d60df", "filename": "gcc/testsuite/gfortran.dg/pr77959.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77959.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77959.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77959.f90?ref=9a822fc79deecdc3bad1bcca0bb1ffebdd3b404c", "patch": "@@ -0,0 +1,16 @@\n+! PR middle-end/77959\n+! { dg-do compile }\n+! { dg-options \"-O2\" }\n+\n+program pr77959\n+  interface\n+    subroutine foo(x)  ! { dg-warning \"Type mismatch in argument\" }\n+      real :: x\n+    end\n+  end interface\n+  call foo(1.0)\n+end\n+subroutine foo(x)\n+  complex :: x\n+  x = x + 1\n+end"}]}