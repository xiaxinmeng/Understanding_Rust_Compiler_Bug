{"sha": "8799637aad7dbb838f262ce23f34ddd457a7ee99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc5OTYzN2FhZDdkYmI4MzhmMjYyY2UyM2YzNGRkZDQ1N2E3ZWU5OQ==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2014-06-05T11:59:05Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-06-05T11:59:05Z"}, "message": "[AArch64] Relocate saved_varargs_size.\n\nFrom-SVN: r211270", "tree": {"sha": "4f689c635acc0843857b2a657b706d8a3d92f848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f689c635acc0843857b2a657b706d8a3d92f848"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8799637aad7dbb838f262ce23f34ddd457a7ee99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8799637aad7dbb838f262ce23f34ddd457a7ee99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8799637aad7dbb838f262ce23f34ddd457a7ee99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8799637aad7dbb838f262ce23f34ddd457a7ee99/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "348344209225bfbed267e2e0b9fd8d88660b8b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348344209225bfbed267e2e0b9fd8d88660b8b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348344209225bfbed267e2e0b9fd8d88660b8b4e"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "dccab5e62d3c50031bd303ddc8c2369b1760e480", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8799637aad7dbb838f262ce23f34ddd457a7ee99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8799637aad7dbb838f262ce23f34ddd457a7ee99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8799637aad7dbb838f262ce23f34ddd457a7ee99", "patch": "@@ -1,3 +1,15 @@\n+2014-06-05  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64.h (machine_function): Move\n+\tsaved_varargs_size from here...\n+\t(aarch64_frameGTY): ... to here.\n+\n+\t* config/aarch64/aarch64.c (aarch64_expand_prologue)\n+\t(aarch64_expand_epilogue, aarch64_final_eh_return_addr)\n+\t(aarch64_initial_elimination_offset)\n+\t(aarch64_setup_incoming_varargs): Adjust location of\n+\tsaved_varargs_size.\n+\n 2014-06-05  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_expand_prologue): Update stack"}, {"sha": "80530c603ceb2f5eaf2d4aa753f7d72da37e5df6", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8799637aad7dbb838f262ce23f34ddd457a7ee99/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8799637aad7dbb838f262ce23f34ddd457a7ee99/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=8799637aad7dbb838f262ce23f34ddd457a7ee99", "patch": "@@ -2130,9 +2130,9 @@ aarch64_expand_prologue (void)\n   rtx insn;\n \n   aarch64_layout_frame ();\n-  original_frame_size = get_frame_size () + cfun->machine->saved_varargs_size;\n-  gcc_assert ((!cfun->machine->saved_varargs_size || cfun->stdarg)\n-\t      && (cfun->stdarg || !cfun->machine->saved_varargs_size));\n+  original_frame_size = get_frame_size () + cfun->machine->frame.saved_varargs_size;\n+  gcc_assert ((!cfun->machine->frame.saved_varargs_size || cfun->stdarg)\n+\t      && (cfun->stdarg || !cfun->machine->frame.saved_varargs_size));\n   frame_size = (original_frame_size + cfun->machine->frame.saved_regs_size\n \t\t+ crtl->outgoing_args_size);\n   offset = frame_size = AARCH64_ROUND_UP (frame_size,\n@@ -2296,7 +2296,7 @@ aarch64_expand_epilogue (bool for_sibcall)\n   rtx cfa_reg;\n \n   aarch64_layout_frame ();\n-  original_frame_size = get_frame_size () + cfun->machine->saved_varargs_size;\n+  original_frame_size = get_frame_size () + cfun->machine->frame.saved_varargs_size;\n   frame_size = (original_frame_size + cfun->machine->frame.saved_regs_size\n \t\t+ crtl->outgoing_args_size);\n   offset = frame_size = AARCH64_ROUND_UP (frame_size,\n@@ -2495,7 +2495,7 @@ aarch64_final_eh_return_addr (void)\n {\n   HOST_WIDE_INT original_frame_size, frame_size, offset, fp_offset;\n   aarch64_layout_frame ();\n-  original_frame_size = get_frame_size () + cfun->machine->saved_varargs_size;\n+  original_frame_size = get_frame_size () + cfun->machine->frame.saved_varargs_size;\n   frame_size = (original_frame_size + cfun->machine->frame.saved_regs_size\n \t\t+ crtl->outgoing_args_size);\n   offset = frame_size = AARCH64_ROUND_UP (frame_size,\n@@ -4258,7 +4258,7 @@ aarch64_initial_elimination_offset (unsigned from, unsigned to)\n   aarch64_layout_frame ();\n   frame_size = (get_frame_size () + cfun->machine->frame.saved_regs_size\n \t\t+ crtl->outgoing_args_size\n-\t\t+ cfun->machine->saved_varargs_size);\n+\t\t+ cfun->machine->frame.saved_varargs_size);\n \n   frame_size = AARCH64_ROUND_UP (frame_size, STACK_BOUNDARY / BITS_PER_UNIT);\n   offset = frame_size;\n@@ -6959,7 +6959,7 @@ aarch64_setup_incoming_varargs (cumulative_args_t cum_v, enum machine_mode mode,\n \n   /* We don't save the size into *PRETEND_SIZE because we want to avoid\n      any complication of having crtl->args.pretend_args_size changed.  */\n-  cfun->machine->saved_varargs_size\n+  cfun->machine->frame.saved_varargs_size\n     = (AARCH64_ROUND_UP (gr_saved * UNITS_PER_WORD,\n \t\t      STACK_BOUNDARY / BITS_PER_UNIT)\n        + vr_saved * UNITS_PER_VREG);"}, {"sha": "392d095cdfe9200c5895dbc8309e1b36008e2877", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8799637aad7dbb838f262ce23f34ddd457a7ee99/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8799637aad7dbb838f262ce23f34ddd457a7ee99/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=8799637aad7dbb838f262ce23f34ddd457a7ee99", "patch": "@@ -514,6 +514,13 @@ extern enum aarch64_processor aarch64_tune;\n struct GTY (()) aarch64_frame\n {\n   HOST_WIDE_INT reg_offset[FIRST_PSEUDO_REGISTER];\n+\n+  /* The number of extra stack bytes taken up by register varargs.\n+     This area is allocated by the callee at the very top of the\n+     frame.  This value is rounded up to a multiple of\n+     STACK_BOUNDARY.  */\n+  HOST_WIDE_INT saved_varargs_size;\n+\n   HOST_WIDE_INT saved_regs_size;\n   /* Padding if needed after the all the callee save registers have\n      been saved.  */\n@@ -526,11 +533,6 @@ struct GTY (()) aarch64_frame\n typedef struct GTY (()) machine_function\n {\n   struct aarch64_frame frame;\n-\n-  /* The number of extra stack bytes taken up by register varargs.\n-     This area is allocated by the callee at the very top of the frame.  */\n-  HOST_WIDE_INT saved_varargs_size;\n-\n } machine_function;\n #endif\n "}]}