{"sha": "218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE4ZTUzZWExZjJiOWE5YTYzZGU4YmE2ZGMzZWMwYzhjMTUxMDExNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-07-10T14:43:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-07-10T14:43:07Z"}, "message": "re PR tree-optimization/61757 (genmodes failure with enable-checking)\n\n2014-07-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/61757\n\t* tree-ssa-dom.c (loop_depth_of_name): Restore.\n\t(propagate_rhs_into_lhs): Revert part of last change.\n\nFrom-SVN: r212433", "tree": {"sha": "ffe36b88fe1e96c5d3805b218586d6c452f9bd45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffe36b88fe1e96c5d3805b218586d6c452f9bd45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ed71ced71bc8f224d95aaaa45361826c024432a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed71ced71bc8f224d95aaaa45361826c024432a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed71ced71bc8f224d95aaaa45361826c024432a"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "a7dcc022c093b40a9164dc8a89b6d752b4197dd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114", "patch": "@@ -1,3 +1,9 @@\n+2014-07-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61757\n+\t* tree-ssa-dom.c (loop_depth_of_name): Restore.\n+\t(propagate_rhs_into_lhs): Revert part of last change.\n+\n 2014-07-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* fold-const.c (fold_checksum_tree): Look at DECL_VINDEX only for"}, {"sha": "4c0c276a62dfd2c78c542d9256637a6a44127bbd", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=218e53ea1f2b9a9a63de8ba6dc3ec0c8c1510114", "patch": "@@ -2638,6 +2638,33 @@ get_lhs_or_phi_result (gimple stmt)\n     gcc_unreachable ();\n }\n \n+/* Return the loop depth of the basic block of the defining statement of X.\n+   This number should not be treated as absolutely correct because the loop\n+   information may not be completely up-to-date when dom runs.  However, it\n+   will be relatively correct, and as more passes are taught to keep loop info\n+   up to date, the result will become more and more accurate.  */\n+\n+static int\n+loop_depth_of_name (tree x)\n+{\n+  gimple defstmt;\n+  basic_block defbb;\n+\n+  /* If it's not an SSA_NAME, we have no clue where the definition is.  */\n+  if (TREE_CODE (x) != SSA_NAME)\n+    return 0;\n+\n+  /* Otherwise return the loop depth of the defining statement's bb.\n+     Note that there may not actually be a bb for this statement, if the\n+     ssa_name is live on entry.  */\n+  defstmt = SSA_NAME_DEF_STMT (x);\n+  defbb = gimple_bb (defstmt);\n+  if (!defbb)\n+    return 0;\n+\n+  return bb_loop_depth (defbb);\n+}\n+\n /* Propagate RHS into all uses of LHS (when possible).\n \n    RHS and LHS are derived from STMT, which is passed in solely so\n@@ -2653,7 +2680,8 @@ static void\n propagate_rhs_into_lhs (gimple stmt, tree lhs, tree rhs, bitmap interesting_names)\n {\n   /* First verify that propagation is valid.  */\n-  if (may_propagate_copy (lhs, rhs))\n+  if (may_propagate_copy (lhs, rhs)\n+      && loop_depth_of_name (lhs) >= loop_depth_of_name (rhs))\n     {\n       use_operand_p use_p;\n       imm_use_iterator iter;"}]}