{"sha": "9f8f4efee32849800cfcaeed33aefac921f9b96b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4ZjRlZmVlMzI4NDk4MDBjZmNhZWVkMzNhZWZhYzkyMWY5Yjk2Yg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-15T16:36:35Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-15T16:36:35Z"}, "message": "Makefile.in (TREE_H, [...]): Depend on version.h.\n\n\t* Makefile.in (TREE_H, collect2.o, gcc.h, mips-tfile.o, cccp.o,\n\tcpphash.o, cppinit.o, protoize.o, unprotoize.o): Depend on version.h.\n\n\t* cccp.c: Include version.h and/or don't declare `version_string'.\n\t* collect2.c: Likewise.\n\t* alpha.c: Likewise.\n\t* arm/aof.h: Likewise.\n\t* arm/coff.h: Likewise.\n\t* arm/elf.h: Likewise.\n\t* arm/pe.h: Likewise.\n\t* arm/tcoff.h: Likewise.\n\t* arm/telf.h: Likewise.\n\t* arm/tpe.h: Likewise.\n\t* arm/vxarm.h: Likewise.\n\t* convex/convex.c: Likewise.\n\t* i386/dgux.c: Likewise.\n\t* i386/sun386.h: Likewise.\n\t* m88k/m88k.c: Likewise.\n\t* mcore/mcore-pe.h: Likewise.\n\t* mips/mips.h: Likewise.\n\t* romp/romp.h: Likewise.\n\t* sh/sh.c: Likewise.\n\t* cpphash.c: Likewise.\n\t* cppinit.c: Likewise.\n\t* dwarf2out.c: Likewise.\n\t* dwarfout.c: Likewise.\n\t* gcc.c: Likewise.\n\t* gcc.h: Likewise.\n\t* mips-tfile.c: Likewise.\n\t* protoize.c: Likewise.\n\t* toplev.c: Likewise.\n\t* tree.h: Likewise.\n\n\t* version.c (version_string): Constify a char*.\n\n\t* version.h: New file.\n\nch:\n\t* grant.c: Don't declare `version_string'.\n\nf:\n\t* g77spec.c: Don't declare `version_string'.\n\njava:\n\t* Makefile.in (jv-scan, jcf-dump, gcjh): Depend on and link with\n\tversion.o.\n\t(jcf-dump.o, gjavah.o, jv-scan.o): Depend on version.h.\n\n\t* gjavah.c: Include version.h.\n\n\t* jcf-dump.c: Likewise.\n\n\t* jv-scan.c: Likewise.\n\nFrom-SVN: r31984", "tree": {"sha": "78563287bbedbadc21e8f1ef9e40b0017dbde018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78563287bbedbadc21e8f1ef9e40b0017dbde018"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f8f4efee32849800cfcaeed33aefac921f9b96b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8f4efee32849800cfcaeed33aefac921f9b96b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8f4efee32849800cfcaeed33aefac921f9b96b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8f4efee32849800cfcaeed33aefac921f9b96b/comments", "author": null, "committer": null, "parents": [{"sha": "6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad91f8611f1ebf292a8972ff93655deb28cbc0b"}], "stats": {"total": 156, "additions": 92, "deletions": 64}, "files": [{"sha": "814f7a8ae21bf894ffafa1ccd222e06d1c6ed2c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -1,3 +1,42 @@\n+2000-02-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (TREE_H, collect2.o, gcc.h, mips-tfile.o, cccp.o,\n+\tcpphash.o, cppinit.o, protoize.o, unprotoize.o): Depend on version.h.\n+\n+\t* cccp.c: Include version.h and/or don't declare `version_string'.\n+\t* collect2.c: Likewise.\n+\t* alpha.c: Likewise.\n+\t* arm/aof.h: Likewise.\n+\t* arm/coff.h: Likewise.\n+\t* arm/elf.h: Likewise.\n+\t* arm/pe.h: Likewise.\n+\t* arm/tcoff.h: Likewise.\n+\t* arm/telf.h: Likewise.\n+\t* arm/tpe.h: Likewise.\n+\t* arm/vxarm.h: Likewise.\n+\t* convex/convex.c: Likewise.\n+\t* i386/dgux.c: Likewise.\n+\t* i386/sun386.h: Likewise.\n+\t* m88k/m88k.c: Likewise.\n+\t* mcore/mcore-pe.h: Likewise.\n+\t* mips/mips.h: Likewise.\n+\t* romp/romp.h: Likewise.\n+\t* sh/sh.c: Likewise.\n+\t* cpphash.c: Likewise.\n+\t* cppinit.c: Likewise.\n+\t* dwarf2out.c: Likewise.\n+\t* dwarfout.c: Likewise.\n+\t* gcc.c: Likewise.\n+\t* gcc.h: Likewise.\n+\t* mips-tfile.c: Likewise.\n+\t* protoize.c: Likewise.\n+\t* toplev.c: Likewise.\n+\t* tree.h: Likewise.\n+\t\n+\t* version.c (version_string): Constify a char*.\n+\n+\t* version.h: New file.\n+\n 2000-02-14  Nick Clifton  <nickc@cygnus.com>\n \n \t* configure.in: Add mcore-elf and mcore-pe targets."}, {"sha": "03d19cb0bc81ba6f0d9e0b309ed55cbcf2de26c4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -752,7 +752,7 @@ CONFIG_H =\n MACHMODE_H = machmode.h machmode.def\n RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H)\n RTL_H = $(RTL_BASE_H) genrtl.h\n-TREE_H = tree.h real.h tree.def $(MACHMODE_H) tree-check.h\n+TREE_H = tree.h real.h tree.def $(MACHMODE_H) tree-check.h version.h\n BASIC_BLOCK_H = basic-block.h bitmap.h sbitmap.h varray.h\n DEMANGLE_H = $(srcdir)/../include/demangle.h\n RECOG_H = recog.h\n@@ -1371,7 +1371,7 @@ collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(COLLECT2_OBJS) $(LIBS)\n \n collect2.o : collect2.c $(CONFIG_H) system.h gstab.h intl.h \\\n-\t$(srcdir)/../include/obstack.h $(DEMANGLE_H) collect2.h\n+\t$(srcdir)/../include/obstack.h $(DEMANGLE_H) collect2.h version.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n \t-DTARGET_MACHINE=\\\"$(target_alias)\\\" $(MAYBE_USE_COLLECT2) \\\n \t-c `echo $(srcdir)/collect2.c | sed 's,^\\./,,'`\n@@ -1413,6 +1413,8 @@ c-common.o : c-common.c $(CONFIG_H) system.h $(TREE_H) c-tree.h c-lex.h \\\n \n # Language-independent files.\n \n+gcc.h: version.h\n+\n DRIVER_DEFINES = \\\n   -DSTANDARD_STARTFILE_PREFIX=\\\"$(unlibsubdir)/\\\" \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc-lib/\\\" \\\n@@ -1638,7 +1640,7 @@ $(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) ggc.h \\\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tfile.o version.o $(LIBS)\n \n-mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) system.h\n+mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) system.h version.h\n \n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n@@ -2017,7 +2019,7 @@ PREPROCESSOR_DEFINES = \\\n # We use $(libsubdir)/$(unlibsubdir) to match the\n # -iprefix argument which gcc will pass if GCC_EXEC_PREFIX is used.\n cccp.o: cccp.c $(CONFIG_H) intl.h pcp.h version.c config.status system.h \\\n-           mbchar.h prefix.h Makefile.in\n+           mbchar.h prefix.h Makefile.in version.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(PREPROCESSOR_DEFINES) \\\n \t  -c `echo $(srcdir)/cccp.c | sed 's,^\\./,,'`\n@@ -2040,14 +2042,14 @@ cppmain.o: cppmain.c $(CONFIG_H) cpplib.h intl.h system.h\n \n cppulp.o:  cppulp.c  $(CONFIG_H) system.h output.h\n cpplib.o:  cpplib.c  $(CONFIG_H) cpplib.h intl.h system.h cpphash.h\n-cpphash.o: cpphash.c $(CONFIG_H) cpplib.h intl.h system.h cpphash.h\n+cpphash.o: cpphash.c $(CONFIG_H) cpplib.h intl.h system.h cpphash.h version.h\n cppalloc.o: cppalloc.c $(CONFIG_H) cpplib.h intl.h system.h\n cpperror.o: cpperror.c $(CONFIG_H) cpplib.h intl.h system.h\n cppexp.o:   cppexp.c   $(CONFIG_H) cpplib.h intl.h system.h\n cppfiles.o: cppfiles.c $(CONFIG_H) cpplib.h intl.h system.h\n \n cppinit.o:  cppinit.c $(CONFIG_H) cpplib.h intl.h system.h \\\n-\t\tcpphash.h prefix.h output.h Makefile\n+\t\tcpphash.h prefix.h output.h Makefile version.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(PREPROCESSOR_DEFINES) \\\n \t  -c `echo $(srcdir)/cppinit.c | sed 's,^\\./,,'`\n@@ -2066,13 +2068,13 @@ unprotoize$(exeext): unprotoize.o $(PROTO_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ unprotoize.o $(PROTO_OBJS) $(LIBS)\n \n protoize.o: protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H) system.h \\\n-   Makefile\n+   Makefile version.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(DRIVER_DEFINES) $(PREPROCESSOR_DEFINES) \\\n \t  $(srcdir)/protoize.c\n \n unprotoize.o: unprotoize.c protoize.c $(srcdir)/../include/getopt.h \\\n-   $(CONFIG_H) system.h Makefile\n+   $(CONFIG_H) system.h Makefile version.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(DRIVER_DEFINES) $(PREPROCESSOR_DEFINES) \\\n \t  $(srcdir)/unprotoize.c"}, {"sha": "052a4ab5a0698c0a64ae3a5c6458f0c09185666b", "filename": "gcc/cccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -32,6 +32,7 @@ typedef unsigned char U_CHAR;\n #include \"pcp.h\"\n #include \"intl.h\"\n #include \"prefix.h\"\n+#include \"version.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include \"mbchar.h\"\n@@ -95,7 +96,6 @@ static void hack_vms_include_specification ();\n \n /* External declarations.  */\n \n-extern char *version_string;\n HOST_WIDEST_INT parse_escape PARAMS ((char **, HOST_WIDEST_INT));\n HOST_WIDEST_INT parse_c_expression PARAMS ((char *, int));\n \f"}, {"sha": "269b6004ebb2668f78cfcba1e24f3529fdeb8257", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -1,3 +1,7 @@\n+2000-02-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* grant.c: Don't declare `version_string'.\n+\n 2000-02-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* decl.c (init_decl_processing): Remove duplicate decl of"}, {"sha": "6d4bb60303f881bf614243625a2d5674d31e0a4c", "filename": "gcc/ch/grant.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fch%2Fgrant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fch%2Fgrant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fgrant.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -57,9 +57,6 @@ int chill_at_module_level = 0;\n /* mark that a SPEC MODULE was generated */\n static int spec_module_generated = 0;\n \n-/* define version strings */\n-extern char *version_string;\n-\n /* define a faster string handling */\n typedef struct\n {"}, {"sha": "f69d56a78d6130095d72d3ed5ebd3452a12b3f58", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -52,6 +52,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"demangle.h\"\n #include \"obstack.h\"\n #include \"intl.h\"\n+#include \"version.h\"\n \n /* Obstack allocation and deallocation routines.  */\n #define obstack_chunk_alloc xmalloc\n@@ -184,8 +185,6 @@ enum pass {\n   PASS_SECOND\t\t\t\t/* with constructors linked in */\n };\n \n-extern char *version_string;\n-\n int vflag;\t\t\t\t/* true if -v */\n static int rflag;\t\t\t/* true if -r */\n static int strip_flag;\t\t\t/* true if -s */"}, {"sha": "f3ff40583f25111356861ae2c309b5607b6d368d", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -44,7 +44,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"tm_p.h\"\n \n /* External data.  */\n-extern char *version_string;\n extern int rtx_equal_function_value_matters;\n \n /* Specify which cpu to schedule for. */"}, {"sha": "9f67fc39c9d6231f8f73caed399e66a59895b096", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -174,7 +174,6 @@ do {\t\t\t\t\t\\\n \n #define ASM_FILE_START(STREAM)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  extern char *version_string;\t\t\t\t\t\\\n   fprintf ((STREAM), \"%s Generated by gcc %s for ARM/%s\\n\", \t\\\n \t   ASM_COMMENT_START, version_string, ARM_OS_NAME);\t\\\n   fprintf ((STREAM), \"__r0\\tRN\\t0\\n\");\t\t\t\t\\"}, {"sha": "f98674bc36a073af14bcdbe6d6475f9553623154", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -67,7 +67,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_FILE_START(STREAM)\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      extern char * version_string;\t\t\t\t\\\n       fprintf (STREAM, \"%s Generated by gcc %s for ARM/coff\\n\",\t\\\n \t       ASM_COMMENT_START, version_string);\t\t\\\n       fprintf (STREAM, ASM_APP_OFF);\t\t\t\t\\"}, {"sha": "71b36d2b8bf888759de8aaea458afb9f2aca98cf", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -198,7 +198,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_FILE_START(STREAM)\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      extern char * version_string;\t\t\t\t\\\n       fprintf (STREAM, \"%s Generated by gcc %s for ARM/elf\\n\",\t\\\n \t       ASM_COMMENT_START, version_string);\t\t\\\n       output_file_directive (STREAM, main_input_filename);\t\\"}, {"sha": "41a3ceb24a105247afab0e9780cb9dbd1566d58b", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -175,7 +175,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_FILE_START(STREAM)\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      extern char * version_string;\t\t\t\t\\\n       asm_fprintf (STREAM, \"%@ Generated by gcc %s for ARM/pe\\n\",\\\n \t   version_string);\t\t\t\t\t\\\n       output_file_directive ((STREAM), main_input_filename);\t\\"}, {"sha": "37870022d1e5a3cc14921e68f77e5687561a2c6f", "filename": "gcc/config/arm/tcoff.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Ftcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Ftcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftcoff.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -60,7 +60,6 @@ extern int arm_structure_size_boundary;\n #undef ASM_FILE_START\n #define ASM_FILE_START(STREAM) \\\n do {\t\t\t\t\t\t\t\t\\\n-  extern char *version_string;\t\t\t\t\t\\\n   fprintf ((STREAM), \"%s Generated by gcc %s for Thumb/coff\\n\", \\\n \t   ASM_COMMENT_START, version_string);\t                \\\n   fprintf ((STREAM), ASM_APP_OFF);                              \\"}, {"sha": "bb199ac8d299cc2f07c147e7f4dbda5da2e495ee", "filename": "gcc/config/arm/telf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Ftelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Ftelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftelf.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -67,7 +67,6 @@ extern int arm_structure_size_boundary;\n #define ASM_FILE_START(STREAM)\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      extern char * version_string;\t\t\t\t\t\\\n       fprintf ((STREAM), \"%s Generated by gcc %s for Thumb/elf\\n\",\t\\\n \t       ASM_COMMENT_START, version_string);\t\t\t\\\n       fprintf ((STREAM), ASM_APP_OFF);\t\t\t\t\t\\"}, {"sha": "c7f0683d8eedc3ae4134813dc791bdcc8a8a9905", "filename": "gcc/config/arm/tpe.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Ftpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Ftpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftpe.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -91,7 +91,6 @@ extern int arm_structure_size_boundary;\n #undef  ASM_FILE_START\n #define ASM_FILE_START(STREAM) \\\n do {\t\t\t\t\t\t\t\t\\\n-  extern char * version_string;\t\t\t\t\t\\\n   fprintf ((STREAM), \"%s Generated by gcc %s for Thumb/coff\\n\", \\\n \t   ASM_COMMENT_START, version_string);\t                \\\n   fprintf ((STREAM), ASM_APP_OFF);                              \\\n@@ -301,7 +300,6 @@ do {\t\t\t\t\t\t\t\t\\\n #undef  ASM_FILE_START\n #define ASM_FILE_START(STREAM) \\\n do {\t\t\t\t\t\t\t\t\\\n-  extern char * version_string;\t\t\t\t\t\\\n   fprintf (STREAM, \"%s Generated by gcc %s for ARM/pe\\n\",\t\\\n \t   ASM_COMMENT_START, version_string);\t\t\t\\\n   output_file_directive ((STREAM), main_input_filename);\t\\"}, {"sha": "53381b937c0f223886a6d68dfbda7ae0ae38b8b4", "filename": "gcc/config/arm/vxarm.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Fvxarm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Farm%2Fvxarm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxarm.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -67,7 +67,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_FILE_START(STREAM) \t\t\t\t\t\\\n do \t\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  extern char * version_string;\t\t\t\t\t\\\n   fprintf (STREAM, \"%s Generated by gcc %s for ARM/VxWorks\\n\",\t\\\n \t   ASM_COMMENT_START, version_string);\t\t\t\\\n } while (0)"}, {"sha": "6230478d4e05a93b9262c3127573570110b94c2f", "filename": "gcc/config/convex/convex.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fconvex%2Fconvex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fconvex%2Fconvex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -472,7 +472,6 @@ asm_declare_function_name (file, name, decl)\n \n   const char *p;\n   char c;\n-  extern char *version_string;\n   static char vers[4];\n   int i;\n   "}, {"sha": "915719d1c5ab4ac4dab716d445f7e6b5ae6b77b9", "filename": "gcc/config/i386/dgux.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fi386%2Fdgux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fi386%2Fdgux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -22,9 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #include <time.h>\n #include \"i386/i386.c\"\n \n-\n-extern char *version_string;\n-\n struct lang_independent_option\n {\n   char *string;"}, {"sha": "c7bd415c2c1b18995aab352ff9f78b0e80f555bc", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -57,7 +57,6 @@ do\t\t\t\t\t\t\t\t\\\n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE) \\\n   do {\t\t\t\t\t\t\t\\\n-    extern char *version_string;\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       int len = strlen (main_input_filename);\t\t\\\n       char *na = main_input_filename + len;\t\t\\"}, {"sha": "6c00fac2e3c5080a3261e71d715e354d2a37f62a", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -41,7 +41,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"tm_p.h\"\n \n-extern char *version_string;\n extern int flag_traditional;\n extern FILE *asm_out_file;\n "}, {"sha": "8098c8531afba6c4310a711e72d8cf8c4b79fe60", "filename": "gcc/config/mcore/mcore-pe.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-pe.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -154,7 +154,6 @@ rdata_section ()\t\t\t\t\t\t\\\n #define ASM_FILE_START(STREAM)\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      extern char * version_string;\t\t\t\t\\\n       fprintf (STREAM, \"%s Generated by gcc %s for MCore/pe\\n\",\t\\\n \t   ASM_COMMENT_START, version_string);\t\t\t\\\n       output_file_directive ((STREAM), main_input_filename);\t\\"}, {"sha": "437cf060b15c80bb3b3e8a8c42e4a305ec907291", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -30,7 +30,6 @@ extern char\tcall_used_regs[];\n extern int\tmay_call_alloca;\n extern char   **save_argv;\n extern int\ttarget_flags;\n-extern char    *version_string;\n \n /* MIPS external variables defined in mips.c.  */\n "}, {"sha": "cc2914d9ab5a43bbeae1a309cb24e540286db967", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -1360,8 +1360,7 @@ struct rt_cargs {int gregs, fregs; };\n /* Output at beginning of assembler file.  */\n \n #define ASM_FILE_START(FILE)\t\t\t\t\\\n-{ extern char *version_string;\t\t\t\t\\\n-  const char *p;\t\t\t\t\t\\\n+{ const char *p;\t\t\t\t\t\\\n \t\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\t.globl .oVncs\\n\\t.set .oVncs,0\\n\") ; \\\n   fprintf (FILE, \"\\t.globl .oVgcc\");\t\t\t\\"}, {"sha": "d039650afe18ab29149bb55ea1b3a043c18c820e", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -74,7 +74,6 @@ int current_function_anonymous_args;\n \n /* Global variables from toplev.c and final.c that are used within, but\n    not declared in any header file.  */\n-extern char *version_string;\n extern int *insn_addresses;\n \n /* Global variables for machine-dependent things. */"}, {"sha": "863240b4b2087f3a724915b7bb4679cd459fb050", "filename": "gcc/cpphash.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -27,6 +27,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #include \"system.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n+#include \"version.h\"\n #undef abort\n \n static unsigned int hashf\t  PARAMS ((const U_CHAR *, int));\n@@ -45,8 +46,6 @@ static void special_symbol\t PARAMS ((HASHNODE *, cpp_reader *));\n #define CPP_IS_MACRO_BUFFER(PBUF) ((PBUF)->data != NULL)\n #define FORWARD(N) CPP_FORWARD (CPP_BUFFER (pfile), (N))\n \n-extern char *version_string;\n-\n /* The arglist structure is built by create_definition to tell\n    collect_expansion where the argument names begin.  That\n    is, for a define like \"#define f(x,y,z) foo+x-bar*y\", the arglist"}, {"sha": "b7d230197f48bf27c7a0514c065d333fb18bb453", "filename": "gcc/cppinit.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -27,9 +27,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"prefix.h\"\n #include \"intl.h\"\n-\n-/* XXX Should be in a header file. */\n-extern char *version_string;\n+#include \"version.h\"\n \n /* Predefined symbols, built-in macros, and the default include path. */\n "}, {"sha": "183038de2e4366c4ca2d2e5d47b0b78399224b02", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -2126,7 +2126,6 @@ limbo_die_node;\n    language, and compiler version.  */\n \n extern int flag_traditional;\n-extern char *version_string;\n \n /* Fixed size portion of the DWARF compilation unit header.  */\n #define DWARF_COMPILE_UNIT_HEADER_SIZE (2 * DWARF_OFFSET_SIZE + 3)"}, {"sha": "c6fcbe6b72c6f37a82d5960a221aa7b63b3808d4", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -106,7 +106,6 @@ extern time_t time PARAMS ((time_t *)); /* FIXME: use NEED_DECLARATION_TIME */\n        && decl == TYPE_STUB_DECL (TREE_TYPE (decl))))\n \n extern int flag_traditional;\n-extern char *version_string;\n \n /* Maximum size (in bytes) of an artificially generated label.\t*/\n "}, {"sha": "68e748e6a2834e378532db25abf1651047cc4b75", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -1,3 +1,7 @@\n+Tue Feb 15 11:14:17 2000  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* g77spec.c: Don't declare `version_string'.\n+\n Sat Feb  5 23:27:25 2000  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* com.c (mark_tracker_head, mark_binding_level): Protoize."}, {"sha": "26d78b45b17f4729a5f17b398dde0658e3238cea", "filename": "gcc/f/g77spec.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ff%2Fg77spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ff%2Fg77spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77spec.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -96,8 +96,6 @@ static int g77_newargc;\n static char **real_g77_newargv;\n static const char **g77_newargv;\n \n-extern char *version_string;\n-\n /* --- This comes from gcc.c (2.8.1) verbatim: */\n \n /* This defines which switch letters take arguments.  */"}, {"sha": "b8f3ddbaaf79c743001c006a949d8932862ae520", "filename": "gcc/gcc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -189,8 +189,6 @@ static struct obstack collect_obstack;\n static struct rusage rus, prus;\n #endif\n \n-extern char *version_string;\n-\n /* Forward declaration for prototypes.  */\n struct path_prefix;\n "}, {"sha": "64b954647d30a9974f130a993be5c2d3a2787724", "filename": "gcc/gcc.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -21,6 +21,8 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __GCC_H__\n #define __GCC_H__\n \n+#include \"version.h\"\n+\n /* These are exported by gcc.c. */\n extern int do_spec PARAMS ((const char *));\n extern void fancy_abort PARAMS ((void)) ATTRIBUTE_NORETURN;"}, {"sha": "315cf0b9182bca0bc78ec62232ba9ced0e9d5ce2", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -1,3 +1,15 @@\n+2000-02-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (jv-scan, jcf-dump, gcjh): Depend on and link with\n+\tversion.o.\n+\t(jcf-dump.o, gjavah.o, jv-scan.o): Depend on version.h.\n+\n+\t* gjavah.c: Include version.h.\n+\t\n+\t* jcf-dump.c: Likewise.\n+\n+\t* jv-scan.c: Likewise.\n+\n 2000-02-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* except.c (check_start_handlers): Re-add prototype lost in last"}, {"sha": "07e4f22db5fd6a86fb10f0a868c66426adf00941", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -177,23 +177,23 @@ compiler: ../jc1$(exeext) ../jv-scan$(exeext)\n ../jc1$(exeext): $(P) $(JAVA_OBJS) $(OBJDEPS) $(LIBDEPS)\n \trm -f ../jc1$(exeext)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JAVA_OBJS) $(OBJS) $(LIBS)\n-../jv-scan$(exeext): $(P) $(JAVA_OBJS_LITE) $(OBJDEPS) $(LIBDEPS)\n+../jv-scan$(exeext): $(P) $(JAVA_OBJS_LITE) $(OBJDEPS) ../version.o $(LIBDEPS)\n \trm -f ../jv-scan$(exeext)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JAVA_OBJS_LITE) $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JAVA_OBJS_LITE) ../version.o $(LIBS)\n \n ../jcf-dump$(exeext): jcf-dump.o jcf-io.o jcf-depend.o jcf-path.o \\\n-\t\tzextract.o $(LIBDEPS)\n+\t\tzextract.o ../version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ jcf-dump.o jcf-io.o \\\n-\t  jcf-depend.o jcf-path.o zextract.o ../errors.o $(LIBS)\n+\t  jcf-depend.o jcf-path.o zextract.o ../errors.o ../version.o $(LIBS)\n \n # Dependencies here must be kept in sync with dependencies in Make-lang.in.\n ../jvgenmain$(exeext):  jvgenmain.o mangle.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ jvgenmain.o mangle.o $(LIBS)\n \n ../gcjh$(exeext): gjavah.o jcf-io.o jcf-depend.o jcf-path.o \\\n-\t\tzextract.o $(LIBDEPS)\n+\t\tzextract.o ../version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ gjavah.o jcf-io.o \\\n-\t  jcf-depend.o jcf-path.o zextract.o ../errors.o $(LIBS)\n+\t  jcf-depend.o jcf-path.o zextract.o ../errors.o ../version.o $(LIBS)\n \n Makefile: $(srcdir)/Makefile.in $(srcdir)/../configure\n \tcd ..; $(SHELL) config.status\n@@ -264,9 +264,9 @@ force:\n parse.o : $(PARSE_C) jcf-reader.c $(CONFIG_H) $(srcdir)/../system.h \\\n   $(srcdir)/../function.h $(JAVA_TREE_H)\n jcf-dump.o : $(CONFIG_H) $(srcdir)/../system.h $(JAVA_TREE_H) jcf-dump.c \\\n-  jcf-reader.c jcf.h javaop.h javaop.def\n+  jcf-reader.c jcf.h javaop.h javaop.def $(srcdir)/../version.h\n gjavah.o : $(CONFIG_H) $(srcdir)/../system.h $(JAVA_TREE_H) gjavah.c \\\n-  jcf-reader.c jcf.h javaop.h\n+  jcf-reader.c jcf.h javaop.h $(srcdir)/../version.h\n buffer.o : buffer.c $(CONFIG_H) buffer.h $(srcdir)/../gansidecl.h \\\n   $(srcdir)/../system.h $(srcdir)/../toplev.h\n check-init.o : check-init.c $(CONFIG_H) $(srcdir)/../gansidecl.h \\\n@@ -294,7 +294,7 @@ jcf-parse.o : jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(srcdir)/../flags.h \\\n   $(srcdir)/../toplev.h $(PARSE_H)\n jcf-write.o : jcf-write.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(RTL_H) \\\n   java-opcodes.h parse.h buffer.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n-jv-scan.o : jv-scan.c $(CONFIG_H) $(srcdir)/../system.h\n+jv-scan.o : jv-scan.c $(CONFIG_H) $(srcdir)/../system.h $(srcdir)/../version.h\n jvgenmain.o : jvgenmain.c $(CONFIG_H) $(srcdir)/../system.h\n lang.o : lang.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(srcdir)/../input.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h $(RTL_H) $(EXPR_H)"}, {"sha": "c679491dc099dabbc88265e6f482852b89b06f51", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -34,8 +34,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"java-opcodes.h\"\n \n-#include \"version.c\"\n-\n #include <getopt.h>\n \n \f"}, {"sha": "9d3f8297f4d00984a3b6ef8679634e0ca3cc1c50", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -53,7 +53,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"tree.h\"\n #include \"java-tree.h\"\n \n-#include \"version.c\"\n+#include \"version.h\"\n \n #include <getopt.h>\n "}, {"sha": "f803e2cfe6fa29031bef075a8d84f79a6ccb43b5", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"obstack.h\"\t\t/* We use obstacks in lex.c */\n \n-#include \"version.c\"\n+#include \"version.h\"\n \n #include <getopt.h>\n "}, {"sha": "abedec870b8a117d13705674612c0b2be300d32d", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -601,6 +601,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"version.h\"\n \n #ifndef __SABER__\n #define saber_stop()\n@@ -1697,7 +1698,6 @@ extern long   strtol\t\t\t__proto((const char *, char **, int));\n extern char *optarg;\n extern int   optind;\n extern int   opterr;\n-extern char *version_string;\n \f\n /* List of assembler pseudo ops and beginning sequences that need\n    special actions.  Someday, this should be a hash table, and such,"}, {"sha": "77d71ef589aa4c4dba3eac7f2f6de9e48de3c629", "filename": "gcc/protoize.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -28,6 +28,7 @@ Boston, MA 02111-1307, USA.  */\n #include <unistd.h>\n #endif\n #undef abort\n+#include \"version.h\"\n \n /* Include getopt.h for the sake of getopt_long. */\n #include \"getopt.h\"\n@@ -53,8 +54,6 @@ Boston, MA 02111-1307, USA.  */\n #define CPLUS_FILE_SUFFIX \"C\"\n #endif\n \n-extern char *version_string;\n-\n static void usage PARAMS ((void)) ATTRIBUTE_NORETURN;\n static void aux_info_corrupted PARAMS ((void)) ATTRIBUTE_NORETURN;\n static void declare_source_confusing PARAMS ((const char *)) ATTRIBUTE_NORETURN;"}, {"sha": "4d9eb8a8e53ca876354be1dc3605d644b4f9bbb3", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -141,7 +141,6 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #ifdef NEED_DECLARATION_ENVIRON\n extern char **environ;\n #endif\n-extern char *version_string;\n \n /* Carry information from ASM_DECLARE_OBJECT_NAME\n    to ASM_FINISH_DECLARE_OBJECT.  */"}, {"sha": "8ea2204408fd78ff60cae1092a672878ed829889", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -19,6 +19,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"machmode.h\"\n+#include \"version.h\"\n \n #ifndef RTX_CODE\n struct rtx_def;"}, {"sha": "3e1cbb59fec2f21cc227ad2f396e12df7eab9bcc", "filename": "gcc/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -1 +1 @@\n-char *version_string = \"2.96 20000215 (experimental)\";\n+const char *const version_string = \"2.96 20000215 (experimental)\";"}, {"sha": "86a5c28ed5264497ee2396c9305fce86425ff2de", "filename": "gcc/version.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f4efee32849800cfcaeed33aefac921f9b96b/gcc%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.h?ref=9f8f4efee32849800cfcaeed33aefac921f9b96b", "patch": "@@ -0,0 +1 @@\n+extern const char *const version_string;"}]}