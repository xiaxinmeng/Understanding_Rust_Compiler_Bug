{"sha": "9d463ce7f983f03f0d65da03cfa430e29a0840c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ0NjNjZTdmOTgzZjAzZjBkNjVkYTAzY2ZhNDMwZTI5YTA4NDBjMg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2020-08-28T08:02:58Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2020-08-28T08:02:58Z"}, "message": "This patch fixes PR96624.\n\n2020-08-28  Paul Thomas  <pault@gcc.gnu.org>\n\ngcc/fortran\n\tPR fortran/96624\n\t* simplify.c (gfc_simplify_reshape): Detect zero shape and\n\tclear index if found.\n\ngcc/testsuite/\n\tPR fortran/96624\n\t* gfortran.dg/reshape_8.f90 : New test.", "tree": {"sha": "41ec23c59b00c5ee782babaea371f2d1fe85700f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41ec23c59b00c5ee782babaea371f2d1fe85700f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d463ce7f983f03f0d65da03cfa430e29a0840c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d463ce7f983f03f0d65da03cfa430e29a0840c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d463ce7f983f03f0d65da03cfa430e29a0840c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d463ce7f983f03f0d65da03cfa430e29a0840c2/comments", "author": null, "committer": null, "parents": [{"sha": "3ba43155d2b27978589b2c1b0c4fdbaf8d4bba4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba43155d2b27978589b2c1b0c4fdbaf8d4bba4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba43155d2b27978589b2c1b0c4fdbaf8d4bba4d"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "8e0d2f97a60128c5313b7d5dbe9a079a9ced7a9c", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d463ce7f983f03f0d65da03cfa430e29a0840c2/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d463ce7f983f03f0d65da03cfa430e29a0840c2/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=9d463ce7f983f03f0d65da03cfa430e29a0840c2", "patch": "@@ -6398,7 +6398,7 @@ gfc_simplify_is_contiguous (gfc_expr *array)\n \n   if (gfc_is_not_contiguous (array))\n     return gfc_get_logical_expr (gfc_default_logical_kind, &array->where, 0);\n-    \n+\n   return NULL;\n }\n \n@@ -6725,6 +6725,7 @@ gfc_simplify_reshape (gfc_expr *source, gfc_expr *shape_exp,\n   unsigned long j;\n   size_t nsource;\n   gfc_expr *e, *result;\n+  bool zerosize = false;\n \n   /* Check that argument expression types are OK.  */\n   if (!is_constant_array_expr (source)\n@@ -6847,7 +6848,14 @@ gfc_simplify_reshape (gfc_expr *source, gfc_expr *shape_exp,\n   result->rank = rank;\n   result->shape = gfc_get_shape (rank);\n   for (i = 0; i < rank; i++)\n-    mpz_init_set_ui (result->shape[i], shape[i]);\n+    {\n+      mpz_init_set_ui (result->shape[i], shape[i]);\n+      if (shape[i] == 0)\n+\tzerosize = true;\n+    }\n+\n+  if (zerosize)\n+    goto sizezero;\n \n   while (nsource > 0 || npad > 0)\n     {\n@@ -6897,6 +6905,8 @@ gfc_simplify_reshape (gfc_expr *source, gfc_expr *shape_exp,\n       break;\n     }\n \n+sizezero:\n+\n   mpz_clear (index);\n \n   return result;"}, {"sha": "01799ac5c196d5a39b1a1d28ea6b0feb4f435a97", "filename": "gcc/testsuite/gfortran.dg/reshape_8.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d463ce7f983f03f0d65da03cfa430e29a0840c2/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d463ce7f983f03f0d65da03cfa430e29a0840c2/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_8.f90?ref=9d463ce7f983f03f0d65da03cfa430e29a0840c2", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! Test the fix for PR96624 in which an attempt was made to assign\n+! to the zero length temporary created by reshape, resulting in a segfault.\n+!\n+! Contributed by Dong Shenpo  <shenpo.dong@compiler-dev.com>\n+!\n+program test\n+  integer :: a(2,0)\n+  a = reshape([1,2,3,4], [2,0])\n+  print *, a\n+end\n+! { dg-final { scan-tree-dump-times \"data\" 4 \"original\" } }"}]}