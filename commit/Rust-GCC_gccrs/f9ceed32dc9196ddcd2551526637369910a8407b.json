{"sha": "f9ceed32dc9196ddcd2551526637369910a8407b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjljZWVkMzJkYzkxOTZkZGNkMjU1MTUyNjYzNzM2OTkxMGE4NDA3Yg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2010-03-19T16:37:27Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-03-19T16:37:27Z"}, "message": "re PR c++/43116 (ICE when using attributes in a function alias declaration)\n\n\tPR c++/43116\n\t* attribs.c (decl_attributes): When rebuilding a function pointer\n\ttype use the same qualifiers as the original pointer type.\n\ntestsuite/\n\t* g++.dg/other/pr43116.C: New testcase.\n\nFrom-SVN: r157578", "tree": {"sha": "a2dcdc35ffed6fba09f04d6569bb5b40c33fbe1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2dcdc35ffed6fba09f04d6569bb5b40c33fbe1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9ceed32dc9196ddcd2551526637369910a8407b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ceed32dc9196ddcd2551526637369910a8407b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ceed32dc9196ddcd2551526637369910a8407b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ceed32dc9196ddcd2551526637369910a8407b/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3795eae6647e2bcac4b998b194150cafee27906f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3795eae6647e2bcac4b998b194150cafee27906f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3795eae6647e2bcac4b998b194150cafee27906f"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c255935a09334bf05c3eff016722febc2f6f10ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9ceed32dc9196ddcd2551526637369910a8407b", "patch": "@@ -1,3 +1,9 @@\n+2010-03-19  Michael Matz  <matz@suse.de>\n+\n+\tPR c++/43116\n+\t* attribs.c (decl_attributes): When rebuilding a function pointer\n+\ttype use the same qualifiers as the original pointer type.\n+\n 2010-03-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* doc/gimple.texi (Logical Operators): Describe is_gimple_ip_invariant"}, {"sha": "9d76a0c30db068ed2eb05a1696c1fdb1b937eef6", "filename": "gcc/attribs.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=f9ceed32dc9196ddcd2551526637369910a8407b", "patch": "@@ -286,6 +286,7 @@ decl_attributes (tree *node, tree attributes, int flags)\n       tree *anode = node;\n       const struct attribute_spec *spec = lookup_attribute_spec (name);\n       bool no_add_attrs = 0;\n+      int fn_ptr_quals = 0;\n       tree fn_ptr_tmp = NULL_TREE;\n \n       if (spec == NULL)\n@@ -353,6 +354,7 @@ decl_attributes (tree *node, tree attributes, int flags)\n \t\t This would all be simpler if attributes were part of the\n \t\t declarator, grumble grumble.  */\n \t      fn_ptr_tmp = TREE_TYPE (*anode);\n+\t      fn_ptr_quals = TYPE_QUALS (*anode);\n \t      anode = &fn_ptr_tmp;\n \t      flags &= ~(int) ATTR_FLAG_TYPE_IN_PLACE;\n \t    }\n@@ -449,6 +451,8 @@ decl_attributes (tree *node, tree attributes, int flags)\n \t  /* Rebuild the function pointer type and put it in the\n \t     appropriate place.  */\n \t  fn_ptr_tmp = build_pointer_type (fn_ptr_tmp);\n+\t  if (fn_ptr_quals)\n+\t    fn_ptr_tmp = build_qualified_type (fn_ptr_tmp, fn_ptr_quals);\n \t  if (DECL_P (*node))\n \t    TREE_TYPE (*node) = fn_ptr_tmp;\n \t  else"}, {"sha": "758456ecc2342462731458dd2afae1417e194d22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9ceed32dc9196ddcd2551526637369910a8407b", "patch": "@@ -1,3 +1,8 @@\n+2010-03-19  Michael Matz  <matz@suse.de>\n+\n+\tPR c++/43116\n+\t* g++.dg/other/pr43116.C: New testcase.\n+\n 2010-03-19  Michael Matz  <matz@suse.de>\n \n \tPR target/43305"}, {"sha": "f0d9d01e4a86e61adf521998fef9214b3e131259", "filename": "gcc/testsuite/g++.dg/other/pr43116.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr43116.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ceed32dc9196ddcd2551526637369910a8407b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr43116.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr43116.C?ref=f9ceed32dc9196ddcd2551526637369910a8407b", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+extern \"C\" int rpl_open (const char *filename, int flags, ...) __attribute__\n+((__nonnull__ (1)));\n+\n+namespace gnulib\n+{\n+    int (*const open) (const char *filename, int flags, ...) __attribute__\n+\t((__nonnull__ (1))) = rpl_open;\n+}"}]}