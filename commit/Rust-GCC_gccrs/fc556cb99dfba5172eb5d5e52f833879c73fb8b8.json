{"sha": "fc556cb99dfba5172eb5d5e52f833879c73fb8b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1NTZjYjk5ZGZiYTUxNzJlYjVkNWU1MmY4MzM4NzljNzNmYjhiOA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-10-29T21:37:13Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-10-29T21:37:13Z"}, "message": "Makefile.in (gnucompare*): Only record bad comparisons if there really was a bad comparison.\n\n2002-10-29  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* Makefile.in (gnucompare*):  Only record bad comparisons\n\tif there really was a bad comparison.\n\nFrom-SVN: r58635", "tree": {"sha": "4da43448ee813775875fe305c5f8d7e56fc260b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4da43448ee813775875fe305c5f8d7e56fc260b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc556cb99dfba5172eb5d5e52f833879c73fb8b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc556cb99dfba5172eb5d5e52f833879c73fb8b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc556cb99dfba5172eb5d5e52f833879c73fb8b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc556cb99dfba5172eb5d5e52f833879c73fb8b8/comments", "author": null, "committer": null, "parents": [{"sha": "f8ca792302bcc455bf7d45f807d71a9f06c4add8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ca792302bcc455bf7d45f807d71a9f06c4add8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ca792302bcc455bf7d45f807d71a9f06c4add8"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "edd8a7eb2478aa8fa1f3be26c98652275456bc07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc556cb99dfba5172eb5d5e52f833879c73fb8b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc556cb99dfba5172eb5d5e52f833879c73fb8b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc556cb99dfba5172eb5d5e52f833879c73fb8b8", "patch": "@@ -1,3 +1,8 @@\n+2002-10-29  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* Makefile.in (gnucompare*):  Only record bad comparisons\n+\tif there really was a bad comparison.\n+\n Tue Oct 29 19:32:16 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.h (CONST_DOUBLE_OK_FOR_LETTER_P): Remove 'H'"}, {"sha": "8f2256c1c85a0d3a9acf58dba5974297fdea7afc", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc556cb99dfba5172eb5d5e52f833879c73fb8b8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc556cb99dfba5172eb5d5e52f833879c73fb8b8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=fc556cb99dfba5172eb5d5e52f833879c73fb8b8", "patch": "@@ -3490,18 +3490,21 @@ compare compare3 compare4 compare-lean compare3-lean compare4-lean: force\n # Compare the object files in the current directory with those in the\n # stage2 directory.  Use gnu cmp (diffutils v2.4 or later) to avoid\n # running tail and the overhead of twice copying each object file.\n-\n+# An exit status of 1 is precisely the result we're looking for (other\n+# values mean other problems).\n gnucompare gnucompare3 gnucompare4 gnucompare-lean gnucompare3-lean gnucompare4-lean: force\n \t-rm -f .bad_compare\n \tcase \"$@\" in gnucompare | gnucompare-lean ) stage=2 ;; * ) stage=`echo $@ | sed -e 's,^gnucompare\\([0-9][0-9]*\\).*,\\1,'` ;; esac; \\\n \tfor file in *$(objext); do \\\n-\t  (cmp --ignore-initial=16 $$file stage$$stage/$$file > /dev/null 2>&1 || echo $$file differs >> .bad_compare) || true; \\\n+\t  cmp --ignore-initial=16 $$file stage$$stage/$$file > /dev/null 2>&1; \\\n+\t  test $$? -eq 1 && echo $$file differs >> .bad_compare || true; \\\n \tdone\n \tcase \"$@\" in gnucompare | gnucompare-lean ) stage=2 ;; * ) stage=`echo $@ | sed -e 's,^gnucompare\\([0-9][0-9]*\\).*,\\1,'` ;; esac; \\\n \tfor dir in tmp-foo intl $(SUBDIRS); do \\\n \t  if [ \"`echo $$dir/*$(objext)`\" != \"$$dir/*$(objext)\" ] ; then \\\n \t    for file in $$dir/*$(objext); do \\\n-\t      (cmp --ignore-initial=16 $$file stage$$stage/$$file > /dev/null 2>&1 || echo $$file differs >> .bad_compare) || true; \\\n+\t      cmp --ignore-initial=16 $$file stage$$stage/$$file > /dev/null 2>&1; \\\n+\t      test $$? -eq 1 && echo $$file differs >> .bad_compare || true; \\\n \t    done; \\\n \t  else true; fi; \\\n \tdone"}]}