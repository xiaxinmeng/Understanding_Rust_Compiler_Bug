{"sha": "f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhODkyMzZjNGJmNWUzZjFkM2U2MGE1YTFkZjMyZjQzZjhjNWIxNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-23T12:06:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-23T12:06:03Z"}, "message": "Formatting changes.\n\nFrom-SVN: r9048", "tree": {"sha": "5a0a2ed8f8049c93b410f18a08b01be73ee214b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a0a2ed8f8049c93b410f18a08b01be73ee214b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17/comments", "author": null, "committer": null, "parents": [{"sha": "3bda6d11ef9912f7beb23011ff4d8b263d5128b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bda6d11ef9912f7beb23011ff4d8b263d5128b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bda6d11ef9912f7beb23011ff4d8b263d5128b5"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "cdbba0ce2a92943317e33b5e04607f1f980daa89", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f8a89236c4bf5e3f1d3e60a5a1df32f43f8c5b17", "patch": "@@ -2783,7 +2783,6 @@ build_block (vars, tags, subblocks, supercontext, chain)\n   BLOCK_CHAIN (block) = chain;\n   return block;\n }\n-\n \f\n /* Return a declaration like DDECL except that its DECL_MACHINE_ATTRIBUTE\n    is ATTRIBUTE. */\n@@ -2799,8 +2798,7 @@ build_decl_attribute_variant (ddecl, attribute)\n /* Return a type like TTYPE except that its TYPE_ATTRIBUTE\n    is ATTRIBUTE.\n \n-   Such modified types already made are recorded so that duplicates\n-   are not made. */\n+   Record such modified types already made so we don't make duplicates.  */\n \n tree\n build_type_attribute_variant (ttype, attribute)\n@@ -2870,9 +2868,7 @@ valid_machine_attribute (new_attr, decl, type)\n   tree type_attr_list = TYPE_ATTRIBUTES (type);\n \n #ifdef VALID_MACHINE_DECL_ATTRIBUTE\n-  if (VALID_MACHINE_DECL_ATTRIBUTE (decl, \n-                                    decl_attr_list, \n-                                    new_attr))\n+  if (VALID_MACHINE_DECL_ATTRIBUTE (decl, decl_attr_list, new_attr))\n     {\n       tree attr_list;\n       int in_list = 0;\n@@ -2892,9 +2888,7 @@ valid_machine_attribute (new_attr, decl, type)\n #endif\n \n #ifdef VALID_MACHINE_TYPE_ATTRIBUTE\n-  if (VALID_MACHINE_TYPE_ATTRIBUTE (type,\n-                                    type_attr_list, \n-                                    new_attr))\n+  if (VALID_MACHINE_TYPE_ATTRIBUTE (type, type_attr_list, new_attr))\n     {\n       tree attr_list;\n       int in_list = 0;\n@@ -2905,7 +2899,7 @@ valid_machine_attribute (new_attr, decl, type)\n \tif (TREE_VALUE (attr_list) == new_attr)\n \t  in_list = 1;\n \n-      if (!in_list)\n+      if (! in_list)\n         type_attr_list = tree_cons (NULL_TREE, new_attr, type_attr_list);\n \n       decl = build_type_attribute_variant (type, type_attr_list);"}]}