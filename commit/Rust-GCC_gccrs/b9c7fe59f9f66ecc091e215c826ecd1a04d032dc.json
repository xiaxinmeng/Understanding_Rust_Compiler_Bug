{"sha": "b9c7fe59f9f66ecc091e215c826ecd1a04d032dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjljN2ZlNTlmOWY2NmVjYzA5MWUyMTVjODI2ZWNkMWEwNGQwMzJkYw==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-08-11T16:20:58Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-08-12T10:39:36Z"}, "message": "[nvptx] Fix array dimension in nvptx_assemble_decl_begin\n\nWhen compiling test-case builtin-object-size-21.c, cc1 emits:\n...\n  .visible .global .align 1 .u32 xm3_3[-2305843009213693951] =\n...\nfor:\n...\nstruct Ax_m3 { char a[PTRDIFF_MAX - 3], ax[]; };\n\nstruct Ax_m3 xm3_3 = { { 0 }, { 1, 2, 3 } };\n...\n\nFix this by:\n- changing the printing format for unsigned HOST_WIDE_INT init_frag.remaining\n  to HOST_WIDE_INT_PRINT_UNSIGNED\n- changing the type of local variable elt_size in nvptx_assemble_decl_begin\n  to unsigned HOST_WIDE_INT.\nsuch that we have:\n...\n  .visible .global .align 1 .u32 xm3_3[2305843009213693952] =\n...\nwhere 2305843009213693952 == 0x2000000000000000, so the array is claiming\n0x8000000000000000 bytes, which is one more than PTRDIFF_MAX.  This is due\nto using .u32 instead of .u8, so strictly speaking we should downgrade to\nusing .u8 in this case, but that corner-case problem doesn't look urgent\nenough to fix in this commit.\n\nBuild on nvptx, tested with make check-gcc.\n\ngcc/ChangeLog:\n\n\t* config/nvptx/nvptx.c (nvptx_assemble_decl_begin): Make elt_size an\n\tunsigned HOST_WIDE_INT.  Print init_frag.remaining using\n\tHOST_WIDE_INT_PRINT_UNSIGNED.", "tree": {"sha": "a50fe1c566ddc65cd977a242100711a0b6021e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a50fe1c566ddc65cd977a242100711a0b6021e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9c7fe59f9f66ecc091e215c826ecd1a04d032dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9c7fe59f9f66ecc091e215c826ecd1a04d032dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9c7fe59f9f66ecc091e215c826ecd1a04d032dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9c7fe59f9f66ecc091e215c826ecd1a04d032dc/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb8e83924615cf44332e60f910bf2b0128c21ae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8e83924615cf44332e60f910bf2b0128c21ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8e83924615cf44332e60f910bf2b0128c21ae0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "39d0275493a92fed49eabfb651512cc7e97a4a21", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9c7fe59f9f66ecc091e215c826ecd1a04d032dc/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9c7fe59f9f66ecc091e215c826ecd1a04d032dc/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=b9c7fe59f9f66ecc091e215c826ecd1a04d032dc", "patch": "@@ -2202,7 +2202,7 @@ nvptx_assemble_decl_begin (FILE *file, const char *name, const char *section,\n     /* Neither vector nor complex types can contain the other.  */\n     type = TREE_TYPE (type);\n \n-  unsigned elt_size = int_size_in_bytes (type);\n+  unsigned HOST_WIDE_INT elt_size = int_size_in_bytes (type);\n \n   /* Largest mode we're prepared to accept.  For BLKmode types we\n      don't know if it'll contain pointer constants, so have to choose\n@@ -2232,7 +2232,7 @@ nvptx_assemble_decl_begin (FILE *file, const char *name, const char *section,\n   if (size)\n     /* We make everything an array, to simplify any initialization\n        emission.  */\n-    fprintf (file, \"[\" HOST_WIDE_INT_PRINT_DEC \"]\", init_frag.remaining);\n+    fprintf (file, \"[\" HOST_WIDE_INT_PRINT_UNSIGNED \"]\", init_frag.remaining);\n   else if (atype)\n     fprintf (file, \"[]\");\n }"}]}