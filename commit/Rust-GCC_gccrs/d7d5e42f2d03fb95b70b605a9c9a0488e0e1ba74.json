{"sha": "d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdkNWU0MmYyZDAzZmI5NWI3MGI2MDVhOWM5YTA0ODhlMGUxYmE3NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-14T18:52:40Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-14T18:52:40Z"}, "message": "cp-tree.h (remap_save_expr): Add walk_subtrees parameter.\n\n\t* cp-tree.h (remap_save_expr): Add walk_subtrees parameter.\n\t* optimize.c (copy_body_r): Pass it.\n\t* tree.c (remap_save_expr): Clear walk_subtrees for an\n\talready-handled SAVE_EXPR.\n\t(cp_unsave_r): Pass walk_subtrees to remap_save_expr.\n\nFrom-SVN: r30926", "tree": {"sha": "bca049f0a1dd3cb2de3afa255b36071c10242069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bca049f0a1dd3cb2de3afa255b36071c10242069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/comments", "author": null, "committer": null, "parents": [{"sha": "89c6e7ac34e495615ffe46106e955831a723970f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c6e7ac34e495615ffe46106e955831a723970f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c6e7ac34e495615ffe46106e955831a723970f"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "31b963e4b340a5cc8bb4cd119d4a04bc8722f454", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "patch": "@@ -1,5 +1,11 @@\n 1999-12-14  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* cp-tree.h (remap_save_expr): Add walk_subtrees parameter.\n+\t* optimize.c (copy_body_r): Pass it.\n+\t* tree.c (remap_save_expr): Clear walk_subtrees for an\n+\talready-handled SAVE_EXPR.\n+\t(cp_unsave_r): Pass walk_subtrees to remap_save_expr.\n+\n \t* dump.c (dequeue_and_dump): Dump DECL_NAMESPACE_ALIAS.\n \t* ir.texi (DECL_NAMESPACE_ALIAS): Document it.\n "}, {"sha": "99b258077fe6f1d546e84ef98455bb8dfed54089", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "patch": "@@ -4064,7 +4064,7 @@ extern tree copy_tree_r                         PROTO((tree *, int *, void *));\n extern int cp_valid_lang_attribute\t\tPROTO((tree, tree, tree, tree));\n extern tree make_ptrmem_cst                     PROTO((tree, tree));\n extern tree cp_build_qualified_type_real        PROTO((tree, int, int));\n-extern void remap_save_expr                     PROTO((tree *, splay_tree, tree));\n+extern void remap_save_expr                     PROTO((tree *, splay_tree, tree, int *));\n #define cp_build_qualified_type(TYPE, QUALS) \\\n   cp_build_qualified_type_real ((TYPE), (QUALS), /*complain=*/1)\n "}, {"sha": "50ee83efe91bbd0cba1a4f393deffbdaf4d656f0", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "patch": "@@ -296,7 +296,8 @@ copy_body_r (tp, walk_subtrees, data)\n       *tp = new_decl;\n     }\n   else if (TREE_CODE (*tp) == SAVE_EXPR)\n-    remap_save_expr (tp, id->decl_map, VARRAY_TREE (id->fns, 0));\n+    remap_save_expr (tp, id->decl_map, VARRAY_TREE (id->fns, 0), \n+\t\t     walk_subtrees);\n   else if (TREE_CODE (*tp) == UNSAVE_EXPR)\n     my_friendly_abort (19991113);\n   /* For a SCOPE_STMT, we must copy the associated block so that we"}, {"sha": "c66d2fb54b2da9d7fac99a5a121057c1b404d097", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "patch": "@@ -2659,10 +2659,11 @@ init_tree ()\n    ST.  FN is the function into which the copy will be placed.  */\n \n void\n-remap_save_expr (tp, st, fn)\n+remap_save_expr (tp, st, fn, walk_subtrees)\n      tree *tp;\n      splay_tree st;\n      tree fn;\n+     int *walk_subtrees;\n {\n   splay_tree_node n;\n \n@@ -2684,6 +2685,10 @@ remap_save_expr (tp, st, fn)\n \t\t\t     (splay_tree_key) *tp,\n \t\t\t     (splay_tree_value) t);\n     }\n+  else\n+    /* We've already walked into this SAVE_EXPR, so we needn't do it\n+       again.  */\n+    *walk_subtrees = 0;\n \n   /* Replace this SAVE_EXPR with the copy.  */\n   *tp = (tree) n->value;\n@@ -2751,7 +2756,7 @@ cp_unsave_r (tp, walk_subtrees, data)\n \t*tp = (tree) n->value;\n     }\n   else if (TREE_CODE (*tp) == SAVE_EXPR)\n-    remap_save_expr (tp, st, current_function_decl);\n+    remap_save_expr (tp, st, current_function_decl, walk_subtrees);\n   else\n     {\n       copy_tree_r (tp, walk_subtrees, NULL);"}, {"sha": "ec3b33aac83983927ee1eda030f1f648f1ca9ea9", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline3.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline3.C?ref=d7d5e42f2d03fb95b70b605a9c9a0488e0e1ba74", "patch": "@@ -0,0 +1,51 @@\n+// Build don't link: \n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+// Special g++ Options: -O3\n+\n+class ostream;\n+\n+struct S\n+{\n+  virtual void print(ostream&) const = 0;\n+};\n+\n+template <class _Tp>\n+class vector\n+{\n+public:\n+  _Tp& operator[](unsigned __n) const { return *(_M_start + __n); }\n+  _Tp* _M_start;\n+};\n+\n+class T\n+{\n+public:\n+\n+  void print(ostream&) const;\n+\n+  vector<S*> bcList_m;\n+};\n+\n+void T::print(ostream& o) const\n+{\n+  int n = 3;\n+\n+  for (int i = 0; i < n; ++i)\n+    bcList_m[i]->print(o);\n+  return;\n+}\n+\n+ostream&\n+operator<<(ostream& o, const T& bcList)\n+{\n+  bcList.print(o);\n+  return o;\n+}\n+\n+\n+ \n+ \n+ \n+ \n+ \n+ "}]}