{"sha": "6fa497223b20e5efc373182658423ad092755f78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhNDk3MjIzYjIwZTVlZmMzNzMxODI2NTg0MjNhZDA5Mjc1NWY3OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-15T02:13:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-15T02:13:58Z"}, "message": "(SECONDARY_INPUT_RELOAD_CLASS):\n\nMoving any kind of integer cst to float reg needs intermediate.\n\nFrom-SVN: r6094", "tree": {"sha": "9af3079a6f1319c76291d17de591f94b9ff60ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9af3079a6f1319c76291d17de591f94b9ff60ca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fa497223b20e5efc373182658423ad092755f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa497223b20e5efc373182658423ad092755f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa497223b20e5efc373182658423ad092755f78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa497223b20e5efc373182658423ad092755f78/comments", "author": null, "committer": null, "parents": [{"sha": "116c9aab44ca6baa493e7bbbdb6231e3d795523d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116c9aab44ca6baa493e7bbbdb6231e3d795523d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116c9aab44ca6baa493e7bbbdb6231e3d795523d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "73d70c4b17900bd7adb787fba60f53171e39613e", "filename": "gcc/config/i860/i860.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa497223b20e5efc373182658423ad092755f78/gcc%2Fconfig%2Fi860%2Fi860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa497223b20e5efc373182658423ad092755f78/gcc%2Fconfig%2Fi860%2Fi860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.h?ref=6fa497223b20e5efc373182658423ad092755f78", "patch": "@@ -379,7 +379,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FP_REGS, ALL_REGS, LIM_REG_CLASSES };\n    returned.  */\n \n #define SECONDARY_INPUT_RELOAD_CLASS(CLASS,MODE,IN) \\\n-  ((CLASS) == FP_REGS && GET_CODE (IN) == CONST_INT ? GENERAL_REGS : NO_REGS)\n+  ((CLASS) == FP_REGS && CONSTANT_P (IN) ? GENERAL_REGS : NO_REGS)\n \n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.  */"}]}