{"sha": "6b7a9826d737254eb70ab5a600ce5f334a7f922b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI3YTk4MjZkNzM3MjU0ZWI3MGFiNWE2MDBjZTVmMzM0YTdmOTIyYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-30T20:01:36Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-30T20:01:36Z"}, "message": "Fortran] PR 92208 don't use function-result dummy variable as actual argument\n\n        PR fortran/92208\n        * trans-array.c (gfc_conv_array_parameter): Only copy\n        string-length backend_decl if expression is not a function.\n\n        PR fortran/92208\n        * gfortran.dg/pr92208.f90: New.\n\nFrom-SVN: r277639", "tree": {"sha": "f36fd636c12258dbdebe9b7c154303f2dbaaf6ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f36fd636c12258dbdebe9b7c154303f2dbaaf6ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b7a9826d737254eb70ab5a600ce5f334a7f922b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b7a9826d737254eb70ab5a600ce5f334a7f922b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b7a9826d737254eb70ab5a600ce5f334a7f922b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b7a9826d737254eb70ab5a600ce5f334a7f922b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c766762429d045b575853539e019746fde6ef076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c766762429d045b575853539e019746fde6ef076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c766762429d045b575853539e019746fde6ef076"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "b86ea10a7e32f455dd42396379d96d5b371afd11", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6b7a9826d737254eb70ab5a600ce5f334a7f922b", "patch": "@@ -1,3 +1,9 @@\n+2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92208\n+\t* trans-array.c (gfc_conv_array_parameter): Only copy\n+\tstring-length backend_decl if expression is not a function.\n+\n 2019-10-30  Mark Eggleston  <mark.eggleston@codethink.com>\n \n \t* invoke.texi: Add -Wno-overwrite-recursive to list of options. Add"}, {"sha": "2d85bf78c42aea6ecc5757c9152019b5d38ff158", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6b7a9826d737254eb70ab5a600ce5f334a7f922b", "patch": "@@ -8049,7 +8049,7 @@ gfc_conv_array_parameter (gfc_se * se, gfc_expr * expr, bool g77,\n \t  /* The components shall be deallocated before their containing entity.  */\n \t  gfc_prepend_expr_to_block (&se->post, tmp);\n \t}\n-      if (expr->ts.type == BT_CHARACTER)\n+      if (expr->ts.type == BT_CHARACTER && expr->expr_type != EXPR_FUNCTION)\n \tse->string_length = expr->ts.u.cl->backend_decl;\n       if (size)\n \tarray_parameter_size (se->expr, expr, size);"}, {"sha": "c2d63003f9bf425154a76ac016a9993b0e63c3c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b7a9826d737254eb70ab5a600ce5f334a7f922b", "patch": "@@ -1,3 +1,8 @@\n+2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92208\n+\t* gfortran.dg/pr92208.f90: New.\n+\n 2019-10-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/92134 - constinit malfunction in static data member."}, {"sha": "9de7f4b24b5e2d2bb5812d02e70b212425018302", "filename": "gcc/testsuite/gfortran.dg/pr92208.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92208.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7a9826d737254eb70ab5a600ce5f334a7f922b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92208.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92208.f90?ref=6b7a9826d737254eb70ab5a600ce5f334a7f922b", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do run }\n+!\n+! PR fortran/92208\n+!\n+! Contributed by Nils Reiche\n+!\n+program stringtest\n+  implicit none\n+  integer, parameter :: noVars = 2\n+\n+!  print*, \"varNames: \", createVarnames(\"var\",noVars)\n+  call function1(noVars,createVarnames(\"var\",noVars),\"path\")\n+\n+contains\n+\n+function createVarnames(string,noVars) result(stringArray)\n+  implicit none\n+  character(len=*),                        intent(in)  :: string\n+  integer,                                 intent(in)  :: noVars\n+  character(len=len_trim(string)+6), dimension(noVars) :: stringArray\n+  integer :: i\n+  do i=1,noVars\n+    write(stringArray(i),'(a,i0)') string, i\n+  enddo\n+end function createVarnames\n+\n+subroutine function1(noVars,varNames,path)\n+  implicit none\n+  integer, intent(in)  :: noVars\n+  character(len=*), intent(in)  :: path\n+  character(len=*), dimension(noVars) :: varNames\n+\n+  if (path /= 'path') stop 1\n+  if (any(varNames /= ['var1', 'var2'])) stop 2\n+  !print*, \"function1-path    : \", trim(path)\n+  !print*, \"function1-varNames: \", varNames\n+end subroutine function1\n+\n+end program stringtest"}]}