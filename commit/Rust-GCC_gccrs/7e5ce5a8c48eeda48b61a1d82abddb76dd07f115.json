{"sha": "7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1Y2U1YThjNDhlZWRhNDhiNjFhMWQ4MmFiZGRiNzZkZDA3ZjExNQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2008-05-20T12:45:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:45:15Z"}, "message": "2008-05-20  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_aggr.adb\n\t(Build_Record_Aggr_Code): Fix wrong tests checking progenitors. Previous\n\ttests did not covered the case in which the type of the aggregate has\n\tno progenitors but some its parents has progenitors.\n\nFrom-SVN: r135620", "tree": {"sha": "86a4c4ec72f7e1277bec9d4bcde4167e2899a374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86a4c4ec72f7e1277bec9d4bcde4167e2899a374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "685094bfdee3a606aa8ebf491f4968d9cd4879db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685094bfdee3a606aa8ebf491f4968d9cd4879db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685094bfdee3a606aa8ebf491f4968d9cd4879db"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "af531ab6ed0714b8de29a8f557f3e3befc742d1a", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5ce5a8c48eeda48b61a1d82abddb76dd07f115/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=7e5ce5a8c48eeda48b61a1d82abddb76dd07f115", "patch": "@@ -2573,11 +2573,7 @@ package body Exp_Aggr is\n                   --  Ada 2005 (AI-251): If tagged type has progenitors we must\n                   --  also initialize tags of the secondary dispatch tables.\n \n-                  if Present (Abstract_Interfaces (Base_Type (Typ)))\n-                    and then not\n-                      Is_Empty_Elmt_List\n-                        (Abstract_Interfaces (Base_Type (Typ)))\n-                  then\n+                  if Has_Abstract_Interfaces (Base_Type (Typ)) then\n                      Init_Secondary_Tags\n                        (Typ        => Base_Type (Typ),\n                         Target     => Target,\n@@ -3084,10 +3080,7 @@ package body Exp_Aggr is\n          --  abstract interfaces we must also initialize the tags of the\n          --  secondary dispatch tables.\n \n-         if Present (Abstract_Interfaces (Base_Type (Typ)))\n-           and then not\n-             Is_Empty_Elmt_List (Abstract_Interfaces (Base_Type (Typ)))\n-         then\n+         if Has_Abstract_Interfaces (Base_Type (Typ)) then\n             Init_Secondary_Tags\n               (Typ        => Base_Type (Typ),\n                Target     => Target,\n@@ -3317,8 +3310,10 @@ package body Exp_Aggr is\n         and then Ekind (Current_Scope) /= E_Return_Statement\n         and then not Is_Limited_Type (Typ)\n       then\n-         Establish_Transient_Scope (Aggr, Sec_Stack =>\n-           Is_Controlled (Typ) or else Has_Controlled_Component (Typ));\n+         Establish_Transient_Scope\n+           (Aggr,\n+            Sec_Stack =>\n+              Is_Controlled (Typ) or else Has_Controlled_Component (Typ));\n       end if;\n \n       Insert_Actions_After (N, Late_Expansion (Aggr, Typ, Occ, Obj => Obj));"}]}