{"sha": "e5a3a5b240d311cd638a0d356952d42966ba458e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhM2E1YjI0MGQzMTFjZDYzOGEwZDM1Njk1MmQ0Mjk2NmJhNDU4ZQ==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "pfeifer@dbai.tuwien.ac.at", "date": "2003-05-20T22:29:54Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2003-05-20T22:29:54Z"}, "message": "stl_alloc.h (__default_alloc_template::_S_chunk_alloc): Cast via void* to avoid -Wcast-align warnings.\n\n\t* include/bits/stl_alloc.h (__default_alloc_template::_S_chunk_alloc):\n\tCast via void* to avoid -Wcast-align warnings.\n\t(__default_alloc_template::_S_refill): Likewise.\n\nFrom-SVN: r67041", "tree": {"sha": "3d8d6a5044caa795cfe57499cfb3a2710e5e7289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8d6a5044caa795cfe57499cfb3a2710e5e7289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5a3a5b240d311cd638a0d356952d42966ba458e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a3a5b240d311cd638a0d356952d42966ba458e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5a3a5b240d311cd638a0d356952d42966ba458e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a3a5b240d311cd638a0d356952d42966ba458e/comments", "author": null, "committer": null, "parents": [{"sha": "ca5e1be83df4629faf3bccabcc8e712447ac390e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5e1be83df4629faf3bccabcc8e712447ac390e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5e1be83df4629faf3bccabcc8e712447ac390e"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "3befd7100e85bd17e8d5b4e9127930cffe7382df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a3a5b240d311cd638a0d356952d42966ba458e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a3a5b240d311cd638a0d356952d42966ba458e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e5a3a5b240d311cd638a0d356952d42966ba458e", "patch": "@@ -1,3 +1,9 @@\n+2003-05-21  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\t* include/bits/stl_alloc.h (__default_alloc_template::_S_chunk_alloc):\n+\tCast via void* to avoid -Wcast-align warnings.\n+\t(__default_alloc_template::_S_refill): Likewise.\n+\n 2003-05-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/README: Move to..."}, {"sha": "4bbdd60b2e141ec652525c1d5a6ccfeed652d182", "filename": "libstdc++-v3/include/bits/stl_alloc.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a3a5b240d311cd638a0d356952d42966ba458e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a3a5b240d311cd638a0d356952d42966ba458e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h?ref=e5a3a5b240d311cd638a0d356952d42966ba458e", "patch": "@@ -449,8 +449,8 @@ namespace std\n               _Obj* volatile* __my_free_list =\n                 _S_free_list + _S_freelist_index(__bytes_left);\n \n-              ((_Obj*)_S_start_free) -> _M_free_list_link = *__my_free_list;\n-              *__my_free_list = (_Obj*)_S_start_free;\n+              ((_Obj*)(void*)_S_start_free) -> _M_free_list_link = *__my_free_list;\n+              *__my_free_list = (_Obj*)(void*)_S_start_free;\n             }\n           _S_start_free = (char*) __new_alloc::allocate(__bytes_to_get);\n           if (_S_start_free == 0)\n@@ -508,12 +508,12 @@ namespace std\n       __my_free_list = _S_free_list + _S_freelist_index(__n);\n \n       // Build free list in chunk.\n-      __result = (_Obj*)__chunk;\n-      *__my_free_list = __next_obj = (_Obj*)(__chunk + __n);\n+      __result = (_Obj*)(void*)__chunk;\n+      *__my_free_list = __next_obj = (_Obj*)(void*)(__chunk + __n);\n       for (__i = 1; ; __i++)\n         {\n \t  __current_obj = __next_obj;\n-          __next_obj = (_Obj*)((char*)__next_obj + __n);\n+          __next_obj = (_Obj*)(void*)((char*)__next_obj + __n);\n \t  if (__nobjs - 1 == __i)\n \t    {\n \t      __current_obj -> _M_free_list_link = 0;"}]}