{"sha": "75f5cbb17be9159186a26070ab66587b01646fd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVmNWNiYjE3YmU5MTU5MTg2YTI2MDcwYWI2NjU4N2IwMTY0NmZkOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-08-28T21:05:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-08-28T21:05:48Z"}, "message": "move.h (swap(_Tp(&)[_Nm], _Tp(&)[_Nm])): Remove workaround for c++/49045.\n\n2011-08-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/move.h (swap(_Tp(&)[_Nm], _Tp(&)[_Nm])): Remove\n\tworkaround for c++/49045.\n\t* include/bits/algorithmfwd.h: Likewise.\n\nFrom-SVN: r178147", "tree": {"sha": "dfbd51eb529a091379834a478a1fcff04caf9e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfbd51eb529a091379834a478a1fcff04caf9e3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75f5cbb17be9159186a26070ab66587b01646fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f5cbb17be9159186a26070ab66587b01646fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75f5cbb17be9159186a26070ab66587b01646fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f5cbb17be9159186a26070ab66587b01646fd8/comments", "author": null, "committer": null, "parents": [{"sha": "892a371f3b8c8ce79f59540908a8660cfc07f880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892a371f3b8c8ce79f59540908a8660cfc07f880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892a371f3b8c8ce79f59540908a8660cfc07f880"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "69e297de9433b411b8cc2d304e7530ff61444cc5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f5cbb17be9159186a26070ab66587b01646fd8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f5cbb17be9159186a26070ab66587b01646fd8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=75f5cbb17be9159186a26070ab66587b01646fd8", "patch": "@@ -1,3 +1,9 @@\n+2011-08-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/move.h (swap(_Tp(&)[_Nm], _Tp(&)[_Nm])): Remove\n+\tworkaround for c++/49045.\n+\t* include/bits/algorithmfwd.h: Likewise.\n+\n 2011-08-25  Tom Tromey  <tromey@redhat.com>\n \n \t* testsuite/libstdc++-prettyprinters/simple.cc: New file."}, {"sha": "cc0b98ed7d280b63629ab230eebed11a714f3849", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f5cbb17be9159186a26070ab66587b01646fd8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f5cbb17be9159186a26070ab66587b01646fd8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=75f5cbb17be9159186a26070ab66587b01646fd8", "patch": "@@ -558,9 +558,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Tp, size_t _Nm>\n     void\n-    swap(_Tp (&)[_Nm], _Tp (&)[_Nm])\n+    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n-    noexcept(__is_nothrow_swappable<_Tp>::value)\n+    noexcept(noexcept(swap(*__a, *__b)))\n #endif\n     ;\n "}, {"sha": "f5beb22bb8d922374dddf26ac4fc68e846c533f9", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f5cbb17be9159186a26070ab66587b01646fd8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f5cbb17be9159186a26070ab66587b01646fd8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=75f5cbb17be9159186a26070ab66587b01646fd8", "patch": "@@ -152,21 +152,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __b = _GLIBCXX_MOVE(__tmp);\n     }\n \n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n-  // To work around c++/49045.\n-  template<typename _Tp>\n-    struct __is_nothrow_swappable\n-    { static const bool value = noexcept(swap(std::declval<_Tp&>(),\n-\t\t\t\t\t      std::declval<_Tp&>())); };\n-#endif\n-\n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // DR 809. std::swap should be overloaded for array types.\n   template<typename _Tp, size_t _Nm>\n     inline void\n     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n-    noexcept(__is_nothrow_swappable<_Tp>::value)\n+    noexcept(noexcept(swap(*__a, *__b)))\n #endif\n     {\n       for (size_t __n = 0; __n < _Nm; ++__n)"}]}