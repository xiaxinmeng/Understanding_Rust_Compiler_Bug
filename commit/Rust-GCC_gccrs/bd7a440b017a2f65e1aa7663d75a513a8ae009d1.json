{"sha": "bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3YTQ0MGIwMTdhMmY2NWUxYWE3NjYzZDc1YTUxM2E4YWUwMDlkMQ==", "commit": {"author": {"name": "Michael Spertus", "email": "mike_spertus@symantec.com", "date": "2012-03-02T05:54:24Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-03-02T05:54:24Z"}, "message": "type_traits (typelist): To __reflection_typelist.\n\n2012-03-01  Michael Spertus  <mike_spertus@symantec.com>\n\n\t* include/tr2/type_traits (typelist): To __reflection_typelist.\n\t(first, rest, empty): Remove.\n\nFrom-SVN: r184773", "tree": {"sha": "2d63d06a9d6a86101f18342cd25c2d7578c4c55f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d63d06a9d6a86101f18342cd25c2d7578c4c55f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7a440b017a2f65e1aa7663d75a513a8ae009d1/comments", "author": null, "committer": null, "parents": [{"sha": "cbef15a5badca339a861269ae3e0985ff59aa609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbef15a5badca339a861269ae3e0985ff59aa609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbef15a5badca339a861269ae3e0985ff59aa609"}], "stats": {"total": 37, "additions": 15, "deletions": 22}, "files": [{"sha": "112ac3d170f720300e564ade12a12878d5ed0df8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7a440b017a2f65e1aa7663d75a513a8ae009d1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7a440b017a2f65e1aa7663d75a513a8ae009d1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "patch": "@@ -1,3 +1,8 @@\n+2012-03-01  Michael Spertus  <mike_spertus@symantec.com>\n+\n+\t* include/tr2/type_traits (typelist): To __reflection_typelist.\n+\t(first, rest, empty): Remove.\n+\n 2012-03-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/Makefile.am (CLEANFILES): Add *.gdb."}, {"sha": "eb8c012d589566cea7e1b931b2b5346b5f1b0036", "filename": "libstdc++-v3/include/tr2/type_traits", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7a440b017a2f65e1aa7663d75a513a8ae009d1/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7a440b017a2f65e1aa7663d75a513a8ae009d1/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Ftype_traits?ref=bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "patch": "@@ -1,6 +1,6 @@\n // TR2 <type_traits> -*- C++ -*-\n \n-// Copyright (C) 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2011, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,60 +53,48 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  Simple typelist. Compile-time list of types.\n    */\n   template<typename... _Elements>\n-    struct typelist;\n+    struct __reflection_typelist;\n \n   /// Specialization for an empty typelist.\n   template<>\n-    struct typelist<>\n+    struct __reflection_typelist<>\n     {\n-      typedef std::true_type \t\t\tempty;\n+      typedef std::true_type\t\t\t\t\tempty;\n     };\n \n   /// Partial specialization.\n   template<typename _First, typename... _Rest>\n-    struct typelist<_First, _Rest...>\n+    struct __reflection_typelist<_First, _Rest...>\n     {\n-      typedef std::false_type \t\t\tempty;\n+      typedef std::false_type\t\t\t\t\tempty;\n \n       struct first\n       {\n-\ttypedef _First \t\t\t\ttype;\n+\ttypedef _First\t\t\t\t\t\ttype;\n       };\n \n       struct rest\n       {\n-\ttypedef typelist<_Rest...> \t\ttype;\n+\ttypedef __reflection_typelist<_Rest...>\t\t\ttype;\n       };\n     };\n \n   /// Sequence abstraction metafunctions for manipulating a typelist.\n \n \n-  /// Return the first type in a typelist.\n-  template<typename _Tp>\n-    struct first : public _Tp::first { };\n-\n-  /// Return the typelist minus the first type.\n-  template<typename _Tp>\n-    struct rest : public _Tp::rest { };\n-\n-  /// Query to see if a typelist is empty.\n-  template<typename _Tp>\n-    struct empty : public _Tp::empty { };\n-\n \n   /// Enumerate all the base classes of a class. Form of a typelist.\n   template<typename _Tp>\n     struct bases\n     {\n-      typedef typelist<__bases(_Tp)...> \ttype;\n+      typedef __reflection_typelist<__bases(_Tp)...>\t\ttype;\n     };\n \n   /// Enumerate all the direct base classes of a class. Form of a typelist.\n   template<typename _Tp>\n     struct direct_bases\n     {\n-      typedef typelist<__direct_bases(_Tp)...> \ttype;\n+      typedef __reflection_typelist<__direct_bases(_Tp)...>\ttype;\n     };\n \n   /// @} group metaprogramming"}]}