{"sha": "75404109dce57d2f8dac0f90808010233928418f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0MDQxMDlkY2U1N2QyZjhkYWMwZjkwODA4MDEwMjMzOTI4NDE4Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-23T10:05:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-23T10:05:51Z"}, "message": "libstdc++: Avoid \"__lockable\" name defined as macro by newlib\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/mutex (__detail::__try_lock_impl): Rename\n\tparameter to avoid clashing with newlib's __lockable macro.\n\t(try_lock): Add 'inline' specifier.\n\t* testsuite/17_intro/names.cc: Add check for __lockable.\n\t* testsuite/30_threads/try_lock/5.cc: Add options for pthreads.", "tree": {"sha": "882b5fd416fc1f5c37e6bf9ee5c923bb284c77cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/882b5fd416fc1f5c37e6bf9ee5c923bb284c77cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75404109dce57d2f8dac0f90808010233928418f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75404109dce57d2f8dac0f90808010233928418f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75404109dce57d2f8dac0f90808010233928418f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75404109dce57d2f8dac0f90808010233928418f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da13e4ebebb07a47d5fb50eab8893f8fe38683df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da13e4ebebb07a47d5fb50eab8893f8fe38683df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da13e4ebebb07a47d5fb50eab8893f8fe38683df"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "eeb51fdb840e4f0fc8d76094f03eac188adf4b6a", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75404109dce57d2f8dac0f90808010233928418f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75404109dce57d2f8dac0f90808010233928418f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=75404109dce57d2f8dac0f90808010233928418f", "patch": "@@ -517,9 +517,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // Lock the last lockable, after all previous ones are locked.\n     template<typename _Lockable>\n       inline int\n-      __try_lock_impl(_Lockable& __lockable)\n+      __try_lock_impl(_Lockable& __l)\n       {\n-\tif (unique_lock<_Lockable> __lock{__lockable, try_to_lock})\n+\tif (unique_lock<_Lockable> __lock{__l, try_to_lock})\n \t  {\n \t    __lock.release();\n \t    return -1;\n@@ -585,7 +585,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  Sequentially calls try_lock() on each argument.\n    */\n   template<typename _L1, typename _L2, typename... _L3>\n-    int\n+    inline int\n     try_lock(_L1& __l1, _L2& __l2, _L3&... __l3)\n     {\n       return __detail::__try_lock_impl(__l1, __l2, __l3...);"}, {"sha": "534dab70ff51226d00cc27b8a94711ffdc6a699e", "filename": "libstdc++-v3/testsuite/17_intro/names.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75404109dce57d2f8dac0f90808010233928418f/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75404109dce57d2f8dac0f90808010233928418f/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc?ref=75404109dce57d2f8dac0f90808010233928418f", "patch": "@@ -16,6 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n+// { dg-add-options no_pch }\n \n // Define macros for some common variables names that we must not use for\n // naming variables, parameters etc. in the library.\n@@ -216,6 +217,11 @@\n #undef y\n #endif\n \n+#if ! __has_include(<newlib.h>)\n+// newlib's <sys/cdefs.h> defines __lockable as a macro, so we can't use it.\n+# define __lockable\t\tcannot be used as an identifier\n+#endif\n+\n #ifdef __sun__\n // See https://gcc.gnu.org/ml/libstdc++/2019-05/msg00175.html\n #undef ptr"}, {"sha": "b9ce1cc9b90e32c1fe1dadd8d60b0c10bf80f010", "filename": "libstdc++-v3/testsuite/30_threads/try_lock/5.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75404109dce57d2f8dac0f90808010233928418f/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftry_lock%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75404109dce57d2f8dac0f90808010233928418f/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftry_lock%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftry_lock%2F5.cc?ref=75404109dce57d2f8dac0f90808010233928418f", "patch": "@@ -1,4 +1,7 @@\n-// { dg-do run { target c++11 } }\n+// { dg-do run }\n+// { dg-additional-options \"-pthread\" { target pthread } }\n+// { dg-require-effective-target c++11 }\n+// { dg-require-gthreads \"\" }\n \n #include <mutex>\n #include <testsuite_hooks.h>"}]}