{"sha": "db04386fd134ed6619ea9acf279ee245afd440a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIwNDM4NmZkMTM0ZWQ2NjE5ZWE5YWNmMjc5ZWUyNDVhZmQ0NDBhMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-08-13T17:02:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-13T17:02:00Z"}, "message": "pt.c (tsubst_copy): Hush warning.\n\n\t* pt.c (tsubst_copy): Hush warning.\n\t* rtti.c (get_tinfo_fn): Also set DECL_IGNORED_P.\n\nFrom-SVN: r21700", "tree": {"sha": "bd0b68783fd9c04d0d44c54d2aa3fa4fc398d983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd0b68783fd9c04d0d44c54d2aa3fa4fc398d983"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db04386fd134ed6619ea9acf279ee245afd440a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db04386fd134ed6619ea9acf279ee245afd440a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db04386fd134ed6619ea9acf279ee245afd440a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db04386fd134ed6619ea9acf279ee245afd440a3/comments", "author": null, "committer": null, "parents": [{"sha": "af79bb862a1182bd01038e0bc333c7229e359465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af79bb862a1182bd01038e0bc333c7229e359465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af79bb862a1182bd01038e0bc333c7229e359465"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "b99f23b236be43f904cd8bcb97eebb4b03973493", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db04386fd134ed6619ea9acf279ee245afd440a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db04386fd134ed6619ea9acf279ee245afd440a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=db04386fd134ed6619ea9acf279ee245afd440a3", "patch": "@@ -1,3 +1,9 @@\n+1998-08-13  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (tsubst_copy): Hush warning.\n+\n+\t* rtti.c (get_tinfo_fn): Also set DECL_IGNORED_P.\n+\n 1998-08-12  Mark Mitchell  <mark@markmitchell.com>\n \n \t* pt.c (print_template_context): Don't abort when instantiating a"}, {"sha": "7bdd03c9d8754046a8c376978b645a69f5f19641", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db04386fd134ed6619ea9acf279ee245afd440a3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db04386fd134ed6619ea9acf279ee245afd440a3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=db04386fd134ed6619ea9acf279ee245afd440a3", "patch": "@@ -5649,7 +5649,7 @@ tsubst_copy (t, args, in_decl)\n \t     should find it again here during instantiation.  */\n \tmy_friendly_abort (0);\n       }\n-      break;\n+      return t;\n \n     case FIELD_DECL:\n       if (DECL_CONTEXT (t))"}, {"sha": "a86d6ed3a7818cf4a27c12a6571d0ec2a0783cc7", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db04386fd134ed6619ea9acf279ee245afd440a3/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db04386fd134ed6619ea9acf279ee245afd440a3/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=db04386fd134ed6619ea9acf279ee245afd440a3", "patch": "@@ -371,12 +371,14 @@ get_tinfo_fn (type)\n \n   /* We set DECL_CONTEXT for the benefit of backend stuff that wants to\n      know what type this artificial function is associated with.  dllexport\n-     handling, for instance.  This is a kludge, and the DECL_NO_STATIC_CHAIN\n-     bit is necessary to keep local classes from breaking.  */\n+     handling, for instance.  This is a kludge, and the\n+     DECL_NO_STATIC_CHAIN bit is necessary to keep local classes from\n+     breaking.  The DECL_IGNORED_P bit keeps dwarf2 from breaking.  */\n   if (IS_AGGR_TYPE (type))\n     {\n       DECL_CONTEXT (d) = type;\n       DECL_NO_STATIC_CHAIN (d) = 1;\n+      DECL_IGNORED_P (d) = 1;\n     }\n \n   pushdecl_top_level (d);"}]}