{"sha": "d48bb126eac73c0d1e311eb4084a6f62742fbf76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4YmIxMjZlYWM3M2MwZDFlMzExZWI0MDg0YTZmNjI3NDJmYmY3Ng==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-27T12:22:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:11Z"}, "message": "[Ada] Fix validity checks on attribute 'Old prefix\n\n2020-06-19  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Call Ensure_Valid\n\ton the expression of an object declaration that captures the\n\tvalue of 'Old prefix.", "tree": {"sha": "1a0571bd8e689cb2fc35201c5fce474eed8b70cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a0571bd8e689cb2fc35201c5fce474eed8b70cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d48bb126eac73c0d1e311eb4084a6f62742fbf76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48bb126eac73c0d1e311eb4084a6f62742fbf76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48bb126eac73c0d1e311eb4084a6f62742fbf76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48bb126eac73c0d1e311eb4084a6f62742fbf76/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d57f8e40433cb73fa08fab92b3238a1981c7c037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d57f8e40433cb73fa08fab92b3238a1981c7c037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d57f8e40433cb73fa08fab92b3238a1981c7c037"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "30bb7cce1e47117df5962c65167d8ae9ae9c2be6", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48bb126eac73c0d1e311eb4084a6f62742fbf76/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48bb126eac73c0d1e311eb4084a6f62742fbf76/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=d48bb126eac73c0d1e311eb4084a6f62742fbf76", "patch": "@@ -4587,6 +4587,7 @@ package body Exp_Attr is\n          Typ     : constant Entity_Id := Etype (N);\n          CW_Temp : Entity_Id;\n          CW_Typ  : Entity_Id;\n+         Decl    : Node_Id;\n          Ins_Nod : Node_Id;\n          Subp    : Node_Id;\n          Temp    : Entity_Id;\n@@ -4685,13 +4686,15 @@ package body Exp_Attr is\n             CW_Temp := Make_Temporary (Loc, 'T');\n             CW_Typ  := Class_Wide_Type (Typ);\n \n-            Insert_Before_And_Analyze (Ins_Nod,\n+            Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => CW_Temp,\n                 Constant_Present    => True,\n                 Object_Definition   => New_Occurrence_Of (CW_Typ, Loc),\n                 Expression          =>\n-                  Convert_To (CW_Typ, Relocate_Node (Pref))));\n+                  Convert_To (CW_Typ, Relocate_Node (Pref)));\n+\n+            Insert_Before_And_Analyze (Ins_Nod, Decl);\n \n             --  Generate:\n             --    Temp : Typ renames Typ (CW_Temp);\n@@ -4709,12 +4712,15 @@ package body Exp_Attr is\n             --  Generate:\n             --    Temp : constant Typ := Pref;\n \n-            Insert_Before_And_Analyze (Ins_Nod,\n+            Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Temp,\n                 Constant_Present    => True,\n                 Object_Definition   => New_Occurrence_Of (Typ, Loc),\n-                Expression          => Relocate_Node (Pref)));\n+                Expression          => Relocate_Node (Pref));\n+\n+            Insert_Before_And_Analyze (Ins_Nod, Decl);\n+\n          end if;\n \n          if Present (Subp) then\n@@ -4726,7 +4732,7 @@ package body Exp_Attr is\n          --  to reflect the new placement of the prefix.\n \n          if Validity_Checks_On and then Validity_Check_Operands then\n-            Ensure_Valid (Pref);\n+            Ensure_Valid (Expression (Decl));\n          end if;\n \n          Rewrite (N, New_Occurrence_Of (Temp, Loc));"}]}