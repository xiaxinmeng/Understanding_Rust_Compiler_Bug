{"sha": "d7194dd6902e2787bb7c9ca49e79fbca11242cde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxOTRkZDY5MDJlMjc4N2JiN2M5Y2E0OWU3OWZiY2ExMTI0MmNkZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-05T16:26:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-05T16:26:36Z"}, "message": "Initial revision\n\nFrom-SVN: r14671", "tree": {"sha": "cb9e50bf756e93ec30224239c3c040912e23986a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb9e50bf756e93ec30224239c3c040912e23986a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7194dd6902e2787bb7c9ca49e79fbca11242cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7194dd6902e2787bb7c9ca49e79fbca11242cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7194dd6902e2787bb7c9ca49e79fbca11242cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7194dd6902e2787bb7c9ca49e79fbca11242cde/comments", "author": null, "committer": null, "parents": [{"sha": "50eb43cabc93050267d2357cd886910f1fac5b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50eb43cabc93050267d2357cd886910f1fac5b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50eb43cabc93050267d2357cd886910f1fac5b73"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "6a9dd48b1a30719764e06eab23624dc5be546923", "filename": "gcc/config/float-i128.h", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7194dd6902e2787bb7c9ca49e79fbca11242cde/gcc%2Fconfig%2Ffloat-i128.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7194dd6902e2787bb7c9ca49e79fbca11242cde/gcc%2Fconfig%2Ffloat-i128.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-i128.h?ref=d7194dd6902e2787bb7c9ca49e79fbca11242cde", "patch": "@@ -0,0 +1,96 @@\n+/* float.h for target with IEEE 32, 64 and 128 bit floating point formats */\n+#ifndef _FLOAT_H_\n+#define _FLOAT_H_\n+/* Produced by enquire version 4.3, CWI, Amsterdam */\n+\n+   /* Radix of exponent representation */\n+#undef FLT_RADIX\n+#define FLT_RADIX 2\n+   /* Number of base-FLT_RADIX digits in the significand of a float */\n+#undef FLT_MANT_DIG\n+#define FLT_MANT_DIG 24\n+   /* Number of decimal digits of precision in a float */\n+#undef FLT_DIG\n+#define FLT_DIG 6\n+   /* Addition rounds to 0: zero, 1: nearest, 2: +inf, 3: -inf, -1: unknown */\n+#undef FLT_ROUNDS\n+#define FLT_ROUNDS 1\n+   /* Difference between 1.0 and the minimum float greater than 1.0 */\n+#undef FLT_EPSILON\n+#define FLT_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised float */\n+#undef FLT_MIN_EXP\n+#define FLT_MIN_EXP (-125)\n+   /* Minimum normalised float */\n+#undef FLT_MIN\n+#define FLT_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised float */\n+#undef FLT_MIN_10_EXP\n+#define FLT_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable float */\n+#undef FLT_MAX_EXP\n+#define FLT_MAX_EXP 128\n+   /* Maximum float */\n+#undef FLT_MAX\n+#define FLT_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable float */\n+#undef FLT_MAX_10_EXP\n+#define FLT_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 15\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 2.2204460492503131e-16\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-1021)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 2.2250738585072014e-308\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-307)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 1024\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 1.7976931348623157e+308\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 308\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 113\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 33\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 1.925929944387235853055977942584927319E-34L\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-16381)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 3.362103143112093506262677817321752603E-4932L\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-4931)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 16384\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 1.189731495357231765085759326628007016E+4932L\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 4932\n+\n+#endif /*  _FLOAT_H_ */"}]}