{"sha": "ae0a3dfbf49c9bcd36520a722c544f30f19b441b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwYTNkZmJmNDljOWJjZDM2NTIwYTcyMmM1NDRmMzBmMTliNDQxYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-08-02T22:50:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-08-02T22:50:39Z"}, "message": "(int_fits_type_p): Negative ints never fit unsigned types, and\nunsigned ints with top-bit-set never fit signed types.\n\nFrom-SVN: r14637", "tree": {"sha": "a70c18d2e75c8534b2bf138f1c9295a458f59432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a70c18d2e75c8534b2bf138f1c9295a458f59432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae0a3dfbf49c9bcd36520a722c544f30f19b441b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0a3dfbf49c9bcd36520a722c544f30f19b441b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0a3dfbf49c9bcd36520a722c544f30f19b441b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0a3dfbf49c9bcd36520a722c544f30f19b441b/comments", "author": null, "committer": null, "parents": [{"sha": "272e2587a20cf755e9180937aec2d64a7fc35b84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/272e2587a20cf755e9180937aec2d64a7fc35b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/272e2587a20cf755e9180937aec2d64a7fc35b84"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "658c05f86840adffad3f7d63d25bbc7557b2e120", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0a3dfbf49c9bcd36520a722c544f30f19b441b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0a3dfbf49c9bcd36520a722c544f30f19b441b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ae0a3dfbf49c9bcd36520a722c544f30f19b441b", "patch": "@@ -4346,12 +4346,18 @@ int_fits_type_p (c, type)\n     return (! (TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST\n \t       && INT_CST_LT_UNSIGNED (TYPE_MAX_VALUE (type), c))\n \t    && ! (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST\n-\t\t  && INT_CST_LT_UNSIGNED (c, TYPE_MIN_VALUE (type))));\n+\t\t  && INT_CST_LT_UNSIGNED (c, TYPE_MIN_VALUE (type)))\n+\t    /* Negative ints never fit unsigned types.  */\n+\t    && ! (TREE_INT_CST_HIGH (c) < 0\n+\t\t  && ! TREE_UNSIGNED (TREE_TYPE (c))));\n   else\n     return (! (TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST\n \t       && INT_CST_LT (TYPE_MAX_VALUE (type), c))\n \t    && ! (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST\n-\t\t  && INT_CST_LT (c, TYPE_MIN_VALUE (type))));\n+\t\t  && INT_CST_LT (c, TYPE_MIN_VALUE (type)))\n+\t    /* Unsigned ints with top bit set never fit signed types.  */\n+\t    && ! (TREE_INT_CST_HIGH (c) < 0\n+\t\t  && TREE_UNSIGNED (TREE_TYPE (c))));\n }\n \n /* Return the innermost context enclosing DECL that is"}]}