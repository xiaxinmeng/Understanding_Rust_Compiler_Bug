{"sha": "84946e72dc8d43511142c4da32e846957d869391", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ5NDZlNzJkYzhkNDM1MTExNDJjNGRhMzJlODQ2OTU3ZDg2OTM5MQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-06-20T06:48:28Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-06-20T06:48:28Z"}, "message": "re PR libstdc++/22111 (libstdc++ abi_check)\n\nmake\n2005-06-19  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/22111\n\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Remove\n\tGLIBCXX_TEST_ABI. Remove duplicate _GLIBCXX_ASM_SYMVER define.\n\tDon't enable abi testing unless versioned.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.am (check-abi): Remove conditional.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/libstdc++-abi/abi.exp: Call build_support, then check\n\tv3-symver before proceeding.\n\t* testsuite/lib/libstdc++.exp (libstdc++-dg-test): Set v3-symvers\n\tif _GLIBCXX_SYMVER.\n\nFrom-SVN: r101204", "tree": {"sha": "60c1e4cbc804709e773671a81d783672ffa7bec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60c1e4cbc804709e773671a81d783672ffa7bec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84946e72dc8d43511142c4da32e846957d869391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84946e72dc8d43511142c4da32e846957d869391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84946e72dc8d43511142c4da32e846957d869391", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84946e72dc8d43511142c4da32e846957d869391/comments", "author": null, "committer": null, "parents": [{"sha": "019275a2ca09d2b4f2b8df9164b1e8072b80c0d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019275a2ca09d2b4f2b8df9164b1e8072b80c0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019275a2ca09d2b4f2b8df9164b1e8072b80c0d8"}], "stats": {"total": 126, "additions": 40, "deletions": 86}, "files": [{"sha": "b72825ef8525876ff525d7cc35908400bd6048b4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -1,3 +1,17 @@\n+2005-06-19  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/22111\n+\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Remove\n+\tGLIBCXX_TEST_ABI. Remove duplicate _GLIBCXX_ASM_SYMVER define.\n+\tDon't enable abi testing unless versioned.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.am (check-abi): Remove conditional.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/libstdc++-abi/abi.exp: Call build_support, then check\n+\tv3-symver before proceeding.\n+\t* testsuite/lib/libstdc++.exp (libstdc++-dg-test): Set v3-symvers\n+\tif _GLIBCXX_SYMVER.\n+\t\n 2005-06-17  Paolo Carlini  <pcarlini@suse.de>\n \n         Port from libstdcxx_so_7-branch:"}, {"sha": "5350407138b1283db209033ba0c23cac2c55be95", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -146,8 +146,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@"}, {"sha": "7f6cad6cc50c9c6a6973fed97ec2bb54dd648768", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -531,14 +531,15 @@ dnl\n dnl GLIBCXX_ENABLE_SYMVERS and GLIBCXX_IS_NATIVE must be done before this.\n dnl\n dnl Sets:\n-dnl  enable_abi_check / GLIBCXX_TEST_ABI\n+dnl  enable_abi_check \n dnl  GLIBCXX_TEST_WCHAR_T\n dnl  GLIBCXX_TEST_THREAD\n dnl Substs:\n dnl  baseline_dir\n dnl\n AC_DEFUN([GLIBCXX_CONFIGURE_TESTSUITE], [\n-  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes; then\n+  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes && \n+\t\t\ttest $enable_symvers != no; then\n     # Do checks for resource limit functions.\n     GLIBCXX_CHECK_SETRLIMIT\n \n@@ -560,12 +561,10 @@ AC_DEFUN([GLIBCXX_CONFIGURE_TESTSUITE], [\n     # CXX_FOR_BUILD.\n     enable_abi_check=no\n   fi\n-\n+  \n   # Export file names for ABI checking.\n   baseline_dir=\"$glibcxx_srcdir/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n   AC_SUBST(baseline_dir)\n-\n-  GLIBCXX_CONDITIONAL(GLIBCXX_TEST_ABI, test $enable_abi_check = yes)\n ])\n \n \n@@ -1760,20 +1759,6 @@ case $enable_symvers in\n     ;;\n esac\n \n-AH_VERBATIM([_GLIBCXX_SYMVERextra],\n-[/* Define symbol versioning in assember directives. If symbol\n-   versioning is being used, and the assembler supports this kind of\n-   thing, then use it.\n-   \n-   NB: _GLIBCXX_AT_AT is a hack to work around quoting issues in m4. */\n-\n-#if _GLIBCXX_SYMVER\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n-   asm (\".symver \" #cur \",\" #old _GLIBCXX_AT_AT #version);\n-#else\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n-#endif])\n-\n # In addition, need this to deal with std::size_t mangling in\n # src/compatibility.cc.  In a perfect world, could use\n # typeid(std::size_t).name()[0] to do direct substitution."}, {"sha": "41959105a6090018ff629290f5a20350e4d5d01d", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -670,19 +670,6 @@\n /* Define to use symbol versioning in the shared library. */\n #undef _GLIBCXX_SYMVER\n \n-/* Define symbol versioning in assember directives. If symbol\n-   versioning is being used, and the assembler supports this kind of\n-   thing, then use it.\n-   \n-   NB: _GLIBCXX_AT_AT is a hack to work around quoting issues in m4. */\n-\n-#if _GLIBCXX_SYMVER\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n-   asm (\".symver \" #cur \",\" #old _GLIBCXX_AT_AT #version);\n-#else\n-  #define _GLIBCXX_ASM_SYMVER(cur, old, version)\n-#endif\n-\n /* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,\n    <stdio.h>, and <stdlib.h> can be used or exposed. */\n #undef _GLIBCXX_USE_C99"}, {"sha": "ca2defe7992deb5dffec2ff9952d3fa0e2819eb7", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV SYMVER_MAP port_specific_symbol_files GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE baseline_dir GLIBCXX_TEST_ABI_TRUE GLIBCXX_TEST_ABI_FALSE ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV SYMVER_MAP port_specific_symbol_files GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -87354,9 +87354,6 @@ _ACEOF\n     ;;\n esac\n \n-\n-\n-\n # In addition, need this to deal with std::size_t mangling in\n # src/compatibility.cc.  In a perfect world, could use\n # typeid(std::size_t).name()[0] to do direct substitution.\n@@ -87489,7 +87486,8 @@ echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n # This depends on GLIBCXX_ENABLE_SYMVERS and GLIBCXX_IS_NATIVE.\n \n-  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes; then\n+  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes &&\n+\t\t\ttest $enable_symvers != no; then\n     # Do checks for resource limit functions.\n \n   setrlimit_have_headers=yes\n@@ -88208,8 +88206,6 @@ done\n \n \n \n-\n-\n # Propagate the target-specific source directories through the build chain.\n ATOMICITY_SRCDIR=config/${atomicity_dir}\n ATOMIC_WORD_SRCDIR=config/${atomic_word_dir}\n@@ -88304,17 +88300,6 @@ fi\n \n \n \n-if test $enable_abi_check = yes; then\n-  GLIBCXX_TEST_ABI_TRUE=\n-  GLIBCXX_TEST_ABI_FALSE='#'\n-else\n-  GLIBCXX_TEST_ABI_TRUE='#'\n-  GLIBCXX_TEST_ABI_FALSE=\n-fi\n-\n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure\n@@ -88663,13 +88648,6 @@ echo \"$as_me: error: conditional \\\"GLIBCXX_BUILD_VERSIONED_SHLIB\\\" was never def\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n-if test -z \"${GLIBCXX_TEST_ABI_TRUE}\" && test -z \"${GLIBCXX_TEST_ABI_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"GLIBCXX_TEST_ABI\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"GLIBCXX_TEST_ABI\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_clean_files_save=$ac_clean_files\n@@ -89339,8 +89317,6 @@ s,@port_specific_symbol_files@,$port_specific_symbol_files,;t t\n s,@GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@,$GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE,;t t\n s,@GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@,$GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE,;t t\n s,@baseline_dir@,$baseline_dir,;t t\n-s,@GLIBCXX_TEST_ABI_TRUE@,$GLIBCXX_TEST_ABI_TRUE,;t t\n-s,@GLIBCXX_TEST_ABI_FALSE@,$GLIBCXX_TEST_ABI_FALSE,;t t\n s,@ATOMICITY_SRCDIR@,$ATOMICITY_SRCDIR,;t t\n s,@ATOMIC_WORD_SRCDIR@,$ATOMIC_WORD_SRCDIR,;t t\n s,@ABI_TWEAKS_SRCDIR@,$ABI_TWEAKS_SRCDIR,;t t"}, {"sha": "7f27b85491d748bed2a3c5a3f5ab11adbc3e4c9f", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -114,8 +114,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@"}, {"sha": "f3aaf3eae7f3b49db5561a2afb93ae27a769942c", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -131,8 +131,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@"}, {"sha": "9e11edd22293cd4ce35b340b0a978ee889be474c", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -170,8 +170,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@"}, {"sha": "9f4bacab3e7a31c54fefe7224fa87427ceffe7bd", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -114,8 +114,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@"}, {"sha": "076115b2e4c3aad99a1464bcd2729fb30009dad2", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -150,8 +150,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@"}, {"sha": "facf63a900f98d313de51896b5cfd4490f7391a3", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -89,14 +89,10 @@ new-abi-baseline:\n \t  fi; \\\n \t  ${extract_symvers} ../src/.libs/libstdc++.so $${output})\n \n-if GLIBCXX_TEST_ABI\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n check-abi: baseline_symbols site.exp\n \t-@runtest --tool libstdc++ abi.exp\n-else\n-check-abi:\n-endif\n \n # Runs the testsuite, but in compile only mode.\n # Can be used to test sources with non-GNU FE's at various warning"}, {"sha": "6edbf028cfaa09bdc5293224cb42d203ced790f8", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -118,8 +118,6 @@ GLIBCXX_C_HEADERS_C_TRUE = @GLIBCXX_C_HEADERS_C_TRUE@\n GLIBCXX_HOSTED_FALSE = @GLIBCXX_HOSTED_FALSE@\n GLIBCXX_HOSTED_TRUE = @GLIBCXX_HOSTED_TRUE@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n-GLIBCXX_TEST_ABI_FALSE = @GLIBCXX_TEST_ABI_FALSE@\n-GLIBCXX_TEST_ABI_TRUE = @GLIBCXX_TEST_ABI_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n@@ -504,9 +502,8 @@ new-abi-baseline:\n \n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n-@GLIBCXX_TEST_ABI_TRUE@check-abi: baseline_symbols site.exp\n-@GLIBCXX_TEST_ABI_TRUE@\t-@runtest --tool libstdc++ abi.exp\n-@GLIBCXX_TEST_ABI_FALSE@check-abi:\n+check-abi: baseline_symbols site.exp\n+\t-@runtest --tool libstdc++ abi.exp\n check-compile: testsuite_files ${compile_script}\n \t-@(chmod + ${compile_script}; \\\n \t  ${compile_script} ${glibcxx_srcdir} ${glibcxx_builddir})"}, {"sha": "8471ed6c3b7698015dd8a6b216f945e701d6bace", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -277,6 +277,9 @@ set v3-wchar_t 0\n # True if the library supports threads.\n set v3-threads 0\n \n+# True if the library supports symbol versioning.\n+set v3-symver 0\n+\n # A string naming object files to be linked into all tests.\n set v3-test_objs \"\"\n \n@@ -313,17 +316,19 @@ proc v3_target_compile { source dest type options } {\n \n \n # Build the support objects linked in with the libstdc++ tests.  In\n-# addition, set v3-wchar_t, v3-threads, and v3-test_objs\n+# addition, set v3-wchar_t, v3-threads, v3-test_objs, and v3-symver\n # appropriately.\n proc v3-build_support {} {\n     global srcdir\n     global v3-wchar_t\n     global v3-threads\n     global v3-test_objs\n+    global v3-symver\n \n     # Figure out whether or not the library supports certain features.\n     set v3-wchar_t 0\n     set v3-threads 0\n+    set v3-symver 0\n     set v3-test_objs \"\"\n \n     set config_src \"config.cc\"\n@@ -337,6 +342,10 @@ proc v3-build_support {} {\n \tverbose -log \"wchar_t support detected\"\n \tset v3-wchar_t 1\n     }\n+    if { [string first \"_GLIBCXX_SYMVER\" $preprocessed] != -1 } {\n+\tverbose -log \"symbol versioning support detected\"\n+\tset v3-symver 1\n+    }\n     if { [string first \"__GTHREADS\" $preprocessed] != -1 } {\n \tverbose -log \"thread support detected\"\n \tset v3-threads 1"}, {"sha": "b5b469ed3073a50a261f4fbe46bac630c6002a34", "filename": "libstdc++-v3/testsuite/libstdc++-abi/abi.exp", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84946e72dc8d43511142c4da32e846957d869391/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp?ref=84946e72dc8d43511142c4da32e846957d869391", "patch": "@@ -15,8 +15,13 @@\n # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n \n # If there is no baseline file, or we can't find the library, skip\n-# this test.\n-if { ![info exists baseline_file] \\\n+# this test. Or, hey, if we don't support this kind of symbol\n+# versioning test: don't run it.\n+\n+# Build the support objects.\n+v3-build_support\n+\n+if { (${v3-symver} == 0) || ![info exists baseline_file] \\\n \t || ![file exists $baseline_file] \\\n \t || ![file exists \"../src/.libs/libstdc++.so\"] } {\n     return\n@@ -26,9 +31,6 @@ if { ![info exists baseline_file] \\\n remote_exec \"build\" \"$srcdir/../scripts/extract_symvers\" \\\n     [list \"../src/.libs/libstdc++.so\" \"current_symbols.txt\"]\n \n-# Build the support objects.\n-v3-build_support\n-\n # Build the abi_check program.\n if { [v3_target_compile \"$srcdir/testsuite_abi_check.cc\" \"abi_check\" \\\n       \"executable\" [list \"additional_flags=-w\"]] != \"\" } {"}]}