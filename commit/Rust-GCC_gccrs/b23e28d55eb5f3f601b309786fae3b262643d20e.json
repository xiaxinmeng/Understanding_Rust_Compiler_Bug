{"sha": "b23e28d55eb5f3f601b309786fae3b262643d20e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIzZTI4ZDU1ZWI1ZjNmNjAxYjMwOTc4NmZhZTNiMjYyNjQzZDIwZQ==", "commit": {"author": {"name": "Jose Ruiz", "email": "ruiz@act-europe.fr", "date": "2004-10-04T14:51:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T14:51:17Z"}, "message": "targparm.ads, [...] (Targparm_Tags): Add PAS value corresponding to the Preallocated_Stacks flags in System.\n\n2004-10-04  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* targparm.ads, targparm.adb (Targparm_Tags): Add PAS value\n\tcorresponding to the Preallocated_Stacks flags in System.\n\t(Get_Target_Parameters): Including the processing for\n\tPreallocated_Stacks.\n\n\t* system.ads, system-vxworks-x86.ads, system-darwin-ppc.ads,\n\tsystem-vms_64.ads, system-unixware.ads, system-linux-ia64.ads,\n\tsystem-freebsd-x86.ads, system-lynxos-ppc.ads, system-lynxos-x86.ads,\n\tsystem-linux-x86_64.ads, system-tru64.ads, system-aix.ads,\n\tsystem-vxworks-sparcv9.ads, system-vxworks-xscale.ads,\n\tsystem-solaris-x86.ads, system-irix-o32.ads, system-irix-n32.ads,\n\tsystem-hpux.ads, system-vxworks-m68k.ads, system-linux-x86.ads,\n\tsystem-vxworks-mips.ads, system-os2.ads, system-interix.ads,\n\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads,\n\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads,\n\tsystem-vxworks-alpha.ads: Add the flag Preallocated_Stacks, that is\n\tused to signal whether the compiler creates the required stacks and\n\tdescriptors for the different tasks (when True) or it is done by the\n\tunderlying operating system at run time (when False).\n\tIt is initially set to False in all targets.\n\n\t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Create the task stack\n\tif it is supported by the target.\n\t(Make_Task_Create_Call): Pass the stack address if it has been\n\tpreviously created. Otherwise pass a Null_Address.\n\n\t* snames.adb: Add _stack.\n\n\t* snames.ads: Add Name_uStack. Required to allow the expander to\n\tstatically allocated task stacks.\n\n\t* s-tarest.ads, s-tarest.adb (Create_Restricted_Task): Add\n\tStack_Address argument.\n\tCheck that its value is equal to Null_Address because this target does\n\tnot support the static stack allocation.\n\nFrom-SVN: r88488", "tree": {"sha": "7394d0a56f7edb0d1590b851334f4abd92b00005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7394d0a56f7edb0d1590b851334f4abd92b00005"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b23e28d55eb5f3f601b309786fae3b262643d20e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23e28d55eb5f3f601b309786fae3b262643d20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b23e28d55eb5f3f601b309786fae3b262643d20e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23e28d55eb5f3f601b309786fae3b262643d20e/comments", "author": null, "committer": null, "parents": [{"sha": "6fd459bb945fe50ec9c3d2ffc6a94243b5d062b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd459bb945fe50ec9c3d2ffc6a94243b5d062b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd459bb945fe50ec9c3d2ffc6a94243b5d062b5"}], "stats": {"total": 1506, "additions": 837, "deletions": 669}, "files": [{"sha": "f34a3a4b672060a74a20fcb3ec24b96c377af4f0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -1,3 +1,41 @@\n+2004-10-04  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* targparm.ads, targparm.adb (Targparm_Tags): Add PAS value\n+\tcorresponding to the Preallocated_Stacks flags in System.\n+\t(Get_Target_Parameters): Including the processing for\n+\tPreallocated_Stacks.\n+\n+\t* system.ads, system-vxworks-x86.ads, system-darwin-ppc.ads, \n+\tsystem-vms_64.ads, system-unixware.ads, system-linux-ia64.ads, \n+\tsystem-freebsd-x86.ads, system-lynxos-ppc.ads, system-lynxos-x86.ads, \n+\tsystem-linux-x86_64.ads, system-tru64.ads, system-aix.ads, \n+\tsystem-vxworks-sparcv9.ads, system-vxworks-xscale.ads, \n+\tsystem-solaris-x86.ads, system-irix-o32.ads, system-irix-n32.ads, \n+\tsystem-hpux.ads, system-vxworks-m68k.ads, system-linux-x86.ads, \n+\tsystem-vxworks-mips.ads, system-os2.ads, system-interix.ads, \n+\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads, \n+\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads, \n+\tsystem-vxworks-alpha.ads: Add the flag Preallocated_Stacks, that is\n+\tused to signal whether the compiler creates the required stacks and\n+\tdescriptors for the different tasks (when True) or it is done by the\n+\tunderlying operating system at run time (when False).\n+\tIt is initially set to False in all targets.\n+\n+\t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Create the task stack\n+\tif it is supported by the target.\n+\t(Make_Task_Create_Call): Pass the stack address if it has been\n+\tpreviously created. Otherwise pass a Null_Address.\n+\n+\t* snames.adb: Add _stack.\n+\n+\t* snames.ads: Add Name_uStack. Required to allow the expander to\n+\tstatically allocated task stacks.\n+\n+\t* s-tarest.ads, s-tarest.adb (Create_Restricted_Task): Add\n+\tStack_Address argument.\n+\tCheck that its value is equal to Null_Address because this target does\n+\tnot support the static stack allocation.\n+\n 2004-10-04  Thomas Quinot  <quinot@act-europe.fr>\n \n \t* usage.adb: Change \"pragma inline\" to \"pragma Inline\" in information"}, {"sha": "133bf555b9ddd367698392c347230a5f4b26586d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 79, "deletions": 12, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -55,10 +55,10 @@ with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;\n+with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Types;    use Types;\n with Uintp;    use Uintp;\n-with Opt;\n \n package body Exp_Ch9 is\n \n@@ -7141,13 +7141,16 @@ package body Exp_Ch9 is\n       Tasknm    : constant Name_Id    := Chars (Tasktyp);\n       Taskdef   : constant Node_Id    := Task_Definition (N);\n \n-      Proc_Spec : Node_Id;\n-      Rec_Decl  : Node_Id;\n-      Rec_Ent   : Entity_Id;\n-      Cdecls    : List_Id;\n-      Elab_Decl : Node_Id;\n-      Size_Decl : Node_Id;\n-      Body_Decl : Node_Id;\n+      Proc_Spec  : Node_Id;\n+      Rec_Decl   : Node_Id;\n+      Rec_Ent    : Entity_Id;\n+      Cdecls     : List_Id;\n+      Elab_Decl  : Node_Id;\n+      Size_Decl  : Node_Id;\n+      Body_Decl  : Node_Id;\n+      Task_Size  : Node_Id;\n+      Ent_Stack  : Entity_Id;\n+      Decl_Stack : Node_Id;\n \n    begin\n       --  If already expanded, nothing to do\n@@ -7249,6 +7252,51 @@ package body Exp_Ch9 is\n \n       end if;\n \n+      --  Declare static stack (that is, created by the expander) if we\n+      --  are using the Restricted run time on a bare board configuration.\n+\n+      if Restricted_Profile\n+        and then Preallocated_Stacks_On_Target\n+      then\n+         --  First we need to extract the appropriate stack size\n+\n+         Ent_Stack := Make_Defining_Identifier (Loc, Name_uStack);\n+\n+         if Present (Taskdef) and then Has_Storage_Size_Pragma (Taskdef) then\n+            Task_Size := Relocate_Node (\n+              Expression (First (\n+                Pragma_Argument_Associations (\n+                  Find_Task_Or_Protected_Pragma\n+                    (Taskdef, Name_Storage_Size)))));\n+         else\n+            Task_Size :=\n+              New_Reference_To (RTE (RE_Default_Stack_Size), Loc);\n+         end if;\n+\n+         Decl_Stack := Make_Component_Declaration (Loc,\n+           Defining_Identifier  => Ent_Stack,\n+\n+           Component_Definition =>\n+             Make_Component_Definition (Loc,\n+               Aliased_Present     => True,\n+               Subtype_Indication  => Make_Subtype_Indication (Loc,\n+                 Subtype_Mark =>\n+                   New_Occurrence_Of (RTE (RE_Storage_Array), Loc),\n+\n+                 Constraint   =>\n+                   Make_Index_Or_Discriminant_Constraint (Loc,\n+                     Constraints  => New_List (Make_Range (Loc,\n+                       Low_Bound  => Make_Integer_Literal (Loc, 1),\n+                       High_Bound => Convert_To (RTE (RE_Storage_Offset),\n+                         Task_Size)))))));\n+\n+         Append_To (Cdecls, Decl_Stack);\n+\n+         --  The appropriate alignment for the stack is ensured by the\n+         --  run-time code in charge of task creation.\n+\n+      end if;\n+\n       --  Add components for entry families\n \n       Collect_Entry_Families (Loc, Cdecls, Size_Decl, Tasktyp);\n@@ -8381,19 +8429,38 @@ package body Exp_Ch9 is\n       --  Priority parameter. Set to Unspecified_Priority unless there is a\n       --  priority pragma, in which case we take the value from the pragma.\n \n-      if Present (Tdef)\n-        and then Has_Priority_Pragma (Tdef)\n-      then\n+      if Present (Tdef) and then Has_Priority_Pragma (Tdef) then\n          Append_To (Args,\n            Make_Selected_Component (Loc,\n              Prefix => Make_Identifier (Loc, Name_uInit),\n              Selector_Name => Make_Identifier (Loc, Name_uPriority)));\n-\n       else\n          Append_To (Args,\n            New_Reference_To (RTE (RE_Unspecified_Priority), Loc));\n       end if;\n \n+      --  Optional Stack parameter\n+\n+      if Restricted_Profile then\n+\n+         --  If the stack has been preallocated by the expander then\n+         --  pass its address. Otherwise, pass a null address.\n+\n+         if Preallocated_Stacks_On_Target then\n+            Append_To (Args,\n+              Make_Attribute_Reference (Loc,\n+                Prefix         => Make_Selected_Component (Loc,\n+                  Prefix        => Make_Identifier (Loc, Name_uInit),\n+                  Selector_Name =>\n+                    Make_Identifier (Loc, Name_uStack)),\n+                Attribute_Name => Name_Address));\n+\n+         else\n+            Append_To (Args,\n+              New_Reference_To (RTE (RE_Null_Address), Loc));\n+         end if;\n+      end if;\n+\n       --  Size parameter. If no Storage_Size pragma is present, then\n       --  the size is taken from the taskZ variable for the type, which\n       --  is either Unspecified_Size, or has been reset by the use of"}, {"sha": "93126f0d3c742538c68257deb59f5a923620ea5c", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -376,6 +376,7 @@ package body System.Tasking.Restricted.Stages is\n \n    procedure Create_Restricted_Task\n      (Priority      : Integer;\n+      Stack_Address : System.Address;\n       Size          : System.Parameters.Size_Type;\n       Task_Info     : System.Task_Info.Task_Info_Type;\n       State         : Task_Procedure_Access;\n@@ -390,6 +391,11 @@ package body System.Tasking.Restricted.Stages is\n       Success       : Boolean;\n \n    begin\n+      --  Stack is not preallocated on this target, so that\n+      --  Stack_Address must be null.\n+\n+      pragma Assert (Stack_Address = Null_Address);\n+\n       if Priority = Unspecified_Priority then\n          Base_Priority := Self_ID.Common.Base_Priority;\n       else"}, {"sha": "f4aee5c7842e5f71d0733a2000ff72fecc958ca0", "filename": "gcc/ada/s-tarest.ads", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fs-tarest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fs-tarest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -129,6 +129,7 @@ package System.Tasking.Restricted.Stages is\n \n    procedure Create_Restricted_Task\n      (Priority      : Integer;\n+      Stack_Address : System.Address;\n       Size          : System.Parameters.Size_Type;\n       Task_Info     : System.Task_Info.Task_Info_Type;\n       State         : Task_Procedure_Access;\n@@ -141,26 +142,39 @@ package System.Tasking.Restricted.Stages is\n    --  This must be called to create a new task.\n    --\n    --  Priority is the task's priority (assumed to be in the\n-   --   System.Any_Priority'Range)\n+   --  System.Any_Priority'Range)\n+   --\n+   --  Stack_Address is the start address of the stack associated to the\n+   --  task, in case it has been preallocated by the compiler; it is equal\n+   --  to Null_Address when the stack needs to be allocated by the\n+   --  underlying operating system.\n+   --\n    --  Size is the stack size of the task to create\n+   --\n    --  Task_Info is the task info associated with the created task, or\n-   --   Unspecified_Task_Info if none.\n+   --  Unspecified_Task_Info if none.\n+   --\n    --  State is the compiler generated task's procedure body\n+   --\n    --  Discriminants is a pointer to a limited record whose discriminants\n-   --   are those of the task to create. This parameter should be passed as\n-   --   the single argument to State.\n+   --  are those of the task to create. This parameter should be passed as\n+   --  the single argument to State.\n+   --\n    --  Elaborated is a pointer to a Boolean that must be set to true on exit\n-   --   if the task could be sucessfully elaborated.\n+   --  if the task could be sucessfully elaborated.\n+   --\n    --  Chain is a linked list of task that needs to be created. On exit,\n-   --   Created_Task.Activation_Link will be Chain.T_ID, and Chain.T_ID\n-   --   will be Created_Task (e.g the created task will be linked at the front\n-   --   of Chain).\n+   --  Created_Task.Activation_Link will be Chain.T_ID, and Chain.T_ID\n+   --  will be Created_Task (e.g the created task will be linked at the front\n+   --  of Chain).\n+   --\n    --  Task_Image is a string created by the compiler that the\n-   --   run time can store to ease the debugging and the\n-   --   Ada.Task_Identification facility.\n+   --  run time can store to ease the debugging and the\n+   --  Ada.Task_Identification facility.\n+   --\n    --  Created_Task is the resulting task.\n    --\n-   --  This procedure can raise Storage_Error if the task creation failed.\n+   --  This procedure can raise Storage_Error if the task creation fails\n \n    procedure Activate_Restricted_Tasks\n      (Chain_Access : Activation_Chain_Access);"}, {"sha": "1c9644c3eea5d74a68cc5ba4dadcf6adc4711aa1", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -82,6 +82,7 @@ package body Snames is\n      \"_secondary_stack#\" &\n      \"_service#\" &\n      \"_size#\" &\n+     \"_stack#\" &\n      \"_tags#\" &\n      \"_task#\" &\n      \"_task_id#\" &"}, {"sha": "bd1f1ea8935b3606cc2d02cb1eaeb68ee75e37d3", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 625, "deletions": 624, "changes": 1249, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -165,133 +165,134 @@ package Snames is\n    Name_uSecondary_Stack               : constant Name_Id := N + 022;\n    Name_uService                       : constant Name_Id := N + 023;\n    Name_uSize                          : constant Name_Id := N + 024;\n-   Name_uTags                          : constant Name_Id := N + 025;\n-   Name_uTask                          : constant Name_Id := N + 026;\n-   Name_uTask_Id                       : constant Name_Id := N + 027;\n-   Name_uTask_Info                     : constant Name_Id := N + 028;\n-   Name_uTask_Name                     : constant Name_Id := N + 029;\n-   Name_uTrace_Sp                      : constant Name_Id := N + 030;\n+   Name_uStack                         : constant Name_Id := N + 025;\n+   Name_uTags                          : constant Name_Id := N + 026;\n+   Name_uTask                          : constant Name_Id := N + 027;\n+   Name_uTask_Id                       : constant Name_Id := N + 028;\n+   Name_uTask_Info                     : constant Name_Id := N + 029;\n+   Name_uTask_Name                     : constant Name_Id := N + 030;\n+   Name_uTrace_Sp                      : constant Name_Id := N + 031;\n \n    --  Names of routines in Ada.Finalization, needed by expander\n \n-   Name_Initialize                     : constant Name_Id := N + 031;\n-   Name_Adjust                         : constant Name_Id := N + 032;\n-   Name_Finalize                       : constant Name_Id := N + 033;\n+   Name_Initialize                     : constant Name_Id := N + 032;\n+   Name_Adjust                         : constant Name_Id := N + 033;\n+   Name_Finalize                       : constant Name_Id := N + 034;\n \n    --  Names of fields declared in System.Finalization_Implementation,\n    --  needed by the expander when generating code for finalization.\n \n-   Name_Next                           : constant Name_Id := N + 034;\n-   Name_Prev                           : constant Name_Id := N + 035;\n+   Name_Next                           : constant Name_Id := N + 035;\n+   Name_Prev                           : constant Name_Id := N + 036;\n \n    --  Names of TSS routines for implementation of DSA over PolyORB\n \n-   Name_uTypeCode                      : constant Name_Id := N + 036;\n-   Name_uFrom_Any                      : constant Name_Id := N + 037;\n-   Name_uTo_Any                        : constant Name_Id := N + 038;\n+   Name_uTypeCode                      : constant Name_Id := N + 037;\n+   Name_uFrom_Any                      : constant Name_Id := N + 038;\n+   Name_uTo_Any                        : constant Name_Id := N + 039;\n \n    --  Names of allocation routines, also needed by expander\n \n-   Name_Allocate                       : constant Name_Id := N + 039;\n-   Name_Deallocate                     : constant Name_Id := N + 040;\n-   Name_Dereference                    : constant Name_Id := N + 041;\n+   Name_Allocate                       : constant Name_Id := N + 040;\n+   Name_Deallocate                     : constant Name_Id := N + 041;\n+   Name_Dereference                    : constant Name_Id := N + 042;\n \n    --  Names of Text_IO generic subpackages (see Rtsfind.Text_IO_Kludge)\n \n-   First_Text_IO_Package               : constant Name_Id := N + 042;\n-   Name_Decimal_IO                     : constant Name_Id := N + 042;\n-   Name_Enumeration_IO                 : constant Name_Id := N + 043;\n-   Name_Fixed_IO                       : constant Name_Id := N + 044;\n-   Name_Float_IO                       : constant Name_Id := N + 045;\n-   Name_Integer_IO                     : constant Name_Id := N + 046;\n-   Name_Modular_IO                     : constant Name_Id := N + 047;\n-   Last_Text_IO_Package                : constant Name_Id := N + 047;\n+   First_Text_IO_Package               : constant Name_Id := N + 043;\n+   Name_Decimal_IO                     : constant Name_Id := N + 043;\n+   Name_Enumeration_IO                 : constant Name_Id := N + 044;\n+   Name_Fixed_IO                       : constant Name_Id := N + 045;\n+   Name_Float_IO                       : constant Name_Id := N + 046;\n+   Name_Integer_IO                     : constant Name_Id := N + 047;\n+   Name_Modular_IO                     : constant Name_Id := N + 048;\n+   Last_Text_IO_Package                : constant Name_Id := N + 048;\n \n    subtype Text_IO_Package_Name is Name_Id\n      range First_Text_IO_Package .. Last_Text_IO_Package;\n \n    --  Names of files in library for Ada.Text_IO and Ada.Wide_Text_IO\n \n-   Name_a_textio                       : constant Name_Id := N + 048;\n-   Name_a_witeio                       : constant Name_Id := N + 049;\n+   Name_a_textio                       : constant Name_Id := N + 049;\n+   Name_a_witeio                       : constant Name_Id := N + 050;\n \n    --  Some miscellaneous names used for error detection/recovery\n \n-   Name_Const                          : constant Name_Id := N + 050;\n-   Name_Error                          : constant Name_Id := N + 051;\n-   Name_Go                             : constant Name_Id := N + 052;\n-   Name_Put                            : constant Name_Id := N + 053;\n-   Name_Put_Line                       : constant Name_Id := N + 054;\n-   Name_To                             : constant Name_Id := N + 055;\n+   Name_Const                          : constant Name_Id := N + 051;\n+   Name_Error                          : constant Name_Id := N + 052;\n+   Name_Go                             : constant Name_Id := N + 053;\n+   Name_Put                            : constant Name_Id := N + 054;\n+   Name_Put_Line                       : constant Name_Id := N + 055;\n+   Name_To                             : constant Name_Id := N + 056;\n \n    --  Names for packages that are treated specially by the compiler\n \n-   Name_Finalization                   : constant Name_Id := N + 056;\n-   Name_Finalization_Root              : constant Name_Id := N + 057;\n-   Name_Interfaces                     : constant Name_Id := N + 058;\n-   Name_Standard                       : constant Name_Id := N + 059;\n-   Name_System                         : constant Name_Id := N + 060;\n-   Name_Text_IO                        : constant Name_Id := N + 061;\n-   Name_Wide_Text_IO                   : constant Name_Id := N + 062;\n+   Name_Finalization                   : constant Name_Id := N + 057;\n+   Name_Finalization_Root              : constant Name_Id := N + 058;\n+   Name_Interfaces                     : constant Name_Id := N + 059;\n+   Name_Standard                       : constant Name_Id := N + 060;\n+   Name_System                         : constant Name_Id := N + 061;\n+   Name_Text_IO                        : constant Name_Id := N + 062;\n+   Name_Wide_Text_IO                   : constant Name_Id := N + 063;\n \n    --  Names of implementations of the distributed systems annex\n \n-   Name_No_DSA                         : constant Name_Id := N + 063;\n-   Name_GLADE_DSA                      : constant Name_Id := N + 064;\n-   Name_PolyORB_DSA                    : constant Name_Id := N + 065;\n+   Name_No_DSA                         : constant Name_Id := N + 064;\n+   Name_GLADE_DSA                      : constant Name_Id := N + 065;\n+   Name_PolyORB_DSA                    : constant Name_Id := N + 066;\n \n    --  Names of identifiers used in expanding distribution stubs\n \n-   Name_Addr                           : constant Name_Id := N + 066;\n-   Name_Async                          : constant Name_Id := N + 067;\n-   Name_Get_Active_Partition_ID        : constant Name_Id := N + 068;\n-   Name_Get_RCI_Package_Receiver       : constant Name_Id := N + 069;\n-   Name_Get_RCI_Package_Ref            : constant Name_Id := N + 070;\n-   Name_Origin                         : constant Name_Id := N + 071;\n-   Name_Params                         : constant Name_Id := N + 072;\n-   Name_Partition                      : constant Name_Id := N + 073;\n-   Name_Partition_Interface            : constant Name_Id := N + 074;\n-   Name_Ras                            : constant Name_Id := N + 075;\n-   Name_Call                           : constant Name_Id := N + 076;\n-   Name_RCI_Name                       : constant Name_Id := N + 077;\n-   Name_Receiver                       : constant Name_Id := N + 078;\n-   Name_Result                         : constant Name_Id := N + 079;\n-   Name_Rpc                            : constant Name_Id := N + 080;\n-   Name_Subp_Id                        : constant Name_Id := N + 081;\n-   Name_Operation                      : constant Name_Id := N + 082;\n-   Name_Argument                       : constant Name_Id := N + 083;\n-   Name_Arg_Modes                      : constant Name_Id := N + 084;\n-   Name_Handler                        : constant Name_Id := N + 085;\n-   Name_Target                         : constant Name_Id := N + 086;\n-   Name_Req                            : constant Name_Id := N + 087;\n-   Name_Obj_TypeCode                   : constant Name_Id := N + 088;\n-   Name_Stub                           : constant Name_Id := N + 089;\n+   Name_Addr                           : constant Name_Id := N + 067;\n+   Name_Async                          : constant Name_Id := N + 068;\n+   Name_Get_Active_Partition_ID        : constant Name_Id := N + 069;\n+   Name_Get_RCI_Package_Receiver       : constant Name_Id := N + 070;\n+   Name_Get_RCI_Package_Ref            : constant Name_Id := N + 071;\n+   Name_Origin                         : constant Name_Id := N + 072;\n+   Name_Params                         : constant Name_Id := N + 073;\n+   Name_Partition                      : constant Name_Id := N + 074;\n+   Name_Partition_Interface            : constant Name_Id := N + 075;\n+   Name_Ras                            : constant Name_Id := N + 076;\n+   Name_Call                           : constant Name_Id := N + 077;\n+   Name_RCI_Name                       : constant Name_Id := N + 078;\n+   Name_Receiver                       : constant Name_Id := N + 079;\n+   Name_Result                         : constant Name_Id := N + 080;\n+   Name_Rpc                            : constant Name_Id := N + 081;\n+   Name_Subp_Id                        : constant Name_Id := N + 082;\n+   Name_Operation                      : constant Name_Id := N + 083;\n+   Name_Argument                       : constant Name_Id := N + 084;\n+   Name_Arg_Modes                      : constant Name_Id := N + 085;\n+   Name_Handler                        : constant Name_Id := N + 086;\n+   Name_Target                         : constant Name_Id := N + 087;\n+   Name_Req                            : constant Name_Id := N + 088;\n+   Name_Obj_TypeCode                   : constant Name_Id := N + 089;\n+   Name_Stub                           : constant Name_Id := N + 090;\n \n    --  Operator Symbol entries. The actual names have an upper case O at\n    --  the start in place of the Op_ prefix (e.g. the actual name that\n    --  corresponds to Name_Op_Abs is \"Oabs\".\n \n-   First_Operator_Name                 : constant Name_Id := N + 090;\n-   Name_Op_Abs                         : constant Name_Id := N + 090; -- \"abs\"\n-   Name_Op_And                         : constant Name_Id := N + 091; -- \"and\"\n-   Name_Op_Mod                         : constant Name_Id := N + 092; -- \"mod\"\n-   Name_Op_Not                         : constant Name_Id := N + 093; -- \"not\"\n-   Name_Op_Or                          : constant Name_Id := N + 094; -- \"or\"\n-   Name_Op_Rem                         : constant Name_Id := N + 095; -- \"rem\"\n-   Name_Op_Xor                         : constant Name_Id := N + 096; -- \"xor\"\n-   Name_Op_Eq                          : constant Name_Id := N + 097; -- \"=\"\n-   Name_Op_Ne                          : constant Name_Id := N + 098; -- \"/=\"\n-   Name_Op_Lt                          : constant Name_Id := N + 099; -- \"<\"\n-   Name_Op_Le                          : constant Name_Id := N + 100; -- \"<=\"\n-   Name_Op_Gt                          : constant Name_Id := N + 101; -- \">\"\n-   Name_Op_Ge                          : constant Name_Id := N + 102; -- \">=\"\n-   Name_Op_Add                         : constant Name_Id := N + 103; -- \"+\"\n-   Name_Op_Subtract                    : constant Name_Id := N + 104; -- \"-\"\n-   Name_Op_Concat                      : constant Name_Id := N + 105; -- \"&\"\n-   Name_Op_Multiply                    : constant Name_Id := N + 106; -- \"*\"\n-   Name_Op_Divide                      : constant Name_Id := N + 107; -- \"/\"\n-   Name_Op_Expon                       : constant Name_Id := N + 108; -- \"**\"\n-   Last_Operator_Name                  : constant Name_Id := N + 108;\n+   First_Operator_Name                 : constant Name_Id := N + 091;\n+   Name_Op_Abs                         : constant Name_Id := N + 091; -- \"abs\"\n+   Name_Op_And                         : constant Name_Id := N + 092; -- \"and\"\n+   Name_Op_Mod                         : constant Name_Id := N + 093; -- \"mod\"\n+   Name_Op_Not                         : constant Name_Id := N + 094; -- \"not\"\n+   Name_Op_Or                          : constant Name_Id := N + 095; -- \"or\"\n+   Name_Op_Rem                         : constant Name_Id := N + 096; -- \"rem\"\n+   Name_Op_Xor                         : constant Name_Id := N + 097; -- \"xor\"\n+   Name_Op_Eq                          : constant Name_Id := N + 098; -- \"=\"\n+   Name_Op_Ne                          : constant Name_Id := N + 099; -- \"/=\"\n+   Name_Op_Lt                          : constant Name_Id := N + 100; -- \"<\"\n+   Name_Op_Le                          : constant Name_Id := N + 101; -- \"<=\"\n+   Name_Op_Gt                          : constant Name_Id := N + 102; -- \">\"\n+   Name_Op_Ge                          : constant Name_Id := N + 103; -- \">=\"\n+   Name_Op_Add                         : constant Name_Id := N + 104; -- \"+\"\n+   Name_Op_Subtract                    : constant Name_Id := N + 105; -- \"-\"\n+   Name_Op_Concat                      : constant Name_Id := N + 106; -- \"&\"\n+   Name_Op_Multiply                    : constant Name_Id := N + 107; -- \"*\"\n+   Name_Op_Divide                      : constant Name_Id := N + 108; -- \"/\"\n+   Name_Op_Expon                       : constant Name_Id := N + 109; -- \"**\"\n+   Last_Operator_Name                  : constant Name_Id := N + 109;\n \n    --  Names for all pragmas recognized by GNAT. The entries with the comment\n    --  \"Ada 83\" are pragmas that are defined in Ada 83, but not in Ada 95.\n@@ -314,143 +315,143 @@ package Snames is\n    --  only in GNAT for the AAMP. They are ignored in other versions with\n    --  appropriate warnings.\n \n-   First_Pragma_Name                   : constant Name_Id := N + 109;\n+   First_Pragma_Name                   : constant Name_Id := N + 110;\n \n    --  Configuration pragmas are grouped at start\n \n-   Name_Ada_83                         : constant Name_Id := N + 109; -- GNAT\n-   Name_Ada_95                         : constant Name_Id := N + 110; -- GNAT\n-   Name_Ada_05                         : constant Name_Id := N + 111; -- GNAT\n-   Name_C_Pass_By_Copy                 : constant Name_Id := N + 112; -- GNAT\n-   Name_Compile_Time_Warning           : constant Name_Id := N + 113; -- GNAT\n-   Name_Component_Alignment            : constant Name_Id := N + 114; -- GNAT\n-   Name_Convention_Identifier          : constant Name_Id := N + 115; -- GNAT\n-   Name_Detect_Blocking                : constant Name_Id := N + 116; -- Ada05\n-   Name_Discard_Names                  : constant Name_Id := N + 117;\n-   Name_Elaboration_Checks             : constant Name_Id := N + 118; -- GNAT\n-   Name_Eliminate                      : constant Name_Id := N + 119; -- GNAT\n-   Name_Explicit_Overriding            : constant Name_Id := N + 120;\n-   Name_Extend_System                  : constant Name_Id := N + 121; -- GNAT\n-   Name_Extensions_Allowed             : constant Name_Id := N + 122; -- GNAT\n-   Name_External_Name_Casing           : constant Name_Id := N + 123; -- GNAT\n-   Name_Float_Representation           : constant Name_Id := N + 124; -- GNAT\n-   Name_Initialize_Scalars             : constant Name_Id := N + 125; -- GNAT\n-   Name_Interrupt_State                : constant Name_Id := N + 126; -- GNAT\n-   Name_License                        : constant Name_Id := N + 127; -- GNAT\n-   Name_Locking_Policy                 : constant Name_Id := N + 128;\n-   Name_Long_Float                     : constant Name_Id := N + 129; -- VMS\n-   Name_No_Run_Time                    : constant Name_Id := N + 130; -- GNAT\n-   Name_No_Strict_Aliasing             : constant Name_Id := N + 131; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 132;\n-   Name_Polling                        : constant Name_Id := N + 133; -- GNAT\n-   Name_Persistent_Data                : constant Name_Id := N + 134; -- GNAT\n-   Name_Persistent_Object              : constant Name_Id := N + 135; -- GNAT\n-   Name_Profile                        : constant Name_Id := N + 136; -- Ada05\n-   Name_Profile_Warnings               : constant Name_Id := N + 137; -- GNAT\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 138; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 139;\n-   Name_Ravenscar                      : constant Name_Id := N + 140;\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 141;\n-   Name_Restrictions                   : constant Name_Id := N + 142;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 143; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 144;\n-   Name_Source_File_Name               : constant Name_Id := N + 145; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 146; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 147; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 148;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 149; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 150;\n-   Name_Universal_Data                 : constant Name_Id := N + 151; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 152; -- GNAT\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 153; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 154; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 155; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 155;\n+   Name_Ada_83                         : constant Name_Id := N + 110; -- GNAT\n+   Name_Ada_95                         : constant Name_Id := N + 111; -- GNAT\n+   Name_Ada_05                         : constant Name_Id := N + 112; -- GNAT\n+   Name_C_Pass_By_Copy                 : constant Name_Id := N + 113; -- GNAT\n+   Name_Compile_Time_Warning           : constant Name_Id := N + 114; -- GNAT\n+   Name_Component_Alignment            : constant Name_Id := N + 115; -- GNAT\n+   Name_Convention_Identifier          : constant Name_Id := N + 116; -- GNAT\n+   Name_Detect_Blocking                : constant Name_Id := N + 117; -- Ada05\n+   Name_Discard_Names                  : constant Name_Id := N + 118;\n+   Name_Elaboration_Checks             : constant Name_Id := N + 119; -- GNAT\n+   Name_Eliminate                      : constant Name_Id := N + 120; -- GNAT\n+   Name_Explicit_Overriding            : constant Name_Id := N + 121;\n+   Name_Extend_System                  : constant Name_Id := N + 122; -- GNAT\n+   Name_Extensions_Allowed             : constant Name_Id := N + 123; -- GNAT\n+   Name_External_Name_Casing           : constant Name_Id := N + 124; -- GNAT\n+   Name_Float_Representation           : constant Name_Id := N + 125; -- GNAT\n+   Name_Initialize_Scalars             : constant Name_Id := N + 126; -- GNAT\n+   Name_Interrupt_State                : constant Name_Id := N + 127; -- GNAT\n+   Name_License                        : constant Name_Id := N + 128; -- GNAT\n+   Name_Locking_Policy                 : constant Name_Id := N + 129;\n+   Name_Long_Float                     : constant Name_Id := N + 130; -- VMS\n+   Name_No_Run_Time                    : constant Name_Id := N + 131; -- GNAT\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 132; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 133;\n+   Name_Polling                        : constant Name_Id := N + 134; -- GNAT\n+   Name_Persistent_Data                : constant Name_Id := N + 135; -- GNAT\n+   Name_Persistent_Object              : constant Name_Id := N + 136; -- GNAT\n+   Name_Profile                        : constant Name_Id := N + 137; -- Ada05\n+   Name_Profile_Warnings               : constant Name_Id := N + 138; -- GNAT\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 139; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 140;\n+   Name_Ravenscar                      : constant Name_Id := N + 141;\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 142;\n+   Name_Restrictions                   : constant Name_Id := N + 143;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 144; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 145;\n+   Name_Source_File_Name               : constant Name_Id := N + 146; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 147; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 148; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 149;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 150; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 151;\n+   Name_Universal_Data                 : constant Name_Id := N + 152; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 153; -- GNAT\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 154; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 155; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 156; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 156;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 156; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 157;\n-   Name_Annotate                       : constant Name_Id := N + 158; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 157; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 158;\n+   Name_Annotate                       : constant Name_Id := N + 159; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n    --  definition of the type Attribute_Id, and the functions Get_Pragma_Id\n    --  and Check_Pragma_Id correctly recognize and process Name_AST_Entry.\n    --  AST_Entry is a VMS specific pragma.\n \n-   Name_Assert                         : constant Name_Id := N + 159; -- GNAT\n-   Name_Asynchronous                   : constant Name_Id := N + 160;\n-   Name_Atomic                         : constant Name_Id := N + 161;\n-   Name_Atomic_Components              : constant Name_Id := N + 162;\n-   Name_Attach_Handler                 : constant Name_Id := N + 163;\n-   Name_Comment                        : constant Name_Id := N + 164; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 165; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 166; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 167;\n-   Name_Convention                     : constant Name_Id := N + 168;\n-   Name_CPP_Class                      : constant Name_Id := N + 169; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 170; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 171; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 172; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 173; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 174; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 175;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 176;\n-   Name_Export                         : constant Name_Id := N + 177;\n-   Name_Export_Exception               : constant Name_Id := N + 178; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 179; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 180; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 181; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 182; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 183; -- GNAT\n-   Name_External                       : constant Name_Id := N + 184; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 185; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 186; -- VMS\n-   Name_Import                         : constant Name_Id := N + 187;\n-   Name_Import_Exception               : constant Name_Id := N + 188; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 189; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 190; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 191; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 192; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 193;\n-   Name_Inline_Always                  : constant Name_Id := N + 194; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 195; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 196;\n-   Name_Interface                      : constant Name_Id := N + 197; -- Ada 83\n-   Name_Interface_Name                 : constant Name_Id := N + 198; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 199;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 200;\n-   Name_Java_Constructor               : constant Name_Id := N + 201; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 202; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 203; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 204; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 205; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 206;\n-   Name_Linker_Section                 : constant Name_Id := N + 207; -- GNAT\n-   Name_List                           : constant Name_Id := N + 208;\n-   Name_Machine_Attribute              : constant Name_Id := N + 209; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 210; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 211; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 212; -- Ada 83\n-   Name_No_Return                      : constant Name_Id := N + 213; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 214; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 215;\n-   Name_Optional_Overriding            : constant Name_Id := N + 216;\n-   Name_Overriding                     : constant Name_Id := N + 217;\n-   Name_Pack                           : constant Name_Id := N + 218;\n-   Name_Page                           : constant Name_Id := N + 219;\n-   Name_Passive                        : constant Name_Id := N + 220; -- GNAT\n-   Name_Preelaborate                   : constant Name_Id := N + 221;\n-   Name_Priority                       : constant Name_Id := N + 222;\n-   Name_Psect_Object                   : constant Name_Id := N + 223; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 224;\n-   Name_Pure_Function                  : constant Name_Id := N + 225; -- GNAT\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 226;\n-   Name_Remote_Types                   : constant Name_Id := N + 227;\n-   Name_Share_Generic                  : constant Name_Id := N + 228; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 229; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 230;\n+   Name_Assert                         : constant Name_Id := N + 160; -- GNAT\n+   Name_Asynchronous                   : constant Name_Id := N + 161;\n+   Name_Atomic                         : constant Name_Id := N + 162;\n+   Name_Atomic_Components              : constant Name_Id := N + 163;\n+   Name_Attach_Handler                 : constant Name_Id := N + 164;\n+   Name_Comment                        : constant Name_Id := N + 165; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 166; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 167; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 168;\n+   Name_Convention                     : constant Name_Id := N + 169;\n+   Name_CPP_Class                      : constant Name_Id := N + 170; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 171; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 172; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 173; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 174; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 175; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 176;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 177;\n+   Name_Export                         : constant Name_Id := N + 178;\n+   Name_Export_Exception               : constant Name_Id := N + 179; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 180; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 181; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 182; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 183; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 184; -- GNAT\n+   Name_External                       : constant Name_Id := N + 185; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 186; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 187; -- VMS\n+   Name_Import                         : constant Name_Id := N + 188;\n+   Name_Import_Exception               : constant Name_Id := N + 189; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 190; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 191; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 192; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 193; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 194;\n+   Name_Inline_Always                  : constant Name_Id := N + 195; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 196; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 197;\n+   Name_Interface                      : constant Name_Id := N + 198; -- Ada 83\n+   Name_Interface_Name                 : constant Name_Id := N + 199; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 200;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 201;\n+   Name_Java_Constructor               : constant Name_Id := N + 202; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 203; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 204; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 205; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 206; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 207;\n+   Name_Linker_Section                 : constant Name_Id := N + 208; -- GNAT\n+   Name_List                           : constant Name_Id := N + 209;\n+   Name_Machine_Attribute              : constant Name_Id := N + 210; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 211; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 212; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 213; -- Ada 83\n+   Name_No_Return                      : constant Name_Id := N + 214; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 215; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 216;\n+   Name_Optional_Overriding            : constant Name_Id := N + 217;\n+   Name_Overriding                     : constant Name_Id := N + 218;\n+   Name_Pack                           : constant Name_Id := N + 219;\n+   Name_Page                           : constant Name_Id := N + 220;\n+   Name_Passive                        : constant Name_Id := N + 221; -- GNAT\n+   Name_Preelaborate                   : constant Name_Id := N + 222;\n+   Name_Priority                       : constant Name_Id := N + 223;\n+   Name_Psect_Object                   : constant Name_Id := N + 224; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 225;\n+   Name_Pure_Function                  : constant Name_Id := N + 226; -- GNAT\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 227;\n+   Name_Remote_Types                   : constant Name_Id := N + 228;\n+   Name_Share_Generic                  : constant Name_Id := N + 229; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 230; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 231;\n \n    --  Note: Storage_Size is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n@@ -460,27 +461,27 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because of a clash\n    --  with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 231; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 232; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 233; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 234; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 235; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 236; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 237; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 238; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 239; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 240; -- VMS\n-   Name_Thread_Body                    : constant Name_Id := N + 241; -- GNAT\n-   Name_Time_Slice                     : constant Name_Id := N + 242; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 243; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 244; -- GNAT\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 245; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 246; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 247; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 248;\n-   Name_Volatile_Components            : constant Name_Id := N + 249;\n-   Name_Weak_External                  : constant Name_Id := N + 250; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 250;\n+   Name_Source_Reference               : constant Name_Id := N + 232; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 233; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 234; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 235; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 236; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 237; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 238; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 239; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 240; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 241; -- VMS\n+   Name_Thread_Body                    : constant Name_Id := N + 242; -- GNAT\n+   Name_Time_Slice                     : constant Name_Id := N + 243; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 244; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 245; -- GNAT\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 246; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 247; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 248; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 249;\n+   Name_Volatile_Components            : constant Name_Id := N + 250;\n+   Name_Weak_External                  : constant Name_Id := N + 251; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 251;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -491,105 +492,105 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 251;\n-   Name_Ada                            : constant Name_Id := N + 251;\n-   Name_Assembler                      : constant Name_Id := N + 252;\n-   Name_COBOL                          : constant Name_Id := N + 253;\n-   Name_CPP                            : constant Name_Id := N + 254;\n-   Name_Fortran                        : constant Name_Id := N + 255;\n-   Name_Intrinsic                      : constant Name_Id := N + 256;\n-   Name_Java                           : constant Name_Id := N + 257;\n-   Name_Stdcall                        : constant Name_Id := N + 258;\n-   Name_Stubbed                        : constant Name_Id := N + 259;\n-   Last_Convention_Name                : constant Name_Id := N + 259;\n+   First_Convention_Name               : constant Name_Id := N + 252;\n+   Name_Ada                            : constant Name_Id := N + 252;\n+   Name_Assembler                      : constant Name_Id := N + 253;\n+   Name_COBOL                          : constant Name_Id := N + 254;\n+   Name_CPP                            : constant Name_Id := N + 255;\n+   Name_Fortran                        : constant Name_Id := N + 256;\n+   Name_Intrinsic                      : constant Name_Id := N + 257;\n+   Name_Java                           : constant Name_Id := N + 258;\n+   Name_Stdcall                        : constant Name_Id := N + 259;\n+   Name_Stubbed                        : constant Name_Id := N + 260;\n+   Last_Convention_Name                : constant Name_Id := N + 260;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 260;\n-   Name_Assembly                       : constant Name_Id := N + 261;\n+   Name_Asm                            : constant Name_Id := N + 261;\n+   Name_Assembly                       : constant Name_Id := N + 262;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 262;\n+   Name_Default                        : constant Name_Id := N + 263;\n    --  Name_Exernal (previously defined as pragma)\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 263;\n-   Name_Win32                          : constant Name_Id := N + 264;\n+   Name_DLL                            : constant Name_Id := N + 264;\n+   Name_Win32                          : constant Name_Id := N + 265;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 265;\n-   Name_Body_File_Name                 : constant Name_Id := N + 266;\n-   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 267;\n-   Name_Casing                         : constant Name_Id := N + 268;\n-   Name_Code                           : constant Name_Id := N + 269;\n-   Name_Component                      : constant Name_Id := N + 270;\n-   Name_Component_Size_4               : constant Name_Id := N + 271;\n-   Name_Copy                           : constant Name_Id := N + 272;\n-   Name_D_Float                        : constant Name_Id := N + 273;\n-   Name_Descriptor                     : constant Name_Id := N + 274;\n-   Name_Dot_Replacement                : constant Name_Id := N + 275;\n-   Name_Dynamic                        : constant Name_Id := N + 276;\n-   Name_Entity                         : constant Name_Id := N + 277;\n-   Name_External_Name                  : constant Name_Id := N + 278;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 279;\n-   Name_Form                           : constant Name_Id := N + 280;\n-   Name_G_Float                        : constant Name_Id := N + 281;\n-   Name_Gcc                            : constant Name_Id := N + 282;\n-   Name_Gnat                           : constant Name_Id := N + 283;\n-   Name_GPL                            : constant Name_Id := N + 284;\n-   Name_IEEE_Float                     : constant Name_Id := N + 285;\n-   Name_Internal                       : constant Name_Id := N + 286;\n-   Name_Link_Name                      : constant Name_Id := N + 287;\n-   Name_Lowercase                      : constant Name_Id := N + 288;\n-   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 289;\n-   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 290;\n-   Name_Max_Size                       : constant Name_Id := N + 291;\n-   Name_Mechanism                      : constant Name_Id := N + 292;\n-   Name_Mixedcase                      : constant Name_Id := N + 293;\n-   Name_Modified_GPL                   : constant Name_Id := N + 294;\n-   Name_Name                           : constant Name_Id := N + 295;\n-   Name_NCA                            : constant Name_Id := N + 296;\n-   Name_No                             : constant Name_Id := N + 297;\n-   Name_On                             : constant Name_Id := N + 298;\n-   Name_Parameter_Types                : constant Name_Id := N + 299;\n-   Name_Reference                      : constant Name_Id := N + 300;\n-   Name_No_Dynamic_Attachment          : constant Name_Id := N + 301;\n-   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 302;\n-   Name_No_Requeue                     : constant Name_Id := N + 303;\n-   Name_No_Requeue_Statements          : constant Name_Id := N + 304;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 305;\n-   Name_No_Task_Attributes_Package     : constant Name_Id := N + 306;\n-   Name_Restricted                     : constant Name_Id := N + 307;\n-   Name_Result_Mechanism               : constant Name_Id := N + 308;\n-   Name_Result_Type                    : constant Name_Id := N + 309;\n-   Name_Runtime                        : constant Name_Id := N + 310;\n-   Name_SB                             : constant Name_Id := N + 311;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 312;\n-   Name_Section                        : constant Name_Id := N + 313;\n-   Name_Semaphore                      : constant Name_Id := N + 314;\n-   Name_Simple_Barriers                : constant Name_Id := N + 315;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 316;\n-   Name_Static                         : constant Name_Id := N + 317;\n-   Name_Stack_Size                     : constant Name_Id := N + 318;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 319;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 320;\n-   Name_Task_Type                      : constant Name_Id := N + 321;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 322;\n-   Name_Top_Guard                      : constant Name_Id := N + 323;\n-   Name_UBA                            : constant Name_Id := N + 324;\n-   Name_UBS                            : constant Name_Id := N + 325;\n-   Name_UBSB                           : constant Name_Id := N + 326;\n-   Name_Unit_Name                      : constant Name_Id := N + 327;\n-   Name_Unknown                        : constant Name_Id := N + 328;\n-   Name_Unrestricted                   : constant Name_Id := N + 329;\n-   Name_Uppercase                      : constant Name_Id := N + 330;\n-   Name_User                           : constant Name_Id := N + 331;\n-   Name_VAX_Float                      : constant Name_Id := N + 332;\n-   Name_VMS                            : constant Name_Id := N + 333;\n-   Name_Working_Storage                : constant Name_Id := N + 334;\n+   Name_As_Is                          : constant Name_Id := N + 266;\n+   Name_Body_File_Name                 : constant Name_Id := N + 267;\n+   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 268;\n+   Name_Casing                         : constant Name_Id := N + 269;\n+   Name_Code                           : constant Name_Id := N + 270;\n+   Name_Component                      : constant Name_Id := N + 271;\n+   Name_Component_Size_4               : constant Name_Id := N + 272;\n+   Name_Copy                           : constant Name_Id := N + 273;\n+   Name_D_Float                        : constant Name_Id := N + 274;\n+   Name_Descriptor                     : constant Name_Id := N + 275;\n+   Name_Dot_Replacement                : constant Name_Id := N + 276;\n+   Name_Dynamic                        : constant Name_Id := N + 277;\n+   Name_Entity                         : constant Name_Id := N + 278;\n+   Name_External_Name                  : constant Name_Id := N + 279;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 280;\n+   Name_Form                           : constant Name_Id := N + 281;\n+   Name_G_Float                        : constant Name_Id := N + 282;\n+   Name_Gcc                            : constant Name_Id := N + 283;\n+   Name_Gnat                           : constant Name_Id := N + 284;\n+   Name_GPL                            : constant Name_Id := N + 285;\n+   Name_IEEE_Float                     : constant Name_Id := N + 286;\n+   Name_Internal                       : constant Name_Id := N + 287;\n+   Name_Link_Name                      : constant Name_Id := N + 288;\n+   Name_Lowercase                      : constant Name_Id := N + 289;\n+   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 290;\n+   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 291;\n+   Name_Max_Size                       : constant Name_Id := N + 292;\n+   Name_Mechanism                      : constant Name_Id := N + 293;\n+   Name_Mixedcase                      : constant Name_Id := N + 294;\n+   Name_Modified_GPL                   : constant Name_Id := N + 295;\n+   Name_Name                           : constant Name_Id := N + 296;\n+   Name_NCA                            : constant Name_Id := N + 297;\n+   Name_No                             : constant Name_Id := N + 298;\n+   Name_On                             : constant Name_Id := N + 299;\n+   Name_Parameter_Types                : constant Name_Id := N + 300;\n+   Name_Reference                      : constant Name_Id := N + 301;\n+   Name_No_Dynamic_Attachment          : constant Name_Id := N + 302;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 303;\n+   Name_No_Requeue                     : constant Name_Id := N + 304;\n+   Name_No_Requeue_Statements          : constant Name_Id := N + 305;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 306;\n+   Name_No_Task_Attributes_Package     : constant Name_Id := N + 307;\n+   Name_Restricted                     : constant Name_Id := N + 308;\n+   Name_Result_Mechanism               : constant Name_Id := N + 309;\n+   Name_Result_Type                    : constant Name_Id := N + 310;\n+   Name_Runtime                        : constant Name_Id := N + 311;\n+   Name_SB                             : constant Name_Id := N + 312;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 313;\n+   Name_Section                        : constant Name_Id := N + 314;\n+   Name_Semaphore                      : constant Name_Id := N + 315;\n+   Name_Simple_Barriers                : constant Name_Id := N + 316;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 317;\n+   Name_Static                         : constant Name_Id := N + 318;\n+   Name_Stack_Size                     : constant Name_Id := N + 319;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 320;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 321;\n+   Name_Task_Type                      : constant Name_Id := N + 322;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 323;\n+   Name_Top_Guard                      : constant Name_Id := N + 324;\n+   Name_UBA                            : constant Name_Id := N + 325;\n+   Name_UBS                            : constant Name_Id := N + 326;\n+   Name_UBSB                           : constant Name_Id := N + 327;\n+   Name_Unit_Name                      : constant Name_Id := N + 328;\n+   Name_Unknown                        : constant Name_Id := N + 329;\n+   Name_Unrestricted                   : constant Name_Id := N + 330;\n+   Name_Uppercase                      : constant Name_Id := N + 331;\n+   Name_User                           : constant Name_Id := N + 332;\n+   Name_VAX_Float                      : constant Name_Id := N + 333;\n+   Name_VMS                            : constant Name_Id := N + 334;\n+   Name_Working_Storage                : constant Name_Id := N + 335;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -603,376 +604,376 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 335;\n-   Name_Abort_Signal                   : constant Name_Id := N + 335;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 336;\n-   Name_Address                        : constant Name_Id := N + 337;\n-   Name_Address_Size                   : constant Name_Id := N + 338;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 339;\n-   Name_Alignment                      : constant Name_Id := N + 340;\n-   Name_Asm_Input                      : constant Name_Id := N + 341;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 342;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 343;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 344;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 345;\n-   Name_Bit_Position                   : constant Name_Id := N + 346;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 347;\n-   Name_Callable                       : constant Name_Id := N + 348;\n-   Name_Caller                         : constant Name_Id := N + 349;\n-   Name_Code_Address                   : constant Name_Id := N + 350;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 351;\n-   Name_Compose                        : constant Name_Id := N + 352;\n-   Name_Constrained                    : constant Name_Id := N + 353;\n-   Name_Count                          : constant Name_Id := N + 354;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 355; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 356;\n-   Name_Delta                          : constant Name_Id := N + 357;\n-   Name_Denorm                         : constant Name_Id := N + 358;\n-   Name_Digits                         : constant Name_Id := N + 359;\n-   Name_Elaborated                     : constant Name_Id := N + 360; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 361; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 362; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 363; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 364;\n-   Name_External_Tag                   : constant Name_Id := N + 365;\n-   Name_First                          : constant Name_Id := N + 366;\n-   Name_First_Bit                      : constant Name_Id := N + 367;\n-   Name_Fixed_Value                    : constant Name_Id := N + 368; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 369;\n-   Name_Has_Access_Values              : constant Name_Id := N + 370; -- GNAT\n-   Name_Has_Discriminants              : constant Name_Id := N + 371; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 372;\n-   Name_Img                            : constant Name_Id := N + 373; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 374; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 375; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 376;\n-   Name_Last_Bit                       : constant Name_Id := N + 377;\n-   Name_Leading_Part                   : constant Name_Id := N + 378;\n-   Name_Length                         : constant Name_Id := N + 379;\n-   Name_Machine_Emax                   : constant Name_Id := N + 380;\n-   Name_Machine_Emin                   : constant Name_Id := N + 381;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 382;\n-   Name_Machine_Overflows              : constant Name_Id := N + 383;\n-   Name_Machine_Radix                  : constant Name_Id := N + 384;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 385;\n-   Name_Machine_Size                   : constant Name_Id := N + 386; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 387; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 388;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 389; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 390; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 391;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 392;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 393;\n-   Name_Model_Small                    : constant Name_Id := N + 394;\n-   Name_Modulus                        : constant Name_Id := N + 395;\n-   Name_Null_Parameter                 : constant Name_Id := N + 396; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 397; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 398;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 399; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 400;\n-   Name_Pos                            : constant Name_Id := N + 401;\n-   Name_Position                       : constant Name_Id := N + 402;\n-   Name_Range                          : constant Name_Id := N + 403;\n-   Name_Range_Length                   : constant Name_Id := N + 404; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 405;\n-   Name_Safe_Emax                      : constant Name_Id := N + 406; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 407;\n-   Name_Safe_Large                     : constant Name_Id := N + 408; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 409;\n-   Name_Safe_Small                     : constant Name_Id := N + 410; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 411;\n-   Name_Scaling                        : constant Name_Id := N + 412;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 413;\n-   Name_Size                           : constant Name_Id := N + 414;\n-   Name_Small                          : constant Name_Id := N + 415;\n-   Name_Storage_Size                   : constant Name_Id := N + 416;\n-   Name_Storage_Unit                   : constant Name_Id := N + 417; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 418;\n-   Name_Target_Name                    : constant Name_Id := N + 419; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 420;\n-   Name_To_Address                     : constant Name_Id := N + 421; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 422; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 423; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 424;\n-   Name_Unchecked_Access               : constant Name_Id := N + 425;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 426;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 427; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 428; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 429; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 430;\n-   Name_Valid                          : constant Name_Id := N + 431;\n-   Name_Value_Size                     : constant Name_Id := N + 432; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 433;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 434; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 435;\n-   Name_Width                          : constant Name_Id := N + 436;\n-   Name_Word_Size                      : constant Name_Id := N + 437; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 336;\n+   Name_Abort_Signal                   : constant Name_Id := N + 336;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 337;\n+   Name_Address                        : constant Name_Id := N + 338;\n+   Name_Address_Size                   : constant Name_Id := N + 339;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 340;\n+   Name_Alignment                      : constant Name_Id := N + 341;\n+   Name_Asm_Input                      : constant Name_Id := N + 342;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 343;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 344;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 345;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 346;\n+   Name_Bit_Position                   : constant Name_Id := N + 347;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 348;\n+   Name_Callable                       : constant Name_Id := N + 349;\n+   Name_Caller                         : constant Name_Id := N + 350;\n+   Name_Code_Address                   : constant Name_Id := N + 351;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 352;\n+   Name_Compose                        : constant Name_Id := N + 353;\n+   Name_Constrained                    : constant Name_Id := N + 354;\n+   Name_Count                          : constant Name_Id := N + 355;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 356; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 357;\n+   Name_Delta                          : constant Name_Id := N + 358;\n+   Name_Denorm                         : constant Name_Id := N + 359;\n+   Name_Digits                         : constant Name_Id := N + 360;\n+   Name_Elaborated                     : constant Name_Id := N + 361; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 362; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 363; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 364; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 365;\n+   Name_External_Tag                   : constant Name_Id := N + 366;\n+   Name_First                          : constant Name_Id := N + 367;\n+   Name_First_Bit                      : constant Name_Id := N + 368;\n+   Name_Fixed_Value                    : constant Name_Id := N + 369; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 370;\n+   Name_Has_Access_Values              : constant Name_Id := N + 371; -- GNAT\n+   Name_Has_Discriminants              : constant Name_Id := N + 372; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 373;\n+   Name_Img                            : constant Name_Id := N + 374; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 375; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 376; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 377;\n+   Name_Last_Bit                       : constant Name_Id := N + 378;\n+   Name_Leading_Part                   : constant Name_Id := N + 379;\n+   Name_Length                         : constant Name_Id := N + 380;\n+   Name_Machine_Emax                   : constant Name_Id := N + 381;\n+   Name_Machine_Emin                   : constant Name_Id := N + 382;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 383;\n+   Name_Machine_Overflows              : constant Name_Id := N + 384;\n+   Name_Machine_Radix                  : constant Name_Id := N + 385;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 386;\n+   Name_Machine_Size                   : constant Name_Id := N + 387; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 388; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 389;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 390; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 391; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 392;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 393;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 394;\n+   Name_Model_Small                    : constant Name_Id := N + 395;\n+   Name_Modulus                        : constant Name_Id := N + 396;\n+   Name_Null_Parameter                 : constant Name_Id := N + 397; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 398; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 399;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 400; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 401;\n+   Name_Pos                            : constant Name_Id := N + 402;\n+   Name_Position                       : constant Name_Id := N + 403;\n+   Name_Range                          : constant Name_Id := N + 404;\n+   Name_Range_Length                   : constant Name_Id := N + 405; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 406;\n+   Name_Safe_Emax                      : constant Name_Id := N + 407; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 408;\n+   Name_Safe_Large                     : constant Name_Id := N + 409; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 410;\n+   Name_Safe_Small                     : constant Name_Id := N + 411; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 412;\n+   Name_Scaling                        : constant Name_Id := N + 413;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 414;\n+   Name_Size                           : constant Name_Id := N + 415;\n+   Name_Small                          : constant Name_Id := N + 416;\n+   Name_Storage_Size                   : constant Name_Id := N + 417;\n+   Name_Storage_Unit                   : constant Name_Id := N + 418; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 419;\n+   Name_Target_Name                    : constant Name_Id := N + 420; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 421;\n+   Name_To_Address                     : constant Name_Id := N + 422; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 423; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 424; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 425;\n+   Name_Unchecked_Access               : constant Name_Id := N + 426;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 427;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 428; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 429; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 430; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 431;\n+   Name_Valid                          : constant Name_Id := N + 432;\n+   Name_Value_Size                     : constant Name_Id := N + 433; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 434;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 435; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 436;\n+   Name_Width                          : constant Name_Id := N + 437;\n+   Name_Word_Size                      : constant Name_Id := N + 438; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 438;\n-   Name_Adjacent                       : constant Name_Id := N + 438;\n-   Name_Ceiling                        : constant Name_Id := N + 439;\n-   Name_Copy_Sign                      : constant Name_Id := N + 440;\n-   Name_Floor                          : constant Name_Id := N + 441;\n-   Name_Fraction                       : constant Name_Id := N + 442;\n-   Name_Image                          : constant Name_Id := N + 443;\n-   Name_Input                          : constant Name_Id := N + 444;\n-   Name_Machine                        : constant Name_Id := N + 445;\n-   Name_Max                            : constant Name_Id := N + 446;\n-   Name_Min                            : constant Name_Id := N + 447;\n-   Name_Model                          : constant Name_Id := N + 448;\n-   Name_Pred                           : constant Name_Id := N + 449;\n-   Name_Remainder                      : constant Name_Id := N + 450;\n-   Name_Rounding                       : constant Name_Id := N + 451;\n-   Name_Succ                           : constant Name_Id := N + 452;\n-   Name_Truncation                     : constant Name_Id := N + 453;\n-   Name_Value                          : constant Name_Id := N + 454;\n-   Name_Wide_Image                     : constant Name_Id := N + 455;\n-   Name_Wide_Value                     : constant Name_Id := N + 456;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 456;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 439;\n+   Name_Adjacent                       : constant Name_Id := N + 439;\n+   Name_Ceiling                        : constant Name_Id := N + 440;\n+   Name_Copy_Sign                      : constant Name_Id := N + 441;\n+   Name_Floor                          : constant Name_Id := N + 442;\n+   Name_Fraction                       : constant Name_Id := N + 443;\n+   Name_Image                          : constant Name_Id := N + 444;\n+   Name_Input                          : constant Name_Id := N + 445;\n+   Name_Machine                        : constant Name_Id := N + 446;\n+   Name_Max                            : constant Name_Id := N + 447;\n+   Name_Min                            : constant Name_Id := N + 448;\n+   Name_Model                          : constant Name_Id := N + 449;\n+   Name_Pred                           : constant Name_Id := N + 450;\n+   Name_Remainder                      : constant Name_Id := N + 451;\n+   Name_Rounding                       : constant Name_Id := N + 452;\n+   Name_Succ                           : constant Name_Id := N + 453;\n+   Name_Truncation                     : constant Name_Id := N + 454;\n+   Name_Value                          : constant Name_Id := N + 455;\n+   Name_Wide_Image                     : constant Name_Id := N + 456;\n+   Name_Wide_Value                     : constant Name_Id := N + 457;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 457;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 457;\n-   Name_Output                         : constant Name_Id := N + 457;\n-   Name_Read                           : constant Name_Id := N + 458;\n-   Name_Write                          : constant Name_Id := N + 459;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 459;\n+   First_Procedure_Attribute           : constant Name_Id := N + 458;\n+   Name_Output                         : constant Name_Id := N + 458;\n+   Name_Read                           : constant Name_Id := N + 459;\n+   Name_Write                          : constant Name_Id := N + 460;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 460;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 460;\n-   Name_Elab_Body                      : constant Name_Id := N + 460; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 461; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 462;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 461;\n+   Name_Elab_Body                      : constant Name_Id := N + 461; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 462; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 463;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 463;\n-   Name_Base                           : constant Name_Id := N + 463;\n-   Name_Class                          : constant Name_Id := N + 464;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 464;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 464;\n-   Last_Attribute_Name                 : constant Name_Id := N + 464;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 464;\n+   Name_Base                           : constant Name_Id := N + 464;\n+   Name_Class                          : constant Name_Id := N + 465;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 465;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 465;\n+   Last_Attribute_Name                 : constant Name_Id := N + 465;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 465;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 465;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 466;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 466;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 466;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 466;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 467;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 467;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 467;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 467;\n-   Name_Priority_Queuing               : constant Name_Id := N + 468;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 468;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 468;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 468;\n+   Name_Priority_Queuing               : constant Name_Id := N + 469;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 469;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 469;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 469;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 469;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 470;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 470;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 470;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 470;\n-   Name_Access_Check                   : constant Name_Id := N + 470;\n-   Name_Accessibility_Check            : constant Name_Id := N + 471;\n-   Name_Discriminant_Check             : constant Name_Id := N + 472;\n-   Name_Division_Check                 : constant Name_Id := N + 473;\n-   Name_Elaboration_Check              : constant Name_Id := N + 474;\n-   Name_Index_Check                    : constant Name_Id := N + 475;\n-   Name_Length_Check                   : constant Name_Id := N + 476;\n-   Name_Overflow_Check                 : constant Name_Id := N + 477;\n-   Name_Range_Check                    : constant Name_Id := N + 478;\n-   Name_Storage_Check                  : constant Name_Id := N + 479;\n-   Name_Tag_Check                      : constant Name_Id := N + 480;\n-   Name_All_Checks                     : constant Name_Id := N + 481;\n-   Last_Check_Name                     : constant Name_Id := N + 481;\n+   First_Check_Name                    : constant Name_Id := N + 471;\n+   Name_Access_Check                   : constant Name_Id := N + 471;\n+   Name_Accessibility_Check            : constant Name_Id := N + 472;\n+   Name_Discriminant_Check             : constant Name_Id := N + 473;\n+   Name_Division_Check                 : constant Name_Id := N + 474;\n+   Name_Elaboration_Check              : constant Name_Id := N + 475;\n+   Name_Index_Check                    : constant Name_Id := N + 476;\n+   Name_Length_Check                   : constant Name_Id := N + 477;\n+   Name_Overflow_Check                 : constant Name_Id := N + 478;\n+   Name_Range_Check                    : constant Name_Id := N + 479;\n+   Name_Storage_Check                  : constant Name_Id := N + 480;\n+   Name_Tag_Check                      : constant Name_Id := N + 481;\n+   Name_All_Checks                     : constant Name_Id := N + 482;\n+   Last_Check_Name                     : constant Name_Id := N + 482;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 482;\n-   Name_Abs                            : constant Name_Id := N + 483;\n-   Name_Accept                         : constant Name_Id := N + 484;\n-   Name_And                            : constant Name_Id := N + 485;\n-   Name_All                            : constant Name_Id := N + 486;\n-   Name_Array                          : constant Name_Id := N + 487;\n-   Name_At                             : constant Name_Id := N + 488;\n-   Name_Begin                          : constant Name_Id := N + 489;\n-   Name_Body                           : constant Name_Id := N + 490;\n-   Name_Case                           : constant Name_Id := N + 491;\n-   Name_Constant                       : constant Name_Id := N + 492;\n-   Name_Declare                        : constant Name_Id := N + 493;\n-   Name_Delay                          : constant Name_Id := N + 494;\n-   Name_Do                             : constant Name_Id := N + 495;\n-   Name_Else                           : constant Name_Id := N + 496;\n-   Name_Elsif                          : constant Name_Id := N + 497;\n-   Name_End                            : constant Name_Id := N + 498;\n-   Name_Entry                          : constant Name_Id := N + 499;\n-   Name_Exception                      : constant Name_Id := N + 500;\n-   Name_Exit                           : constant Name_Id := N + 501;\n-   Name_For                            : constant Name_Id := N + 502;\n-   Name_Function                       : constant Name_Id := N + 503;\n-   Name_Generic                        : constant Name_Id := N + 504;\n-   Name_Goto                           : constant Name_Id := N + 505;\n-   Name_If                             : constant Name_Id := N + 506;\n-   Name_In                             : constant Name_Id := N + 507;\n-   Name_Is                             : constant Name_Id := N + 508;\n-   Name_Limited                        : constant Name_Id := N + 509;\n-   Name_Loop                           : constant Name_Id := N + 510;\n-   Name_Mod                            : constant Name_Id := N + 511;\n-   Name_New                            : constant Name_Id := N + 512;\n-   Name_Not                            : constant Name_Id := N + 513;\n-   Name_Null                           : constant Name_Id := N + 514;\n-   Name_Of                             : constant Name_Id := N + 515;\n-   Name_Or                             : constant Name_Id := N + 516;\n-   Name_Others                         : constant Name_Id := N + 517;\n-   Name_Out                            : constant Name_Id := N + 518;\n-   Name_Package                        : constant Name_Id := N + 519;\n-   Name_Pragma                         : constant Name_Id := N + 520;\n-   Name_Private                        : constant Name_Id := N + 521;\n-   Name_Procedure                      : constant Name_Id := N + 522;\n-   Name_Raise                          : constant Name_Id := N + 523;\n-   Name_Record                         : constant Name_Id := N + 524;\n-   Name_Rem                            : constant Name_Id := N + 525;\n-   Name_Renames                        : constant Name_Id := N + 526;\n-   Name_Return                         : constant Name_Id := N + 527;\n-   Name_Reverse                        : constant Name_Id := N + 528;\n-   Name_Select                         : constant Name_Id := N + 529;\n-   Name_Separate                       : constant Name_Id := N + 530;\n-   Name_Subtype                        : constant Name_Id := N + 531;\n-   Name_Task                           : constant Name_Id := N + 532;\n-   Name_Terminate                      : constant Name_Id := N + 533;\n-   Name_Then                           : constant Name_Id := N + 534;\n-   Name_Type                           : constant Name_Id := N + 535;\n-   Name_Use                            : constant Name_Id := N + 536;\n-   Name_When                           : constant Name_Id := N + 537;\n-   Name_While                          : constant Name_Id := N + 538;\n-   Name_With                           : constant Name_Id := N + 539;\n-   Name_Xor                            : constant Name_Id := N + 540;\n+   Name_Abort                          : constant Name_Id := N + 483;\n+   Name_Abs                            : constant Name_Id := N + 484;\n+   Name_Accept                         : constant Name_Id := N + 485;\n+   Name_And                            : constant Name_Id := N + 486;\n+   Name_All                            : constant Name_Id := N + 487;\n+   Name_Array                          : constant Name_Id := N + 488;\n+   Name_At                             : constant Name_Id := N + 489;\n+   Name_Begin                          : constant Name_Id := N + 490;\n+   Name_Body                           : constant Name_Id := N + 491;\n+   Name_Case                           : constant Name_Id := N + 492;\n+   Name_Constant                       : constant Name_Id := N + 493;\n+   Name_Declare                        : constant Name_Id := N + 494;\n+   Name_Delay                          : constant Name_Id := N + 495;\n+   Name_Do                             : constant Name_Id := N + 496;\n+   Name_Else                           : constant Name_Id := N + 497;\n+   Name_Elsif                          : constant Name_Id := N + 498;\n+   Name_End                            : constant Name_Id := N + 499;\n+   Name_Entry                          : constant Name_Id := N + 500;\n+   Name_Exception                      : constant Name_Id := N + 501;\n+   Name_Exit                           : constant Name_Id := N + 502;\n+   Name_For                            : constant Name_Id := N + 503;\n+   Name_Function                       : constant Name_Id := N + 504;\n+   Name_Generic                        : constant Name_Id := N + 505;\n+   Name_Goto                           : constant Name_Id := N + 506;\n+   Name_If                             : constant Name_Id := N + 507;\n+   Name_In                             : constant Name_Id := N + 508;\n+   Name_Is                             : constant Name_Id := N + 509;\n+   Name_Limited                        : constant Name_Id := N + 510;\n+   Name_Loop                           : constant Name_Id := N + 511;\n+   Name_Mod                            : constant Name_Id := N + 512;\n+   Name_New                            : constant Name_Id := N + 513;\n+   Name_Not                            : constant Name_Id := N + 514;\n+   Name_Null                           : constant Name_Id := N + 515;\n+   Name_Of                             : constant Name_Id := N + 516;\n+   Name_Or                             : constant Name_Id := N + 517;\n+   Name_Others                         : constant Name_Id := N + 518;\n+   Name_Out                            : constant Name_Id := N + 519;\n+   Name_Package                        : constant Name_Id := N + 520;\n+   Name_Pragma                         : constant Name_Id := N + 521;\n+   Name_Private                        : constant Name_Id := N + 522;\n+   Name_Procedure                      : constant Name_Id := N + 523;\n+   Name_Raise                          : constant Name_Id := N + 524;\n+   Name_Record                         : constant Name_Id := N + 525;\n+   Name_Rem                            : constant Name_Id := N + 526;\n+   Name_Renames                        : constant Name_Id := N + 527;\n+   Name_Return                         : constant Name_Id := N + 528;\n+   Name_Reverse                        : constant Name_Id := N + 529;\n+   Name_Select                         : constant Name_Id := N + 530;\n+   Name_Separate                       : constant Name_Id := N + 531;\n+   Name_Subtype                        : constant Name_Id := N + 532;\n+   Name_Task                           : constant Name_Id := N + 533;\n+   Name_Terminate                      : constant Name_Id := N + 534;\n+   Name_Then                           : constant Name_Id := N + 535;\n+   Name_Type                           : constant Name_Id := N + 536;\n+   Name_Use                            : constant Name_Id := N + 537;\n+   Name_When                           : constant Name_Id := N + 538;\n+   Name_While                          : constant Name_Id := N + 539;\n+   Name_With                           : constant Name_Id := N + 540;\n+   Name_Xor                            : constant Name_Id := N + 541;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 541;\n-   Name_Divide                         : constant Name_Id := N + 541;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 542;\n-   Name_Exception_Information          : constant Name_Id := N + 543;\n-   Name_Exception_Message              : constant Name_Id := N + 544;\n-   Name_Exception_Name                 : constant Name_Id := N + 545;\n-   Name_File                           : constant Name_Id := N + 546;\n-   Name_Import_Address                 : constant Name_Id := N + 547;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 548;\n-   Name_Import_Value                   : constant Name_Id := N + 549;\n-   Name_Is_Negative                    : constant Name_Id := N + 550;\n-   Name_Line                           : constant Name_Id := N + 551;\n-   Name_Rotate_Left                    : constant Name_Id := N + 552;\n-   Name_Rotate_Right                   : constant Name_Id := N + 553;\n-   Name_Shift_Left                     : constant Name_Id := N + 554;\n-   Name_Shift_Right                    : constant Name_Id := N + 555;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 556;\n-   Name_Source_Location                : constant Name_Id := N + 557;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 558;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 559;\n-   Name_To_Pointer                     : constant Name_Id := N + 560;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 560;\n+   First_Intrinsic_Name                : constant Name_Id := N + 542;\n+   Name_Divide                         : constant Name_Id := N + 542;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 543;\n+   Name_Exception_Information          : constant Name_Id := N + 544;\n+   Name_Exception_Message              : constant Name_Id := N + 545;\n+   Name_Exception_Name                 : constant Name_Id := N + 546;\n+   Name_File                           : constant Name_Id := N + 547;\n+   Name_Import_Address                 : constant Name_Id := N + 548;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 549;\n+   Name_Import_Value                   : constant Name_Id := N + 550;\n+   Name_Is_Negative                    : constant Name_Id := N + 551;\n+   Name_Line                           : constant Name_Id := N + 552;\n+   Name_Rotate_Left                    : constant Name_Id := N + 553;\n+   Name_Rotate_Right                   : constant Name_Id := N + 554;\n+   Name_Shift_Left                     : constant Name_Id := N + 555;\n+   Name_Shift_Right                    : constant Name_Id := N + 556;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 557;\n+   Name_Source_Location                : constant Name_Id := N + 558;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 559;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 560;\n+   Name_To_Pointer                     : constant Name_Id := N + 561;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 561;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 561;\n-   Name_Abstract                       : constant Name_Id := N + 561;\n-   Name_Aliased                        : constant Name_Id := N + 562;\n-   Name_Protected                      : constant Name_Id := N + 563;\n-   Name_Until                          : constant Name_Id := N + 564;\n-   Name_Requeue                        : constant Name_Id := N + 565;\n-   Name_Tagged                         : constant Name_Id := N + 566;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 566;\n+   First_95_Reserved_Word              : constant Name_Id := N + 562;\n+   Name_Abstract                       : constant Name_Id := N + 562;\n+   Name_Aliased                        : constant Name_Id := N + 563;\n+   Name_Protected                      : constant Name_Id := N + 564;\n+   Name_Until                          : constant Name_Id := N + 565;\n+   Name_Requeue                        : constant Name_Id := N + 566;\n+   Name_Tagged                         : constant Name_Id := N + 567;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 567;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 567;\n+   Name_Raise_Exception                : constant Name_Id := N + 568;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 568;\n-   Name_Body_Suffix                    : constant Name_Id := N + 569;\n-   Name_Builder                        : constant Name_Id := N + 570;\n-   Name_Compiler                       : constant Name_Id := N + 571;\n-   Name_Cross_Reference                : constant Name_Id := N + 572;\n-   Name_Default_Switches               : constant Name_Id := N + 573;\n-   Name_Exec_Dir                       : constant Name_Id := N + 574;\n-   Name_Executable                     : constant Name_Id := N + 575;\n-   Name_Executable_Suffix              : constant Name_Id := N + 576;\n-   Name_Extends                        : constant Name_Id := N + 577;\n-   Name_Finder                         : constant Name_Id := N + 578;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 579;\n-   Name_Gnatls                         : constant Name_Id := N + 580;\n-   Name_Gnatstub                       : constant Name_Id := N + 581;\n-   Name_Implementation                 : constant Name_Id := N + 582;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 583;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 584;\n-   Name_Languages                      : constant Name_Id := N + 585;\n-   Name_Library_Dir                    : constant Name_Id := N + 586;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 587;\n-   Name_Library_GCC                    : constant Name_Id := N + 588;\n-   Name_Library_Interface              : constant Name_Id := N + 589;\n-   Name_Library_Kind                   : constant Name_Id := N + 590;\n-   Name_Library_Name                   : constant Name_Id := N + 591;\n-   Name_Library_Options                : constant Name_Id := N + 592;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 593;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 594;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 595;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 596;\n-   Name_Library_Version                : constant Name_Id := N + 597;\n-   Name_Linker                         : constant Name_Id := N + 598;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 599;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 600;\n-   Name_Metrics                        : constant Name_Id := N + 601;\n-   Name_Naming                         : constant Name_Id := N + 602;\n-   Name_Object_Dir                     : constant Name_Id := N + 603;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 604;\n-   Name_Project                        : constant Name_Id := N + 605;\n-   Name_Separate_Suffix                : constant Name_Id := N + 606;\n-   Name_Source_Dirs                    : constant Name_Id := N + 607;\n-   Name_Source_Files                   : constant Name_Id := N + 608;\n-   Name_Source_List_File               : constant Name_Id := N + 609;\n-   Name_Spec                           : constant Name_Id := N + 610;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 611;\n-   Name_Specification                  : constant Name_Id := N + 612;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 613;\n-   Name_Specification_Suffix           : constant Name_Id := N + 614;\n-   Name_Switches                       : constant Name_Id := N + 615;\n+   Name_Binder                         : constant Name_Id := N + 569;\n+   Name_Body_Suffix                    : constant Name_Id := N + 570;\n+   Name_Builder                        : constant Name_Id := N + 571;\n+   Name_Compiler                       : constant Name_Id := N + 572;\n+   Name_Cross_Reference                : constant Name_Id := N + 573;\n+   Name_Default_Switches               : constant Name_Id := N + 574;\n+   Name_Exec_Dir                       : constant Name_Id := N + 575;\n+   Name_Executable                     : constant Name_Id := N + 576;\n+   Name_Executable_Suffix              : constant Name_Id := N + 577;\n+   Name_Extends                        : constant Name_Id := N + 578;\n+   Name_Finder                         : constant Name_Id := N + 579;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 580;\n+   Name_Gnatls                         : constant Name_Id := N + 581;\n+   Name_Gnatstub                       : constant Name_Id := N + 582;\n+   Name_Implementation                 : constant Name_Id := N + 583;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 584;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 585;\n+   Name_Languages                      : constant Name_Id := N + 586;\n+   Name_Library_Dir                    : constant Name_Id := N + 587;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 588;\n+   Name_Library_GCC                    : constant Name_Id := N + 589;\n+   Name_Library_Interface              : constant Name_Id := N + 590;\n+   Name_Library_Kind                   : constant Name_Id := N + 591;\n+   Name_Library_Name                   : constant Name_Id := N + 592;\n+   Name_Library_Options                : constant Name_Id := N + 593;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 594;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 595;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 596;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 597;\n+   Name_Library_Version                : constant Name_Id := N + 598;\n+   Name_Linker                         : constant Name_Id := N + 599;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 600;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 601;\n+   Name_Metrics                        : constant Name_Id := N + 602;\n+   Name_Naming                         : constant Name_Id := N + 603;\n+   Name_Object_Dir                     : constant Name_Id := N + 604;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 605;\n+   Name_Project                        : constant Name_Id := N + 606;\n+   Name_Separate_Suffix                : constant Name_Id := N + 607;\n+   Name_Source_Dirs                    : constant Name_Id := N + 608;\n+   Name_Source_Files                   : constant Name_Id := N + 609;\n+   Name_Source_List_File               : constant Name_Id := N + 610;\n+   Name_Spec                           : constant Name_Id := N + 611;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 612;\n+   Name_Specification                  : constant Name_Id := N + 613;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 614;\n+   Name_Specification_Suffix           : constant Name_Id := N + 615;\n+   Name_Switches                       : constant Name_Id := N + 616;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 616;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 617;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 616;\n+   Last_Predefined_Name                : constant Name_Id := N + 617;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}, {"sha": "c80241b3311843e39b62585b1ab8964aaf687555", "filename": "gcc/ada/system-aix.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                            (AIX/PPC Version)                             --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "73cbcd35ac4dfa8a901171e108a6880a31a525dd", "filename": "gcc/ada/system-darwin-ppc.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -154,6 +154,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "25b72ca1d5960ec33e2a0a87e850f91ec4996b62", "filename": "gcc/ada/system-freebsd-x86.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-freebsd-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-freebsd-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (FreeBSD/x86 Version)                          --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "e9664f09a4514f0af0cfc5efba9334f1693221ec", "filename": "gcc/ada/system-hpux.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                             (HP-UX Version)                              --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := False;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "d8d73a1e5072ee8ae611ef438412ac26dc5e3f44", "filename": "gcc/ada/system-interix.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-interix.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                        (OpenNT/Interix Version)                          --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "2403db75db6dfeb0345683c678486c7e6866df1a", "filename": "gcc/ada/system-irix-n32.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-irix-n32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-irix-n32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-n32.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -140,6 +140,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "b053e01e0ca2b500b70fa1dbce1177ba37cf98c6", "filename": "gcc/ada/system-irix-o32.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-irix-o32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-irix-o32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-o32.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "510673e9d3f95c01efd258ab03501b1a7caa56f0", "filename": "gcc/ada/system-linux-ia64.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ia64.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (GNU-Linux/ia64 Version)                         --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "28edbfecf6768188049b5f6630d07f80aaf55cc3", "filename": "gcc/ada/system-linux-x86.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (GNU-Linux/x86 Version)                         --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "99c33dbdb730247b6b2b42919c7b60858cb6013b", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (GNU-Linux/x86-64 Version)                      --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "9a0bf681ed8cb6a24d9449f7bf1005b8319a0a08", "filename": "gcc/ada/system-lynxos-ppc.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-ppc.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (LynxOS PPC Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "0187b381ebf02fde385dbe2f1bf3b449d846f021", "filename": "gcc/ada/system-lynxos-x86.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-lynxos-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-lynxos-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-x86.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (LynxOS x86 Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "4aafd025770ce07feb9e027dc1a33678b634d486", "filename": "gcc/ada/system-mingw.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                               (NT Version)                               --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "53d8b8c1306a22134d70a7c653f08eb55c028c6a", "filename": "gcc/ada/system-os2.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-os2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-os2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-os2.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                             (OS/2 Version)                               --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "397e38f7fa9722d28b6ef3352f9c93c1fa5b9a32", "filename": "gcc/ada/system-solaris-sparc.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparc.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (SUN Solaris Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "6f774513f162e3bc2918670b44d19c0eac6bbd92", "filename": "gcc/ada/system-solaris-sparcv9.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparcv9.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                        (Solaris Sparcv9 Version)                         --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "c661ac03270d69e79b1f00f3c9de3b7d480cbd34", "filename": "gcc/ada/system-solaris-x86.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (x86 Solaris Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "3134ffe063043c5c3a261a6c45516c9b937fbc99", "filename": "gcc/ada/system-tru64.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-tru64.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (DEC Unix Version)                             --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := True;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "5cfd21bb674a73560f07fe5fe0523884e6877428", "filename": "gcc/ada/system-unixware.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-unixware.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-unixware.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-unixware.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (SCO UnixWare Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "1b4b7c275a9bbc2a8537f5913258c11942589726", "filename": "gcc/ada/system-vms-zcx.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vms-zcx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vms-zcx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-zcx.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := True;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "82faeb39c0ba83616ef22160cea174814896ea59", "filename": "gcc/ada/system-vms.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -128,6 +128,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := True;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "aefdb05abba1723aaf8662351e39f63490ff8344", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -147,6 +147,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := True;\n    Stack_Check_Probes        : constant Boolean := True;"}, {"sha": "9e0d847132c822769f3f2b41f10be53c12aa1b0f", "filename": "gcc/ada/system-vxworks-alpha.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-alpha.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks Version Alpha)                          --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -136,6 +136,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "cdf4fcee8b98d035285c929a86d14b9bca298e3b", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (VxWorks version M68K)                          --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -136,6 +136,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := False;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "3cc13d7c99482cc7d783186f59ec90b757f6e47c", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks Version Mips)                           --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -136,6 +136,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "b73f808a54b591c28d6436ed4e0b66f40838bd4f", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -136,6 +136,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "c6a934018c18e6340d29147a133bc6f98dab85f0", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (VxWorks Version Sparc/64)                         --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -138,6 +138,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "bd1a4d36d70b35337460fb00e1b9389dbb301be6", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -136,6 +136,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "d762fcad363a301318c119b7daa213259d5dce7b", "filename": "gcc/ada/system-vxworks-xscale.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-xscale.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem-vxworks-xscale.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-xscale.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks Version Xscale)                         --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -136,6 +136,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "ff5a57dfa8485096090dd465bc2d5c82a56d99f1", "filename": "gcc/ada/system.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                            (Compiler Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -141,6 +141,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;"}, {"sha": "9447471007c97241ae032b8338971fa6c1887049", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -53,6 +53,7 @@ package body Targparm is\n       FFO,  --   Fractional_Fixed_Ops\n       MOV,  --   Machine_Overflows\n       MRN,  --   Machine_Rounds\n+      PAS,  --   Preallocated_Stacks\n       S64,  --   Support_64_Bit_Divides\n       SAG,  --   Support_Aggregates\n       SCA,  --   Support_Composite_Assign\n@@ -94,6 +95,7 @@ package body Targparm is\n    FFO_Str : aliased constant Source_Buffer := \"Fractional_Fixed_Ops\";\n    MOV_Str : aliased constant Source_Buffer := \"Machine_Overflows\";\n    MRN_Str : aliased constant Source_Buffer := \"Machine_Rounds\";\n+   PAS_Str : aliased constant Source_Buffer := \"Preallocated_Stacks\";\n    S64_Str : aliased constant Source_Buffer := \"Support_64_Bit_Divides\";\n    SAG_Str : aliased constant Source_Buffer := \"Support_Aggregates\";\n    SCA_Str : aliased constant Source_Buffer := \"Support_Composite_Assign\";\n@@ -132,6 +134,7 @@ package body Targparm is\n       FFO_Str'Access,\n       MOV_Str'Access,\n       MRN_Str'Access,\n+      PAS_Str'Access,\n       S64_Str'Access,\n       SAG_Str'Access,\n       SCA_Str'Access,\n@@ -557,6 +560,7 @@ package body Targparm is\n                      when FFO => Fractional_Fixed_Ops_On_Target      := Result;\n                      when MOV => Machine_Overflows_On_Target         := Result;\n                      when MRN => Machine_Rounds_On_Target            := Result;\n+                     when PAS => Preallocated_Stacks_On_Target       := Result;\n                      when S64 => Support_64_Bit_Divides_On_Target    := Result;\n                      when SAG => Support_Aggregates_On_Target        := Result;\n                      when SCA => Support_Composite_Assign_On_Target  := Result;"}, {"sha": "48f8c32855999a79fdc0103fd81625cc89a6b0bb", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e28d55eb5f3f601b309786fae3b262643d20e/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=b23e28d55eb5f3f601b309786fae3b262643d20e", "patch": "@@ -345,6 +345,13 @@ package Targparm is\n    --\n    --    The routine __gnat_handler_installed is not imported\n \n+   Preallocated_Stacks_On_Target : Boolean;\n+   --  If this flag is True, then the expander preallocates all task stacks\n+   --  at compile time. If the flag is False, then task stacks are not pre-\n+   --  allocated, and task stack allocation is the responsibility of the\n+   --  run-time (which typically delegates the task to the underlying\n+   --  operating system environment).\n+\n    ---------------------\n    -- Duration Format --\n    ---------------------"}]}