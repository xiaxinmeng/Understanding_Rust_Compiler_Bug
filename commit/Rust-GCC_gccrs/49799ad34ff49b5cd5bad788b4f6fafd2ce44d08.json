{"sha": "49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk3OTlhZDM0ZmY0OWI1Y2Q1YmFkNzg4YjRmNmZhZmQyY2U0NGQwOA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-06-26T17:59:42Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-06-26T17:59:42Z"}, "message": "posix-threads.h: Fix coding style aberrations from 2006-06-19 check-in.\n\n        * include/posix-threads.h: Fix coding style aberrations from\n        2006-06-19 check-in.\n        * posix-threads.cc (_Jv_ThreadDebugSuspend): Ditto.\n        * include/win32-threads.h (_Jv_ThreadDebugSuspend): Ditto.\n        * win32-threads.cc (_Jv_ThreadDebugSuspend): Ditto.\n\nFrom-SVN: r115020", "tree": {"sha": "45c3bb3ae5021c15f5c6b3a990fd245c60414894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c3bb3ae5021c15f5c6b3a990fd245c60414894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9330cba6e3eb902fd41f3bcb40c9ff063cd83556"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "d87c1b9bad97c1e005e98df67272370badd02bb0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "patch": "@@ -1,3 +1,11 @@\n+2006-06-26  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/posix-threads.h: Fix coding style aberrations from\n+\t2006-06-19 check-in.\n+\t* posix-threads.cc (_Jv_ThreadDebugSuspend): Ditto.\n+\t* include/win32-threads.h (_Jv_ThreadDebugSuspend): Ditto.\n+\t* win32-threads.cc (_Jv_ThreadDebugSuspend): Ditto.\n+\n 2006-06-26  Keith Seitz  <keiths@redhat.com>\n \n \t* include/no-gc.h (_Jv_SuspendThread): Declare."}, {"sha": "8d69652e9e147c8c2e6e16f4373863dcd7a09f08", "filename": "libjava/include/posix-threads.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Finclude%2Fposix-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Finclude%2Fposix-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix-threads.h?ref=49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "patch": "@@ -378,14 +378,14 @@ void _Jv_ThreadInterrupt (_Jv_Thread_t *data);\n // suspend count was zero, i.e., it is not suspended, this function\n // will suspend the thread. This function may be used to suspend\n // any thread from any other thread (or suspend itself).\n-void _Jv_ThreadDebugSuspend (_Jv_Thread_t* data);\n+void _Jv_ThreadDebugSuspend (_Jv_Thread_t *data);\n \n // Decreases a thread's suspend count. If the thread's new thread\n // count is zero, the thread is resumed. This function may be used\n // by any thread to resume any other thread.\n-void _Jv_ThreadDebugResume (_Jv_Thread_t* data);\n+void _Jv_ThreadDebugResume (_Jv_Thread_t *data);\n \n // Get the suspend count for a thread\n-jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data);\n+jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data);\n \n #endif /* __JV_POSIX_THREADS__ */"}, {"sha": "27f7b65bf5aefcfb2beb8ebc8b8b07df813f4cdb", "filename": "libjava/include/win32-threads.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Finclude%2Fwin32-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Finclude%2Fwin32-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32-threads.h?ref=49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "patch": "@@ -197,15 +197,15 @@ HANDLE _Jv_Win32GetInterruptEvent (void);\n // suspend count was zero, i.e., it is not suspended, this function\n // will suspend the thread. This function may be used to suspend\n // any thread from any other thread (or suspend itself).\n-void _Jv_ThreadDebugSuspend (_Jv_Thread_t* data);\n+void _Jv_ThreadDebugSuspend (_Jv_Thread_t *data);\n \n // Decreases a thread's suspend count. If the thread's new thread\n // count is zero, the thread is resumed. This function may be used\n // by any thread to resume any other thread.\n-void _Jv_ThreadDebugResume (_Jv_Thread_t* data);\n+void _Jv_ThreadDebugResume (_Jv_Thread_t *data);\n \n // Get the suspend count for a thread\n-jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data);\n+jint _Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data);\n \n // Remove defines from <windows.h> that conflict with various things in libgcj code\n "}, {"sha": "7d35e518689cb5b55a512f133c59d294e6b9fc62", "filename": "libjava/posix-threads.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Fposix-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Fposix-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fposix-threads.cc?ref=49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "patch": "@@ -506,17 +506,17 @@ _Jv_ThreadWait (void)\n }\n \n void\n-_Jv_ThreadDebugSuspend (_Jv_Thread_t* data)\n+_Jv_ThreadDebugSuspend (_Jv_Thread_t *data)\n {\n }\n \n void\n-_Jv_ThreadDebugResume (_Jv_Thread_t* data)\n+_Jv_ThreadDebugResume (_Jv_Thread_t *data)\n {\n }\n \n jint\n-_Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data)\n+_Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data)\n {\n   return -1;\n }"}, {"sha": "e715102f2261a34798edb1bf64719e676369d6b6", "filename": "libjava/win32-threads.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Fwin32-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49799ad34ff49b5cd5bad788b4f6fafd2ce44d08/libjava%2Fwin32-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32-threads.cc?ref=49799ad34ff49b5cd5bad788b4f6fafd2ce44d08", "patch": "@@ -421,17 +421,17 @@ _Jv_ThreadInterrupt (_Jv_Thread_t *data)\n }\n \n void\n-_Jv_ThreadDebugSuspend (_Jv_Thread_t* data)\n+_Jv_ThreadDebugSuspend (_Jv_Thread_t *data)\n {\n }\n \n void\n-_Jv_ThreadDebugResume (_Jv_Thread_t* data)\n+_Jv_ThreadDebugResume (_Jv_Thread_t *data)\n {\n }\n \n jint\n-_Jv_ThreadDebugSuspendCount (_Jv_Thread_t* data)\n+_Jv_ThreadDebugSuspendCount (_Jv_Thread_t *data)\n {\n   return -1;\n }"}]}