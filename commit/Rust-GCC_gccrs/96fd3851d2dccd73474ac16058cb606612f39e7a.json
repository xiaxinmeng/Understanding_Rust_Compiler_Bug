{"sha": "96fd3851d2dccd73474ac16058cb606612f39e7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmZDM4NTFkMmRjY2Q3MzQ3NGFjMTYwNThjYjYwNjYxMmYzOWU3YQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-09-06T12:39:17Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-09-06T12:39:17Z"}, "message": "s390.md (\"*adddi3_cc\", [...]): Use \"nonimmediate_operand\" instead of \"register_operand\" as predicate for \"%0\"...\n\n\t* config/s390/s390.md (\"*adddi3_cc\", \"*adddi3_cconly\",\n\t\"*adddi3_cconly2\", \"*adddi3_64\", \"*adddi3_31\", \"adddi3\",\n\t\"*addsi3_carry1_cc\", \"*addsi3_carry1_cconly\",\n\t\"*addsi3_carry2_cc\", \"*addsi3_carry2_cconly\",\n\t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\", \"addsi3\",\n\t\"adddf3\", \"*adddf3\", \"*adddf3_ibm\",\n\t\"addsf3\", \"*addsf3\", \"*addsf3_ibm\",\n\t\"muldi3\", \"mulsi3\", \"mulsidi3\",\n\t\"muldf3\", \"*muldf3\", \"*muldf3_ibm\",\n\t\"mulsf3\", \"*mulsf3\", \"*mulsf3_ibm\",\n\t\"*anddi3_cc\", \"*anddi3_cconly\", \"anddi3\",\n\t\"*andsi3_cc\", \"*andsi3_cconly\", \"andsi3\",\n\t\"*iordi3_cc\", \"*iordi3_cconly\", \"iordi3\",\n\t\"*iorsi3_cc\", \"*iorsi3_cconly\", \"iorsi3\",\n\t\"*xordi3_cc\", \"*xordi3_cconly\", \"xordi3\",\n\t\"*xorsi3_cc\", \"*xorsi3_cconly\", \"xorsi3\"): Use \"nonimmediate_operand\"\n\tinstead of \"register_operand\" as predicate for \"%0\" operand.\n\nFrom-SVN: r56881", "tree": {"sha": "e7bc753504f4dfd0bd92bae2f28ad76d7634e315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7bc753504f4dfd0bd92bae2f28ad76d7634e315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96fd3851d2dccd73474ac16058cb606612f39e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96fd3851d2dccd73474ac16058cb606612f39e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96fd3851d2dccd73474ac16058cb606612f39e7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96fd3851d2dccd73474ac16058cb606612f39e7a/comments", "author": null, "committer": null, "parents": [{"sha": "2225262510abac21b57dfb6e1e93388c6cee6c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2225262510abac21b57dfb6e1e93388c6cee6c86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2225262510abac21b57dfb6e1e93388c6cee6c86"}], "stats": {"total": 114, "additions": 67, "deletions": 47}, "files": [{"sha": "b352d17c60d7bdf34afccd05a218f1ba853817cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96fd3851d2dccd73474ac16058cb606612f39e7a", "patch": "@@ -1,3 +1,23 @@\n+2002-09-06  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"*adddi3_cc\", \"*adddi3_cconly\", \n+\t\"*adddi3_cconly2\", \"*adddi3_64\", \"*adddi3_31\", \"adddi3\",\n+\t\"*addsi3_carry1_cc\", \"*addsi3_carry1_cconly\",\t\n+\t\"*addsi3_carry2_cc\", \"*addsi3_carry2_cconly\",\n+\t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\", \"addsi3\",\n+\t\"adddf3\", \"*adddf3\", \"*adddf3_ibm\", \n+\t\"addsf3\", \"*addsf3\", \"*addsf3_ibm\",\n+\t\"muldi3\", \"mulsi3\", \"mulsidi3\",\n+\t\"muldf3\", \"*muldf3\", \"*muldf3_ibm\",\n+\t\"mulsf3\", \"*mulsf3\", \"*mulsf3_ibm\",\n+\t\"*anddi3_cc\", \"*anddi3_cconly\", \"anddi3\",\n+\t\"*andsi3_cc\", \"*andsi3_cconly\", \"andsi3\",\n+\t\"*iordi3_cc\", \"*iordi3_cconly\", \"iordi3\",\n+\t\"*iorsi3_cc\", \"*iorsi3_cconly\", \"iorsi3\",\n+\t\"*xordi3_cc\", \"*xordi3_cconly\", \"xordi3\",\n+\t\"*xorsi3_cc\", \"*xorsi3_cconly\", \"xorsi3\"): Use \"nonimmediate_operand\"\n+\tinstead of \"register_operand\" as predicate for \"%0\" operand.\n+\n 2002-09-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* configure.in (HAVE_AS_OFFSETABLE_LO10): Use -xarch=v9"}, {"sha": "b146174fa8f2224ca71e50521d238396beb19236", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96fd3851d2dccd73474ac16058cb606612f39e7a/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=96fd3851d2dccd73474ac16058cb606612f39e7a", "patch": "@@ -3082,7 +3082,7 @@\n \n (define_insn \"*adddi3_cc\"\n   [(set (reg 33) \n-        (compare (plus:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3096,7 +3096,7 @@\n \n (define_insn \"*adddi3_cconly\"\n   [(set (reg 33) \n-        (compare (plus:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -3109,7 +3109,7 @@\n \n (define_insn \"*adddi3_cconly2\"\n   [(set (reg 33) \n-        (compare (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                  (neg:SI (match_operand:DI 2 \"general_operand\" \"d,m\"))))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCLmode) && TARGET_64BIT\"\n@@ -3121,7 +3121,7 @@\n \n (define_insn \"*adddi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d\")\n-        (plus:DI (match_operand:DI 1 \"register_operand\" \"%0,0,0\")\n+        (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                  (match_operand:DI 2 \"general_operand\" \"d,K,m\") ) )\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n@@ -3134,7 +3134,7 @@\n \n (define_insn_and_split \"*adddi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n-        (plus:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n+        (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0\")\n                  (match_operand:DI 2 \"general_operand\" \"dm\") ) )\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n@@ -3169,7 +3169,7 @@\n (define_expand \"adddi3\"\n   [(parallel\n     [(set (match_operand:DI 0 \"register_operand\" \"\")\n-          (plus:DI (match_operand:DI 1 \"register_operand\" \"\")\n+          (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n                    (match_operand:DI 2 \"general_operand\" \"\")))\n      (clobber (reg:CC 33))])]\n   \"\"\n@@ -3212,7 +3212,7 @@\n \n (define_insn \"*addsi3_carry1_cc\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 1)))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -3226,7 +3226,7 @@\n \n (define_insn \"*addsi3_carry1_cconly\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 1)))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n@@ -3239,7 +3239,7 @@\n \n (define_insn \"*addsi3_carry2_cc\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 2)))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -3253,7 +3253,7 @@\n \n (define_insn \"*addsi3_carry2_cconly\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (match_dup 2)))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n@@ -3266,7 +3266,7 @@\n \n (define_insn \"*addsi3_cc\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -3280,7 +3280,7 @@\n \n (define_insn \"*addsi3_cconly\"\n   [(set (reg 33) \n-        (compare (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                           (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n@@ -3293,7 +3293,7 @@\n \n (define_insn \"*addsi3_cconly2\"\n   [(set (reg 33) \n-        (compare (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                  (neg:SI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCLmode)\"\n@@ -3325,7 +3325,7 @@\n \n (define_insn \"addsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0,0\")\n+        (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                  (match_operand:SI 2 \"general_operand\" \"d,K,m\")))\n    (clobber (reg:CC 33))]\n   \"\"\n@@ -3364,15 +3364,15 @@\n (define_expand \"adddf3\"\n   [(parallel\n     [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-          (plus:DF (match_operand:DF 1 \"register_operand\" \"%0,0\")\n+          (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n                    (match_operand:DF 2 \"general_operand\" \"f,m\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*adddf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (plus:DF (match_operand:DF 1 \"register_operand\" \"%0,0\")\n+        (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n@@ -3384,7 +3384,7 @@\n \n (define_insn \"*adddf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (plus:DF (match_operand:DF 1 \"register_operand\" \"%0,0\")\n+        (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n@@ -3401,15 +3401,15 @@\n (define_expand \"addsf3\"\n   [(parallel\n     [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-          (plus:SF (match_operand:SF 1 \"register_operand\" \"%0,0\")\n+          (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                    (match_operand:SF 2 \"general_operand\" \"f,m\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (plus:SF (match_operand:SF 1 \"register_operand\" \"%0,0\")\n+        (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n@@ -3421,7 +3421,7 @@\n \n (define_insn \"*addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (plus:SF (match_operand:SF 1 \"register_operand\" \"%0,0\")\n+        (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n@@ -3762,7 +3762,7 @@\n \n (define_insn \"muldi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d\")\n-        (mult:DI (match_operand:DI 1 \"register_operand\" \"%0,0,0\")\n+        (mult:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                  (match_operand:DI 2 \"general_operand\" \"d,K,m\")))]\n   \"TARGET_64BIT\"\n   \"@\n@@ -3779,7 +3779,7 @@\n \n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (mult:SI  (match_operand:SI 1 \"register_operand\" \"%0,0,0\")\n+        (mult:SI  (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n                   (match_operand:SI 2 \"general_operand\" \"d,K,m\")))]\n   \"\"\n   \"@\n@@ -3796,7 +3796,7 @@\n \n (define_expand \"mulsidi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n+\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"\"))))]\n   \"!TARGET_64BIT\"\n   \"\n@@ -3836,15 +3836,15 @@\n (define_expand \"muldf3\"\n   [(parallel\n     [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-          (mult:DF (match_operand:DF 1 \"register_operand\" \"%0,0\")\n+          (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n                    (match_operand:DF 2 \"general_operand\" \"f,m\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*muldf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (mult:DF (match_operand:DF 1 \"register_operand\" \"%0,0\")\n+        (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n@@ -3857,7 +3857,7 @@\n \n (define_insn \"*muldf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (mult:DF (match_operand:DF 1 \"register_operand\" \"%0,0\")\n+        (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:DF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n@@ -3875,15 +3875,15 @@\n (define_expand \"mulsf3\"\n   [(parallel\n     [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-          (mult:SF (match_operand:SF 1 \"register_operand\" \"%0,0\")\n+          (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                    (match_operand:SF 2 \"general_operand\" \"f,m\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n (define_insn \"*mulsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (mult:SF (match_operand:SF 1 \"register_operand\" \"%0,0\")\n+        (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n@@ -3896,7 +3896,7 @@\n \n (define_insn \"*mulsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (mult:SF (match_operand:SF 1 \"register_operand\" \"%0,0\")\n+        (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:SF 2 \"general_operand\" \"f,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n@@ -4395,7 +4395,7 @@\n \n (define_insn \"*anddi3_cc\"\n   [(set (reg 33)\n-        (compare (and:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4409,7 +4409,7 @@\n \n (define_insn \"*anddi3_cconly\"\n   [(set (reg 33)\n-        (compare (and:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -4445,7 +4445,7 @@\n \n (define_insn \"anddi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (and:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                 (match_operand:DI 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n@@ -4481,7 +4481,7 @@\n \n (define_insn \"*andsi3_cc\"\n   [(set (reg 33)\n-        (compare (and:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -4495,7 +4495,7 @@\n \n (define_insn \"*andsi3_cconly\"\n   [(set (reg 33)\n-        (compare (and:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n@@ -4529,7 +4529,7 @@\n \n (define_insn \"andsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (and:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC 33))]\n   \"\"\n@@ -4666,7 +4666,7 @@\n \n (define_insn \"*iordi3_cc\"\n   [(set (reg 33)\n-        (compare (ior:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4680,7 +4680,7 @@\n \n (define_insn \"*iordi3_cconly\"\n   [(set (reg 33)\n-        (compare (ior:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -4716,7 +4716,7 @@\n \n (define_insn \"iordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (ior:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                 (match_operand:DI 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n@@ -4752,7 +4752,7 @@\n \n (define_insn \"*iorsi3_cc\"\n   [(set (reg 33)\n-        (compare (ior:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -4766,7 +4766,7 @@\n \n (define_insn \"*iorsi3_cconly\"\n   [(set (reg 33)\n-        (compare (ior:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n@@ -4800,7 +4800,7 @@\n \n (define_insn \"iorsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (ior:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC 33))]\n   \"\"\n@@ -4937,7 +4937,7 @@\n \n (define_insn \"*xordi3_cc\"\n   [(set (reg 33)\n-        (compare (xor:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4951,7 +4951,7 @@\n \n (define_insn \"*xordi3_cconly\"\n   [(set (reg 33)\n-        (compare (xor:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (compare (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -4964,7 +4964,7 @@\n \n (define_insn \"xordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (xor:DI (match_operand:DI 1 \"register_operand\" \"%0,0\")\n+        (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n                 (match_operand:DI 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n@@ -5000,7 +5000,7 @@\n \n (define_insn \"*xorsi3_cc\"\n   [(set (reg 33)\n-        (compare (xor:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -5014,7 +5014,7 @@\n \n (define_insn \"*xorsi3_cconly\"\n   [(set (reg 33)\n-        (compare (xor:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                          (match_operand:SI 2 \"general_operand\" \"d,m\"))\n                  (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=d,d\"))]\n@@ -5027,7 +5027,7 @@\n \n (define_insn \"xorsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (xor:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+        (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n                 (match_operand:SI 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC 33))]\n   \"\""}]}