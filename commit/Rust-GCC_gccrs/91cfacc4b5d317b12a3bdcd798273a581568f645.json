{"sha": "91cfacc4b5d317b12a3bdcd798273a581568f645", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFjZmFjYzRiNWQzMTdiMTJhM2JkY2Q3OTgyNzNhNTgxNTY4ZjY0NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-03T17:08:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-03T17:08:01Z"}, "message": "libstdc++: Disable std::array assertions for C++11 constexpr\n\nThe recent changes to add assertions to std::array broke the functions\nthat need to be constexpr in C++11, because of the restrictive rules for\nconstexpr functions in C++11.\n\nThis simply disables the assertions for C++11 mode, so the functions can\nbe constexpr again.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/array (array::operator[](size_t) const, array::front() const)\n\t(array::back() const) [__cplusplus == 201103]: Disable\n\tassertions.\n\t* testsuite/23_containers/array/element_access/constexpr_element_access.cc:\n\tCheck for correct values.\n\t* testsuite/23_containers/array/tuple_interface/get_neg.cc:\n\tAdjust dg-error line numbers.\n\t* testsuite/23_containers/array/debug/constexpr_c++11.cc: New test.", "tree": {"sha": "8a0ccc7af231d5bb384b1ae116d356e0afc85024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a0ccc7af231d5bb384b1ae116d356e0afc85024"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91cfacc4b5d317b12a3bdcd798273a581568f645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91cfacc4b5d317b12a3bdcd798273a581568f645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91cfacc4b5d317b12a3bdcd798273a581568f645", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91cfacc4b5d317b12a3bdcd798273a581568f645/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb8c2b30b947dd8a2012ee658117bea05e46bc85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8c2b30b947dd8a2012ee658117bea05e46bc85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8c2b30b947dd8a2012ee658117bea05e46bc85"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "807509940582117b618cd0f366a0eb314b498fd3", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=91cfacc4b5d317b12a3bdcd798273a581568f645", "patch": "@@ -192,7 +192,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr const_reference\n       operator[](size_type __n) const noexcept\n       {\n+#if __cplusplus >= 201402L\n \t__glibcxx_requires_subscript(__n);\n+#endif\n \treturn _AT_Type::_S_ref(_M_elems, __n);\n       }\n \n@@ -228,7 +230,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr const_reference\n       front() const noexcept\n       {\n+#if __cplusplus >= 201402L\n \t__glibcxx_requires_nonempty();\n+#endif\n \treturn _AT_Type::_S_ref(_M_elems, 0);\n       }\n \n@@ -242,7 +246,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr const_reference\n       back() const noexcept\n       {\n+#if __cplusplus >= 201402L\n \t__glibcxx_requires_nonempty();\n+#endif\n \treturn _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)\n  \t           : _AT_Type::_S_ref(_M_elems, 0);\n       }"}, {"sha": "c8b3599410264d9a71e791aa3dc8b734ac05b338", "filename": "libstdc++-v3/testsuite/23_containers/array/debug/constexpr_c++11.cc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fdebug%2Fconstexpr_c%2B%2B11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fdebug%2Fconstexpr_c%2B%2B11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fdebug%2Fconstexpr_c%2B%2B11.cc?ref=91cfacc4b5d317b12a3bdcd798273a581568f645", "patch": "@@ -0,0 +1,32 @@\n+// { dg-options \"-std=gnu++11 -D_GLIBCXX_DEBUG\" }\n+// { dg-do compile { target c++11 } }\n+\n+// Copyright (C) 2011-2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <array>\n+\n+void test01()\n+{\n+  // array\n+  constexpr std::array<std::size_t, 6> a = { { 0, 55, 66, 99, 4115, 2 } };\n+  constexpr auto v1 = a[1];\n+  constexpr auto v2 = a.at(2);\n+  constexpr auto v3 = a.front();\n+  constexpr auto v4 = a.back();\n+  static_assert( (v1 + v2 + v3 + v4) == (55 + 66 + 0 + 2), \"\" );\n+}"}, {"sha": "037f6ea4223597d28aa82d62acb41fdab087f482", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/constexpr_element_access.cc", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_element_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_element_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_element_access.cc?ref=91cfacc4b5d317b12a3bdcd798273a581568f645", "patch": "@@ -19,14 +19,13 @@\n \n #include <array>\n \n-int main()\n+void test01()\n {\n   // array\n-  typedef std::array<std::size_t, 6> array_type;\n-  constexpr array_type a = { { 0, 55, 66, 99, 4115, 2 } };\n-  constexpr auto v1 __attribute__((unused)) = a[1];\n-  constexpr auto v2 __attribute__((unused)) = a.at(2);\n-  constexpr auto v3 __attribute__((unused)) = a.front();\n-  constexpr auto v4 __attribute__((unused)) = a.back();\n-  return 0;\n+  constexpr std::array<std::size_t, 6> a = { { 0, 55, 66, 99, 4115, 2 } };\n+  constexpr auto v1 = a[1];\n+  constexpr auto v2 = a.at(2);\n+  constexpr auto v3 = a.front();\n+  constexpr auto v4 = a.back();\n+  static_assert( (v1 + v2 + v3 + v4) == (55 + 66 + 0 + 2), \"\" );\n }"}, {"sha": "e287eef2f614bb402611468f413244d2d1a1d71e", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/get_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91cfacc4b5d317b12a3bdcd798273a581568f645/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Fget_neg.cc?ref=91cfacc4b5d317b12a3bdcd798273a581568f645", "patch": "@@ -26,6 +26,6 @@ int n1 = std::get<1>(a);\n int n2 = std::get<1>(std::move(a));\n int n3 = std::get<1>(ca);\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 357 }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 365 }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 373 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 363 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 371 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 379 }"}]}