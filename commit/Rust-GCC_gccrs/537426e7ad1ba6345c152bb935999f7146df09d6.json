{"sha": "537426e7ad1ba6345c152bb935999f7146df09d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3NDI2ZTdhZDFiYTYzNDVjMTUyYmI5MzU5OTlmNzE0NmRmMDlkNg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-11-02T22:57:13Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-11-02T22:57:13Z"}, "message": "re PR target/27405 (gcc.c-torture/execute/960209-1.c ICEs on sh64-* with -O3)\n\n\tPR target/27405\n\t* config/sh/sh.md (cmp{eq,gt,gtu}{si,di}_media): Remove.\n\t(cmpsi{eq,gt,gtu}{si,di}_media): Rename to\n\tcmp{eq,gt,gtu}{si,di}_media.\n\t(*cmpne0si_media): Remove.\n\t(*movsicc_umin): Adjust gen_cmp*_media call.\n\t(unordered): Change the mode of unordered and operands[1] to\n\tSImode.\n\t(seq): Adjust gen_cmp*_media calls.  Make the mode of\n\ta temporary result of compare SImode if needed.  If the mode\n\tof operands[0] is DImode, extend the temporary result to DImode.\n\t(slt, sle, sgt, sge, sgtu, sltu, sleu, sgue, sne): Likewise.\n\t(sunorderd): Change the mode of match_operand and unorderd to\n\tSImode.\n\t(cmpeq{sf,df}_media): Remove.\n\t(cmpsieq{sf,df}_media): Rename to cmpeq{sf,df}_media.\n\t(cmp{gt,ge,un}{sf,df}_media): Change the mode of match_operand\n\tand compare operation to SImode.\n\nFrom-SVN: r118435", "tree": {"sha": "f791e0570e23b2ca23ab9c49d9d95cb017473134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f791e0570e23b2ca23ab9c49d9d95cb017473134"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/537426e7ad1ba6345c152bb935999f7146df09d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537426e7ad1ba6345c152bb935999f7146df09d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537426e7ad1ba6345c152bb935999f7146df09d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537426e7ad1ba6345c152bb935999f7146df09d6/comments", "author": null, "committer": null, "parents": [{"sha": "a6f07cc35dc5a1ffcc4cfcf4b0c66cfef341959a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f07cc35dc5a1ffcc4cfcf4b0c66cfef341959a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f07cc35dc5a1ffcc4cfcf4b0c66cfef341959a"}], "stats": {"total": 322, "additions": 169, "deletions": 153}, "files": [{"sha": "383ce954b568d4bba473964c145ee0e95c105c47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537426e7ad1ba6345c152bb935999f7146df09d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537426e7ad1ba6345c152bb935999f7146df09d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=537426e7ad1ba6345c152bb935999f7146df09d6", "patch": "@@ -1,3 +1,24 @@\n+2006-11-02  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/27405\n+\t* config/sh/sh.md (cmp{eq,gt,gtu}{si,di}_media): Remove.\n+\t(cmpsi{eq,gt,gtu}{si,di}_media): Rename to\n+\tcmp{eq,gt,gtu}{si,di}_media.\n+\t(*cmpne0si_media): Remove.\n+\t(*movsicc_umin): Adjust gen_cmp*_media call.\n+\t(unordered): Change the mode of unordered and operands[1] to\n+\tSImode.\n+\t(seq): Adjust gen_cmp*_media calls.  Make the mode of\n+\ta temporary result of compare SImode if needed.  If the mode\n+\tof operands[0] is DImode, extend the temporary result to DImode.\n+\t(slt, sle, sgt, sge, sgtu, sltu, sleu, sgue, sne): Likewise.\n+\t(sunorderd): Change the mode of match_operand and unorderd to\n+\tSImode.\n+\t(cmpeq{sf,df}_media): Remove.\n+\t(cmpsieq{sf,df}_media): Rename to cmpeq{sf,df}_media.\n+\t(cmp{gt,ge,un}{sf,df}_media): Change the mode of match_operand\n+\tand compare operation to SImode.\n+\n 2006-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* doc/install.texi (sparc-sun-solaris2*): Update GMP/MPFR build"}, {"sha": "d091dfe0effa5e5261a10782e8e62521c9e3d88d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 148, "deletions": 153, "changes": 301, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537426e7ad1ba6345c152bb935999f7146df09d6/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537426e7ad1ba6345c152bb935999f7146df09d6/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=537426e7ad1ba6345c152bb935999f7146df09d6", "patch": "@@ -751,94 +751,46 @@\n    (set_attr \"type\" \"arith3\")])\n \n (define_insn \"cmpeqsi_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(eq:DI (match_operand:SI 1 \"logical_operand\" \"%r\")\n-\t       (match_operand:SI 2 \"cmp_operand\" \"Nr\")))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpeq\t%1, %N2, %0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n-(define_insn \"cmpeqdi_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(eq:DI (match_operand:DI 1 \"register_operand\" \"%r\")\n-\t       (match_operand:DI 2 \"cmp_operand\" \"Nr\")))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpeq\t%1, %N2, %0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n-(define_insn \"cmpgtsi_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gt:DI (match_operand:SI 1 \"cmp_operand\" \"Nr\")\n-\t       (match_operand:SI 2 \"cmp_operand\" \"rN\")))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpgt\t%N1, %N2, %0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n-(define_insn \"cmpgtdi_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gt:DI (match_operand:DI 1 \"arith_reg_or_0_operand\" \"Nr\")\n-\t       (match_operand:DI 2 \"arith_reg_or_0_operand\" \"rN\")))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpgt\t%N1, %N2, %0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n-(define_insn \"cmpgtusi_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gtu:DI (match_operand:SI 1 \"cmp_operand\" \"Nr\")\n-\t\t(match_operand:SI 2 \"cmp_operand\" \"rN\")))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpgtu\t%N1, %N2, %0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n-(define_insn \"cmpgtudi_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gtu:DI (match_operand:DI 1 \"arith_reg_or_0_operand\" \"Nr\")\n-\t\t(match_operand:DI 2 \"arith_reg_or_0_operand\" \"rN\")))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpgtu\t%N1, %N2, %0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n-(define_insn \"cmpsieqsi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (match_operand:SI 1 \"logical_operand\" \"%r\")\n \t       (match_operand:SI 2 \"cmp_operand\" \"Nr\")))]\n   \"TARGET_SHMEDIA\"\n   \"cmpeq\t%1, %N2, %0\"\n   [(set_attr \"type\" \"cmp_media\")])\n \n-(define_insn \"cmpsieqdi_media\"\n+(define_insn \"cmpeqdi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (match_operand:DI 1 \"register_operand\" \"%r\")\n \t       (match_operand:DI 2 \"cmp_operand\" \"Nr\")))]\n   \"TARGET_SHMEDIA\"\n   \"cmpeq\t%1, %N2, %0\"\n   [(set_attr \"type\" \"cmp_media\")])\n \n-(define_insn \"cmpsigtsi_media\"\n+(define_insn \"cmpgtsi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(gt:SI (match_operand:SI 1 \"cmp_operand\" \"Nr\")\n \t       (match_operand:SI 2 \"cmp_operand\" \"rN\")))]\n   \"TARGET_SHMEDIA\"\n   \"cmpgt\t%N1, %N2, %0\"\n   [(set_attr \"type\" \"cmp_media\")])\n \n-(define_insn \"cmpsigtdi_media\"\n+(define_insn \"cmpgtdi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(gt:SI (match_operand:DI 1 \"arith_reg_or_0_operand\" \"Nr\")\n \t       (match_operand:DI 2 \"arith_reg_or_0_operand\" \"rN\")))]\n   \"TARGET_SHMEDIA\"\n   \"cmpgt\t%N1, %N2, %0\"\n   [(set_attr \"type\" \"cmp_media\")])\n \n-(define_insn \"cmpsigtusi_media\"\n+(define_insn \"cmpgtusi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(gtu:SI (match_operand:SI 1 \"cmp_operand\" \"Nr\")\n \t\t(match_operand:SI 2 \"cmp_operand\" \"rN\")))]\n   \"TARGET_SHMEDIA\"\n   \"cmpgtu\t%N1, %N2, %0\"\n   [(set_attr \"type\" \"cmp_media\")])\n \n-(define_insn \"cmpsigtudi_media\"\n+(define_insn \"cmpgtudi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(gtu:SI (match_operand:DI 1 \"arith_reg_or_0_operand\" \"Nr\")\n \t\t(match_operand:DI 2 \"arith_reg_or_0_operand\" \"rN\")))]\n@@ -847,13 +799,6 @@\n   [(set_attr \"type\" \"cmp_media\")])\n \n ; These two patterns are for combine.\n-(define_insn \"*cmpne0si_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ne:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\") (const_int 0)))]\n-  \"TARGET_SHMEDIA\"\n-  \"cmpgtu\t%1,r63,%0\"\n-  [(set_attr \"type\" \"cmp_media\")])\n-\n (define_insn \"*cmpne0sisi_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ne:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\") (const_int 0)))]\n@@ -1178,7 +1123,7 @@\n {\n   emit_insn (gen_movsicc_false (operands[0], operands[1], operands[2],\n \t\t\t\toperands[3]));\n-  emit_insn (gen_cmpsigtusi_media (operands[5], operands[4], operands[0]));\n+  emit_insn (gen_cmpgtusi_media (operands[5], operands[4], operands[0]));\n   emit_insn (gen_movsicc_false (operands[0], operands[5], operands[4],\n \t\t\t\toperands[0]));\n   DONE;\n@@ -7201,7 +7146,7 @@ label:\n }\")\n \n (define_expand \"bunordered\"\n-  [(set (match_dup 1) (unordered:DI (match_dup 2) (match_dup 3)))\n+  [(set (match_dup 1) (unordered:SI (match_dup 2) (match_dup 3)))\n    (set (pc)\n \t(if_then_else (ne (match_dup 1) (const_int 0))\n \t\t      (match_operand 0 \"\" \"\")\n@@ -7210,7 +7155,7 @@ label:\n   \"\n {\n   operands[0] = gen_rtx_LABEL_REF (Pmode, operands[0]);\n-  operands[1] = gen_reg_rtx (DImode);\n+  operands[1] = gen_reg_rtx (SImode);\n   operands[2] = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n   operands[3] = force_reg (GET_MODE (sh_compare_op1), sh_compare_op1);\n }\")\n@@ -9113,6 +9058,8 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n+      rtx reg;\n+\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n@@ -9127,26 +9074,26 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t  switch (GET_MODE (sh_compare_op0))\n \t    {\n \t    case SImode:\n-\t      emit_insn (gen_cmpsieqsi_media (operands[0],\n+\t      emit_insn (gen_cmpeqsi_media (operands[0],\n \t\t\t\t\t      sh_compare_op0, sh_compare_op1));\n \t      break;\n \n \t    case DImode:\n-\t      emit_insn (gen_cmpsieqdi_media (operands[0],\n+\t      emit_insn (gen_cmpeqdi_media (operands[0],\n \t\t\t\t\t      sh_compare_op0, sh_compare_op1));\n \t      break;\n \n \t    case SFmode:\n \t      if (! TARGET_SHMEDIA_FPU)\n \t\tFAIL;\n-\t      emit_insn (gen_cmpsieqsf_media (operands[0],\n+\t      emit_insn (gen_cmpeqsf_media (operands[0],\n \t\t\t\t\t      sh_compare_op0, sh_compare_op1));\n \t      break;\n \n \t    case DFmode:\n \t      if (! TARGET_SHMEDIA_FPU)\n \t\tFAIL;\n-\t      emit_insn (gen_cmpsieqdf_media (operands[0],\n+\t      emit_insn (gen_cmpeqdf_media (operands[0],\n \t\t\t\t\t      sh_compare_op0, sh_compare_op1));\n \t      break;\n \n@@ -9156,38 +9103,44 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t  DONE;\n \t}\n \n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n \n       switch (GET_MODE (sh_compare_op0))\n \t{\n \tcase SImode:\n-\t  emit_insn (gen_cmpeqsi_media (operands[0],\n+\t  emit_insn (gen_cmpeqsi_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase DImode:\n-\t  emit_insn (gen_cmpeqdi_media (operands[0],\n+\t  emit_insn (gen_cmpeqdi_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase SFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpeqsf_media (operands[0],\n+\t  emit_insn (gen_cmpeqsf_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase DFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpeqdf_media (operands[0],\n+\t  emit_insn (gen_cmpeqdf_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tdefault:\n \t  FAIL;\n \t}\n+\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n   if (sh_expand_t_scc (EQ, operands[0]))\n@@ -9205,44 +9158,53 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      rtx reg;\n+\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n \t\t\t\t    ? GET_MODE (sh_compare_op0)\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n+\n       switch (GET_MODE (sh_compare_op0))\n \t{\n \tcase SImode:\n-\t  emit_insn (gen_cmpgtsi_media (operands[0],\n+\t  emit_insn (gen_cmpgtsi_media (reg,\n \t\t\t\t\tsh_compare_op1, sh_compare_op0));\n \t  break;\n \n \tcase DImode:\n-\t  emit_insn (gen_cmpgtdi_media (operands[0],\n+\t  emit_insn (gen_cmpgtdi_media (reg,\n \t\t\t\t\tsh_compare_op1, sh_compare_op0));\n \t  break;\n \n \tcase SFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgtsf_media (operands[0],\n+\t  emit_insn (gen_cmpgtsf_media (reg,\n \t\t\t\t\tsh_compare_op1, sh_compare_op0));\n \t  break;\n \n \tcase DFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgtdf_media (operands[0],\n+\t  emit_insn (gen_cmpgtdf_media (reg,\n \t\t\t\t\tsh_compare_op1, sh_compare_op0));\n \t  break;\n \n \tdefault:\n \t  FAIL;\n \t}\n+\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n   if (! currently_expanding_to_rtl)\n@@ -9259,54 +9221,63 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \n   if (TARGET_SHMEDIA)\n     {\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      rtx reg;\n+\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n \t\t\t\t    ? GET_MODE (sh_compare_op0)\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n+\n       switch (GET_MODE (sh_compare_op0))\n \t{\n \tcase SImode:\n \t  {\n-\t    tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+\t    tmp = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n \n \t    emit_insn (gen_cmpgtsi_media (tmp,\n \t\t\t\t\t  sh_compare_op0, sh_compare_op1));\n-\t    emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+\t    emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n \t    break;\n \t  }\n \n \tcase DImode:\n \t  {\n-\t    tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+\t    tmp = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n \n \t    emit_insn (gen_cmpgtdi_media (tmp,\n \t\t\t\t\t  sh_compare_op0, sh_compare_op1));\n-\t    emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+\t    emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n \t    break;\n \t  }\n \n \tcase SFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgesf_media (operands[0],\n+\t  emit_insn (gen_cmpgesf_media (reg,\n \t\t\t\t\tsh_compare_op1, sh_compare_op0));\n \t  break;\n \n \tcase DFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgedf_media (operands[0],\n+\t  emit_insn (gen_cmpgedf_media (reg,\n \t\t\t\t\tsh_compare_op1, sh_compare_op0));\n \t  break;\n \n \tdefault:\n \t  FAIL;\n \t}\n+\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n \n@@ -9324,8 +9295,12 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      rtx reg;\n+\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n@@ -9336,32 +9311,36 @@ mov.l\\\\t1f,r0\\\\n\\\\\n       switch (GET_MODE (sh_compare_op0))\n \t{\n \tcase SImode:\n-\t  emit_insn (gen_cmpgtsi_media (operands[0],\n+\t  emit_insn (gen_cmpgtsi_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase DImode:\n-\t  emit_insn (gen_cmpgtdi_media (operands[0],\n+\t  emit_insn (gen_cmpgtdi_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase SFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgtsf_media (operands[0],\n+\t  emit_insn (gen_cmpgtsf_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase DFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgtdf_media (operands[0],\n+\t  emit_insn (gen_cmpgtdf_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tdefault:\n \t  FAIL;\n \t}\n+\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n   if (! currently_expanding_to_rtl)\n@@ -9377,12 +9356,15 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n+      rtx reg;\n       enum machine_mode mode = GET_MODE (sh_compare_op0);\n \n       if ((mode) == VOIDmode)\n \tmode = GET_MODE (sh_compare_op1);\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       sh_compare_op0 = force_reg (mode, sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (mode, sh_compare_op1);\n@@ -9391,41 +9373,45 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t{\n \tcase SImode:\n \t  {\n-\t    rtx tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+\t    rtx tmp = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n \n \t    emit_insn (gen_cmpgtsi_media (tmp,\n \t\t\t\t\t  sh_compare_op1, sh_compare_op0));\n-\t    emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+\t    emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n \t    break;\n \t  }\n \n \tcase DImode:\n \t  {\n-\t    rtx tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+\t    rtx tmp = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n \n \t    emit_insn (gen_cmpgtdi_media (tmp,\n \t\t\t\t\t  sh_compare_op1, sh_compare_op0));\n-\t    emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+\t    emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n \t    break;\n \t  }\n \n \tcase SFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgesf_media (operands[0],\n+\t  emit_insn (gen_cmpgesf_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tcase DFmode:\n \t  if (! TARGET_SHMEDIA_FPU)\n \t    FAIL;\n-\t  emit_insn (gen_cmpgedf_media (operands[0],\n+\t  emit_insn (gen_cmpgedf_media (reg,\n \t\t\t\t\tsh_compare_op0, sh_compare_op1));\n \t  break;\n \n \tdefault:\n \t  FAIL;\n \t}\n+\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n \n@@ -9457,17 +9443,24 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      rtx reg;\n+\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) == DImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n \t\t\t\t    ? GET_MODE (sh_compare_op0)\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n-      emit_insn (gen_cmpgtudi_media (operands[0],\n+      emit_insn (gen_cmpgtudi_media (reg,\n \t\t\t\t     sh_compare_op0, sh_compare_op1));\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n   if (! currently_expanding_to_rtl)\n@@ -9483,17 +9476,24 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      rtx reg;\n+\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) == DImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n \t\t\t\t    ? GET_MODE (sh_compare_op0)\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n-      emit_insn (gen_cmpgtudi_media (operands[0],\n+      emit_insn (gen_cmpgtudi_media (reg,\n \t\t\t\t     sh_compare_op1, sh_compare_op0));\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n+\n       DONE;\n     }\n   if (! currently_expanding_to_rtl)\n@@ -9509,21 +9509,25 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      rtx tmp;\n+      rtx tmp, reg;\n \n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n \t\t\t\t    ? GET_MODE (sh_compare_op0)\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n-      tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+      tmp = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n \n       emit_insn (gen_cmpgtudi_media (tmp, sh_compare_op0, sh_compare_op1));\n-      emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+      emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n \n       DONE;\n     }\n@@ -9540,21 +9544,25 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      rtx tmp;\n+      rtx tmp, reg;\n \n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       sh_compare_op0 = force_reg (GET_MODE (sh_compare_op0), sh_compare_op0);\n       if (sh_compare_op1 != const0_rtx)\n \tsh_compare_op1 = force_reg (GET_MODE (sh_compare_op1) == VOIDmode\n \t\t\t\t    ? GET_MODE (sh_compare_op0)\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n-      tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+      tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (SImode);\n \n       emit_insn (gen_cmpgtudi_media (tmp, sh_compare_op1, sh_compare_op0));\n-      emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+      emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n \n       DONE;\n     }\n@@ -9585,11 +9593,12 @@ mov.l\\\\t1f,r0\\\\n\\\\\n {\n   if (TARGET_SHMEDIA)\n     {\n-      rtx tmp;\n-\n-      if (GET_MODE (operands[0]) != DImode)\n-\toperands[0] = gen_rtx_SUBREG (DImode, operands[0], 0);\n+      rtx tmp, reg;\n \n+      reg = operands[0];\n+      if (GET_MODE (operands[0]) != SImode)\n+\treg = no_new_pseudos ? gen_rtx_SUBREG (SImode, operands[0], 0)\n+\t\t\t     : gen_reg_rtx (SImode);\n       if (! TARGET_SHMEDIA_FPU\n \t  && GET_MODE (sh_compare_op0) != DImode\n \t  && GET_MODE (sh_compare_op0) != SImode)\n@@ -9602,10 +9611,12 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t\t\t\t    : GET_MODE (sh_compare_op1),\n \t\t\t\t    sh_compare_op1);\n \n-      tmp = no_new_pseudos ? operands[0] : gen_reg_rtx (DImode);\n+      tmp = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n \n       emit_insn (gen_seq (tmp));\n-      emit_insn (gen_cmpeqdi_media (operands[0], tmp, const0_rtx));\n+      emit_insn (gen_cmpeqdi_media (reg, tmp, const0_rtx));\n+      if (GET_MODE (operands[0]) == DImode)\n+\temit_insn (gen_extendsidi2 (operands[0], reg));\n \n       DONE;\n     }\n@@ -9619,8 +9630,8 @@ mov.l\\\\t1f,r0\\\\n\\\\\n }\")\n \n (define_expand \"sunordered\"\n-  [(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n-\t(unordered:DI (match_dup 1) (match_dup 2)))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t(unordered:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"\n {\n@@ -10379,14 +10390,6 @@ mov.l\\\\t1f,r0\\\\n\\\\\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"cmpeqsf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(eq:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n-\t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n-  \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpeq.s\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fcmp_media\")])\n-\n-(define_insn \"cmpsieqsf_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n@@ -10395,24 +10398,24 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgtsf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gt:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(gt:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"fcmpgt.s\t%1, %2, %0\"\n   [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgesf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ge:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ge:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"fcmpge.s\t%1, %2, %0\"\n   [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpunsf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unordered:DI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unordered:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t      (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"fcmpun.s\t%1, %2, %0\"\n@@ -10885,14 +10888,6 @@ mov.l\\\\t1f,r0\\\\n\\\\\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_insn \"cmpeqdf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(eq:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n-\t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n-  \"TARGET_SHMEDIA_FPU\"\n-  \"fcmpeq.d\t%1,%2,%0\"\n-  [(set_attr \"type\" \"fcmp_media\")])\n-\n-(define_insn \"cmpsieqdf_media\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n@@ -10901,24 +10896,24 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgtdf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(gt:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(gt:SI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"fcmpgt.d\t%1,%2,%0\"\n   [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpgedf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ge:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ge:SI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t       (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"fcmpge.d\t%1,%2,%0\"\n   [(set_attr \"type\" \"fcmp_media\")])\n \n (define_insn \"cmpundf_media\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unordered:DI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unordered:SI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")\n \t\t      (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SHMEDIA_FPU\"\n   \"fcmpun.d\t%1,%2,%0\""}]}