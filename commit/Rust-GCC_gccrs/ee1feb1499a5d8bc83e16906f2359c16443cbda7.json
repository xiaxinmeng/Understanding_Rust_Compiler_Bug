{"sha": "ee1feb1499a5d8bc83e16906f2359c16443cbda7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUxZmViMTQ5OWE1ZDhiYzgzZTE2OTA2ZjIzNTljMTY0NDNjYmRhNw==", "commit": {"author": {"name": "Jose Ruiz", "email": "ruiz@adacore.com", "date": "2010-10-18T10:48:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T10:48:36Z"}, "message": "adaint.c (__gnat_pthread_setaffinity_np, [...]): Add these wrappers which check the availability of the underlying OS...\n\n2010-10-18  Jose Ruiz  <ruiz@adacore.com>\n\n\t* adaint.c (__gnat_pthread_setaffinity_np,\n\t__gnat_pthread_attr_setaffinity_np): Add these wrappers which check the\n\tavailability of the underlying OS functionality before calling.\n\t* s-osinte-linux.ads (pthread_setaffinity_np,\n\tpthread_attr_setaffinity_np): Call a wrapper instead of the OS function\n\tto perform a check of its availability.\n\t* s-taprop-linux.adb (Create_Task): Remove the check to verify whether\n\tthe affinity functionality is available in the OS. Now done in a wrapper\n\t* gcc-interface/Makefile.in: Remove vmshandler.asm, unused.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r165628", "tree": {"sha": "be2d0e8e6399ebd9da97cde4e144b5cab6233d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be2d0e8e6399ebd9da97cde4e144b5cab6233d39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee1feb1499a5d8bc83e16906f2359c16443cbda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1feb1499a5d8bc83e16906f2359c16443cbda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee1feb1499a5d8bc83e16906f2359c16443cbda7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1feb1499a5d8bc83e16906f2359c16443cbda7/comments", "author": {"login": "JoseRuizAdaCore", "id": 22770339, "node_id": "MDQ6VXNlcjIyNzcwMzM5", "avatar_url": "https://avatars.githubusercontent.com/u/22770339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoseRuizAdaCore", "html_url": "https://github.com/JoseRuizAdaCore", "followers_url": "https://api.github.com/users/JoseRuizAdaCore/followers", "following_url": "https://api.github.com/users/JoseRuizAdaCore/following{/other_user}", "gists_url": "https://api.github.com/users/JoseRuizAdaCore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoseRuizAdaCore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoseRuizAdaCore/subscriptions", "organizations_url": "https://api.github.com/users/JoseRuizAdaCore/orgs", "repos_url": "https://api.github.com/users/JoseRuizAdaCore/repos", "events_url": "https://api.github.com/users/JoseRuizAdaCore/events{/privacy}", "received_events_url": "https://api.github.com/users/JoseRuizAdaCore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c68015cdba5bdbea25a16f61561438e490af6a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68015cdba5bdbea25a16f61561438e490af6a8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68015cdba5bdbea25a16f61561438e490af6a8b"}], "stats": {"total": 161, "additions": 99, "deletions": 62}, "files": [{"sha": "b44375253d6f0e9ed693e4ef256050187879804b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee1feb1499a5d8bc83e16906f2359c16443cbda7", "patch": "@@ -1,3 +1,16 @@\n+2010-10-18  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* adaint.c (__gnat_pthread_setaffinity_np,\n+\t__gnat_pthread_attr_setaffinity_np): Add these wrappers which check the\n+\tavailability of the underlying OS functionality before calling.\n+\t* s-osinte-linux.ads (pthread_setaffinity_np,\n+\tpthread_attr_setaffinity_np): Call a wrapper instead of the OS function\n+\tto perform a check of its availability.\n+\t* s-taprop-linux.adb (Create_Task): Remove the check to verify whether\n+\tthe affinity functionality is available in the OS. Now done in a wrapper\n+\t* gcc-interface/Makefile.in: Remove vmshandler.asm, unused.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2010-10-18  Robert Dewar  <dewar@adacore.com>\n \n \t* sinfo.ads, sinfo.adb: Change Has_Pragma_CPU to Flag14 (Flag10 is"}, {"sha": "11f6da08bf565c6524368a0d4134030a547cebcb", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=ee1feb1499a5d8bc83e16906f2359c16443cbda7", "patch": "@@ -3671,4 +3671,50 @@ void *__gnat_lwp_self (void)\n {\n    return (void *) syscall (__NR_gettid);\n }\n+\n+/* For the affinity functions, there are systems which do not provide\n+   the required support, so we create a wrapper to check its availability\n+   before calling. */\n+\n+extern int pthread_setaffinity_np (pthread_t th,\n+\t\t\t\t   size_t cpusetsize,\n+\t\t\t\t   const void *cpuset)\n+ __attribute__((weak));\n+\n+extern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n+\t\t\t\t\tsize_t cpusetsize,\n+\t\t\t\t\tconst void *cpuset)\n+ __attribute__((weak));\n+\n+int __gnat_pthread_setaffinity_np (pthread_t th,\n+\t\t\t\t   size_t cpusetsize,\n+\t\t\t\t   const void *cpuset);\n+\n+int __gnat_pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n+\t\t\t\t\tsize_t cpusetsize,\n+\t\t\t\t\tconst void *cpuset);\n+\n+int\n+__gnat_pthread_setaffinity_np (pthread_t th,\n+\t\t\t       size_t cpusetsize,\n+\t\t\t       const void *cpuset)\n+{\n+  /* Call the underlying OS operation if available */\n+  if (pthread_setaffinity_np)\n+    return pthread_setaffinity_np (th, cpusetsize, cpuset);\n+  else\n+    return 0;\n+}\n+\n+int\n+__gnat_pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n+\t\t\t\t    size_t cpusetsize,\n+\t\t\t\t    const void *cpuset)\n+{\n+  /* Call the underlying OS operation if available */\n+  if (pthread_attr_setaffinity_np)\n+    return pthread_attr_setaffinity_np (__attr, cpusetsize, cpuset);\n+  else\n+    return 0;\n+}\n #endif"}, {"sha": "561f89559ecb3922f07fe1164f12b6cfbc4d6ddf", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 28, "deletions": 39, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=ee1feb1499a5d8bc83e16906f2359c16443cbda7", "patch": "@@ -190,8 +190,6 @@ GNAT_ADA_OBJS =\t\\\n  ada/gnatvsn.o\t\\\n  ada/hlo.o\t\\\n  ada/hostparm.o\t\\\n- ada/i-c.o      \\\n- ada/i-cstrea.o \\\n  ada/impunit.o\t\\\n  ada/inline.o\t\\\n  ada/interfac.o\t\\\n@@ -2597,16 +2595,6 @@ ada/hostparm.o : ada/ada.ads ada/a-unccon.ads ada/hostparm.ads \\\n    ada/system.ads ada/s-exctab.ads ada/s-stalib.ads ada/s-unstyp.ads \\\n    ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n-ada/i-c.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads ada/interfac.ads \\\n-   ada/i-c.ads ada/i-c.adb ada/system.ads ada/s-exctab.ads \\\n-   ada/s-exctab.adb ada/s-htable.ads ada/s-parame.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-traent.ads \n-\n-ada/i-cstrea.o : ada/ada.ads ada/a-unccon.ads ada/interfac.ads \\\n-   ada/i-cstrea.ads ada/i-cstrea.adb ada/system.ads ada/s-crtl.ads \\\n-   ada/s-parame.ads \n-\n ada/impunit.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads ada/einfo.adb \\\n@@ -3574,20 +3562,21 @@ ada/sem_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem_cat.adb ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch3.adb \\\n    ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n    ada/sem_dist.ads ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb \\\n-   ada/sem_mech.ads ada/sem_res.ads ada/sem_smem.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/urealp.adb ada/validsw.ads ada/widechar.ads \n+   ada/sem_mech.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_smem.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n+   ada/widechar.ads \n \n ada/sem_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -3708,19 +3697,19 @@ ada/sem_ch7.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch10.ads ada/sem_ch12.ads \\\n    ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n    ada/sem_ch7.adb ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads \\\n-   ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/sinput.adb ada/snames.ads ada/snames.adb \\\n-   ada/stand.ads ada/stringt.ads ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/snames.adb ada/stand.ads \\\n+   ada/stringt.ads ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-crc32.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/sem_ch8.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "602e46643a296680134351200f5ec82e67c2a2b9", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=ee1feb1499a5d8bc83e16906f2359c16443cbda7", "patch": "@@ -1566,10 +1566,6 @@ adamsg.o: adamsg.msg\n   GMEM_LIB = gmemlib\n   EH_MECHANISM=-gcc\n   GNATLIB_SHARED=gnatlib-shared-vms\n-  ifeq ($(strip $(filter-out alpha64 dec vms% openvms% alphavms%,$(targ))),)\n-    EXTRA_LIBGNAT_SRCS=vmshandler.asm\n-    EXTRA_LIBGNAT_OBJS=vmshandler.o\n-  endif\n   EXTRA_LIBGNAT_SRCS+=adamsg.msg\n   EXTRA_LIBGNAT_OBJS+=adamsg.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-tpopde.o"}, {"sha": "6dc353d2f4d65919bf1a8191cad6877bedfc42cf", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=ee1feb1499a5d8bc83e16906f2359c16443cbda7", "patch": "@@ -490,18 +490,18 @@ package System.OS_Interface is\n      (thread     : pthread_t;\n       cpusetsize : size_t;\n       cpuset     : access cpu_set_t) return int;\n-   pragma Import (C, pthread_setaffinity_np, \"pthread_setaffinity_np\");\n-   pragma Weak_External (pthread_setaffinity_np);\n-   --  Use a weak symbol because this function may be available or not,\n-   --  depending on the version of the system.\n+   pragma Import (C, pthread_setaffinity_np, \"__gnat_pthread_setaffinity_np\");\n+   --  Use a wrapper because this function may be available or not, depending\n+   --  on the version of the system.\n \n    function pthread_attr_setaffinity_np\n      (attr       : access pthread_attr_t;\n       cpusetsize : size_t;\n       cpuset     : access cpu_set_t) return int;\n    pragma Import (C, pthread_attr_setaffinity_np,\n-                  \"pthread_attr_setaffinity_np\");\n-   pragma Weak_External (pthread_attr_setaffinity_np);\n+                  \"__gnat_pthread_attr_setaffinity_np\");\n+   --  Use a wrapper because this function may be available or not, depending\n+   --  on the version of the system.\n \n private\n "}, {"sha": "b3554aa209f6215d94ddc1d4f5e6c9661da2cb12", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1feb1499a5d8bc83e16906f2359c16443cbda7/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=ee1feb1499a5d8bc83e16906f2359c16443cbda7", "patch": "@@ -844,21 +844,14 @@ package body System.Task_Primitives.Operations is\n           (Attributes'Access, PTHREAD_CREATE_DETACHED);\n       pragma Assert (Result = 0);\n \n-      --  We were calling pthread_setaffinity_np (after thread creation but\n-      --  before thread activation) to set the affinity but it was not\n-      --  behaving as expected. Now we set the required attributes for the\n-      --  creation of the thread, which is working correctly and it is\n-      --  more appropriate.\n+      --  Set the required attributes for the creation of the thread\n \n-      if pthread_attr_setaffinity_np'Address = System.Null_Address then\n+      --  Note: Previously, we called pthread_setaffinity_np (after thread\n+      --  creation but before thread activation) to set the affinity but it was\n+      --  not behaving as expected. Setting the required attributes for the\n+      --  creation of the thread works correctly and it is more appropriate.\n \n-         --  Nothing to do with the affinities if no underlying support\n-\n-         null;\n-\n-      --  Handle pragma CPU\n-\n-      elsif T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n+      if T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n          declare\n             CPU_Set : aliased cpu_set_t := (bits => (others => False));\n          begin"}]}