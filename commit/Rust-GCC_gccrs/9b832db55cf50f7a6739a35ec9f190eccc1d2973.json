{"sha": "9b832db55cf50f7a6739a35ec9f190eccc1d2973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI4MzJkYjU1Y2Y1MGY3YTY3MzlhMzVlYzlmMTkwZWNjYzFkMjk3Mw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T17:49:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T17:49:05Z"}, "message": "lib.adb, lib.ads: (In_Predefined_Unit): New functions\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\n\t* lib.adb, lib.ads: (In_Predefined_Unit): New functions\n\n\t* a-finali.ads, a-ngcoty.ads, a-strbou.ads, a-stream.ads, a-strmap.ads, \n\ta-strunb.ads, a-stwibo.ads, a-stwima.ads, a-stwiun.ads, a-taside.ads, \n\ta-coorse.ads, a-convec.ads, a-coinve.ads, a-cohama.ads, a-ciorse.ads, \n\ta-cihama.ads, a-cihase.ads, a-cohase.ads, a-ciorma.ads, a-coorma.ads, \n\ta-ciormu.ads, a-coormu.ads, a-stzbou.ads, a-stzmap.ads, a-stzunb.ads, \n\ta-except-2005.ads: Add pragma Preelaborable_Warning\n\nFrom-SVN: r118242", "tree": {"sha": "110c1e22b4771e49735353c1e1897bd00d4288a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/110c1e22b4771e49735353c1e1897bd00d4288a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b832db55cf50f7a6739a35ec9f190eccc1d2973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b832db55cf50f7a6739a35ec9f190eccc1d2973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b832db55cf50f7a6739a35ec9f190eccc1d2973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b832db55cf50f7a6739a35ec9f190eccc1d2973/comments", "author": null, "committer": null, "parents": [{"sha": "498a5a8414782d098c459d5a6de12f184b3f2c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498a5a8414782d098c459d5a6de12f184b3f2c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/498a5a8414782d098c459d5a6de12f184b3f2c41"}], "stats": {"total": 131, "additions": 91, "deletions": 40}, "files": [{"sha": "b1b4630376aa23bfcdc74afc2c5237c15e1f49bb", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,7 +50,10 @@ package Ada.Containers.Indefinite_Hashed_Maps is\n    pragma Preelaborate;\n \n    type Map is tagged private;\n+   pragma Preelaborable_Initialization (Map);\n+\n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Map  : constant Map;\n    No_Element : constant Cursor;"}, {"sha": "0d36adfe609911b7998791c6e66b2aa71f9f8abe", "filename": "gcc/ada/a-cihase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -52,8 +52,10 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n    pragma Preelaborate;\n \n    type Set is tagged private;\n+   pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n "}, {"sha": "0d733a1756695d565a7705981e01d651acf3a145", "filename": "gcc/ada/a-ciorma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,8 +51,10 @@ package Ada.Containers.Indefinite_Ordered_Maps is\n    function Equivalent_Keys (Left, Right : Key_Type) return Boolean;\n \n    type Map is tagged private;\n+   pragma Preelaborable_Initialization (Map);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Map : constant Map;\n "}, {"sha": "0bcf19c440bb417a8e80611c8dab10077a2ef36c", "filename": "gcc/ada/a-ciormu.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ciormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ciormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -50,8 +50,10 @@ package Ada.Containers.Indefinite_Ordered_Multisets is\n    function Equivalent_Elements (Left, Right : Element_Type) return Boolean;\n \n    type Set is tagged private;\n+   pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n "}, {"sha": "3fc5f45275281e110691701520afd5a35ee23c45", "filename": "gcc/ada/a-ciorse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,8 +50,10 @@ package Ada.Containers.Indefinite_Ordered_Sets is\n    function Equivalent_Elements (Left, Right : Element_Type) return Boolean;\n \n    type Set is tagged private;\n+   pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n "}, {"sha": "f090c82f99e4442502f582393c5d9707cdf3ab69", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -49,8 +49,10 @@ package Ada.Containers.Hashed_Maps is\n    pragma Preelaborate;\n \n    type Map is tagged private;\n+   pragma Preelaborable_Initialization (Map);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Map : constant Map;\n "}, {"sha": "b0eb14cc2909fa794d7d86db883b635144b61929", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,8 +51,10 @@ package Ada.Containers.Hashed_Sets is\n    pragma Preelaborate;\n \n    type Set is tagged private;\n+   pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n "}, {"sha": "317dc75366e2c8c51bd3b4b2f23fd4cec1371206", "filename": "gcc/ada/a-coinve.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -52,8 +52,10 @@ package Ada.Containers.Indefinite_Vectors is\n    No_Index : constant Extended_Index := Extended_Index'First;\n \n    type Vector is tagged private;\n+   pragma Preelaborable_Initialization (Vector);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Vector : constant Vector;\n "}, {"sha": "bceea179995fda90ffc78c7907bcd8dcca2d7bad", "filename": "gcc/ada/a-convec.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,8 +51,10 @@ package Ada.Containers.Vectors is\n    No_Index : constant Extended_Index := Extended_Index'First;\n \n    type Vector is tagged private;\n+   pragma Preelaborable_Initialization (Vector);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Vector : constant Vector;\n "}, {"sha": "18de34dddc3d64c0667e506d534083ea52f2d565", "filename": "gcc/ada/a-coorma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,8 +50,10 @@ package Ada.Containers.Ordered_Maps is\n    function Equivalent_Keys (Left, Right : Key_Type) return Boolean;\n \n    type Map is tagged private;\n+   pragma Preelaborable_Initialization (Map);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Map : constant Map;\n "}, {"sha": "ff32f8c1559ffb428859d1d9aba6bb9a7b1c9088", "filename": "gcc/ada/a-coormu.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -49,8 +49,10 @@ package Ada.Containers.Ordered_Multisets is\n    function Equivalent_Elements (Left, Right : Element_Type) return Boolean;\n \n    type Set is tagged private;\n+   pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n "}, {"sha": "2cc8accad53975c2da0809e3a1b19c121cf4881d", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -49,8 +49,10 @@ package Ada.Containers.Ordered_Sets is\n    function Equivalent_Elements (Left, Right : Element_Type) return Boolean;\n \n    type Set is tagged private;\n+   pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;\n+   pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n "}, {"sha": "fd42ab79cd45e839624d010a133d5dca22d0dd1e", "filename": "gcc/ada/a-except-2005.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-except-2005.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-except-2005.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -65,9 +65,13 @@ package Ada.Exceptions is\n    --  pragma, which is fine for the bootstrap.\n \n    type Exception_Id is private;\n+   pragma Preelaborable_Initialization (Exception_Id);\n+\n    Null_Id : constant Exception_Id;\n \n    type Exception_Occurrence is limited private;\n+   pragma Preelaborable_Initialization (Exception_Occurrence);\n+\n    type Exception_Occurrence_Access is access all Exception_Occurrence;\n \n    Null_Occurrence : constant Exception_Occurrence;"}, {"sha": "a663a0696dcd938a51d4e36c75918431ce74ef73", "filename": "gcc/ada/a-finali.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-finali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-finali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-finali.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -41,12 +41,14 @@ package Ada.Finalization is\n    pragma Preelaborate;\n \n    type Controlled is abstract tagged private;\n+   pragma Preelaborable_Initialization (Controlled);\n \n    procedure Initialize (Object : in out Controlled);\n    procedure Adjust     (Object : in out Controlled);\n    procedure Finalize   (Object : in out Controlled);\n \n    type Limited_Controlled is abstract tagged limited private;\n+   pragma Preelaborable_Initialization (Controlled);\n \n    procedure Initialize (Object : in out Limited_Controlled);\n    procedure Finalize   (Object : in out Limited_Controlled);"}, {"sha": "a5c9de981aa01598b8a0f940859141a9e26512d4", "filename": "gcc/ada/a-ngcoty.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ngcoty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-ngcoty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoty.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -48,6 +48,7 @@ package Ada.Numerics.Generic_Complex_Types is\n    pragma Complex_Representation (Complex);\n \n    type Imaginary is private;\n+   pragma Preelaborable_Initialization (Imaginary);\n \n    i : constant Imaginary;\n    j : constant Imaginary;"}, {"sha": "089bb28888fc60ef648de557222bce371902ca76", "filename": "gcc/ada/a-strbou.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-strbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-strbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strbou.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,6 +50,7 @@ package Ada.Strings.Bounded is\n       Max_Length : constant Positive := Max;\n \n       type Bounded_String is private;\n+      pragma Preelaborable_Initialization (Bounded_String);\n \n       Null_Bounded_String : constant Bounded_String;\n "}, {"sha": "793cb01c04814a424b98907fa4c04ee35255b256", "filename": "gcc/ada/a-stream.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stream.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stream.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stream.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -39,6 +39,7 @@ package Ada.Streams is\n    pragma Pure;\n \n    type Root_Stream_Type is abstract tagged limited private;\n+   pragma Preelaborable_Initialization (Root_Stream_Type);\n \n    type Stream_Element is mod 2 ** Standard'Storage_Unit;\n "}, {"sha": "e2a9c1d594a58380aa279159879a2cd4cdbf8c8e", "filename": "gcc/ada/a-strmap.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-strmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-strmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strmap.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -47,6 +47,7 @@ package Ada.Strings.Maps is\n    --------------------------------\n \n    type Character_Set is private;\n+   pragma Preelaborable_Initialization (Character_Set);\n    --  Representation for a set of character values:\n \n    Null_Set : constant Character_Set;\n@@ -107,6 +108,7 @@ package Ada.Strings.Maps is\n    ------------------------------------\n \n    type Character_Mapping is private;\n+   pragma Preelaborable_Initialization (Character_Mapping);\n    --  Representation for a character to character mapping:\n \n    function Value"}, {"sha": "a213f0b37e246da744db5cea0fcab7df7bc8de2a", "filename": "gcc/ada/a-strunb.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,6 +42,7 @@ package Ada.Strings.Unbounded is\n    pragma Preelaborate;\n \n    type Unbounded_String is private;\n+   pragma Preelaborable_Initialization (Unbounded_String);\n \n    Null_Unbounded_String : constant Unbounded_String;\n \n@@ -426,10 +427,4 @@ private\n                              (AF.Controlled with\n                                 Reference => Null_String'Access,\n                                 Last => 0);\n-   --  Note: this declaration is illegal since library level controlled\n-   --  objects are not allowed in preelaborated units. See AI-161 for a\n-   --  discussion of this issue and an attempt to address it. Meanwhile,\n-   --  what happens in GNAT is that this check is omitted for internal\n-   --  implementation units (see check in sem_cat.adb).\n-\n end Ada.Strings.Unbounded;"}, {"sha": "7717272420cf0b4eac20232015e01e8ea046acae", "filename": "gcc/ada/a-stwibo.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stwibo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stwibo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwibo.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,6 +50,7 @@ package Ada.Strings.Wide_Bounded is\n       Max_Length : constant Positive := Max;\n \n       type Bounded_Wide_String is private;\n+      pragma Preelaborable_Initialization (Bounded_Wide_String);\n \n       Null_Bounded_Wide_String : constant Bounded_Wide_String;\n "}, {"sha": "a745574dc840e99ab84dcf172ee6d1794d0e744d", "filename": "gcc/ada/a-stwima.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stwima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stwima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwima.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -45,6 +45,7 @@ package Ada.Strings.Wide_Maps is\n    -------------------------------------\n \n    type Wide_Character_Set is private;\n+   pragma Preelaborable_Initialization (Wide_Character_Set);\n    --  Representation for a set of Wide_Character values:\n \n    Null_Set : constant Wide_Character_Set;\n@@ -122,6 +123,7 @@ package Ada.Strings.Wide_Maps is\n    -----------------------------------------\n \n    type Wide_Character_Mapping is private;\n+   pragma Preelaborable_Initialization (Wide_Character_Mapping);\n    --  Representation for a wide character to wide character mapping:\n \n    function Value"}, {"sha": "a7a967f1d35b8e307ac078dee2da1fc67e6ecc4b", "filename": "gcc/ada/a-stwiun.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stwiun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stwiun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,6 +42,7 @@ package Ada.Strings.Wide_Unbounded is\n    pragma Preelaborate;\n \n    type Unbounded_Wide_String is private;\n+   pragma Preelaborable_Initialization (Unbounded_Wide_String);\n \n    Null_Unbounded_Wide_String : constant Unbounded_Wide_String;\n \n@@ -432,10 +433,4 @@ private\n                                   (AF.Controlled with\n                                      Reference => Null_Wide_String'Access,\n                                      Last => 0);\n-   --  Note: this declaration is illegal since library level controlled\n-   --  objects are not allowed in preelaborated units. See AI-161 for a\n-   --  discussion of this issue and an attempt to address it. Meanwhile,\n-   --  what happens in GNAT is that this check is omitted for internal\n-   --  implementation units (see check in sem_cat.adb).\n-\n end Ada.Strings.Wide_Unbounded;"}, {"sha": "0490147e7844ecef3b3cfe4b769e4ddb1bcc5aca", "filename": "gcc/ada/a-stzbou.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stzbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stzbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzbou.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,6 +50,7 @@ package Ada.Strings.Wide_Wide_Bounded is\n       Max_Length : constant Positive := Max;\n \n       type Bounded_Wide_Wide_String is private;\n+      pragma Preelaborable_Initialization (Bounded_Wide_Wide_String);\n \n       Null_Bounded_Wide_Wide_String : constant Bounded_Wide_Wide_String;\n "}, {"sha": "9083113237d96b946d5543535b95ee8fdd2a5e33", "filename": "gcc/ada/a-stzmap.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stzmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stzmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzmap.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -45,6 +45,7 @@ package Ada.Strings.Wide_Wide_Maps is\n    ------------------------------------------\n \n    type Wide_Wide_Character_Set is private;\n+   pragma Preelaborable_Initialization (Wide_Wide_Character_Set);\n    --  Representation for a set of Wide_Wide_Character values:\n \n    Null_Set : constant Wide_Wide_Character_Set;\n@@ -122,6 +123,7 @@ package Ada.Strings.Wide_Wide_Maps is\n    ----------------------------------------------\n \n    type Wide_Wide_Character_Mapping is private;\n+   pragma Preelaborable_Initialization (Wide_Wide_Character_Mapping);\n    --  Representation for a wide character to wide character mapping:\n \n    function Value"}, {"sha": "361e2f627ff659c5ded660d41cb06e8aa75eaeb5", "filename": "gcc/ada/a-stzunb.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stzunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-stzunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,6 +42,7 @@ package Ada.Strings.Wide_Wide_Unbounded is\n    pragma Preelaborate;\n \n    type Unbounded_Wide_Wide_String is private;\n+   pragma Preelaborable_Initialization (Unbounded_Wide_Wide_String);\n \n    Null_Unbounded_Wide_Wide_String : constant Unbounded_Wide_Wide_String;\n \n@@ -441,10 +442,4 @@ private\n                                           Reference =>\n                                             Null_Wide_Wide_String'Access,\n                                           Last => 0);\n-   --  Note: this declaration is illegal since library level controlled\n-   --  objects are not allowed in preelaborated units. See AI-161 for a\n-   --  discussion of this issue and an attempt to address it. Meanwhile,\n-   --  what happens in GNAT is that this check is omitted for internal\n-   --  implementation units (see check in sem_cat.adb).\n-\n end Ada.Strings.Wide_Wide_Unbounded;"}, {"sha": "7bd560a86f2668810b7e7327e2d0b3f56a1887a7", "filename": "gcc/ada/a-taside.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-taside.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Fa-taside.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -43,6 +43,7 @@ package Ada.Task_Identification is\n    --  In accordance with Ada 2005 AI-362\n \n    type Task_Id is private;\n+   pragma Preelaborable_Initialization (Task_Id);\n \n    Null_Task_Id : constant Task_Id;\n "}, {"sha": "069474f508d9341a24c8f70503c4774d49548b7a", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -748,6 +748,22 @@ package body Lib is\n       end if;\n    end In_Extended_Main_Source_Unit;\n \n+   ------------------------\n+   -- In_Predefined_Unit --\n+   ------------------------\n+\n+   function In_Predefined_Unit (N : Node_Or_Entity_Id) return Boolean is\n+   begin\n+      return In_Predefined_Unit (Sloc (N));\n+   end In_Predefined_Unit;\n+\n+   function In_Predefined_Unit (S : Source_Ptr) return Boolean is\n+      Unit : constant Unit_Number_Type := Get_Source_Unit (S);\n+      File : constant File_Name_Type   := Unit_File_Name (Unit);\n+   begin\n+      return Is_Predefined_File_Name (File);\n+   end In_Predefined_Unit;\n+\n    -----------------------\n    -- In_Same_Code_Unit --\n    -----------------------"}, {"sha": "67978da253704aea83c40242d438f7b05647db04", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b832db55cf50f7a6739a35ec9f190eccc1d2973/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=9b832db55cf50f7a6739a35ec9f190eccc1d2973", "patch": "@@ -491,8 +491,15 @@ package Lib is\n    --  and the parent unit spec if it is separate.\n \n    function In_Extended_Main_Source_Unit (Loc : Source_Ptr) return Boolean;\n-   --  Same function as above, but argument is a source pointer rather\n-   --  than a node.\n+   --  Same function as above, but argument is a source pointer\n+\n+   function In_Predefined_Unit (N : Node_Or_Entity_Id) return Boolean;\n+   --  Returns True if the given node or entity appears within the source text\n+   --  of a predefined unit (i.e. within Ada, Interfaces, System or within one\n+   --  of the descendent packages of one of these three packages).\n+\n+   function In_Predefined_Unit (S : Source_Ptr) return Boolean;\n+   --  Same function as above but argument is a source pointer\n \n    function Earlier_In_Extended_Unit (S1, S2 : Source_Ptr) return Boolean;\n    --  Given two Sloc values  for which In_Same_Extended_Unit is true,"}]}