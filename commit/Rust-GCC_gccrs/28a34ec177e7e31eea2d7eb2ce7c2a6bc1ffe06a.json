{"sha": "28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhhMzRlYzE3N2U3ZTMxZWVhMmQ3ZWIyY2U3YzJhNmJjMWZmZTA2YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-07-09T23:57:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-07-09T23:57:09Z"}, "message": "cp-demangle.c (demangle_identifier): Support extended Unicode characters.\n\n        * cp-demangle.c (demangle_identifier): Support extended Unicode\n        characters.\n\nFrom-SVN: r55354", "tree": {"sha": "b6cd8185156bcc824acef756ee39110f60e25747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6cd8185156bcc824acef756ee39110f60e25747"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abf92e26999957d1b373ec56fd0bc8dc3dc5e272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf92e26999957d1b373ec56fd0bc8dc3dc5e272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf92e26999957d1b373ec56fd0bc8dc3dc5e272"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "5d9552fb3e70656296f35d9009945c89546011b3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "patch": "@@ -1,3 +1,8 @@\n+2002-07-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c (demangle_identifier): Support extended Unicode\n+\tcharacters.\n+\n 2002-07-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cp-demangle.c (demangle_v3_with_details): Wrap in"}, {"sha": "eece533e0704ff3f8c6dae8eba32fb64a9770c26", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "patch": "@@ -51,6 +51,8 @@\n #include <string.h>\n #endif\n \n+#include <ctype.h>\n+\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n #include \"dyn-string.h\"\n@@ -1466,9 +1468,45 @@ demangle_identifier (dm, length, identifier)\n \n   while (length-- > 0)\n     {\n+      int ch;\n       if (end_of_name_p (dm))\n \treturn \"Unexpected end of name in <identifier>.\";\n-      if (!dyn_string_append_char (identifier, next_char (dm)))\n+      ch = next_char (dm);\n+\n+      /* Handle extended Unicode characters.  We encode them as __U{hex}_,\n+         where {hex} omits leading 0's.  For instance, '$' is encoded as\n+         \"__U24_\".  */\n+      if (ch == '_'\n+\t  && peek_char (dm) == '_'\n+\t  && peek_char_next (dm) == 'U')\n+\t{\n+\t  char buf[10];\n+\t  int pos = 0;\n+\t  advance_char (dm); advance_char (dm); length -= 2;\n+\t  while (length-- > 0)\n+\t    {\n+\t      ch = next_char (dm);\n+\t      if (!isxdigit (ch))\n+\t\tbreak;\n+\t      buf[pos++] = ch;\n+\t    }\n+\t  if (ch != '_' || length < 0)\n+\t    return STATUS_ERROR;\n+\t  if (pos == 0)\n+\t    {\n+\t      /* __U_ just means __U.  */\n+\t      if (!dyn_string_append_cstr (identifier, \"__U\"))\n+\t\treturn STATUS_ALLOCATION_FAILED;\n+\t      continue;\n+\t    }\n+\t  else\n+\t    {\n+\t      buf[pos] = '\\0';\n+\t      ch = strtol (buf, 0, 16);\n+\t    }\n+\t}\n+\n+      if (!dyn_string_append_char (identifier, ch))\n \treturn STATUS_ALLOCATION_FAILED;\n     }\n "}, {"sha": "ecdd732c37053e75e6afaf11a758ee2b8f09b590", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=28a34ec177e7e31eea2d7eb2ce7c2a6bc1ffe06a", "patch": "@@ -2587,6 +2587,10 @@ JArray.t(JArray[])\n _ZN4Prim1iEibcdfwPN4java4lang6StringEsx\n Prim.i(int, boolean, byte, double, float, char, java.lang.String, short, long)\n #\n+--format=java\n+_ZN4java4util14Map__U24_Entry11class__U24_E\n+java.util.Map$Entry.class$\n+#\n --format=hp\n _Utf58_0_1__1_2147483647__2147483648\n _Utf58_0_1__1_2147483647__2147483648"}]}