{"sha": "62de703f1990d2c4dd7ee0c41bfa886b5c589793", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkZTcwM2YxOTkwZDJjNGRkN2VlMGM0MWJmYTg4NmI1YzU4OTc5Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-03-14T22:47:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-14T22:47:01Z"}, "message": "hash-table.h (remove_elt_with_hash): Return if slot is NULL rather than if is_empty (*slot).\n\n\t* hash-table.h (remove_elt_with_hash): Return if slot is NULL rather\n\tthan if is_empty (*slot).\n\t* hash-set-tests.c (test_set_of_strings): Add tests for addition of\n\texisting elt and for elt removal.\n\t* hash-map-tests.c (test_map_of_strings_to_int): Add test for removal\n\tof already removed elt.\n\n\t* hashtab.c (htab_remove_elt_with_hash): Return if slot is NULL rather\n\tthan if *slot is HTAB_EMPTY_ENTRY.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r269695", "tree": {"sha": "2a29bb29ec24c6fcd36a8c7374df0da26cd7134b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a29bb29ec24c6fcd36a8c7374df0da26cd7134b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62de703f1990d2c4dd7ee0c41bfa886b5c589793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62de703f1990d2c4dd7ee0c41bfa886b5c589793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62de703f1990d2c4dd7ee0c41bfa886b5c589793", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62de703f1990d2c4dd7ee0c41bfa886b5c589793/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12fb7712a8a20fce6f3dac80251e67251c01c209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fb7712a8a20fce6f3dac80251e67251c01c209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12fb7712a8a20fce6f3dac80251e67251c01c209"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "394271f8bc269713b1d2e6393119e2154f19d598", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62de703f1990d2c4dd7ee0c41bfa886b5c589793", "patch": "@@ -1,3 +1,13 @@\n+2019-03-14  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* hash-table.h (remove_elt_with_hash): Return if slot is NULL rather\n+\tthan if is_empty (*slot).\n+\t* hash-set-tests.c (test_set_of_strings): Add tests for addition of\n+\texisting elt and for elt removal.\n+\t* hash-map-tests.c (test_map_of_strings_to_int): Add test for removal\n+\tof already removed elt.\n+\n 2019-03-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89650"}, {"sha": "acbfdb9e9ab2b64ea86f98426aabb3faaa867ed8", "filename": "gcc/hash-map-tests.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2Fhash-map-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2Fhash-map-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map-tests.c?ref=62de703f1990d2c4dd7ee0c41bfa886b5c589793", "patch": "@@ -78,6 +78,10 @@ test_map_of_strings_to_int ()\n   ASSERT_EQ (5, m.elements ());\n   ASSERT_EQ (NULL, m.get (eric));\n \n+  m.remove (eric);\n+  ASSERT_EQ (5, m.elements ());\n+  ASSERT_EQ (NULL, m.get (eric));\n+\n   /* A plain char * key is hashed based on its value (address), rather\n      than the string it points to.  */\n   char *another_ant = static_cast <char *> (xcalloc (4, 1));"}, {"sha": "f75d41aed39d26dd223445774a52cc0b6854eea8", "filename": "gcc/hash-set-tests.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2Fhash-set-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2Fhash-set-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-set-tests.c?ref=62de703f1990d2c4dd7ee0c41bfa886b5c589793", "patch": "@@ -48,11 +48,26 @@ test_set_of_strings ()\n   ASSERT_EQ (false, s.add (red));\n   ASSERT_EQ (false, s.add (green));\n   ASSERT_EQ (false, s.add (blue));\n+  ASSERT_EQ (true, s.add (green));\n \n   /* Verify that the values are now within the set.  */\n   ASSERT_EQ (true, s.contains (red));\n   ASSERT_EQ (true, s.contains (green));\n   ASSERT_EQ (true, s.contains (blue));\n+  ASSERT_EQ (3, s.elements ());\n+\n+  /* Test removal.  */\n+  s.remove (red);\n+  ASSERT_EQ (false, s.contains (red));\n+  ASSERT_EQ (true, s.contains (green));\n+  ASSERT_EQ (true, s.contains (blue));\n+  ASSERT_EQ (2, s.elements ());\n+\n+  s.remove (red);\n+  ASSERT_EQ (false, s.contains (red));\n+  ASSERT_EQ (true, s.contains (green));\n+  ASSERT_EQ (true, s.contains (blue));\n+  ASSERT_EQ (2, s.elements ());\n }\n \n /* Run all of the selftests within this file.  */"}, {"sha": "9e09fa487f8ff23757e880e44583178375ba033a", "filename": "gcc/hash-table.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62de703f1990d2c4dd7ee0c41bfa886b5c589793/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=62de703f1990d2c4dd7ee0c41bfa886b5c589793", "patch": "@@ -940,7 +940,7 @@ hash_table<Descriptor, Allocator>\n ::remove_elt_with_hash (const compare_type &comparable, hashval_t hash)\n {\n   value_type *slot = find_slot_with_hash (comparable, hash, NO_INSERT);\n-  if (is_empty (*slot))\n+  if (slot == NULL)\n     return;\n \n   Descriptor::remove (*slot);"}, {"sha": "cc44e4213d139479b13229d858af634bcbf0ddd5", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62de703f1990d2c4dd7ee0c41bfa886b5c589793/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62de703f1990d2c4dd7ee0c41bfa886b5c589793/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=62de703f1990d2c4dd7ee0c41bfa886b5c589793", "patch": "@@ -1,3 +1,9 @@\n+2019-03-14  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* hashtab.c (htab_remove_elt_with_hash): Return if slot is NULL rather\n+\tthan if *slot is HTAB_EMPTY_ENTRY.\n+\n 2019-02-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* splay-tree.c (splay_tree_insert): Also release old KEY in case"}, {"sha": "9f917c3571d96a6ebd1e472f85bb85787f715a6c", "filename": "libiberty/hashtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62de703f1990d2c4dd7ee0c41bfa886b5c589793/libiberty%2Fhashtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62de703f1990d2c4dd7ee0c41bfa886b5c589793/libiberty%2Fhashtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhashtab.c?ref=62de703f1990d2c4dd7ee0c41bfa886b5c589793", "patch": "@@ -725,7 +725,7 @@ htab_remove_elt_with_hash (htab_t htab, PTR element, hashval_t hash)\n   PTR *slot;\n \n   slot = htab_find_slot_with_hash (htab, element, hash, NO_INSERT);\n-  if (*slot == HTAB_EMPTY_ENTRY)\n+  if (slot == NULL)\n     return;\n \n   if (htab->del_f)"}]}