{"sha": "8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2ZjA4OWJjYmYyMDY1M2E1YTBlODVkNDM5MGZlM2I3NGUyMWJmYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-10T16:15:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-10T16:15:58Z"}, "message": "string (basic_string<>::basic_string(basic_string&&), [...]): Add.\n\n2010-01-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/debug/string (basic_string<>::basic_string(basic_string&&),\n\toperator=(basic_string&&), assign(basic_string&&)): Add.\n\n\t* include/debug/string: Fully qualify initializer_list with std; fix\n\t_Allocator misspellings as _Alloc.\n\nFrom-SVN: r155790", "tree": {"sha": "206492a8b88b5f966cbe174d1bc0ad1279b67fde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/206492a8b88b5f966cbe174d1bc0ad1279b67fde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc/comments", "author": null, "committer": null, "parents": [{"sha": "baa828a01d3f83b712dc02bcf86cd9c036c911fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa828a01d3f83b712dc02bcf86cd9c036c911fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa828a01d3f83b712dc02bcf86cd9c036c911fb"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "e136e64e2a24965bd9c17160395b92cfd1909102", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc", "patch": "@@ -1,3 +1,11 @@\n+2010-01-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/debug/string (basic_string<>::basic_string(basic_string&&),\n+\toperator=(basic_string&&), assign(basic_string&&)): Add.\n+\n+\t* include/debug/string: Fully qualify initializer_list with std; fix\n+\t_Allocator misspellings as _Alloc.\n+\n 2010-01-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/basic_string.h (basic_string<>::"}, {"sha": "160488e989bf5261e7b303b9f53d78290c5b5ee5", "filename": "libstdc++-v3/include/debug/string", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring?ref=8b6f089bcbf20653a5a0e85d4390fe3b74e21bfc", "patch": "@@ -112,7 +112,12 @@ namespace __gnu_debug\n       { }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n-    basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())\n+    basic_string(basic_string&& __str)\n+    : _Base(std::forward<_Base>(__str))\n+    { }\n+\n+    basic_string(std::initializer_list<_CharT> __l,\n+\t\t const _Allocator& __a = _Allocator())\n     : _Base(__l, __a)\n     { }\n #endif // __GXX_EXPERIMENTAL_CXX0X__\n@@ -146,7 +151,15 @@ namespace __gnu_debug\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n     basic_string&\n-    operator=(initializer_list<_CharT> __l)\n+    operator=(basic_string&& __str)\n+    {\n+      *static_cast<_Base*>(this) = std::forward<_Base>(__str);\n+      this->_M_invalidate_all();\n+      return *this;\n+    }\n+\n+    basic_string&\n+    operator=(std::initializer_list<_CharT> __l)\n     {\n       *static_cast<_Base*>(this) = __l;\n       this->_M_invalidate_all();\n@@ -277,7 +290,7 @@ namespace __gnu_debug\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n     basic_string&\n-    operator+=(initializer_list<_CharT> __l)\n+    operator+=(std::initializer_list<_CharT> __l)\n     {\n       _M_base() += __l;\n       this->_M_invalidate_all();\n@@ -354,6 +367,16 @@ namespace __gnu_debug\n       return *this;\n     }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    basic_string&\n+    assign(basic_string&& __x)\n+    {\n+      _Base::assign(std::forward<_Base>(__x));\n+      this->_M_invalidate_all();\n+      return *this;\n+    }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n     basic_string&\n     assign(const basic_string& __str, size_type __pos, size_type __n)\n     {\n@@ -400,7 +423,7 @@ namespace __gnu_debug\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n     basic_string&\n-    assign(initializer_list<_CharT> __l)\n+    assign(std::initializer_list<_CharT> __l)\n     {\n       _Base::assign(__l);\n       this->_M_invalidate_all();\n@@ -479,7 +502,7 @@ namespace __gnu_debug\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n     void\n-    insert(iterator __p, initializer_list<_CharT> __l)\n+    insert(iterator __p, std::initializer_list<_CharT> __l)\n     {\n       _Base::insert(__p, __l);\n       this->_M_invalidate_all();\n@@ -611,7 +634,7 @@ namespace __gnu_debug\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       basic_string& replace(iterator __i1, iterator __i2,\n-\t\t\t    initializer_list<_CharT> __l)\n+\t\t\t    std::initializer_list<_CharT> __l)\n       {\n \t__glibcxx_check_erase_range(__i1, __i2);\n \t_Base::replace(__i1.base(), __i2.base(), __l);"}]}