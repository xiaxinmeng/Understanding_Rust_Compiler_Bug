{"sha": "1ed78d6c3d16109fd9db6dbb632122a162494113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkNzhkNmMzZDE2MTA5ZmQ5ZGI2ZGJiNjMyMTIyYTE2MjQ5NDExMw==", "commit": {"author": {"name": "Christopher Yeleighton", "email": "giecrilj@stegny.2a.pl", "date": "2010-09-01T22:58:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-09-01T22:58:15Z"}, "message": "re PR libstdc++/45488 (lower_bound doesn't really require the iterator parameters to be default constructible)\n\n2010-09-01  Christopher Yeleighton  <giecrilj@stegny.2a.pl>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/45488\n\t* include/bits/stl_algobase.h (lower_bound): Clean-up a tad, move\n\ttwo variables inside the main loop.\n\t* include/bits/stl_algo.h (lower_bound, upper_bound, equal_range):\n\tLikewise.\n\nFrom-SVN: r163747", "tree": {"sha": "d7837084930a8d356379192c5b978cde8c4fb061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7837084930a8d356379192c5b978cde8c4fb061"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed78d6c3d16109fd9db6dbb632122a162494113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed78d6c3d16109fd9db6dbb632122a162494113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed78d6c3d16109fd9db6dbb632122a162494113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed78d6c3d16109fd9db6dbb632122a162494113/comments", "author": null, "committer": null, "parents": [{"sha": "5ad97fcf61bce26bb78c52b2505d86dea000664d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad97fcf61bce26bb78c52b2505d86dea000664d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ad97fcf61bce26bb78c52b2505d86dea000664d"}], "stats": {"total": 53, "additions": 22, "deletions": 31}, "files": [{"sha": "456c5369c17406ffcac9a36e0f19ca87196c5464", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 20, "deletions": 27, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed78d6c3d16109fd9db6dbb632122a162494113/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed78d6c3d16109fd9db6dbb632122a162494113/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=1ed78d6c3d16109fd9db6dbb632122a162494113", "patch": "@@ -2403,13 +2403,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t\t\t\t\t\t__val, __comp);\n \n       _DistanceType __len = std::distance(__first, __last);\n-      _DistanceType __half;\n-      _ForwardIterator __middle;\n \n       while (__len > 0)\n \t{\n-\t  __half = __len >> 1;\n-\t  __middle = __first;\n+\t  _DistanceType __half = __len >> 1;\n+\t  _ForwardIterator __middle = __first;\n \t  std::advance(__middle, __half);\n \t  if (__comp(*__middle, __val))\n \t    {\n@@ -2450,13 +2448,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __glibcxx_requires_partitioned_upper(__first, __last, __val);\n \n       _DistanceType __len = std::distance(__first, __last);\n-      _DistanceType __half;\n-      _ForwardIterator __middle;\n \n       while (__len > 0)\n \t{\n-\t  __half = __len >> 1;\n-\t  __middle = __first;\n+\t  _DistanceType __half = __len >> 1;\n+\t  _ForwardIterator __middle = __first;\n \t  std::advance(__middle, __half);\n \t  if (__val < *__middle)\n \t    __len = __half;\n@@ -2503,13 +2499,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t\t\t\t\t\t__val, __comp);\n \n       _DistanceType __len = std::distance(__first, __last);\n-      _DistanceType __half;\n-      _ForwardIterator __middle;\n \n       while (__len > 0)\n \t{\n-\t  __half = __len >> 1;\n-\t  __middle = __first;\n+\t  _DistanceType __half = __len >> 1;\n+\t  _ForwardIterator __middle = __first;\n \t  std::advance(__middle, __half);\n \t  if (__comp(__val, *__middle))\n \t    __len = __half;\n@@ -2558,13 +2552,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __glibcxx_requires_partitioned_upper(__first, __last, __val);      \n \n       _DistanceType __len = std::distance(__first, __last);\n-      _DistanceType __half;\n-      _ForwardIterator __middle, __left, __right;\n-\n+ \n       while (__len > 0)\n \t{\n-\t  __half = __len >> 1;\n-\t  __middle = __first;\n+\t  _DistanceType __half = __len >> 1;\n+\t  _ForwardIterator __middle = __first;\n \t  std::advance(__middle, __half);\n \t  if (*__middle < __val)\n \t    {\n@@ -2576,9 +2568,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t    __len = __half;\n \t  else\n \t    {\n-\t      __left = std::lower_bound(__first, __middle, __val);\n+\t      _ForwardIterator __left = std::lower_bound(__first, __middle,\n+\t\t\t\t\t\t\t __val);\n \t      std::advance(__first, __len);\n-\t      __right = std::upper_bound(++__middle, __first, __val);\n+\t      _ForwardIterator __right = std::upper_bound(++__middle, __first,\n+\t\t\t\t\t\t\t  __val);\n \t      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);\n \t    }\n \t}\n@@ -2605,8 +2599,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _ForwardIterator, typename _Tp, typename _Compare>\n     pair<_ForwardIterator, _ForwardIterator>\n     equal_range(_ForwardIterator __first, _ForwardIterator __last,\n-\t\tconst _Tp& __val,\n-\t\t_Compare __comp)\n+\t\tconst _Tp& __val, _Compare __comp)\n     {\n       typedef typename iterator_traits<_ForwardIterator>::value_type\n \t_ValueType;\n@@ -2625,13 +2618,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t\t\t\t\t\t__val, __comp);\n \n       _DistanceType __len = std::distance(__first, __last);\n-      _DistanceType __half;\n-      _ForwardIterator __middle, __left, __right;\n \n       while (__len > 0)\n \t{\n-\t  __half = __len >> 1;\n-\t  __middle = __first;\n+\t  _DistanceType __half = __len >> 1;\n+\t  _ForwardIterator __middle = __first;\n \t  std::advance(__middle, __half);\n \t  if (__comp(*__middle, __val))\n \t    {\n@@ -2643,9 +2634,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t    __len = __half;\n \t  else\n \t    {\n-\t      __left = std::lower_bound(__first, __middle, __val, __comp);\n+\t      _ForwardIterator __left = std::lower_bound(__first, __middle,\n+\t\t\t\t\t\t\t __val, __comp);\n \t      std::advance(__first, __len);\n-\t      __right = std::upper_bound(++__middle, __first, __val, __comp);\n+\t      _ForwardIterator __right = std::upper_bound(++__middle, __first,\n+\t\t\t\t\t\t\t  __val, __comp);\n \t      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);\n \t    }\n \t}"}, {"sha": "1d951aa7999696d6c0c60b5459dcc546208f87ba", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed78d6c3d16109fd9db6dbb632122a162494113/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed78d6c3d16109fd9db6dbb632122a162494113/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=1ed78d6c3d16109fd9db6dbb632122a162494113", "patch": "@@ -945,13 +945,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __glibcxx_requires_partitioned_lower(__first, __last, __val);\n \n       _DistanceType __len = std::distance(__first, __last);\n-      _DistanceType __half;\n-      _ForwardIterator __middle;\n \n       while (__len > 0)\n \t{\n-\t  __half = __len >> 1;\n-\t  __middle = __first;\n+\t  _DistanceType __half = __len >> 1;\n+\t  _ForwardIterator __middle = __first;\n \t  std::advance(__middle, __half);\n \t  if (*__middle < __val)\n \t    {"}]}