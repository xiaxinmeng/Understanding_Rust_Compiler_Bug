{"sha": "93b4b4cc8401829bd6be58f24ebaee00aecedb10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNiNGI0Y2M4NDAxODI5YmQ2YmU1OGYyNGViYWVlMDBhZWNlZGIxMA==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@codesourcery.com", "date": "2007-10-15T10:30:13Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2007-10-15T10:30:13Z"}, "message": "re PR target/33133 (ICE in try_ready, at haifa-sched.c:2958 with -O2/-O3)\n\n\tPR target/33133\n\t\n\t* haifa-sched.c (process_insn_forw_deps_be_in_spec): Check if\n\tspeculation type of insn can be changed before trying to do that.\n\n\t* gcc.c-torture/compile/pr33133.c: New test.\n\nFrom-SVN: r129315", "tree": {"sha": "10d9583a0f676cb45bcb0f35f9d784484c56e5d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d9583a0f676cb45bcb0f35f9d784484c56e5d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93b4b4cc8401829bd6be58f24ebaee00aecedb10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b4b4cc8401829bd6be58f24ebaee00aecedb10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93b4b4cc8401829bd6be58f24ebaee00aecedb10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b4b4cc8401829bd6be58f24ebaee00aecedb10/comments", "author": null, "committer": null, "parents": [{"sha": "5c7c209b1f094110552c56f556ade12c20e58823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7c209b1f094110552c56f556ade12c20e58823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7c209b1f094110552c56f556ade12c20e58823"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "536ef54396bb657860ce1754e657f4aa0932ca9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93b4b4cc8401829bd6be58f24ebaee00aecedb10", "patch": "@@ -1,3 +1,10 @@\n+2007-10-15  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\tPR target/33133\n+\t\n+\t* haifa-sched.c (process_insn_forw_deps_be_in_spec): Check if\n+\tspeculation type of insn can be changed before trying to do that.\n+\n 2007-10-15  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* dse.c (struct insn_info): Add 'frame_read' field."}, {"sha": "d36600898600399fd832101b3ff7a490f5ce8ac2", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=93b4b4cc8401829bd6be58f24ebaee00aecedb10", "patch": "@@ -3292,8 +3292,17 @@ process_insn_forw_deps_be_in_spec (rtx insn, rtx twin, ds_t fs)\n \t\t     due to backend decision.  Hence we can't let the\n \t\t     probability of the speculative dep to decrease.  */\n \t\t  dep_weak (ds) <= dep_weak (fs))\n-\t\t/* Transform it to be in speculative.  */\n-\t\tds = (ds & ~BEGIN_SPEC) | fs;\n+\t\t{\n+\t\t  ds_t new_ds;\n+\n+\t\t  new_ds = (ds & ~BEGIN_SPEC) | fs;\n+\t\t  \n+\t\t  if (/* consumer can 'be in speculative'.  */\n+\t\t      sched_insn_is_legitimate_for_speculation_p (consumer,\n+\t\t\t\t\t\t\t\t  new_ds))\n+\t\t    /* Transform it to be in speculative.  */\n+\t\t    ds = new_ds;\n+\t\t}\n \t    }\n \t  else\n \t    /* Mark the dep as 'be in speculative'.  */"}, {"sha": "dae94d94d6579d4c3cbf85cc80adf929154210e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93b4b4cc8401829bd6be58f24ebaee00aecedb10", "patch": "@@ -1,3 +1,9 @@\n+2007-10-15  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\tPR target/33133\n+\n+\t* gcc.c-torture/compile/pr33133.c: New test.\n+\n 2007-10-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/33672"}, {"sha": "d1b09640eee2455639ac29d0e628609b6df5fa79", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33133.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33133.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b4b4cc8401829bd6be58f24ebaee00aecedb10/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33133.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33133.c?ref=93b4b4cc8401829bd6be58f24ebaee00aecedb10", "patch": "@@ -0,0 +1,50 @@\n+static char newshuffle[256 + 16] = {\n+  0x0f, 0x08, 0x05, 0x07, 0x0c, 0x02, 0x0e, 0x09, 0x00, 0x01, 0x06, 0x0d,\n+    0x03, 0x04, 0x0b, 0x0a, 0x02, 0x0c, 0x0e, 0x06, 0x0f, 0x00, 0x01, 0x08,\n+    0x0d, 0x03, 0x0a, 0x04, 0x09, 0x0b, 0x05, 0x07, 0x05, 0x02, 0x09, 0x0f,\n+    0x0c, 0x04, 0x0d, 0x00, 0x0e, 0x0a, 0x06, 0x08, 0x0b, 0x01, 0x03, 0x07,\n+    0x0f, 0x0d, 0x02, 0x06, 0x07, 0x08, 0x05, 0x09, 0x00, 0x04, 0x0c, 0x03,\n+    0x01, 0x0a, 0x0b, 0x0e, 0x05, 0x0e, 0x02, 0x0b, 0x0d, 0x0a, 0x07, 0x00,\n+    0x08, 0x06, 0x04, 0x01, 0x0f, 0x0c, 0x03, 0x09, 0x08, 0x02, 0x0f, 0x0a,\n+    0x05, 0x09, 0x06, 0x0c, 0x00, 0x0b, 0x01, 0x0d, 0x07, 0x03, 0x04, 0x0e,\n+    0x0e, 0x08, 0x00, 0x09, 0x04, 0x0b, 0x02, 0x07, 0x0c, 0x03, 0x0a, 0x05,\n+    0x0d, 0x01, 0x06, 0x0f, 0x01, 0x04, 0x08, 0x0a, 0x0d, 0x0b, 0x07, 0x0e,\n+    0x05, 0x0f, 0x03, 0x09, 0x00, 0x02, 0x06, 0x0c, 0x05, 0x03, 0x0c, 0x08,\n+    0x0b, 0x02, 0x0e, 0x0a, 0x04, 0x01, 0x0d, 0x00, 0x06, 0x07, 0x0f, 0x09,\n+    0x06, 0x00, 0x0b, 0x0e, 0x0d, 0x04, 0x0c, 0x0f, 0x07, 0x02, 0x08, 0x0a,\n+    0x01, 0x05, 0x03, 0x09, 0x0b, 0x05, 0x0a, 0x0e, 0x0f, 0x01, 0x0c, 0x00,\n+    0x06, 0x04, 0x02, 0x09, 0x03, 0x0d, 0x07, 0x08, 0x07, 0x02, 0x0a, 0x00,\n+    0x0e, 0x08, 0x0f, 0x04, 0x0c, 0x0b, 0x09, 0x01, 0x05, 0x0d, 0x03, 0x06,\n+    0x07, 0x04, 0x0f, 0x09, 0x05, 0x01, 0x0c, 0x0b, 0x00, 0x03, 0x08, 0x0e,\n+    0x02, 0x0a, 0x06, 0x0d, 0x09, 0x04, 0x08, 0x00, 0x0a, 0x03, 0x01, 0x0c,\n+    0x05, 0x0f, 0x07, 0x02, 0x0b, 0x0e, 0x06, 0x0d, 0x09, 0x05, 0x04, 0x07,\n+    0x0e, 0x08, 0x03, 0x01, 0x0d, 0x0b, 0x0c, 0x02, 0x00, 0x0f, 0x06, 0x0a,\n+    0x09, 0x0a, 0x0b, 0x0d, 0x05, 0x03, 0x0f, 0x00, 0x01, 0x0c, 0x08, 0x07,\n+    0x06, 0x04, 0x0e, 0x02, 0x03, 0x0e, 0x0f, 0x02, 0x0d, 0x0c, 0x04, 0x05,\n+    0x09, 0x06, 0x00, 0x01, 0x0b, 0x07, 0x0a, 0x08,\n+};\n+void newpassencrypt (char *, char *, char *);\n+void\n+newpassencrypt (char *old, char *new, char *out)\n+{\n+  char *p, *bx;\n+  char copy[8];\n+  int i, di, ax;\n+  char cl, dl, ch;\n+  for (i = 0; i < 16; i++)\n+    {\n+      for (bx = old + 7; bx > old; bx--)\n+        {\n+          *bx = ((bx[-1] >> 4) & 0x0f) | ((*bx) << 4);\n+        }\n+      for (di = 0; di < 16; di++)\n+        {\n+          if (newshuffle[di + 0x100] & 1)\n+            ch = ((copy[newshuffle[di + 0x100] / 2] >> 4) & 0x0f);\n+          else\n+            ch = copy[newshuffle[di + 0x100] / 2] & 0x0f;\n+          out[di / 2] |= ((di & 1) ? ch << 4 : ch);\n+        }\n+      memcpy (copy, out, 8);\n+    }\n+}"}]}