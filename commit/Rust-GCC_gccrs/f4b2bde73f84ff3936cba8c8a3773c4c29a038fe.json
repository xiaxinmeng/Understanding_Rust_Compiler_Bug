{"sha": "f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRiMmJkZTczZjg0ZmYzOTM2Y2JhOGM4YTM3NzNjNGMyOWEwMzhmZQ==", "commit": {"author": {"name": "Per Bothner", "email": "pbothner@apple.com", "date": "2003-10-02T07:03:42Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2003-10-02T07:03:42Z"}, "message": "c-lex.c (fe_file_change): Handle a NULL new_map.\n\n\n\t* c-lex.c (fe_file_change):  Handle a NULL new_map.\n\t* fix-header.c (cb_file_change):  Likewise.\n\t* c-ppoutput.c (pp_file_change):  Likewise.\n\nFrom-SVN: r72011", "tree": {"sha": "073d54a44fc0257e933d04f1fd0ec4b6ab34ab6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/073d54a44fc0257e933d04f1fd0ec4b6ab34ab6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/comments", "author": null, "committer": null, "parents": [{"sha": "efef2a5f2a6d41108e7df6f5d5e881d3073feae6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efef2a5f2a6d41108e7df6f5d5e881d3073feae6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efef2a5f2a6d41108e7df6f5d5e881d3073feae6"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "2cd52af9f7cb9cf0573ebc5d5e6f81f7fc3491ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "patch": "@@ -5,6 +5,10 @@\n \t(get_non_padding_token):  We no longer need to compensate for the\n \t\"horrible things\" the C++ front-end does with the current line number,\n \n+\t* c-lex.c (fe_file_change):  Handle a NULL new_map.\n+\t* fix-header.c (cb_file_change):  Likewise.\n+\t* c-ppoutput.c (pp_file_change):  Likewise.\n+\n 2003-10-01  Zack Weinberg  <zack@codesourcery.com>\n \n \t* target.h (init_libfuncs): New hook."}, {"sha": "5546fc9ddd1933c91ff073b6a861afb0cf2ae960", "filename": "gcc/c-lex.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "patch": "@@ -212,6 +212,12 @@ cb_dir_change (cpp_reader *pfile ATTRIBUTE_UNUSED, const char *dir)\n void\n fe_file_change (const struct line_map *new_map)\n {\n+  if (new_map == NULL)\n+    {\n+      map = NULL;\n+      return;\n+    }\n+\n   if (new_map->reason == LC_ENTER)\n     {\n       /* Don't stack the main buffer on the input stack;"}, {"sha": "22e595f95411fd90a32abc35e244fdccfb0d1aad", "filename": "gcc/c-ppoutput.c", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2Fc-ppoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2Fc-ppoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-ppoutput.c?ref=f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "patch": "@@ -346,24 +346,27 @@ pp_file_change (const struct line_map *map)\n   if (flag_no_line_commands || flag_no_output)\n     return;\n \n-  /* First time?  */\n-  if (print.map == NULL)\n+  if (map != NULL)\n     {\n-      /* Avoid printing foo.i when the main file is foo.c.  */\n-      if (!cpp_get_options (parse_in)->preprocessed)\n-\tprint_line (map, map->from_line, flags);\n-    }\n-  else\n-    {\n-      /* Bring current file to correct line when entering a new file.  */\n-      if (map->reason == LC_ENTER)\n-\tmaybe_print_line (map - 1, map->from_line - 1);\n-\n-      if (map->reason == LC_ENTER)\n-\tflags = \" 1\";\n-      else if (map->reason == LC_LEAVE)\n-\tflags = \" 2\";\n-      print_line (map, map->from_line, flags);\n+      /* First time?  */\n+      if (print.map == NULL)\n+\t{\n+\t  /* Avoid printing foo.i when the main file is foo.c.  */\n+\t  if (!cpp_get_options (parse_in)->preprocessed)\n+\t    print_line (map, map->from_line, flags);\n+\t}\n+      else\n+\t{\n+\t  /* Bring current file to correct line when entering a new file.  */\n+\t  if (map->reason == LC_ENTER)\n+\t    maybe_print_line (map - 1, map->from_line - 1);\n+\n+\t  if (map->reason == LC_ENTER)\n+\t    flags = \" 1\";\n+\t  else if (map->reason == LC_LEAVE)\n+\t    flags = \" 2\";\n+\t  print_line (map, map->from_line, flags);\n+\t}\n     }\n \n   print.map = map;"}, {"sha": "8ae3025b15de2002d82e4d78ffb3037e2ce7c071", "filename": "gcc/fix-header.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b2bde73f84ff3936cba8c8a3773c4c29a038fe/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=f4b2bde73f84ff3936cba8c8a3773c4c29a038fe", "patch": "@@ -578,7 +578,7 @@ cb_file_change (cpp_reader *pfile ATTRIBUTE_UNUSED,\n \t\tconst struct line_map *map)\n {\n   /* Just keep track of current file name.  */\n-  cur_file = map->to_file;\n+  cur_file = map == NULL ? NULL : map->to_file;\n }\n \n static void"}]}