{"sha": "a3d2f8e21ca895f50f024a671270c2b38a4b5b72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNkMmY4ZTIxY2E4OTVmNTBmMDI0YTY3MTI3MGMyYjM4YTRiNWI3Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-21T08:39:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-21T08:39:53Z"}, "message": "cfganal.c (pre_and_rev_post_order_compute_fn): Use an auto_bb_flag instead of an sbitmap for visited handling.\n\n2019-11-21  Richard Biener  <rguenther@suse.de>\n\n\t* cfganal.c (pre_and_rev_post_order_compute_fn): Use an\n\tauto_bb_flag instead of an sbitmap for visited handling.\n\t* lra.c (lra_insn_recog_data_pool): New.\n\t(free_insn_recog_data): Adjust.\n\t(finish_insn_recog_data): Release lra_insn_recog_data_pool.\n\t(lra_set_insn_recog_data): Allocate from lra_insn_recog_data_pool.\n\t* tree-ssa-structalias.c (equiv_class_hasher): Change to nofree.\n\t(equiv_class_obstack): New.\n\t(equiv_class_lookup_or_add): Allocate from equiv_class_obstack.\n\t(perform_var_substitution): Initialize equiv_class_obstack.\n\t(free_var_substitution_info): Free equiv_class_obstack.\n\nFrom-SVN: r278543", "tree": {"sha": "53aea1806db6d907e383df5d02b482ac6b8b8f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53aea1806db6d907e383df5d02b482ac6b8b8f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3d2f8e21ca895f50f024a671270c2b38a4b5b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d2f8e21ca895f50f024a671270c2b38a4b5b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d2f8e21ca895f50f024a671270c2b38a4b5b72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d2f8e21ca895f50f024a671270c2b38a4b5b72/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49e26500723ff8d18ebec8057d1e686ad91113f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e26500723ff8d18ebec8057d1e686ad91113f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e26500723ff8d18ebec8057d1e686ad91113f9"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "a669c28da618004bcc9859a558b40cb1638a6415", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d2f8e21ca895f50f024a671270c2b38a4b5b72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d2f8e21ca895f50f024a671270c2b38a4b5b72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3d2f8e21ca895f50f024a671270c2b38a4b5b72", "patch": "@@ -1,3 +1,11 @@\n+2019-11-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (equiv_class_hasher): Change to nofree.\n+\t(equiv_class_obstack): New.\n+\t(equiv_class_lookup_or_add): Allocate from equiv_class_obstack.\n+\t(perform_var_substitution): Initialize equiv_class_obstack.\n+\t(free_var_substitution_info): Free equiv_class_obstack.\n+\n 2019-11-20  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline.c (want_early_inline_function_p): Do not estimate"}, {"sha": "f7a17eb74d3e0437fd14106e1b9d5f3ff85f1c22", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d2f8e21ca895f50f024a671270c2b38a4b5b72/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d2f8e21ca895f50f024a671270c2b38a4b5b72/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=a3d2f8e21ca895f50f024a671270c2b38a4b5b72", "patch": "@@ -1911,7 +1911,7 @@ typedef const struct equiv_class_label *const_equiv_class_label_t;\n \n /* Equiv_class_label hashtable helpers.  */\n \n-struct equiv_class_hasher : free_ptr_hash <equiv_class_label>\n+struct equiv_class_hasher : nofree_ptr_hash <equiv_class_label>\n {\n   static inline hashval_t hash (const equiv_class_label *);\n   static inline bool equal (const equiv_class_label *,\n@@ -1944,6 +1944,8 @@ static hash_table<equiv_class_hasher> *pointer_equiv_class_table;\n    classes.  */\n static hash_table<equiv_class_hasher> *location_equiv_class_table;\n \n+struct obstack equiv_class_obstack;\n+\n /* Lookup a equivalence class in TABLE by the bitmap of LABELS with\n    hash HAS it contains.  Sets *REF_LABELS to the bitmap LABELS\n    is equivalent to.  */\n@@ -1960,7 +1962,7 @@ equiv_class_lookup_or_add (hash_table<equiv_class_hasher> *table,\n   slot = table->find_slot (&ecl, INSERT);\n   if (!*slot)\n     {\n-      *slot = XNEW (struct equiv_class_label);\n+      *slot = XOBNEW (&equiv_class_obstack, struct equiv_class_label);\n       (*slot)->labels = labels;\n       (*slot)->hashcode = ecl.hashcode;\n       (*slot)->equivalence_class = 0;\n@@ -2334,6 +2336,7 @@ perform_var_substitution (constraint_graph_t graph)\n   scc_info *si = new scc_info (size);\n \n   bitmap_obstack_initialize (&iteration_obstack);\n+  gcc_obstack_init (&equiv_class_obstack);\n   pointer_equiv_class_table = new hash_table<equiv_class_hasher> (511);\n   location_equiv_class_table\n     = new hash_table<equiv_class_hasher> (511);\n@@ -2473,6 +2476,7 @@ free_var_substitution_info (class scc_info *si)\n   pointer_equiv_class_table = NULL;\n   delete location_equiv_class_table;\n   location_equiv_class_table = NULL;\n+  obstack_free (&equiv_class_obstack, NULL);\n   bitmap_obstack_release (&iteration_obstack);\n }\n "}]}