{"sha": "296f202e8ec694dbbd987aed2b97b04ce895858f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk2ZjIwMmU4ZWM2OTRkYmJkOTg3YWVkMmI5N2IwNGNlODk1ODU4Zg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-04T08:09:12Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-04T08:09:12Z"}, "message": "* Makefile.in (GIMPLE_H): Do not depend on TARGET_H.\n\nFrom-SVN: r188166", "tree": {"sha": "83eb2daa4552fd50497bc40b52e723fde3b4d897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83eb2daa4552fd50497bc40b52e723fde3b4d897"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/296f202e8ec694dbbd987aed2b97b04ce895858f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/296f202e8ec694dbbd987aed2b97b04ce895858f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/296f202e8ec694dbbd987aed2b97b04ce895858f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/296f202e8ec694dbbd987aed2b97b04ce895858f/comments", "author": null, "committer": null, "parents": [{"sha": "7bea4023f2128cde89e4d7942c988b5145bfac19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bea4023f2128cde89e4d7942c988b5145bfac19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bea4023f2128cde89e4d7942c988b5145bfac19"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "d21e519bc09570eb96f30a0b2e26b44f8ce2908b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/296f202e8ec694dbbd987aed2b97b04ce895858f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/296f202e8ec694dbbd987aed2b97b04ce895858f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=296f202e8ec694dbbd987aed2b97b04ce895858f", "patch": "@@ -1,3 +1,7 @@\n+2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in (GIMPLE_H): Do not depend on TARGET_H.\n+\n 2012-06-03  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.h (ipa_get_jf_known_type_offset): New function."}, {"sha": "48af3361ce210b07be48071edf5523cd2fc5d7a3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/296f202e8ec694dbbd987aed2b97b04ce895858f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/296f202e8ec694dbbd987aed2b97b04ce895858f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=296f202e8ec694dbbd987aed2b97b04ce895858f", "patch": "@@ -876,7 +876,7 @@ TREE_H = tree.h all-tree.def tree.def c-family/c-common.def \\\n REGSET_H = regset.h $(BITMAP_H) hard-reg-set.h\n BASIC_BLOCK_H = basic-block.h $(PREDICT_H) $(VEC_H) $(FUNCTION_H) cfghooks.h\n GIMPLE_H = gimple.h gimple.def gsstruct.def pointer-set.h $(VEC_H) \\\n-\tvecir.h $(GGC_H) $(BASIC_BLOCK_H) $(TARGET_H) tree-ssa-operands.h \\\n+\tvecir.h $(GGC_H) $(BASIC_BLOCK_H) tree-ssa-operands.h \\\n \ttree-ssa-alias.h $(INTERNAL_FN_H)\n TRANS_MEM_H = trans-mem.h\n GCOV_IO_H = gcov-io.h gcov-iov.h auto-host.h\n@@ -2485,7 +2485,7 @@ tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n    $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) pointer-set.h \\\n    $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h toplev.h \\\n-   $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H)\n+   $(DIAGNOSTIC_CORE_H) $(TARGET_H) $(CFGLOOP_H)\n tree-ssa-loop.o : tree-ssa-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n@@ -2563,7 +2563,7 @@ tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n    tree-iterator.h $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) \\\n    $(VEC_H) langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H) \\\n-   $(GIMPLE_PRETTY_PRINT_H) $(DIAGNOSTIC_CORE_H)\n+   $(TARGET_H) $(GIMPLE_PRETTY_PRINT_H) $(DIAGNOSTIC_CORE_H)\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) \\\n    $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) \\\n@@ -2950,7 +2950,7 @@ varpool.o : varpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TIMEVAR_H) debug.h $(TARGET_H) output.h $(GIMPLE_H) \\\n    $(TREE_FLOW_H) \n ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H) \\\n-   $(TREE_PASS_H) $(TIMEVAR_H) $(GIMPLE_H) $(GGC_H) pointer-set.h \\\n+   $(TREE_PASS_H) $(TIMEVAR_H) $(GIMPLE_H) $(TARGET_H) $(GGC_H) pointer-set.h \\\n    $(IPA_UTILS_H)\n ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(DIAGNOSTIC_H) \\\n@@ -3139,7 +3139,7 @@ profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(FLAGS_H) $(FUNCTION_H) \\\n+   $(TM_H) $(TARGET_H) $(TREE_H) $(FLAGS_H) $(FUNCTION_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) gt-tree-profile.h $(CGRAPH_H)\n value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\"}]}