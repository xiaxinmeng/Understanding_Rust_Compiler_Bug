{"sha": "febaf72616a01e0bd74dc6c473912f6868118de7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViYWY3MjYxNmEwMWUwYmQ3NGRjNmM0NzM5MTJmNjg2ODExOGRlNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-04-29T14:43:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-04-29T14:43:29Z"}, "message": "i386.md (unspec): Add UNSPEC_PROBE_STACK.\n\n\t* config/i386/i386.md (unspec): Add UNSPEC_PROBE_STACK.\n\t(probe_stack): New expander.\n\t(probe_stack_<mode>): New insn pattern.\n\nFrom-SVN: r235642", "tree": {"sha": "f5f9351509e1f841f68535bbe134674b25eb9829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f9351509e1f841f68535bbe134674b25eb9829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/febaf72616a01e0bd74dc6c473912f6868118de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/febaf72616a01e0bd74dc6c473912f6868118de7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/febaf72616a01e0bd74dc6c473912f6868118de7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/febaf72616a01e0bd74dc6c473912f6868118de7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b891ade601b742d159a4a566e89321317bfe8975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b891ade601b742d159a4a566e89321317bfe8975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b891ade601b742d159a4a566e89321317bfe8975"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "01f2580cc77c5b35e1505fc4af91b8fe70d2a814", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febaf72616a01e0bd74dc6c473912f6868118de7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febaf72616a01e0bd74dc6c473912f6868118de7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=febaf72616a01e0bd74dc6c473912f6868118de7", "patch": "@@ -1,3 +1,9 @@\n+2016-04-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (unspec): Add UNSPEC_PROBE_STACK.\n+\t(probe_stack): New expander.\n+\t(probe_stack_<mode>): New insn pattern.\n+\n 2016-04-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md"}, {"sha": "a0343d9d7534b4f9d133615ab3b60e78165e49e3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febaf72616a01e0bd74dc6c473912f6868118de7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febaf72616a01e0bd74dc6c473912f6868118de7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=febaf72616a01e0bd74dc6c473912f6868118de7", "patch": "@@ -88,6 +88,7 @@\n   UNSPEC_SET_GOT_OFFSET\n   UNSPEC_MEMORY_BLOCKAGE\n   UNSPEC_STACK_CHECK\n+  UNSPEC_PROBE_STACK\n \n   ;; TLS support\n   UNSPEC_TP\n@@ -17552,6 +17553,30 @@\n   DONE;\n })\n \n+(define_expand \"probe_stack\"\n+  [(match_operand 0 \"memory_operand\")]\n+  \"\"\n+{\n+  rtx (*insn) (rtx, rtx)\n+    = (GET_MODE (operands[0]) == DImode\n+       ? gen_probe_stack_di : gen_probe_stack_si);\n+\n+  emit_insn (insn (operands[0], const0_rtx));\n+  DONE;\n+})\n+\n+;; Use OR for stack probes, this is shorter.\n+(define_insn \"probe_stack_<mode>\"\n+  [(set (match_operand:W 0 \"memory_operand\" \"=m\")\n+\t(unspec:W [(match_operand:W 1 \"const0_operand\")]\n+\t\t  UNSPEC_PROBE_STACK))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"\"\n+  \"or{<imodesuffix>}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"alu1\")\n+   (set_attr \"mode\" \"<MODE>\")\n+   (set_attr \"length_immediate\" \"1\")])\n+  \n (define_insn \"adjust_stack_and_probe<mode>\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n \t(unspec_volatile:P [(match_operand:P 1 \"register_operand\" \"0\")]"}]}