{"sha": "03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNiOWFiNDI2MTI3NDBhNWRiMTA0N2RmYmU1N2E4OWRkNTFjYjNjYg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-04T10:25:55Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-04T10:25:55Z"}, "message": "cpp.texi: Update for -MT.\n\n        * cpp.texi: Update for -MT.\n        * cppinit.c (initialize_dependency_output): Add a default\n        target if none has been given already.\n        (no_tgt, OPT_MT): New.\n        (cpp_handle_option): Handle -MT.  Update -M etc.\n        * cpplib.h (struct cpp_options): Remove deps_target.\n        * gcc.c (cpp_options): Handle -MT.\n        * mkdeps.c (struct deps): Move from mkdeps.h.\n        (deps_calc_target): Rename deps_add_default_target.  Add a\n        default target if none has been specified already.\n        * mkdeps.h (struct deps): Move to mkdeps.c.\n        (deps_calc_target): Rename deps_add_default_target.\n\nFrom-SVN: r38681", "tree": {"sha": "67432f300752f9afae72f10ea36c5d29f16a9ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67432f300752f9afae72f10ea36c5d29f16a9ff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/comments", "author": null, "committer": null, "parents": [{"sha": "13ac31acc717827f2c1ffd5b938c6eabc31a9e31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ac31acc717827f2c1ffd5b938c6eabc31a9e31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ac31acc717827f2c1ffd5b938c6eabc31a9e31"}], "stats": {"total": 148, "additions": 94, "deletions": 54}, "files": [{"sha": "35edc3e63ca0bdc1920fca3e9a01b24eb9c7d462", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -1,3 +1,18 @@\n+2001-01-04  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * cpp.texi: Update for -MT.\n+        * cppinit.c (initialize_dependency_output): Add a default\n+        target if none has been given already.\n+        (no_tgt, OPT_MT): New.\n+        (cpp_handle_option): Handle -MT.  Update -M etc.\n+        * cpplib.h (struct cpp_options): Remove deps_target.\n+        * gcc.c (cpp_options): Handle -MT.\n+        * mkdeps.c (struct deps): Move from mkdeps.h.\n+        (deps_calc_target): Rename deps_add_default_target.  Add a\n+        default target if none has been specified already.\n+        * mkdeps.h (struct deps): Move to mkdeps.c.\n+        (deps_calc_target): Rename deps_add_default_target.\n+\n 2000-01-03  Richard Henderson  <rth@redhat.com>\n \n \t* c-decl.c (grokdeclarator): Give zero-length arrays size zero."}, {"sha": "db7f86b8506b8019358e3840748fb6b2c1d099d7", "filename": "gcc/cpp.texi", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.texi?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -17,7 +17,7 @@\n This file documents the GNU C Preprocessor.\n \n Copyright 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-1999, 2000 Free Software Foundation, Inc.\n+1999, 2000, 2001 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice\n@@ -53,7 +53,7 @@ C Language manual.\n @vskip 0pt plus 1filll\n @c man begin COPYRIGHT\n Copyright @copyright{} 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,\n-1997, 1998, 1999, 2000\n+1997, 1998, 1999, 2000, 2001\n Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n@@ -3476,6 +3476,15 @@ files into a single dependency file suitable for using with the\n Like @samp{-MD} except mention only user header files, not system\n header files.\n \n+@item -MT @var{target}\n+@findex -MT\n+By default CPP uses the base file name and appends the object suffix,\n+normally ``.o'', to it to obtain the name of the target for dependency\n+generation.  With @samp{-MT} you can specify one or more of your own\n+targets; doing so overrides the default.\n+\n+The targets are output in the order they appear on the command line.\n+\n @item -H\n @findex -H\n Print the name of each header file used, in addition to other normal"}, {"sha": "de00b2faef6143d92abf60e20721a26f27b3d922", "filename": "gcc/cppinit.c", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -1,6 +1,6 @@\n /* CPP Library.\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -753,34 +753,27 @@ initialize_dependency_output (pfile)\n \t    return;\n \t}\n \n+      if (! pfile->deps)\n+\tpfile->deps = deps_init ();\n+\n       /* Find the space before the DEPS_TARGET, if there is one.  */\n       s = strchr (spec, ' ');\n       if (s)\n \t{\n-\t  CPP_OPTION (pfile, deps_target) = s + 1;\n+\t  deps_add_target (pfile->deps, s + 1);\n \t  output_file = (char *) xmalloc (s - spec + 1);\n \t  memcpy (output_file, spec, s - spec);\n \t  output_file[s - spec] = 0;\n \t}\n       else\n-\t{\n-\t  CPP_OPTION (pfile, deps_target) = 0;\n-\t  output_file = spec;\n-\t}\n+\toutput_file = spec;\n \n       CPP_OPTION (pfile, deps_file) = output_file;\n       CPP_OPTION (pfile, print_deps_append) = 1;\n     }\n \n-  pfile->deps = deps_init ();\n-\n-  /* Print the expected object file name as the target of this Make-rule.  */\n-  if (CPP_OPTION (pfile, deps_target))\n-    deps_add_target (pfile->deps, CPP_OPTION (pfile, deps_target));\n-  else if (*CPP_OPTION (pfile, in_fname) == 0)\n-    deps_add_target (pfile->deps, \"-\");\n-  else\n-    deps_calc_target (pfile->deps, CPP_OPTION (pfile, in_fname));\n+  /* Set the default target (if there is none already).  */\n+  deps_add_default_target (pfile->deps, CPP_OPTION (pfile, in_fname));\n \n   if (CPP_OPTION (pfile, in_fname))\n     deps_add_dep (pfile->deps, CPP_OPTION (pfile, in_fname));\n@@ -1063,6 +1056,7 @@ new_pending_directive (pend, text, handler)\n #define no_mac N_(\"Macro name missing after %s\")\n #define no_pth N_(\"Path name missing after %s\")\n #define no_num N_(\"Number missing after %s\")\n+#define no_tgt N_(\"Target missing after %s\")\n \n /* This is the list of all command line options, with the leading\n    \"-\" removed.  It must be sorted in ASCII collating order.  */\n@@ -1083,6 +1077,7 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"MG\",                       0,      OPT_MG)                         \\\n   DEF_OPT(\"MM\",                       0,      OPT_MM)                         \\\n   DEF_OPT(\"MMD\",                      no_fil, OPT_MMD)                        \\\n+  DEF_OPT(\"MT\",                       no_tgt, OPT_MT)                         \\\n   DEF_OPT(\"P\",                        0,      OPT_P)                          \\\n   DEF_OPT(\"U\",                        no_mac, OPT_U)                          \\\n   DEF_OPT(\"W\",                        no_arg, OPT_W)  /* arg optional */      \\\n@@ -1484,6 +1479,9 @@ cpp_handle_option (pfile, argc, argv)\n \tcase OPT_MD:\n \tcase OPT_MM:\n \tcase OPT_MMD:\n+\t  if (! pfile->deps)\n+\t    pfile->deps = deps_init ();\n+\n \t  if (opt_code == OPT_M || opt_code == OPT_MD)\n \t    CPP_OPTION (pfile, print_deps) = 2;\n  \t  else\n@@ -1497,6 +1495,14 @@ cpp_handle_option (pfile, argc, argv)\n  \t  else\n \t      CPP_OPTION (pfile, no_output) = 1;\n \t  break;\n+\n+\tcase OPT_MT:\n+\t  /* Add a target.  */\n+\t  if (! pfile->deps)\n+\t    pfile->deps = deps_init ();\n+\t  deps_add_target (pfile->deps, arg);\n+\t  break;\n+\n \tcase OPT_A:\n \t  if (arg[0] == '-')\n \t    {"}, {"sha": "98e8e1b500c263f58ff2f2733b03f564895ae407", "filename": "gcc/cpplib.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for CPP library.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n    Written by Per Bothner, 1994-95.\n \n@@ -281,9 +281,6 @@ struct cpp_options\n      being written to stdout.  */\n   const char *deps_file;\n \n-  /* Target-name to write with the dependency information.  */\n-  char *deps_target;\n-\n   /* Search paths for include files.  */\n   struct file_name_list *quote_include;\t /* First dir to search for \"file\" */\n   struct file_name_list *bracket_include;/* First dir to search for <file> */"}, {"sha": "53c7ba244639e4f51ea28b0bfcef73ead60edf8d", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -1,6 +1,6 @@\n /* Compiler driver program that can handle many languages.\n    Copyright (C) 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -584,7 +584,7 @@ static const char *cpp_options =\n \"%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n  %{std*} %{nostdinc*}\\\n  %{C} %{v} %{I*} %{P} %{$} %I\\\n- %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n+ %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} %{MT}\\\n  %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 -D__GNUC_PATCHLEVEL__=%v3}\\\n  %{!undef:%{!ansi:%{!std=*:%p}%{std=gnu*:%p}} %P} %{trigraphs}\\\n  %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\"}, {"sha": "8d3e0bfce89ce6c141ffa76445e05b80af6b102f", "filename": "gcc/mkdeps.c", "status": "modified", "additions": 39, "deletions": 15, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fmkdeps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fmkdeps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkdeps.c?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -1,5 +1,5 @@\n /* Dependency generator for Makefile fragments.\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Zack Weinberg, Mar 2000\n \n This program is free software; you can redistribute it and/or modify it\n@@ -24,13 +24,22 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #include \"system.h\"\n #include \"mkdeps.h\"\n \n+/* Keep this structure local to this file, so clients don't find it\n+   easy to start making assumptions.  */\n+struct deps\n+{\n+  const char **targetv;\n+  unsigned int ntargets;\t/* number of slots actually occupied */\n+  unsigned int targets_size;\t/* amt of allocated space - in words */\n+\n+  const char **depv;\n+  unsigned int ndeps;\n+  unsigned int deps_size;\n+};\n+\n static const char *munge\tPARAMS ((const char *));\n static const char *base_name\tPARAMS ((const char *));\n \n-#ifndef OBJECT_SUFFIX\n-# define OBJECT_SUFFIX \".o\"\n-#endif\n-\n /* Given a filename, quote characters in that filename which are\n    significant to Make.  Note that it's not possible to quote all such\n    characters - e.g. \\n, %, *, ?, [, \\ (in some contexts), and ~ are\n@@ -180,24 +189,39 @@ deps_add_target (d, t)\n   d->targetv[d->ntargets++] = t;\n }\n \n+/* Sets the default target if none has been given already.  An empty\n+   string as the default target in interpreted as stdin.  */\n void\n-deps_calc_target (d, t)\n+deps_add_default_target (d, tgt)\n      struct deps *d;\n-     const char *t;\n+     const char *tgt;\n {\n   char *o, *suffix;\n \n-  t = base_name (t);\n-  o = (char *) alloca (strlen (t) + 8);\n+  /* Only if we have no targets.  */\n+  if (d->ntargets)\n+    return;\n \n-  strcpy (o, t);\n-  suffix = strrchr (o, '.');\n-  if (suffix)\n-    strcpy (suffix, OBJECT_SUFFIX);\n+  if (tgt[0] == '\\0')\n+    deps_add_target (d, \"-\");\n   else\n-    strcat (o, OBJECT_SUFFIX);\n+    {\n+      tgt = base_name (tgt);\n+      o = (char *) alloca (strlen (tgt) + 8);\n+\n+      strcpy (o, tgt);\n+      suffix = strrchr (o, '.');\n \n-  deps_add_target (d, o);\n+#ifndef OBJECT_SUFFIX\n+# define OBJECT_SUFFIX \".o\"\n+#endif\n+\n+      if (suffix)\n+\tstrcpy (suffix, OBJECT_SUFFIX);\n+      else\n+\tstrcat (o, OBJECT_SUFFIX);\n+      deps_add_target (d, o);\n+    }\n }\n \n void"}, {"sha": "727a78485a919084ae7e21d1f96d36dde2351652", "filename": "gcc/mkdeps.h", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fmkdeps.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b9ab42612740a5db1047dfbe57a89dd51cb3cb/gcc%2Fmkdeps.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkdeps.h?ref=03b9ab42612740a5db1047dfbe57a89dd51cb3cb", "patch": "@@ -1,5 +1,5 @@\n /* Dependency generator for Makefile fragments.\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Zack Weinberg, Mar 2000\n \n This program is free software; you can redistribute it and/or modify it\n@@ -26,16 +26,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n /* This is the data structure used by all the functions in mkdeps.c.\n    It's quite straightforward, but should be treated as opaque.  */\n \n-struct deps\n-{\n-  const char **targetv;\n-  unsigned int ntargets;\t/* number of slots actually occupied */\n-  unsigned int targets_size;\t/* amt of allocated space - in words */\n-\n-  const char **depv;\n-  unsigned int ndeps;\n-  unsigned int deps_size;\n-};\n+struct deps;\n \n /* Create a deps buffer.  */\n extern struct deps *deps_init\tPARAMS ((void));\n@@ -46,11 +37,9 @@ extern void deps_free\t\tPARAMS ((struct deps *));\n /* Add a target (appears on left side of the colon) to the deps list. */\n extern void deps_add_target\tPARAMS ((struct deps *, const char *));\n \n-/* Given the name of the primary source file, calculate and add the\n-   name of the target.  This is done by locating and stripping the\n-   file extension (if any) and adding .o (OBJECT_SUFFIX).  In addition,\n-   any directory components of the path are discarded.  */\n-extern void deps_calc_target\tPARAMS ((struct deps *, const char *));\n+/* Sets the default target if none has been given already.  An empty\n+   string as the default target in interpreted as stdin.  */\n+extern void deps_add_default_target PARAMS ((struct deps *, const char *));\n \n /* Add a dependency (appears on the right side of the colon) to the\n    deps list.  Dependencies will be printed in the order that they"}]}