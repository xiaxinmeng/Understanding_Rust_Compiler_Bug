{"sha": "fadb01364d36a50836201bc9a6a03e525d267967", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFkYjAxMzY0ZDM2YTUwODM2MjAxYmM5YTZhMDNlNTI1ZDI2Nzk2Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-25T13:09:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-25T13:09:25Z"}, "message": "re PR tree-optimization/91896 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1687)\n\n2019-09-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/91896\n\t* tree-vect-loop.c (vectorizable_reduction): The single\n\tdef-use cycle optimization cannot apply when there's more\n\tthan one pattern stmt involved.\n\n\t* gcc.dg/torture/pr91896.c: New testcase.\n\nFrom-SVN: r276123", "tree": {"sha": "be834f8fb07161c86cf9ad94ab02b09a9f0bb390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be834f8fb07161c86cf9ad94ab02b09a9f0bb390"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fadb01364d36a50836201bc9a6a03e525d267967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fadb01364d36a50836201bc9a6a03e525d267967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fadb01364d36a50836201bc9a6a03e525d267967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fadb01364d36a50836201bc9a6a03e525d267967/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "761e6bb9f7d2bd782d93e46baebade2eb1f7d16e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761e6bb9f7d2bd782d93e46baebade2eb1f7d16e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/761e6bb9f7d2bd782d93e46baebade2eb1f7d16e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "f14a598e43478a2194d7f1c0dee514dae6979cfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fadb01364d36a50836201bc9a6a03e525d267967", "patch": "@@ -1,3 +1,10 @@\n+2019-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91896\n+\t* tree-vect-loop.c (vectorizable_reduction): The single\n+\tdef-use cycle optimization cannot apply when there's more\n+\tthan one pattern stmt involved.\n+\n 2019-09-24  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/rs6000/rs6000.md (load_macho_picbase_<mode>): New, using"}, {"sha": "bf03a5e3c9eea53435e40018532d92405e63db0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fadb01364d36a50836201bc9a6a03e525d267967", "patch": "@@ -1,3 +1,8 @@\n+2019-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91896\n+\t* gcc.dg/torture/pr91896.c: New testcase.\n+\n 2019-09-25  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.target/s390/pr91014.c: Move to ..."}, {"sha": "e728538bb9a29cf0f1510ecf2fce57686cf21fa4", "filename": "gcc/testsuite/gcc.dg/torture/pr91896.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91896.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91896.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91896.c?ref=fadb01364d36a50836201bc9a6a03e525d267967", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-ftree-vectorize\" } */\n+\n+unsigned int\n+zj (unsigned int et)\n+{\n+  signed char jr = 0;\n+\n+  do {\n+    et *= 3;\n+    jr += 2;\n+  } while (jr >= 0);\n+\n+  if (et == (unsigned int) jr)\n+    et = 0;\n+\n+  return et;\n+}"}, {"sha": "ec00912e67d84b008327135e8569f63ea5a70c6a", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fadb01364d36a50836201bc9a6a03e525d267967/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=fadb01364d36a50836201bc9a6a03e525d267967", "patch": "@@ -6101,6 +6101,8 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n       if (ncopies > 1\n \t  && STMT_VINFO_RELEVANT (reduc_stmt_info) <= vect_used_only_live\n \t  && (use_stmt_info = loop_vinfo->lookup_single_use (phi_result))\n+\t  && (!STMT_VINFO_IN_PATTERN_P (use_stmt_info)\n+\t      || !STMT_VINFO_PATTERN_DEF_SEQ (use_stmt_info))\n \t  && vect_stmt_to_vectorize (use_stmt_info) == reduc_stmt_info)\n \tsingle_defuse_cycle = true;\n \n@@ -6868,6 +6870,8 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n   if (ncopies > 1\n       && (STMT_VINFO_RELEVANT (stmt_info) <= vect_used_only_live)\n       && (use_stmt_info = loop_vinfo->lookup_single_use (reduc_phi_result))\n+      && (!STMT_VINFO_IN_PATTERN_P (use_stmt_info)\n+\t  || !STMT_VINFO_PATTERN_DEF_SEQ (use_stmt_info))\n       && vect_stmt_to_vectorize (use_stmt_info) == stmt_info)\n     {\n       single_defuse_cycle = true;"}]}