{"sha": "4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmNjEyZmE2MDc2YmQxMmQxMDVhOGIxZDRjZGJlYjI2ZTY0NmVjMQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2017-08-01T13:23:06Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-08-01T13:23:06Z"}, "message": "t-vxworks (LIBGCC2_INCLUDES): Start with -I.\n\n2017-08-01  Olivier Hainque  <hainque@adacore.com>\n\n\t* config/t-vxworks (LIBGCC2_INCLUDES): Start with -I. after -nostdinc.\n\t* config/t-vxworks7: Likewise.\n\nFrom-SVN: r250776", "tree": {"sha": "11ab5c4098f76221c7865cbd72fbf990a0a6b0eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11ab5c4098f76221c7865cbd72fbf990a0a6b0eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5560e8c0af7aa74641f44de11fdf0ff194d71509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5560e8c0af7aa74641f44de11fdf0ff194d71509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5560e8c0af7aa74641f44de11fdf0ff194d71509"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "626a50f1a400e109e2e265bfe024ff6b599fdb34", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "patch": "@@ -1,3 +1,8 @@\n+2017-08-01  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/t-vxworks (LIBGCC2_INCLUDES): Start with -I. after -nostdinc.\n+\t* config/t-vxworks7: Likewise.\n+\n 2017-08-01  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/t-vxworks: Instead of redefining LIB2ADD,"}, {"sha": "bbbb16deedee13b3db9568d7eee0f268da580d4b", "filename": "libgcc/config/t-vxworks", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/libgcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/libgcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-vxworks?ref=4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "patch": "@@ -4,10 +4,11 @@ LIBGCC2_DEBUG_CFLAGS =\n # Extra libgcc2 modules used by gthr-vxworks.h functions\n LIB2ADDEH += $(srcdir)/config/vxlib.c $(srcdir)/config/vxlib-tls.c\n \n-# This ensures that the correct target headers are used; some\n-# VxWorks system headers have names that collide with GCC's\n-# internal (host) headers, e.g. regs.h.\n-LIBGCC2_INCLUDES = -nostdinc \\\n+# This ensures that the correct target headers are used; some VxWorks\n+# system headers have names that collide with GCC's internal (host)\n+# headers, e.g. regs.h. Make sure the local libgcc headers still\n+# prevail (e.g. unwind.h).\n+LIBGCC2_INCLUDES = -nostdinc -I. \\\n   `case \"/$(MULTIDIR)\" in \\\n      */mrtp*) echo -I$(WIND_USR)/h -I$(WIND_USR)/h/wrn/coreip ;; \\\n      *) echo -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/h/wrn/coreip ;; \\"}, {"sha": "ae1dff9ccbdb6f0003e111ab3c90ccfe826966df", "filename": "libgcc/config/t-vxworks7", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/libgcc%2Fconfig%2Ft-vxworks7", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4df612fa6076bd12d105a8b1d4cdbeb26e646ec1/libgcc%2Fconfig%2Ft-vxworks7", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-vxworks7?ref=4df612fa6076bd12d105a8b1d4cdbeb26e646ec1", "patch": "@@ -4,11 +4,12 @@ LIBGCC2_DEBUG_CFLAGS =\n # Extra libgcc2 modules used by gthr-vxworks.h functions\n LIB2ADDEH += $(srcdir)/config/vxlib.c $(srcdir)/config/vxlib-tls.c\n \n-# This ensures that the correct target headers are used; some\n-# VxWorks system headers have names that collide with GCC's\n-# internal (host) headers, e.g. regs.h.\n+# This ensures that the correct target headers are used; some VxWorks\n+# system headers have names that collide with GCC's internal (host)\n+# headers, e.g. regs.h. Make sure the local libgcc headers still\n+# prevail (e.g. unwind.h).\n LIBGCC2_INCLUDES = -nostdinc \\\n-  -I$(VSB_DIR)/h -I$(VSB_DIR)/share/h \\\n+  -I. -I$(VSB_DIR)/h -I$(VSB_DIR)/share/h \\\n   `case \"/$(MULTIDIR)\" in \\\n       */mrtp*) echo -I$(VSB_DIR)/usr/h/public -I$(VSB_DIR)/usr/h ;; \\\n       *) echo -I$(VSB_DIR)/krnl/h/system -I$(VSB_DIR)/krnl/h/public ;; \\"}]}