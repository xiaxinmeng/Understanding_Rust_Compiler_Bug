{"sha": "2e9c8641aadc857b55fb7cd3a8df4543edea323b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU5Yzg2NDFhYWRjODU3YjU1ZmI3Y2QzYThkZjQ1NDNlZGVhMzIzYg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-02-24T23:26:42Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-02-24T23:26:42Z"}, "message": "PR c/51147 - attribute((mode(byte))) on an enum generates wrong code\n\ngcc/testsuite/ChangeLog:\n2016-02-24  Martin Sebor  <msebor@redhat.com>\n\n        PR c/51147\n        * gcc.dg/enum-mode-2.c: New test.\n\nFrom-SVN: r233686", "tree": {"sha": "4c215dbcdd9361c9ff6540fb381a4b3685247017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c215dbcdd9361c9ff6540fb381a4b3685247017"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e9c8641aadc857b55fb7cd3a8df4543edea323b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9c8641aadc857b55fb7cd3a8df4543edea323b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9c8641aadc857b55fb7cd3a8df4543edea323b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9c8641aadc857b55fb7cd3a8df4543edea323b/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44293580369777e9fac3341133d6459b37c04672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44293580369777e9fac3341133d6459b37c04672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44293580369777e9fac3341133d6459b37c04672"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "712121fe5cc79e866d57e00648fc0dc22f28a3ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9c8641aadc857b55fb7cd3a8df4543edea323b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9c8641aadc857b55fb7cd3a8df4543edea323b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e9c8641aadc857b55fb7cd3a8df4543edea323b", "patch": "@@ -1,3 +1,8 @@\n+2016-02-24  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/51147\n+\t* gcc.dg/enum-mode-2.c: New test.\n+\n 2016-02-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/69922"}, {"sha": "8dba3c53c69e6a91cc836b28b9fdd4a551aabd53", "filename": "gcc/testsuite/gcc.dg/enum-mode-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e9c8641aadc857b55fb7cd3a8df4543edea323b/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-mode-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e9c8641aadc857b55fb7cd3a8df4543edea323b/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-mode-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-mode-2.c?ref=2e9c8641aadc857b55fb7cd3a8df4543edea323b", "patch": "@@ -0,0 +1,22 @@\n+/* PR c/51147 - attribute((mode(byte))) on an enum generates wrong code */\n+\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O2 -fdump-tree-optimized\" } */\n+\n+enum _eq_bool\n+{\n+  false,\n+  true\n+} __attribute__((mode (byte)));\n+\n+typedef enum _eq_bool bool;\n+\n+bool foo (void);\n+bool bar (void);\n+\n+bool test (void)\n+{\n+  return foo () || bar ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"foo|bar\" 2 \"optimized\" } } */"}]}