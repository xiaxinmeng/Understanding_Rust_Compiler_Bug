{"sha": "71c10038d1739414c587d2d88cd858b213bd1453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFjMTAwMzhkMTczOTQxNGM1ODdkMmQ4OGNkODU4YjIxM2JkMTQ1Mw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2008-05-06T17:15:07Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2008-05-06T17:15:07Z"}, "message": "PR preprocessor/35313, PR preprocessor/36088:\n\ngcc/testsuite\n\tPR preprocessor/35313, PR preprocessor/36088:\n\t* gcc.dg/cpp/pr35313.c: New file.\n\t* gcc.dg/cpp/if-oppr.c: Remove test for ',' in a conditional\n\texpression.\n\t* gcc.dg/cpp/if-oppr2.c: New file.\nlibcpp\n\tPR preprocessor/35313, PR preprocessor/36088:\n\t* expr.c (optab) <QUERY, COMMA>: Set precedence to 4.\n\t(reduce) <case CPP_QUERY>: Special case CPP_COMMA and CPP_COLON.\n\nFrom-SVN: r134989", "tree": {"sha": "9b75142790c70534d0c2159f221893eb16ef3402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b75142790c70534d0c2159f221893eb16ef3402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71c10038d1739414c587d2d88cd858b213bd1453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c10038d1739414c587d2d88cd858b213bd1453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c10038d1739414c587d2d88cd858b213bd1453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c10038d1739414c587d2d88cd858b213bd1453/comments", "author": null, "committer": null, "parents": [{"sha": "3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "4aacdf2112b9fa70014607bc493703906a326de1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71c10038d1739414c587d2d88cd858b213bd1453", "patch": "@@ -1,3 +1,11 @@\n+2008-05-06  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR preprocessor/35313, PR preprocessor/36088:\n+\t* gcc.dg/cpp/pr35313.c: New file.\n+\t* gcc.dg/cpp/if-oppr.c: Remove test for ',' in a conditional\n+\texpression.\n+\t* gcc.dg/cpp/if-oppr2.c: New file.\n+\n 2008-05-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36117"}, {"sha": "a46a815cf99d9f2d362e416c802f31b3c9fdc7cb", "filename": "gcc/testsuite/gcc.dg/cpp/if-oppr.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-oppr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-oppr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-oppr.c?ref=71c10038d1739414c587d2d88cd858b213bd1453", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+/* Copyright (C) 2000, 2008 Free Software Foundation, Inc.  */\n \n /* Test the full range of preprocessor operator precedence.  Each\n    operator is tested with one of immediately higher precedence to\n@@ -19,11 +19,6 @@\n #else\n #endif\n \n-/* , not higher than ?.  This is not a syntax error if it is.  */\n-#if 1 ? 0, 1: 1\t/* { dg-error \"without\" \"? higher precedence than ,\" } */\n-#error\n-#endif\n-\n /* : strictly higher than ?.  This would give a syntax error otherwise.  */\n #if 0 ? 0 : 1 ? 1 : 1\n #endif"}, {"sha": "bcfe7cca2f0a318f89383c661d2a5a715acee884", "filename": "gcc/testsuite/gcc.dg/cpp/if-oppr2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-oppr2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-oppr2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-oppr2.c?ref=71c10038d1739414c587d2d88cd858b213bd1453", "patch": "@@ -0,0 +1,10 @@\n+/* Copyright (C) 2008 Free Software Foundation, Inc.  */\n+\n+/* Another test of operator precedence.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"\" } */\n+\n+#if 1 ? 2 : 3 , 0\n+#error\n+#endif"}, {"sha": "e12636e0b708678b4e7a10636bb432968235be29", "filename": "gcc/testsuite/gcc.dg/cpp/pr35313.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr35313.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c10038d1739414c587d2d88cd858b213bd1453/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr35313.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr35313.c?ref=71c10038d1739414c587d2d88cd858b213bd1453", "patch": "@@ -0,0 +1,11 @@\n+/* Test two failing cases for libcpp parser.  From PRs 35313, 36088*/\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99 -pedantic-errors\" } */\n+\n+extern int x;\n+\n+#if 0 ? 3,4 : 2\n+#endif\n+\n+#if 1 ? 0 : 1 ? 1/0 : 1/0\n+#endif"}, {"sha": "b86e22e613d171b9925eaf70f1753f160438df00", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c10038d1739414c587d2d88cd858b213bd1453/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c10038d1739414c587d2d88cd858b213bd1453/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=71c10038d1739414c587d2d88cd858b213bd1453", "patch": "@@ -1,3 +1,9 @@\n+2008-05-06  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR preprocessor/35313, PR preprocessor/36088:\n+\t* expr.c (optab) <QUERY, COMMA>: Set precedence to 4.\n+\t(reduce) <case CPP_QUERY>: Special case CPP_COMMA and CPP_COLON.\n+\n 2008-05-04  David S. Miller  <davem@davemloft.net>\n \n \t* configure.ac (sparc*-*-*): Always set need_64bit_hwint to yes."}, {"sha": "af0e2590ee4965346959fb192680979636fa99bf", "filename": "libcpp/expr.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c10038d1739414c587d2d88cd858b213bd1453/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c10038d1739414c587d2d88cd858b213bd1453/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=71c10038d1739414c587d2d88cd858b213bd1453", "patch": "@@ -1,6 +1,6 @@\n /* Parse C expressions for cpplib.\n    Copyright (C) 1987, 1992, 1994, 1995, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2004 Free Software Foundation.\n+   2002, 2004, 2008 Free Software Foundation.\n    Contributed by Per Bothner, 1994.\n \n This program is free software; you can redistribute it and/or modify it\n@@ -809,9 +809,11 @@ static const struct cpp_operator\n   /* COMPL */\t\t{16, NO_L_OPERAND},\n   /* AND_AND */\t\t{6, LEFT_ASSOC},\n   /* OR_OR */\t\t{5, LEFT_ASSOC},\n-  /* QUERY */\t\t{3, 0},\n+  /* Note that QUERY, COLON, and COMMA must have the same precedence.\n+     However, there are some special cases for these in reduce().  */\n+  /* QUERY */\t\t{4, 0},\n   /* COLON */\t\t{4, LEFT_ASSOC | CHECK_PROMOTION},\n-  /* COMMA */\t\t{2, LEFT_ASSOC},\n+  /* COMMA */\t\t{4, LEFT_ASSOC},\n   /* OPEN_PAREN */\t{1, NO_L_OPERAND},\n   /* CLOSE_PAREN */\t{0, 0},\n   /* EOF */\t\t{0, 0},\n@@ -1101,6 +1103,9 @@ reduce (cpp_reader *pfile, struct op *top, enum cpp_ttype op)\n \t  continue;\n \n \tcase CPP_QUERY:\n+\t  /* COMMA and COLON should not reduce a QUERY operator.  */\n+\t  if (op == CPP_COMMA || op == CPP_COLON)\n+\t    return top;\n \t  cpp_error (pfile, CPP_DL_ERROR, \"'?' without following ':'\");\n \t  return 0;\n "}]}