{"sha": "1125706fe491a34a72905b8ec38dc810e0c52d6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyNTcwNmZlNDkxYTM0YTcyOTA1YjhlYzM4ZGM4MTBlMGM1MmQ2Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-08T21:59:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-08T21:59:41Z"}, "message": "(expand_expr, case INDIRECT_REF): Set RTX_UNCHANGING_P if both\nTREE_READONLY and TREE_STATIC set.\n\nFrom-SVN: r9591", "tree": {"sha": "e6d3475cdc492f0cd3a8f4afc53631de49dc963b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6d3475cdc492f0cd3a8f4afc53631de49dc963b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1125706fe491a34a72905b8ec38dc810e0c52d6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1125706fe491a34a72905b8ec38dc810e0c52d6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1125706fe491a34a72905b8ec38dc810e0c52d6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1125706fe491a34a72905b8ec38dc810e0c52d6f/comments", "author": null, "committer": null, "parents": [{"sha": "d949d5dfde30fe2393ce4c7fd87e3fc6d073f075", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d949d5dfde30fe2393ce4c7fd87e3fc6d073f075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d949d5dfde30fe2393ce4c7fd87e3fc6d073f075"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "1d1102f1a0db3c703c70a62619b5b4d73ad49058", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1125706fe491a34a72905b8ec38dc810e0c52d6f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1125706fe491a34a72905b8ec38dc810e0c52d6f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=1125706fe491a34a72905b8ec38dc810e0c52d6f", "patch": "@@ -4555,11 +4555,13 @@ expand_expr (exp, target, tmode, modifier)\n \t\t&& AGGREGATE_TYPE_P (TREE_TYPE (exp2))))\n \t  MEM_IN_STRUCT_P (temp) = 1;\n \tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp) | flag_volatile;\n-#if 0 /* It is incorrect to set RTX_UNCHANGING_P here, because the fact that\n-\t a location is accessed through a pointer to const does not mean\n-\t that the value there can never change.  */\n-\tRTX_UNCHANGING_P (temp) = TREE_READONLY (exp);\n-#endif\n+\n+\t/* It is incorrect to set RTX_UNCHANGING_P from TREE_READONLY\n+\t   here, because, in C and C++, the fact that a location is accessed\n+\t   through a pointer to const does not mean that the value there can\n+\t   never change.  Languages where it can never change should\n+\t   also set TREE_STATIC.  */\n+\tRTX_UNCHANGING_P (temp) = TREE_READONLY (exp) | TREE_STATIC (exp);\n \treturn temp;\n       }\n "}]}