{"sha": "360b7bffb189999022dfef2c1fa2ee63c73899bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwYjdiZmZiMTg5OTk5MDIyZGZlZjJjMWZhMmVlNjNjNzM4OTliYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-23T11:49:07Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-23T11:49:07Z"}, "message": "stl_list.h (insert(iterator, value_type&&)): Just forward to emplace.\n\n2007-11-23  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_list.h (insert(iterator, value_type&&)): Just\n\tforward to emplace.\n\t* include/bits/stl_vector.h (insert(iterator, value_type&&)): Likewise.\n\t* include/bits/stl_deque.h (insert(iterator, value_type&&)): Likewise.\n\t* include/debug/list (insert(iterator, value_type&&)): Likewise.\n\t* include/debug/vector (insert(iterator, value_type&&)): Likewise.\n\t* include/debug/deque (insert(iterator, value_type&&)): Likewise.\n\t* include/bits/list.tcc (insert(iterator, value_type&&)): Remove.\n\t* include/bits/vector.tcc (insert(iterator, value_type&&)): Likewise.\n\t* include/bits/deque.tcc (insert(iterator, value_type&&)): Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\nFrom-SVN: r130374", "tree": {"sha": "8822e9a6c2d1ac57aae43057277ac0328db35053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8822e9a6c2d1ac57aae43057277ac0328db35053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/360b7bffb189999022dfef2c1fa2ee63c73899bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360b7bffb189999022dfef2c1fa2ee63c73899bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360b7bffb189999022dfef2c1fa2ee63c73899bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360b7bffb189999022dfef2c1fa2ee63c73899bc/comments", "author": null, "committer": null, "parents": [{"sha": "5102fac5feb4262e4ea4bf771d8bc5a3f14812ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5102fac5feb4262e4ea4bf771d8bc5a3f14812ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5102fac5feb4262e4ea4bf771d8bc5a3f14812ed"}], "stats": {"total": 150, "additions": 58, "deletions": 92}, "files": [{"sha": "d05dd129a7462476105a3990116bea6f84d81bab", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -1,3 +1,40 @@\n+2007-11-23  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_list.h (insert(iterator, value_type&&)): Just\n+\tforward to emplace.\n+\t* include/bits/stl_vector.h (insert(iterator, value_type&&)): Likewise.\n+\t* include/bits/stl_deque.h (insert(iterator, value_type&&)): Likewise.\n+\t* include/debug/list (insert(iterator, value_type&&)): Likewise.\n+\t* include/debug/vector (insert(iterator, value_type&&)): Likewise.\n+\t* include/debug/deque (insert(iterator, value_type&&)): Likewise.\n+\t* include/bits/list.tcc (insert(iterator, value_type&&)): Remove.\n+\t* include/bits/vector.tcc (insert(iterator, value_type&&)): Likewise.\n+\t* include/bits/deque.tcc (insert(iterator, value_type&&)): Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n 2007-11-22  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_tree.h (_Rb_tree<>::_Rb_tree_impl<, true>): Remove,"}, {"sha": "08b7adeeb6577c8d9eaca194b2d4e29808a0af03", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -107,27 +107,6 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n     }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n-  template<typename _Tp, typename _Alloc>\n-    typename deque<_Tp, _Alloc>::iterator\n-    deque<_Tp, _Alloc>::\n-    insert(iterator __position, value_type&& __x)\n-    {\n-      if (__position._M_cur == this->_M_impl._M_start._M_cur)\n-\t{\n-\t  push_front(std::move(__x));\n-\t  return this->_M_impl._M_start;\n-\t}\n-      else if (__position._M_cur == this->_M_impl._M_finish._M_cur)\n-\t{\n-\t  push_back(std::move(__x));\n-\t  iterator __tmp = this->_M_impl._M_finish;\n-\t  --__tmp;\n-\t  return __tmp;\n-\t}\n-      else\n-        return _M_insert_aux(__position, std::move(__x));\n-    }\n-\n   template<typename _Tp, typename _Alloc>\n     template<typename... _Args>\n       typename deque<_Tp, _Alloc>::iterator"}, {"sha": "57ee10c4c6e32cb348972a1e0bec8643a271588d", "filename": "libstdc++-v3/include/bits/list.tcc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -103,18 +103,6 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       return iterator(__tmp);\n     }\n \n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n-  template<typename _Tp, typename _Alloc>\n-    typename list<_Tp, _Alloc>::iterator\n-    list<_Tp, _Alloc>::\n-    insert(iterator __position, value_type&& __x)\n-    {\n-      _Node* __tmp = _M_create_node(std::move(__x));\n-      __tmp->hook(__position._M_node);\n-      return iterator(__tmp);\n-    }\n-#endif\n-\n   template<typename _Tp, typename _Alloc>\n     typename list<_Tp, _Alloc>::iterator\n     list<_Tp, _Alloc>::"}, {"sha": "4261e758299187cff3f2a2e1e0ab787fdf380a6c", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -1276,7 +1276,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  specified location.\n        */\n       iterator\n-      insert(iterator __position, value_type&& __x);\n+      insert(iterator __position, value_type&& __x)\n+      { return emplace(__position, std::move(__x)); }\n #endif\n \n       /**"}, {"sha": "0904586a9e6a0d8e8f80b6ffa0f57981a6c25760", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -951,7 +951,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  invalidate iterators and references.\n         */\n       iterator\n-      insert(iterator __position, value_type&& __x);\n+      insert(iterator __position, value_type&& __x)\n+      { return emplace(__position, std::move(__x)); }\n #endif\n \n       /**"}, {"sha": "ad7d08375ac1c8a1cbcadef6fe739af71a388753", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -774,7 +774,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  used the user should consider using std::list.\n        */\n       iterator\n-      insert(iterator __position, value_type&& __x);\n+      insert(iterator __position, value_type&& __x)\n+      { return emplace(__position, std::move(__x)); }\n #endif\n \n       /**"}, {"sha": "354ab73f10f6580981ca2754488826689f71abd8", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -115,25 +115,6 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       return iterator(this->_M_impl._M_start + __n);\n     }\n \n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n-  template<typename _Tp, typename _Alloc>\n-    typename vector<_Tp, _Alloc>::iterator\n-    vector<_Tp, _Alloc>::\n-    insert(iterator __position, value_type&& __x)\n-    {\n-      const size_type __n = __position - begin();\n-      if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage\n-\t  && __position == end())\n-\t{\n-\t  this->_M_impl.construct(this->_M_impl._M_finish, std::move(__x));\n-\t  ++this->_M_impl._M_finish;\n-\t}\n-      else\n-        _M_insert_aux(__position, std::move(__x));\n-      return iterator(this->_M_impl._M_start + __n);\n-    }\n-#endif\n-\n   template<typename _Tp, typename _Alloc>\n     typename vector<_Tp, _Alloc>::iterator\n     vector<_Tp, _Alloc>::"}, {"sha": "2f967b49f33a7850cb514b10ce1da31aa3dd84cc", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -309,13 +309,7 @@ namespace __debug\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       iterator\n       insert(iterator __position, _Tp&& __x)\n-      {\n-\t__glibcxx_check_insert(__position);\n-\ttypename _Base::iterator __res = _Base::insert(__position.base(),\n-\t\t\t\t\t\t       std::move(__x));\n-\tthis->_M_invalidate_all();\n-\treturn iterator(__res, this);\n-      }\n+      { return emplace(__position, std::move(__x)); }\n #endif\n \n       void"}, {"sha": "b071d4fcdd61c700e1155f8d7f9463e99b12cbbb", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -322,11 +322,7 @@ namespace __debug\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       iterator\n       insert(iterator __position, _Tp&& __x)\n-      {\n-\t__glibcxx_check_insert(__position);\n-\treturn iterator(_Base::insert(__position.base(),\n-\t\t\t\t      std::move(__x)), this);\n-      }\n+      { return emplace(__position, std::move(__x)); }\n #endif\n \n       void"}, {"sha": "672cb81ad9dd4a6126694799a5a90a95d4c38f17", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -349,19 +349,7 @@ namespace __debug\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       iterator\n       insert(iterator __position, _Tp&& __x)\n-      {\n-\t__glibcxx_check_insert(__position);\n-\tbool __realloc = _M_requires_reallocation(this->size() + 1);\n-\tdifference_type __offset = __position - begin();\n-\ttypename _Base::iterator __res = _Base::insert(__position.base(),\n-\t\t\t\t\t\t       std::move(__x));\n-\tif (__realloc)\n-\t  this->_M_invalidate_all();\n-\telse\n-\t  this->_M_invalidate_if(_After_nth(__offset, _M_base().begin()));\n-\t_M_update_guaranteed_capacity();\n-\treturn iterator(__res, this);\n-      }\n+      { return emplace(__position, std::move(__x)); }\n #endif\n \n       void"}, {"sha": "16aab4f6208542a84e860b8cae8aed435fd15e6b", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1464 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1465 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "1c50b51632820feef94392af3b3058ab1822a462", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1399 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1400 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "73ccf65c4e7339da0a02b54b15acfeee97c3294b", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1399 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1400 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "c376354debfa928c2041e3c31256c23665b26e07", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1552 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1553 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "071ddf3ed61036d66f718cfae55df0afbcf0b97e", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1326 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1327 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "14eb25a6ab507250d0959eb09598162b5b190c78", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1295 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1296 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "0cd72fa7afe54f9e663105a2676f9f0f17832933", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1295 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1296 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "8547c2f5d692231508e31678bdb5895555b9a96b", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1295 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1296 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "59625e4529193535bf6d27b071ad5c6dad69c5a5", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 997 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 998 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "06bf7ee680b076d5c006388a6e8ad1f09cb46124", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 937 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 938 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "f9abb0bcc511cf38281d6cdc43c89b66cf8fd8ff", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 937 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 938 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "b0ce2da0eb4d8e2c2b9a633c8e101271bd41a3a7", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360b7bffb189999022dfef2c1fa2ee63c73899bc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=360b7bffb189999022dfef2c1fa2ee63c73899bc", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1038 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1039 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}]}