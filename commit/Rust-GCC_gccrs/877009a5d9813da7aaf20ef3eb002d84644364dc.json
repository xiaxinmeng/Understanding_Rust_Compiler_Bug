{"sha": "877009a5d9813da7aaf20ef3eb002d84644364dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc3MDA5YTVkOTgxM2RhN2FhZjIwZWYzZWIwMDJkODQ2NDQzNjRkYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2018-12-09T12:47:47Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2018-12-09T12:47:47Z"}, "message": "Split up \"gfortran.dg/goacc/loop-2.f95\"\n\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/loop-2.f95: Split into...\n\t* gfortran.dg/goacc/loop-2-kernels-nested.f95: ... this new\n\tfile...\n\t* gfortran.dg/goacc/loop-2-kernels-tile.f95: ..., and this new\n\tfile...\n\t* gfortran.dg/goacc/loop-2-kernels.f95: ..., and this new file...\n\t* gfortran.dg/goacc/loop-2-parallel-3.f95: ..., and this new\n\tfile...\n\t* gfortran.dg/goacc/loop-2-parallel-nested.f95: ..., and this new\n\tfile...\n\t* gfortran.dg/goacc/loop-2-parallel-tile.f95: ..., and this new\n\tfile...\n\t* gfortran.dg/goacc/loop-2-parallel.f95: ..., and this new file.\n\nFrom-SVN: r266921", "tree": {"sha": "95aa86b94c89e504cffa9acc7f22c23c27503eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95aa86b94c89e504cffa9acc7f22c23c27503eb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/877009a5d9813da7aaf20ef3eb002d84644364dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877009a5d9813da7aaf20ef3eb002d84644364dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/877009a5d9813da7aaf20ef3eb002d84644364dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877009a5d9813da7aaf20ef3eb002d84644364dc/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b22b7d462ee469da57e7c17ffbf0686076b7af65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b22b7d462ee469da57e7c17ffbf0686076b7af65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b22b7d462ee469da57e7c17ffbf0686076b7af65"}], "stats": {"total": 1366, "additions": 717, "deletions": 649}, "files": [{"sha": "7bee068aabf36b4095252c834ea685c623ef286f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -1,5 +1,19 @@\n 2018-12-09  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* gfortran.dg/goacc/loop-2.f95: Split into...\n+\t* gfortran.dg/goacc/loop-2-kernels-nested.f95: ... this new\n+\tfile...\n+\t* gfortran.dg/goacc/loop-2-kernels-tile.f95: ..., and this new\n+\tfile...\n+\t* gfortran.dg/goacc/loop-2-kernels.f95: ..., and this new file...\n+\t* gfortran.dg/goacc/loop-2-parallel-3.f95: ..., and this new\n+\tfile...\n+\t* gfortran.dg/goacc/loop-2-parallel-nested.f95: ..., and this new\n+\tfile...\n+\t* gfortran.dg/goacc/loop-2-parallel-tile.f95: ..., and this new\n+\tfile...\n+\t* gfortran.dg/goacc/loop-2-parallel.f95: ..., and this new file.\n+\n \tPR fortran/88420\n \t* gfortran.dg/goacc/loop-1-2.f95: Update.\n \t* gfortran.dg/goacc/loop-1.f95: Likewise."}, {"sha": "93e1cece26b4c270e5070c0cfb6228c257f45514", "filename": "gcc/testsuite/c-c++-common/goacc/loop-2-kernels.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-2-kernels.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-2-kernels.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-2-kernels.c?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -1,3 +1,5 @@\n+/* See also \"../../gfortran.dg/goacc/loop-2-kernels.f95\".  */\n+\n void K(void)\n {\n   int i, j;"}, {"sha": "5b1e9d7ce87f0c4c9039810884aa3efe2b69d7f0", "filename": "gcc/testsuite/c-c++-common/goacc/loop-2-parallel.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-2-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-2-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-2-parallel.c?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -1,3 +1,5 @@\n+/* See also \"../../gfortran.dg/goacc/loop-2-parallel.f95\".  */\n+\n void P(void)\n {\n   int i, j;"}, {"sha": "e6c3f18042e6a0a17f0ca25f7840e1e85ba7e165", "filename": "gcc/testsuite/c-c++-common/goacc/loop-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Floop-3.c?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -1,3 +1,5 @@\n+/* See also \"../../gfortran.dg/goacc/loop-2-parallel-3.f95\".  */\n+\n void par1 (void)\n {\n   int i, j;"}, {"sha": "2c0c2ead28b67237602a278bc11862cc882906d4", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-kernels-nested.f95", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-nested.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-nested.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-nested.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,34 @@\n+program test\n+  implicit none\n+  integer :: i, j\n+\n+  !$acc kernels loop gang\n+  DO i = 1,10\n+    !$acc kernels loop gang ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+\n+  !$acc kernels loop worker\n+  DO i = 1,10\n+    !$acc kernels loop worker ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+    !$acc kernels loop gang ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+\n+  !$acc kernels loop vector\n+  DO i = 1,10\n+    !$acc kernels loop vector ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+    !$acc kernels loop worker ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+    !$acc kernels loop gang ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+end"}, {"sha": "96e0ccbd2ac7431e28e38bd432ae3f61f75ad481", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-kernels-tile.f95", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-tile.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-tile.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-tile.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,119 @@\n+program test\n+  implicit none\n+  integer :: i, j\n+\n+  !$acc kernels\n+    !$acc loop tile ! { dg-error \"Unclassifiable\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile() ! { dg-error \"Syntax error\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(1) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(2) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(6-2) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(6+2) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(*, 1) \n+    DO i = 1,10\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop tile(-1) ! { dg-warning \"must be positive\" }\n+    do i = 1,10\n+    enddo\n+    !$acc loop tile(i) ! { dg-error \"constant expression\" }\n+    do i = 1,10\n+    enddo\n+    !$acc loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n+      do i = 1, 3\n+          do j = 4, 6\n+          end do\n+      end do    \n+      !$acc loop tile(2, 2)\n+      do i = 1, 5, 2\n+          do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n+          end do\n+      end do\n+    !$acc loop vector tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector gang tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector worker tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang worker tile(*) \n+    DO i = 1,10\n+    ENDDO\n+  !$acc end kernels\n+\n+  !$acc kernels loop tile ! { dg-error \"Unclassifiable\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop tile() ! { dg-error \"Syntax error\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop tile(1) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop tile(*, 1) \n+  DO i = 1,10\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+  !$acc kernels loop tile(-1) ! { dg-warning \"must be positive\" }\n+  do i = 1,10\n+  enddo\n+  !$acc kernels loop tile(i) ! { dg-error \"constant expression\" }\n+  do i = 1,10\n+  enddo\n+  !$acc kernels loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n+    do i = 1, 3\n+        do j = 4, 6\n+        end do\n+    end do    \n+    !$acc kernels loop tile(2, 2)\n+    do i = 1, 5, 2\n+        do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n+        end do\n+    end do\n+  !$acc kernels loop vector tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop worker tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop vector gang tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop vector worker tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang worker tile(*) \n+  DO i = 1,10\n+  ENDDO\n+end"}, {"sha": "25a6be162fdd12d208bb05a684453e5dff236f3a", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-kernels.f95", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,190 @@\n+! See also \"../../c-c++-common/goacc/loop-2-kernels.c\".\n+\n+program test\n+  implicit none\n+  integer :: i, j\n+\n+  !$acc kernels\n+    !$acc loop auto\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang(5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang(num:5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang(static:5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang(static:*)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang\n+    DO i = 1,10\n+      !$acc loop vector \n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop worker \n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop gang ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop seq gang ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop worker\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker(5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker(num:5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker\n+    DO i = 1,10\n+      !$acc loop vector \n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop worker ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop gang ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop seq worker ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang worker\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop vector\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector(5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector(length:5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector\n+    DO i = 1,10\n+      !$acc loop vector ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop worker ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop gang ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop seq vector ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang vector\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker vector\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop auto\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop seq auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+  !$acc end kernels\n+\n+  !$acc kernels loop auto\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang(5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang(num:5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang(static:5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang(static:*)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop seq gang ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc kernels loop worker\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop worker(5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop worker(num:5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop seq worker ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang worker\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc kernels loop vector\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop vector(5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop vector(length:5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop seq vector ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang vector\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop worker vector\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc kernels loop auto\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop seq auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop gang auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop worker auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc kernels loop vector auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+end"}, {"sha": "03cae74c0223d8cde711aabeeb5b2e3dc9167ddb", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel-3.f95", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-3.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-3.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-3.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,56 @@\n+! See also \"../../c-c++-common/goacc/loop-3.c\".\n+\n+program test\n+  implicit none\n+  integer :: i\n+\n+  !$acc parallel\n+    !$acc loop gang(5) ! { dg-error \"num arguments\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop gang(num:5) ! { dg-error \"num arguments\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop worker(5) ! { dg-error \"num arguments\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop worker(num:5) ! { dg-error \"num arguments\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop vector(5) ! { dg-error \"length arguments\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop vector(length:5) ! { dg-error \"length arguments\" }\n+    DO i = 1,10\n+    ENDDO\n+  !$acc end parallel\n+\n+  !$acc parallel loop gang(5) ! { dg-error \"num arguments\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop gang(num:5) ! { dg-error \"num arguments\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop worker(5) ! { dg-error \"num arguments\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop worker(num:5) ! { dg-error \"num arguments\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop vector(5) ! { dg-error \"length arguments\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop vector(length:5) ! { dg-error \"length arguments\" }\n+  DO i = 1,10\n+  ENDDO\n+end"}, {"sha": "165cd9c3c184b376462098923643e0d2efaee372", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel-nested.f95", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-nested.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-nested.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-nested.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,34 @@\n+program test\n+  implicit none\n+  integer :: i, j\n+\n+  !$acc parallel loop gang\n+  DO i = 1,10\n+    !$acc parallel loop gang ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+\n+  !$acc parallel loop worker\n+  DO i = 1,10\n+    !$acc parallel loop worker ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+    !$acc parallel loop gang ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+\n+  !$acc parallel loop vector\n+  DO i = 1,10\n+    !$acc parallel loop vector ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+    !$acc parallel loop worker ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+    !$acc parallel loop gang ! { dg-bogus \"OpenACC construct inside of non-OpenACC region\" \"TODO\" { xfail *-*-* } }\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+end"}, {"sha": "3a4db5dc1afc09f94a3d774cb1199bf9b4d723ea", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel-tile.f95", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-tile.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-tile.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-tile.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,110 @@\n+program test\n+  implicit none\n+  integer :: i, j\n+\n+  !$acc parallel\n+    !$acc loop tile ! { dg-error \"Unclassifiable\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile() ! { dg-error \"Syntax error\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(1) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop tile(2) \n+    DO i = 1,10\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop tile(-1) ! { dg-warning \"must be positive\" }\n+    do i = 1,10\n+    enddo\n+    !$acc loop tile(i) ! { dg-error \"constant expression\" }\n+    do i = 1,10\n+    enddo\n+    !$acc loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n+      do i = 1, 3\n+          do j = 4, 6\n+          end do\n+      end do    \n+      !$acc loop tile(2, 2)\n+      do i = 1, 5, 2\n+          do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n+          end do\n+      end do\n+    !$acc loop vector tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector gang tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector worker tile(*) \n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang worker tile(*) \n+    DO i = 1,10\n+    ENDDO\n+  !$acc end parallel\n+\n+  !$acc parallel loop tile ! { dg-error \"Unclassifiable\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop tile() ! { dg-error \"Syntax error\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop tile(1) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop tile(*, 1) \n+  DO i = 1,10\n+    DO j = 1,10\n+    ENDDO\n+  ENDDO\n+  !$acc parallel loop tile(-1) ! { dg-warning \"must be positive\" }\n+  do i = 1,10\n+  enddo\n+  !$acc parallel loop tile(i) ! { dg-error \"constant expression\" }\n+  do i = 1,10\n+  enddo\n+  !$acc parallel loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n+    do i = 1, 3\n+        do j = 4, 6\n+        end do\n+    end do    \n+    !$acc parallel loop tile(2, 2)\n+    do i = 1, 5, 2\n+        do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n+        end do\n+    end do\n+  !$acc parallel loop vector tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop worker tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop vector gang tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop vector worker tile(*) \n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang worker tile(*) \n+  DO i = 1,10\n+  ENDDO\n+end"}, {"sha": "6338f10fc6171c557bf5ed0c8067c597185a26d4", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel.f95", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877009a5d9813da7aaf20ef3eb002d84644364dc/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel.f95?ref=877009a5d9813da7aaf20ef3eb002d84644364dc", "patch": "@@ -0,0 +1,154 @@\n+! See also \"../../c-c++-common/goacc/loop-2-parallel.c\".\n+\n+program test\n+  implicit none\n+  integer :: i, j\n+\n+  !$acc parallel\n+    !$acc loop auto\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang(static:5)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang(static:*)\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang\n+    DO i = 1,10\n+      !$acc loop vector \n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop worker \n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop gang ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop seq gang ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop worker\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker\n+    DO i = 1,10\n+      !$acc loop vector \n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop worker ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop gang ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop seq worker ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang worker\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop vector\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector\n+    DO i = 1,10\n+      !$acc loop vector ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop worker ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+      !$acc loop gang ! { dg-error \"not allowed\" }\n+      DO j = 1,10\n+      ENDDO\n+    ENDDO\n+    !$acc loop seq vector ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang vector\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker vector\n+    DO i = 1,10\n+    ENDDO\n+\n+    !$acc loop auto\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop seq auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop gang auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop worker auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+    !$acc loop vector auto ! { dg-error \"conflicts with\" }\n+    DO i = 1,10\n+    ENDDO\n+  !$acc end parallel\n+\n+  !$acc parallel loop auto\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang(static:5)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang(static:*)\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop seq gang ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop worker\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop seq worker ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang worker\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop vector\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop seq vector ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang vector\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop worker vector\n+  DO i = 1,10\n+  ENDDO\n+\n+  !$acc parallel loop auto\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop seq auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop gang auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop worker auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+  !$acc parallel loop vector auto ! { dg-error \"conflicts with\" }\n+  DO i = 1,10\n+  ENDDO\n+end"}, {"sha": "0c902b2241075c6a3a54cae48569eb8da440b2a3", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2.f95", "status": "removed", "additions": 0, "deletions": 649, "changes": 649, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b22b7d462ee469da57e7c17ffbf0686076b7af65/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b22b7d462ee469da57e7c17ffbf0686076b7af65/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2.f95?ref=b22b7d462ee469da57e7c17ffbf0686076b7af65", "patch": "@@ -1,649 +0,0 @@\n-! { dg-do compile } \n-! { dg-additional-options \"-fmax-errors=100\" } \n-\n-! TODO: nested kernels are allowed in 2.0\n-\n-program test\n-  implicit none\n-  integer :: i, j\n-\n-  !$acc kernels\n-    !$acc loop auto\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(num:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(static:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(static:*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang\n-    DO i = 1,10\n-      !$acc loop vector \n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker \n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop seq gang ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop worker\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker(5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker(num:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker\n-    DO i = 1,10\n-      !$acc loop vector \n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop seq worker ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang worker\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector(5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector(length:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector\n-    DO i = 1,10\n-      !$acc loop vector ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop seq vector ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker vector\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop auto\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop seq auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop tile ! { dg-error \"Unclassifiable\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile() ! { dg-error \"Syntax error\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(1) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(2) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(6-2) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(6+2) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(*, 1) \n-    DO i = 1,10\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop tile(-1) ! { dg-warning \"must be positive\" }\n-    do i = 1,10\n-    enddo\n-    !$acc loop tile(i) ! { dg-error \"constant expression\" }\n-    do i = 1,10\n-    enddo\n-    !$acc loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n-      do i = 1, 3\n-          do j = 4, 6\n-          end do\n-      end do    \n-      !$acc loop tile(2, 2)\n-      do i = 1, 5, 2\n-          do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n-          end do\n-      end do\n-    !$acc loop vector tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector gang tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector worker tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang worker tile(*) \n-    DO i = 1,10\n-    ENDDO\n-  !$acc end kernels\n-\n-\n-  !$acc parallel\n-    !$acc loop auto\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(5) ! { dg-error \"num arguments\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(num:5) ! { dg-error \"num arguments\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(static:5)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang(static:*)\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang\n-    DO i = 1,10\n-      !$acc loop vector \n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker \n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop seq gang ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop worker\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker(5) ! { dg-error \"num arguments\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker(num:5) ! { dg-error \"num arguments\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker\n-    DO i = 1,10\n-      !$acc loop vector \n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop seq worker ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang worker\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector(5) ! { dg-error \"length arguments\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector(length:5) ! { dg-error \"length arguments\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector\n-    DO i = 1,10\n-      !$acc loop vector ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop seq vector ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang vector\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker vector\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop auto\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop seq auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector auto ! { dg-error \"conflicts with\" }\n-    DO i = 1,10\n-    ENDDO\n-\n-    !$acc loop tile ! { dg-error \"Unclassifiable\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile() ! { dg-error \"Syntax error\" }\n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(1) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop tile(2) \n-    DO i = 1,10\n-      DO j = 1,10\n-      ENDDO\n-    ENDDO\n-    !$acc loop tile(-1) ! { dg-warning \"must be positive\" }\n-    do i = 1,10\n-    enddo\n-    !$acc loop tile(i) ! { dg-error \"constant expression\" }\n-    do i = 1,10\n-    enddo\n-    !$acc loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n-      do i = 1, 3\n-          do j = 4, 6\n-          end do\n-      end do    \n-      !$acc loop tile(2, 2)\n-      do i = 1, 5, 2\n-          do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n-          end do\n-      end do\n-    !$acc loop vector tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop worker tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector gang tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop vector worker tile(*) \n-    DO i = 1,10\n-    ENDDO\n-    !$acc loop gang worker tile(*) \n-    DO i = 1,10\n-    ENDDO\n-  !$acc end parallel\n-\n-  !$acc kernels loop auto\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(num:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(static:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang(static:*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang\n-  DO i = 1,10\n-    !$acc kernels loop gang \n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop seq gang ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop worker\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker(5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker(num:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker\n-  DO i = 1,10\n-    !$acc kernels loop worker \n-    DO j = 1,10\n-    ENDDO\n-    !$acc kernels loop gang \n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop seq worker ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang worker\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector(5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector(length:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector\n-  DO i = 1,10\n-    !$acc kernels loop vector \n-    DO j = 1,10\n-    ENDDO\n-    !$acc kernels loop worker \n-    DO j = 1,10\n-    ENDDO\n-    !$acc kernels loop gang \n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop seq vector ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker vector\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop auto\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop seq auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc kernels loop tile ! { dg-error \"Unclassifiable\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop tile() ! { dg-error \"Syntax error\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop tile(1) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop tile(*, 1) \n-  DO i = 1,10\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc kernels loop tile(-1) ! { dg-warning \"must be positive\" }\n-  do i = 1,10\n-  enddo\n-  !$acc kernels loop tile(i) ! { dg-error \"constant expression\" }\n-  do i = 1,10\n-  enddo\n-  !$acc kernels loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n-    do i = 1, 3\n-        do j = 4, 6\n-        end do\n-    end do    \n-    !$acc kernels loop tile(2, 2)\n-    do i = 1, 5, 2\n-        do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n-        end do\n-    end do\n-  !$acc kernels loop vector tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop worker tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector gang tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop vector worker tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc kernels loop gang worker tile(*) \n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop auto\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang(5) ! { dg-error \"num arguments\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang(num:5) ! { dg-error \"num arguments\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang(static:5)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang(static:*)\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang\n-  DO i = 1,10\n-    !$acc parallel loop gang \n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop seq gang ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop worker\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker(5) ! { dg-error \"num arguments\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker(num:5) ! { dg-error \"num arguments\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker\n-  DO i = 1,10\n-    !$acc parallel loop worker \n-    DO j = 1,10\n-    ENDDO\n-    !$acc parallel loop gang \n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop seq worker ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang worker\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector(5) ! { dg-error \"length arguments\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector(length:5) ! { dg-error \"length arguments\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector\n-  DO i = 1,10\n-    !$acc parallel loop vector \n-    DO j = 1,10\n-    ENDDO\n-    !$acc parallel loop worker \n-    DO j = 1,10\n-    ENDDO\n-    !$acc parallel loop gang \n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop seq vector ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang vector\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker vector\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop auto\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop seq auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector auto ! { dg-error \"conflicts with\" }\n-  DO i = 1,10\n-  ENDDO\n-\n-  !$acc parallel loop tile ! { dg-error \"Unclassifiable\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop tile() ! { dg-error \"Syntax error\" }\n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop tile(1) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop tile(*, 1) \n-  DO i = 1,10\n-    DO j = 1,10\n-    ENDDO\n-  ENDDO\n-  !$acc parallel loop tile(-1) ! { dg-warning \"must be positive\" }\n-  do i = 1,10\n-  enddo\n-  !$acc parallel loop tile(i) ! { dg-error \"constant expression\" }\n-  do i = 1,10\n-  enddo\n-  !$acc parallel loop tile(2, 2, 1) ! { dg-error \"not enough DO loops for tiled\" }\n-    do i = 1, 3\n-        do j = 4, 6\n-        end do\n-    end do    \n-    !$acc parallel loop tile(2, 2)\n-    do i = 1, 5, 2\n-        do j = i + 1, 7, i  ! { dg-error \"tiled loops don.t form rectangular iteration space\" }\n-        end do\n-    end do\n-  !$acc parallel loop vector tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop worker tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector gang tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop vector worker tile(*) \n-  DO i = 1,10\n-  ENDDO\n-  !$acc parallel loop gang worker tile(*) \n-  DO i = 1,10\n-  ENDDO\n-end"}]}