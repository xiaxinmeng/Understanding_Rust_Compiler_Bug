{"sha": "700d2899472c55c8bf83db69056f45bbd2fb7b17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAwZDI4OTk0NzJjNTVjOGJmODNkYjY5MDU2ZjQ1YmJkMmZiN2IxNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-29T12:24:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-29T12:24:36Z"}, "message": "bitset (bitset<>::to_ullong, [...]): Add.\n\n2009-12-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/bitset (bitset<>::to_ullong, _M_do_to_ullong): Add.\n\t(_Base_bitset<>::_M_do_to_ullong): Add.\n\t* include/debug/bitset (bitset<>): Add using _Base::to_ullong.\n\t* include/profile/bitset (bitset<>): Likewise.\n\t* testsuite/23_containers/bitset/to_ullong/1.cc: New.\n\nFrom-SVN: r155504", "tree": {"sha": "695b08a8b30f039735cf8d1520196297d489fbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/695b08a8b30f039735cf8d1520196297d489fbca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/700d2899472c55c8bf83db69056f45bbd2fb7b17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700d2899472c55c8bf83db69056f45bbd2fb7b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/700d2899472c55c8bf83db69056f45bbd2fb7b17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700d2899472c55c8bf83db69056f45bbd2fb7b17/comments", "author": null, "committer": null, "parents": [{"sha": "497d63a44eb2291fd2bea10f5312b4d1a3a63dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497d63a44eb2291fd2bea10f5312b4d1a3a63dee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497d63a44eb2291fd2bea10f5312b4d1a3a63dee"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "22c8a637e2824ea924de331ce440f73d10857a4c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=700d2899472c55c8bf83db69056f45bbd2fb7b17", "patch": "@@ -1,3 +1,11 @@\n+2009-12-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/bitset (bitset<>::to_ullong, _M_do_to_ullong): Add.\n+\t(_Base_bitset<>::_M_do_to_ullong): Add.\n+\t* include/debug/bitset (bitset<>): Add using _Base::to_ullong.\n+\t* include/profile/bitset (bitset<>): Likewise.\n+\t* testsuite/23_containers/bitset/to_ullong/1.cc: New.\n+\n 2009-12-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/debug/bitset (bitset<>::bitset(const char*)): Add."}, {"sha": "734bf228654e3d16f79bd2a8cc40ac8483f621b5", "filename": "libstdc++-v3/include/debug/bitset", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset?ref=700d2899472c55c8bf83db69056f45bbd2fb7b17", "patch": "@@ -251,6 +251,9 @@ namespace __debug\n       }\n \n       using _Base::to_ulong;\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      using _Base::to_ullong;\n+#endif\n \n       template <typename _CharT, typename _Traits, typename _Alloc>\n         std::basic_string<_CharT, _Traits, _Alloc>"}, {"sha": "7df8d88d7a8f47101e4b306a40eca70b28711bd6", "filename": "libstdc++-v3/include/profile/bitset", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fbitset?ref=700d2899472c55c8bf83db69056f45bbd2fb7b17", "patch": "@@ -226,6 +226,9 @@ namespace __profile\n       }\n \n       using _Base::to_ulong;\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      using _Base::to_ullong;\n+#endif\n \n       template <typename _CharT, typename _Traits, typename _Alloc>\n         std::basic_string<_CharT, _Traits, _Alloc>"}, {"sha": "78843557e165af03502f0e3f644d6f305186cf66", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=700d2899472c55c8bf83db69056f45bbd2fb7b17", "patch": "@@ -199,6 +199,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       unsigned long\n       _M_do_to_ulong() const;\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      unsigned long long\n+      _M_do_to_ullong() const;\n+#endif\n+\n       // find first \"on\" bit\n       size_t\n       _M_do_find_first(size_t __not_found) const;\n@@ -272,6 +277,23 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       return _M_w[0];\n     }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  template<size_t _Nw>\n+    unsigned long long\n+    _Base_bitset<_Nw>::_M_do_to_ullong() const\n+    {\n+      const bool __dw = sizeof(unsigned long long) > sizeof(unsigned long);\n+      for (size_t __i = 1 + __dw; __i < _Nw; ++__i)\n+\tif (_M_w[__i])\n+\t  __throw_overflow_error(__N(\"_Base_bitset::_M_do_to_ullong\"));\n+\n+      if (__dw)\n+\treturn _M_w[0] + (static_cast<unsigned long long>(_M_w[1])\n+\t\t\t  << _GLIBCXX_BITSET_BITS_PER_WORD);\n+      return _M_w[0];\n+    }\n+#endif\n+\n   template<size_t _Nw>\n     size_t\n     _Base_bitset<_Nw>::_M_do_find_first(size_t __not_found) const\n@@ -425,6 +447,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       _M_do_to_ulong() const\n       { return _M_w; }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      unsigned long long\n+      _M_do_to_ullong() const\n+      { return _M_w; }\n+#endif\n+\n       size_t\n       _M_do_find_first(size_t __not_found) const\n       {\n@@ -555,6 +583,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       _M_do_to_ulong() const\n       { return 0; }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      unsigned long long\n+      _M_do_to_ullong() const\n+      { return 0; }\n+#endif\n+\n       // Normally \"not found\" is the size, but that could also be\n       // misinterpreted as an index in this corner case.  Oh well.\n       size_t\n@@ -1039,6 +1073,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       to_ulong() const\n       { return this->_M_do_to_ulong(); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      unsigned long long\n+      to_ullong() const\n+      { return this->_M_do_to_ullong(); }\n+#endif\n+\n       /**\n        *  @brief Returns a character interpretation of the %bitset.\n        *  @return  The string equivalent of the bits."}, {"sha": "2a3b886c37e26e321dd040616a666dfb2c98b7fb", "filename": "libstdc++-v3/testsuite/23_containers/bitset/to_ullong/1.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ullong%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700d2899472c55c8bf83db69056f45bbd2fb7b17/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ullong%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ullong%2F1.cc?ref=700d2899472c55c8bf83db69056f45bbd2fb7b17", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2009-12-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bitset>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::bitset<0> bs0;\n+  VERIFY( bs0.to_ullong() == 0 );\n+\n+  std::bitset<64> bs1(\"11010111\");\n+  VERIFY( bs1.to_ullong() == 215 );\n+\n+  std::bitset<64> bs2(\"10110100100010000100000101111111\"\n+\t\t      \"01111110011111110001110001100011\");\n+  VERIFY( bs2.to_ullong() == 13008719539498589283ULL );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}