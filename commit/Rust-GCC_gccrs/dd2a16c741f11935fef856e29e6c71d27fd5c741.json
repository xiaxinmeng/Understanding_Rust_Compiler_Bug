{"sha": "dd2a16c741f11935fef856e29e6c71d27fd5c741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQyYTE2Yzc0MWYxMTkzNWZlZjg1NmUyOWU2YzcxZDI3ZmQ1Yzc0MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-12-03T23:10:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-12-03T23:10:46Z"}, "message": "re PR bootstrap/92783 (SEGV in field_byte_offset)\n\n\tPR bootstrap/92783\n\t* gcc-interface/utils.c (rest_of_record_type_compilation): Move down\n\tthe guard for the position of fields in the descriptive type.\n\nFrom-SVN: r278948", "tree": {"sha": "4c28f5d062635533e12c89375ad9f4f26abf1d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c28f5d062635533e12c89375ad9f4f26abf1d9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd2a16c741f11935fef856e29e6c71d27fd5c741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2a16c741f11935fef856e29e6c71d27fd5c741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd2a16c741f11935fef856e29e6c71d27fd5c741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2a16c741f11935fef856e29e6c71d27fd5c741/comments", "author": null, "committer": null, "parents": [{"sha": "34dda8045231413589fd1ac4ecd6a9cc97b51278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34dda8045231413589fd1ac4ecd6a9cc97b51278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34dda8045231413589fd1ac4ecd6a9cc97b51278"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "fa98a5a96877a75bfb0c23d37afc7f88fc68f18a", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd2a16c741f11935fef856e29e6c71d27fd5c741/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd2a16c741f11935fef856e29e6c71d27fd5c741/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=dd2a16c741f11935fef856e29e6c71d27fd5c741", "patch": "@@ -2246,13 +2246,6 @@ rest_of_record_type_compilation (tree record_type)\n \t      pos = compute_related_constant (curpos, last_pos);\n \t    }\n \n-\t  /* If we can't compute a position, set it to zero.\n-\n-\t     ??? We really should abort here, but it's too much work\n-\t     to get this correct for all cases.  */\n-\t  if (!pos)\n-\t    pos = bitsize_zero_node;\n-\n \t  /* See if this type is variable-sized and make a pointer type\n \t     and indicate the indirection if so.  Beware that the debug\n \t     back-end may adjust the position computed above according\n@@ -2273,6 +2266,13 @@ rest_of_record_type_compilation (tree record_type)\n \t\t}\n \t    }\n \n+\t  /* If we can't compute a position, set it to zero.\n+\n+\t     ??? We really should abort here, but it's too much work\n+\t     to get this correct for all cases.  */\n+\t  if (!pos)\n+\t    pos = bitsize_zero_node;\n+\n \t  /* Make a new field name, if necessary.  */\n \t  if (var || align != 0)\n \t    {"}]}