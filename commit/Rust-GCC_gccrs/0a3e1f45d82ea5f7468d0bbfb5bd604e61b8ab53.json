{"sha": "0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEzZTFmNDVkODJlYTVmNzQ2OGQwYmJmYjViZDYwNGU2MWI4YWI1Mw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T08:08:58Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T08:08:58Z"}, "message": "Changes add TABs on either or both sides, covering start of line,\n\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36603", "tree": {"sha": "eac2e46819d4494fe8318e60b02ff1fb1440a909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eac2e46819d4494fe8318e60b02ff1fb1440a909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afb2ca3dd73c61acf5f36463dcdb5c04d21d4ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb2ca3dd73c61acf5f36463dcdb5c04d21d4ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afb2ca3dd73c61acf5f36463dcdb5c04d21d4ec8"}], "stats": {"total": 60, "additions": 40, "deletions": 20}, "files": [{"sha": "73671c43d2fe93989cfc50e6d62d02d13f7a8a46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -1,3 +1,20 @@\n+2000-09-25  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tChanges below marked \"here\" add TABs on either or both sides,\n+\tcovering start of line, up to any operand for all noted .*ASM.*_OP\n+\tdefinitions.\n+\t* crtstuff.c (CTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP): Explain\n+\twhy these defaults don't have leading spacing.\n+\t* dbxout.c (ASM_STABS_OP, ASM_STABN_OP): Here.\n+\t* dwarf2out.c (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n+\tUNALIGNED_DOUBLE_INT_ASM_OP, SECTION_ASM_OP, ASM_BYTE_OP): Here.\n+\t* dwarfout.c (FILE_ASM_OP, VERSION_ASM_OP,\n+ \tUNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP, ASM_BYTE_OP,\n+\tPUSHSECTION_ASM_OP, POPSECTION_ASM_OP): Here.\n+\t* defaults.h (ASM_STABD_OP, EH_FRAME_SECTION_ASM_OP): Here.\n+\t* varasm.c (ASM_STABS_OP): Here.\n+\t* xcoffout.h (ASM_STABS_OP): Here.\n+\n 2000-09-25  Richard Henderson  <rth@cygnus.com>\n \n \t* expmed.c (store_bit_field): Adjust last change to not consider"}, {"sha": "d5f23cbaf3f87659d86e1abc5c7e19735374598a", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -110,7 +110,10 @@ extern void *__deregister_frame_info (void *)\n    an additional check that you are doing everything right.  But if you do\n    use the `-z text' option when building a shared library, you will get\n    errors unless the .ctors and .dtors sections are marked as writable\n-   via the SHF_WRITE attribute.)  */\n+   via the SHF_WRITE attribute.)\n+\n+   These defaults do not include leading spacing, as they will only be\n+   used in asm:s here.  */\n \n #ifndef CTORS_SECTION_ASM_OP\n #define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,\\\"aw\\\"\""}, {"sha": "d4df8d039d37106d33d269863f94e102c1a7e65c", "filename": "gcc/dbxout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -89,11 +89,11 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #ifndef ASM_STABS_OP\n-#define ASM_STABS_OP \".stabs\"\n+#define ASM_STABS_OP \"\\t.stabs\\t\"\n #endif\n \n #ifndef ASM_STABN_OP\n-#define ASM_STABN_OP \".stabn\"\n+#define ASM_STABN_OP \"\\t.stabn\\t\"\n #endif\n \n #ifndef DBX_TYPE_DECL_STABS_CODE"}, {"sha": "f75d21d78d4d32a12254615f2ae15b8589a0cdbf", "filename": "gcc/defaults.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #ifndef ASM_STABD_OP\n-#define ASM_STABD_OP \".stabd\"\n+#define ASM_STABD_OP \"\\t.stabd\\t\"\n #endif\n \n /* This is how to output an element of a case-vector that is absolute.\n@@ -170,7 +170,7 @@ do { ASM_OUTPUT_LABEL(FILE,LABEL_ALTERNATE_NAME (INSN)); } while (0)\n # else\n    /* If we aren't using crtstuff to run ctors, don't use it for EH.  */\n #  if defined (ASM_OUTPUT_SECTION_NAME) && defined (ASM_OUTPUT_CONSTRUCTOR)\n-#   define EH_FRAME_SECTION_ASM_OP\t\".section\\t.eh_frame,\\\"aw\\\"\"\n+#   define EH_FRAME_SECTION_ASM_OP\t\"\\t.section\\t.eh_frame,\\\"aw\\\"\"\n #   define EH_FRAME_SECTION() \\\n      do { named_section (NULL_TREE, \".eh_frame\", 0); } while (0)\n #  endif"}, {"sha": "d69d2d0c7a7b2d2284b048f5f02ba755ac3118cc", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -242,18 +242,18 @@ static void def_cfa_1\t\t \tPARAMS ((const char *, dw_cfa_location *));\n \n #ifdef OBJECT_FORMAT_ELF\n #ifndef UNALIGNED_SHORT_ASM_OP\n-#define UNALIGNED_SHORT_ASM_OP\t\".2byte\"\n+#define UNALIGNED_SHORT_ASM_OP\t\"\\t.2byte\\t\"\n #endif\n #ifndef UNALIGNED_INT_ASM_OP\n-#define UNALIGNED_INT_ASM_OP\t\".4byte\"\n+#define UNALIGNED_INT_ASM_OP\t\"\\t.4byte\\t\"\n #endif\n #ifndef UNALIGNED_DOUBLE_INT_ASM_OP\n-#define UNALIGNED_DOUBLE_INT_ASM_OP\t\".8byte\"\n+#define UNALIGNED_DOUBLE_INT_ASM_OP\t\"\\t.8byte\\t\"\n #endif\n #endif /* OBJECT_FORMAT_ELF */\n \n #ifndef ASM_BYTE_OP\n-#define ASM_BYTE_OP\t\t\".byte\"\n+#define ASM_BYTE_OP\t\t\"\\t.byte\\t\"\n #endif\n \n /* Data and reference forms for relocatable data.  */\n@@ -262,7 +262,7 @@ static void def_cfa_1\t\t \tPARAMS ((const char *, dw_cfa_location *));\n \n /* Pseudo-op for defining a new section.  */\n #ifndef SECTION_ASM_OP\n-#define SECTION_ASM_OP\t\".section\"\n+#define SECTION_ASM_OP\t\"\\t.section\\t\"\n #endif\n \n /* The default format used by the ASM_OUTPUT_SECTION macro (see below) to"}, {"sha": "0e14e8aea3745e04d382765a37dd9ed1e380c342", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -387,22 +387,22 @@ static void retry_incomplete_types\tPARAMS ((void));\n    what is expected by \"standard\" AT&T System V.4 assemblers.  */\n \n #ifndef FILE_ASM_OP\n-#define FILE_ASM_OP\t\t\".file\"\n+#define FILE_ASM_OP\t\t\"\\t.file\\t\"\n #endif\n #ifndef VERSION_ASM_OP\n-#define VERSION_ASM_OP\t\t\".version\"\n+#define VERSION_ASM_OP\t\t\"\\t.version\\t\"\n #endif\n #ifndef UNALIGNED_SHORT_ASM_OP\n-#define UNALIGNED_SHORT_ASM_OP\t\".2byte\"\n+#define UNALIGNED_SHORT_ASM_OP\t\"\\t.2byte\\t\"\n #endif\n #ifndef UNALIGNED_INT_ASM_OP\n-#define UNALIGNED_INT_ASM_OP\t\".4byte\"\n+#define UNALIGNED_INT_ASM_OP\t\"\\t.4byte\\t\"\n #endif\n #ifndef ASM_BYTE_OP\n-#define ASM_BYTE_OP\t\t\".byte\"\n+#define ASM_BYTE_OP\t\t\"\\t.byte\\t\"\n #endif\n #ifndef SET_ASM_OP\n-#define SET_ASM_OP\t\t\".set\"\n+#define SET_ASM_OP\t\t\"\\t.set\\t\"\n #endif\n \n /* Pseudo-ops for pushing the current section onto the section stack (and\n@@ -414,10 +414,10 @@ static void retry_incomplete_types\tPARAMS ((void));\n    OK because we only use at most one level of the section stack herein.  */\n \n #ifndef PUSHSECTION_ASM_OP\n-#define PUSHSECTION_ASM_OP\t\".section\"\n+#define PUSHSECTION_ASM_OP\t\"\\t.section\\t\"\n #endif\n #ifndef POPSECTION_ASM_OP\n-#define POPSECTION_ASM_OP\t\".previous\"\n+#define POPSECTION_ASM_OP\t\"\\t.previous\"\n #endif\n \n /* The default format used by the ASM_OUTPUT_PUSH_SECTION macro (see below)"}, {"sha": "fe5532b2e01b08fba63372b5f37b70c4af6aee01", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -57,7 +57,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #ifndef ASM_STABS_OP\n-#define ASM_STABS_OP \".stabs\"\n+#define ASM_STABS_OP \"\\t.stabs\\t\"\n #endif\n \n /* Define the prefix to use when check_memory_usage_flag is enable.  */"}, {"sha": "2fb8ab3fb4eeb385d5a940321bf864c830147467", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=0a3e1f45d82ea5f7468d0bbfb5bd604e61b8ab53", "patch": "@@ -20,7 +20,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-#define ASM_STABS_OP \".stabx\"\n+#define ASM_STABS_OP \"\\t.stabx\\t\"\n \n /* Tags and typedefs are C_DECL in XCOFF, not C_LSYM.  */\n "}]}