{"sha": "7f5e671bce70f537708f36033cd44869ca94fb4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1ZTY3MWJjZTcwZjUzNzcwOGYzNjAzM2NkNDQ4NjljYTk0ZmI0Yw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-09T20:28:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-09T20:28:22Z"}, "message": "[multiple changes]\n\n2017-10-09  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch3.adb: Rename Uses_Unseen_Priv into\n\tContains_Lib_Incomplete_Type.\n\n2017-10-09  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_aggr.adb, sem_spark.adb, adabkend.adb, exp_ch5.adb, frontend.adb,\n\tsem_ch12.adb, fmap.adb, exp_ch6.adb, exp_spark.adb, lib-load.adb,\n\texp_ch9.adb, osint.adb, exp_disp.adb, sem_ch8.adb, sem_ch8.ads,\n\tprepcomp.adb, gnat1drv.adb, atree.adb, sinput-l.adb, targparm.adb,\n\tsem_ch10.adb, par-ch8.adb: Minor reformatting.\n\nFrom-SVN: r253566", "tree": {"sha": "502df8f997157241d93143dc07c49c176b749f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/502df8f997157241d93143dc07c49c176b749f99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5e671bce70f537708f36033cd44869ca94fb4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e671bce70f537708f36033cd44869ca94fb4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5e671bce70f537708f36033cd44869ca94fb4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e671bce70f537708f36033cd44869ca94fb4c/comments", "author": null, "committer": null, "parents": [{"sha": "f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25"}], "stats": {"total": 539, "additions": 299, "deletions": 240}, "files": [{"sha": "99d0702f02228e85177803a12a2b37dd47a4ac84", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -1,3 +1,16 @@\n+2017-10-09  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch3.adb: Rename Uses_Unseen_Priv into\n+\tContains_Lib_Incomplete_Type.\n+\n+2017-10-09  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_aggr.adb, sem_spark.adb, adabkend.adb, exp_ch5.adb, frontend.adb,\n+\tsem_ch12.adb, fmap.adb, exp_ch6.adb, exp_spark.adb, lib-load.adb,\n+\texp_ch9.adb, osint.adb, exp_disp.adb, sem_ch8.adb, sem_ch8.ads,\n+\tprepcomp.adb, gnat1drv.adb, atree.adb, sinput-l.adb, targparm.adb,\n+\tsem_ch10.adb, par-ch8.adb: Minor reformatting.\n+\n 2017-10-09  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_elab.adb (Is_Suitable_Access): This scenario is now only relevant"}, {"sha": "ae0218e04ded6d0a561f99ef2b78cb95a823a8cb", "filename": "gcc/ada/adabkend.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fadabkend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fadabkend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -59,8 +59,8 @@ package body Adabkend is\n \n       --  The front end leaves the Current_Error_Node at a location that is\n       --  meaningless and confusing when emitting bug boxes from the back end.\n-      --  By resetting it here we default to \"No source file position\n-      --  information available\" message on back end crashes.\n+      --  Reset the global variable in order to emit \"No source file position\n+      --  information available\" messages on back end crashes.\n \n       Current_Error_Node := Empty;\n "}, {"sha": "1a7e36ca70dd2a94a44c4c2d15add4994ce167b0", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -741,6 +741,7 @@ package body Atree is\n    begin\n       pragma Debug (New_Node_Debugging_Output (Source));\n       pragma Debug (New_Node_Debugging_Output (Destination));\n+\n       Nodes.Table (Destination)         := Nodes.Table (Source);\n       Nodes.Table (Destination).In_List := Save_In_List;\n       Nodes.Table (Destination).Link    := Save_Link;\n@@ -1330,6 +1331,7 @@ package body Atree is\n    begin\n       pragma Debug (New_Node_Debugging_Output (E1));\n       pragma Debug (New_Node_Debugging_Output (E2));\n+\n       pragma Assert (True\n         and then Has_Extension (E1)\n         and then Has_Extension (E2)\n@@ -1402,8 +1404,10 @@ package body Atree is\n \n    begin\n       pragma Assert (not (Has_Extension (Node)));\n+\n       Result := Allocate_Initialize_Node (Node, With_Extension => True);\n       pragma Debug (Debug_Extend_Node);\n+\n       return Result;\n    end Extend_Node;\n \n@@ -1677,8 +1681,8 @@ package body Atree is\n          Current_Error_Node := Ent;\n       end if;\n \n-      Nodes.Table (Ent).Nkind  := New_Node_Kind;\n-      Nodes.Table (Ent).Sloc   := New_Sloc;\n+      Nodes.Table (Ent).Nkind := New_Node_Kind;\n+      Nodes.Table (Ent).Sloc  := New_Sloc;\n       pragma Debug (New_Node_Debugging_Output (Ent));\n \n       --  Mark the new entity as Ghost depending on the current Ghost region\n@@ -1700,6 +1704,7 @@ package body Atree is\n \n    begin\n       pragma Assert (New_Node_Kind not in N_Entity);\n+\n       Nod := Allocate_Initialize_Node (Empty, With_Extension => False);\n       Nodes.Table (Nod).Nkind := New_Node_Kind;\n       Nodes.Table (Nod).Sloc  := New_Sloc;\n@@ -2144,6 +2149,7 @@ package body Atree is\n         (not Has_Extension (Old_Node)\n           and not Has_Extension (New_Node)\n           and not Nodes.Table (New_Node).In_List);\n+\n       pragma Debug (New_Node_Debugging_Output (Old_Node));\n       pragma Debug (New_Node_Debugging_Output (New_Node));\n \n@@ -2197,6 +2203,7 @@ package body Atree is\n         (not Has_Extension (Old_Node)\n           and not Has_Extension (New_Node)\n           and not Nodes.Table (New_Node).In_List);\n+\n       pragma Debug (New_Node_Debugging_Output (Old_Node));\n       pragma Debug (New_Node_Debugging_Output (New_Node));\n "}, {"sha": "d760739d05785ee1970fb801a605f11d49e02a50", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -1577,7 +1577,7 @@ package body Exp_Ch5 is\n          --  suppressed in this case). It is unnecessary but harmless in\n          --  other cases.\n \n-         --  Special case: no copy if the target has no discriminants.\n+         --  Special case: no copy if the target has no discriminants\n \n          if Has_Discriminants (L_Typ)\n            and then Is_Unchecked_Union (Base_Type (L_Typ))"}, {"sha": "1b648ff6ad4910466b99bfd89ff5519c14a02efe", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -3001,8 +3001,8 @@ package body Exp_Ch6 is\n \n             if Prev_Orig /= Prev\n               and then Nkind (Prev) = N_Attribute_Reference\n-              and then\n-                Get_Attribute_Id (Attribute_Name (Prev)) = Attribute_Access\n+              and then Get_Attribute_Id (Attribute_Name (Prev)) =\n+                         Attribute_Access\n               and then Is_Aliased_View (Prev_Orig)\n             then\n                Prev_Orig := Prev;"}, {"sha": "aca0c18e3b6885f316536ef7e34491b80a81220e", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -6041,6 +6041,7 @@ package body Exp_Ch9 is\n          --  reference will have been rewritten.\n \n          if Expander_Active then\n+\n             --  The expanded name may have been constant folded in which case\n             --  the original node is not necessarily an entity name (e.g. an\n             --  indexed component)."}, {"sha": "f3728f655d4da008ec77cde34a83d6f2e78f2cde", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -323,7 +323,7 @@ package body Exp_Disp is\n         and then not Is_Interface (Full_Typ)\n         and then Has_Interfaces (Full_Typ)\n         and then (Full_Typ = Root_Typ\n-                    or else not Is_Variable_Size_Record (Etype (Full_Typ)));\n+                   or else not Is_Variable_Size_Record (Etype (Full_Typ)));\n    end Building_Static_Secondary_DT;\n \n    ----------------------------------\n@@ -4787,7 +4787,8 @@ package body Exp_Disp is\n                      if Is_Discrete_Type (Etype (Discrim)) then\n                         Append_To (Constr_List,\n                           Make_Attribute_Reference (Loc,\n-                            Prefix => New_Occurrence_Of (Etype (Discrim), Loc),\n+                            Prefix         =>\n+                              New_Occurrence_Of (Etype (Discrim), Loc),\n                             Attribute_Name => Name_First));\n \n                      else\n@@ -4850,12 +4851,12 @@ package body Exp_Disp is\n \n             Make_Secondary_DT\n              (Typ              => Typ,\n-              Iface            => Base_Type\n-                                    (Related_Type (Node (AI_Tag_Comp))),\n+              Iface            =>\n+                Base_Type (Related_Type (Node (AI_Tag_Comp))),\n               Iface_Comp       => Node (AI_Tag_Comp),\n               Suffix_Index     => Suffix_Index,\n-              Num_Iface_Prims  => UI_To_Int\n-                                    (DT_Entry_Count (Node (AI_Tag_Comp))),\n+              Num_Iface_Prims  =>\n+                UI_To_Int (DT_Entry_Count (Node (AI_Tag_Comp))),\n               Iface_DT_Ptr     => Node (AI_Tag_Elmt),\n               Predef_Prims_Ptr => Node (Next_Elmt (AI_Tag_Elmt)),\n               Build_Thunks     => True,"}, {"sha": "5386fa6578b1db09c79c81ac2be89cc9080399b8", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 38, "deletions": 37, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -55,10 +55,10 @@ package body Exp_SPARK is\n    --  Replace occurrences of System'To_Address by calls to\n    --  System.Storage_Elements.To_Address\n \n-   procedure Expand_SPARK_Freeze_Type (E : Entity_Id);\n+   procedure Expand_SPARK_N_Freeze_Type (E : Entity_Id);\n    --  Build the DIC procedure of a type when needed, if not already done\n \n-   procedure Expand_SPARK_Indexed_Component (N : Node_Id);\n+   procedure Expand_SPARK_N_Indexed_Component (N : Node_Id);\n    --  Insert explicit dereference if required\n \n    procedure Expand_SPARK_N_Loop_Statement (N : Node_Id);\n@@ -73,7 +73,7 @@ package body Exp_SPARK is\n    procedure Expand_SPARK_N_Op_Ne (N : Node_Id);\n    --  Rewrite operator /= based on operator = when defined explicitly\n \n-   procedure Expand_SPARK_Selected_Component (N : Node_Id);\n+   procedure Expand_SPARK_N_Selected_Component (N : Node_Id);\n    --  Insert explicit dereference if required\n \n    ------------------\n@@ -134,14 +134,14 @@ package body Exp_SPARK is\n \n          when N_Freeze_Entity =>\n             if Is_Type (Entity (N)) then\n-               Expand_SPARK_Freeze_Type (Entity (N));\n+               Expand_SPARK_N_Freeze_Type (Entity (N));\n             end if;\n \n          when N_Indexed_Component =>\n-            Expand_SPARK_Indexed_Component (N);\n+            Expand_SPARK_N_Indexed_Component (N);\n \n          when N_Selected_Component =>\n-            Expand_SPARK_Selected_Component (N);\n+            Expand_SPARK_N_Selected_Component (N);\n \n          --  In SPARK mode, no other constructs require expansion\n \n@@ -150,11 +150,11 @@ package body Exp_SPARK is\n       end case;\n    end Expand_SPARK;\n \n-   ------------------------------\n-   -- Expand_SPARK_Freeze_Type --\n-   ------------------------------\n+   --------------------------------\n+   -- Expand_SPARK_N_Freeze_Type --\n+   --------------------------------\n \n-   procedure Expand_SPARK_Freeze_Type (E : Entity_Id) is\n+   procedure Expand_SPARK_N_Freeze_Type (E : Entity_Id) is\n    begin\n       --  When a DIC is inherited by a tagged type, it may need to be\n       --  specialized to the descendant type, hence build a separate DIC\n@@ -163,7 +163,7 @@ package body Exp_SPARK is\n       if Has_DIC (E) and then Is_Tagged_Type (E) then\n          Build_DIC_Procedure_Body (E, For_Freeze => True);\n       end if;\n-   end Expand_SPARK_Freeze_Type;\n+   end Expand_SPARK_N_Freeze_Type;\n \n    ----------------------------------------\n    -- Expand_SPARK_N_Attribute_Reference --\n@@ -292,19 +292,20 @@ package body Exp_SPARK is\n       end if;\n    end Expand_SPARK_N_Loop_Statement;\n \n-   ------------------------------------\n-   -- Expand_SPARK_Indexed_Component --\n-   ------------------------------------\n+   --------------------------------------\n+   -- Expand_SPARK_N_Indexed_Component --\n+   --------------------------------------\n+\n+   procedure Expand_SPARK_N_Indexed_Component (N : Node_Id) is\n+      Pref : constant Node_Id    := Prefix (N);\n+      Typ  : constant Entity_Id  := Etype (Pref);\n \n-   procedure Expand_SPARK_Indexed_Component (N : Node_Id) is\n-      P   : constant Node_Id    := Prefix (N);\n-      T   : constant Entity_Id  := Etype (P);\n    begin\n-      if Is_Access_Type (T) then\n-         Insert_Explicit_Dereference (P);\n-         Analyze_And_Resolve (P, Designated_Type (T));\n+      if Is_Access_Type (Typ) then\n+         Insert_Explicit_Dereference (Pref);\n+         Analyze_And_Resolve (Pref, Designated_Type (Typ));\n       end if;\n-   end Expand_SPARK_Indexed_Component;\n+   end Expand_SPARK_N_Indexed_Component;\n \n    ---------------------------------------\n    -- Expand_SPARK_N_Object_Declaration --\n@@ -496,31 +497,31 @@ package body Exp_SPARK is\n       end if;\n    end Expand_SPARK_Potential_Renaming;\n \n-   -------------------------------------\n-   -- Expand_SPARK_Selected_Component --\n-   -------------------------------------\n+   ---------------------------------------\n+   -- Expand_SPARK_N_Selected_Component --\n+   ---------------------------------------\n+\n+   procedure Expand_SPARK_N_Selected_Component (N : Node_Id) is\n+      Pref : constant Node_Id   := Prefix (N);\n+      Typ  : constant Entity_Id := Underlying_Type (Etype (Pref));\n \n-   procedure Expand_SPARK_Selected_Component (N : Node_Id) is\n-      P    : constant Node_Id   := Prefix (N);\n-      Ptyp : constant Entity_Id := Underlying_Type (Etype (P));\n    begin\n-      if Present (Ptyp)\n-        and then Is_Access_Type (Ptyp)\n-      then\n+      if Present (Typ) and then Is_Access_Type (Typ) then\n+\n          --  First set prefix type to proper access type, in case it currently\n          --  has a private (non-access) view of this type.\n \n-         Set_Etype (P, Ptyp);\n+         Set_Etype (Pref, Typ);\n \n-         Insert_Explicit_Dereference (P);\n-         Analyze_And_Resolve (P, Designated_Type (Ptyp));\n+         Insert_Explicit_Dereference (Pref);\n+         Analyze_And_Resolve (Pref, Designated_Type (Typ));\n \n-         if Ekind (Etype (P)) = E_Private_Subtype\n-           and then Is_For_Access_Subtype (Etype (P))\n+         if Ekind (Etype (Pref)) = E_Private_Subtype\n+           and then Is_For_Access_Subtype (Etype (Pref))\n          then\n-            Set_Etype (P, Base_Type (Etype (P)));\n+            Set_Etype (Pref, Base_Type (Etype (Pref)));\n          end if;\n       end if;\n-   end Expand_SPARK_Selected_Component;\n+   end Expand_SPARK_N_Selected_Component;\n \n end Exp_SPARK;"}, {"sha": "2b95dc7be7d3079f53145b2adfe3a2714783855a", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -306,6 +306,7 @@ package body Fmap is\n          else\n             Write_Str (\"warning: no read access for mapping file \"\"\");\n          end if;\n+\n          Write_Str (File_Name);\n          Write_Line (\"\"\"\");\n          No_Mapping_File := True;"}, {"sha": "828f6ff2999db4332d7c561f73b67258a56a57f1", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -169,6 +169,7 @@ begin\n          --  Case of gnat.adc file present\n \n          if Source_gnat_adc > No_Source_File then\n+\n             --  Parse the gnat.adc file for configuration pragmas\n \n             Initialize_Scanner (No_Unit, Source_gnat_adc);"}, {"sha": "4bf910bca3e53632251536e49d3c053522bbc6ae", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -1065,6 +1065,7 @@ begin\n                  (\"fatal error, run-time library not installed correctly\");\n                Write_Line (\"cannot locate file system.ads\");\n                raise Unrecoverable_Error;\n+\n             elsif S = No_Access_To_Source_File then\n                Write_Line\n                  (\"fatal error, run-time library not installed correctly\");"}, {"sha": "977567d498384efa783602769ed2f5e73c517506", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -328,19 +328,23 @@ package body Lib.Load is\n \n          if Main_Source_File > No_Source_File then\n             Version := Source_Checksum (Main_Source_File);\n+\n          else\n             --  To avoid emitting a source location (since there is no file),\n             --  we write a custom error message instead of using the machinery\n             --  in errout.adb.\n \n             Set_Standard_Error;\n+\n             if Main_Source_File = No_Access_To_Source_File then\n-               Write_Str (\"no read access for file \"\"\"\n-                          & Get_Name_String (Fname) & \"\"\"\");\n+               Write_Str\n+                 (\"no read access for file \"\"\" & Get_Name_String (Fname)\n+                  & \"\"\"\");\n             else\n-               Write_Str (\"file \"\"\"\n-                          & Get_Name_String (Fname) & \"\"\" not found\");\n+               Write_Str\n+                 (\"file \"\"\" & Get_Name_String (Fname) & \"\"\" not found\");\n             end if;\n+\n             Write_Eol;\n             Set_Standard_Output;\n          end if;\n@@ -835,6 +839,7 @@ package body Lib.Load is\n                else\n                   Write_Str (\"  file was not found, load failed\");\n                end if;\n+\n                Write_Eol;\n             end if;\n \n@@ -867,6 +872,7 @@ package body Lib.Load is\n \n                else\n                   Error_Msg_File_1 := Fname;\n+\n                   if Src_Ind = No_Access_To_Source_File then\n                      Error_Msg (\"no read access to file{\", Load_Msg_Sloc);\n                   else"}, {"sha": "14fbba51152f845ef1cf6c7f9ea0863956c4eb08", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -2568,10 +2568,6 @@ package body Osint is\n       FD  : out File_Descriptor;\n       T   : File_Type := Source)\n    is\n-      --  Source_File_FD : File_Descriptor;\n-      --  The file descriptor for the current source file. A negative value\n-      --  indicates failure to open the specified source file.\n-\n       Len : Integer;\n       --  Length of file, assume no more than 2 gigabytes of source\n "}, {"sha": "4dea281647a95129d6232e8db12a109b5967f192", "filename": "gcc/ada/par-ch8.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fpar-ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fpar-ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch8.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -65,6 +65,7 @@ package body Ch8 is\n \n          Append (Use_Node, Item_List);\n          Is_Last := True;\n+\n       else\n          Set_More_Ids (Use_Node);\n \n@@ -152,11 +153,12 @@ package body Ch8 is\n    --  Error recovery: cannot raise Error_Resync\n \n    procedure P_Use_Type_Clause (Item_List : List_Id) is\n+      Use_Sloc : constant Source_Ptr := Prev_Token_Ptr;\n+\n       All_Present : Boolean;\n       Is_First    : Boolean := True;\n       Is_Last     : Boolean := False;\n       Use_Node    : Node_Id;\n-      Use_Sloc    : constant Source_Ptr := Prev_Token_Ptr;\n \n    begin\n       if Token = Tok_All then"}, {"sha": "320d62222d39f3053b705c88b8e81bc7419c15ba", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -630,17 +630,16 @@ package body Prepcomp is\n          String_To_Name_Buffer (Current_Data.Deffile);\n \n          declare\n-            N           : constant File_Name_Type    := Name_Find;\n-            Deffile     : constant Source_File_Index :=\n-                            Load_Definition_File (N);\n-            Add_Deffile : Boolean                    := True;\n-            T           : constant Nat               := Total_Errors_Detected;\n+            N       : constant File_Name_Type    := Name_Find;\n+            Deffile : constant Source_File_Index := Load_Definition_File (N);\n+            T       : constant Nat               := Total_Errors_Detected;\n+\n+            Add_Deffile : Boolean := True;\n \n          begin\n             if Deffile <= No_Source_File then\n-               Fail (\"definition file \"\"\"\n-                     & Get_Name_String (N)\n-                     & \"\"\" not found\");\n+               Fail\n+                 (\"definition file \"\"\" & Get_Name_String (N) & \"\"\" not found\");\n             end if;\n \n             --  Initialize the preprocessor and set the characteristics of the"}, {"sha": "b2bd32c6b820c9cc42ada499e43379a95d2fa32e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -4144,8 +4144,9 @@ package body Sem_Aggr is\n             Assoc := First (Component_Associations (N));\n             while Present (Assoc) loop\n                if Nkind (Assoc) = N_Iterated_Component_Association then\n-                  Error_Msg_N (\"iterated component association can only \"\n-                    & \"appear in an array aggregate\", N);\n+                  Error_Msg_N\n+                    (\"iterated component association can only appear in an \"\n+                     & \"array aggregate\", N);\n                   raise Unrecoverable_Error;\n \n                else"}, {"sha": "0616a201b79bff0f497edd09c14e74fee94885ec", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -163,7 +163,9 @@ package body Sem_Ch10 is\n    --  the private declarations of a parent unit.\n \n    procedure Install_Parents\n-     (Lib_Unit : Node_Id; Is_Private : Boolean; Chain : Boolean := True);\n+     (Lib_Unit   : Node_Id;\n+      Is_Private : Boolean;\n+      Chain      : Boolean := True);\n    --  This procedure establishes the context for the compilation of a child\n    --  unit. If Lib_Unit is a child library spec then the context of the parent\n    --  is installed, and the parent itself made immediately visible, so that\n@@ -3390,7 +3392,9 @@ package body Sem_Ch10 is\n \n       if Is_Child_Spec (Lib_Unit) then\n          Install_Parents\n-           (Lib_Unit, Private_Present (Parent (Lib_Unit)), Chain);\n+           (Lib_Unit   => Lib_Unit,\n+            Is_Private => Private_Present (Parent (Lib_Unit)),\n+            Chain      => Chain);\n       end if;\n \n       Install_Limited_Context_Clauses (N);\n@@ -4065,7 +4069,10 @@ package body Sem_Ch10 is\n    ---------------------\n \n    procedure Install_Parents\n-     (Lib_Unit : Node_Id; Is_Private : Boolean; Chain : Boolean := True) is\n+     (Lib_Unit   : Node_Id;\n+      Is_Private : Boolean;\n+      Chain      : Boolean := True)\n+   is\n       P      : Node_Id;\n       E_Name : Entity_Id;\n       P_Name : Entity_Id;\n@@ -4121,8 +4128,11 @@ package body Sem_Ch10 is\n       --  This is the recursive call that ensures all parents are loaded\n \n       if Is_Child_Spec (P) then\n-         Install_Parents (P,\n-           Is_Private or else Private_Present (Parent (Lib_Unit)), Chain);\n+         Install_Parents\n+           (Lib_Unit   => P,\n+            Is_Private =>\n+              Is_Private or else Private_Present (Parent (Lib_Unit)),\n+            Chain      => Chain);\n       end if;\n \n       --  Now we can install the context for this parent"}, {"sha": "223703d2a4391817fe8bfe82bd5d4d8c0edcf117", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -1930,7 +1930,7 @@ package body Sem_Ch12 is\n \n                         procedure Check_Generic_Parent is\n                            Inst : constant Node_Id :=\n-                              Next (Unit_Declaration_Node (Actual));\n+                                    Next (Unit_Declaration_Node (Actual));\n                            Par  : Entity_Id;\n \n                         begin\n@@ -1939,26 +1939,26 @@ package body Sem_Ch12 is\n                            if Nkind (Parent (Actual)) = N_Package_Specification\n                            then\n                               Par := Scope (Generic_Parent (Parent (Actual)));\n+\n                               if Is_Generic_Instance (Par) then\n                                  null;\n \n                               --  If the actual is a child generic unit, check\n                               --  whether the instantiation of the parent is\n-                              --  also local and must also be frozen now.\n-                              --  We must retrieve the instance node to locate\n-                              --  the parent instance if any.\n+                              --  also local and must also be frozen now. We\n+                              --  must retrieve the instance node to locate the\n+                              --  parent instance if any.\n \n                               elsif Ekind (Par) = E_Generic_Package\n-                                  and then Is_Child_Unit (Gen_Par)\n-                                  and then Ekind (Scope (Gen_Par))\n-                                     = E_Generic_Package\n+                                and then Is_Child_Unit (Gen_Par)\n+                                and then Ekind (Scope (Gen_Par)) =\n+                                           E_Generic_Package\n                               then\n                                  if Nkind (Inst) = N_Package_Instantiation\n-                                   and then\n-                                     Nkind (Name (Inst)) = N_Expanded_Name\n+                                   and then Nkind (Name (Inst)) =\n+                                              N_Expanded_Name\n                                  then\n-\n-                                    --  Retrieve entity of psarent instance.\n+                                    --  Retrieve entity of parent instance\n \n                                     Par := Entity (Prefix (Name (Inst)));\n                                  end if;\n@@ -1986,12 +1986,13 @@ package body Sem_Ch12 is\n                      begin\n                         if Present (Renamed_Entity (Actual)) then\n                            Gen_Par :=\n-                             Generic_Parent (Specification (\n-                               Unit_Declaration_Node (\n-                                 Renamed_Entity (Actual))));\n+                             Generic_Parent (Specification\n+                               (Unit_Declaration_Node\n+                                 (Renamed_Entity (Actual))));\n                         else\n-                           Gen_Par := Generic_Parent\n-                             (Specification (Unit_Declaration_Node (Actual)));\n+                           Gen_Par :=\n+                             Generic_Parent (Specification\n+                               (Unit_Declaration_Node (Actual)));\n                         end if;\n \n                         if not Expander_Active\n@@ -2036,12 +2037,13 @@ package body Sem_Ch12 is\n                               --  that it is the instance that must be frozen.\n \n                               if Nkind (Parent (Actual)) =\n-                                N_Package_Renaming_Declaration\n+                                   N_Package_Renaming_Declaration\n                               then\n                                  Set_Has_Delayed_Freeze\n                                    (Renamed_Entity (Actual));\n                                  Append_Elmt\n-                                  (Renamed_Entity (Actual), Actuals_To_Freeze);\n+                                   (Renamed_Entity (Actual),\n+                                    Actuals_To_Freeze);\n                               else\n                                  Set_Has_Delayed_Freeze (Actual);\n                                  Append_Elmt (Actual, Actuals_To_Freeze);"}, {"sha": "61d1140e9b06d384ead42ef188f3d7357bc27680", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 43, "deletions": 42, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -2211,6 +2211,12 @@ package body Sem_Ch3 is\n       --  contract expression. Full analysis of the expression is done when\n       --  the contract is processed.\n \n+      function Contains_Lib_Incomplete_Type (Pkg : Entity_Id) return Boolean;\n+      --  Check if a nested package has entities within it that rely on library\n+      --  level private types where the full view has not been completed for\n+      --  the purposes of checking if it is acceptable to freeze an expression\n+      --  function at the point of declaration.\n+\n       procedure Handle_Late_Controlled_Primitive (Body_Decl : Node_Id);\n       --  Determine whether Body_Decl denotes the body of a late controlled\n       --  primitive (either Initialize, Adjust or Finalize). If this is the\n@@ -2234,12 +2240,6 @@ package body Sem_Ch3 is\n       --  declarations, or before a declaration that freezes previous entities,\n       --  such as in a subprogram body.\n \n-      function Uses_Unseen_Priv (Pkg : Entity_Id) return Boolean;\n-      --  Check if a nested package has entities within it that rely on library\n-      --  level private types where the full view has not been seen for the\n-      --  purposes of checking if it is acceptable to freeze an expression\n-      --  function at the point of declaration.\n-\n       -----------------\n       -- Adjust_Decl --\n       -----------------\n@@ -2400,6 +2400,40 @@ package body Sem_Ch3 is\n          end loop;\n       end Check_Entry_Contracts;\n \n+      ----------------------------------\n+      -- Contains_Lib_Incomplete_Type --\n+      ----------------------------------\n+\n+      function Contains_Lib_Incomplete_Type (Pkg : Entity_Id) return Boolean is\n+         Curr : Entity_Id;\n+\n+      begin\n+         --  Avoid looking through scopes that do not meet the precondition of\n+         --  Pkg not being within a library unit spec.\n+\n+         if not Is_Compilation_Unit (Pkg)\n+           and then not Is_Generic_Instance (Pkg)\n+           and then not In_Package_Body (Enclosing_Lib_Unit_Entity (Pkg))\n+         then\n+            --  Loop through all entities in the current scope to identify\n+            --  an entity that depends on a private type.\n+\n+            Curr := First_Entity (Pkg);\n+            loop\n+               if Nkind (Curr) in N_Entity\n+                 and then Depends_On_Private (Curr)\n+               then\n+                  return True;\n+               end if;\n+\n+               exit when Last_Entity (Current_Scope) = Curr;\n+               Curr := Next_Entity (Curr);\n+            end loop;\n+         end if;\n+\n+         return False;\n+      end Contains_Lib_Incomplete_Type;\n+\n       --------------------------------------\n       -- Handle_Late_Controlled_Primitive --\n       --------------------------------------\n@@ -2543,40 +2577,6 @@ package body Sem_Ch3 is\n          end loop;\n       end Resolve_Aspects;\n \n-      ----------------------\n-      -- Uses_Unseen_Priv --\n-      ----------------------\n-\n-      function Uses_Unseen_Priv (Pkg : Entity_Id) return Boolean is\n-         Curr : Entity_Id;\n-\n-      begin\n-         --  Avoid looking through scopes that do not meet the precondition of\n-         --  Pkg not being within a library unit spec.\n-\n-         if not Is_Compilation_Unit (Pkg)\n-           and then not Is_Generic_Instance (Pkg)\n-           and then not In_Package_Body (Enclosing_Lib_Unit_Entity (Pkg))\n-         then\n-            --  Loop through all entities in the current scope to identify\n-            --  an entity that depends on a private type.\n-\n-            Curr := First_Entity (Pkg);\n-            loop\n-               if Nkind (Curr) in N_Entity\n-                 and then Depends_On_Private (Curr)\n-               then\n-                  return True;\n-               end if;\n-\n-               exit when Last_Entity (Current_Scope) = Curr;\n-               Curr := Next_Entity (Curr);\n-            end loop;\n-         end if;\n-\n-         return False;\n-      end Uses_Unseen_Priv;\n-\n       --  Local variables\n \n       Context     : Node_Id   := Empty;\n@@ -2750,15 +2750,16 @@ package body Sem_Ch3 is\n          --  not cause unwanted freezing at that point.\n \n          --  It is also necessary to check for a case where both an expression\n-         --  function is used and the current scope depends on an unseen\n+         --  function is used and the current scope depends on an incomplete\n          --  private type from a library unit, otherwise premature freezing of\n          --  the private type will occur.\n \n          elsif not Analyzed (Next_Decl) and then Is_Body (Next_Decl)\n            and then ((Nkind (Next_Decl) /= N_Subprogram_Body\n                        or else not Was_Expression_Function (Next_Decl))\n                       or else (not Is_Ignored_Ghost_Entity (Current_Scope)\n-                                and then not Uses_Unseen_Priv (Current_Scope)))\n+                                and then not Contains_Lib_Incomplete_Type\n+                                               (Current_Scope)))\n          then\n             --  When a controlled type is frozen, the expander generates stream\n             --  and controlled-type support routines. If the freeze is caused"}, {"sha": "aa53045498bb33448e6d0fb515e085e5c411f77e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 106, "deletions": 90, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -479,6 +479,7 @@ package body Sem_Ch8 is\n    --  Find the most previous use clause (that is, the first one to appear in\n    --  the source) by traversing the previous clause chain that exists in both\n    --  N_Use_Package_Clause nodes and N_Use_Type_Clause nodes.\n+   --  ??? a better subprogram name is in order\n \n    function Find_Renamed_Entity\n      (N         : Node_Id;\n@@ -526,19 +527,24 @@ package body Sem_Ch8 is\n       Clause2 : Entity_Id) return Entity_Id;\n    --  Determine which use clause parameter is the most descendant in terms of\n    --  scope.\n+   --  ??? a better subprogram name is in order\n \n    procedure Premature_Usage (N : Node_Id);\n    --  Diagnose usage of an entity before it is visible\n \n    procedure Use_One_Package\n-     (N : Node_Id; Pack_Name : Entity_Id := Empty; Force : Boolean := False);\n+     (N         : Node_Id;\n+      Pack_Name : Entity_Id := Empty;\n+      Force     : Boolean   := False);\n    --  Make visible entities declared in package P potentially use-visible\n    --  in the current context. Also used in the analysis of subunits, when\n    --  re-installing use clauses of parent units. N is the use_clause that\n    --  names P (and possibly other packages).\n \n    procedure Use_One_Type\n-     (Id : Node_Id; Installed : Boolean := False; Force : Boolean := False);\n+     (Id        : Node_Id;\n+      Installed : Boolean := False;\n+      Force     : Boolean := False);\n    --  Id is the subtype mark from a use_type_clause. This procedure makes\n    --  the primitive operators of the type potentially use-visible. The\n    --  boolean flag Installed indicates that the clause is being reinstalled\n@@ -3639,8 +3645,8 @@ package body Sem_Ch8 is\n       --  implicit generic actual.\n \n       if From_Default (N)\n-           and then Is_Generic_Actual_Subprogram (New_S)\n-           and then Present (Alias (New_S))\n+        and then Is_Generic_Actual_Subprogram (New_S)\n+        and then Present (Alias (New_S))\n       then\n          Mark_Use_Clauses (Alias (New_S));\n \n@@ -3666,7 +3672,6 @@ package body Sem_Ch8 is\n    --  within the package itself, ignore it.\n \n    procedure Analyze_Use_Package (N : Node_Id; Chain : Boolean := True) is\n-\n       procedure Analyze_Package_Name (Clause : Node_Id);\n       --  Perform analysis on a package name from a use_package_clause\n \n@@ -3700,8 +3705,8 @@ package body Sem_Ch8 is\n \n             if Entity (Pref) = Standard_Standard then\n                Error_Msg_N\n-                 (\"predefined package Standard cannot appear in a \"\n-                  & \"context clause\", Pref);\n+                 (\"predefined package Standard cannot appear in a context \"\n+                  & \"clause\", Pref);\n             end if;\n          end if;\n       end Analyze_Package_Name;\n@@ -3763,6 +3768,7 @@ package body Sem_Ch8 is\n \n       if not More_Ids (N) and then not Prev_Ids (N) then\n          Analyze_Package_Name (N);\n+\n       elsif More_Ids (N) and then not Prev_Ids (N) then\n          Analyze_Package_Name_List (N);\n       end if;\n@@ -3772,12 +3778,13 @@ package body Sem_Ch8 is\n \n          return;\n       end if;\n-      Pack := Entity (Name (N));\n \n       if Chain then\n          Chain_Use_Clause (N);\n       end if;\n \n+      Pack := Entity (Name (N));\n+\n       --  There are many cases where scopes are manipulated during analysis, so\n       --  check that Pack's current use clause has not already been chained\n       --  before setting its previous use clause.\n@@ -3796,8 +3803,7 @@ package body Sem_Ch8 is\n       if Ekind (Pack) /= E_Package and then Etype (Pack) /= Any_Type then\n          if Ekind (Pack) = E_Generic_Package then\n             Error_Msg_N  -- CODEFIX\n-              (\"a generic package is not allowed in a use clause\",\n-               Name (N));\n+              (\"a generic package is not allowed in a use clause\", Name (N));\n \n          elsif Ekind_In (Pack, E_Generic_Function, E_Generic_Package)\n          then\n@@ -3807,8 +3813,7 @@ package body Sem_Ch8 is\n \n          elsif Ekind_In (Pack, E_Function, E_Procedure, E_Operator) then\n             Error_Msg_N  -- CODEFIX\n-              (\"a subprogram is not allowed in a use clause\",\n-               Name (N));\n+              (\"a subprogram is not allowed in a use clause\", Name (N));\n \n          else\n             Error_Msg_N (\"& is not allowed in a use clause\", Name (N));\n@@ -4186,8 +4191,8 @@ package body Sem_Ch8 is\n    ----------------------\n \n    procedure Chain_Use_Clause (N : Node_Id) is\n-      Pack : Entity_Id;\n       Level : Int := Scope_Stack.Last;\n+      Pack  : Entity_Id;\n \n    begin\n       --  Common case\n@@ -4209,6 +4214,7 @@ package body Sem_Ch8 is\n          --  parent unit when compiling a child.\n \n          Pack := Defining_Entity (Parent (N), Empty_On_Errors => True);\n+\n          if not In_Open_Scopes (Pack) then\n             null;\n \n@@ -4771,9 +4777,7 @@ package body Sem_Ch8 is\n \n    function Entity_Of_Unit (U : Node_Id) return Entity_Id is\n    begin\n-      if Nkind (U) = N_Package_Instantiation\n-        and then Analyzed (U)\n-      then\n+      if Nkind (U) = N_Package_Instantiation and then Analyzed (U) then\n          return Defining_Entity (Instance_Spec (U));\n       else\n          return Defining_Entity (U);\n@@ -5885,9 +5889,7 @@ package body Sem_Ch8 is\n       --  path, so ignore the fact that they are overloaded and mark them\n       --  anyway.\n \n-      if Nkind (N) not in N_Subexpr\n-        or else not Is_Overloaded (N)\n-      then\n+      if Nkind (N) not in N_Subexpr or else not Is_Overloaded (N) then\n          Mark_Use_Clauses (N);\n       end if;\n \n@@ -6541,6 +6543,7 @@ package body Sem_Ch8 is\n \n    function Find_Most_Prev (Use_Clause : Node_Id) return Node_Id is\n       Curr : Node_Id;\n+\n    begin\n       --  Loop through the Prev_Use_Clause chain\n \n@@ -8206,7 +8209,6 @@ package body Sem_Ch8 is\n    ----------------------\n \n    procedure Mark_Use_Clauses (Id : Node_Or_Entity_Id) is\n-\n       procedure Mark_Parameters (Call : Entity_Id);\n       --  Perform use_type_clause marking for all parameters in a subprogram\n       --  or operator call.\n@@ -8249,19 +8251,19 @@ package body Sem_Ch8 is\n          Curr : Node_Id;\n \n       begin\n-         --  Ignore cases where the scope of the type is not a package\n-         --  (e.g. Standard_Standard).\n+         --  Ignore cases where the scope of the type is not a package (e.g.\n+         --  Standard_Standard).\n \n          if Ekind (Pak) /= E_Package then\n             return;\n          end if;\n \n          Curr := Current_Use_Clause (Pak);\n          while Present (Curr)\n-            and then not Is_Effective_Use_Clause (Curr)\n+           and then not Is_Effective_Use_Clause (Curr)\n          loop\n-            --  We need to mark the previous use clauses as effective, but each\n-            --  use clause may in turn render other use_package_clauses\n+            --  We need to mark the previous use clauses as effective, but\n+            --  each use clause may in turn render other use_package_clauses\n             --  effective. Additionally, it is possible to have a parent\n             --  package renamed as a child of itself so we must check the\n             --  prefix entity is not the same as the package we are marking.\n@@ -8312,6 +8314,7 @@ package body Sem_Ch8 is\n          --  for ignoring previous errors.\n \n          Mark_Use_Package (Scope (Base_Type (Etype (E))));\n+\n          if Nkind (E) in N_Op\n            and then Present (Entity (E))\n            and then Present (Scope (Entity (E)))\n@@ -8346,7 +8349,7 @@ package body Sem_Ch8 is\n       --  Use clauses in and of themselves do not count as a \"use\" of a\n       --  package.\n \n-      if Nkind_In (Parent (Id), N_Use_Type_Clause, N_Use_Package_Clause) then\n+      if Nkind_In (Parent (Id), N_Use_Package_Clause, N_Use_Type_Clause) then\n          return;\n       end if;\n \n@@ -8368,8 +8371,8 @@ package body Sem_Ch8 is\n          --  Mark primitives\n \n          elsif (Ekind (Id) in Overloadable_Kind\n-                 or else Ekind_In\n-                   (Ekind (Id), E_Generic_Function, E_Generic_Procedure))\n+                 or else Ekind_In (Id, E_Generic_Function,\n+                                       E_Generic_Procedure))\n            and then (Is_Potentially_Use_Visible (Id)\n                       or else Is_Intrinsic_Subprogram (Id))\n          then\n@@ -8388,7 +8391,7 @@ package body Sem_Ch8 is\n             --  expression.\n \n             if Nkind (Id) in N_Binary_Op\n-               and then not (Nkind (Left_Opnd (Id)) in N_Op)\n+              and then not (Nkind (Left_Opnd (Id)) in N_Op)\n             then\n                Mark_Use_Type (Left_Opnd (Id));\n             end if;\n@@ -8896,8 +8899,9 @@ package body Sem_Ch8 is\n         and then Scope_Stack.Table (SS_Last).Entity /= Standard_Standard\n         and then Handle_Use\n       then\n-         Install_Use_Clauses (Scope_Stack.Table (SS_Last).First_Use_Clause,\n-                               Force_Installation => True);\n+         Install_Use_Clauses\n+           (Scope_Stack.Table (SS_Last).First_Use_Clause,\n+            Force_Installation => True);\n       end if;\n    end Restore_Scope_Stack;\n \n@@ -9020,7 +9024,6 @@ package body Sem_Ch8 is\n    -----------------------------\n \n    procedure Update_Use_Clause_Chain is\n-\n       procedure Update_Chain_In_Scope (Level : Int);\n       --  Iterate through one level in the scope stack verifying each use-type\n       --  clause within said level is used then reset the Current_Use_Clause\n@@ -9058,7 +9061,6 @@ package body Sem_Ch8 is\n               and then not Is_Effective_Use_Clause (Curr)\n               and then not In_Instance\n             then\n-\n                --  We are dealing with a potentially unused use_package_clause\n \n                if Nkind (Curr) = N_Use_Package_Clause then\n@@ -9068,21 +9070,24 @@ package body Sem_Ch8 is\n \n                   if not (Present (Associated_Node (N))\n                            and then Present\n-                             (Current_Use_Clause (Associated_Node (N)))\n+                                      (Current_Use_Clause\n+                                        (Associated_Node (N)))\n                            and then Is_Effective_Use_Clause\n-                             (Current_Use_Clause (Associated_Node (N))))\n+                                      (Current_Use_Clause\n+                                        (Associated_Node (N))))\n                   then\n                      Error_Msg_Node_1 := Entity (N);\n-                     Error_Msg_NE (\"use clause for package &? has no effect\",\n-                                   Curr, Entity (N));\n+                     Error_Msg_NE\n+                       (\"use clause for package &? has no effect\",\n+                        Curr, Entity (N));\n                   end if;\n \n                --  We are dealing with an unused use_type_clause\n \n                else\n                   Error_Msg_Node_1 := Etype (N);\n-                  Error_Msg_NE (\"use clause for }? has no effect\",\n-                                 Curr, Etype (N));\n+                  Error_Msg_NE\n+                    (\"use clause for }? has no effect\", Curr, Etype (N));\n                end if;\n             end if;\n \n@@ -9123,7 +9128,6 @@ package body Sem_Ch8 is\n       Pack_Name : Entity_Id := Empty;\n       Force     : Boolean   := False)\n    is\n-\n       procedure Note_Redundant_Use (Clause : Node_Id);\n       --  Mark the name in a use clause as redundant if the corresponding\n       --  entity is already use-visible. Emit a warning if the use clause comes\n@@ -9134,8 +9138,8 @@ package body Sem_Ch8 is\n       ------------------------\n \n       procedure Note_Redundant_Use (Clause : Node_Id) is\n-         Pack_Name : constant Entity_Id := Entity (Clause);\n          Decl      : constant Node_Id   := Parent (Clause);\n+         Pack_Name : constant Entity_Id := Entity (Clause);\n \n          Cur_Use    : Node_Id := Current_Use_Clause (Pack_Name);\n          Prev_Use   : Node_Id := Empty;\n@@ -9191,10 +9195,11 @@ package body Sem_Ch8 is\n          elsif Nkind (Unit (Cunit (Current_Sem_Unit))) = N_Package_Body then\n             declare\n                Cur_Unit : constant Unit_Number_Type :=\n-                 Get_Source_Unit (Cur_Use);\n+                            Get_Source_Unit (Cur_Use);\n                New_Unit : constant Unit_Number_Type :=\n-                 Get_Source_Unit (Clause);\n-               Scop     : Entity_Id;\n+                            Get_Source_Unit (Clause);\n+\n+               Scop : Entity_Id;\n \n             begin\n                if Cur_Unit = New_Unit then\n@@ -9216,8 +9221,8 @@ package body Sem_Ch8 is\n                      Redundant := Clause;\n                      Prev_Use  := Cur_Use;\n \n-                  --  Most common case: redundant clause in body,\n-                  --  original clause in spec. Current scope is spec entity.\n+                  --  Most common case: redundant clause in body, original\n+                  --  clause in spec. Current scope is spec entity.\n \n                   elsif Current_Scope = Cunit_Entity (Current_Sem_Unit) then\n                      Redundant := Cur_Use;\n@@ -9287,8 +9292,8 @@ package body Sem_Ch8 is\n             --  visible part of the child, and no warning should be emitted.\n \n             if Nkind (Parent (Decl)) = N_Package_Specification\n-              and then\n-                List_Containing (Decl) = Private_Declarations (Parent (Decl))\n+              and then List_Containing (Decl) =\n+                         Private_Declarations (Parent (Decl))\n             then\n                declare\n                   Par : constant Entity_Id := Defining_Entity (Parent (Decl));\n@@ -9299,16 +9304,16 @@ package body Sem_Ch8 is\n                   if Is_Compilation_Unit (Par)\n                     and then Par /= Cunit_Entity (Current_Sem_Unit)\n                     and then Parent (Cur_Use) = Spec\n-                    and then\n-                      List_Containing (Cur_Use) = Visible_Declarations (Spec)\n+                    and then List_Containing (Cur_Use) =\n+                               Visible_Declarations (Spec)\n                   then\n                      return;\n                   end if;\n                end;\n             end if;\n \n-         --  Finally, if the current use clause is in the context then\n-         --  the clause is redundant when it is nested within the unit.\n+         --  Finally, if the current use clause is in the context then the\n+         --  clause is redundant when it is nested within the unit.\n \n          elsif Nkind (Parent (Cur_Use)) = N_Compilation_Unit\n            and then Nkind (Parent (Parent (Clause))) /= N_Compilation_Unit\n@@ -9320,6 +9325,7 @@ package body Sem_Ch8 is\n          end if;\n \n          if Present (Redundant) and then Parent (Redundant) /= Prev_Use then\n+\n             --  Make sure we are looking at most-descendant use_package_clause\n             --  by traversing the chain with Find_Most_Prev and then verifying\n             --  there is no scope manipulation via Most_Descendant_Use_Clause.\n@@ -9328,7 +9334,7 @@ package body Sem_Ch8 is\n               and then\n                 (Nkind (Parent (Prev_Use)) /= N_Compilation_Unit\n                   or else Most_Descendant_Use_Clause\n-                    (Prev_Use, Find_Most_Prev (Prev_Use)) /= Prev_Use)\n+                            (Prev_Use, Find_Most_Prev (Prev_Use)) /= Prev_Use)\n             then\n                Prev_Use := Find_Most_Prev (Prev_Use);\n             end if;\n@@ -9342,12 +9348,12 @@ package body Sem_Ch8 is\n \n       --  Local variables\n \n+      Current_Instance : Entity_Id := Empty;\n       Id               : Entity_Id;\n+      P                : Entity_Id;\n       Prev             : Entity_Id;\n-      Current_Instance : Entity_Id := Empty;\n-      Real_P           : Entity_Id;\n       Private_With_OK  : Boolean   := False;\n-      P                : Entity_Id;\n+      Real_P           : Entity_Id;\n \n    --  Start of processing for Use_One_Package\n \n@@ -9388,9 +9394,11 @@ package body Sem_Ch8 is\n \n          if In_Use (P) then\n             Note_Redundant_Use (Pack_Name);\n+\n             if not Force then\n                Set_Current_Use_Clause (P, N);\n             end if;\n+\n             return;\n \n          --  Warn about detected redundant clauses\n@@ -9401,6 +9409,7 @@ package body Sem_Ch8 is\n                  (\"& is already use-visible within itself?r?\",\n                    Pack_Name, P);\n             end if;\n+\n             return;\n          end if;\n \n@@ -9432,10 +9441,9 @@ package body Sem_Ch8 is\n          end if;\n       end if;\n \n-      --  If unit is a package renaming, indicate that the renamed\n-      --  package is also in use (the flags on both entities must\n-      --  remain consistent, and a subsequent use of either of them\n-      --  should be recognized as redundant).\n+      --  If unit is a package renaming, indicate that the renamed package is\n+      --  also in use (the flags on both entities must remain consistent, and a\n+      --  subsequent use of either of them should be recognized as redundant).\n \n       if Present (Renamed_Object (P)) then\n          Set_In_Use (Renamed_Object (P));\n@@ -9600,13 +9608,10 @@ package body Sem_Ch8 is\n    ------------------\n \n    procedure Use_One_Type\n-     (Id : Node_Id; Installed : Boolean := False; Force : Boolean := False)\n+     (Id        : Node_Id;\n+      Installed : Boolean := False;\n+      Force     : Boolean := False)\n    is\n-      Elmt          : Elmt_Id;\n-      Is_Known_Used : Boolean;\n-      Op_List       : Elist_Id;\n-      T             : Entity_Id;\n-\n       function Spec_Reloaded_For_Body return Boolean;\n       --  Determine whether the compilation unit is a package body and the use\n       --  type clause is in the spec of the same package. Even though the spec\n@@ -9635,9 +9640,9 @@ package body Sem_Ch8 is\n \n                return\n                  Nkind (Spec) = N_Package_Specification\n-                   and then\n-                     In_Same_Source_Unit (Corresponding_Body (Parent (Spec)),\n-                                          Cunit_Entity (Current_Sem_Unit));\n+                   and then In_Same_Source_Unit\n+                              (Corresponding_Body (Parent (Spec)),\n+                               Cunit_Entity (Current_Sem_Unit));\n             end;\n          end if;\n \n@@ -9649,9 +9654,6 @@ package body Sem_Ch8 is\n       -------------------------------\n \n       procedure Use_Class_Wide_Operations (Typ : Entity_Id) is\n-         Scop : Entity_Id;\n-         Ent  : Entity_Id;\n-\n          function Is_Class_Wide_Operation_Of\n            (Op : Entity_Id;\n             T  : Entity_Id) return Boolean;\n@@ -9663,8 +9665,8 @@ package body Sem_Ch8 is\n          ---------------------------------\n \n          function Is_Class_Wide_Operation_Of\n-           (Op  : Entity_Id;\n-            T   : Entity_Id) return Boolean\n+           (Op : Entity_Id;\n+            T  : Entity_Id) return Boolean\n          is\n             Formal : Entity_Id;\n \n@@ -9674,6 +9676,7 @@ package body Sem_Ch8 is\n                if Etype (Formal) = Class_Wide_Type (T) then\n                   return True;\n                end if;\n+\n                Next_Formal (Formal);\n             end loop;\n \n@@ -9684,6 +9687,11 @@ package body Sem_Ch8 is\n             return False;\n          end Is_Class_Wide_Operation_Of;\n \n+         --  Local variables\n+\n+         Ent  : Entity_Id;\n+         Scop : Entity_Id;\n+\n       --  Start of processing for Use_Class_Wide_Operations\n \n       begin\n@@ -9708,6 +9716,13 @@ package body Sem_Ch8 is\n          end if;\n       end Use_Class_Wide_Operations;\n \n+      --  Local variables\n+\n+      Elmt          : Elmt_Id;\n+      Is_Known_Used : Boolean;\n+      Op_List       : Elist_Id;\n+      T             : Entity_Id;\n+\n    --  Start of processing for Use_One_Type\n \n    begin\n@@ -9724,13 +9739,13 @@ package body Sem_Ch8 is\n       --  in use or the entity is declared in the current package, thus\n       --  use-visible.\n \n-      Is_Known_Used := (In_Use (T)\n-                         and then ((Present (Current_Use_Clause (T))\n-                                     and then All_Present\n-                                                (Current_Use_Clause (T)))\n-                                    or else not All_Present (Parent (Id))))\n-                         or else In_Use (Scope (T))\n-                         or else Scope (T) = Current_Scope;\n+      Is_Known_Used :=\n+          (In_Use (T)\n+            and then ((Present (Current_Use_Clause (T))\n+                        and then All_Present (Current_Use_Clause (T)))\n+                      or else not All_Present (Parent (Id))))\n+        or else In_Use (Scope (T))\n+        or else Scope (T) = Current_Scope;\n \n       Set_Redundant_Use (Id,\n         Is_Known_Used or else Is_Potentially_Use_Visible (T));\n@@ -9784,8 +9799,8 @@ package body Sem_Ch8 is\n          Set_Current_Use_Clause (T, Parent (Id));\n          Set_In_Use (T);\n \n-         --  If T is tagged, primitive operators on class-wide operands\n-         --  are also available.\n+         --  If T is tagged, primitive operators on class-wide operands are\n+         --  also available.\n \n          if Is_Tagged_Type (T) then\n             Set_In_Use (Class_Wide_Type (T));\n@@ -9862,8 +9877,8 @@ package body Sem_Ch8 is\n \n             if Present (Current_Use_Clause (T)) then\n                Use_Clause_Known : declare\n-                  Clause1 : constant Node_Id := Find_Most_Prev\n-                                                  (Current_Use_Clause (T));\n+                  Clause1 : constant Node_Id :=\n+                              Find_Most_Prev (Current_Use_Clause (T));\n                   Clause2 : constant Node_Id := Parent (Id);\n                   Ent1    : Entity_Id;\n                   Ent2    : Entity_Id;\n@@ -9938,7 +9953,8 @@ package body Sem_Ch8 is\n \n                      else\n                         declare\n-                           S1, S2 : Entity_Id;\n+                           S1 : Entity_Id;\n+                           S2 : Entity_Id;\n \n                         begin\n                            S1 := Scope (Ent1);\n@@ -9986,8 +10002,8 @@ package body Sem_Ch8 is\n                   end if;\n                end Use_Clause_Known;\n \n-            --  Here if Current_Use_Clause is not set for T, another case\n-            --  where we do not have the location information available.\n+            --  Here if Current_Use_Clause is not set for T, another case where\n+            --  we do not have the location information available.\n \n             else\n                Error_Msg_NE -- CODEFIX\n@@ -9998,8 +10014,8 @@ package body Sem_Ch8 is\n          --  The package where T is declared is already used\n \n          elsif In_Use (Scope (T)) then\n-            Error_Msg_Sloc := Sloc (Find_Most_Prev\n-                                     (Current_Use_Clause (Scope (T))));\n+            Error_Msg_Sloc :=\n+              Sloc (Find_Most_Prev (Current_Use_Clause (Scope (T))));\n             Error_Msg_NE -- CODEFIX\n               (\"& is already use-visible through package use clause #??\",\n                Id, T);"}, {"sha": "bee5f49e87497444dacddbebfb9237a571aee3a1", "filename": "gcc/ada/sem_ch8.ads", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.ads?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -53,17 +53,15 @@ package Sem_Ch8 is\n    procedure Analyze_Package_Renaming           (N : Node_Id);\n    procedure Analyze_Subprogram_Renaming        (N : Node_Id);\n \n-   procedure Analyze_Use_Package (N     : Node_Id;\n-                                  Chain : Boolean := True);\n-   --  Analyze a use package clause and control (through the Chain\n-   --  parameter) whether to add N to the use clause chain for the name\n-   --  denoted within use clause N in case we are reanalyzing a use clause\n-   --  because of stack manipulation.\n-\n-   procedure Analyze_Use_Type (N     : Node_Id;\n-                               Chain : Boolean := True);\n-   --  Similar to Analyze_Use_Package except the Chain parameter applies\n-   --  to the type within N's subtype mark Current_Use_Clause.\n+   procedure Analyze_Use_Package (N : Node_Id; Chain : Boolean := True);\n+   --  Analyze a use package clause and control (through the Chain parameter)\n+   --  whether to add N to the use clause chain for the name denoted within\n+   --  use clause N in case we are reanalyzing a use clause because of stack\n+   --  manipulation.\n+\n+   procedure Analyze_Use_Type (N : Node_Id; Chain : Boolean := True);\n+   --  Similar to Analyze_Use_Package except the Chain parameter applies to the\n+   --  type within N's subtype mark Current_Use_Clause.\n \n    procedure End_Scope;\n    --  Called at end of scope. On exit from blocks and bodies (subprogram,"}, {"sha": "5107d3bc5f4dc66c352dbcb73877678a7a418e5f", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -5286,16 +5286,16 @@ package body Sem_SPARK is\n    is\n    begin\n       case Nkind (N) is\n+\n          --  Base identifier. Set permission to W or No depending on Mode.\n \n          when N_Identifier\n             | N_Expanded_Name\n          =>\n             declare\n                P : constant Node_Id := Entity (N);\n-\n                C : constant Perm_Tree_Access :=\n-                 Get (Current_Perm_Env, Unique_Entity (P));\n+                     Get (Current_Perm_Env, Unique_Entity (P));\n \n             begin\n                --  The base tree can be RW (first move from this base path) or"}, {"sha": "7f4b7861e15267a7e11a4396e82827b282c92ceb", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -355,10 +355,10 @@ package body Sinput.L is\n       T : Osint.File_Type) return Source_File_Index\n    is\n       FD  : File_Descriptor;\n+      Hi  : Source_Ptr;\n+      Lo  : Source_Ptr;\n       Src : Source_Buffer_Ptr;\n       X   : Source_File_Index;\n-      Lo  : Source_Ptr;\n-      Hi  : Source_Ptr;\n \n       Preprocessing_Needed : Boolean := False;\n "}, {"sha": "63b124ab7235959abe272cf16528e6b09920dcaf", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e671bce70f537708f36033cd44869ca94fb4c/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=7f5e671bce70f537708f36033cd44869ca94fb4c", "patch": "@@ -158,8 +158,8 @@ package body Targparm is\n       Set_NUP : Set_NUP_Type := null)\n    is\n       FD   : File_Descriptor;\n-      Text : Source_Buffer_Ptr;\n       Hi   : Source_Ptr;\n+      Text : Source_Buffer_Ptr;\n \n    begin\n       if Parameters_Obtained then\n@@ -173,11 +173,13 @@ package body Targparm is\n \n       if Null_Source_Buffer_Ptr (Text) then\n          Write_Line (\"fatal error, run-time library not installed correctly\");\n+\n          if FD = Null_FD then\n             Write_Line (\"cannot locate file system.ads\");\n          else\n             Write_Line (\"no read access for file system.ads\");\n          end if;\n+\n          raise Unrecoverable_Error;\n       end if;\n "}]}