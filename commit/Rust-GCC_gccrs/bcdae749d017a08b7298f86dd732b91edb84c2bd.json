{"sha": "bcdae749d017a08b7298f86dd732b91edb84c2bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNkYWU3NDlkMDE3YTA4YjcyOThmODZkZDczMmI5MWVkYjg0YzJiZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-16T21:44:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-16T21:44:02Z"}, "message": "re PR tree-optimization/43655 (-ftree-ter causes FAIL: g++.old-deja/g++.law/temps5.C execution test)\n\n\tPR tree-optimization/43655\n\t* tree-ssa-ter.c (is_replaceable_p): Don't use\n\tgimple_references_memory_p for -O0, instead check for load\n\tby looking at rhs.\n\n\t* g++.dg/opt/pr43655.C: New test.\n\nFrom-SVN: r167955", "tree": {"sha": "a6b941ced8b02130c5e8c8bcf0b55996d0d50ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6b941ced8b02130c5e8c8bcf0b55996d0d50ca7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcdae749d017a08b7298f86dd732b91edb84c2bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcdae749d017a08b7298f86dd732b91edb84c2bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcdae749d017a08b7298f86dd732b91edb84c2bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcdae749d017a08b7298f86dd732b91edb84c2bd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94406344b56752b35b729e97a85ce2a922ad6338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94406344b56752b35b729e97a85ce2a922ad6338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94406344b56752b35b729e97a85ce2a922ad6338"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "de5aae5272dbe03a1b2ba090e54c9d14b90d03fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcdae749d017a08b7298f86dd732b91edb84c2bd", "patch": "@@ -1,3 +1,10 @@\n+2010-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/43655\n+\t* tree-ssa-ter.c (is_replaceable_p): Don't use\n+\tgimple_references_memory_p for -O0, instead check for load\n+\tby looking at rhs.\n+\n 2010-12-16  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/46404"}, {"sha": "b5c1508e5d76ca1f7e8f60d10f317c85eeee3059", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bcdae749d017a08b7298f86dd732b91edb84c2bd", "patch": "@@ -1,3 +1,8 @@\n+2010-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/43655\n+\t* g++.dg/opt/pr43655.C: New test.\n+\n 2010-12-16  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/46404"}, {"sha": "f7e370b9e426c4c1a66de80463dc42346f73605b", "filename": "gcc/testsuite/g++.dg/opt/pr43655.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr43655.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr43655.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr43655.C?ref=bcdae749d017a08b7298f86dd732b91edb84c2bd", "patch": "@@ -0,0 +1,34 @@\n+// PR tree-optimization/43655\n+// { dg-do run }\n+// { dg-options \"-O0 -ftree-ter\" }\n+\n+extern \"C\" void abort ();\n+\n+struct C\n+{\n+  C (int i) : val(i) { }\n+  C (const C& c) : val(c.val) { }\n+  ~C (void) { val = 999; }\n+  C& operator = (const C& c) { val = c.val; return *this; }\n+  C& inc (int i) { val += i; return *this; }\n+  int val;\n+};\n+\n+C\n+f ()\n+{\n+  return C (3);\n+}\n+\n+C\n+f (int i)\n+{\n+  return f ().inc (i);\n+}\n+\n+int\n+main ()\n+{\n+  if (f (2).val != 5)\n+    abort ();\n+}"}, {"sha": "47954cfa3488b4cd7425c5b7981d4d7439525400", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcdae749d017a08b7298f86dd732b91edb84c2bd/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=bcdae749d017a08b7298f86dd732b91edb84c2bd", "patch": "@@ -416,7 +416,9 @@ is_replaceable_p (gimple stmt)\n     return false;\n \n   /* Without alias info we can't move around loads.  */\n-  if (gimple_references_memory_p (stmt) && !optimize)\n+  if (!optimize\n+      && gimple_assign_single_p (stmt)\n+      && !is_gimple_val (gimple_assign_rhs1 (stmt)))\n     return false;\n \n   /* Float expressions must go through memory if float-store is on.  */"}]}