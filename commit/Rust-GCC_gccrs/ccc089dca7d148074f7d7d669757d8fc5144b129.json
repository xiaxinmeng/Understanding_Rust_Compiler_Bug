{"sha": "ccc089dca7d148074f7d7d669757d8fc5144b129", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NjMDg5ZGNhN2QxNDgwNzRmN2Q3ZDY2OTc1N2Q4ZmM1MTQ0YjEyOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-08-26T09:21:18Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-08-26T09:21:18Z"}, "message": "re PR c/61271 (10 * possible coding error with logical not (!))\n\n\tPR c/61271\n\t* tree-vectorizer.h (LOOP_REQUIRES_VERSIONING_FOR_ALIGNMENT,\n\tLOOP_REQUIRES_VERSIONING_FOR_ALIAS): Wrap in parens.\n\nFrom-SVN: r214493", "tree": {"sha": "d0c65ce85206b187d40c7ab8654f0263a99b7f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0c65ce85206b187d40c7ab8654f0263a99b7f06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccc089dca7d148074f7d7d669757d8fc5144b129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc089dca7d148074f7d7d669757d8fc5144b129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc089dca7d148074f7d7d669757d8fc5144b129", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc089dca7d148074f7d7d669757d8fc5144b129/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b2282660d24cce8198352f39ab1566af332716e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b2282660d24cce8198352f39ab1566af332716e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b2282660d24cce8198352f39ab1566af332716e"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3da91ffe71d232d305a89f8ae9d27762b19622eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc089dca7d148074f7d7d669757d8fc5144b129/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc089dca7d148074f7d7d669757d8fc5144b129/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccc089dca7d148074f7d7d669757d8fc5144b129", "patch": "@@ -1,3 +1,9 @@\n+2014-08-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/61271\n+\t* tree-vectorizer.h (LOOP_REQUIRES_VERSIONING_FOR_ALIGNMENT,\n+\tLOOP_REQUIRES_VERSIONING_FOR_ALIAS): Wrap in parens.\n+\n 2014-08-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62175"}, {"sha": "95209bc6a51de7887bad5d712b76734120b569e8", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc089dca7d148074f7d7d669757d8fc5144b129/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc089dca7d148074f7d7d669757d8fc5144b129/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=ccc089dca7d148074f7d7d669757d8fc5144b129", "patch": "@@ -414,9 +414,9 @@ typedef struct _loop_vec_info {\n #define LOOP_VINFO_SCALAR_LOOP(L)\t   (L)->scalar_loop\n \n #define LOOP_REQUIRES_VERSIONING_FOR_ALIGNMENT(L) \\\n-  (L)->may_misalign_stmts.length () > 0\n+  ((L)->may_misalign_stmts.length () > 0)\n #define LOOP_REQUIRES_VERSIONING_FOR_ALIAS(L)     \\\n-  (L)->may_alias_ddrs.length () > 0\n+  ((L)->may_alias_ddrs.length () > 0)\n \n #define LOOP_VINFO_NITERS_KNOWN_P(L)          \\\n   (tree_fits_shwi_p ((L)->num_iters) && tree_to_shwi ((L)->num_iters) > 0)"}]}