{"sha": "3ec278de0b702714a39c50bac22956a981a2b616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VjMjc4ZGUwYjcwMjcxNGEzOWM1MGJhYzIyOTU2YTk4MWEyYjYxNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-09-29T17:41:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-09-29T17:41:47Z"}, "message": "Remove extra comma in comment.\n\nFrom-SVN: r71912", "tree": {"sha": "a4e29d1c16dc024ebfbfe380691d99496ba7d997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4e29d1c16dc024ebfbfe380691d99496ba7d997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ec278de0b702714a39c50bac22956a981a2b616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ec278de0b702714a39c50bac22956a981a2b616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ec278de0b702714a39c50bac22956a981a2b616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ec278de0b702714a39c50bac22956a981a2b616/comments", "author": null, "committer": null, "parents": [{"sha": "e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5012ba5ec6637f89f3d100821cc3fe78dfa9994"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "54458ef95ae1d911fc20771ffa5c1f73f845cf6c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ec278de0b702714a39c50bac22956a981a2b616/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ec278de0b702714a39c50bac22956a981a2b616/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=3ec278de0b702714a39c50bac22956a981a2b616", "patch": "@@ -6018,7 +6018,7 @@ fold (tree expr)\n \t\t\t\t    arg0));\n \t    }\n \n-\t  /* Fold (A & ~B) - (A & B) into (A ^ B) - B, , where B is\n+\t  /* Fold (A & ~B) - (A & B) into (A ^ B) - B, where B is\n \t     any power of 2 minus 1.  */\n \t  if (TREE_CODE (arg0) == BIT_AND_EXPR\n \t      && TREE_CODE (arg1) == BIT_AND_EXPR"}]}