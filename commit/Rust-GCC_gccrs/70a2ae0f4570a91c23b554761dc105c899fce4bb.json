{"sha": "70a2ae0f4570a91c23b554761dc105c899fce4bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhMmFlMGY0NTcwYTkxYzIzYjU1NDc2MWRjMTA1Yzg5OWZjZTRiYg==", "commit": {"author": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-12-01T17:24:57Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-12-01T17:24:57Z"}, "message": "Do not rewrite out of SSA scalar dependences crossing the limits of the scop.\n\n2010-11-22  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (handle_scalar_deps_crossing_scop_limits):\n\tNew.\n\t(rewrite_cross_bb_scalar_deps): Pass in the scop.  Call\n\thandle_scalar_deps_crossing_scop_limits.\n\t(rewrite_cross_bb_scalar_deps_out_of_ssa): Create an empty BB\n\tafter the scop.  Update call to rewrite_cross_bb_scalar_deps.\n\nFrom-SVN: r167347", "tree": {"sha": "1e74c7465e7dc5f474e6a3ed8b6f61fd9ad7e14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e74c7465e7dc5f474e6a3ed8b6f61fd9ad7e14e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a2ae0f4570a91c23b554761dc105c899fce4bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a2ae0f4570a91c23b554761dc105c899fce4bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a2ae0f4570a91c23b554761dc105c899fce4bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a2ae0f4570a91c23b554761dc105c899fce4bb/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8f91fcc343c32ab9441b8b4c41005351d65d0b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f91fcc343c32ab9441b8b4c41005351d65d0b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8f91fcc343c32ab9441b8b4c41005351d65d0b6"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "cd8f8368c67f6cc2e98b32f17004ac5d425383ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a2ae0f4570a91c23b554761dc105c899fce4bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a2ae0f4570a91c23b554761dc105c899fce4bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70a2ae0f4570a91c23b554761dc105c899fce4bb", "patch": "@@ -1,3 +1,12 @@\n+2010-12-01  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (handle_scalar_deps_crossing_scop_limits):\n+\tNew.\n+\t(rewrite_cross_bb_scalar_deps): Pass in the scop.  Call\n+\thandle_scalar_deps_crossing_scop_limits.\n+\t(rewrite_cross_bb_scalar_deps_out_of_ssa): Create an empty BB\n+\tafter the scop.  Update call to rewrite_cross_bb_scalar_deps.\n+\n 2010-12-01  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* sese.c (rename_uses): Call recompute_tree_invariant_for_addr_expr\n@@ -29,9 +38,9 @@\n \n \t* opts.c: Expand comment on tm.h include.\n \n-2010-12-01  Yao Qi  <yao@codesourcery.com> \n+2010-12-01  Yao Qi  <yao@codesourcery.com>\n \n-\t* config/arm/predicates.md (\"vfp_register_operand\"): Return true for \n+\t* config/arm/predicates.md (\"vfp_register_operand\"): Return true for\n \tVFP_D0_D7_REGS classes.\n \n 2010-12-01  Joseph Myers  <joseph@codesourcery.com>"}, {"sha": "08a48477d052317acc308dd0d696934375f5ba32", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a2ae0f4570a91c23b554761dc105c899fce4bb/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a2ae0f4570a91c23b554761dc105c899fce4bb/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=70a2ae0f4570a91c23b554761dc105c899fce4bb", "patch": "@@ -1,3 +1,12 @@\n+2010-11-22  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (handle_scalar_deps_crossing_scop_limits):\n+\tNew.\n+\t(rewrite_cross_bb_scalar_deps): Pass in the scop.  Call\n+\thandle_scalar_deps_crossing_scop_limits.\n+\t(rewrite_cross_bb_scalar_deps_out_of_ssa): Create an empty BB\n+\tafter the scop.  Update call to rewrite_cross_bb_scalar_deps.\n+\n 2010-11-22  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* sese.c (rename_uses): Call recompute_tree_invariant_for_addr_expr"}, {"sha": "1697e63038545b1fb0d87abf2f607f3a3930f457", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 52, "deletions": 2, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a2ae0f4570a91c23b554761dc105c899fce4bb/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a2ae0f4570a91c23b554761dc105c899fce4bb/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=70a2ae0f4570a91c23b554761dc105c899fce4bb", "patch": "@@ -2425,13 +2425,57 @@ rewrite_cross_bb_scalar_dependence (tree zero_dim_array, tree def, gimple use_st\n   update_stmt (use_stmt);\n }\n \n+/* For every definition DEF in the SCOP that is used outside the scop,\n+   insert a closing-scop definition in the basic block just after this\n+   SCOP.  */\n+\n+static void\n+handle_scalar_deps_crossing_scop_limits (scop_p scop, tree def, gimple stmt)\n+{\n+  tree var = create_tmp_reg (TREE_TYPE (def), NULL);\n+  tree new_name = make_ssa_name (var, stmt);\n+  bool needs_copy = false;\n+  use_operand_p use_p;\n+  imm_use_iterator imm_iter;\n+  gimple use_stmt;\n+  sese region = SCOP_REGION (scop);\n+\n+  FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, def)\n+    {\n+      if (!bb_in_sese_p (gimple_bb (use_stmt), region))\n+\t{\n+\t  FOR_EACH_IMM_USE_ON_STMT (use_p, imm_iter)\n+\t    {\n+\t      SET_USE (use_p, new_name);\n+\t    }\n+\t  update_stmt (use_stmt);\n+\t  needs_copy = true;\n+\t}\n+    }\n+\n+  /* Insert in the empty BB just after the scop a use of DEF such\n+     that the rewrite of cross_bb_scalar_dependences won't insert\n+     arrays everywhere else.  */\n+  if (needs_copy)\n+    {\n+      gimple assign = gimple_build_assign (new_name, def);\n+      gimple_stmt_iterator psi = gsi_after_labels (SESE_EXIT (region)->dest);\n+\n+      add_referenced_var (var);\n+      SSA_NAME_DEF_STMT (new_name) = assign;\n+      update_stmt (assign);\n+      gsi_insert_before (&psi, assign, GSI_SAME_STMT);\n+    }\n+}\n+\n /* Rewrite the scalar dependences crossing the boundary of the BB\n    containing STMT with an array.  Return true when something has been\n    changed.  */\n \n static bool\n-rewrite_cross_bb_scalar_deps (sese region, gimple_stmt_iterator *gsi)\n+rewrite_cross_bb_scalar_deps (scop_p scop, gimple_stmt_iterator *gsi)\n {\n+  sese region = SCOP_REGION (scop);\n   gimple stmt = gsi_stmt (*gsi);\n   imm_use_iterator imm_iter;\n   tree def;\n@@ -2472,6 +2516,8 @@ rewrite_cross_bb_scalar_deps (sese region, gimple_stmt_iterator *gsi)\n \n   def_bb = gimple_bb (stmt);\n \n+  handle_scalar_deps_crossing_scop_limits (scop, def, stmt);\n+\n   FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, def)\n     if (gimple_code (use_stmt) == GIMPLE_PHI\n \t&& (res = true))\n@@ -2511,14 +2557,18 @@ void\n rewrite_cross_bb_scalar_deps_out_of_ssa (scop_p scop)\n {\n   basic_block bb;\n+  basic_block exit;\n   gimple_stmt_iterator psi;\n   sese region = SCOP_REGION (scop);\n   bool changed = false;\n \n+  /* Create an extra empty BB after the scop.  */\n+  exit = split_edge (SESE_EXIT (region));\n+\n   FOR_EACH_BB (bb)\n     if (bb_in_sese_p (bb, region))\n       for (psi = gsi_start_bb (bb); !gsi_end_p (psi); gsi_next (&psi))\n-\tchanged |= rewrite_cross_bb_scalar_deps (region, &psi);\n+\tchanged |= rewrite_cross_bb_scalar_deps (scop, &psi);\n \n   if (changed)\n     {"}]}