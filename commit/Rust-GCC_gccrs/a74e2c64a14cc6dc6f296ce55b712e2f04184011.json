{"sha": "a74e2c64a14cc6dc6f296ce55b712e2f04184011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0ZTJjNjRhMTRjYzZkYzZmMjk2Y2U1NWI3MTJlMmYwNDE4NDAxMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-05-02T23:27:03Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-05-02T23:27:03Z"}, "message": "natCharacter.cc (Character::getType): Handle negative code points.\n\n\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=238755\n\t* java/lang/natCharacter.cc (Character::getType): Handle negative\n\tcode points.\n\t(Character::toLowerCase): Likewise.\n\t(Character::toUpperCase): Likewise.\n\t(Character::digit): Likewise.\n\t(Character::getNumericValue): Likewise.\n\t(Character::getDirectionality): Likewise.\n\t(Character::toTitleCase): Likewise.\n\nFrom-SVN: r124370", "tree": {"sha": "3c0a5c3cdf3e3ce58bc3c73fa45fba97764da564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c0a5c3cdf3e3ce58bc3c73fa45fba97764da564"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a74e2c64a14cc6dc6f296ce55b712e2f04184011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74e2c64a14cc6dc6f296ce55b712e2f04184011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74e2c64a14cc6dc6f296ce55b712e2f04184011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74e2c64a14cc6dc6f296ce55b712e2f04184011/comments", "author": null, "committer": null, "parents": [{"sha": "82fd6170a86a3eacac137022a935df27493dadf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82fd6170a86a3eacac137022a935df27493dadf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82fd6170a86a3eacac137022a935df27493dadf4"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "5c6ad81e1b342e8651a82272eecef3bebc9e4fbd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74e2c64a14cc6dc6f296ce55b712e2f04184011/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74e2c64a14cc6dc6f296ce55b712e2f04184011/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a74e2c64a14cc6dc6f296ce55b712e2f04184011", "patch": "@@ -1,3 +1,15 @@\n+2007-05-02  Tom Tromey  <tromey@redhat.com>\n+\n+\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=238755\n+\t* java/lang/natCharacter.cc (Character::getType): Handle negative\n+\tcode points.\n+\t(Character::toLowerCase): Likewise.\n+\t(Character::toUpperCase): Likewise.\n+\t(Character::digit): Likewise.\n+\t(Character::getNumericValue): Likewise.\n+\t(Character::getDirectionality): Likewise.\n+\t(Character::toTitleCase): Likewise.\n+\n 2007-04-30  Keith Seitz  <keiths@redhat.com>\n \n \t* interpret-run.cc (NEXT_INSN)[DEBUG]: Advance PC before"}, {"sha": "dea2086eb52b79daf32666383bc1e3b501eaf40d", "filename": "libjava/java/lang/natCharacter.cc", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74e2c64a14cc6dc6f296ce55b712e2f04184011/libjava%2Fjava%2Flang%2FnatCharacter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74e2c64a14cc6dc6f296ce55b712e2f04184011/libjava%2Fjava%2Flang%2FnatCharacter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatCharacter.cc?ref=a74e2c64a14cc6dc6f296ce55b712e2f04184011", "patch": "@@ -1,5 +1,5 @@\n /* java.lang.Character -- Wrapper class for char, and Unicode subsets\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2007 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -90,7 +90,7 @@ jint\n java::lang::Character::getType(jint codePoint)\n {\n   jint plane = codePoint >> 16;\n-  if (plane > 2 && plane != 14)\n+  if (plane < 0 || (plane > 2 && plane != 14))\n     {\n       if (plane > 14 && ((codePoint & 0xffff) < 0xfffe))\n         return (jint) PRIVATE_TYPE;\n@@ -112,7 +112,7 @@ jint\n java::lang::Character::toLowerCase(jint codePoint)\n {\n   jint plane = codePoint >> 16;\n-  if (plane > 2 && plane != 14)\n+  if (plane < 0 || (plane > 2 && plane != 14))\n     return codePoint;\n   return (lower[plane][readCodePoint(codePoint) >> 7]) + codePoint;\n }\n@@ -127,7 +127,7 @@ jint\n java::lang::Character::toUpperCase(jint codePoint)\n {\n   jint plane = codePoint >> 16;\n-  if (plane > 2 && plane != 14)\n+  if (plane < 0 || (plane > 2 && plane != 14))\n     return codePoint;\n   return (upper[plane][readCodePoint(codePoint) >> 7]) + codePoint;\n }\n@@ -147,7 +147,7 @@ java::lang::Character::toTitleCase(jint codePoint)\n {\n   // As of Unicode 4.0.0 no characters outside of plane 0 have titlecase\n   // mappings that are different from their uppercase mapping.\n-  if (codePoint < 0x10000)\n+  if (codePoint >= 0 && codePoint < 0x10000)\n     return toTitleCase((jchar)codePoint);\n   return toUpperCase(codePoint);\n }\n@@ -177,7 +177,7 @@ java::lang::Character::digit(jint codePoint, jint radix)\n     return (jint) -1;\n \n   jint plane = codePoint >> 16;\n-  if (plane > 2 && plane != 14)\n+  if (plane < 0 || (plane > 2 && plane != 14))\n     return UNASSIGNED_DIGIT;\n \n   jchar attr = readCodePoint(codePoint);\n@@ -207,7 +207,7 @@ jint\n java::lang::Character::getNumericValue(jint codePoint)\n {\n   jint plane = codePoint >> 16;\n-  if (plane > 2 && plane != 14)\n+  if (plane < 0 || (plane > 2 && plane != 14))\n     return UNASSIGNED_NUMERIC_VALUE;\n   jshort num = numValue[plane][readCodePoint(codePoint) >> 7];\n   if (num <= -3)\n@@ -225,13 +225,11 @@ jbyte\n java::lang::Character::getDirectionality(jint codePoint)\n {\n   jint plane = codePoint >> 16;\n-  if (plane > 2 && plane != 14)\n+  if (plane < 0 || (plane > 2 && plane != 14))\n     {\n       if (plane > 14 && ((codePoint & 0xffff) < 0xfffe))\n         return (jint) PRIVATE_DIRECTION;\n       return (jint) UNASSIGNED_DIRECTION;\n     }\n   return direction[plane][readCodePoint(codePoint) >> 7];\n }\n-\n-"}]}