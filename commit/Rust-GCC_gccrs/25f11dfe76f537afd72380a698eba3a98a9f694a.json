{"sha": "25f11dfe76f537afd72380a698eba3a98a9f694a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVmMTFkZmU3NmY1MzdhZmQ3MjM4MGE2OThlYmEzYTk4YTlmNjk0YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-15T19:11:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-17T08:14:16Z"}, "message": "[Ada] Do not generate useless length check for array initialization\n\n2020-06-17  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* checks.ads (Apply_Length_Check_On_Assignment): Declare.\n\t* checks.adb (Apply_Length_Check_On_Assignment): New procedure\n\tto apply a length check to an expression in an assignment.\n\t* exp_ch5.adb (Expand_Assign_Array): Call it instead of calling\n\tApply_Length_Check to generate a length check.\n\t* sem_ch5.adb (Analyze_Assignment): Likewise.", "tree": {"sha": "cf9cfcb7aa666bb999b9c1088413a33efe81af66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9cfcb7aa666bb999b9c1088413a33efe81af66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25f11dfe76f537afd72380a698eba3a98a9f694a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f11dfe76f537afd72380a698eba3a98a9f694a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25f11dfe76f537afd72380a698eba3a98a9f694a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f11dfe76f537afd72380a698eba3a98a9f694a/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf9087af1f963e52ed4f0d3b8594e2214bd7b312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9087af1f963e52ed4f0d3b8594e2214bd7b312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9087af1f963e52ed4f0d3b8594e2214bd7b312"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "43829516c56d844437420c53b0f3c0e5095823ee", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=25f11dfe76f537afd72380a698eba3a98a9f694a", "patch": "@@ -2220,6 +2220,34 @@ package body Checks is\n         (Expr, Target_Typ, Source_Typ, Do_Static => False);\n    end Apply_Length_Check;\n \n+   --------------------------------------\n+   -- Apply_Length_Check_On_Assignment --\n+   --------------------------------------\n+\n+   procedure Apply_Length_Check_On_Assignment\n+     (Expr       : Node_Id;\n+      Target_Typ : Entity_Id;\n+      Target     : Node_Id;\n+      Source_Typ : Entity_Id := Empty)\n+   is\n+      Assign : constant Node_Id := Parent (Target);\n+\n+   begin\n+      --  No check is needed for the initialization of an object whose\n+      --  nominal subtype is unconstrained.\n+\n+      if Is_Constr_Subt_For_U_Nominal (Target_Typ)\n+        and then Nkind (Parent (Assign)) = N_Freeze_Entity\n+        and then Is_Entity_Name (Target)\n+        and then Entity (Target) = Entity (Parent (Assign))\n+      then\n+         return;\n+      end if;\n+\n+      Apply_Selected_Length_Checks\n+        (Expr, Target_Typ, Source_Typ, Do_Static => False);\n+   end Apply_Length_Check_On_Assignment;\n+\n    -------------------------------------\n    -- Apply_Parameter_Aliasing_Checks --\n    -------------------------------------"}, {"sha": "79657c35c31f5190f583d13c16ceeadb39c30e3f", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=25f11dfe76f537afd72380a698eba3a98a9f694a", "patch": "@@ -569,6 +569,15 @@ package Checks is\n    --  processes it as described above for consistency with the other routines\n    --  in this section.\n \n+   procedure Apply_Length_Check_On_Assignment\n+     (Expr       : Node_Id;\n+      Target_Typ : Entity_Id;\n+      Target     : Node_Id;\n+      Source_Typ : Entity_Id := Empty);\n+   --  Similar to Apply_Length_Check, but takes the target of an assignment for\n+   --  which the check is to be done. Used to filter out specific cases where\n+   --  the check is superfluous.\n+\n    procedure Apply_Range_Check\n      (Expr       : Node_Id;\n       Target_Typ : Entity_Id;"}, {"sha": "fd51dfa87047133e2604e309d20ed39a1ee74d13", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=25f11dfe76f537afd72380a698eba3a98a9f694a", "patch": "@@ -441,7 +441,7 @@ package body Exp_Ch5 is\n       --  respect to the right-hand side as given, not a possible underlying\n       --  renamed object, since this would generate incorrect extra checks.\n \n-      Apply_Length_Check (Rhs, L_Type);\n+      Apply_Length_Check_On_Assignment (Rhs, L_Type, Lhs);\n \n       --  We start by assuming that the move can be done in either direction,\n       --  i.e. that the two sides are completely disjoint."}, {"sha": "36633cb198a932b95ad0608b917051707faa30b9", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25f11dfe76f537afd72380a698eba3a98a9f694a/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=25f11dfe76f537afd72380a698eba3a98a9f694a", "patch": "@@ -995,15 +995,15 @@ package body Sem_Ch5 is\n         and then (Nkind (Rhs) /= N_Function_Call\n                    or else Nkind (N) /= N_Block_Statement)\n       then\n-         --  Assignment verifies that the length of the Lsh and Rhs are equal,\n+         --  Assignment verifies that the length of the Lhs and Rhs are equal,\n          --  but of course the indexes do not have to match. If the right-hand\n          --  side is a type conversion to an unconstrained type, a length check\n          --  is performed on the expression itself during expansion. In rare\n          --  cases, the redundant length check is computed on an index type\n          --  with a different representation, triggering incorrect code in the\n          --  back end.\n \n-         Apply_Length_Check (Rhs, Etype (Lhs));\n+         Apply_Length_Check_On_Assignment (Rhs, Etype (Lhs), Lhs);\n \n       else\n          --  Discriminant checks are applied in the course of expansion"}]}