{"sha": "159840cb8aef55bf2f4068f109ad6f987f31abeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5ODQwY2I4YWVmNTViZjJmNDA2OGYxMDlhZDZmOTg3ZjMxYWJlYg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-10-30T12:48:52Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-10-30T12:48:52Z"}, "message": "re PR libfortran/20179 (cannot mix C and Fortran I/O)\n\n\tPR libfortran/20179\n\t* io/unix.c (flush_if_preconnected): New function.\n\t* io/io.h: Add prototype for flush_if_preconnected.\n\t* io/transfer.c (data_transfer_init): Use flush_if_preconnected\n\tto workaround buggy mixed C-Fortran code.\n\n\t* gfortran.dg/mixed_io_1.f90: New test.\n\t* gfortran.dg/mixed_io_1.c: New file.\n\nFrom-SVN: r106017", "tree": {"sha": "bc65843092bd8c38d837724dae7a759a0d4c5e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc65843092bd8c38d837724dae7a759a0d4c5e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/159840cb8aef55bf2f4068f109ad6f987f31abeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159840cb8aef55bf2f4068f109ad6f987f31abeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/159840cb8aef55bf2f4068f109ad6f987f31abeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159840cb8aef55bf2f4068f109ad6f987f31abeb/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d519038a0354f983534037fd9a7d460421e4fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d519038a0354f983534037fd9a7d460421e4fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d519038a0354f983534037fd9a7d460421e4fd0"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "802b4c680db14ab315cacc8a0faeaf5e2f82f100", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -1,3 +1,13 @@\n+2005-10-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20179\n+\t* gfortran.dg/mixed_io_1.f90: New test.\n+\t* gfortran.dg/mixed_io_1.c: New file.\n+\n+2005-10-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* gfortran.dg/malloc_free_1.f90: New test.\n+\n 2005-10-29  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.dg/nested-func-4.c: Require profiling -pg."}, {"sha": "0f8d9cdcfbfea7ed8ce76ca5fefc2d47809e9c66", "filename": "gcc/testsuite/gfortran.dg/mixed_io_1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.c?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -0,0 +1,4 @@\n+#include <stdio.h>\n+void cio_(void){\n+  printf(\"12345\");\n+}"}, {"sha": "0dc985cbbf6dc210fe427b8c693115462e9753d2", "filename": "gcc/testsuite/gfortran.dg/mixed_io_1.f90", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmixed_io_1.f90?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -0,0 +1,5 @@\n+! { dg-do run }\n+! { dg-additional-sources mixed_io_1.c }\n+      call cio\n+      write(*,\"(A)\") '6789' ! { dg-output \"123456789\" }\n+      end"}, {"sha": "0ea6adbb71244e9210dd634fc88e7fdaf31ebaab", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -1,3 +1,11 @@\n+2005-10-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20179\n+\t* io/unix.c (flush_if_preconnected): New function.\n+\t* io/io.h: Add prototype for flush_if_preconnected.\n+\t* io/transfer.c (data_transfer_init): Use flush_if_preconnected\n+\tto workaround buggy mixed C-Fortran code.\n+\n 2005-10-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* Makefile.am: Add intrinsics/malloc.c file."}, {"sha": "53a21b71f988974262d43590b8bd070f552a862b", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -505,6 +505,9 @@ internal_proto(is_seekable);\n extern int is_preconnected (stream *);\n internal_proto(is_preconnected);\n \n+extern void flush_if_preconnected (stream *);\n+internal_proto(flush_if_preconnected);\n+\n extern void empty_internal_buffer(stream *);\n internal_proto(empty_internal_buffer);\n "}, {"sha": "0e1e099d00acbeab74d13fe49c1efb3c211ad568", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -1379,6 +1379,9 @@ data_transfer_init (int read_flag)\n       && current_unit->last_record == 0 && !is_preconnected(current_unit->s))\n \tstruncate(current_unit->s);\n \n+  /* Bugware for badly written mixed C-Fortran I/O.  */\n+  flush_if_preconnected(current_unit->s);\n+\n   current_unit->mode = g.mode;\n \n   /* Set the initial value of flags.  */"}, {"sha": "0fe8c4bad84cd9b723a6bde278709a5a3ef1a80c", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159840cb8aef55bf2f4068f109ad6f987f31abeb/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=159840cb8aef55bf2f4068f109ad6f987f31abeb", "patch": "@@ -228,6 +228,23 @@ is_preconnected (stream * s)\n     return 0;\n }\n \n+/* If the stream corresponds to a preconnected unit, we flush the\n+   corresponding C stream.  This is bugware for mixed C-Fortran codes\n+   where the C code doesn't flush I/O before returning.  */\n+void\n+flush_if_preconnected (stream * s)\n+{\n+  int fd;\n+\n+  fd = ((unix_stream *) s)->fd;\n+  if (fd == STDIN_FILENO)\n+    fflush (stdin);\n+  else if (fd == STDOUT_FILENO)\n+    fflush (stdout);\n+  else if (fd == STDERR_FILENO)\n+    fflush (stderr);\n+}\n+\n \n /* Reset a stream after reading/writing. Assumes that the buffers have\n    been flushed.  */"}]}