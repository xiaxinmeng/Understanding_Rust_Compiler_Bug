{"sha": "30ebb1146dff85d153f99f89b9f479d4e479fd20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBlYmIxMTQ2ZGZmODVkMTUzZjk5Zjg5YjlmNDc5ZDRlNDc5ZmQyMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:07:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:07:33Z"}, "message": "[multiple changes]\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Loop_Statement): Add warning for identical\n\tinner/outer ranges.\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads: Change terminology \"present\" to \"defined\" in talking\n\tabout whether a given field is defined for a given entity kind.\n\n2012-10-29  Bob Duff  <duff@adacore.com>\n\n\t* atree.ads: Minor comment fix.\n\n2012-10-29  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch13.adb (Replace_Type_Reference): Set_Comes_From_Source.\n\tOtherwise, the node is ignored by ASIS.\n\t* sem_ch5.adb: Minor reformatting.\n\n2012-10-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_attr.adb, exp_dist.adb, exp_dist.ads (Build_To_Any_Call): Pass\n\tan explicit Loc parameter to set the source location of generated\n\tnodes.\n\n2012-10-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Build_Task_Activation_Call): Do nothing on\n\trestricted profile.\n\t* bindgen.adb (System_Tasking_Restricted_Stages_Used): New variable.\n\t(Gen_Adainit): Declare and call Activate_Tasks when the above variable\n\tis set.\n\t(Resolve_Binder_Options): Set the variable.\n\t* rtsfind.ads (RE_Activate_Restricted_Tasks): Removed (now unused).\n\t* s-tarest.adb (Tasks_Activation_Chain): New variable.\n\t(Activate_Restricted_Tasks): Removed, and replaced by ...\n\t(Activate_Tasks): New procedure, to activate all tasks at\n\tthe end of elaboration.\n\t(Create_Restricted_Tasks): Chain parameter is now unreferenced.\tPut\n\tthe created task on the Tasks_Activation_Chain list.\n\t* s-tarest.ads (Activate_Restricted_Tasks): Removed.\n\t(Activate_Tasks): Added.\n\n2012-10-29  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_res.adb (Resolve_If_Expression): Compare subtype of the 'then'\n\texpression against the subtype of the expression rather than comparing\n\tbase types, same as is already done for the 'else' expression.\n\nFrom-SVN: r192918", "tree": {"sha": "d3a7c1afcedd8f83c93b2ab9f79fc82cf1c07d50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3a7c1afcedd8f83c93b2ab9f79fc82cf1c07d50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30ebb1146dff85d153f99f89b9f479d4e479fd20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ebb1146dff85d153f99f89b9f479d4e479fd20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ebb1146dff85d153f99f89b9f479d4e479fd20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ebb1146dff85d153f99f89b9f479d4e479fd20/comments", "author": null, "committer": null, "parents": [{"sha": "2a8fcd43bd18b2b3a138c2a0f9607adaca668722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8fcd43bd18b2b3a138c2a0f9607adaca668722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a8fcd43bd18b2b3a138c2a0f9607adaca668722"}], "stats": {"total": 1155, "additions": 648, "deletions": 507}, "files": [{"sha": "9a5a99d79c936170d2f0dfd39bb41ef445e87add", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -1,3 +1,53 @@\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Loop_Statement): Add warning for identical\n+\tinner/outer ranges.\n+\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads: Change terminology \"present\" to \"defined\" in talking\n+\tabout whether a given field is defined for a given entity kind.\n+\n+2012-10-29  Bob Duff  <duff@adacore.com>\n+\n+\t* atree.ads: Minor comment fix.\n+\n+2012-10-29  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch13.adb (Replace_Type_Reference): Set_Comes_From_Source.\n+\tOtherwise, the node is ignored by ASIS.\n+\t* sem_ch5.adb: Minor reformatting.\n+\n+2012-10-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_attr.adb, exp_dist.adb, exp_dist.ads (Build_To_Any_Call): Pass\n+\tan explicit Loc parameter to set the source location of generated\n+\tnodes.\n+\n+2012-10-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Task_Activation_Call): Do nothing on\n+\trestricted profile.\n+\t* bindgen.adb (System_Tasking_Restricted_Stages_Used): New variable.\n+\t(Gen_Adainit): Declare and call Activate_Tasks when the above variable\n+\tis set.\n+\t(Resolve_Binder_Options): Set the variable.\n+\t* rtsfind.ads (RE_Activate_Restricted_Tasks): Removed (now unused).\n+\t* s-tarest.adb (Tasks_Activation_Chain): New variable.\n+\t(Activate_Restricted_Tasks): Removed, and replaced by ...\n+\t(Activate_Tasks): New procedure, to activate all tasks at\n+\tthe end of elaboration.\n+\t(Create_Restricted_Tasks): Chain parameter is now unreferenced.\tPut\n+\tthe created task on the Tasks_Activation_Chain list.\n+\t* s-tarest.ads (Activate_Restricted_Tasks): Removed.\n+\t(Activate_Tasks): Added.\n+\n+2012-10-29  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_res.adb (Resolve_If_Expression): Compare subtype of the 'then'\n+\texpression against the subtype of the expression rather than comparing\n+\tbase types, same as is already done for the 'else' expression.\n+\n 2012-10-29  Steve Baird  <baird@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): If CodePeer_Mode"}, {"sha": "305ef9f3978ee3e02aa92207ffff774ef8feed6b", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -767,7 +767,7 @@ package Atree is\n    --  Note that this routine is very rarely used, since usually the\n    --  default mechanism provided sets the right value, but in some\n    --  unusual cases, the value needs to be reset (e.g. when a source\n-   --  node is copied, and the copy must not have Comes_From_Source set.\n+   --  node is copied, and the copy must not have Comes_From_Source set).\n \n    procedure Set_Has_Aspects (N : Node_Id; Val : Boolean := True);\n    pragma Inline (Set_Has_Aspects);"}, {"sha": "36c41969860e90a56f76de5fffbdc61b3102edac", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -78,6 +78,12 @@ package body Bindgen is\n    --  disallow the creation of new dispatching domains just before calling\n    --  the main procedure from the environment task.\n \n+   System_Tasking_Restricted_Stages_Used : Boolean := False;\n+   --  Flag indicating whether the unit System.Tasking.Restricted.Stages is in\n+   --  the closure of the partition. This is set by Resolve_Binder_Options,\n+   --  and it used to call a routine to active all the tasks at the end of\n+   --  the elaboration.\n+\n    Lib_Final_Built : Boolean := False;\n    --  Flag indicating whether the finalize_library rountine has been built\n \n@@ -534,6 +540,12 @@ package body Bindgen is\n             WBI (\"\");\n          end if;\n \n+         if System_Tasking_Restricted_Stages_Used then\n+            WBI (\"      procedure Activate_Tasks;\");\n+            WBI (\"      pragma Import (C, Activate_Tasks,\" &\n+                 \" \"\"__gnat_activate_tasks\"\");\");\n+         end if;\n+\n          WBI (\"   begin\");\n \n          if Main_Priority /= No_Main_Priority then\n@@ -625,6 +637,14 @@ package body Bindgen is\n          WBI (\"      pragma Import (C, Handler_Installed, \" &\n               \"\"\"__gnat_handler_installed\"\");\");\n \n+         --  Import task activation procedure for ravenscar\n+\n+         if System_Tasking_Restricted_Stages_Used then\n+            WBI (\"      procedure Activate_Tasks;\");\n+            WBI (\"      pragma Import (C, Activate_Tasks,\" &\n+                 \" \"\"__gnat_activate_tasks\"\");\");\n+         end if;\n+\n          --  The import of the soft link which performs library-level object\n          --  finalization is not needed for VM targets; regular Ada is used in\n          --  that case. For restricted run-time libraries (ZFP and Ravenscar)\n@@ -945,6 +965,10 @@ package body Bindgen is\n          WBI (\"      Freeze_Dispatching_Domains;\");\n       end if;\n \n+      if System_Tasking_Restricted_Stages_Used then\n+         WBI (\"      Activate_Tasks;\");\n+      end if;\n+\n       --  Case of main program is CIL function or procedure\n \n       if VM_Target = CLI_Target\n@@ -2863,6 +2887,12 @@ package body Bindgen is\n          if OpenVMS_On_Target and then Name_Buffer (1 .. 5) = \"dec%s\" then\n             With_DECGNAT := True;\n          end if;\n+\n+         --  Likewise for the use of restricted tasking\n+\n+         if Name_Buffer (1 .. 34) = \"system.tasking.restricted.stages%s\" then\n+            System_Tasking_Restricted_Stages_Used := True;\n+         end if;\n       end loop;\n    end Resolve_Binder_Options;\n "}, {"sha": "08fba5a80c9bd4130d141d5c3a43c311c094820a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 431, "deletions": 430, "changes": 861, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20"}, {"sha": "1b50d293f8c8af45ef225642f424bbfc3b89c823", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -5141,7 +5141,8 @@ package body Exp_Attr is\n       begin\n          Rewrite (N,\n            Build_To_Any_Call\n-             (Convert_To (P_Type,\n+             (Loc,\n+              Convert_To (P_Type,\n               Relocate_Node (First (Exprs))), Decls));\n          Insert_Actions (N, Decls);\n          Analyze_And_Resolve (N, RTE (RE_Any));"}, {"sha": "af2e3e7f37097baebf7e741f51a6631fbd07baf4", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -4817,6 +4817,13 @@ package body Exp_Ch9 is\n       P     : Node_Id;\n \n    begin\n+      --  On restricted profile, all the tasks will be activated at the end\n+      --  of the elaboration (Sequential elaboration policy).\n+\n+      if Restricted_Profile then\n+         return;\n+      end if;\n+\n       --  Get the activation chain entity. Except in the case of a package\n       --  body, this is in the node that was passed. For a package body, we\n       --  have to find the corresponding package declaration node.\n@@ -4835,11 +4842,7 @@ package body Exp_Ch9 is\n       end if;\n \n       if Present (Chain) then\n-         if Restricted_Profile then\n-            Name := New_Reference_To (RTE (RE_Activate_Restricted_Tasks), Loc);\n-         else\n-            Name := New_Reference_To (RTE (RE_Activate_Tasks), Loc);\n-         end if;\n+         Name := New_Reference_To (RTE (RE_Activate_Tasks), Loc);\n \n          Call :=\n            Make_Procedure_Call_Statement (Loc,"}, {"sha": "cf8243e9ca7d79ca8ea1997cb054319ef738b76b", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -803,12 +803,14 @@ package body Exp_Dist is\n          --  the declaration and entity for the newly-created function.\n \n          function Build_To_Any_Call\n-           (N     : Node_Id;\n+           (Loc   : Source_Ptr;\n+            N     : Node_Id;\n             Decls : List_Id) return Node_Id;\n          --  Build call to To_Any attribute function with expression as actual\n-         --  parameter. Decls is the declarations list for an appropriate\n-         --  enclosing scope of the point where the call will be inserted; if\n-         --  the To_Any attribute for Typ needs to be generated at this point,\n+         --  parameter. Loc is the reference location ofr generated nodes,\n+         --  Decls is the declarations list for an appropriate enclosing scope\n+         --  of the point where the call will be inserted; if the To_Any\n+         --  attribute for the type of N needs to be generated at this point,\n          --  its declaration is appended to Decls.\n \n          procedure Build_To_Any_Function\n@@ -879,7 +881,8 @@ package body Exp_Dist is\n      renames PolyORB_Support.Helpers.Build_From_Any_Call;\n \n    function Build_To_Any_Call\n-     (N     : Node_Id;\n+     (Loc   : Source_Ptr;\n+      N     : Node_Id;\n       Decls : List_Id) return Node_Id\n      renames PolyORB_Support.Helpers.Build_To_Any_Call;\n \n@@ -6562,7 +6565,7 @@ package body Exp_Dist is\n              Object_Definition   => New_Occurrence_Of (RTE (RE_Any), Loc),\n              Expression          =>\n                PolyORB_Support.Helpers.Build_To_Any_Call\n-                 (RACW_Parameter, No_List)));\n+                 (Loc, RACW_Parameter, No_List)));\n \n          Statements := New_List (\n            Make_Procedure_Call_Statement (Loc,\n@@ -7362,7 +7365,7 @@ package body Exp_Dist is\n                      --  the first one.\n \n                      Expr := PolyORB_Support.Helpers.Build_To_Any_Call\n-                               (Actual_Parameter, Decls);\n+                               (Loc, Actual_Parameter, Decls);\n \n                   else\n                      Expr := Make_Function_Call (Loc,\n@@ -7448,7 +7451,7 @@ package body Exp_Dist is\n                         New_Occurrence_Of (RTE (RE_Any), Loc),\n                       Expression          =>\n                         PolyORB_Support.Helpers.Build_To_Any_Call\n-                          (Parameter_Exp, Decls)));\n+                          (Loc, Parameter_Exp, Decls)));\n \n                   Append_To (Extra_Formal_Statements,\n                     Add_Parameter_To_NVList (Loc,\n@@ -7934,7 +7937,7 @@ package body Exp_Dist is\n                       Parameter_Associations => New_List (\n                         New_Occurrence_Of (Any, Loc),\n                         PolyORB_Support.Helpers.Build_To_Any_Call\n-                          (New_Occurrence_Of (Object, Loc), Decls))));\n+                          (Loc, New_Occurrence_Of (Object, Loc), Decls))));\n                end if;\n \n                --  For RACW controlling formals, the Etyp of Object is always\n@@ -8094,7 +8097,7 @@ package body Exp_Dist is\n                    Parameter_Associations => New_List (\n                      New_Occurrence_Of (Request_Parameter, Loc),\n                      PolyORB_Support.Helpers.Build_To_Any_Call\n-                       (New_Occurrence_Of (Result, Loc), Decls))));\n+                       (Loc, New_Occurrence_Of (Result, Loc), Decls))));\n \n                --  A DSA function does not have out or inout arguments\n             end;\n@@ -9219,11 +9222,10 @@ package body Exp_Dist is\n          -----------------------\n \n          function Build_To_Any_Call\n-           (N     : Node_Id;\n+           (Loc   : Source_Ptr;\n+            N     : Node_Id;\n             Decls : List_Id) return Node_Id\n          is\n-            Loc : constant Source_Ptr := Sloc (N);\n-\n             Typ    : Entity_Id := Etype (N);\n             U_Type : Entity_Id;\n             C_Type : Entity_Id;\n@@ -9463,7 +9465,8 @@ package body Exp_Dist is\n                                 (Rt_Type,\n                                  New_Occurrence_Of (Expr_Parameter, Loc));\n                begin\n-                  Set_Expression (Any_Decl, Build_To_Any_Call (Expr, Decls));\n+                  Set_Expression (Any_Decl,\n+                    Build_To_Any_Call (Loc, Expr, Decls));\n                end;\n \n             elsif Is_Record_Type (Typ) and then not Is_Tagged_Type (Typ) then\n@@ -9479,7 +9482,7 @@ package body Exp_Dist is\n \n                   begin\n                      Set_Expression\n-                       (Any_Decl, Build_To_Any_Call (Expr, Decls));\n+                       (Any_Decl, Build_To_Any_Call (Loc, Expr, Decls));\n                   end;\n \n                --  Comment needed here (and label on declare block ???)\n@@ -9535,7 +9538,7 @@ package body Exp_Dist is\n                                    RTE (RE_Add_Aggregate_Element), Loc),\n                                Parameter_Associations => New_List (\n                                  New_Occurrence_Of (Container, Loc),\n-                                 Build_To_Any_Call (Field_Ref, Decls))));\n+                                 Build_To_Any_Call (Loc, Field_Ref, Decls))));\n \n                         else\n                            --  A variant part\n@@ -9660,7 +9663,8 @@ package body Exp_Dist is\n                                       Parameter_Associations => New_List (\n                                         New_Occurrence_Of (Union_Any, Loc),\n                                           Build_To_Any_Call\n-                                            (Make_Discriminant_Reference,\n+                                            (Loc,\n+                                             Make_Discriminant_Reference,\n                                              Block_Decls))));\n \n                                  --  Populate inner struct aggregate\n@@ -9761,7 +9765,8 @@ package body Exp_Dist is\n                                   Choices => New_List (\n                                     Make_Integer_Literal (Loc, Counter)),\n                                   Expression =>\n-                                    Build_To_Any_Call (Discriminant, Decls)));\n+                                    Build_To_Any_Call (Loc,\n+                                      Discriminant, Decls)));\n                            end;\n \n                            Counter := Counter + 1;\n@@ -9850,7 +9855,7 @@ package body Exp_Dist is\n                      if Etype (Datum) = RTE (RE_Any) then\n                         Element_Any := Datum;\n                      else\n-                        Element_Any := Build_To_Any_Call (Datum, Decls);\n+                        Element_Any := Build_To_Any_Call (Loc, Datum, Decls);\n                      end if;\n \n                      Append_To (Stmts,\n@@ -9889,7 +9894,7 @@ package body Exp_Dist is\n                                 RTE (RE_Add_Aggregate_Element), Loc),\n                             Parameter_Associations => New_List (\n                               New_Occurrence_Of (Any, Loc),\n-                              Build_To_Any_Call (\n+                              Build_To_Any_Call (Loc,\n                                 OK_Convert_To (Etype (Index),\n                                   Make_Attribute_Reference (Loc,\n                                     Prefix         =>\n@@ -9910,7 +9915,7 @@ package body Exp_Dist is\n                --  Integer types\n \n                Set_Expression (Any_Decl,\n-                 Build_To_Any_Call (\n+                 Build_To_Any_Call (Loc,\n                    OK_Convert_To (\n                      Find_Numeric_Representation (Typ),\n                      New_Occurrence_Of (Expr_Parameter, Loc)),\n@@ -10454,7 +10459,7 @@ package body Exp_Dist is\n \n                                        Set_Etype (Expr, Disc_Type);\n                                        Append_To (Union_TC_Params,\n-                                         Build_To_Any_Call (Expr, Decls));\n+                                         Build_To_Any_Call (Loc, Expr, Decls));\n \n                                        Add_Params_For_Variant_Components;\n                                        J := J + Uint_1;\n@@ -10495,7 +10500,7 @@ package body Exp_Dist is\n                                  begin\n                                     Set_Etype (Exp, Disc_Type);\n                                     Append_To (Union_TC_Params,\n-                                      Build_To_Any_Call (Exp, Decls));\n+                                      Build_To_Any_Call (Loc, Exp, Decls));\n                                  end;\n \n                                  Add_Params_For_Variant_Components;\n@@ -10509,7 +10514,7 @@ package body Exp_Dist is\n                                             New_Copy_Tree (Choice);\n                                  begin\n                                     Append_To (Union_TC_Params,\n-                                      Build_To_Any_Call (Exp, Decls));\n+                                      Build_To_Any_Call (Loc, Exp, Decls));\n                                  end;\n \n                                  Add_Params_For_Variant_Components;\n@@ -10679,7 +10684,7 @@ package body Exp_Dist is\n                      if Constrained then\n                         Inner_TypeCode := Make_Constructed_TypeCode\n                           (RTE (RE_TC_Array), New_List (\n-                            Build_To_Any_Call (\n+                            Build_To_Any_Call (Loc,\n                               OK_Convert_To (RTE (RE_Unsigned_32),\n                                 Make_Attribute_Reference (Loc,\n                                   Prefix => New_Occurrence_Of (Typ, Loc),\n@@ -10688,7 +10693,7 @@ package body Exp_Dist is\n                                     Make_Integer_Literal (Loc,\n                                       Intval => Ndim - J + 1)))),\n                               Decls),\n-                            Build_To_Any_Call (Inner_TypeCode, Decls)));\n+                            Build_To_Any_Call (Loc, Inner_TypeCode, Decls)));\n \n                      else\n                         --  Unconstrained case: add low bound for each\n@@ -10705,11 +10710,11 @@ package body Exp_Dist is\n \n                         Inner_TypeCode := Make_Constructed_TypeCode\n                           (RTE (RE_TC_Sequence), New_List (\n-                            Build_To_Any_Call (\n+                            Build_To_Any_Call (Loc,\n                               OK_Convert_To (RTE (RE_Unsigned_32),\n                                 Make_Integer_Literal (Loc, 0)),\n                               Decls),\n-                            Build_To_Any_Call (Inner_TypeCode, Decls)));\n+                            Build_To_Any_Call (Loc, Inner_TypeCode, Decls)));\n                      end if;\n                   end loop;\n "}, {"sha": "a0bb6c113db7aef48e21c88955667692590051cc", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -144,13 +144,14 @@ package Exp_Dist is\n    --  declaration is appended to Decls.\n \n    function Build_To_Any_Call\n-     (N     : Node_Id;\n+     (Loc   : Source_Ptr;\n+      N     : Node_Id;\n       Decls : List_Id) return Node_Id;\n    --  Build call to To_Any attribute function with expression as actual\n-   --  parameter. Decls is the declarations list for an appropriate\n-   --  enclosing scope of the point where the call will be inserted; if\n-   --  the To_Any attribute for Typ needs to be generated at this point,\n-   --  its declaration is appended to Decls.\n+   --  parameter. Loc is the reference location for generated nodes, Decls is\n+   --  the declarations list for an appropriate enclosing scope of the point\n+   --  where the call will be inserted; if the To_Any attribute for Typ needs\n+   --  to be generated at this point, its declaration is appended to Decls.\n \n    function Build_TypeCode_Call\n      (Loc   : Source_Ptr;"}, {"sha": "0ffaea3d9f832138023f092795617500d3f9359f", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -1756,7 +1756,6 @@ package Rtsfind is\n      RE_Timed_Task_Entry_Call,           -- System.Tasking.Rendezvous\n      RE_Timed_Selective_Wait,            -- System.Tasking.Rendezvous\n \n-     RE_Activate_Restricted_Tasks,       -- System.Tasking.Restricted.Stages\n      RE_Complete_Restricted_Activation,  -- System.Tasking.Restricted.Stages\n      RE_Create_Restricted_Task,          -- System.Tasking.Restricted.Stages\n      RE_Complete_Restricted_Task,        -- System.Tasking.Restricted.Stages\n@@ -3042,7 +3041,6 @@ package Rtsfind is\n      RE_Timed_Task_Entry_Call            => System_Tasking_Rendezvous,\n      RE_Timed_Selective_Wait             => System_Tasking_Rendezvous,\n \n-     RE_Activate_Restricted_Tasks        => System_Tasking_Restricted_Stages,\n      RE_Complete_Restricted_Activation   => System_Tasking_Restricted_Stages,\n      RE_Create_Restricted_Task           => System_Tasking_Restricted_Stages,\n      RE_Complete_Restricted_Task         => System_Tasking_Restricted_Stages,"}, {"sha": "1ff9b86ba075f3beb46ad2ecfc02634bc9205e98", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -70,6 +70,9 @@ package body System.Tasking.Restricted.Stages is\n    use Task_Primitives.Operations;\n    use Task_Info;\n \n+   Tasks_Activation_Chain : Task_Id;\n+   --  Chain of all the tasks to activate\n+\n    Global_Task_Lock : aliased System.Task_Primitives.RTS_Lock;\n    --  This is a global lock; it is used to execute in mutual exclusion\n    --  from all other tasks. It is only used by Task_Lock and Task_Unlock.\n@@ -298,19 +301,17 @@ package body System.Tasking.Restricted.Stages is\n    -- Restricted GNARLI --\n    -----------------------\n \n-   -------------------------------\n-   -- Activate_Restricted_Tasks --\n-   -------------------------------\n+   --------------------\n+   -- Activate_Tasks --\n+   --------------------\n \n    --  Note that locks of activator and activated task are both locked here.\n    --  This is necessary because C.State and Self.Wait_Count have to be\n    --  synchronized. This is safe from deadlock because the activator is always\n    --  created before the activated task. That satisfies our\n    --  in-order-of-creation ATCB locking policy.\n \n-   procedure Activate_Restricted_Tasks\n-     (Chain_Access : Activation_Chain_Access)\n-   is\n+   procedure Activate_Tasks is\n       Self_ID       : constant Task_Id := STPO.Self;\n       C             : Task_Id;\n       Activate_Prio : System.Any_Priority;\n@@ -332,8 +333,7 @@ package body System.Tasking.Restricted.Stages is\n       --  Activate all the tasks in the chain. Creation of the thread of\n       --  control was deferred until activation. So create it now.\n \n-      C := Chain_Access.T_ID;\n-\n+      C := Tasks_Activation_Chain;\n       while C /= null loop\n          if C.Common.State /= Terminated then\n             pragma Assert (C.Common.State = Unactivated);\n@@ -384,8 +384,8 @@ package body System.Tasking.Restricted.Stages is\n \n       --  Remove the tasks from the chain\n \n-      Chain_Access.T_ID := null;\n-   end Activate_Restricted_Tasks;\n+      Tasks_Activation_Chain := null;\n+   end Activate_Tasks;\n \n    ------------------------------------\n    -- Complete_Restricted_Activation --\n@@ -466,6 +466,8 @@ package body System.Tasking.Restricted.Stages is\n       Task_Image    : String;\n       Created_Task  : Task_Id)\n    is\n+      pragma Unreferenced (Chain);\n+\n       Self_ID       : constant Task_Id := STPO.Self;\n       Base_Priority : System.Any_Priority;\n       Base_CPU      : System.Multiprocessors.CPU_Range;\n@@ -558,8 +560,8 @@ package body System.Tasking.Restricted.Stages is\n       --  may be used by the operation of Ada code within the task.\n \n       SSL.Create_TSD (Created_Task.Common.Compiler_Data);\n-      Created_Task.Common.Activation_Link := Chain.T_ID;\n-      Chain.T_ID := Created_Task;\n+      Created_Task.Common.Activation_Link := Tasks_Activation_Chain;\n+      Tasks_Activation_Chain := Created_Task;\n    end Create_Restricted_Task;\n \n    ---------------------------"}, {"sha": "9b52b619f38a675139dd14dd4e0d6e82807936c3", "filename": "gcc/ada/s-tarest.ads", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fs-tarest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fs-tarest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.ads?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -175,20 +175,11 @@ package System.Tasking.Restricted.Stages is\n    --\n    --  This procedure can raise Storage_Error if the task creation fails\n \n-   procedure Activate_Restricted_Tasks\n-     (Chain_Access : Activation_Chain_Access);\n-   --  Compiler interface only. Do not call from within the RTS.\n-   --  This must be called by the creator of a chain of one or more new tasks,\n-   --  to activate them. The chain is a linked list that up to this point is\n-   --  only known to the task that created them, though the individual tasks\n-   --  are already in the All_Tasks_List.\n-   --\n-   --  The compiler builds the chain in LIFO order (as a stack). Another\n-   --  version of this procedure had code to reverse the chain, so as to\n-   --  activate the tasks in the order of declaration. This might be nice, but\n-   --  it is not needed if priority-based scheduling is supported, since all\n-   --  the activated tasks synchronize on the activators lock before they start\n-   --  activating and so they should start activating in priority order.\n+   procedure Activate_Tasks;\n+   pragma Export (C, Activate_Tasks, \"__gnat_activate_tasks\");\n+   --  Binder interface only. Do not call from within the RTS. This must be\n+   --  called an the end of the elaboration to activate all tasks, in order\n+   --  to implement the sequential elaboration policy.\n \n    procedure Complete_Restricted_Activation;\n    --  Compiler interface only. Do not call from within the RTS. This should be\n@@ -217,7 +208,7 @@ package System.Tasking.Restricted.Stages is\n    --     restricted_terminated (t1._task_id)\n \n    procedure Finalize_Global_Tasks;\n-   --  This is needed to support the compiler interface; it will only be called\n+   --  This is needed to support the compiler interface. It will only be called\n    --  by the Environment task in the binder generated file (by adafinal).\n    --  Instead, it will cause the Environment to block forever, since none of\n    --  the dependent tasks are expected to terminate"}, {"sha": "6f2528e2a86f3527d95a0aa36858df1e9a927a70", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -5032,7 +5032,8 @@ package body Sem_Ch13 is\n          ----------------------------\n \n          procedure Replace_Type_Reference (N : Node_Id) is\n-            --  Use the Sloc of the usage name below, not the defining name\n+            --  See comments in Add_Predicates.Replace_Type_Reference regarding\n+            --  Sloc and Comes_From_Source.\n          begin\n             --  Invariant'Class, replace with T'Class (obj)\n \n@@ -5055,6 +5056,8 @@ package body Sem_Ch13 is\n                Set_Entity (N, Object_Entity);\n                Set_Etype  (N, Typ);\n             end if;\n+\n+            Set_Comes_From_Source (N, True);\n          end Replace_Type_Reference;\n \n       --  Start of processing for Add_Invariants\n@@ -5442,6 +5445,11 @@ package body Sem_Ch13 is\n \n             Set_Entity (N, Object_Entity);\n             Set_Etype (N, Typ);\n+\n+            --  We want to treat the node as if it comes from source, so that\n+            --  ASIS will not ignore it\n+\n+            Set_Comes_From_Source (N, True);\n          end Replace_Type_Reference;\n \n       --  Start of processing for Add_Predicates"}, {"sha": "b062be948a18221d769f6d6f87c6a1657868c676", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -2626,6 +2626,56 @@ package body Sem_Ch5 is\n       Push_Scope (Ent);\n       Analyze_Iteration_Scheme (Iter);\n \n+      --  Check for following case which merits a warning if the type E of is\n+      --  a multi-dimensional array (and no explicit subscript ranges present).\n+\n+      --      for J in E'Range\n+      --         for K in E'Range\n+\n+      if Present (Iter)\n+        and then Present (Loop_Parameter_Specification (Iter))\n+      then\n+         declare\n+            LPS : constant Node_Id := Loop_Parameter_Specification (Iter);\n+            DSD : constant Node_Id :=\n+                    Original_Node (Discrete_Subtype_Definition (LPS));\n+         begin\n+            if Nkind (DSD) = N_Attribute_Reference\n+              and then Attribute_Name (DSD) = Name_Range\n+              and then No (Expressions (DSD))\n+            then\n+               declare\n+                  Typ : constant Entity_Id := Etype (Prefix (DSD));\n+               begin\n+                  if Is_Array_Type (Typ)\n+                    and then Number_Dimensions (Typ) > 1\n+                    and then Nkind (Parent (N)) = N_Loop_Statement\n+                    and then Present (Iteration_Scheme (Parent (N)))\n+                  then\n+                     declare\n+                        OIter : constant Node_Id :=\n+                          Iteration_Scheme (Parent (N));\n+                        OLPS  : constant Node_Id :=\n+                          Loop_Parameter_Specification (OIter);\n+                        ODSD  : constant Node_Id :=\n+                          Original_Node (Discrete_Subtype_Definition (OLPS));\n+                     begin\n+                        if Nkind (ODSD) = N_Attribute_Reference\n+                          and then Attribute_Name (ODSD) = Name_Range\n+                          and then No (Expressions (ODSD))\n+                          and then Etype (Prefix (ODSD)) = Typ\n+                        then\n+                           Error_Msg_Sloc := Sloc (ODSD);\n+                           Error_Msg_N\n+                             (\"inner range same as outer range#?\", DSD);\n+                        end if;\n+                     end;\n+                  end if;\n+               end;\n+            end if;\n+         end;\n+      end if;\n+\n       --  Analyze the statements of the body except in the case of an Ada 2012\n       --  iterator with the expander active. In this case the expander will do\n       --  a rewrite of the loop into a while loop. We will then analyze the"}, {"sha": "defe37f3d4c36ab4be56a0995d5782e98ff09935", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ebb1146dff85d153f99f89b9f479d4e479fd20/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=30ebb1146dff85d153f99f89b9f479d4e479fd20", "patch": "@@ -7155,12 +7155,13 @@ package body Sem_Res is\n       Resolve (Then_Expr, Typ);\n       Then_Typ := Etype (Then_Expr);\n \n-      --  When the \"then\" expression is of a scalar type different from the\n-      --  result type, then insert a conversion to ensure the generation of\n-      --  a constraint check.\n+      --  When the \"then\" expression is of a scalar subtype different from the\n+      --  result subtype, then insert a conversion to ensure the generation of\n+      --  a constraint check. The same is done for the else part below, again\n+      --  comparing subtypes rather than base types.\n \n       if Is_Scalar_Type (Then_Typ)\n-        and then Base_Type (Then_Typ) /= Base_Type (Typ)\n+        and then Then_Typ /= Typ\n       then\n          Rewrite (Then_Expr, Convert_To (Typ, Then_Expr));\n          Analyze_And_Resolve (Then_Expr, Typ);"}]}