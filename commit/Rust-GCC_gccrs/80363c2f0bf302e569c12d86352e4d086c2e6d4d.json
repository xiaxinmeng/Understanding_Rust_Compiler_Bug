{"sha": "80363c2f0bf302e569c12d86352e4d086c2e6d4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAzNjNjMmYwYmYzMDJlNTY5YzEyZDg2MzUyZTRkMDg2YzJlNmQ0ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T13:28:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T13:28:21Z"}, "message": "[multiple changes]\n\n2014-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb: Minor code reorganization.\n\n2014-10-10  Pat Rogers  <rogers@adacore.com>\n\n\t* gnat_rm.texi: Text now indicates pragma No_Run_Time is not\n\tfor users.\n\n2014-10-10  Vadim Godunko  <godunko@adacore.com>\n\n\t* a-coinho-shared.adb: Add minor comment.\n\t* a-stzmap.adb (To_Sequence): Compute size of result array.\n\nFrom-SVN: r216081", "tree": {"sha": "c0a1af73f0e07dee9b5802115990158c3bc85faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0a1af73f0e07dee9b5802115990158c3bc85faf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80363c2f0bf302e569c12d86352e4d086c2e6d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80363c2f0bf302e569c12d86352e4d086c2e6d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80363c2f0bf302e569c12d86352e4d086c2e6d4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80363c2f0bf302e569c12d86352e4d086c2e6d4d/comments", "author": null, "committer": null, "parents": [{"sha": "d56f4479e63df5de87b47572640de835924cf443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d56f4479e63df5de87b47572640de835924cf443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d56f4479e63df5de87b47572640de835924cf443"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "c7df2c19c7d78c0f981e26ed1538452d2fdb9f6f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=80363c2f0bf302e569c12d86352e4d086c2e6d4d", "patch": "@@ -1,3 +1,17 @@\n+2014-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb: Minor code reorganization.\n+\n+2014-10-10  Pat Rogers  <rogers@adacore.com>\n+\n+\t* gnat_rm.texi: Text now indicates pragma No_Run_Time is not\n+\tfor users.\n+\n+2014-10-10  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* a-coinho-shared.adb: Add minor comment.\n+\t* a-stzmap.adb (To_Sequence): Compute size of result array.\n+\n 2014-10-10  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch3.adb (Build_Init_Procedure): Complete the condition of an"}, {"sha": "94d4fe4249fd88a3b94b6343cca5af03d3f08024", "filename": "gcc/ada/a-coinho-shared.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fa-coinho-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fa-coinho-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.adb?ref=80363c2f0bf302e569c12d86352e4d086c2e6d4d", "patch": "@@ -25,6 +25,13 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  Note: special attention must be paid to the case of simultaneous access\n+--  to internal shared objects and elements by difference tasks. The Reference\n+--  counter of internal shared object is the only component protected using\n+--  atomic operations; other components and elements can be modified only when\n+--  reference counter is equal to one (so there are no other references to this\n+--  internal shared object and element).\n+\n with Ada.Unchecked_Deallocation;\n \n package body Ada.Containers.Indefinite_Holders is"}, {"sha": "0afe4ff868f94111e39c9b2d0f0a352a258686ea", "filename": "gcc/ada/a-stzmap.adb", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fa-stzmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fa-stzmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzmap.adb?ref=80363c2f0bf302e569c12d86352e4d086c2e6d4d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -570,20 +570,25 @@ package body Ada.Strings.Wide_Wide_Maps is\n    function To_Sequence\n      (Set : Wide_Wide_Character_Set) return Wide_Wide_Character_Sequence\n    is\n-      SS : constant Wide_Wide_Character_Ranges_Access := Set.Set;\n-\n-      Result : Wide_Wide_String (Positive range 1 .. 2 ** 16);\n-      N      : Natural := 0;\n+      SS    : constant Wide_Wide_Character_Ranges_Access := Set.Set;\n+      N     : Natural := 0;\n+      Count : Natural := 0;\n \n    begin\n       for J in SS'Range loop\n-         for K in SS (J).Low .. SS (J).High loop\n-            N := N + 1;\n-            Result (N) := K;\n-         end loop;\n+         Count :=\n+           Count + (Wide_Wide_Character'Pos (SS (J).High) -\n+                    Wide_Wide_Character'Pos (SS (J).Low) + 1);\n       end loop;\n \n-      return Result (1 .. N);\n+      return Result : Wide_Wide_String (1 .. Count) do\n+         for J in SS'Range loop\n+            for K in SS (J).Low .. SS (J).High loop\n+               N := N + 1;\n+               Result (N) := K;\n+            end loop;\n+         end loop;\n+      end return;\n    end To_Sequence;\n \n    ------------"}, {"sha": "5554f68db4da843f9669922ffaba7544e8ba840a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=80363c2f0bf302e569c12d86352e4d086c2e6d4d", "patch": "@@ -4748,11 +4748,9 @@ pragma No_Run_Time;\n \n @noindent\n This is an obsolete configuration pragma that historically was used to\n-setup what is now called the \"zero footprint\" library. It causes any\n-library units outside this basic library to be ignored. The use of\n-this pragma has been superseded by the general configurable run-time\n-capability of @code{GNAT} where the compiler takes into account whatever\n-units happen to be accessible in the library.\n+set up a runtime library with no object code. It is now used only for\n+internal testing. The pragma has been superseded by the reconfigurable\n+runtime capability of @code{GNAT}.\n \n @node Pragma No_Strict_Aliasing\n @unnumberedsec Pragma No_Strict_Aliasing"}, {"sha": "709dabe29db055c555f5c61dad9f6cc2736eca53", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80363c2f0bf302e569c12d86352e4d086c2e6d4d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=80363c2f0bf302e569c12d86352e4d086c2e6d4d", "patch": "@@ -10706,10 +10706,11 @@ package body Sem_Ch13 is\n             Set_Has_Inheritable_Invariants (Typ);\n          end if;\n \n-      --  If the full view of the type is a scalar type or array type, the\n-      --  implicit base type created for it has the same invariant.\n+      --  If we have a subtype with invariants, whose base type does not have\n+      --  invariants, copy these invariants to the base type. This happens for\n+      --  the case of implicit base types created for scalar and array types.\n \n-      elsif Has_Invariants (Typ) and then Base_Type (Typ) /= Typ\n+      elsif Has_Invariants (Typ)\n         and then not Has_Invariants (Base_Type (Typ))\n       then\n          Set_Has_Invariants (Base_Type (Typ));"}]}