{"sha": "a8b3aeda411792a2585b8329273cefe3d5221f57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThiM2FlZGE0MTE3OTJhMjU4NWI4MzI5MjczY2VmZTNkNTIyMWY1Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-05T21:47:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-05T21:47:21Z"}, "message": "(input_operand): Fix missing operand on a return.\n\n(print_operand): Add new code '.'.\n(rs6000_sa_size): Delete unused variable `i'.\n(output_prolog, output_epilog): Use new RS6000_CROR_BIT_NUMBER.\n\nFrom-SVN: r4846", "tree": {"sha": "682ec5bb3b70c86f71674d630ed8282c7a87afba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/682ec5bb3b70c86f71674d630ed8282c7a87afba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8b3aeda411792a2585b8329273cefe3d5221f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b3aeda411792a2585b8329273cefe3d5221f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b3aeda411792a2585b8329273cefe3d5221f57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b3aeda411792a2585b8329273cefe3d5221f57/comments", "author": null, "committer": null, "parents": [{"sha": "6dd0c6da729705dee361873dcc0f05bca888d2e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd0c6da729705dee361873dcc0f05bca888d2e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd0c6da729705dee361873dcc0f05bca888d2e8"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "3a826932d785d5975299902616dfa992c331874f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b3aeda411792a2585b8329273cefe3d5221f57/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b3aeda411792a2585b8329273cefe3d5221f57/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a8b3aeda411792a2585b8329273cefe3d5221f57", "patch": "@@ -403,7 +403,7 @@ input_operand (op, mode)\n      do not get called for MODE_CC values).  These can be in any\n      register.  */\n   if (register_operand (op, mode))\n-    return;\n+    return 1;\n \n   /* For HImode and QImode, any constant is valid. */\n   if ((mode == HImode || mode == QImode)\n@@ -709,6 +709,12 @@ print_operand (file, x, code)\n \n   switch (code)\n     {\n+    case '.':\n+      /* Write out the bit number for \"cror\" after a call.   This differs\n+\t between AIX 3.2 and earlier versions.  */\n+      fprintf (file, \"%d\", RS6000_CROR_BIT_NUMBER);\n+      return;\n+\n     case 'A':\n       /* If X is a constant integer whose low-order 5 bits are zero,\n \t write 'l'.  Otherwise, write 'r'.  This is a kludge to fix a bug\n@@ -1223,7 +1229,6 @@ int\n rs6000_sa_size ()\n {\n   int size;\n-  int i;\n \n   /* We have the six fixed words, plus the size of the register save \n      areas, rounded to a double-word.  */\n@@ -1318,7 +1323,9 @@ output_prolog (file, size)\n   else if (first_fp_reg == 63)\n     fprintf (file, \"\\tstfd 31,-8(1)\\n\");\n   else if (first_fp_reg != 64)\n-    fprintf (file, \"\\tbl ._savef%d\\n\\tcror 15,15,15\\n\", first_fp_reg - 32);\n+    fprintf (file, \"\\tbl ._savef%d\\n\\tcror %d,%d,%d\\n\", first_fp_reg - 32,\n+\t     RS6000_CROR_BIT_NUMBER, RS6000_CROR_BIT_NUMBER,\n+\t     RS6000_CROR_BIT_NUMBER);\n \n   /* Now save gpr's.  */\n   if (first_reg == 31)\n@@ -1421,7 +1428,9 @@ output_epilog (file, size)\n       /* If we have to restore more than two FP registers, branch to the\n \t restore function.  It will return to our caller.  */\n       if (first_fp_reg < 62)\n-\tfprintf (file, \"\\tb ._restf%d\\n\\tcror 15,15,15\\n\", first_fp_reg - 32);\n+\tfprintf (file, \"\\tb ._restf%d\\n\\tcror %d,%d,%d\\n\", first_fp_reg - 32,\n+\t\t RS6000_CROR_BIT_NUMBER, RS6000_CROR_BIT_NUMBER,\n+\t\t RS6000_CROR_BIT_NUMBER);\n       else\n \tfprintf (file, \"\\tbr\\n\");\n     }"}]}