{"sha": "a0afbdb682e3ae83ae087a69f3a975ad23582069", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBhZmJkYjY4MmUzYWU4M2FlMDg3YTY5ZjNhOTc1YWQyMzU4MjA2OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-01-14T10:45:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-01-14T10:45:54Z"}, "message": "* gcc.dg/i386-asm-4.c: New test.\n\nFrom-SVN: r93638", "tree": {"sha": "bc12515c28257f9d022d115c0d108a92f98bbf39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc12515c28257f9d022d115c0d108a92f98bbf39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0afbdb682e3ae83ae087a69f3a975ad23582069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0afbdb682e3ae83ae087a69f3a975ad23582069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0afbdb682e3ae83ae087a69f3a975ad23582069", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0afbdb682e3ae83ae087a69f3a975ad23582069/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e06dac503ef7c6aa78bf4c744c0125dac10d563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e06dac503ef7c6aa78bf4c744c0125dac10d563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e06dac503ef7c6aa78bf4c744c0125dac10d563"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "6d606915063708ededa7df75b635f6ea23fa0d68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0afbdb682e3ae83ae087a69f3a975ad23582069/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0afbdb682e3ae83ae087a69f3a975ad23582069/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0afbdb682e3ae83ae087a69f3a975ad23582069", "patch": "@@ -1,3 +1,7 @@\n+2005-01-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/i386-asm-4.c: New test.\n+\n 2005-01-14  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/nested-func-2.c: New test."}, {"sha": "c1324388dae290cd23afc6ffb25fd839ac821d46", "filename": "gcc/testsuite/gcc.dg/i386-asm-4.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0afbdb682e3ae83ae087a69f3a975ad23582069/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0afbdb682e3ae83ae087a69f3a975ad23582069/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-4.c?ref=a0afbdb682e3ae83ae087a69f3a975ad23582069", "patch": "@@ -0,0 +1,39 @@\n+/* Test if functions marked __attribute__((used)), but with address never\n+   taken in C code, don't use alternate calling convention for local\n+   functions on IA-32.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+static int foo (int, int, int, int) __asm (\"foo\");\n+static __attribute__((noinline, used)) int\n+foo (int i, int j, int k, int l)\n+{\n+  return i + j + k + l;\n+}\n+\n+void\n+bar (void)\n+{\n+  if (foo (1, 2, 3, 4) != 10)\n+    abort ();\n+}\n+\n+int (*fn) (int, int, int, int);\n+\n+void\n+baz (void)\n+{\n+  __asm (\"movl $foo, %k0\" : \"=r\" (fn));\n+  if (fn (2, 3, 4, 5) != 14)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  bar ();\n+  baz ();\n+  return 0;\n+}"}]}