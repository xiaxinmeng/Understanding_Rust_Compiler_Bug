{"sha": "51c7954daf0d223599ad0aeea64b63816ee1e354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFjNzk1NGRhZjBkMjIzNTk5YWQwYWVlYTY0YjYzODE2ZWUxZTM1NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-03-26T10:18:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-03-26T10:18:54Z"}, "message": "decl.c (gnat_to_gnu_entity): Create TYPE_DECL for the padded type built to support a specified size or alignment.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Create TYPE_DECL\n\tfor the padded type built to support a specified size or alignment.\n\nFrom-SVN: r171554", "tree": {"sha": "5584c686f2c797da62ca728685356ce85163698f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5584c686f2c797da62ca728685356ce85163698f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51c7954daf0d223599ad0aeea64b63816ee1e354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c7954daf0d223599ad0aeea64b63816ee1e354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c7954daf0d223599ad0aeea64b63816ee1e354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c7954daf0d223599ad0aeea64b63816ee1e354/comments", "author": null, "committer": null, "parents": [{"sha": "6ddf9843628ab87261d2ec8dc3d14ac057e76014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddf9843628ab87261d2ec8dc3d14ac057e76014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddf9843628ab87261d2ec8dc3d14ac057e76014"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "91725e4e057829a2d735a86fcb72fbbdf33f29ed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=51c7954daf0d223599ad0aeea64b63816ee1e354", "patch": "@@ -1,3 +1,8 @@\n+2011-03-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Create TYPE_DECL\n+\tfor the padded type built to support a specified size or alignment.\n+\n 2011-03-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/gigi.h (finalize_from_with_types): Adjust comment."}, {"sha": "cea8d3d6990593692eb5b4725083bfa240e9d383", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=51c7954daf0d223599ad0aeea64b63816ee1e354", "patch": "@@ -911,9 +911,20 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t   size of the object.  */\n \tgnu_object_size = gnu_size ? gnu_size : TYPE_SIZE (gnu_type);\n \tif (gnu_size || align > 0)\n-\t  gnu_type = maybe_pad_type (gnu_type, gnu_size, align, gnat_entity,\n-\t\t\t\t     false, false, definition,\n-\t\t\t\t     gnu_size ? true : false);\n+\t  {\n+\t    tree orig_type = gnu_type;\n+\n+\t    gnu_type = maybe_pad_type (gnu_type, gnu_size, align, gnat_entity,\n+\t\t\t\t       false, false, definition,\n+\t\t\t\t       gnu_size ? true : false);\n+\n+\t    /* If a padding record was made, declare it now since it will\n+\t       never be declared otherwise.  This is necessary to ensure\n+\t       that its subtrees are properly marked.  */\n+\t    if (gnu_type != orig_type && !DECL_P (TYPE_NAME (gnu_type)))\n+\t      create_type_decl (TYPE_NAME (gnu_type), gnu_type, NULL, true,\n+\t\t\t\tdebug_info_p, gnat_entity);\n+\t  }\n \n \t/* If this is a renaming, avoid as much as possible to create a new\n \t   object.  However, in several cases, creating it is required."}, {"sha": "28ab5b98f685e005000166b4b939debd37265623", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51c7954daf0d223599ad0aeea64b63816ee1e354", "patch": "@@ -1,3 +1,7 @@\n+2011-03-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr27.ad[sb]: New test.\n+\n 2011-03-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/limited_with2.ad[sb]: New test."}, {"sha": "cfaba34c2f90e7c5d816b58d33883c5c2b34e864", "filename": "gcc/testsuite/gnat.dg/discr27.adb", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.adb?ref=51c7954daf0d223599ad0aeea64b63816ee1e354", "patch": "@@ -0,0 +1,31 @@\n+package body Discr27 is\r\n+\r\n+   subtype Index is Positive range 1..4096;\r\n+\r\n+   function F return String is\r\n+      S : String(1..1) := (others =>'w');\r\n+   begin\r\n+      return S;\r\n+   end;\r\n+\r\n+   type Enum is (One, Two);\r\n+\r\n+   type Rec (D : Enum  := One; Len : Index := 1) is record\r\n+      case D is\r\n+          when One => I : Integer;\r\n+          when Two => A : String(1..Len);\r\n+      end case;\r\n+   end record;\r\n+\r\n+   procedure Nothing is\r\n+      M : constant String := F;\r\n+      C : constant Rec := (Two, M'Length, M);\r\n+   begin\r\n+      null;\r\n+   end;\r\n+\r\n+   procedure Proc is begin\r\n+      null;\r\n+   end;\r\n+\r\n+end Discr27;\r"}, {"sha": "db1914accc30d8fbecd9900f06c58c8536f2ac1c", "filename": "gcc/testsuite/gnat.dg/discr27.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c7954daf0d223599ad0aeea64b63816ee1e354/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr27.ads?ref=51c7954daf0d223599ad0aeea64b63816ee1e354", "patch": "@@ -0,0 +1,7 @@\n+-- { dg-do compile }\r\n+\r\n+package Discr27 is\r\n+\r\n+   procedure Proc;\r\n+\r\n+end Discr27;\r"}]}