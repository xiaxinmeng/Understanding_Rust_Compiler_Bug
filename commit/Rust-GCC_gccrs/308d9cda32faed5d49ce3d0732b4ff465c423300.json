{"sha": "308d9cda32faed5d49ce3d0732b4ff465c423300", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4ZDljZGEzMmZhZWQ1ZDQ5Y2UzZDA3MzJiNGZmNDY1YzQyMzMwMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-09-06T00:38:13Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-09-06T00:38:13Z"}, "message": "PR c++/86982, -Wreturn-local-addr and std::move and std::forward.\n\n\t* typeck.c (maybe_warn_about_returning_address_of_local): Handle calls\n\tto std::move or std::forward.\n\t(is_std_forward_p): New function.\n\n\t* g++.dg/warn/Wreturn-local-addr-5.C: New test.\n\nFrom-SVN: r264139", "tree": {"sha": "8c35a937933ae3e55c78546616653aa06d11b0e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c35a937933ae3e55c78546616653aa06d11b0e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308d9cda32faed5d49ce3d0732b4ff465c423300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308d9cda32faed5d49ce3d0732b4ff465c423300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308d9cda32faed5d49ce3d0732b4ff465c423300", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308d9cda32faed5d49ce3d0732b4ff465c423300/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4497d88fe2cbf9d8210485e68123a9abac693297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4497d88fe2cbf9d8210485e68123a9abac693297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4497d88fe2cbf9d8210485e68123a9abac693297"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "d5879f8cd0ed8d4303bf6cfde9171d9c72b7e5d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=308d9cda32faed5d49ce3d0732b4ff465c423300", "patch": "@@ -5,6 +5,11 @@\n \tout if performing the maybe-rvalue overload resolution and a conversion\n \tfunction is getting called.\n \n+\tPR c++/86982, -Wreturn-local-addr and std::move and std::forward.\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): Handle calls\n+\tto std::move or std::forward.\n+\t(is_std_forward_p): New function.\n+\n 2018-09-05  P\u00e1draig Brady  <p@draigbrady.com>\n \n \tPR c++/87185"}, {"sha": "9fa4c16bf14e25e86f0684f37597843f5541ca7c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=308d9cda32faed5d49ce3d0732b4ff465c423300", "patch": "@@ -63,6 +63,8 @@ static tree lookup_destructor (tree, tree, tree, tsubst_flags_t);\n static void error_args_num (location_t, tree, bool);\n static int convert_arguments (tree, vec<tree, va_gc> **, tree, int,\n                               tsubst_flags_t);\n+static bool is_std_move_p (tree);\n+static bool is_std_forward_p (tree);\n \n /* Do `exp = require_complete_type (exp);' to make sure exp\n    does not have an incomplete type.  (That includes void types.)\n@@ -9071,6 +9073,15 @@ maybe_warn_about_returning_address_of_local (tree retval)\n       STRIP_NOPS (whats_returned);\n     }\n \n+  /* As a special case, we handle a call to std::move or std::forward.  */\n+  if (TREE_CODE (whats_returned) == CALL_EXPR\n+      && (is_std_move_p (whats_returned)\n+\t  || is_std_forward_p (whats_returned)))\n+    {\n+      tree arg = CALL_EXPR_ARG (whats_returned, 0);\n+      return maybe_warn_about_returning_address_of_local (arg);\n+    }\n+\n   if (TREE_CODE (whats_returned) != ADDR_EXPR)\n     return false;\n   whats_returned = TREE_OPERAND (whats_returned, 0);\n@@ -9136,6 +9147,23 @@ decl_in_std_namespace_p (tree decl)\n \t  && DECL_NAMESPACE_STD_P (decl_namespace_context (decl)));\n }\n \n+/* Returns true if FN, a CALL_EXPR, is a call to std::forward.  */\n+\n+static bool\n+is_std_forward_p (tree fn)\n+{\n+  /* std::forward only takes one argument.  */\n+  if (call_expr_nargs (fn) != 1)\n+    return false;\n+\n+  tree fndecl = cp_get_callee_fndecl_nofold (fn);\n+  if (!decl_in_std_namespace_p (fndecl))\n+    return false;\n+\n+  tree name = DECL_NAME (fndecl);\n+  return name && id_equal (name, \"forward\");\n+}\n+\n /* Returns true if FN, a CALL_EXPR, is a call to std::move.  */\n \n static bool"}, {"sha": "e22ede07c1507e4862fb01df2f54ee2fa7801d4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=308d9cda32faed5d49ce3d0732b4ff465c423300", "patch": "@@ -1,3 +1,8 @@\n+2018-09-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/86982, -Wreturn-local-addr and std::move and std::forward.\n+\t* g++.dg/warn/Wreturn-local-addr-5.C: New test.\n+\n 2018-09-05  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Bernd Schmidt  <bernds_cb1@t-online.de>\n "}, {"sha": "76096279a641ee1fb806d5105884ab200c940ad2", "filename": "gcc/testsuite/g++.dg/warn/Wreturn-local-addr-5.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d9cda32faed5d49ce3d0732b4ff465c423300/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr-5.C?ref=308d9cda32faed5d49ce3d0732b4ff465c423300", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/86982\n+// { dg-do compile { target c++11 } }\n+\n+#include <utility>\n+\n+int&& f() { int i = 0; return std::move(i); } // { dg-warning \"reference to local variable\" }\n+int&& g() { int i = 0; return std::forward<int>(i); } // { dg-warning \"reference to local variable\" }\n+int&& h() { long l = 0; return std::forward<int>(l); } // { dg-warning \"reference to temporary\" }"}]}