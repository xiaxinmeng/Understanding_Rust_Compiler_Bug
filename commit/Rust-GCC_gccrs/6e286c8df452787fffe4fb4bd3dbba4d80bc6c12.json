{"sha": "6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyODZjOGRmNDUyNzg3ZmZmZTRmYjRiZDNkYmJhNGQ4MGJjNmMxMg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-08T22:16:57Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-08T22:16:57Z"}, "message": "libphobos: Remove --enable-thread-lib configure option.\n\nThis is another old option that doesn't make sense as a configurable.\nSo the option has been removed, and the check for AC_SEARCH_LIBS moved\ninto the main configure.ac file.\n\nlibphobos/ChangeLog:\n\n\t* configure: Regenerate.\n\t* configure.ac: Use AC_SEARCH_LIBS for pthread_create.\n\t* m4/druntime/libraries.m4: Remove DRUNTIME_LIBRARIES_THREAD.", "tree": {"sha": "e29c2928a095b57c9bf9de822f87ac68a633e42a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e29c2928a095b57c9bf9de822f87ac68a633e42a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48242b2c3ac96c0bd5265e77013583ac9ceee97d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48242b2c3ac96c0bd5265e77013583ac9ceee97d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48242b2c3ac96c0bd5265e77013583ac9ceee97d"}], "stats": {"total": 112, "additions": 10, "deletions": 102}, "files": [{"sha": "d8d37ef1c2b5b32456c196a0fdae615328379852", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "patch": "@@ -1,3 +1,9 @@\n+2020-04-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Use AC_SEARCH_LIBS for pthread_create.\n+\t* m4/druntime/libraries.m4: Remove DRUNTIME_LIBRARIES_THREAD.\n+\n 2020-04-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* configure: Regenerate."}, {"sha": "f458ad3b086104aa011d8e3abb8197e1ee4c8472", "filename": "libphobos/configure", "status": "modified", "additions": 3, "deletions": 75, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "patch": "@@ -835,7 +835,6 @@ enable_libtool_lock\n with_gcc_major_version_only\n enable_werror\n enable_druntime_gc\n-enable_thread_lib\n with_libatomic\n with_libbacktrace\n with_target_system_zlib\n@@ -1485,9 +1484,6 @@ Optional Features:\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-werror         turns on -Werror [default=no]\n   --enable-druntime-gc    enable D runtime garbage collector (default: yes)\n-  --enable-thread-lib=<arg>\n-                          specify linker option for the system thread library\n-                          (default: autodetect)\n   --enable-version-specific-runtime-libs\n                           Specify that runtime libraries should be installed\n                           in a compiler-specific directory\n@@ -11646,7 +11642,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11649 \"configure\"\n+#line 11645 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11752,7 +11748,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11755 \"configure\"\n+#line 11751 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14480,17 +14476,7 @@ if test \"$ac_res\" != no; then :\n \n fi\n \n-\n-  enable_thread_lib=yes\n-  # Check whether --enable-thread-lib was given.\n-if test \"${enable_thread_lib+set}\" = set; then :\n-  enableval=$enable_thread_lib;\n-fi\n-\n-\n-  if test \"x$enable_thread_lib\" = \"xyes\"; then :\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing pthread_create\" >&5\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing pthread_create\" >&5\n $as_echo_n \"checking for library containing pthread_create... \" >&6; }\n if ${ac_cv_search_pthread_create+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n@@ -14534,64 +14520,6 @@ ac_res=$ac_cv_search_pthread_create\n if test \"$ac_res\" != no; then :\n   test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n \n-fi\n-\n-\n-else\n-\n-    if test \"x$enable_thread_lib\" = \"xno\"; then :\n-\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for thread library\" >&5\n-$as_echo_n \"checking for thread library... \" >&6; }\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: disabled\" >&5\n-$as_echo \"disabled\" >&6; }\n-\n-else\n-\n-      as_ac_Lib=`$as_echo \"ac_cv_lib_$enable_thread_lib''_pthread_create\" | $as_tr_sh`\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for pthread_create in -l$enable_thread_lib\" >&5\n-$as_echo_n \"checking for pthread_create in -l$enable_thread_lib... \" >&6; }\n-if eval \\${$as_ac_Lib+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-l$enable_thread_lib  $LIBS\"\n-cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n- extern(C) int pthread_create();\n-\n-extern(C) int main() {\n-  pthread_create(); return 0;\n-}\n-_ACEOF\n-if ac_fn_d_try_link \"$LINENO\"; then :\n-  eval \"$as_ac_Lib=yes\"\n-else\n-  eval \"$as_ac_Lib=no\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-eval ac_res=\\$$as_ac_Lib\n-\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n-$as_echo \"$ac_res\" >&6; }\n-if eval test \\\"x\\$\"$as_ac_Lib\"\\\" = x\"yes\"; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_LIB$enable_thread_lib\" | $as_tr_cpp` 1\n-_ACEOF\n-\n-  LIBS=\"-l$enable_thread_lib $LIBS\"\n-\n-else\n-\n-        as_fn_error $? \"Thread library not found\" \"$LINENO\" 5\n-\n-fi\n-\n-\n-fi\n-\n fi\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing cosf\" >&5"}, {"sha": "e6148f0751985f683b46b96dea5029989d46e751", "filename": "libphobos/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "patch": "@@ -133,7 +133,7 @@ DRUNTIME_LIBRARIES_CLIB\n WITH_LOCAL_DRUNTIME([\n   AC_LANG_PUSH([D])\n   AC_SEARCH_LIBS([malloc], [c])\n-  DRUNTIME_LIBRARIES_THREAD\n+  AC_SEARCH_LIBS([pthread_create], [pthread])\n   AC_SEARCH_LIBS([cosf], [m])\n   AC_SEARCH_LIBS([clock_gettime], [rt])\n   DRUNTIME_ENABLE_ATOMIC_BUILTINS"}, {"sha": "9e8e210df5a6ef1906441c006d944a6771e12276", "filename": "libphobos/m4/druntime/libraries.m4", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2Fm4%2Fdruntime%2Flibraries.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12/libphobos%2Fm4%2Fdruntime%2Flibraries.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fdruntime%2Flibraries.m4?ref=6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "patch": "@@ -3,32 +3,6 @@\n #\n \n \n-# DRUNTIME_LIBRARIES_THREAD\n-# -------------------------\n-# Allow specifying the thread library to link with or autodetect\n-# Add thread library to LIBS if necessary.\n-AC_DEFUN([DRUNTIME_LIBRARIES_THREAD],\n-[\n-  enable_thread_lib=yes\n-  AC_ARG_ENABLE(thread-lib,\n-    AC_HELP_STRING([--enable-thread-lib=<arg>],\n-                   [specify linker option for the system thread library (default: autodetect)]))\n-\n-  AS_IF([test \"x$enable_thread_lib\" = \"xyes\"], [\n-    AC_SEARCH_LIBS([pthread_create], [pthread])\n-  ], [\n-    AS_IF([test \"x$enable_thread_lib\" = \"xno\"], [\n-      AC_MSG_CHECKING([for thread library])\n-      AC_MSG_RESULT([disabled])\n-    ], [\n-      AC_CHECK_LIB([$enable_thread_lib], [pthread_create], [], [\n-        AC_MSG_ERROR([Thread library not found])\n-      ])\n-    ])\n-  ])\n-])\n-\n-\n # DRUNTIME_LIBRARIES_DLOPEN\n # -----------------------\n # Autodetect and add dl library to LIBS if necessary."}]}