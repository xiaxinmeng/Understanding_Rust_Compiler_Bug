{"sha": "e6bcfef93acf89ff924dbe47b31dc923f27a584b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZiY2ZlZjkzYWNmODlmZjkyNGRiZTQ3YjMxZGM5MjNmMjdhNTg0Yg==", "commit": {"author": {"name": "Juha Sarlin", "email": "juha@c3l.tyreso.se", "date": "1998-06-10T00:41:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-10T00:41:51Z"}, "message": "* h8300.c (get_shift_alg): Add special cases for shifts of 8 and 24.\n\nFrom-SVN: r20396", "tree": {"sha": "29acd50af4b02da97b4316672815716525f85e76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29acd50af4b02da97b4316672815716525f85e76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6bcfef93acf89ff924dbe47b31dc923f27a584b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6bcfef93acf89ff924dbe47b31dc923f27a584b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6bcfef93acf89ff924dbe47b31dc923f27a584b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6bcfef93acf89ff924dbe47b31dc923f27a584b/comments", "author": null, "committer": null, "parents": [{"sha": "9d932d439ee9935219a879d1ff7d08a35f05c3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d932d439ee9935219a879d1ff7d08a35f05c3b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d932d439ee9935219a879d1ff7d08a35f05c3b9"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "18b99650e55889bf4ef02730a69e87bdba6ba00b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6bcfef93acf89ff924dbe47b31dc923f27a584b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6bcfef93acf89ff924dbe47b31dc923f27a584b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6bcfef93acf89ff924dbe47b31dc923f27a584b", "patch": "@@ -1,3 +1,7 @@\n+Wed Jun 10 01:39:00 1998  Juha Sarlin <juha@c3l.tyreso.se> \n+\n+\t* h8300.c (get_shift_alg): Add special cases for shifts of 8 and 24.\n+\n Tue Jun  9 22:05:34 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* fold-const.c (fold): Even with otherwise constant trees, look for"}, {"sha": "a3af135f42686430fcc21d8e97d8304ab02d1dfd", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6bcfef93acf89ff924dbe47b31dc923f27a584b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6bcfef93acf89ff924dbe47b31dc923f27a584b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e6bcfef93acf89ff924dbe47b31dc923f27a584b", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Hitachi H8/300.\n-   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com),\n    Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n \n@@ -2378,6 +2378,24 @@ get_shift_alg (cpu, shift_type, mode, count, assembler_p,\n \t      return SHIFT_SPECIAL;\n \t    }\n \t}\n+      else if (count == 8 && !TARGET_H8300)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      *assembler_p = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%s4,%t4\\n\\tmov.b\\t%t0,%s4\\n\\tmov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f4,%e0\";\n+\t      *cc_valid_p = 0;\n+\t      return SHIFT_SPECIAL;\n+\t    case SHIFT_LSHIFTRT:\n+\t      *assembler_p = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%t0,%s0\\n\\tmov.b\\t%s4,%t0\\n\\tmov.b\\t%t4,%s4\\n\\textu.w\\t%f4\\n\\tmov.w\\t%f4,%e0\";\n+\t      *cc_valid_p = 0;\n+\t      return SHIFT_SPECIAL;\n+\t    case SHIFT_ASHIFTRT:\n+\t      *assembler_p = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%t0,%s0\\n\\tmov.b\\t%s4,%t0\\n\\tmov.b\\t%t4,%s4\\n\\texts.w\\t%f4\\n\\tmov.w\\t%f4,%e0\";\n+\t      *cc_valid_p = 0;\n+\t      return SHIFT_SPECIAL;\n+\t    }\n+\t}\n       else if (count == 16)\n \t{\n \t  switch (shift_type)\n@@ -2489,6 +2507,24 @@ get_shift_alg (cpu, shift_type, mode, count, assembler_p,\n \t      return SHIFT_SPECIAL;\n \t    }\n \t}\n+      else if (count == 24 && !TARGET_H8300)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      *assembler_p = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n+\t      *cc_valid_p = 0;\n+\t      return SHIFT_SPECIAL;\n+\t    case SHIFT_LSHIFTRT:\n+\t      *assembler_p = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\textu.w\\t%f0\\n\\textu.l\\t%S0\";\n+\t      *cc_valid_p = 0;\n+\t      return SHIFT_SPECIAL;\n+\t    case SHIFT_ASHIFTRT:\n+\t      *assembler_p = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\texts.w\\t%f0\\n\\texts.l\\t%S0\";\n+\t      *cc_valid_p = 0;\n+\t      return SHIFT_SPECIAL;\n+\t    }\n+\t}\n       else if (count >= 28 && count <= 30 && !TARGET_H8300)\n \t{\n \t  if (shift_type == SHIFT_ASHIFTRT)"}]}