{"sha": "3564e40e2c1d041491de0319989296cf46a1f10c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU2NGU0MGUyYzFkMDQxNDkxZGUwMzE5OTg5Mjk2Y2Y0NmExZjEwYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-01T12:38:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-01T12:38:45Z"}, "message": "(expand_decl_init): If CONST_DECL, don't generate any code, but call\nexpand_expr if DECL_INITIAL is a constant.\n\nFrom-SVN: r5962", "tree": {"sha": "100255374aa27f3a64d0c0d2a23e29525533fae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/100255374aa27f3a64d0c0d2a23e29525533fae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3564e40e2c1d041491de0319989296cf46a1f10c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3564e40e2c1d041491de0319989296cf46a1f10c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3564e40e2c1d041491de0319989296cf46a1f10c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3564e40e2c1d041491de0319989296cf46a1f10c/comments", "author": null, "committer": null, "parents": [{"sha": "c0b262c16625f8e9650ce58fb299d1cef5383dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b262c16625f8e9650ce58fb299d1cef5383dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b262c16625f8e9650ce58fb299d1cef5383dbd"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "e6caa9f1af1864ba37f79812db2512ea5175409d", "filename": "gcc/stmt.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3564e40e2c1d041491de0319989296cf46a1f10c/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3564e40e2c1d041491de0319989296cf46a1f10c/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=3564e40e2c1d041491de0319989296cf46a1f10c", "patch": "@@ -3604,6 +3604,20 @@ expand_decl_init (decl)\n {\n   int was_used = TREE_USED (decl);\n \n+  /* If this is a CONST_DECL, we don't have to generate any code, but\n+     if DECL_INITIAL is a constant, call expand_expr to force TREE_CST_RTL\n+     to be set while in the obstack containing the constant.  If we don't\n+     do this, we can lose if we have functions nested three deep and the middle\n+     function makes a CONST_DECL whose DECL_INITIAL is a STRING_CST while\n+     the innermost function is the first to expand that STRING_CST.  */\n+  if (TREE_CODE (decl) == CONST_DECL)\n+    {\n+      if (DECL_INITIAL (decl) && TREE_CONSTANT (DECL_INITIAL (decl)))\n+\texpand_expr (DECL_INITIAL (decl), NULL_RTX, VOIDmode,\n+\t\t     EXPAND_INITIALIZER);\n+      return;\n+    }\n+\n   if (TREE_STATIC (decl))\n     return;\n "}]}