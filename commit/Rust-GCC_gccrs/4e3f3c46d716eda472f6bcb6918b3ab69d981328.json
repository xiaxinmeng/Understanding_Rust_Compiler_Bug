{"sha": "4e3f3c46d716eda472f6bcb6918b3ab69d981328", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUzZjNjNDZkNzE2ZWRhNDcyZjZiY2I2OTE4YjNhYjY5ZDk4MTMyOA==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2019-03-18T07:51:06Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2019-03-18T07:51:06Z"}, "message": "re PR rtl-optimization/89676 (Redundant moves for long long shift on 32bit x86)\n\n        PR middle-end/89676\n        * sel-sched.c (compute_av_set_at_bb_end): When we have an ineligible\n        successor, use NULL as its av set.\n\nFrom-SVN: r269751", "tree": {"sha": "cfc7a2f92be6bd6b1ba9a60456d43f21cbe896a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfc7a2f92be6bd6b1ba9a60456d43f21cbe896a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e3f3c46d716eda472f6bcb6918b3ab69d981328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e3f3c46d716eda472f6bcb6918b3ab69d981328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e3f3c46d716eda472f6bcb6918b3ab69d981328", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e3f3c46d716eda472f6bcb6918b3ab69d981328/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e703f019b351ceb6c68da23bde1e1754746e1f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e703f019b351ceb6c68da23bde1e1754746e1f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e703f019b351ceb6c68da23bde1e1754746e1f2"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "b66cb5d81cc69f0ead64a88b517c74543188dc52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e3f3c46d716eda472f6bcb6918b3ab69d981328/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e3f3c46d716eda472f6bcb6918b3ab69d981328/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e3f3c46d716eda472f6bcb6918b3ab69d981328", "patch": "@@ -1,3 +1,9 @@\n+2019-03-18  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR middle-end/89676\n+\t* sel-sched.c (compute_av_set_at_bb_end): When we have an ineligible\n+\tsuccessor, use NULL as its av set.\n+\n 2019-03-15  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/89721"}, {"sha": "338d7c097dfcf964aeb6963a6cf0e9f63a704121", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e3f3c46d716eda472f6bcb6918b3ab69d981328/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e3f3c46d716eda472f6bcb6918b3ab69d981328/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=4e3f3c46d716eda472f6bcb6918b3ab69d981328", "patch": "@@ -2820,10 +2820,12 @@ compute_av_set_at_bb_end (insn_t insn, ilist_t p, int ws)\n     FOR_EACH_VEC_ELT (sinfo->succs_ok, is, succ)\n       {\n         basic_block succ_bb = BLOCK_FOR_INSN (succ);\n+\tav_set_t av_succ = (is_ineligible_successor (succ, p)\n+\t\t\t    ? NULL\n+\t\t\t    : BB_AV_SET (succ_bb));\n \n         gcc_assert (BB_LV_SET_VALID_P (succ_bb));\n-        mark_unavailable_targets (av1, BB_AV_SET (succ_bb),\n-                                  BB_LV_SET (succ_bb));\n+\tmark_unavailable_targets (av1, av_succ, BB_LV_SET (succ_bb));\n       }\n \n   /* Finally, check liveness restrictions on paths leaving the region.  */"}]}