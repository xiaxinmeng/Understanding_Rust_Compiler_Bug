{"sha": "8beaf167f7ca723101e87da432870b65ff521e99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlYWYxNjdmN2NhNzIzMTAxZTg3ZGE0MzI4NzBiNjVmZjUyMWU5OQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-08T10:49:27Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-08T10:49:27Z"}, "message": "Fortran - Improve OpenMP/OpenACC diagnostic\n\n\tgcc/fortran/\n\t* match.h (gfc_match_omp_eos_error): Renamed from gfc_match_omp_eos.\n\t* openmp.c (gfc_match_omp_eos): Make static.\n\t(gfc_match_omp_eos_error): New.\n\t* parse.c (matchs, matchdo, matchds): Do as done for 'matcho' -\n        if error occurred after OpenMP/OpenACC directive matched, do not\n\ttry other directives.\n\t(decode_oacc_directive, decode_omp_directive): Call new function\n\tinstead.\n\n\ttestsuite/\n\t* gfortran.dg/goacc/continuation-free-form.f95: Update dg-error.\n\nFrom-SVN: r276694", "tree": {"sha": "0cdde010d1a0ab9f25491e6c335f5b44ee220020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cdde010d1a0ab9f25491e6c335f5b44ee220020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8beaf167f7ca723101e87da432870b65ff521e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8beaf167f7ca723101e87da432870b65ff521e99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8beaf167f7ca723101e87da432870b65ff521e99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8beaf167f7ca723101e87da432870b65ff521e99/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db4fd465197346f0023dc7821ba14da6987042c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db4fd465197346f0023dc7821ba14da6987042c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db4fd465197346f0023dc7821ba14da6987042c7"}], "stats": {"total": 137, "additions": 86, "deletions": 51}, "files": [{"sha": "309d4ef9ff069d9e4684cd710a595fcfe5d33a46", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8beaf167f7ca723101e87da432870b65ff521e99", "patch": "@@ -1,3 +1,14 @@\n+2019-10-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* match.h (gfc_match_omp_eos_error): Renamed from gfc_match_omp_eos.\n+\t* openmp.c (gfc_match_omp_eos): Make static.\n+\t(gfc_match_omp_eos_error): New.\n+\t* parse.c (matchs, matchdo, matchds): Do as done for 'matcho' -\n+\tif error occurred after OpenMP/OpenACC directive matched, do not\n+\ttry other directives.\n+\t(decode_oacc_directive, decode_omp_directive): Call new function\n+\tinstead.\n+\n 2019-10-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/47045"}, {"sha": "611d79646458e4f837b2a16298c05f2267fa2220", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=8beaf167f7ca723101e87da432870b65ff521e99", "patch": "@@ -151,7 +151,7 @@ match gfc_match_oacc_exit_data (void);\n match gfc_match_oacc_routine (void);\n \n /* OpenMP directive matchers.  */\n-match gfc_match_omp_eos (void);\n+match gfc_match_omp_eos_error (void);\n match gfc_match_omp_atomic (void);\n match gfc_match_omp_barrier (void);\n match gfc_match_omp_cancel (void);"}, {"sha": "cd28384589cdef7fb6f91b9ebfdea5ed621f75d7", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=8beaf167f7ca723101e87da432870b65ff521e99", "patch": "@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Match an end of OpenMP directive.  End of OpenMP directive is optional\n    whitespace, followed by '\\n' or comment '!'.  */\n \n-match\n+static match\n gfc_match_omp_eos (void)\n {\n   locus old_loc;\n@@ -57,6 +57,17 @@ gfc_match_omp_eos (void)\n   return MATCH_NO;\n }\n \n+match\n+gfc_match_omp_eos_error (void)\n+{\n+  if (gfc_match_omp_eos() == MATCH_YES)\n+    return MATCH_YES;\n+\n+  gfc_error (\"Unexpected junk at %C\");\n+  return MATCH_ERROR;\n+}\n+\n+\n /* Free an omp_clauses structure.  */\n \n void"}, {"sha": "03fc716dbf516d2a2ad19efe7a971ac4e8425143", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 56, "deletions": 47, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=8beaf167f7ca723101e87da432870b65ff521e99", "patch": "@@ -674,15 +674,15 @@ decode_oacc_directive (void)\n       match (\"declare\", gfc_match_oacc_declare, ST_OACC_DECLARE);\n       break;\n     case 'e':\n-      matcha (\"end atomic\", gfc_match_omp_eos, ST_OACC_END_ATOMIC);\n-      matcha (\"end data\", gfc_match_omp_eos, ST_OACC_END_DATA);\n-      matcha (\"end host_data\", gfc_match_omp_eos, ST_OACC_END_HOST_DATA);\n-      matcha (\"end kernels loop\", gfc_match_omp_eos, ST_OACC_END_KERNELS_LOOP);\n-      matcha (\"end kernels\", gfc_match_omp_eos, ST_OACC_END_KERNELS);\n-      matcha (\"end loop\", gfc_match_omp_eos, ST_OACC_END_LOOP);\n-      matcha (\"end parallel loop\", gfc_match_omp_eos,\n+      matcha (\"end atomic\", gfc_match_omp_eos_error, ST_OACC_END_ATOMIC);\n+      matcha (\"end data\", gfc_match_omp_eos_error, ST_OACC_END_DATA);\n+      matcha (\"end host_data\", gfc_match_omp_eos_error, ST_OACC_END_HOST_DATA);\n+      matcha (\"end kernels loop\", gfc_match_omp_eos_error, ST_OACC_END_KERNELS_LOOP);\n+      matcha (\"end kernels\", gfc_match_omp_eos_error, ST_OACC_END_KERNELS);\n+      matcha (\"end loop\", gfc_match_omp_eos_error, ST_OACC_END_LOOP);\n+      matcha (\"end parallel loop\", gfc_match_omp_eos_error,\n \t      ST_OACC_END_PARALLEL_LOOP);\n-      matcha (\"end parallel\", gfc_match_omp_eos, ST_OACC_END_PARALLEL);\n+      matcha (\"end parallel\", gfc_match_omp_eos_error, ST_OACC_END_PARALLEL);\n       matcha (\"enter data\", gfc_match_oacc_enter_data, ST_OACC_ENTER_DATA);\n       matcha (\"exit data\", gfc_match_oacc_exit_data, ST_OACC_EXIT_DATA);\n       break;\n@@ -738,14 +738,17 @@ decode_oacc_directive (void)\n    and if spec_only, goto do_spec_only without actually matching.  */\n #define matchs(keyword, subr, st)\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n+      match m2;\t\t\t\t\t\t\t\\\n       if (spec_only && gfc_match (keyword) == MATCH_YES)\t\\\n \tgoto do_spec_only;\t\t\t\t\t\\\n-      if (match_word_omp_simd (keyword, subr, &old_locus,\t\\\n-\t\t\t       &simd_matched) == MATCH_YES)\t\\\n+      if ((m2 = match_word_omp_simd (keyword, subr, &old_locus,\t\\\n+\t\t\t       &simd_matched)) == MATCH_YES)\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  ret = st;\t\t\t\t\t\t\\\n \t  goto finish;\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else if (m2 == MATCH_ERROR)\t\t\t\t\\\n+\tgoto error_handling;\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n     } while (0)\n@@ -776,27 +779,33 @@ decode_oacc_directive (void)\n /* Like match, but set a flag simd_matched if keyword matched.  */\n #define matchds(keyword, subr, st)\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n-      if (match_word_omp_simd (keyword, subr, &old_locus,\t\\\n-\t\t\t       &simd_matched) == MATCH_YES)\t\\\n+      match m2;\t\t\t\t\t\t\t\\\n+      if ((m2 = match_word_omp_simd (keyword, subr, &old_locus,\t\\\n+\t\t\t       &simd_matched)) == MATCH_YES)\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  ret = st;\t\t\t\t\t\t\\\n \t  goto finish;\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else if (m2 == MATCH_ERROR)\t\t\t\t\\\n+\tgoto error_handling;\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n     } while (0)\n \n /* Like match, but don't match anything if not -fopenmp.  */\n #define matchdo(keyword, subr, st)\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n+      match m2;\t\t\t\t\t\t\t\\\n       if (!flag_openmp)\t\t\t\t\t\t\\\n \t;\t\t\t\t\t\t\t\\\n-      else if (match_word (keyword, subr, &old_locus)\t\t\\\n+      else if ((m2 = match_word (keyword, subr, &old_locus))\t\\\n \t       == MATCH_YES)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  ret = st;\t\t\t\t\t\t\\\n \t  goto finish;\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else if (m2 == MATCH_ERROR)\t\t\t\t\\\n+\tgoto error_handling;\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n     } while (0)\n@@ -889,63 +898,63 @@ decode_omp_directive (void)\n       matcho (\"do\", gfc_match_omp_do, ST_OMP_DO);\n       break;\n     case 'e':\n-      matcho (\"end atomic\", gfc_match_omp_eos, ST_OMP_END_ATOMIC);\n+      matcho (\"end atomic\", gfc_match_omp_eos_error, ST_OMP_END_ATOMIC);\n       matcho (\"end critical\", gfc_match_omp_end_critical, ST_OMP_END_CRITICAL);\n-      matchs (\"end distribute parallel do simd\", gfc_match_omp_eos,\n+      matchs (\"end distribute parallel do simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_DISTRIBUTE_PARALLEL_DO_SIMD);\n-      matcho (\"end distribute parallel do\", gfc_match_omp_eos,\n+      matcho (\"end distribute parallel do\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_DISTRIBUTE_PARALLEL_DO);\n-      matchs (\"end distribute simd\", gfc_match_omp_eos,\n+      matchs (\"end distribute simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_DISTRIBUTE_SIMD);\n-      matcho (\"end distribute\", gfc_match_omp_eos, ST_OMP_END_DISTRIBUTE);\n+      matcho (\"end distribute\", gfc_match_omp_eos_error, ST_OMP_END_DISTRIBUTE);\n       matchs (\"end do simd\", gfc_match_omp_end_nowait, ST_OMP_END_DO_SIMD);\n       matcho (\"end do\", gfc_match_omp_end_nowait, ST_OMP_END_DO);\n-      matchs (\"end simd\", gfc_match_omp_eos, ST_OMP_END_SIMD);\n-      matcho (\"end master\", gfc_match_omp_eos, ST_OMP_END_MASTER);\n-      matchs (\"end ordered\", gfc_match_omp_eos, ST_OMP_END_ORDERED);\n-      matchs (\"end parallel do simd\", gfc_match_omp_eos,\n+      matchs (\"end simd\", gfc_match_omp_eos_error, ST_OMP_END_SIMD);\n+      matcho (\"end master\", gfc_match_omp_eos_error, ST_OMP_END_MASTER);\n+      matchs (\"end ordered\", gfc_match_omp_eos_error, ST_OMP_END_ORDERED);\n+      matchs (\"end parallel do simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_DO_SIMD);\n-      matcho (\"end parallel do\", gfc_match_omp_eos, ST_OMP_END_PARALLEL_DO);\n-      matcho (\"end parallel sections\", gfc_match_omp_eos,\n+      matcho (\"end parallel do\", gfc_match_omp_eos_error, ST_OMP_END_PARALLEL_DO);\n+      matcho (\"end parallel sections\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_SECTIONS);\n-      matcho (\"end parallel workshare\", gfc_match_omp_eos,\n+      matcho (\"end parallel workshare\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_WORKSHARE);\n-      matcho (\"end parallel\", gfc_match_omp_eos, ST_OMP_END_PARALLEL);\n+      matcho (\"end parallel\", gfc_match_omp_eos_error, ST_OMP_END_PARALLEL);\n       matcho (\"end sections\", gfc_match_omp_end_nowait, ST_OMP_END_SECTIONS);\n       matcho (\"end single\", gfc_match_omp_end_single, ST_OMP_END_SINGLE);\n-      matcho (\"end target data\", gfc_match_omp_eos, ST_OMP_END_TARGET_DATA);\n-      matchs (\"end target parallel do simd\", gfc_match_omp_eos,\n+      matcho (\"end target data\", gfc_match_omp_eos_error, ST_OMP_END_TARGET_DATA);\n+      matchs (\"end target parallel do simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_PARALLEL_DO_SIMD);\n-      matcho (\"end target parallel do\", gfc_match_omp_eos,\n+      matcho (\"end target parallel do\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_PARALLEL_DO);\n-      matcho (\"end target parallel\", gfc_match_omp_eos,\n+      matcho (\"end target parallel\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_PARALLEL);\n-      matchs (\"end target simd\", gfc_match_omp_eos, ST_OMP_END_TARGET_SIMD);\n+      matchs (\"end target simd\", gfc_match_omp_eos_error, ST_OMP_END_TARGET_SIMD);\n       matchs (\"end target teams distribute parallel do simd\",\n-\t      gfc_match_omp_eos,\n+\t      gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD);\n-      matcho (\"end target teams distribute parallel do\", gfc_match_omp_eos,\n+      matcho (\"end target teams distribute parallel do\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO);\n-      matchs (\"end target teams distribute simd\", gfc_match_omp_eos,\n+      matchs (\"end target teams distribute simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_TEAMS_DISTRIBUTE_SIMD);\n-      matcho (\"end target teams distribute\", gfc_match_omp_eos,\n+      matcho (\"end target teams distribute\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TARGET_TEAMS_DISTRIBUTE);\n-      matcho (\"end target teams\", gfc_match_omp_eos, ST_OMP_END_TARGET_TEAMS);\n-      matcho (\"end target\", gfc_match_omp_eos, ST_OMP_END_TARGET);\n-      matcho (\"end taskgroup\", gfc_match_omp_eos, ST_OMP_END_TASKGROUP);\n-      matchs (\"end taskloop simd\", gfc_match_omp_eos,\n+      matcho (\"end target teams\", gfc_match_omp_eos_error, ST_OMP_END_TARGET_TEAMS);\n+      matcho (\"end target\", gfc_match_omp_eos_error, ST_OMP_END_TARGET);\n+      matcho (\"end taskgroup\", gfc_match_omp_eos_error, ST_OMP_END_TASKGROUP);\n+      matchs (\"end taskloop simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TASKLOOP_SIMD);\n-      matcho (\"end taskloop\", gfc_match_omp_eos, ST_OMP_END_TASKLOOP);\n-      matcho (\"end task\", gfc_match_omp_eos, ST_OMP_END_TASK);\n-      matchs (\"end teams distribute parallel do simd\", gfc_match_omp_eos,\n+      matcho (\"end taskloop\", gfc_match_omp_eos_error, ST_OMP_END_TASKLOOP);\n+      matcho (\"end task\", gfc_match_omp_eos_error, ST_OMP_END_TASK);\n+      matchs (\"end teams distribute parallel do simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD);\n-      matcho (\"end teams distribute parallel do\", gfc_match_omp_eos,\n+      matcho (\"end teams distribute parallel do\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TEAMS_DISTRIBUTE_PARALLEL_DO);\n-      matchs (\"end teams distribute simd\", gfc_match_omp_eos,\n+      matchs (\"end teams distribute simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TEAMS_DISTRIBUTE_SIMD);\n-      matcho (\"end teams distribute\", gfc_match_omp_eos,\n+      matcho (\"end teams distribute\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_TEAMS_DISTRIBUTE);\n-      matcho (\"end teams\", gfc_match_omp_eos, ST_OMP_END_TEAMS);\n+      matcho (\"end teams\", gfc_match_omp_eos_error, ST_OMP_END_TEAMS);\n       matcho (\"end workshare\", gfc_match_omp_end_nowait,\n \t      ST_OMP_END_WORKSHARE);\n       break;\n@@ -979,7 +988,7 @@ decode_omp_directive (void)\n       break;\n     case 's':\n       matcho (\"sections\", gfc_match_omp_sections, ST_OMP_SECTIONS);\n-      matcho (\"section\", gfc_match_omp_eos, ST_OMP_SECTION);\n+      matcho (\"section\", gfc_match_omp_eos_error, ST_OMP_SECTION);\n       matcho (\"single\", gfc_match_omp_single, ST_OMP_SINGLE);\n       break;\n     case 't':"}, {"sha": "f4819f23d544576f18b6b81a14862b0101ca7be5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8beaf167f7ca723101e87da432870b65ff521e99", "patch": "@@ -1,3 +1,7 @@\n+2019-10-08  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/continuation-free-form.f95: Update dg-error.\n+\n 2019-10-08  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/torture/simd-abi-9.c: Require LP64 for"}, {"sha": "b904f7bf77d73ef5378513c7bf91f57c5c58e0a2", "filename": "gcc/testsuite/gfortran.dg/goacc/continuation-free-form.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcontinuation-free-form.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beaf167f7ca723101e87da432870b65ff521e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcontinuation-free-form.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcontinuation-free-form.f95?ref=8beaf167f7ca723101e87da432870b65ff521e99", "patch": "@@ -16,8 +16,8 @@ program test\n     x = x + 0.3\n   enddo\n   ! continuation must begin with sentinel\n-  !$acc end parallel & ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc end parallel & ! { dg-error \"Unexpected junk\" }\n   ! loop\n \n   print *, x\n-end\n\\ No newline at end of file\n+end"}]}