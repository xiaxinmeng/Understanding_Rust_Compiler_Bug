{"sha": "6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUyNWMwZTdjOWIxNGQyNDQxOTUyMWRhMzJkMDJlYzVlNGI0OGM3Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-01-11T03:29:36Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-01-11T03:29:36Z"}, "message": "rs6000.c (altivec_init_builtins): Add support for lvebx, lvehx, lvewx, lvxl, lvx, stvx, stvebx, stvehx, stvewx, stvxl.\n\n2002-01-10  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/rs6000.c (altivec_init_builtins): Add support for\n        lvebx, lvehx, lvewx, lvxl, lvx, stvx, stvebx, stvehx, stvewx,\n        stvxl.\n        (altivec_expand_builtin): Same.\n        (altivec_expand_stv_builtin): New.\n\n        * config/rs6000/rs6000.h (rs6000_builtins): Same.\n\n        * config/rs6000/rs6000.md (\"altivec_lvebx\"): New.\n        (\"altivec_lvehx\"): New.\n        (\"altivec_lvewx\"): New.\n        (\"altivec_lvxl\"): New.\n        (\"altivec_lvx\"): New.\n        (\"altivec_stvx\"): New.\n        (\"altivec_stvebx\"): New.\n        (\"altivec_stvehx\"): New.\n        (\"altivec_stvewx\"): New.\n        (\"altivec_stvxl\"): New.\n\n        * gcc.dg/altivec-4.c: Add tests for lvebx, lvehx, lvewx, lvxl,\n        lvx, stvx, stvebx, stvehx, stvewx, stvxl.\n\nFrom-SVN: r48761", "tree": {"sha": "cd0263012e0ad9ec3651800b8bee9fbfbf4b66e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd0263012e0ad9ec3651800b8bee9fbfbf4b66e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cda94cbba16f7754f7ce2e74a74af71f83722ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cda94cbba16f7754f7ce2e74a74af71f83722ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cda94cbba16f7754f7ce2e74a74af71f83722ff2"}], "stats": {"total": 260, "additions": 251, "deletions": 9}, "files": [{"sha": "595f7f70de265c6902427a038d4af52bc1ee9b8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "patch": "@@ -1,3 +1,24 @@\n+2002-01-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.c (altivec_init_builtins): Add support for\n+        lvebx, lvehx, lvewx, lvxl, lvx, stvx, stvebx, stvehx, stvewx,\n+        stvxl.\n+        (altivec_expand_builtin): Same.\n+        (altivec_expand_stv_builtin): New.\n+\n+        * config/rs6000/rs6000.h (rs6000_builtins): Same.\n+\n+        * config/rs6000/rs6000.md (\"altivec_lvebx\"): New.\n+        (\"altivec_lvehx\"): New.\n+        (\"altivec_lvewx\"): New.\n+        (\"altivec_lvxl\"): New.\n+        (\"altivec_lvx\"): New.\n+        (\"altivec_stvx\"): New.\n+        (\"altivec_stvebx\"): New.\n+        (\"altivec_stvehx\"): New.\n+        (\"altivec_stvewx\"): New.\n+        (\"altivec_stvxl\"): New.\n+\n 2002-01-10  Richard Henderson  <rth@redhat.com>\n \n \t* cfgrtl.c (delete_insn): Assert insn hasn't been deleted yet."}, {"sha": "97c31099733c941aea294f81a5c4bb3e395f4927", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 126, "deletions": 8, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "patch": "@@ -164,6 +164,7 @@ static rtx altivec_expand_builtin PARAMS ((tree, rtx));\n static rtx altivec_expand_unop_builtin PARAMS ((enum insn_code, tree, rtx));\n static rtx altivec_expand_binop_builtin PARAMS ((enum insn_code, tree, rtx));\n static rtx altivec_expand_ternop_builtin PARAMS ((enum insn_code, tree, rtx));\n+static rtx altivec_expand_stv_builtin PARAMS ((enum insn_code, tree));\n static void rs6000_parse_abi_options PARAMS ((void));\n static int first_altivec_reg_to_save PARAMS ((void));\n static unsigned int compute_vrsave_mask PARAMS ((void));\n@@ -3473,6 +3474,42 @@ altivec_expand_binop_builtin (icode, arglist, target)\n \n   return target;\n }\n+\n+static rtx\n+altivec_expand_stv_builtin (icode, arglist)\n+     enum insn_code icode;\n+     tree arglist;\n+{\n+  tree arg0 = TREE_VALUE (arglist);\n+  tree arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n+  tree arg2 = TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist)));\n+  rtx op0 = expand_expr (arg0, NULL_RTX, VOIDmode, 0);\n+  rtx op1 = expand_expr (arg1, NULL_RTX, VOIDmode, 0);\n+  rtx op2 = expand_expr (arg2, NULL_RTX, VOIDmode, 0);\n+  rtx pat;\n+  enum machine_mode mode0 = insn_data[icode].operand[0].mode;\n+  enum machine_mode mode1 = insn_data[icode].operand[1].mode;\n+  enum machine_mode mode2 = insn_data[icode].operand[2].mode;\n+\n+  /* Invalid arguments.  Bail before doing anything stoopid!  */\n+  if (arg0 == error_mark_node\n+      || arg1 == error_mark_node\n+      || arg2 == error_mark_node)\n+    return NULL_RTX;\n+\n+  if (! (*insn_data[icode].operand[2].predicate) (op0, mode2))\n+    op0 = copy_to_mode_reg (mode2, op0);\n+  if (! (*insn_data[icode].operand[0].predicate) (op1, mode0))\n+    op1 = copy_to_mode_reg (mode0, op1);\n+  if (! (*insn_data[icode].operand[1].predicate) (op2, mode1))\n+    op2 = copy_to_mode_reg (mode1, op2);\n+\n+  pat = GEN_FCN (icode) (op1, op2, op0);\n+  if (pat)\n+    emit_insn (pat);\n+  return NULL_RTX;\n+}\n+\n static rtx\n altivec_expand_ternop_builtin (icode, arglist, target)\n      enum insn_code icode;\n@@ -3693,6 +3730,17 @@ altivec_expand_builtin (exp, target)\n \temit_insn (pat);\n       return NULL_RTX;\n \n+    case ALTIVEC_BUILTIN_STVX:\n+      return altivec_expand_stv_builtin (CODE_FOR_altivec_stvx, arglist);\n+    case ALTIVEC_BUILTIN_STVEBX:\n+      return altivec_expand_stv_builtin (CODE_FOR_altivec_stvebx, arglist);\n+    case ALTIVEC_BUILTIN_STVEHX:\n+      return altivec_expand_stv_builtin (CODE_FOR_altivec_stvehx, arglist);\n+    case ALTIVEC_BUILTIN_STVEWX:\n+      return altivec_expand_stv_builtin (CODE_FOR_altivec_stvewx, arglist);\n+    case ALTIVEC_BUILTIN_STVXL:\n+      return altivec_expand_stv_builtin (CODE_FOR_altivec_stvxl, arglist);\n+  \n     case ALTIVEC_BUILTIN_MFVSCR:\n       icode = CODE_FOR_altivec_mfvscr;\n       tmode = insn_data[icode].operand[0].mode;\n@@ -3798,13 +3846,34 @@ altivec_expand_builtin (exp, target)\n     if (d->code == fcode)\n       return altivec_expand_binop_builtin (d->icode, arglist, target);\n \n-  /* LVS* are funky.  We initialized them differently.  */\n-  if (fcode == ALTIVEC_BUILTIN_LVSL)\n-    return altivec_expand_binop_builtin (CODE_FOR_altivec_lvsl,\n-\t\t\t\t\t arglist, target);\n-  if (fcode == ALTIVEC_BUILTIN_LVSR)\n-    return altivec_expand_binop_builtin (CODE_FOR_altivec_lvsr,\n-\t\t\t\t\t arglist, target);\n+  /* LV* are funky.  We initialized them differently.  */\n+  switch (fcode)\n+    {\n+    case ALTIVEC_BUILTIN_LVSL:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvsl,\n+\t\t\t\t\t   arglist, target);\n+    case ALTIVEC_BUILTIN_LVSR:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvsr,\n+\t\t\t\t\t   arglist, target);\n+    case ALTIVEC_BUILTIN_LVEBX:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvebx,\n+\t\t\t\t\t   arglist, target);\n+    case ALTIVEC_BUILTIN_LVEHX:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvehx,\n+\t\t\t\t\t   arglist, target);\n+    case ALTIVEC_BUILTIN_LVEWX:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvewx,\n+\t\t\t\t\t   arglist, target);\n+    case ALTIVEC_BUILTIN_LVXL:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvxl,\n+\t\t\t\t\t   arglist, target);\n+    case ALTIVEC_BUILTIN_LVX:\n+      return altivec_expand_binop_builtin (CODE_FOR_altivec_lvx,\n+\t\t\t\t\t   arglist, target);\n+    default:\n+      break;\n+      /* Fall through.  */\n+    }\n \n   /* Handle simple ternary operations.  */\n   d = (struct builtin_description *) bdesc_3arg;\n@@ -3967,6 +4036,33 @@ altivec_init_builtins (void)\n \t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n \t\t\t\t      endlink));\n \n+  /* void foo (vint, int, void *).  */\n+  tree void_ftype_v4si_int_pvoid\n+    = build_function_type (void_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n+\t\t\t\t\t\t tree_cons (NULL_TREE,\n+\t\t\t\t\t\t\t    pvoid_type_node,\n+\t\t\t\t\t\t\t    endlink))));\n+\n+  /* void foo (vchar, int, void *).  */\n+  tree void_ftype_v16qi_int_pvoid\n+    = build_function_type (void_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n+\t\t\t\t\t\t tree_cons (NULL_TREE,\n+\t\t\t\t\t\t\t    pvoid_type_node,\n+\t\t\t\t\t\t\t    endlink))));\n+\n+  /* void foo (vshort, int, void *).  */\n+  tree void_ftype_v8hi_int_pvoid\n+    = build_function_type (void_type_node,\n+\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n+\t\t\t\t\t\t tree_cons (NULL_TREE,\n+\t\t\t\t\t\t\t    pvoid_type_node,\n+\t\t\t\t\t\t\t    endlink))));\n+\n   /* void foo (char).  */\n   tree void_ftype_qi\n     = build_function_type (void_type_node,\n@@ -4191,6 +4287,18 @@ altivec_init_builtins (void)\n \t\t\t\t      tree_cons (NULL_TREE, pvoid_type_node,\n \t\t\t\t\t\t endlink)));\n \n+  tree v4si_ftype_int_pvoid\n+    = build_function_type (V4SI_type_node,\n+\t\t\t   tree_cons (NULL_TREE, integer_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, pvoid_type_node,\n+\t\t\t\t\t\t endlink)));\n+\n+  tree v8hi_ftype_int_pvoid\n+    = build_function_type (V8HI_type_node,\n+\t\t\t   tree_cons (NULL_TREE, integer_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, pvoid_type_node,\n+\t\t\t\t\t\t endlink)));\n+\n   tree int_ftype_v8hi_v8hi\n     = build_function_type (integer_type_node,\n \t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n@@ -4211,7 +4319,17 @@ altivec_init_builtins (void)\n   def_builtin (MASK_ALTIVEC, \"__builtin_altivec_dss\", void_ftype_qi, ALTIVEC_BUILTIN_DSS);\n   def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvsl\", v16qi_ftype_int_pvoid, ALTIVEC_BUILTIN_LVSL);\n   def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvsr\", v16qi_ftype_int_pvoid, ALTIVEC_BUILTIN_LVSR);\n-\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvebx\", v16qi_ftype_int_pvoid, ALTIVEC_BUILTIN_LVEBX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvehx\", v8hi_ftype_int_pvoid, ALTIVEC_BUILTIN_LVEHX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvewx\", v4si_ftype_int_pvoid, ALTIVEC_BUILTIN_LVEWX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvxl\", v4si_ftype_int_pvoid, ALTIVEC_BUILTIN_LVXL);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_lvx\", v4si_ftype_int_pvoid, ALTIVEC_BUILTIN_LVX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_stvx\", void_ftype_v4si_int_pvoid, ALTIVEC_BUILTIN_STVX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_stvebx\", void_ftype_v16qi_int_pvoid, ALTIVEC_BUILTIN_STVEBX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_stvehx\", void_ftype_v8hi_int_pvoid, ALTIVEC_BUILTIN_STVEHX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_stvewx\", void_ftype_v4si_int_pvoid, ALTIVEC_BUILTIN_STVEWX);\n+  def_builtin (MASK_ALTIVEC, \"__builtin_altivec_stvxl\", void_ftype_v4si_int_pvoid, ALTIVEC_BUILTIN_STVXL);\n+  \n   /* Add the simple ternary operators.  */\n   d = (struct builtin_description *) bdesc_3arg;\n   for (i = 0; i < sizeof (bdesc_3arg) / sizeof *d; i++, d++)"}, {"sha": "589dc9d6645f563a167d6d8ff61f10779e1b1f2b", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "patch": "@@ -2977,5 +2977,15 @@ enum rs6000_builtins\n   ALTIVEC_BUILTIN_DSTT,\n   ALTIVEC_BUILTIN_DSTST,\n   ALTIVEC_BUILTIN_DSTSTT,\n-  ALTIVEC_BUILTIN_DST\n+  ALTIVEC_BUILTIN_DST,\n+  ALTIVEC_BUILTIN_LVEBX,\n+  ALTIVEC_BUILTIN_LVEHX,\n+  ALTIVEC_BUILTIN_LVEWX,\n+  ALTIVEC_BUILTIN_LVXL,\n+  ALTIVEC_BUILTIN_LVX,\n+  ALTIVEC_BUILTIN_STVX,\n+  ALTIVEC_BUILTIN_STVEBX,\n+  ALTIVEC_BUILTIN_STVEHX,\n+  ALTIVEC_BUILTIN_STVEWX,\n+  ALTIVEC_BUILTIN_STVXL\n };"}, {"sha": "38bd1dd02415081e6084ef5db67de478688595da", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6525c0e7c9b14d24419521da32d02ec5e4b48c7c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=6525c0e7c9b14d24419521da32d02ec5e4b48c7c", "patch": "@@ -15473,3 +15473,96 @@\n   \"TARGET_ALTIVEC\"\n   \"lvsr %0,%1,%2\"\n   [(set_attr \"type\" \"vecload\")])\n+\n+(define_insn \"altivec_lvebx\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+\t(unspec:V16QI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t       (match_operand:SI 2 \"register_operand\" \"r\")] 196))]\n+  \"TARGET_ALTIVEC\"\n+  \"lvebx %0,%1,%2\"\n+  [(set_attr \"type\" \"vecload\")])\n+\n+(define_insn \"altivec_lvehx\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+\t(unspec:V8HI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t      (match_operand:SI 2 \"register_operand\" \"r\")] 197))]\n+  \"TARGET_ALTIVEC\"\n+  \"lvehx %0,%1,%2\"\n+  [(set_attr \"type\" \"vecload\")])\n+\n+(define_insn \"altivec_lvewx\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(unspec:V4SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t      (match_operand:SI 2 \"register_operand\" \"r\")] 198))]\n+  \"TARGET_ALTIVEC\"\n+  \"lvewx %0,%1,%2\"\n+  [(set_attr \"type\" \"vecload\")])\n+\n+(define_insn \"altivec_lvxl\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(unspec:V4SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t      (match_operand:SI 2 \"register_operand\" \"r\")] 199))]\n+  \"TARGET_ALTIVEC\"\n+  \"lvxl %0,%1,%2\"\n+  [(set_attr \"type\" \"vecload\")])\n+\n+(define_insn \"altivec_lvx\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(unspec:V4SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t      (match_operand:SI 2 \"register_operand\" \"r\")] 200))]\n+  \"TARGET_ALTIVEC\"\n+  \"lvx %0,%1,%2\"\n+  [(set_attr \"type\" \"vecload\")])\n+\n+(define_insn \"altivec_stvx\"\n+  [(set (mem:V4SI\n+\t (and:SI (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (const_int -16)))\n+\t(match_operand:V4SI 2 \"register_operand\" \"v\"))]\n+  \"TARGET_ALTIVEC\"\n+  \"stvx %2,%0,%1\"\n+  [(set_attr \"type\" \"vecstore\")])\n+\n+(define_insn \"altivec_stvxl\"\n+  [(parallel\n+    [(set (mem:V4SI\n+\t   (and:SI (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t    (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t   (const_int -16)))\n+\t  (match_operand:V4SI 2 \"register_operand\" \"v\"))\n+     (unspec [(const_int 0)] 201)])]\n+  \"TARGET_ALTIVEC\"\n+  \"stvxl %2,%0,%1\"\n+  [(set_attr \"type\" \"vecstore\")])\n+\n+(define_insn \"altivec_stvebx\"\n+  [(parallel\n+    [(set (mem:V16QI\n+\t   (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t    (match_operand:SI 1 \"register_operand\" \"r\")))\n+\t  (match_operand:V16QI 2 \"register_operand\" \"v\"))\n+     (unspec [(const_int 0)] 202)])]\n+  \"TARGET_ALTIVEC\"\n+  \"stvebx %2,%0,%1\"\n+  [(set_attr \"type\" \"vecstore\")])\n+\n+(define_insn \"altivec_stvehx\"\n+  [(set (mem:V8HI\n+\t (and:SI (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (const_int -2)))\n+\t(match_operand:V8HI 2 \"register_operand\" \"v\"))]\n+  \"TARGET_ALTIVEC\"\n+  \"stvehx %2,%0,%1\"\n+  [(set_attr \"type\" \"vecstore\")])\n+\n+(define_insn \"altivec_stvewx\"\n+  [(set (mem:V4SI\n+\t (and:SI (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (const_int -4)))\n+\t(match_operand:V4SI 2 \"register_operand\" \"v\"))]\n+  \"TARGET_ALTIVEC\"\n+  \"stvewx %2,%0,%1\"\n+  [(set_attr \"type\" \"vecstore\")])"}]}