{"sha": "57e28d7d7659ab3102d38deba7f02a687aa316d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdlMjhkN2Q3NjU5YWIzMTAyZDM4ZGViYTdmMDJhNjg3YWEzMTZkOA==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-09-18T13:56:23Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-09-18T13:56:23Z"}, "message": "tree-ssa-alias.c (setup_pointers_and_addressables): Don't remove TREE_ADDRESSABLE from RESULT_DECL.\n\n\n\t* tree-ssa-alias.c (setup_pointers_and_addressables): Don't\n\tremove TREE_ADDRESSABLE from RESULT_DECL.\n\ntestsuite/ChangeLog\n\n\t* g++.dg/tree-ssa/pr17153.C: New test.\n\nFrom-SVN: r87703", "tree": {"sha": "b930e73e02a40127413fdb1bc90059652e33b9ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b930e73e02a40127413fdb1bc90059652e33b9ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57e28d7d7659ab3102d38deba7f02a687aa316d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e28d7d7659ab3102d38deba7f02a687aa316d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e28d7d7659ab3102d38deba7f02a687aa316d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e28d7d7659ab3102d38deba7f02a687aa316d8/comments", "author": null, "committer": null, "parents": [{"sha": "d804d49087857633caca2730e5a9dab9a059b9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d804d49087857633caca2730e5a9dab9a059b9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d804d49087857633caca2730e5a9dab9a059b9fb"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "8ac669211072193cd55a943a9958728c2ab80468", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57e28d7d7659ab3102d38deba7f02a687aa316d8", "patch": "@@ -1,3 +1,8 @@\n+2004-09-18  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree-ssa-alias.c (setup_pointers_and_addressables): Don't\n+\tremove TREE_ADDRESSABLE from RESULT_DECL.\n+\n 2004-09-18  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa-alias.c (dump_alias_info): Ignore NULL SSA_NAMEs."}, {"sha": "4bb46044e19981d92b4bc4eea37bfbd132c537b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57e28d7d7659ab3102d38deba7f02a687aa316d8", "patch": "@@ -1,3 +1,7 @@\n+2004-09-18  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* g++.dg/tree-ssa/pr17153.C: New test.\n+\n 2004-09-16  Geoffrey Keating  <geoffk@apple.com>\n \n \tPR pch/13361"}, {"sha": "91b4cfe1503eba9723a235c696cc20fe8957609e", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr17153.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr17153.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr17153.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr17153.C?ref=57e28d7d7659ab3102d38deba7f02a687aa316d8", "patch": "@@ -0,0 +1,17 @@\n+/* The alias analyzer was marking RETVAL non-addressable, but RETVAL\n+   is a special variable that's available across different functions.  */\n+void foo(const char*);\n+\n+struct A {};\n+\n+struct B : A\n+{\n+    B(){}\n+    B bar()\n+    {\n+        foo(__PRETTY_FUNCTION__);\n+        return B();\n+    };\n+};\n+\n+B b=B().bar();"}, {"sha": "baf5ff27696052d6e1609ac81528d71ee6c2c8c3", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e28d7d7659ab3102d38deba7f02a687aa316d8/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=57e28d7d7659ab3102d38deba7f02a687aa316d8", "patch": "@@ -1347,6 +1347,7 @@ setup_pointers_and_addressables (struct alias_info *ai)\n \t{\n \t  if (!bitmap_bit_p (ai->addresses_needed, v_ann->uid)\n \t      && v_ann->mem_tag_kind == NOT_A_TAG\n+\t      && TREE_CODE (var) != RESULT_DECL\n \t      && !is_global_var (var))\n \t    {\n \t      /* The address of VAR is not needed, remove the"}]}