{"sha": "f3e3b4762bfe7caec5bfa50e758bea45ef74e7de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNlM2I0NzYyYmZlN2NhZWM1YmZhNTBlNzU4YmVhNDVlZjc0ZTdkZQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-07-02T16:34:55Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-07-02T16:34:55Z"}, "message": "Script to check patches violating the GNU style.\n\n2010-07-02  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* check_GNU_style.sh: New.\n\nFrom-SVN: r161729", "tree": {"sha": "a5caf16ff39d0296297d0b5a82b6f1a6c42560c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5caf16ff39d0296297d0b5a82b6f1a6c42560c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e444c392d7ab69d0dcd299df8abbac067d07dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e444c392d7ab69d0dcd299df8abbac067d07dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e444c392d7ab69d0dcd299df8abbac067d07dc"}], "stats": {"total": 121, "additions": 121, "deletions": 0}, "files": [{"sha": "89c781745b7af5559474375a9467318f3f45b7db", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=f3e3b4762bfe7caec5bfa50e758bea45ef74e7de", "patch": "@@ -1,3 +1,7 @@\n+2010-07-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* check_GNU_style.sh: New.\n+\n 2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* make_sunver.pl: New file."}, {"sha": "6396417fab741289b98d7239e7464828b37ea7f2", "filename": "contrib/check_GNU_style.sh", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de/contrib%2Fcheck_GNU_style.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e3b4762bfe7caec5bfa50e758bea45ef74e7de/contrib%2Fcheck_GNU_style.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.sh?ref=f3e3b4762bfe7caec5bfa50e758bea45ef74e7de", "patch": "@@ -0,0 +1,117 @@\n+#!/bin/sh\n+\n+# Checks some of the GNU style formatting rules in a set of patches.\n+# Copyright (C) 2010  Free Software Foundation, Inc.\n+# Contributed by Sebastian Pop <sebastian.pop@amd.com>\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+\n+usage() {\n+    cat <<EOF\n+check_GNU_style.sh [patch]...\n+\n+    Checks the patches for some of the GNU style formatting problems.\n+    Please note that these checks are not always accurate, and\n+    complete.  The reference documentation of the GNU Coding Standards\n+    can be found here: http://www.gnu.org/prep/standards_toc.html\n+    and there are also some additional coding conventions for GCC:\n+    http://gcc.gnu.org/codingconventions.html\n+\n+EOF\n+    exit 1\n+}\n+\n+test $# -eq 0 && usage\n+\n+tmp=check_GNU_style.tmp\n+\n+# Grep\n+g (){\n+    msg=\"$1\"\n+    arg=\"$2\"\n+    shift 2\n+    grep -nH '^+' $* \\\n+\t| grep -v ':+++' \\\n+\t| egrep --color=always -- \"$arg\" \\\n+\t> $tmp && printf \"\\n$msg\\n\"\n+    cat $tmp\n+}\n+\n+# And Grep\n+ag (){\n+    msg=\"$1\"\n+    arg1=\"$2\"\n+    arg2=\"$3\"\n+    shift 3\n+    grep -nH '^+' $* \\\n+\t| grep -v ':+++' \\\n+\t| egrep --color=always -- \"$arg1\" \\\n+\t| egrep --color=always -- \"$arg2\" \\\n+\t> $tmp && printf \"\\n$msg\\n\"\n+    cat $tmp\n+}\n+\n+# reVerse Grep\n+vg (){\n+    msg=\"$1\"\n+    varg=\"$2\"\n+    arg=\"$3\"\n+    shift 3\n+    grep -nH '^+' $* \\\n+\t| grep -v ':+++' \\\n+\t| egrep -v -- \"$varg\" \\\n+\t| egrep --color=always -- \"$arg\" \\\n+\t> $tmp && printf \"\\n$msg\\n\"\n+    cat $tmp\n+}\n+\n+col (){\n+    msg=\"$1\"\n+    shift 1\n+    grep -nH '^+' $* \\\n+\t| grep -v ':+++' \\\n+\t| cut -f 2 -d '+' \\\n+\t| awk '{ if (length ($0) > 80) print $0 }' \\\n+\t> $tmp && printf \"\\n$msg\\n\"\n+    cat $tmp\n+}\n+\n+col 'Lines should not exceed 80 characters.' $*\n+\n+g 'Trailing whitespace.' \\\n+    '[[:space:]]$' $*\n+\n+g 'Space before dot.' \\\n+    '[[:alnum:]][[:blank:]]+\\.' $*\n+\n+g 'Dot, space, space, new sentence.' \\\n+    '[[:alnum:]]\\.([[:blank:]]|[[:blank:]]{3,})[[:alnum:]]' $*\n+\n+g 'Dot, space, space, end of comment.' \\\n+    '[[:alnum:]]\\.([[:blank:]]{0,1}|[[:blank:]]{3,})\\*/' $*\n+\n+g 'Sentences should end with a dot.  Dot, space, space, end of the comment.' \\\n+    '[[:alnum:]][[:blank:]]*\\*/' $*\n+\n+vg 'There should be exactly one space between function name and parentheses.' \\\n+    '\\#define' '[[:alnum:]]([^[:blank:]]|[[:blank:]]{2,})\\(' $*\n+\n+g 'There should be no space before closing parentheses.' \\\n+    '[[:graph:]][[:blank:]]+\\)' $*\n+\n+ag 'Braces should be on a separate line.' \\\n+    '\\{' 'if[[:blank:]]\\(|while[[:blank:]]\\(|switch[[:blank:]]\\(' $*\n+\n+"}]}