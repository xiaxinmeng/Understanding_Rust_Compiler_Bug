{"sha": "a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1YjcyZmE3ZjMxOGFiNGUyYmJkYWRkYzA3MzViMWYyMTg1ZGRkMA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-12-06T22:57:13Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-12-06T22:57:13Z"}, "message": "re PR fortran/41478 (Corrupted memory using PACK for derived-types with allocated components)\n\nlibgfortran/\n2009-12-06  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41478\n\tPR fortran/42268\n\t* intrinsics/pack_generic.c (pack): Add safety checks for the case that\n\t'vector' is NULL.\n\n\ngcc/testsuite/\n2009-12-06  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41478\n\tPR fortran/42268\n\t* gfortran.dg/intrinsic_pack_5.f90: New test.\n\nFrom-SVN: r155024", "tree": {"sha": "d61a66c25b72f8351ac63e7b728dc56d39eba781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d61a66c25b72f8351ac63e7b728dc56d39eba781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "7ce19472e93433cd76ebcedd04155a6a8f77339b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "patch": "@@ -1,3 +1,9 @@\n+2009-12-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41478\n+\tPR fortran/42268\n+\t* gfortran.dg/intrinsic_pack_5.f90: New test.\n+\n 2009-12-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/42010"}, {"sha": "c0540b63d3ebab1bd2cbfd073f146f0d8c7acf1a", "filename": "gcc/testsuite/gfortran.dg/intrinsic_pack_5.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsic_pack_5.f90?ref=a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do run }\n+!\n+! PR 41478: Corrupted memory using PACK for derived-types with allocated components\n+! PR 42268: [4.4/4.5 Regression] derived type segfault with pack\n+!\n+! Original test case by Juergen Reuter <reuter@physik.uni-freiburg.de>\n+! Modified by Janus Weil <janus@gcc.gnu.org>\n+\n+type :: container_t\n+  integer:: entry = -1\n+end type container_t\n+type(container_t), dimension(1) :: a1, a2\n+a2(1)%entry = 1\n+a1 = pack (a2, mask = [.true.])\n+if (a1(1)%entry/=1) call abort()\n+end"}, {"sha": "3c63896e2ee7406a15f57dcdff0175464a63b2d0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "patch": "@@ -1,3 +1,10 @@\n+2009-12-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41478\n+\tPR fortran/42268\n+\t* intrinsics/pack_generic.c (pack): Add safety checks for the case that\n+\t'vector' is NULL.\n+\n 2009-12-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in: Regenerate."}, {"sha": "ee6a4831db8c959c6797fc8a315cbca370bf083d", "filename": "libgfortran/intrinsics/pack_generic.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/libgfortran%2Fintrinsics%2Fpack_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0/libgfortran%2Fintrinsics%2Fpack_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fpack_generic.c?ref=a15b72fa7f318ab4e2bbdaddc0735b1f2185ddd0", "patch": "@@ -346,7 +346,7 @@ pack (gfc_array_char *ret, const gfc_array_char *array,\n \n     case GFC_DTYPE_DERIVED_2:\n       if (GFC_UNALIGNED_2(ret->data) || GFC_UNALIGNED_2(array->data)\n-\t  || GFC_UNALIGNED_2(vector->data))\n+\t  || (vector && GFC_UNALIGNED_2(vector->data)))\n \tbreak;\n       else\n \t{\n@@ -357,7 +357,7 @@ pack (gfc_array_char *ret, const gfc_array_char *array,\n \n     case GFC_DTYPE_DERIVED_4:\n       if (GFC_UNALIGNED_4(ret->data) || GFC_UNALIGNED_4(array->data)\n-\t  || GFC_UNALIGNED_4(vector->data))\n+\t  || (vector && GFC_UNALIGNED_4(vector->data)))\n \tbreak;\n       else\n \t{\n@@ -368,7 +368,7 @@ pack (gfc_array_char *ret, const gfc_array_char *array,\n \n     case GFC_DTYPE_DERIVED_8:\n       if (GFC_UNALIGNED_8(ret->data) || GFC_UNALIGNED_8(array->data)\n-\t  || GFC_UNALIGNED_8(vector->data))\n+\t  || (vector && GFC_UNALIGNED_8(vector->data)))\n \tbreak;\n       else\n \t{\n@@ -379,7 +379,7 @@ pack (gfc_array_char *ret, const gfc_array_char *array,\n #ifdef HAVE_GFC_INTEGER_16\n     case GFC_DTYPE_DERIVED_16:\n       if (GFC_UNALIGNED_16(ret->data) || GFC_UNALIGNED_16(array->data)\n-\t  || GFC_UNALIGNED_16(vector->data))\n+\t  || (vector && GFC_UNALIGNED_16(vector->data)))\n \tbreak;\n       else\n \t{"}]}