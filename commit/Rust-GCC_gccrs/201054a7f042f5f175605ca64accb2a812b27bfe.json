{"sha": "201054a7f042f5f175605ca64accb2a812b27bfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxMDU0YTdmMDQyZjVmMTc1NjA1Y2E2NGFjY2IyYTgxMmIyN2JmZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-09-26T03:29:07Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-09-26T03:29:07Z"}, "message": "runtime, os: fix the build on Solaris\n    \n    Reviewed-on: https://go-review.googlesource.com/137535\n\nFrom-SVN: r264593", "tree": {"sha": "324a23e4c2f0dc50fd84d9525e2f3c6249a4f302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/324a23e4c2f0dc50fd84d9525e2f3c6249a4f302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/201054a7f042f5f175605ca64accb2a812b27bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201054a7f042f5f175605ca64accb2a812b27bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201054a7f042f5f175605ca64accb2a812b27bfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201054a7f042f5f175605ca64accb2a812b27bfe/comments", "author": null, "committer": null, "parents": [{"sha": "a1f9402ebd8935321a013695409772bac5715cde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f9402ebd8935321a013695409772bac5715cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1f9402ebd8935321a013695409772bac5715cde"}], "stats": {"total": 67, "additions": 62, "deletions": 5}, "files": [{"sha": "c306628e34b670bf082b085638f7bdebcb759568", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201054a7f042f5f175605ca64accb2a812b27bfe/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201054a7f042f5f175605ca64accb2a812b27bfe/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=201054a7f042f5f175605ca64accb2a812b27bfe", "patch": "@@ -1,4 +1,4 @@\n-652fbfb7acfd81ceffe28e20984464aa7bb6024d\n+e7b98cf0a380eb45791cd5c52897224a686dcdec\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a2ad62a891386a201be91b5f0f6d9e8e2ab199e0", "filename": "libgo/go/os/executable_solaris.go", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201054a7f042f5f175605ca64accb2a812b27bfe/libgo%2Fgo%2Fos%2Fexecutable_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201054a7f042f5f175605ca64accb2a812b27bfe/libgo%2Fgo%2Fos%2Fexecutable_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexecutable_solaris.go?ref=201054a7f042f5f175605ca64accb2a812b27bfe", "patch": "@@ -4,14 +4,18 @@\n \n package os\n \n-import \"syscall\"\n+import (\n+\t\"syscall\"\n+\t_ \"unsafe\" // for go:linkname\n+)\n \n-var executablePath string // set by sysauxv in ../runtime/os3_solaris.go\n+// solarisExecutablePath is defined in the runtime package.\n+func solarisExecutablePath() string\n \n var initCwd, initCwdErr = Getwd()\n \n func executable() (string, error) {\n-\tpath := executablePath\n+\tpath := solarisExecutablePath()\n \tif len(path) == 0 {\n \t\tpath, err := syscall.Getexecname()\n \t\tif err != nil {"}, {"sha": "c19f797f5e0a89196dd5a4730336229d545c5657", "filename": "libgo/go/runtime/os3_solaris.go", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201054a7f042f5f175605ca64accb2a812b27bfe/libgo%2Fgo%2Fruntime%2Fos3_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201054a7f042f5f175605ca64accb2a812b27bfe/libgo%2Fgo%2Fruntime%2Fos3_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fos3_solaris.go?ref=201054a7f042f5f175605ca64accb2a812b27bfe", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package runtime\n+\n+import (\n+\t\"runtime/internal/sys\"\n+\t\"unsafe\"\n+)\n+\n+var executablePath string\n+\n+func sysargs(argc int32, argv **byte) {\n+\tn := argc + 1\n+\n+\t// skip over argv, envp to get to auxv\n+\tfor argv_index(argv, n) != nil {\n+\t\tn++\n+\t}\n+\n+\t// skip NULL separator\n+\tn++\n+\n+\t// now argv+n is auxv\n+\tauxv := (*[1 << 28]uintptr)(add(unsafe.Pointer(argv), uintptr(n)*sys.PtrSize))\n+\tsysauxv(auxv[:])\n+}\n+\n+const (\n+\t_AT_NULL         = 0    // Terminates the vector\n+\t_AT_PAGESZ       = 6    // Page size in bytes\n+\t_AT_SUN_EXECNAME = 2014 // exec() path name\n+)\n+\n+func sysauxv(auxv []uintptr) {\n+\tfor i := 0; auxv[i] != _AT_NULL; i += 2 {\n+\t\ttag, val := auxv[i], auxv[i+1]\n+\t\tswitch tag {\n+\t\tcase _AT_PAGESZ:\n+\t\t\tphysPageSize = val\n+\t\tcase _AT_SUN_EXECNAME:\n+\t\t\texecutablePath = gostringnocopy((*byte)(unsafe.Pointer(val)))\n+\t\t}\n+\t}\n+}\n+\n+//go:linkname solarisExecutablePath os.solarisExecutablePath\n+\n+// solarisExecutablePath is called from the os package to fetch the\n+// saved executable path.\n+func solarisExecutablePath() string {\n+\treturn executablePath\n+}"}, {"sha": "1af693be2e66852e5703eef68ecada00b43bf479", "filename": "libgo/go/runtime/stubs3.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201054a7f042f5f175605ca64accb2a812b27bfe/libgo%2Fgo%2Fruntime%2Fstubs3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201054a7f042f5f175605ca64accb2a812b27bfe/libgo%2Fgo%2Fruntime%2Fstubs3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fstubs3.go?ref=201054a7f042f5f175605ca64accb2a812b27bfe", "patch": "@@ -3,7 +3,6 @@\n // license that can be found in the LICENSE file.\n \n // +build !plan9\n-// +build !solaris\n // +build !windows\n // +build !nacl\n // +build !freebsd"}]}