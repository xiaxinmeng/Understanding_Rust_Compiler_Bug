{"sha": "94c4084cf009939db425be4f6552b7f29f8587b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjNDA4NGNmMDA5OTM5ZGI0MjViZTRmNjU1MmI3ZjI5Zjg1ODdiMw==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2014-10-09T17:52:00Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2014-10-09T17:52:00Z"}, "message": "Fix r216010 fallout\n\nThis fixes fallout from r216010, which causes Firefox build failures.\nJust move the gcc_assert below the new if statement.\n\nFrom-SVN: r216041", "tree": {"sha": "b60169a03d162e85ccd8f195f290653cb436daaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b60169a03d162e85ccd8f195f290653cb436daaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94c4084cf009939db425be4f6552b7f29f8587b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c4084cf009939db425be4f6552b7f29f8587b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c4084cf009939db425be4f6552b7f29f8587b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c4084cf009939db425be4f6552b7f29f8587b3/comments", "author": null, "committer": null, "parents": [{"sha": "d0ff1cb4d9b1972e0aa9535d77413e12c4e84fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ff1cb4d9b1972e0aa9535d77413e12c4e84fa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ff1cb4d9b1972e0aa9535d77413e12c4e84fa2"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "280101caed57735a34711e4c970bf9812a058322", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94c4084cf009939db425be4f6552b7f29f8587b3", "patch": "@@ -1,3 +1,8 @@\n+2014-10-09  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\t* pa-polymorphic-call.c (check_stmt_for_type_change): Move\n+\tassertion.\n+\n 2014-10-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63380"}, {"sha": "7d58601ae365b8c829f5c1a1e4c9172f43c082dc", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=94c4084cf009939db425be4f6552b7f29f8587b3", "patch": "@@ -1424,9 +1424,9 @@ check_stmt_for_type_change (ao_ref *ao ATTRIBUTE_UNUSED, tree vdef, void *data)\n \t}\n \n       type = extr_type_from_vtbl_ptr_store (stmt, tci, &offset);\n-      gcc_assert (!type || TYPE_MAIN_VARIANT (type) == type);\n       if (type == error_mark_node)\n \treturn false;\n+      gcc_assert (!type || TYPE_MAIN_VARIANT (type) == type);\n       if (!type)\n \t{\n \t  if (dump_file)"}, {"sha": "89d7f847909f5772c1841dac06ec76f622272dec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94c4084cf009939db425be4f6552b7f29f8587b3", "patch": "@@ -1,3 +1,7 @@\n+2014-10-09  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\t* g++.dg/ipa/polymorphic-call-1.C: New testcase.\n+\n 2014-10-09  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* g++.dg/cpp0x/constexpr-52892-1.C: Error on missing const in C++14."}, {"sha": "2b5b5447834986e0b9fb9cf19d3d8a6c7f912ee3", "filename": "gcc/testsuite/g++.dg/ipa/polymorphic-call-1.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpolymorphic-call-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c4084cf009939db425be4f6552b7f29f8587b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpolymorphic-call-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpolymorphic-call-1.C?ref=94c4084cf009939db425be4f6552b7f29f8587b3", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+class A;\n+class B\n+{\n+  A *mRawPtr;\n+\n+public:\n+  void *StartAssignment___trans_tmp_2;\n+  A **\n+  m_fn1 ()\n+  {\n+    StartAssignment___trans_tmp_2 = &mRawPtr;\n+    return reinterpret_cast<A **> (StartAssignment___trans_tmp_2);\n+  }\n+};\n+class C\n+{\n+public:\n+  C (B &p1) : mTargetSmartPtr (p1) {}\n+  operator A **() { return mTargetSmartPtr.m_fn1 (); }\n+  B &mTargetSmartPtr;\n+};\n+class A\n+{\n+public:\n+  A ();\n+};\n+class D\n+{\n+  D (bool);\n+  B mNewEntry;\n+  virtual int m_fn2 ();\n+};\n+C\n+fn1 (B &p1)\n+{\n+  return p1;\n+}\n+void\n+fn2 (bool, A **)\n+{\n+  new A;\n+}\n+D::D (bool p1)\n+{\n+  A **a = fn1 (mNewEntry);\n+  fn2 (p1, a);\n+}"}]}