{"sha": "03219cb5d99220b9ec99520d304fcc467f69cb73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMyMTljYjVkOTkyMjBiOWVjOTk1MjBkMzA0ZmNjNDY3ZjY5Y2I3Mw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-09-27T00:24:52Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-09-27T00:24:52Z"}, "message": "Configuration.java.in (INIT_LOAD_LIBRARY): New constant.\n\n\t* gnu/classpath/Configuration.java.in (INIT_LOAD_LIBRARY): New\n\tconstant.\n\t* java/io/StreamTokenizer.java, java/util/ResourceBundle.java:\n\tRe-merged with Classpath.\n\nFrom-SVN: r45835", "tree": {"sha": "5ca5df2d1f2fc990bd822d916a85cf723ab4091a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ca5df2d1f2fc990bd822d916a85cf723ab4091a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03219cb5d99220b9ec99520d304fcc467f69cb73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03219cb5d99220b9ec99520d304fcc467f69cb73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03219cb5d99220b9ec99520d304fcc467f69cb73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03219cb5d99220b9ec99520d304fcc467f69cb73/comments", "author": null, "committer": null, "parents": [{"sha": "1685382e999bf030376f295c210f4ccacbf21e91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1685382e999bf030376f295c210f4ccacbf21e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1685382e999bf030376f295c210f4ccacbf21e91"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "eae459916e1ef4835282d2b40146bc185acf57b3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=03219cb5d99220b9ec99520d304fcc467f69cb73", "patch": "@@ -1,5 +1,10 @@\n 2001-09-26  Tom Tromey  <tromey@redhat.com>\n \n+\t* gnu/classpath/Configuration.java.in (INIT_LOAD_LIBRARY): New\n+\tconstant.\n+\t* java/io/StreamTokenizer.java, java/util/ResourceBundle.java:\n+\tRe-merged with Classpath.\n+\n \t* java/io/DataInputStream.java (readChar): Use readFully.\n \t(readInt): Likewise.\n \t(readLong): Likewise."}, {"sha": "73594442e862b0f4c26acc58ee5c6c902d3c200c", "filename": "libjava/gnu/classpath/Configuration.java.in", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2Fgnu%2Fclasspath%2FConfiguration.java.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2Fgnu%2Fclasspath%2FConfiguration.java.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FConfiguration.java.in?ref=03219cb5d99220b9ec99520d304fcc467f69cb73", "patch": "@@ -1,14 +1,43 @@\n-// This file defines compile-time constants that can be accessed by java code.\n-// It is pre-processed by configure. \n+/* gnu.classpath.Configuration\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package gnu.classpath;\n \n+/**\n+ * This file defines compile-time constants that can be accessed by\n+ * java code. It is pre-processed by configure.  \n+ */\n public interface Configuration\n {\n   // The value of DEBUG is substituted according to whether the\n   // \"--enable-libgcj-debug\" argument was passed to configure. Code\n   // which is made conditional based on the value of this flag will\n   // be removed by the optimizer in a non-debug build.\n-    \n   boolean DEBUG = @LIBGCJDEBUG@;\n+\n+  // For libgcj we never load the JNI libraries.\n+  boolean INIT_LOAD_LIBRARY = false;\n }"}, {"sha": "dfb20f2d8a74eb8ee76e9ebb74f1b0dce7bf0918", "filename": "libjava/java/io/StreamTokenizer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2Fjava%2Fio%2FStreamTokenizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2Fjava%2Fio%2FStreamTokenizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FStreamTokenizer.java?ref=03219cb5d99220b9ec99520d304fcc467f69cb73", "patch": "@@ -407,7 +407,7 @@ else if (isAlphabetic(ch))\n \tttype = TT_WORD;\n \tsval = tokbuf.toString();\n \tif (lowerCase)\n-\t  sval.toLowerCase();\n+\t  sval = sval.toLowerCase();\n       }\n     else if (isComment(ch))\n       {"}, {"sha": "f2fa7763d7cdbcb0076ce77951eabaa044d90890", "filename": "libjava/java/util/ResourceBundle.java", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2Fjava%2Futil%2FResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03219cb5d99220b9ec99520d304fcc467f69cb73/libjava%2Fjava%2Futil%2FResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FResourceBundle.java?ref=03219cb5d99220b9ec99520d304fcc467f69cb73", "patch": "@@ -28,6 +28,7 @@\n package java.util;\n import java.lang.ref.Reference;\n import java.lang.ref.SoftReference;\n+import gnu.classpath.Configuration;\n \n /**\n  * A resource bundle contains locale-specific data.  If you need\n@@ -73,6 +74,14 @@\n  * @author Jochen Hoenicke */\n public abstract class ResourceBundle\n {\n+  static \n+  {\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+\tSystem.loadLibrary (\"javautil\");\n+      }\n+  }\n+\n   /**\n    * The parent bundle.  This is consulted when you call getObject\n    * and there is no such resource in the current bundle.  This"}]}