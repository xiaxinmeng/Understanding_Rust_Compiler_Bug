{"sha": "23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNkMTEzODRkYmYzYjA0ZTVkY2JjZjM0OWJmMzQzMDhhYjhlYzllZg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2011-06-24T13:11:31Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2011-06-24T13:11:31Z"}, "message": "* repro_fail: New.\n\nFrom-SVN: r175374", "tree": {"sha": "4e563b9913149b01929a180b5d03b7c9e0885a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e563b9913149b01929a180b5d03b7c9e0885a97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "219441f2b86850b9fd2d4bc997f1162724605dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/219441f2b86850b9fd2d4bc997f1162724605dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/219441f2b86850b9fd2d4bc997f1162724605dd4"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "178a7326b86236e8cec3d649498adfbc0c2eb1c2", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef", "patch": "@@ -1,3 +1,7 @@\n+2011-06-24  Diego Novillo  <dnovillo@google.com>\n+\n+\t* repro_fail: New.\n+\n 2011-06-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc_update (gcc/config/avr/avr-tables.opt): New dependencies."}, {"sha": "8100456ac6295e450316864d70bd4f5914a9cff6", "filename": "contrib/repro_fail", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef/contrib%2Frepro_fail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef/contrib%2Frepro_fail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Frepro_fail?ref=23d11384dbf3b04e5dcbcf349bf34308ab8ec9ef", "patch": "@@ -0,0 +1,82 @@\n+#!/bin/bash -eu\n+#\n+# Script to reproduce a test failure from a dejagnu .log file.\n+#\n+# Contributed by Diego Novillo <dnovillo@google.com>\n+#\n+# Copyright (C) 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# This script will search a line starting with 'spawn' that includes the\n+# pattern you are looking for (typically a source file name).\n+#\n+# Once it finds that pattern, it re-executes the whole command\n+# in the spawn line.  If the pattern matches more than one spawn\n+# command, it asks which one you want.\n+\n+if [ $# -lt 2 ] ; then\n+    echo \"usage: $0 pattern file.log [additional-args]\"\n+    echo\n+    echo \"Finds the 'spawn' line matching PATTERN in FILE.LOG and executes\"\n+    echo \"the command with any arguments in ADDITIONAL-ARGS.\"\n+    echo\n+    exit 1\n+fi\n+\n+pattern=\"$1\"\n+logf=\"$2\"\n+shift 2\n+\n+# Find the commands in LOGF that reference PATTERN.\n+lines=$(grep -E \"^spawn .*$pattern\" $logf | sed -e 's/^spawn //')\n+if [ -z \"$lines\" ] ; then\n+    echo \"Could not find a spawn command for pattern $pattern\"\n+    exit 1\n+fi\n+\n+# Collect all the command lines into the COMMANDS array.\n+old_IFS=\"$IFS\"\n+IFS=\"\r\"\n+num_lines=0\n+for line in $lines ; do\n+    num_lines=$[$num_lines + 1]\n+    echo \"[$num_lines] $line\"\n+    commands[$num_lines]=$line\n+done\n+\n+# If we found more than one line for PATTERN, ask which one we should run.\n+cmds_to_run='0'\n+if [ $num_lines -gt 1 ] ; then\n+    echo\n+    echo\n+    echo -n \"Enter the list of commands to run or '0' to run them all: \"\n+    read cmds_to_run\n+fi\n+if [ \"$cmds_to_run\" = \"0\" ] ; then\n+    cmds_to_run=$(seq 1 $num_lines)\n+fi\n+IFS=\"$old_IFS\"\n+\n+# Finally, execute all the commands we were told to execute.\n+for cmd_num in $cmds_to_run ; do\n+    cmd=${commands[$cmd_num]}\n+    set -x +e\n+    $cmd \"$@\"\n+    set +x -e\n+done"}]}