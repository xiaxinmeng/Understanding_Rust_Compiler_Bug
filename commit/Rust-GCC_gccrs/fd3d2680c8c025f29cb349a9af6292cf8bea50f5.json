{"sha": "fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQzZDI2ODBjOGMwMjVmMjljYjM0OWE5YWY2MjkyY2Y4YmVhNTBmNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:23:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:23:16Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cbhama.adb, a-cbhama.ads: Minor reformatting.\n\n2011-08-29  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Complete support for\n\trenamings of formal subprograms when the actual for a formal type is\n\tclass-wide.\n\nFrom-SVN: r178244", "tree": {"sha": "95b6cce1c8fcea3d44303a5f582ed3dc1d627d71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95b6cce1c8fcea3d44303a5f582ed3dc1d627d71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/comments", "author": null, "committer": null, "parents": [{"sha": "dfbf013faf211971823f83c39648ad98d2b557b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfbf013faf211971823f83c39648ad98d2b557b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfbf013faf211971823f83c39648ad98d2b557b5"}], "stats": {"total": 100, "additions": 72, "deletions": 28}, "files": [{"sha": "508eb8774610cc6b79c0d1bdcd6d54530bf97033", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "patch": "@@ -1,3 +1,13 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cbhama.adb, a-cbhama.ads: Minor reformatting.\n+\n+2011-08-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Complete support for\n+\trenamings of formal subprograms when the actual for a formal type is\n+\tclass-wide.\n+\n 2011-08-29  Matthew Heaney  <heaney@adacore.com>\n \n \t* a-cbhama.ads, a-cbhase.ads (Move): Clear Source following assignment"}, {"sha": "629c1041ed95f85d2a7d2b5f7a408e1046316b38", "filename": "gcc/ada/a-cbhama.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.adb?ref=fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "patch": "@@ -424,15 +424,14 @@ package body Ada.Containers.Bounded_Hashed_Maps is\n    end First;\n \n    function First (Object : Iterator) return Cursor is\n-      M : constant Map_Access  := Object.Container;\n-      N : constant Count_Type  := HT_Ops.First (M.all);\n-\n+      M : constant Map_Access := Object.Container;\n+      N : constant Count_Type := HT_Ops.First (M.all);\n    begin\n       if N = 0 then\n          return No_Element;\n+      else\n+         return Cursor'(Object.Container.all'Unchecked_Access, N);\n       end if;\n-\n-      return Cursor'(Object.Container.all'Unchecked_Access, N);\n    end First;\n \n    -----------------"}, {"sha": "003a919a6e3c54b2a672297ce74c1ceb62cc20ec", "filename": "gcc/ada/a-cbhama.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.ads?ref=fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "patch": "@@ -32,7 +32,8 @@\n ------------------------------------------------------------------------------\n \n private with Ada.Containers.Hash_Tables;\n-with Ada.Streams; use Ada.Streams;\n+\n+with Ada.Streams;             use Ada.Streams;\n with Ada.Iterator_Interfaces;\n \n generic\n@@ -47,8 +48,7 @@ package Ada.Containers.Bounded_Hashed_Maps is\n    pragma Pure;\n    pragma Remote_Types;\n \n-   type Map (Capacity : Count_Type; Modulus : Hash_Type) is tagged private\n-   with\n+   type Map (Capacity : Count_Type; Modulus : Hash_Type) is tagged private with\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n@@ -328,7 +328,6 @@ package Ada.Containers.Bounded_Hashed_Maps is\n    return Reference_Type;\n \n private\n-   --  pragma Inline (\"=\");\n    pragma Inline (Length);\n    pragma Inline (Is_Empty);\n    pragma Inline (Clear);\n@@ -339,7 +338,6 @@ private\n    pragma Inline (Capacity);\n    pragma Inline (Reserve_Capacity);\n    pragma Inline (Has_Element);\n-   --  pragma Inline (Equivalent_Keys);\n    pragma Inline (Next);\n \n    type Node_Type is record"}, {"sha": "77f948f4f6a4622611a0f913955cdda525d85351", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 55, "deletions": 18, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd3d2680c8c025f29cb349a9af6292cf8bea50f5/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=fd3d2680c8c025f29cb349a9af6292cf8bea50f5", "patch": "@@ -1634,11 +1634,6 @@ package body Sem_Ch8 is\n    procedure Analyze_Subprogram_Renaming (N : Node_Id) is\n       Formal_Spec : constant Node_Id := Corresponding_Formal_Spec (N);\n       Is_Actual   : constant Boolean := Present (Formal_Spec);\n-\n-      CW_Actual : Boolean := False;\n-      --  True if the renaming is for a defaulted formal subprogram when the\n-      --  actual for a related formal type is class-wide. For AI05-0071.\n-\n       Inst_Node   : Node_Id                   := Empty;\n       Nam         : constant Node_Id          := Name (N);\n       New_S       : Entity_Id;\n@@ -1691,6 +1686,11 @@ package body Sem_Ch8 is\n       --  This rule only applies if there is no explicit visible class-wide\n       --  operation at the point of the instantiation.\n \n+      function Has_Class_Wide_Actual return Boolean;\n+      --  Ada 2012 (AI05-071, AI05-0131): True if N is the renaming for a\n+      --  defaulted formal subprogram when the actual for the controlling\n+      --  formal type is class-wide.\n+\n       -----------------------------\n       -- Check_Class_Wide_Actual --\n       -----------------------------\n@@ -1729,7 +1729,7 @@ package body Sem_Ch8 is\n                Next (F);\n             end loop;\n \n-            if Ekind (Prim_Op) = E_Function then\n+            if Ekind_In (Prim_Op, E_Function, E_Operator) then\n                return Make_Simple_Return_Statement (Loc,\n                   Expression =>\n                     Make_Function_Call (Loc,\n@@ -1780,6 +1780,7 @@ package body Sem_Ch8 is\n          F := First_Formal (Formal_Spec);\n          while Present (F) loop\n             if Has_Unknown_Discriminants (Etype (F))\n+              and then not Is_Class_Wide_Type (Etype (F))\n               and then Is_Class_Wide_Type (Get_Instance_Of (Etype (F)))\n             then\n                Formal_Type := Etype (F);\n@@ -1791,7 +1792,6 @@ package body Sem_Ch8 is\n          end loop;\n \n          if Present (Formal_Type) then\n-            CW_Actual := True;\n \n             --  Create declaration and body for class-wide operation\n \n@@ -1893,6 +1893,41 @@ package body Sem_Ch8 is\n          end if;\n       end Check_Null_Exclusion;\n \n+      ---------------------------\n+      -- Has_Class_Wide_Actual --\n+      ---------------------------\n+\n+      function Has_Class_Wide_Actual return Boolean is\n+         F_Nam  : Entity_Id;\n+         F_Spec : Entity_Id;\n+\n+      begin\n+         if Is_Actual\n+           and then Nkind (Nam) in N_Has_Entity\n+           and then Present (Entity (Nam))\n+           and then Is_Dispatching_Operation (Entity (Nam))\n+         then\n+            F_Nam  := First_Entity (Entity (Nam));\n+            F_Spec := First_Formal (Formal_Spec);\n+            while Present (F_Nam)\n+              and then Present (F_Spec)\n+            loop\n+               if Is_Controlling_Formal (F_Nam)\n+                 and then Has_Unknown_Discriminants (Etype (F_Spec))\n+                 and then not Is_Class_Wide_Type (Etype (F_Spec))\n+                 and then Is_Class_Wide_Type (Get_Instance_Of (Etype (F_Spec)))\n+               then\n+                  return True;\n+               end if;\n+\n+               Next_Entity (F_Nam);\n+               Next_Formal (F_Spec);\n+            end loop;\n+         end if;\n+\n+         return False;\n+      end Has_Class_Wide_Actual;\n+\n       -------------------------\n       -- Original_Subprogram --\n       -------------------------\n@@ -1938,6 +1973,11 @@ package body Sem_Ch8 is\n          end if;\n       end Original_Subprogram;\n \n+      CW_Actual : constant Boolean := Has_Class_Wide_Actual;\n+      --  Ada 2012 (AI05-071, AI05-0131): True if the renaming is for a\n+      --  defaulted formal subprogram when the actual for a related formal\n+      --  type is class-wide.\n+\n    --  Start of processing for Analyze_Subprogram_Renaming\n \n    begin\n@@ -2058,7 +2098,14 @@ package body Sem_Ch8 is\n       if Is_Actual then\n          Inst_Node := Unit_Declaration_Node (Formal_Spec);\n \n-         if Is_Entity_Name (Nam)\n+         --  Check whether the renaming is for a defaulted actual subprogram\n+         --  with a class-wide actual.\n+\n+         if CW_Actual then\n+            New_S := Analyze_Subprogram_Specification (Spec);\n+            Old_S := Check_Class_Wide_Actual;\n+\n+         elsif Is_Entity_Name (Nam)\n            and then Present (Entity (Nam))\n            and then not Comes_From_Source (Nam)\n            and then not Is_Overloaded (Nam)\n@@ -2419,16 +2466,6 @@ package body Sem_Ch8 is\n          end if;\n       end if;\n \n-      --  If no renamed entity was found, check whether the renaming is for\n-      --  a defaulted actual subprogram with a class-wide actual.\n-\n-      if Old_S = Any_Id\n-        and then Is_Actual\n-        and then From_Default (N)\n-      then\n-         Old_S := Check_Class_Wide_Actual;\n-      end if;\n-\n       if Old_S /= Any_Id then\n          if Is_Actual and then From_Default (N) then\n "}]}