{"sha": "4b2e63def5842b6762ac4045d04add24ddd6618d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyZTYzZGVmNTg0MmI2NzYyYWM0MDQ1ZDA0YWRkMjRkZGQ2NjE4ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-03-07T20:01:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-03-07T20:01:12Z"}, "message": "g++-dg.exp (g++-dg-runtest): Run tests in C++1y mode, too.\n\n\t* lib/g++-dg.exp (g++-dg-runtest): Run tests in C++1y mode, too.\n\t* lib/target-supports.exp (check_effective_target_c++11): Now\n\tmeans C++11 and up.\n\t(check_effective_target_c++11_only): New.\n\t(check_effective_target_c++11_down): New.\n\t(check_effective_target_c++1y): New.\n\t(check_effective_target_c++1y_only): New.\n\t(check_effective_target_c++98_only): Rename from\n\tcheck_effective_target_c++98.\n\t* g++.dg/*: Use { target c++11 } instead of -std=c++11.\n\nFrom-SVN: r208416", "tree": {"sha": "ae59bc7d80b714ed1debbcedc5d70a5494edf9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae59bc7d80b714ed1debbcedc5d70a5494edf9aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b2e63def5842b6762ac4045d04add24ddd6618d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2e63def5842b6762ac4045d04add24ddd6618d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b2e63def5842b6762ac4045d04add24ddd6618d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2e63def5842b6762ac4045d04add24ddd6618d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "968b3503744d250ed8980faf2d37143ad51fb7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968b3503744d250ed8980faf2d37143ad51fb7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/968b3503744d250ed8980faf2d37143ad51fb7c8"}], "stats": {"total": 3998, "additions": 1851, "deletions": 2147}, "files": [{"sha": "fb7bf706cca6a234e357425d176bc873e43df347", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,3 +1,16 @@\n+2014-03-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* lib/g++-dg.exp (g++-dg-runtest): Run tests in C++1y mode, too.\n+\t* lib/target-supports.exp (check_effective_target_c++11): Now\n+\tmeans C++11 and up.\n+\t(check_effective_target_c++11_only): New.\n+\t(check_effective_target_c++11_down): New.\n+\t(check_effective_target_c++1y): New.\n+\t(check_effective_target_c++1y_only): New.\n+\t(check_effective_target_c++98_only): Rename from\n+\tcheck_effective_target_c++98.\n+\t* g++.dg/*: Use { target c++11 } instead of -std=c++11.\n+\n 2014-03-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58609"}, {"sha": "cee92371043f5f9ce154cfd1712fb485d0b6f839", "filename": "gcc/testsuite/g++.dg/abi/anon2.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -6,9 +6,9 @@ namespace N1 {\n     typedef enum { X, Y } A;\n     typedef struct { } B;\n     struct C {\n-      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N11D1C3fn1ENS0_1BE\" { target { ! c++98 } } } }\n+      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N11D1C3fn1ENS0_1BE\" { target c++11 } } }\n       static void fn1 (B) { }\n-      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N11D1C3fn2ES1_\" { target { ! c++98 } } } }\n+      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N11D1C3fn2ES1_\" { target c++11 } } }\n       static void fn2 (C) { }\n     };\n   } D;\n@@ -22,10 +22,10 @@ namespace N2 {\n     typedef enum { X, Y } A;\n     typedef struct { } B;\n     struct C {\n-      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N23._31C3fn1ENS0_1BE\" { target { ! c++98 } } } }\n-      static void fn1 (B) { } // { dg-error \"no linkage\" \"\" { target c++98 } }\n-      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N23._31C3fn2ES1_\" { target { ! c++98 } } } }\n-      static void fn2 (C) { } // { dg-error \"no linkage\" \"\" { target c++98 } }\n+      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N23._31C3fn1ENS0_1BE\" { target c++11 } } }\n+      static void fn1 (B) { } // { dg-error \"no linkage\" \"\" { target { ! c++11 } } }\n+      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N23._31C3fn2ES1_\" { target c++11 } } }\n+      static void fn2 (C) { } // { dg-error \"no linkage\" \"\" { target { ! c++11 } } }\n     };\n   } const D;\n \n@@ -38,9 +38,9 @@ namespace N3 {\n     typedef enum { X, Y } A;\n     typedef struct { } B;\n     template <class T> struct C {\n-      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N31D1CIiE3fn1ENS0_1BE\" { target { ! c++98 } } } }\n+      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N31D1CIiE3fn1ENS0_1BE\" { target c++11 } } }\n       static void fn1 (B) { }\n-      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N31D1CIiE3fn2ES2_\" { target { ! c++98 } } } }\n+      // { dg-final { scan-assembler \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N31D1CIiE3fn2ES2_\" { target c++11 } } }\n       static void fn2 (C) { }\n     };\n   } D;\n@@ -54,10 +54,10 @@ namespace N4 {\n     typedef enum { X, Y } A;\n     typedef struct { } B;\n     template <class T> struct C {\n-      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N43._91CIiE3fn1ENS0_1BE\" { target { ! c++98 } } } }\n-      static void fn1 (B) { } // { not-dg-error \"no linkage\" \"\" { target c++98 } }\n-      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N43._91CIiE3fn2ES2_\" { target { ! c++98 } } } }\n-      static void fn2 (C) { } // { not-dg-error \"no linkage\" \"\" { target c++98 } }\n+      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N43._91CIiE3fn1ENS0_1BE\" { target c++11 } } }\n+      static void fn1 (B) { } // { not-dg-error \"no linkage\" \"\" { target { ! c++11 } } }\n+      // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N43._91CIiE3fn2ES2_\" { target c++11 } } }\n+      static void fn2 (C) { } // { not-dg-error \"no linkage\" \"\" { target { ! c++11 } } }\n     };\n   } const D;\n "}, {"sha": "6ae0113a27b9c273bf0d7a36064baa4e18c63bd7", "filename": "gcc/testsuite/g++.dg/abi/mangle32.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle32.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -3,7 +3,7 @@\n // namespace-scope unnamed types have no linkage, so we only test that they\n // are distinct.\n \n-// { dg-options -std=c++0x }\n+// { dg-do compile { target c++11 } }\n \n typedef struct { } *A;\n typedef struct { } *B;\n@@ -14,7 +14,7 @@ void f(B) { }\n struct C\n {\n   typedef struct { }* D;\n-  typedef enum { }* E;\n+  typedef enum { e }* E;\n };\n \n // { dg-final { scan-assembler \"_Z2g1PN1CUt_E\" } }\n@@ -30,7 +30,7 @@ void h2(T t) { }\n \n inline void j()\n {\n-  typedef enum { }* F;\n+  typedef enum { f }* F;\n // { dg-final { scan-assembler \"_Z2h1IPZ1jvEUt_EvT_\" } }\n   h1(F());\n   typedef struct { }* G;"}, {"sha": "691566b384ba519839e74edc6de5ecff790cb003", "filename": "gcc/testsuite/g++.dg/abi/mangle37.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle37.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Testcase for mangling of expressions involving operator names.\n-// { dg-options -std=c++0x }\n+// { dg-do compile { target c++11 } }\n // { dg-final { scan-assembler \"_Z1fI1AEDTclonplfp_fp_EET_\" } }\n // { dg-final { scan-assembler \"_Z1gI1AEDTclonplIT_Efp_fp_EES1_\" } }\n // { dg-final { scan-assembler \"_Z1hI1AEDTcldtfp_miEET_\" } }"}, {"sha": "a36f98127cc5fb68146cf5cacdfd4c6af797fa8e", "filename": "gcc/testsuite/g++.dg/abi/mangle39.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle39.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/42338\n-// { dg-options \"-std=c++0x -fabi-version=5\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=5\" }\n // { dg-final { scan-assembler \"_Z1fIPiEDTcmppfp_Li0EET_\" } }\n // { dg-final { scan-assembler \"_Z1gIiEvRK1AIT_EDTixfL0p_Li0EE\" } }\n "}, {"sha": "c7cce5e7ff16b4fd9a0d456413cdc589121472a7", "filename": "gcc/testsuite/g++.dg/abi/mangle42.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle42.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,7 @@\n // Origin: PR c++/43375\n // { dg-do compile { target i?86-*-* x86_64-*-* } }\n-// { dg-options \"-msse2 -std=gnu++0x\" }\n+// { dg-require-effective-target c++11 }\n+// { dg-options \"-msse2\" }\n // { dg-require-effective-target sse2 }\n \n typedef float __v4sf __attribute__ ((__vector_size__ (16)));"}, {"sha": "5e202a2f52b98923966a50a29ba2b3a580d6e575", "filename": "gcc/testsuite/g++.dg/abi/mangle45.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle45.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // Testcase for mangling of parameters used other than in a trailing return type\n-// { dg-options \"-std=c++0x -fabi-version=5\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=5\" }\n \n template<class T> void f(T p, decltype(p)) { }                // L = 1\n template<class T> void g(T p, decltype(p) (*)()) { }          // L = 1"}, {"sha": "3bb5e9ab7e348d2c89c750e463cd20c53fa7632b", "filename": "gcc/testsuite/g++.dg/abi/mangle47.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle47.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle47.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle47.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47132\n-// { dg-options -std=c++0x }\n+// { dg-do compile { target c++11 } }\n // { dg-final { scan-assembler \"_Z1fIiEDToRfp_Li1EET_\" } }\n \n template <typename T>"}, {"sha": "f9afa1ad0b26a1b0aa81d77fa59bb9a392353ae8", "filename": "gcc/testsuite/g++.dg/abi/mangle48.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle48.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Testcase for 'this' mangling\n-// { dg-options -std=c++0x }\n+// { dg-do compile { target c++11 } }\n \n struct B\n {"}, {"sha": "3795c556d0aceb8e7f248633df1625936d1751e9", "filename": "gcc/testsuite/g++.dg/abi/mangle49.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle49.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/49932\n-// { dg-options \"-std=c++0x -fabi-version=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=0\" }\n \n template < typename T >\n auto"}, {"sha": "90566c2198de49034001f2d6dc0cf02f7bee2741", "filename": "gcc/testsuite/g++.dg/abi/mangle50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle50.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // DR 342, PR c++/48582\n-// { dg-options -std=c++0x }\n+// { dg-do compile { target c++11 } }\n \n struct A;\n template < void * = nullptr > void f() { }"}, {"sha": "e7c2c747a9b7b579c3561d07719b04322259955a", "filename": "gcc/testsuite/g++.dg/abi/mangle51.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle51.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++0x -fabi-version=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=0\" }\n \n void* operator new (__SIZE_TYPE__, void *p) { return p; }\n int i;"}, {"sha": "13f9e711c10e4b4d771c7c78e28e790438e36509", "filename": "gcc/testsuite/g++.dg/abi/mangle53.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle53.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle53.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle53.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++0x\" }\n+// { dg-do compile { target c++11 } }\n \n bool b;\n // { dg-final { scan-assembler \"_Z1fIiEDTquL_Z1bEfp_twLi42EET_\" } }"}, {"sha": "926275c8cbb09d461ca3ccb09310f9ba7e78c85e", "filename": "gcc/testsuite/g++.dg/abi/mangle54.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle54.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++0x -fabi-version=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=0\" }\n \n int i;\n // { dg-final { scan-assembler \"_Z2f1IiEDTppfp_ET_\" } }"}, {"sha": "72ea83444c825e5f7a521114a91fabafa7829df3", "filename": "gcc/testsuite/g++.dg/abi/mangle55.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle55.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++0x\" }\n+// { dg-do compile { target c++11 } }\n \n struct A { int i; };\n // { dg-final { scan-assembler \"_Z2f1Ii1AEDTdsfp_fp0_ET0_MS2_T_\" } }"}, {"sha": "5c66db5581d3f63ceb733c1053e2ffa271a9e498", "filename": "gcc/testsuite/g++.dg/abi/mangle56.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle56.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++0x\" }\n+// { dg-do compile { target c++11 } }\n \n template <class T> T g(T t1, T t2) { return t2; }\n // { dg-final { scan-assembler \"_Z2f1IiEDTcl1gfp_ilEEET_\" } }"}, {"sha": "cd59cb87b1efb5cef19de70c6f46fe3c6830e009", "filename": "gcc/testsuite/g++.dg/abi/mangle57.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle57.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++0x -fabi-version=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=0\" }\n \n template<typename T> int cmp1(T a, T b);\n int cmp2(char a, char b);"}, {"sha": "abcb3ca47acbd58fd57e3bf7218d3c1ae46a4d7d", "filename": "gcc/testsuite/g++.dg/abi/mangle58.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle58.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++0x -fabi-version=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=0\" }\n \n template<typename T, int (*cmp)(T, T)> struct A { };\n struct B {"}, {"sha": "ba0befddc50304b6d3e28530d0074e3e14d24f29", "filename": "gcc/testsuite/g++.dg/abi/mangle59.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle59.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++0x -fabi-version=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=0\" }\n \n // { dg-final { scan-assembler \"_Z1fIiEDTcmdlfp_psfp_EPT_\" } }\n template <class T> auto f (T* p) -> decltype(delete p, +p) { return p; }"}, {"sha": "c4710464acc2748bc2b07b18db23218ec3834d8d", "filename": "gcc/testsuite/g++.dg/abi/regparm1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fregparm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fregparm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fregparm1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/29911 (9381)\n-// { dg-options -std=c++0x }\n // { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target c++11 }\n \n extern \"C\" int printf(const char *, ...);\n "}, {"sha": "3521f87258a13bcea25280d5f7de332338d456eb", "filename": "gcc/testsuite/g++.dg/cilk-plus/AN/braced_list.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Fbraced_list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Fbraced_list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Fbraced_list.cc?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-fcilkplus -std=c++11 \" } */\n+/* { dg-do compile { target c++11 } } */\n+/* { dg-options \"-fcilkplus\" } */\n \n int main (void)\n {"}, {"sha": "9b3d2cc26e7a885e3e111b4c3c5028da60163af6", "filename": "gcc/testsuite/g++.dg/cilk-plus/CK/lambda_spawns.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Flambda_spawns.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Flambda_spawns.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Flambda_spawns.cc?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,7 @@\n /* { dg-options \"-fcilkplus\" } */\n /* { dg-do run { target i?86-*-* x86_64-*-* arm*-*-* } } */\n-/* { dg-options \"-std=c++11 -fcilkplus -lcilkrts\" { target { i?86-*-* x86_64-*-* arm*-*-* } } } */\n+// { dg-require-effective-target c++11 }\n+/* { dg-options \"-fcilkplus -lcilkrts\" { target { i?86-*-* x86_64-*-* arm*-*-* } } } */\n #define FIRST_NUMBER 5\n #define SECOND_NUMBER 3\n #define HAVE_IO 0"}, {"sha": "b6e3fea8531ff513500bbb9a22f1065c2b98174c", "filename": "gcc/testsuite/g++.dg/cilk-plus/CK/lambda_spawns_tplt.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Flambda_spawns_tplt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Flambda_spawns_tplt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Flambda_spawns_tplt.cc?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,7 @@\n /* { dg-options \"-fcilkplus\" } */\n /* { dg-do run { target i?86-*-* x86_64-*-* arm*-*-* } } */\n-/* { dg-options \"-std=c++11 -fcilkplus -lcilkrts\" { target { i?86-*-* x86_64-*-* arm*-*-* } } } */\n+// { dg-require-effective-target c++11 }\n+/* { dg-options \"-fcilkplus -lcilkrts\" { target { i?86-*-* x86_64-*-* arm*-*-* } } } */\n \n #define FIRST_NUMBER 5\n #define SECOND_NUMBER 3"}, {"sha": "b9ec7b5f3f54fd0e9b7ad54cf144ef2beafd4662", "filename": "gcc/testsuite/g++.dg/constexpr-null1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconstexpr-null1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconstexpr-null1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconstexpr-null1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46670\n-// { dg-options -std=c++0x }\n+// { dg-do compile { target c++11 } }\n \n extern unsigned char __TBB_ReverseByte(unsigned char src);\n extern unsigned char *reversed;"}, {"sha": "accc762cac05782a7bb3c4d2d94ae3b9ed57a64c", "filename": "gcc/testsuite/g++.dg/cpp/paste1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpaste1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpaste1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpaste1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR preprocessor/57757\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n #define S(x) x\n extern S(\"C\")void exit (int);"}, {"sha": "6f83a86410b1abad78ba4418586c4b4f87c29347", "filename": "gcc/testsuite/g++.dg/cpp/paste2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpaste2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpaste2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpaste2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR preprocessor/57757\n-// { dg-do compile }\n-// { dg-options \"-std=c++11 -save-temps\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-save-temps\" }\n // { dg-final cleanup-saved-temps }\n \n #define S(x) x"}, {"sha": "b2d4f98fa0bc7027251903f0f4c9e5f1374143a7", "filename": "gcc/testsuite/g++.dg/cpp/ucn-1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucn-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucn-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucn-1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2170.html\n-// { dg-options \"-std=c++0x -fextended-identifiers\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fextended-identifiers\" }\n \n int main()\n {"}, {"sha": "b9b975b5dc2f9894ae34fbe82b8088e9904d58ac", "filename": "gcc/testsuite/g++.dg/cpp0x/Wliteral-suffix.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWliteral-suffix.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWliteral-suffix.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWliteral-suffix.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n // Make sure -Wliteral-suffix is enabled by default and\n // triggers as expected."}, {"sha": "232e484356e22ccc75f4238bcd566f737522a114", "filename": "gcc/testsuite/g++.dg/cpp0x/Wunused-parm.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWunused-parm.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWunused-parm.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWunused-parm.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/57211\n-// { dg-options \"-std=c++11 -Wunused-parameter\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wunused-parameter\" }\n \n template <class T> T&& move(T&);\n "}, {"sha": "a9dd155475de01c033d88fc410b77afd1945d18f", "filename": "gcc/testsuite/g++.dg/cpp0x/Wzero-as-null-pointer-constant-1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWzero-as-null-pointer-constant-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWzero-as-null-pointer-constant-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWzero-as-null-pointer-constant-1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++11 -Wzero-as-null-pointer-constant\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wzero-as-null-pointer-constant\" }\n \n struct A;\n "}, {"sha": "5cb4022afa6d00ad8c0716764f168fc17318717e", "filename": "gcc/testsuite/g++.dg/cpp0x/Wzero-as-null-pointer-constant-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWzero-as-null-pointer-constant-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWzero-as-null-pointer-constant-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWzero-as-null-pointer-constant-2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/56373\n-// { dg-options \"-std=c++11 -Wzero-as-null-pointer-constant\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wzero-as-null-pointer-constant\" }\n \n struct shared_ptr\n {"}, {"sha": "7c2a712d75043d6e9fd3fa62a95ceb15a55e3a2e", "filename": "gcc/testsuite/g++.dg/cpp0x/__func__.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2F__func__.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2F__func__.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2F__func__.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++11 -pedantic\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-pedantic\" }\n \n const char* foo()\n {"}, {"sha": "55c951f97d6023b88041b9baea6a9ea8448269bd", "filename": "gcc/testsuite/g++.dg/cpp0x/access01.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Faccess01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Faccess01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Faccess01.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49042\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n class A"}, {"sha": "bcefe3fc94f6b708c2d880c1d06dca997b916c82", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-0.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<template<class> class TT> struct X { };\n template<class> struct Y { };"}, {"sha": "c52ab46aa5e5c62d80d3ef2a4175ea6c6d2e3c42", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n // These also represent tests for printing alias declarations and\n // their instantiations."}, {"sha": "7c8bad9834e9ef0c40d077da8443e8e2102d13e0", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-10.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template <class T> using Ptr = T*;\n Ptr<unsigned>; // { dg-error \"does not declare anything\" }"}, {"sha": "54574337b20354774317461a1911551c34d47b1f", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-11.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-11.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,8 +1,8 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n namespace N\n {\n   template <class T> using U = T*;\n-};\n+}\n \n void f(N::U<int>) { blah; } // { dg-error \"void f(N::U<int>)|not declared\" }"}, {"sha": "df23e55198d176811728e5611facc4c3fc764eda", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-12.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n // Origin: PR c++/51027\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n using INT = int // { dg-error \"expected|;|at end of input\" }"}, {"sha": "368e5af557e31c6a0e7d0c9ad8fbfcb5cbe17d0d", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-13.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/51191\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template< class T >\n class ClassTemplate {};"}, {"sha": "52f2201a03d3683c4132298d7249fb7467994930", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-14.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin: PR c++/51145\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A {};\n "}, {"sha": "2d617ab81fc3938933b88fb05681ea6618008e56", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-15.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/51194\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<class U, class V> //#1\n struct foo {};"}, {"sha": "d934a93bd473e4139d9ad166f15e174c8c79e4d7", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-16.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/51143\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n using A0 = struct B0 { void f() {} };\n "}, {"sha": "bf947fb811e48898e93f69e3e0f70ba0e39477f3", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-17.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/51289\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename a, template <typename, typename> class b>\n struct foo {"}, {"sha": "199b05483f8f54ac6f53c766965c0ed0dc7010bc", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-18.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin: PR c++/51541\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<typename Z> using ::T = void(int n); // { dg-error \"\" }\n template<typename Z> using operator int = void(int n); // { dg-error \"\" }"}, {"sha": "0204f6454f4f7538cc57935e92692adc488c632f", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<class T> struct S0 {};\n template<class T> using AS0 = S0<T>;"}, {"sha": "a388ae41089d49a31eb6c9c54e72d50497dba747", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-25.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/54859\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<unsigned N>\n   using Num = int;"}, {"sha": "2204c250cec7dc0251d1d2ebe64eb3fa26203309", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n // Exercise some member alias templates ...\n "}, {"sha": "60edaf7e53bfe6ab26bde7184ec9526873bf0992", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n // [temp.alias]/3:\n // The type-id in an alias template declaration shall not refer"}, {"sha": "559fc51c5cf2742d5ce7f96f8fe0912fe5fc0dba", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n // alias template of a partial specialization\n "}, {"sha": "e0faf2bcb2da9fb35d094eff2a4057bce16d0bea", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n // Alias template of non-class types.\n "}, {"sha": "f5911d9df58f7ac27bc784ca994371b28ccf8133", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-7.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n // Add arguments to unbound template template parameter.\n "}, {"sha": "c40fbbbbcce16c1022747020dcf0e675724ce2b1", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-8.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A {\n     template <class U> using C = U;"}, {"sha": "5794617d5150f835d0e3e4cb4bc5e494a3932de6", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-9.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n struct A {"}, {"sha": "50df842315fbb307242c6ce1d377a395f794e72a", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-debug-0.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-debug-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-debug-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-debug-0.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,7 @@\n // Origin: PR c++/51032\n // { dg-skip-if \"No stabs\" { aarch64*-*-* mmix-*-* *-*-aix* alpha*-*-* hppa*64*-*-* ia64-*-* *-*-vxworks* nios2-*-* } { \"*\" } { \"\" } }\n-// { dg-options \"-std=c++11 -gstabs+\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-gstabs+\" }\n \n template <class C>\n struct A {"}, {"sha": "92422f95a5d2a23465273d68f9a4eb23065378af", "filename": "gcc/testsuite/g++.dg/cpp0x/alignof.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n int main(void)\n {\n   static_assert(alignof(int) == __alignof(int), \"alignof(int) does not equal __alignof(int)\");"}, {"sha": "d571d9d77dc66d51ea11a21223acbae4ce20f74a", "filename": "gcc/testsuite/g++.dg/cpp0x/alignof2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++11 -pedantic\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-pedantic\" }\n int main(void)\n {\n   alignof(int); //ok with a type but not with an expression"}, {"sha": "c349cec06ea107683308434b8c6d6dc74e251f5e", "filename": "gcc/testsuite/g++.dg/cpp0x/alignof3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++11 -pedantic\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-pedantic\" }\n int main(void)\n {\n   alignof(void (void));   // { dg-warning \"function type\" }"}, {"sha": "ca3c47ad67dc20a73242d4ef20680172c8d8d1cb", "filename": "gcc/testsuite/g++.dg/cpp0x/alignof4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51316\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n int main()\n {"}, {"sha": "b8d390518218f017a7959e47f808b0f68e3264be", "filename": "gcc/testsuite/g++.dg/cpp0x/auto1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,3 +1,4 @@\n+// { dg-do compile { target c++11 } }\n // { dg-options \"-std=c++98 -Wc++11-compat\" }\n \n // Test warning for use of auto in C++98 mode with C++11"}, {"sha": "296873eeda8b801eefaa0634e592f6ca1dea7c18", "filename": "gcc/testsuite/g++.dg/cpp0x/auto10.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto10.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // Positive test for auto\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n #include <typeinfo>\n extern \"C\" void abort();"}, {"sha": "208f512a68551827d86015124df72e3fc03aa425", "filename": "gcc/testsuite/g++.dg/cpp0x/auto11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto11.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/38256\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<int> struct A\n {"}, {"sha": "0ada26544683921d97dd5ca0fb4f2f8e02024228", "filename": "gcc/testsuite/g++.dg/cpp0x/auto14.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto14.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/40306, c++/40307\n-// { dg-options \"-std=c++11\" }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n template< typename T >\n struct test {"}, {"sha": "ca5758ddf2e314ac443e8d8d8ef08c958c8deb28", "filename": "gcc/testsuite/g++.dg/cpp0x/auto15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto15.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template< typename Fn > struct function;\n "}, {"sha": "e9754f3251cad611a8d17618b5618346376d6ba3", "filename": "gcc/testsuite/g++.dg/cpp0x/auto16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto16.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/40619\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename U> struct X {};\n "}, {"sha": "7f9529e3b53988e6830d4457fe5b415d50377f38", "filename": "gcc/testsuite/g++.dg/cpp0x/auto17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto17.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/42567\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename B>\n struct A {"}, {"sha": "e6ddf0c247d7d5184e4e8fa5c5b1b44b11673ead", "filename": "gcc/testsuite/g++.dg/cpp0x/auto18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto18.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n void f()\n {"}, {"sha": "d27d4375d41ca3a0d7f45510687382b33978e3d3", "filename": "gcc/testsuite/g++.dg/cpp0x/auto19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto19.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct Explicit {\n   Explicit() = default;  // Line 2"}, {"sha": "cff36d212afee3518cde1a30dc09fec1d7b0415f", "filename": "gcc/testsuite/g++.dg/cpp0x/auto2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // Positive test for auto\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n #include <typeinfo>\n extern \"C\" void abort();"}, {"sha": "fe9925d0f3f198479035e15dddca1099e7fbf11a", "filename": "gcc/testsuite/g++.dg/cpp0x/auto20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto20.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // Test for proper non-deduced context handling of the initializer\n // for an auto declaration/new.\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct with_apply\n {"}, {"sha": "a827b3df85370719e77715ce90b4cba307f327ab", "filename": "gcc/testsuite/g++.dg/cpp0x/auto21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto21.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/47208\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n constexpr auto list = { }; // { dg-error \"deducing from brace-enclosed initializer list requires #include <initializer_list>\" }\n static const int l = list.size();"}, {"sha": "4ae1d1cf513d8d749bdce4b95a99775779a2dd33", "filename": "gcc/testsuite/g++.dg/cpp0x/auto22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto22.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47999\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n int& identity(int& i)\n {"}, {"sha": "f14c2b8b280cca01cd248e6bc14814d6ab5cac2d", "filename": "gcc/testsuite/g++.dg/cpp0x/auto23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto23.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n // PR c++/46245\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<auto f()->int> struct A { };"}, {"sha": "d370cc6f3db5d8df8d9261a45297041b3932c49b", "filename": "gcc/testsuite/g++.dg/cpp0x/auto24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto24.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48599\n-// { dg-options \"-std=c++11 -pedantic-errors\" }\n+// { dg-do compile { target c++11 } }\n \n int v[1];\n auto (*p)[1] = &v;\t\t// { dg-error \"array of .auto\" }"}, {"sha": "9e08a5bf38186ad888432a9b41aca07092195c9d", "filename": "gcc/testsuite/g++.dg/cpp0x/auto25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto25.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/42056\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<int> struct A\n {"}, {"sha": "d355a63973d4b433389161ad00f3b5b202820d27", "filename": "gcc/testsuite/g++.dg/cpp0x/auto26.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto26.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/43321\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n void f(T t)"}, {"sha": "f8e9097b2f8183e7f6e6af3087fe53577861f724", "filename": "gcc/testsuite/g++.dg/cpp0x/auto27.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto27.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/51186\n \n-auto main()->int\t       // { dg-error \"std=\" \"std\" { target c++98 } }\n-\t\t\t       // { dg-error \"auto\" \"auto\" { target c++98 } 3 }\n-\t\t\t       // { dg-error \"no type\" \"no type\" { target c++98 } 3 }\n+auto main()->int\t       // { dg-error \"std=\" \"std\" { target { ! c++11 } } }\n+\t\t\t       // { dg-error \"auto\" \"auto\" { target { ! c++11 } } 3 }\n+\t\t\t       // { dg-error \"no type\" \"no type\" { target { ! c++11 } } 3 }\n { }"}, {"sha": "441d8843a6ecd63679f50391a8aacf5ba4511ecc", "filename": "gcc/testsuite/g++.dg/cpp0x/auto28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto28.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n // PR c++/51404\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n int i = auto().x;  // { dg-error \"invalid use of\" }"}, {"sha": "80fdc12b7d231368a8b77fed95ece6329448e4ea", "filename": "gcc/testsuite/g++.dg/cpp0x/auto29.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto29.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/51401\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template <int>\n struct A"}, {"sha": "c2e5519ecf739ecf94373efc038d52a7d86671d9", "filename": "gcc/testsuite/g++.dg/cpp0x/auto3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -19,7 +19,7 @@ A<int> A1;\n // CWG issue 625\n A<auto> A2 = A1;\t\t// { dg-error \"\" }\n \n-auto foo() { }\t\t\t// { dg-error \"auto\" }\n+auto foo() { }\t\t\t// { dg-error \"auto\" \"\" { target { ! c++1y } } }\n \n void bar(auto i)\t\t// { dg-error \"incomplete|auto\" }\n {"}, {"sha": "cce67d55605c957d141518b6952066187047ccef", "filename": "gcc/testsuite/g++.dg/cpp0x/auto30.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto30.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/51473\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "586bc6ebb5ea953ce0e96cbad7bca9bdc1511416", "filename": "gcc/testsuite/g++.dg/cpp0x/auto36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto36.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/54903\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<int N, int D>\n struct Modulus"}, {"sha": "36144fd9aaec468b1daa8d313074f4e85c39cbe3", "filename": "gcc/testsuite/g++.dg/cpp0x/auto4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // Testcase for deduction of std::initializer_list for auto.\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n #include <typeinfo>\n #include <initializer_list>"}, {"sha": "b2a77550fda79640a81a2a3b91765582c0fc572e", "filename": "gcc/testsuite/g++.dg/cpp0x/auto41.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto41.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/58550\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n-auto foo();\t\t\t// { dg-error \"auto\" }\n-auto fp = foo;\n+auto foo();\t\t\t// { dg-error \"auto\" \"\" { target { ! c++1y } } }\n+auto fp = foo;\t\t\t// { dg-error \"auto\" \"\" { target c++1y } }"}, {"sha": "8ed66d1ea36aa6bd40d60f747dfcf81d1f864da2", "filename": "gcc/testsuite/g++.dg/cpp0x/auto5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Testcase for non-dependent auto in templates\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "c213c747bb3e3fe6f1f9937292933dc77755c299", "filename": "gcc/testsuite/g++.dg/cpp0x/auto7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto7.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/37965\n // Negative test for auto\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n auto i = 6;\n auto j;\t\t\t// { dg-error \"has no initializer\" }"}, {"sha": "205bb960cc9d892237ace6386810e47c07c3c040", "filename": "gcc/testsuite/g++.dg/cpp0x/auto9.C", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,7 +1,6 @@\n // PR c++/37962\n // Negative test for auto\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n #include <typeinfo>\n #include <stdarg.h>\n@@ -16,13 +15,13 @@ const std::type_info &t2 = typeid (auto *);\t// { dg-error \"auto\" }\n \n struct A\n {\n-  operator auto ();\t\t\t\t// { dg-error \"auto\" }\n-  operator auto *();\t\t\t\t// { dg-error \"auto\" }\n+  operator auto ();\t\t\t\t// { dg-error \"auto\" \"\" { target { ! c++1y } } }\n+  operator auto *();\t\t\t\t// { dg-error \"auto\" \"\" { target { ! c++1y } } }\n };\n \n struct A2\n {\n-  operator auto () -> int;\t\t\t// { dg-error \"invalid use of\" }\n+  operator auto () -> int;\t\t\t// { dg-error \"invalid use of\" \"\" { target { ! c++1y } } }\n   operator auto *() -> int;\t\t\t// { dg-error \"auto\" }\n };\n \n@@ -42,7 +41,7 @@ bool d = (auto (A::*)()) 0;\t\t\t// { dg-error \"auto\" }\n void\n foo ()\n {\n-  (auto) { 0 };\t\t\t\t\t// { dg-error \"auto\" }\n+  __extension__ (auto) { 0 };\t\t\t// { dg-error \"auto\" }\n   C<int> c;\n   dynamic_cast<auto> (c);\t\t\t// { dg-error \"auto\" }\n   reinterpret_cast<auto> (c);\t\t\t// { dg-error \"auto\" }\n@@ -79,10 +78,10 @@ enum struct D : auto * { FF = 0 };\t\t// { dg-error \"must be an integral type|decl\n void\n bar ()\n {\n-  try { } catch (auto i) { }\t\t\t// { dg-error \"parameter declared\" }\n-  try { } catch (auto) { }\t\t\t// { dg-error \"parameter declared\" }\n-  try { } catch (auto *i) { }\t\t\t// { dg-error \"parameter declared\" }\n-  try { } catch (auto *) { }\t\t\t// { dg-error \"parameter declared\" }\n+  try { } catch (auto i) { }\t\t\t// { dg-error \"parameter\" }\n+  try { } catch (auto) { }\t\t\t// { dg-error \"parameter\" }\n+  try { } catch (auto *i) { }\t\t\t// { dg-error \"parameter\" }\n+  try { } catch (auto *) { }\t\t\t// { dg-error \"parameter\" }\n }\n \n void\n@@ -99,8 +98,8 @@ baz (int i, ...)\n template <typename T = auto> struct E {};\t// { dg-error \"invalid use of\" }\n template <class T = auto *> struct F {};\t// { dg-error \"invalid use of|expected\" }\n \n-auto fnlate () -> auto;\t\t\t\t// { dg-error \"invalid use of\" }\n-auto fnlate2 () -> auto *;\t\t\t// { dg-error \"invalid use of|expected\" }\n+auto fnlate () -> auto;\t\t\t\t// { dg-error \"invalid use of\" \"\" { target { ! c++1y } } }\n+auto fnlate2 () -> auto *;\t\t\t// { dg-error \"invalid use of|expected\" \"\" { target { ! c++1y } } }\n \n void\n badthrow () throw (auto)\t\t\t// { dg-error \"invalid use of\" }\n@@ -117,8 +116,8 @@ template <auto V = 4> struct G {};\t\t// { dg-error \"auto\" }\n template <typename T> struct H { H (); ~H (); };\n H<auto> h;\t\t\t\t\t// { dg-error \"invalid\" }\n \n-void qq (auto);\t\t\t// { dg-warning \"auto\" }\n-void qr (auto*);\t\t// { dg-warning \"auto\" }\n+void qq (auto);\t\t\t// { dg-error \"auto\" }\n+void qr (auto*);\t\t// { dg-error \"auto\" }\n \n // PR c++/46145\n typedef auto autot;\t\t// { dg-error \"auto\" }"}, {"sha": "2052d3991e83eb4b4c767e911306c4577ccaef71", "filename": "gcc/testsuite/g++.dg/cpp0x/bad_array_new1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbad_array_new1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbad_array_new1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbad_array_new1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // Test for throwing bad_array_new_length on invalid array length\n-// { dg-options -std=c++11 }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n #include <new>\n "}, {"sha": "bcc9b9ad5f7be54690c0575d2902a80c766da0d1", "filename": "gcc/testsuite/g++.dg/cpp0x/bad_array_new2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbad_array_new2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbad_array_new2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbad_array_new2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // Test for throwing bad_array_new_length on invalid array length\n-// { dg-options -std=c++11 }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n #include <new>\n "}, {"sha": "9b7ce7dc0b9e3b01c0692b5c8ebfb40827506268", "filename": "gcc/testsuite/g++.dg/cpp0x/bind.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbind.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbind.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbind.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"--std=c++11\" }\n+// { dg-do compile { target c++11 } }\n struct S{};\n void f(S&&);\n "}, {"sha": "6f5c2972078786b414ff34d72efb0e76f43e7f40", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename T>\n struct list {};"}, {"sha": "35c8608bd5fcee42e7842a103cf4935769ed67c5", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<int i> class X { /* ... */ };\n X< 1>2 > x1;    // // { dg-error \"numeric constant\" }"}, {"sha": "93c714862b66fe2e968b6924bf0169a9688f7507", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,3 +1,4 @@\n+// { dg-do compile { target c++11 } }\n // { dg-options \"-std=c++98 -Wc++11-compat\" }\n \n template<int N> struct X {};"}, {"sha": "256f4cb6c9022a87cec3783b2b00a592da6aa0bc", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n template<typename T>\n struct vector { \n };"}, {"sha": "2b8ef33e8e9372aeba2191ced3d237b7d6d113ca", "filename": "gcc/testsuite/g++.dg/cpp0x/cast-bug.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast-bug.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast-bug.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast-bug.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"--std=c++11\" }\n+// { dg-do compile { target c++11 } }\n struct S\n {\n   S();"}, {"sha": "d11d7241391c948fc605cb13588afa1c954f8835", "filename": "gcc/testsuite/g++.dg/cpp0x/cast.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -2,8 +2,7 @@\n \n // Test cast from lvalue to rvalue\n \n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n // { dg-skip-if \"packed attribute missing for struct one\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;"}, {"sha": "89fe0318fdb7eac4c2b759524c7ac25e878d6080", "filename": "gcc/testsuite/g++.dg/cpp0x/collapse-bug.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcollapse-bug.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcollapse-bug.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcollapse-bug.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"--std=c++11\" }\n+// { dg-do compile { target c++11 } }\n template<typename T, typename U> struct same_type;\n template<typename T> struct same_type<T, T> {};\n "}, {"sha": "b537bb5839823cd649a22ab81d9c509f9d42455e", "filename": "gcc/testsuite/g++.dg/cpp0x/collapse.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcollapse.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcollapse.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcollapse.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"--std=c++11\" }\n+// { dg-do compile { target c++11 } }\n template<typename T, typename U> struct same_type;\n template<typename T> struct same_type<T, T> {};\n "}, {"sha": "746a84e7d255590d63dfe002ba91a117b087523d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-46336.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46336.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46336.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46336.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46336\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n extern \"C\" {\n   enum A { };"}, {"sha": "17a366e849440770120b69eea007af737e49de48", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-46420.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46420.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46420.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-46420.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46420\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<typename> class vector { };\n struct A{};"}, {"sha": "263a44bc0b8d01168a317c84349cf74fd0d6e8ab", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-47570.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47570.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47570.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47570.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47570\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n unsigned int constexpr one()\n { return 1; }"}, {"sha": "933831b94de5a567eeca15ea2f2a24aed10a3cd0", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-47969.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47969.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47969.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47969.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47969\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "88d442691c6a413ad5079cddd26740e43c48708d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-48089.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48089\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n // bang is ill-formed (diagnostic required) because its initializer is\n // non-constant, because it uses the value of an uninitialized object."}, {"sha": "c1d1c375448c647051c4a802c8aada14faa52202", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-49776.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-49776.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-49776.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-49776.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49776\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct s\n {"}, {"sha": "413566f49d6786c804e4a0046bcadf0864cb0146", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-51369.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-51369.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-51369.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-51369.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/51369\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n constexpr int x[2][2] = {};\n "}, {"sha": "0ce07a5b013284ed8c1ff1ae9b684dd57d986e8d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-52672.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52672.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52672.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52672.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/52672\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n __extension__ typedef __SIZE_TYPE__ * ul_ptr;\n constexpr unsigned long a = *((ul_ptr)0x0); // { dg-error \"\" }"}, {"sha": "c90fc765e1b1e0fb693f62e0d3c386992fac4ff0", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-53094-1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n typedef float __attribute__ ((vector_size (4 * sizeof (float)))) V4;\n constexpr V4 v = { 1, 1, 1, 0 };"}, {"sha": "f34619a6dff7e8268935b1aef00a51343541f17e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-53094-2.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,9 +1,8 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n // Ignore warning on some powerpc-ibm-aix configurations.\n // { dg-prune-output \"non-standard ABI extension\" }\n // { dg-prune-output \"changes the ABI\" }\n \n typedef float __attribute__ ((vector_size (4 * sizeof (float)))) V4;\n-constexpr V4 build (float x, float y, float z) { return (V4){ x, y, z, 0 };}\n+constexpr V4 build (float x, float y, float z) { return __extension__ (V4){ x, y, z, 0 };}\n constexpr V4 x = build (1, 0, 0);"}, {"sha": "58c00ed4ac7a26ffac0f8cf6286908aabfc679d2", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-53094-3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n // Ignore warning on some powerpc-ibm-aix configurations.\n // { dg-prune-output \"non-standard ABI extension\" }\n "}, {"sha": "bec69c75d503221aa97e1547d9c42dceccc54404", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-55573.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-55573.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-55573.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-55573.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/55573\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n // Ignore warning on some powerpc-ibm-aix configurations.\n // { dg-prune-output \"non-standard ABI extension\" }\n "}, {"sha": "945bf020f0ebb139adfe86fa34529d2292b18763", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-56302.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-56302.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-56302.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-56302.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/56302\n-// { dg-do compile }\n-// { dg-options \"-std=c++11 -O0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O0\" }\n \n constexpr int foo () { return 42; }\n constexpr int x = foo () + 2;"}, {"sha": "8d791dd032dec147a3cb15025f11da2638cbeb5e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-99.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-99.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-99.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-99.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin PR c++/51462\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "418a2029951d78fa79b608b1dd8aecb9e781993d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-abi1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-abi1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-abi1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-abi1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/47301\n-// { dg-options \"-std=c++11 -fabi-version=1\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=1\" }\n \n struct A\n {"}, {"sha": "569824dc57f90337efd8b38a96ba1b82baa2ad29", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-access.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-access.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-access.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-access.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n class base\n {"}, {"sha": "ea86d7bc629809b7108106e1df44d1309f493c88", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-and.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-and.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-and.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-and.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/56481\n // Non-linearity in potential_constant_expression_1\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct S\n {"}, {"sha": "15d20f69260f0716933fca9d5871aaf269747840", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n constexpr T do_get(T* x, int n) {"}, {"sha": "9218196220059d549132315857b1dc5299097bbc", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n struct IsNegative {"}, {"sha": "2338f70f0762ed1447f3a710a621db1174b00f7f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,8 +1,8 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr bool is_negative(int x) {\n   return x < 0;\n-};\n+}\n \n constexpr bool do_has_neg(const int* x, bool(*p)(int)) {\n  return p(x[0]) || p(x[1]);  // Line 6"}, {"sha": "3dd3f34e67b3494cebb5443e3b98134234e96e31", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr const int do_last(const int* x, int n) {\n  return x[n - 1];"}, {"sha": "eec32d672a26063a706263834203d596caca0c54", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n constexpr T do_last(T* x, int n) {"}, {"sha": "3a483989c1ff1e293353272a3d81734635fb2a38", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n typedef decltype(sizeof(char)) size_type;\n "}, {"sha": "93f91411447d91fe6858b209a5459175b8ce1aa9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-ptr7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-ptr7.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49290\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n typedef unsigned T;\n struct S"}, {"sha": "02fba95545defea64286ef1168ff7b0b44c87a3f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array-tparm.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-tparm.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-tparm.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array-tparm.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <const int I[2]> struct A { int ir[I[0]]; };\n extern constexpr int ar[2] = { 1, 2 };"}, {"sha": "1614d6bd2cc7ec58872e777d4d8fd5cf3595f74d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // { dg-final { scan-assembler-not \"static_initialization\" } }\n \n struct A"}, {"sha": "ad6b12171ae3aa0cbd91e1f139e4746bab766f86", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46348\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<__SIZE_TYPE__ _Nw>\n   struct _Base"}, {"sha": "12f42f1834d4222bbb0575ddcedd707738a6004c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48132\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct C\n {"}, {"sha": "aa95264941783643671f0b3d80ebcb5988cf0d7b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49924\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { constexpr A() { } };\n "}, {"sha": "cda0e926bf7b4ac7bf2dae416ecdb80094f26e0b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-attribute.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n //A few constexpr's\n constexpr int foo() { return __alignof__(int); }"}, {"sha": "c174cb3ebc52000dd19ee02292a0bf2c14ad3499", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-attribute2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target init_priority } }\n-// { dg-options -std=gnu++11 }\n+// { dg-require-effective-target c++11 }\n \n struct t { t(); };\n "}, {"sha": "ae270dc1d33e295639cb1fc9daf0cd4256b14f88", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-auto.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-auto.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-auto.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-auto.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,2 +1,2 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n constexpr auto value = 0;"}, {"sha": "5f0b5cacf9ecfcb414b2535359b6331bd8f8ba80", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-base.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Test base/member class and static_assert with constexpr\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A {\n   int i;"}, {"sha": "217687a3fb3e5d6364cf935dc669761a88834a8f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-base2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46293\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "db867d4ef43e9f8b18679585004900e393553895", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-base3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/46526\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n struct Base\n {"}, {"sha": "ab664394e5e4447bdd137ccdab54f43ebcc81291", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-base4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-base4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/46626\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n struct A\n {"}, {"sha": "a50ac36362062c23ae096322fd6d9853c4b0e0e6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-bitfield.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46369\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "5b667208ed1bbb7aefff50f2c36c2e96fc95f5e9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-bitfield2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/49136\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct day\n {"}, {"sha": "c393db4e6e9f68f4cbfc9d8d63242826540293f4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-bitfield3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/49136\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct S\n {"}, {"sha": "d663f8823452e10b25a234b7f2ff1d5f687ee8a1", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-builtin1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-builtin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-builtin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-builtin1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49813\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n inline constexpr bool\n isinf(long double __x)"}, {"sha": "8038b88140d99740cae3b36908398888e9b1a915", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-cache1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cache1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cache1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cache1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51433\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr int f();\n constexpr int g() { return f(); }"}, {"sha": "bfba6fc9ebda49d8346ed1b43ca5fed33061a016", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-cleanup.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cleanup.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cleanup.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cleanup.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "fa393484d6c378c0407bc51ceda9f26abb70c122", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-complex.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-complex.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-complex.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-complex.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // Make sure C99 complex works with constexpr\n-// { dg-options -std=gnu++11 }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n \n struct complex\n {"}, {"sha": "bfe4e13d4a7e18b17fc8636ddc61ad30dfb4150a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-compound.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-compound.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-compound.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-compound.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11 -pedantic-errors\" }\n+// { dg-do compile { target c++11 } }\n \n constexpr int f()\n {"}, {"sha": "388a73488e7a363ffab2b0fdfb053942b6ee96ec", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-condition.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // Core DR 948\n \n constexpr int something() { return 3; }"}, {"sha": "3ce9b4c45fa313455c8a9aa57cb35332a87e174c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-condition2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-condition2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48909\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #define SA(X) static_assert((X),#X)\n "}, {"sha": "659e733cdcd262e503170f5b6bf05eed6b036bda", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "1dbc3355e3dfd874c78608db1b5055ef57b233a3", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor10.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/52599\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct foo {\n-  constexpr foo() try { } catch(...) { };  // { dg-error \"constructor\" }\n+  constexpr foo() try { } catch(...) { };  // { dg-error \"constexpr\" }\n };"}, {"sha": "e22c55f7a92502561b40601a6ebd9ee2f91a15b6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor11.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor11.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/55856\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {\n@@ -10,7 +10,7 @@ template <class T>\n struct B\n {\n   T t;\n-  template <class U> constexpr B(U&& u): t(u) { };\n+  template <class U> constexpr B(U&& u): t(u) { }\n };\n \n B<A&&> b(\"\");"}, {"sha": "45e1ed27faee175c7ba9c42d2a8dd895483530c3", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor12.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/55753\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <typename Tp>\n struct C {"}, {"sha": "299db88326834a8951ffc4f12e25f550ce9ed698", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor13.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/55753\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "30b01091fd1b744e8bc89b5449b276d3b36a77f1", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "36d1de4ac11e8ec629c4d97471629bd22e539061", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46348\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "c4947126bbbe49a6600ecc973c040b3afffa4693", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46873\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct S\n {"}, {"sha": "abfc72c8fdd8fa3ee40cdf53fe6629475a08f884", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46877\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct new_allocator\n {"}, {"sha": "fd87fe495a2522d260d4da64a35527c9d2a7f4af", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/47041\n-// { dg-options \"-std=c++11 -fno-elide-constructors\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fno-elide-constructors\" }\n \n struct S\n {"}, {"sha": "5d18e56435278ed00d511f9d28fc479d03ec53da", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor7.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/47199\n-// { dg-options \"-std=c++11 -fno-elide-constructors\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fno-elide-constructors\" }\n \n template < int > struct S\n {"}, {"sha": "5b75e64750b35eeda96ac64db98046c52f93be6a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor8.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor8.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/46466\n-// { dg-options \"-std=c++11 -fno-elide-constructors\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fno-elide-constructors\" }\n \n struct S { bool b; };\n constexpr S f() { return S{true}; }"}, {"sha": "0763ee4bc9b97be66051406c793b89cedac72a3a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor9.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47774\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "f49c56a4ba1a06479667f607dee93483b5fdb8a7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-data1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "312760a37676075b72081ec446fc71f5357504d1", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-data2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename _Tp, _Tp v>\n   struct A3"}, {"sha": "2c88fe689ea3bb93cbf2bdd7143ba5cdb2787594", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-decl.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-decl.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-decl.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-decl.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46930\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct S {\n   static constexpr int size;\t// { dg-error \"must have an initializer\" \"must have\" }"}, {"sha": "eaa3fbdfdb4b2d719a23b8fc97c7812a40c38214", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-defarg.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-defarg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-defarg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-defarg.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46335\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct T { };\n struct A {"}, {"sha": "f1ca05fe9ec6a4b42449d96f2b398624dddb11ce", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-defarg2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-defarg2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-defarg2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-defarg2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46368\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n class A;\n "}, {"sha": "a67505d749bbdded0161ad16426ed5557232269a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-default-ctor.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-default-ctor.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-default-ctor.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-default-ctor.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A {\n   int i;"}, {"sha": "f32dde60eae70ae0822f9e9912239ae6833d3115", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-delegating.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delegating.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delegating.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delegating.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51526\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n const int j = 42;\n "}, {"sha": "35439423f7b069b8c898f64f2effd98470aebc9c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-delegating2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delegating2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delegating2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delegating2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51723\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <int... V>\n struct A"}, {"sha": "3cc4f55d07dbda6901ae768f5ea167ee3a519181", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-delete.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delete.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delete.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-delete.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,3 +1,3 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr bool never() = delete; // useless, but OK"}, {"sha": "ce898abfcf1d1bd5a942d52e322c04343adc9a2c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-deref.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-deref.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-deref.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-deref.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "34cdb733e52d1cb7ecf638e24448242256692ddd", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Test that we explain why a template instantiation isn't constexpr\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n struct A"}, {"sha": "04db4b3313e3af756c9e07fb9f5586f94fa0b46e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47207\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr int X (X);\t\t// { dg-error \"not usable\" }\n // { dg-message \"own initializer\" \"\" { target *-*-* } 4 }"}, {"sha": "2a1897b6bfb197f4e46065554aed717fb1aa5a6c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/45923\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n int f(int);\n "}, {"sha": "29f574df3896a075a5d7c1d22d6a06066eb400fb", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin: PR c++/51633\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "c8043e3bdb4ffe26a85987d7d8faec9001c14e02", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Origin: PR c++/51633\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "93224b0c396ad930d98e8e5ca33ce5dcb6bab7d4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-eh-spec.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-eh-spec.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-eh-spec.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-eh-spec.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n template<class T> class my_limits {\n public:\n   static constexpr T min() throw() { return T(); }"}, {"sha": "8c0783c9acccc1df203ccc537b1d105a0ba46d33", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ellipsis.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ellipsis.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ellipsis.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ellipsis.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n constexpr int ellipsis(...) { return 1; }\n \n constexpr int ellipsis_c = ellipsis(); // OK"}, {"sha": "b6a5323b0f906dced9c74e7974f137c2b1ae712b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ellipsis2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ellipsis2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ellipsis2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ellipsis2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "42f873bb334af33be95cd283fd203c2f27be9200", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct Empty {};\n "}, {"sha": "51f3f554dfcd0c908a36105f7e89dc1bc3300f57", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct IsLiteral {};\n "}, {"sha": "a9cd98fa4e5e6cee057eba73f2ed5ba091794b8e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct IsLiteral {};\n "}, {"sha": "f61aa69326c33cb923b58275642531974e259cc1", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n typedef decltype(sizeof(char)) size_type;\n "}, {"sha": "e74f5ba1e35c8713f1d8c0e33b160b7e59dd1537", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { };\n struct B: A { };"}, {"sha": "e541bf9fbdb0cb5d0962e9850bfe6e7496e54eae", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ex1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "9e99d6da4676d8a697a6f68881a9696cbc4fd78d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ex2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "3e2685b1c5c326c821d9958fcab70f36b019bf7e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ex3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++11 -ftrack-macro-expansion=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-ftrack-macro-expansion=0\" }\n \n #define SA(X) static_assert (X, #X)\n "}, {"sha": "7a9086cb7c1063d36dbf2f5ce43f25873e547235", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ex4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ex4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "08a0fe022cd4992ea5682cc18c8837622ad8df5c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-expinst.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-expinst.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-expinst.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-expinst.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // Error: Explicit instantiation of a function template shall not use the\n // inline or constexpr specifiers\n template<class T> constexpr inline T bar(T x) { return x; }"}, {"sha": "f5137b3525c68a93144fd3703c7ae7a34b5ccb7f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-explicit-inst.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-explicit-inst.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-explicit-inst.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-explicit-inst.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T> constexpr inline T bar(T x) { return x; }\n "}, {"sha": "2b08478ce9b979fd2fa3434b2d4318062b93ed1a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-fnptr.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-fnptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-fnptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-fnptr.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr bool is_negative(int x) { return x < 0; }\n "}, {"sha": "55a2329eb54ce01be733b970665f4d81e50b8186", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-friend.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-friend.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-friend.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-friend.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48948\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { A(); };\n "}, {"sha": "ce4520d5574db3a4befc333200525fdafccceb9f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-function1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "8cb32c9ad94257cd1608215ca9b4f6e4ae6897d9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-function2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "ea4f4abae3ba2fc592f42b3105f572afe488edf9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-function3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "39be3ed571f10273ae16271979a765f9b38eee43", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-generated1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-generated1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-generated1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-generated1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T> struct A\n {"}, {"sha": "fb7570f5ff96ae2bf2d455dd7cdbd594802cc319", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // We used to crash on this instead of giving a decent error.\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { int i; };\n "}, {"sha": "dee4817f671a086b0e8b305c4ef7f5832ffa0afe", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,3 +1,3 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n int x;\n constexpr int& rx = x;"}, {"sha": "fccd120855aa28f7ec47a9be2be19def3df01f75", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46289\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "a083c85e752b667f1b1efdcbb4836fa9062ae594", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51612\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A {};\n "}, {"sha": "c5a117c02dd10567d5412e5897a3e59192209627", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51621\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "30e0a643bcb135c4f33d4f8a501df4683ca28276", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51327\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "514cca59c33208a12fca62993686ddb560422039", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-incomplete1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "a8af2e66f2a07ded4bb8c5a9e422cfe34fe4c466", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-incomplete2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // A constructor that might or might not be constexpr still makes\n // its class literal.\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n struct B"}, {"sha": "c0516f089e77b90a3120c4ef96c54f0cc884880f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-incomplete3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-incomplete3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49015\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n class A;\n "}, {"sha": "52fc9ea8caa5bfc179a4e15c314525432527c050", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++11 }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n namespace xstd {\n "}, {"sha": "65a7036ef0f59a2c683889ae77b0b7f9e05cf5c9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #include <initializer_list>\n "}, {"sha": "912cf910ec63c2d24dae07a1edddbc8140818ff1", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #include <initializer_list>\n #define SA(X) static_assert(X,#X)"}, {"sha": "d4019b2b9c45bd226360d1241f67eb7f46a37ab5", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { int i; };\n struct B: A { constexpr B(): A{} {} };"}, {"sha": "901510e106711822d108de62cca20fb1089643b4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/50024\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template< class T >\n struct Container"}, {"sha": "8c344c0b28f88a118f70b2f4df90bfa46c33849b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/55419\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct P\n {"}, {"sha": "f255b8d15070f12b2b34a90314d57fce1cfb101c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-is_literal.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-is_literal.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-is_literal.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-is_literal.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #include <type_traits>\n "}, {"sha": "775c103161a9c1193d11eac02e9f760da3decc06", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-memfn1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-memfn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-memfn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-memfn1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48296\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct X\n {"}, {"sha": "afaf2e30e35bce2b1b6f29578489242f8c04f655", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-missing.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-missing.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-missing.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-missing.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/48911\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n #define SA(X) static_assert((X),#X)\n "}, {"sha": "832a16197d5b1bc9d31e66a926209738de550778", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-mutable1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-mutable1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-mutable1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-mutable1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "fb4c01274d9962555e6bd4dc6e37ead4153023c9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-neg1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Negative examples from N3092 (FCD)\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n // OK: declaration\n constexpr int square(int x);\t// { dg-message \"never defined\" }"}, {"sha": "dbadaa8e3d217729c32062e55e51b4f277aa5c33", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-noexcept.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n struct is_funny {"}, {"sha": "d10039a92e131d7509c060f32c7a55aa18565834", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-noexcept2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n constexpr T value(T t) { return t; }"}, {"sha": "9541bc0781d501b4c1f310b8635673867441e36d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-noexcept3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr int f(int i) { return i; }\n #define SA(X) static_assert (X, #X)"}, {"sha": "eb7190023ed637568524aaac5ee0535a0f49ff56", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-noexcept4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // A call is noexcept if it is a valid subexpression of a constant\n // expression, even if it is not itself a constant expression.\n "}, {"sha": "7b0c83599543ed37a2f05d27ec3e7a245e182692", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-noexcept5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct booleable {\n   bool data;"}, {"sha": "76d9246d6f169de8d1f3bb23e639ce9928f38210", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-noexcept6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-noexcept6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51305\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr bool ok() noexcept\n {"}, {"sha": "0f68643f145e75d763c30f1a55ea4fde98a4d6eb", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-non-const-arg.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // Example from issue 1125 drafting; D() and v were well-formed with the\n // wording approved in Rapperswil, now seems they should be ill-formed.\n-// { dg-options \"-std=c++11 -pedantic-errors\" }\n+// { dg-do compile { target c++11 } }\n \n struct B {\n   constexpr B(int x) : i(0) { }    // \"x\" is unused"}, {"sha": "32a023b9c8cef5f6d1b41ff1ef6de6f188580ec8", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-non-const-arg2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/47200\n-// { dg-options \"-std=c++11 -w\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-w\" }\n \n template < int > struct duration\n {"}, {"sha": "d8603f838b54ba019d61820daa00c63da4b0886e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-non-const-arg3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/49988\n-// { dg-options -std=c++11 }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n template<int ... I> struct X { };\n "}, {"sha": "0534b41ad06be96e8d1cc9b8202329937ca34f90", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-nonlit.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonlit.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonlit.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonlit.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // FIXME this is currently invalid, but seems like it should be OK\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { A() { } };\n "}, {"sha": "2d712b64a52a768f05838cbc38de6db5b2549b3a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-nonlit2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonlit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonlit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonlit2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "bb0743adb712e57e3fd86570abf4b8e646c70c40", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-nonstatic.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonstatic.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonstatic.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nonstatic.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "8ff89982d20c8ef76b564895a51bb755bf6a74f4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-nullptr.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nullptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nullptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nullptr.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr int zero() { return 0; }\n "}, {"sha": "41afbe969a2b67f609d8002da1ce6add9e863a68", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-object1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n // From N2235\n "}, {"sha": "d52967a7edd739817745c9b6304be46bfcb77d8e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-object2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n constexpr int verysquare(int x) { return x * x; }\n "}, {"sha": "8406e4924ecc9c720ba8fecbba5d7db0b28d7952", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-overflow.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++11 -w -ftrack-macro-expansion=0\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-w -ftrack-macro-expansion=0\" }\n \n #include <limits.h>\n extern constexpr int max_s = INT_MAX + 1;  // { dg-error \"\" }"}, {"sha": "bd2e6875a94f192792c99410725d924829c6ae37", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-overflow2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47504\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n char constexpr sub(char arg)\n { return char(arg - char(1)); }"}, {"sha": "21f4c83b39629cb0419e2e4fd417a1356ebc3a55", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-pedantic.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pedantic.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pedantic.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pedantic.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,7 @@\n // The FCD doesn't allow typedefs and static_assert in constexpr functions,\n // but it should.\n-// { dg-options \"-std=c++11 -pedantic\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-pedantic\" }\n \n template <class T>\n constexpr T f(T t)"}, {"sha": "8e82ef59eb563d2d0c93e90816b89df31020f856", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-pos1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pos1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pos1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pos1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Positive examples from N3092 (FCD)\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #define SA(X) static_assert(X, #X)\n "}, {"sha": "f960e3afbdfcab3e5101d41df57a295e219c4044", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-potential1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-potential1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-potential1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-potential1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // We decided in Rapperswil that it's OK if any value of decide can produce\n // a constant expression.\n "}, {"sha": "c16fb15e7b806fb771638193d9f71795319aea7e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ptrmem.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrmem.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrmem.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrmem.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct C { // literal type\n   int m;"}, {"sha": "18648d92d2e86640cd6b63d8141460f028f4ebf4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ptrsub.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrsub.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrsub.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrsub.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/51489\n // DR 1313\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n struct array\n {"}, {"sha": "f54b7c59f78da152d672d457e95f3baa06bc9615", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-pure.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pure.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pure.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-pure.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "e3e13f755f958cccc6f21380e042c2e4c9c48404", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-recursion.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-recursion.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-recursion.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-recursion.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // Test that we catch excessive recursion.\n-// { dg-options \"-std=c++11 -fconstexpr-depth=5\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fconstexpr-depth=5\" }\n // { dg-prune-output \"in constexpr expansion\" }\n constexpr int f (int i) { return f (i-1); }\n constexpr int i = f(42);\t// { dg-error \"constexpr evaluation depth\" }"}, {"sha": "f3e4cead14f1af7485944ea6425b4f63298707f7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ref1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,9 +1,9 @@\n // PR c++/49172\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #define SA(X) static_assert((X),#X)\n \n-constexpr int g() { return 42; };\n+constexpr int g() { return 42; }\n constexpr int(&rg)() = g; // #1\n \n SA(rg() == 42);"}, {"sha": "76973638d5f4d2b4d94c8d25924f24cbd9a6c39f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ref2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Negative reference variable tests.\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n extern int *p;\n constexpr int& ri = *p;\t\t// { dg-error \"p\" }"}, {"sha": "7936536042d57fa211683bff81f9f1c19bf70160", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ref3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/50298\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n int global_variable;\n "}, {"sha": "ce1ce5235c08f8f44874aac5e3f4cc50df1fd2ac", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ref4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/54777\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct S\n {"}, {"sha": "697203d7291a0da5d475b5406d36cba6c173a5a7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-rom.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49673: check that test_data goes into .rodata\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // { dg-additional-options -G0 { target { { alpha*-*-* frv*-*-* ia64-*-* lm32*-*-* m32r*-*-* microblaze*-*-* mips*-*-* nios2-*-* powerpc*-*-* rs6000*-*-* score*-*-* } && { ! { *-*-darwin* *-*-aix* alpha*-*-*vms* } } } } }\n // { dg-final { scan-assembler \"\\\\.rdata\" { target mips*-*-* } } }\n // { dg-final { scan-assembler \"rodata\" { target { { *-*-linux-gnu *-*-gnu* *-*-elf } && { ! mips*-*-* } } } } }"}, {"sha": "7f82671b442527194c4cc3da133dd1d7b65841ad", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-sassert.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sassert.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sassert.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sassert.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Allow static_assert in constexpr constructors, too.\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<typename T>\n struct A"}, {"sha": "80f56a19615a890b9b220cb885a62b608abadb90", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-specialization.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-specialization.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-specialization.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-specialization.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/56871\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename T> constexpr int foo(T);\n template<> int foo(int);"}, {"sha": "24174aca020295cbd350a4cbfd660962eab4a8a9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // Test for constant initialization of non-literal class (e.g. mutex)\n-// { dg-options \"-std=c++11 -save-temps\" }\n-// { dg-do run }\n+// { dg-options \"-save-temps\" }\n+// { dg-do run { target c++11 } }\n \n struct A\n {"}, {"sha": "e908fb3cb6b91e98364d539d7f783726b279933a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static10.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/55944\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n struct Test"}, {"sha": "70a254c5dd9dd425e1f0dab6f27ec7270a8c2925", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n struct IsLiteral {};\n \n struct ShouldBeLiteral {"}, {"sha": "6d65a62e5aba8fa187c307be0561a12adedc0bf9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,8 +1,8 @@\n // Test for constant initialization of class with vtable\n-// { dg-options \"-std=c++11 -save-temps\" }\n+// { dg-options \"-save-temps\" }\n // { dg-final { scan-assembler-not \"static_initialization\" } }\n // { dg-final cleanup-saved-temps }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n int r = 1;\n // implicit default constructor for A and B is constexpr"}, {"sha": "fa1a4c746d89231097dd0326efd073e7c5443885", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++11 }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n extern \"C\" void abort ();\n extern int ar[2];"}, {"sha": "d161cf5445c5dddcf63b4853f02a28adf26c09ad", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n struct A"}, {"sha": "78065c3068b0cc2f87de0d62ad346f4b49b28788", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct B\n {"}, {"sha": "272ebd901d438cf595a721490f6181949525a08d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static7.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/48945\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A {\n   static constexpr bool is();"}, {"sha": "34aa5afc001206504983eea887bf87331f06afe5", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static8.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static8.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/50258\n-// { dg-options \"-std=c++11 -fpermissive\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fpermissive\" }\n \n struct Foo {\n   static const double d = 3.14; // { dg-warning \"constexpr\" }"}, {"sha": "bebd4f6f41508b57ad34b7b13e4f87922ed25ef3", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-stmtexpr.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-stmtexpr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-stmtexpr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-stmtexpr.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/46977\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n \n template < typename > void\n foo ()"}, {"sha": "0f561a4360c385835a38c92095e482d8a70dde47", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-string.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-string.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-string.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-string.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr char c1 = \"hi\"[1];\n constexpr char c2 = \"hi\"[2];"}, {"sha": "ee94159f09d09e00f5be14f948b4104656c66bfe", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-switch.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-switch.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-switch.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-switch.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n constexpr T value(T t = T()) { return t; }"}, {"sha": "652a08d92bdc8ba1d85fd0164782c3dbd7a43e5c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-switch2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-switch2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-switch2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-switch2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Test for constexpr conversion in case context\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n enum class E { e1, e2 };\n "}, {"sha": "27375e2cf60fa7105015995908c3c072e0d25375", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-synth1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-synth1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-synth1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-synth1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/46472\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T> struct A {\n   T t;"}, {"sha": "b5171141f94f0964c23ccc3c3eb4535a287db8a8", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-targ.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-targ.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-targ.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-targ.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A\n {"}, {"sha": "b949bd66bfce71755129467e09da3ccbbcef07d3", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-template1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/50248, DR 1358\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class Elt, unsigned max>\n struct earray"}, {"sha": "a316b34bd7b39b0ed130c2f2197a81d3cf882cf2", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-template2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T> struct A\n {"}, {"sha": "f0ac2224af5b3c95aa8d2c7129953a5403a003d6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-template3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A { constexpr operator int() { return 42; } };\n "}, {"sha": "fd0c957b0a3c3d4b0e1deb33763d3ee10ee36c65", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-template6.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template6.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/59268\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template <typename>\n struct A"}, {"sha": "5666629acae9fba6dca8c902fa823449075d3636", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-throw.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-throw.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-throw.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-throw.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr int may_throw(bool decide) {\n \treturn decide ? 42 : throw -1; // { dg-error \"throw\" }"}, {"sha": "98c2309abb681166f1658c02c0c9380189746bac", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-typedef1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typedef1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/50508\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n   struct integral_constant {"}, {"sha": "32af84eacb9b9a209d939fc9cc449a41581626f0", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-typeid.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typeid.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typeid.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typeid.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #include <typeinfo>\n "}, {"sha": "0c3548c0ac463801569d85fcbdcd7d01d9816037", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // Test that we don't have to deal with type punning\n // DR 1188 says this is ill-formed\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n union U\n {"}, {"sha": "1a5e832ac341805e5ac7643febbeb1c018169dfd", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51675\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n union foo\n {"}, {"sha": "ecae28dcc5bde7b40df361616d0a43c27989de8b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/51675\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n union foo\n {"}, {"sha": "57796664e01a6de183fc69e9ca89f288315a75b7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,6 @@\n // PR c++/54922\n-// { dg-options \"-std=c++11 -pedantic\" }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-pedantic\" }\n \n #define SA(X) static_assert(X,#X)\n "}, {"sha": "e8e7de31e452768b0333d7b44503062c25b7270d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-using.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Core issue 898\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n namespace N { const int i = 42; }\n namespace M { const int j = 42; }"}, {"sha": "59a65e50582ad8598c12fcd44e44fd30661b7171", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-using2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-using2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/49520\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n namespace x { void foo(); }\n "}, {"sha": "87311876e3e320b646bd27c60c508b2165c30ee5", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-value.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct HopefullyLiteral {\n   HopefullyLiteral() = default; // Should be a constexpr c'tor as of 12.1/6 and 8.4.2/4"}, {"sha": "00797fa001277819ffadc674d0e765ef331bcf6d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-value2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template<class T>\n constexpr T value_init() { return T(); }"}, {"sha": "8fd9c744536d534ba4cb1e651f68c9a829be0435", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-value3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/50234\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n #define SA(X) static_assert((X),#X)\n "}, {"sha": "495c6e2b145f01024aac2d08947246cc251e1797", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-variadic.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-variadic.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-variadic.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-variadic.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n template<class... T>\n constexpr bool variadics(T&&...) { return true; }\n "}, {"sha": "2c13e3ef1882b186263c83eac2124bf548744b62", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-virtual.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/47067\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct X {\n     virtual void x();"}, {"sha": "b938d6535c781995c43b87452b2de16d44558051", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-virtual4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual4.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/56291\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n class Base\n {"}, {"sha": "dc1b7080a04d6c8bb39ebcbfbe55dfc14b13f191", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-wstring1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/48570\n-// { dg-do run }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n extern \"C\" void abort ();\n constexpr wchar_t foo (int i) { return L\"0123\"[i]; }"}, {"sha": "db79a9c75e291d016de7c6e480166b2f579748eb", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-wstring2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-wstring2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/48570\n-// { dg-do compile }\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n constexpr wchar_t c1 = L\"hi\"[3];\t// { dg-error \"out of bound\" }\n constexpr char16_t c2 = u\"hi\"[3];\t// { dg-error \"out of bound\" }"}, {"sha": "e7ccb64a3b3b84105963a0135142bf297b1ffcad", "filename": "gcc/testsuite/g++.dg/cpp0x/dc1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options --std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct B {\n \tint i;"}, {"sha": "665f79d425f49b697c73dd6cf0058c7e113bea17", "filename": "gcc/testsuite/g++.dg/cpp0x/dc2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options --std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct A {\n \tint i, j;"}, {"sha": "9c6fd56564c217a4cf346d9fd0656a18979f4eb8", "filename": "gcc/testsuite/g++.dg/cpp0x/dc3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc3.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options --std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct X {};\n "}, {"sha": "57321626e9125647f942809e8987f9fe2bd70cc0", "filename": "gcc/testsuite/g++.dg/cpp0x/dc5.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc5.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run }\n-// { dg-options \"--std=c++11\" }\n+// { dg-do run { target c++11 } }\n \n #include <cassert>\n "}, {"sha": "f9c879e9525d8941340dcc4afb46fcf67d4478c4", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-1212.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-1212.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-1212.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-1212.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // Core 1212\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T, class U> struct assert_same_type;\n template <class T> struct assert_same_type<T,T> {};"}, {"sha": "fbbc6a14972aaa52cd5c65693d0bce610032e03f", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-33837.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33837.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33837.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33837.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // PR c++/33837\n void foo()\n {"}, {"sha": "effe08dcc4bb44e300c6057173878b5ecc7742d6", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-33838.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33838.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33838.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33838.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n // PR c++/33838\n template<typename T> struct A\n {"}, {"sha": "4b81b5ab888b4220965ca57eea50a8bb86cf2118", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-54581.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-54581.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-54581.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-54581.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-std=gnu++11 -Wall\" } */\n+/* { dg-do compile { target c++11 } } */\n+/* { dg-options \"-Wall\" } */\n \n typedef float v4f __attribute__((vector_size(4*sizeof(float))));\n "}, {"sha": "cecff3c2941c7cb1d972574df74b92c937426d8e", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-refbug.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-refbug.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-refbug.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-refbug.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n // PR c++/33045\n int && f ();\n "}, {"sha": "84c7a03f38283ca366a8cc744f22bb16456210e7", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype1.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename T, typename U> \n struct is_same "}, {"sha": "846d0bf57cf2aac18f4d3145e6d4121a38d731ee", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype10.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype10.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/34271\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<int> struct A\n {"}, {"sha": "9fa8e230fcb12d7c9cd38450c24c58fd63e4f11d", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype11.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/35316\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<int> struct A\n {"}, {"sha": "eae318db2df59319f89106467ea4d48bcc4392d9", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype12.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype12.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n template<typename T, typename U>\n struct is_same\n {"}, {"sha": "f19819cfd19809ffd1c9e7c0799c3fe20b1c64f4", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype15.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype15.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/38640\n-// { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<int N> void foo (decltype (N));\n template<long int N> void foo (decltype (N));"}, {"sha": "5cf84395368bdec921e86acb2e5b777507f2a673", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype16.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/39070\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename X> struct junk {\n    template<typename Z> static Z y();"}, {"sha": "6e5854db6c91f4d93c9a522b653d58e9ac2bff44", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype17.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype17.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,5 @@\n // PR c++/36628\n-// { dg-options \"-std=c++11\" }\n-// { dg-do run }\n+// { dg-do run { target c++11 } }\n \n #include <typeinfo>\n #include <string.h>"}, {"sha": "4c1571a565f6d2bccd3210ee6e53546e89976171", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype18.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/37875\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template <typename> struct X {};\n X<decltype(1 > 2)> x;"}, {"sha": "f316f50a02d3ad9e56fc14ec73cf9f2e58428b59", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype2.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype2.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename T, typename U> \n struct is_same \n@@ -46,7 +45,7 @@ int bar(int);\n CHECK_DECLTYPE(decltype(foo), int(char));\n \n decltype(bar) z; // { dg-error \"overload\" \"overload\" }\n-// { dg-error \"invalid type\" \"invalid\" { target *-*-* } 48 }\n+// { dg-error \"invalid type\" \"invalid\" { target *-*-* } 47 }\n \n CHECK_DECLTYPE(decltype(&foo), int(*)(char));\n CHECK_DECLTYPE(decltype(*&foo), int(&)(char));"}, {"sha": "5fb35404288bffad3379da17329b9537d6999c80", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype20.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/42277\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n struct S { int s; };\n template <int N>"}, {"sha": "e4dc2011e390ac02fe315c6fc978c1f3d7a11ff6", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype21.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,6 +1,6 @@\n // PR c++/6709 (DR 743)\n // PR c++/42603 (DR 950)\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n template <class T>\n T make();"}, {"sha": "b3ff8b84a43975afb393c8541cff8ddadbd4fc39", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype22.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,5 +1,5 @@\n // PR c++/42761\n-// { dg-options \"-std=c++11\" }\n+// { dg-do compile { target c++11 } }\n \n template<typename _Tp> _Tp* fn();\n "}, {"sha": "731eed708e54e60a402099816d53ee1b7e1c51b2", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2e63def5842b6762ac4045d04add24ddd6618d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype23.C?ref=4b2e63def5842b6762ac4045d04add24ddd6618d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++11 }\n+// { dg-do compile { target c++11 } }\n \n int x, &&y = static_cast<int &&>(x);\n typedef decltype((y)) myInt;  // `y' is a parenthesized id-expression of type int that is an lvalue"}]}