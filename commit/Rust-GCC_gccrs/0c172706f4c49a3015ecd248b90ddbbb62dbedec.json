{"sha": "0c172706f4c49a3015ecd248b90ddbbb62dbedec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxNzI3MDZmNGM0OWEzMDE1ZWNkMjQ4YjkwZGRiYmI2MmRiZWRlYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-06-22T10:09:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-06-22T10:09:10Z"}, "message": "lto-streamer-out.c (DFS::DFS_write_tree_body): Do not stream BINFO_BASE_ACCESSES and BINFO_VPTR_FIELD.\n\n\n\t* lto-streamer-out.c (DFS::DFS_write_tree_body): Do not stream\n\tBINFO_BASE_ACCESSES and BINFO_VPTR_FIELD.\n\t* tree-streamer-in.c (streamer_read_tree_bitfields): Likewise.\n\t(lto_input_ts_binfo_tree_pointers): Likewise.\n\t* tree-streamer-out.c (streamer_write_tree_bitfields,\n\twrite_ts_binfo_tree_pointers): Likewise.\n\t* tree.c (free_lang_data_in_binfo): Clear BINFO_VPTR_FIELD.\n\nFrom-SVN: r261885", "tree": {"sha": "4a0fdd8ff760fafdc98062a920540db2dc74ec33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a0fdd8ff760fafdc98062a920540db2dc74ec33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c172706f4c49a3015ecd248b90ddbbb62dbedec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c172706f4c49a3015ecd248b90ddbbb62dbedec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c172706f4c49a3015ecd248b90ddbbb62dbedec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c172706f4c49a3015ecd248b90ddbbb62dbedec/comments", "author": null, "committer": null, "parents": [{"sha": "31dd69b7ff60979b615e45229f759613873989e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31dd69b7ff60979b615e45229f759613873989e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31dd69b7ff60979b615e45229f759613873989e6"}], "stats": {"total": 62, "additions": 21, "deletions": 41}, "files": [{"sha": "7cd1cc57ca5c2936e1f0e7ce774112e02c9dc839", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c172706f4c49a3015ecd248b90ddbbb62dbedec", "patch": "@@ -1,3 +1,13 @@\n+2018-06-22  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-streamer-out.c (DFS::DFS_write_tree_body): Do not stream\n+\tBINFO_BASE_ACCESSES and BINFO_VPTR_FIELD.\n+\t* tree-streamer-in.c (streamer_read_tree_bitfields): Likewise.\n+\t(lto_input_ts_binfo_tree_pointers): Likewise.\n+\t* tree-streamer-out.c (streamer_write_tree_bitfields,\n+\twrite_ts_binfo_tree_pointers): Likewise.\n+\t* tree.c (free_lang_data_in_binfo): Clear BINFO_VPTR_FIELD.\n+\n 2018-06-22  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree.c (free_lang_data_in_type): Free all TYPE_VFIELDs."}, {"sha": "313b76e5018bcd9ff033c1e586689dfe27a971cf", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=0c172706f4c49a3015ecd248b90ddbbb62dbedec", "patch": "@@ -939,15 +939,10 @@ DFS::DFS_write_tree_body (struct output_block *ob,\n \tDFS_follow_tree_edge (t);\n       DFS_follow_tree_edge (BINFO_OFFSET (expr));\n       DFS_follow_tree_edge (BINFO_VTABLE (expr));\n-      DFS_follow_tree_edge (BINFO_VPTR_FIELD (expr));\n \n-      /* The number of BINFO_BASE_ACCESSES has already been emitted in\n-\t EXPR's bitfield section.  */\n-      FOR_EACH_VEC_SAFE_ELT (BINFO_BASE_ACCESSES (expr), i, t)\n-\tDFS_follow_tree_edge (t);\n-\n-      /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX\n-\t and BINFO_VPTR_INDEX; these are used by C++ FE only.  */\n+      /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX,\n+\t BINFO_BASE_ACCESSES and BINFO_VPTR_INDEX; these are used\n+\t by C++ FE only.  */\n     }\n \n   if (CODE_CONTAINS_STRUCT (code, TS_CONSTRUCTOR))\n@@ -1332,11 +1327,9 @@ hash_tree (struct streamer_tree_cache_d *cache, hash_map<tree, hashval_t> *map,\n \tvisit (b);\n       visit (BINFO_OFFSET (t));\n       visit (BINFO_VTABLE (t));\n-      visit (BINFO_VPTR_FIELD (t));\n-      FOR_EACH_VEC_SAFE_ELT (BINFO_BASE_ACCESSES (t), i, b)\n-\tvisit (b);\n       /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX\n-\t and BINFO_VPTR_INDEX; these are used by C++ FE only.  */\n+\t BINFO_BASE_ACCESSES and BINFO_VPTR_INDEX; these are used\n+\t by C++ FE only.  */\n     }\n \n   if (CODE_CONTAINS_STRUCT (code, TS_CONSTRUCTOR))"}, {"sha": "da3a7efbe5e43817eb89849ee901d1a057aca66d", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=0c172706f4c49a3015ecd248b90ddbbb62dbedec", "patch": "@@ -532,13 +532,6 @@ streamer_read_tree_bitfields (struct lto_input_block *ib,\n   if (CODE_CONTAINS_STRUCT (code, TS_OPTIMIZATION))\n     cl_optimization_stream_in (&bp, TREE_OPTIMIZATION (expr));\n \n-  if (CODE_CONTAINS_STRUCT (code, TS_BINFO))\n-    {\n-      unsigned HOST_WIDE_INT length = bp_unpack_var_len_unsigned (&bp);\n-      if (length > 0)\n-\tvec_safe_grow (BINFO_BASE_ACCESSES (expr), length);\n-    }\n-\n   if (CODE_CONTAINS_STRUCT (code, TS_CONSTRUCTOR))\n     {\n       unsigned HOST_WIDE_INT length = bp_unpack_var_len_unsigned (&bp);\n@@ -964,7 +957,6 @@ static void\n lto_input_ts_binfo_tree_pointers (struct lto_input_block *ib,\n \t\t\t\t  struct data_in *data_in, tree expr)\n {\n-  unsigned i;\n   tree t;\n \n   /* Note that the number of slots in EXPR was read in\n@@ -982,17 +974,10 @@ lto_input_ts_binfo_tree_pointers (struct lto_input_block *ib,\n \n   BINFO_OFFSET (expr) = stream_read_tree (ib, data_in);\n   BINFO_VTABLE (expr) = stream_read_tree (ib, data_in);\n-  BINFO_VPTR_FIELD (expr) = stream_read_tree (ib, data_in);\n \n-  /* The vector of BINFO_BASE_ACCESSES is pre-allocated during\n-     unpacking the bitfield section.  */\n-  for (i = 0; i < vec_safe_length (BINFO_BASE_ACCESSES (expr)); i++)\n-    {\n-      tree a = stream_read_tree (ib, data_in);\n-      (*BINFO_BASE_ACCESSES (expr))[i] = a;\n-    }\n-  /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX\n-     and BINFO_VPTR_INDEX; these are used by C++ FE only.  */\n+  /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX,\n+     BINFO_BASE_ACCESSES and BINFO_VPTR_INDEX; these are used by C++ FE\n+     only.  */\n }\n \n "}, {"sha": "59db3b906af42918ba7c77603a7320ce117a7d87", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=0c172706f4c49a3015ecd248b90ddbbb62dbedec", "patch": "@@ -468,9 +468,6 @@ streamer_write_tree_bitfields (struct output_block *ob, tree expr)\n   if (CODE_CONTAINS_STRUCT (code, TS_OPTIMIZATION))\n     cl_optimization_stream_out (&bp, TREE_OPTIMIZATION (expr));\n \n-  if (CODE_CONTAINS_STRUCT (code, TS_BINFO))\n-    bp_pack_var_len_unsigned (&bp, vec_safe_length (BINFO_BASE_ACCESSES (expr)));\n-\n   if (CODE_CONTAINS_STRUCT (code, TS_CONSTRUCTOR))\n     bp_pack_var_len_unsigned (&bp, CONSTRUCTOR_NELTS (expr));\n \n@@ -812,15 +809,9 @@ write_ts_binfo_tree_pointers (struct output_block *ob, tree expr, bool ref_p)\n \n   stream_write_tree (ob, BINFO_OFFSET (expr), ref_p);\n   stream_write_tree (ob, BINFO_VTABLE (expr), ref_p);\n-  stream_write_tree (ob, BINFO_VPTR_FIELD (expr), ref_p);\n-\n-  /* The number of BINFO_BASE_ACCESSES has already been emitted in\n-     EXPR's bitfield section.  */\n-  FOR_EACH_VEC_SAFE_ELT (BINFO_BASE_ACCESSES (expr), i, t)\n-    stream_write_tree (ob, t, ref_p);\n \n-  /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX\n-     and BINFO_VPTR_INDEX; these are used by C++ FE only.  */\n+  /* Do not walk BINFO_INHERITANCE_CHAIN, BINFO_SUBVTT_INDEX,\n+     BINFO_BASE_ACCESSES and BINFO_VPTR_INDEX; these are used by C++ FE only.  */\n }\n \n "}, {"sha": "8fc206d0abb2228a8b41c61e49485bc3f1116eef", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c172706f4c49a3015ecd248b90ddbbb62dbedec/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0c172706f4c49a3015ecd248b90ddbbb62dbedec", "patch": "@@ -5073,6 +5073,7 @@ free_lang_data_in_binfo (tree binfo)\n   BINFO_BASE_ACCESSES (binfo) = NULL;\n   BINFO_INHERITANCE_CHAIN (binfo) = NULL_TREE;\n   BINFO_SUBVTT_INDEX (binfo) = NULL_TREE;\n+  BINFO_VPTR_FIELD (binfo) = NULL_TREE;\n \n   FOR_EACH_VEC_ELT (*BINFO_BASE_BINFOS (binfo), i, t)\n     free_lang_data_in_binfo (t);"}]}