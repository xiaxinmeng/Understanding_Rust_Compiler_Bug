{"sha": "a88d48a43c52ed60c5fbca03e652d79e2b1eb994", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg4ZDQ4YTQzYzUyZWQ2MGM1ZmJjYTAzZTY1MmQ3OWUyYjFlYjk5NA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-15T00:58:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-15T00:58:32Z"}, "message": "(ASM_OUTPUT_DOUBLE_INT): Use 'X' if CONST_INT and\nHOST_BITS_PER_WIDE_INT == 64.\n\nFrom-SVN: r11539", "tree": {"sha": "f040ccb18fa476e98b0ecbf93aadf0378ce73dd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f040ccb18fa476e98b0ecbf93aadf0378ce73dd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a88d48a43c52ed60c5fbca03e652d79e2b1eb994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88d48a43c52ed60c5fbca03e652d79e2b1eb994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a88d48a43c52ed60c5fbca03e652d79e2b1eb994", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88d48a43c52ed60c5fbca03e652d79e2b1eb994/comments", "author": null, "committer": null, "parents": [{"sha": "b4c6e06c29aa16e552ed379401574e4c43f9b401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c6e06c29aa16e552ed379401574e4c43f9b401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4c6e06c29aa16e552ed379401574e4c43f9b401"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "21693bab533032cefa370cac334bc0cd979509f8", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88d48a43c52ed60c5fbca03e652d79e2b1eb994/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88d48a43c52ed60c5fbca03e652d79e2b1eb994/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=a88d48a43c52ed60c5fbca03e652d79e2b1eb994", "patch": "@@ -3538,7 +3538,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_64BIT)\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       fprintf (STREAM, \"\\t.dword\\t\");\t\t\t\t\t\\\n-      output_addr_const (STREAM, (VALUE));\t\t\t\t\\\n+      if (HOST_BITS_PER_WIDE_INT < 64 || GET_CODE (VALUE) != CONST_INT)\t\\\n+\t/* We can't use 'X' for negative numbers, because then we won't\t\\\n+\t   get the right value for the upper 32 bits.  */\t\t\\\n+        output_addr_const (STREAM, VALUE);\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\t/* We must use 'X', because otherwise LONG_MIN will print as\t\\\n+\t   a number that the Irix 6 assembler won't accept.  */\t\t\\\n+        print_operand (STREAM, VALUE, 'X');\t\t\t\t\\\n       fprintf (STREAM, \"\\n\");\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\"}]}