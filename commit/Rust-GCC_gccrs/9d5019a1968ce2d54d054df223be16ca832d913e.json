{"sha": "9d5019a1968ce2d54d054df223be16ca832d913e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ1MDE5YTE5NjhjZTJkNTRkMDU0ZGYyMjNiZTE2Y2E4MzJkOTEzZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2017-02-08T02:54:17Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2017-02-08T02:54:17Z"}, "message": "aarch64.md (popcount<mode>2): New pattern.\n\n2016-02-07  Andrew Pinski  <apinski@cavium.com>\n\ngcc\n\t* config/aarch64/aarch64.md (popcount<mode>2): New pattern.\n\ngcc/testsuite\n\t* gcc.target/aarch64/popcount.c : New Testcase.\n\nFrom-SVN: r245267", "tree": {"sha": "e7d29bf8f776ca98aaa1aba4c0e7275969cbad18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d29bf8f776ca98aaa1aba4c0e7275969cbad18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d5019a1968ce2d54d054df223be16ca832d913e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5019a1968ce2d54d054df223be16ca832d913e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5019a1968ce2d54d054df223be16ca832d913e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5019a1968ce2d54d054df223be16ca832d913e/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71aba51d6460ff59b33ee3e0af4d6da34047c81d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71aba51d6460ff59b33ee3e0af4d6da34047c81d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71aba51d6460ff59b33ee3e0af4d6da34047c81d"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "527143ac944834cb65f9941b249a9c9054d02338", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d5019a1968ce2d54d054df223be16ca832d913e", "patch": "@@ -1,3 +1,7 @@\n+2017-02-07  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64.md (popcount<mode>2): New pattern.\n+\n 2017-02-07  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64-cores.def (thunderx): Disable LSE."}, {"sha": "5adc5edb8dde9c30450b04932a37c41f84cc5ed1", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=9d5019a1968ce2d54d054df223be16ca832d913e", "patch": "@@ -3779,6 +3779,39 @@\n   }\n )\n \n+;; Pop count be done via the \"CNT\" instruction in AdvSIMD.\n+;;\n+;; MOV\tv.1d, x0\n+;; CNT\tv1.8b, v.8b\n+;; ADDV b2, v1.8b\n+;; MOV\tw0, v2.b[0]\n+\n+(define_expand \"popcount<mode>2\"\n+  [(match_operand:GPI 0 \"register_operand\")\n+   (match_operand:GPI 1 \"register_operand\")]\n+  \"TARGET_SIMD\"\n+{\n+  rtx v = gen_reg_rtx (V8QImode);\n+  rtx v1 = gen_reg_rtx (V8QImode);\n+  rtx r = gen_reg_rtx (QImode);\n+  rtx in = operands[1];\n+  rtx out = operands[0];\n+  if(<MODE>mode == SImode)\n+    {\n+      rtx tmp;\n+      tmp = gen_reg_rtx (DImode);\n+      /* If we have SImode, zero extend to DImode, pop count does\n+         not change if we have extra zeros. */\n+      emit_insn (gen_zero_extendsidi2 (tmp, in));\n+      in = tmp;\n+    }\n+  emit_move_insn (v, gen_lowpart (V8QImode, in));\n+  emit_insn (gen_popcountv8qi2 (v1, v));\n+  emit_insn (gen_reduc_plus_scal_v8qi (r, v1));\n+  emit_insn (gen_zero_extendqi<mode>2 (out, r));\n+  DONE;\n+})\n+\n (define_insn \"clrsb<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n         (clrsb:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]"}, {"sha": "81b25807dd0bfa53638eaa42ae299a4d4f102ee1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d5019a1968ce2d54d054df223be16ca832d913e", "patch": "@@ -1,3 +1,7 @@\n+2017-02-07  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.target/aarch64/popcount.c : New Testcase.\n+\n 2017-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/79386"}, {"sha": "7e957966d8e81b8633a444bb42944d0da82ae5db", "filename": "gcc/testsuite/gcc.target/aarch64/popcnt.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpopcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5019a1968ce2d54d054df223be16ca832d913e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpopcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpopcnt.c?ref=9d5019a1968ce2d54d054df223be16ca832d913e", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+foo (int x)\n+{\n+  return __builtin_popcount (x);\n+}\n+\n+long\n+foo1 (long x)\n+{\n+  return __builtin_popcountl (x);\n+}\n+\n+long long\n+foo2 (long long x)\n+{\n+  return __builtin_popcountll (x);\n+}\n+\n+/* { dg-final { scan-assembler-not \"popcount\" } } */\n+/* { dg-final { scan-assembler-times \"cnt\\t\" 3 } } */"}]}