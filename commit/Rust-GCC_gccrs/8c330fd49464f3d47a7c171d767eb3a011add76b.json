{"sha": "8c330fd49464f3d47a7c171d767eb3a011add76b", "node_id": "C_kwDOANBUbNoAKDhjMzMwZmQ0OTQ2NGYzZDQ3YTdjMTcxZDc2N2ViM2EwMTFhZGQ3NmI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-05T14:04:32Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-06T13:24:57Z"}, "message": "libstdc++: Disable broken std::format for floating-point types [PR108221]\n\nIf we don't have std::to_chars for floating-point types (either because\nfloat and double are not IEEE format, or size_t is 16-bit) then we can't\nuse them with std::format. This causes a bootstrap failure since\nstd/c++20/tzdb.cc was added to the library, because <chrono> now\nincludes <format>.\n\nThis change just disables formatting support for those types. This is\nnot a proper fix, but solves the bootstrap failure for now.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/108221\n\t* include/std/format (basic_format_arg) [!__cpp_lib_to_chars]:\n\tDisable visiting floating-point types.", "tree": {"sha": "691341be2b4b0af0f129e9ee5902576f1bebad00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691341be2b4b0af0f129e9ee5902576f1bebad00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c330fd49464f3d47a7c171d767eb3a011add76b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c330fd49464f3d47a7c171d767eb3a011add76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c330fd49464f3d47a7c171d767eb3a011add76b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c330fd49464f3d47a7c171d767eb3a011add76b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a40c22c377c7cc657b0feaf0119d84d0d142a318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40c22c377c7cc657b0feaf0119d84d0d142a318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40c22c377c7cc657b0feaf0119d84d0d142a318"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "77f7c9fef3f149d29e7b72cebf24e1d53695db02", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c330fd49464f3d47a7c171d767eb3a011add76b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c330fd49464f3d47a7c171d767eb3a011add76b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=8c330fd49464f3d47a7c171d767eb3a011add76b", "patch": "@@ -3034,6 +3034,7 @@ namespace __format\n \t      return std::forward<_Visitor>(__vis)(_M_val._M_ll);\n \t    case _Arg_ull:\n \t      return std::forward<_Visitor>(__vis)(_M_val._M_ull);\n+#if __cpp_lib_to_chars // FIXME: need to be able to format these types!\n \t    case _Arg_flt:\n \t      return std::forward<_Visitor>(__vis)(_M_val._M_flt);\n \t    case _Arg_dbl:\n@@ -3046,6 +3047,7 @@ namespace __format\n \t      return std::forward<_Visitor>(__vis)(_M_val._M_f128);\n \t    case _Arg_ibm128:\n \t      return std::forward<_Visitor>(__vis)(_M_val._M_ibm128);\n+#endif\n #endif\n \t    case _Arg_str:\n \t      return std::forward<_Visitor>(__vis)(_M_val._M_str);"}]}