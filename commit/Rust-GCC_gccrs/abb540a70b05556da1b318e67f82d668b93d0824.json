{"sha": "abb540a70b05556da1b318e67f82d668b93d0824", "node_id": "C_kwDOANBUbNoAKGFiYjU0MGE3MGIwNTU1NmRhMWIzMThlNjdmODJkNjY4YjkzZDA4MjQ", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-10-12T09:56:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-20T10:17:03Z"}, "message": "[Ada] Rewrite tests on Convention_Intrinsic\n\ngcc/ada/\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Subprogram_Type>:\n\tReplace test on Convention_Intrinsic with Is_Intrinsic_Subprogram.\n\t(gnat_to_gnu_param): Likewise.\n\t(gnat_to_gnu_subprog_type): Likewise.\n\t* gcc-interface/trans.c (elaborate_all_entities_for_package): Ditto.", "tree": {"sha": "4413af279f794d9844ede44bab0cfb01ab04e5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4413af279f794d9844ede44bab0cfb01ab04e5bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abb540a70b05556da1b318e67f82d668b93d0824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb540a70b05556da1b318e67f82d668b93d0824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb540a70b05556da1b318e67f82d668b93d0824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb540a70b05556da1b318e67f82d668b93d0824/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b39bab947436640c20624ec58b61830c8ab2d71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b39bab947436640c20624ec58b61830c8ab2d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b39bab947436640c20624ec58b61830c8ab2d71"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "ff512d1f05a64e5c322734f18f20ff5dec0c2275", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb540a70b05556da1b318e67f82d668b93d0824/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb540a70b05556da1b318e67f82d668b93d0824/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=abb540a70b05556da1b318e67f82d668b93d0824", "patch": "@@ -3946,7 +3946,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \tbool extern_flag\n \t  = ((Is_Public (gnat_entity) && !definition)\n \t     || imported_p\n-\t     || (Convention (gnat_entity) == Convention_Intrinsic\n+\t     || (Is_Intrinsic_Subprogram (gnat_entity)\n \t\t && Has_Pragma_Inline_Always (gnat_entity)));\n \ttree gnu_param_list;\n \n@@ -5366,7 +5366,7 @@ gnat_to_gnu_param (Entity_Id gnat_param, tree gnu_param_type, bool first,\n   /* Builtins are expanded inline and there is no real call sequence involved.\n      So the type expected by the underlying expander is always the type of the\n      argument \"as is\".  */\n-  if (Convention (gnat_subprog) == Convention_Intrinsic\n+  if (Is_Intrinsic_Subprogram (gnat_subprog)\n       && Present (Interface_Name (gnat_subprog)))\n     mech = By_Copy;\n \n@@ -5823,9 +5823,10 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n \n   else\n     {\n-      /* For foreign convention subprograms, return System.Address as void *\n-\t or equivalent.  Note that this comprises GCC builtins.  */\n-      if (Has_Foreign_Convention (gnat_subprog)\n+      /* For foreign convention/intrinsic subprograms, return System.Address\n+\t as void * or equivalent; this comprises GCC builtins.  */\n+      if ((Has_Foreign_Convention (gnat_subprog)\n+\t   || Is_Intrinsic_Subprogram (gnat_subprog))\n \t  && Is_Descendant_Of_Address (Underlying_Type (gnat_return_type)))\n \tgnu_return_type = ptr_type_node;\n       else\n@@ -5995,9 +5996,10 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n \t{\n \t  Entity_Id gnat_param_type = Etype (gnat_param);\n \n-\t  /* For foreign convention subprograms, pass System.Address as void *\n-\t     or equivalent.  Note that this comprises GCC builtins.  */\n-\t  if (Has_Foreign_Convention (gnat_subprog)\n+\t  /* For foreign convention/intrinsic subprograms, pass System.Address\n+\t     as void * or equivalent; this comprises GCC builtins.  */\n+\t  if ((Has_Foreign_Convention (gnat_subprog)\n+\t       || Is_Intrinsic_Subprogram (gnat_subprog))\n \t      && Is_Descendant_Of_Address (Underlying_Type (gnat_param_type)))\n \t    gnu_param_type = ptr_type_node;\n \t  else\n@@ -6303,7 +6305,7 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n \n       /* If this subprogram is expectedly bound to a GCC builtin, fetch the\n \t corresponding DECL node and check the parameter association.  */\n-      if (Convention (gnat_subprog) == Convention_Intrinsic\n+      if (Is_Intrinsic_Subprogram (gnat_subprog)\n \t  && Present (Interface_Name (gnat_subprog)))\n \t{\n \t  tree gnu_ext_name = create_concat_name (gnat_subprog, NULL);"}, {"sha": "dc2a03c67a212a25a2311a9f09f7af80c61b2a28", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb540a70b05556da1b318e67f82d668b93d0824/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb540a70b05556da1b318e67f82d668b93d0824/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=abb540a70b05556da1b318e67f82d668b93d0824", "patch": "@@ -9079,7 +9079,7 @@ elaborate_all_entities_for_package (Entity_Id gnat_package)\n \tcontinue;\n \n       /* Skip stuff internal to the compiler.  */\n-      if (Convention (gnat_entity) == Convention_Intrinsic)\n+      if (Is_Intrinsic_Subprogram (gnat_entity))\n \tcontinue;\n       if (kind == E_Operator)\n \tcontinue;"}]}