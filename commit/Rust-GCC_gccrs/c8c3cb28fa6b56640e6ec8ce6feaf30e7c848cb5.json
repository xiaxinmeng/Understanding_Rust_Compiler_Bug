{"sha": "c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhjM2NiMjhmYTZiNTY2NDBlNmVjOGNlNmZlYWYzMGU3Yzg0OGNiNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2006-01-02T22:47:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-01-02T22:47:50Z"}, "message": "cfglayout.c (fixup_reorder_chain): Remove kludge for the case of conditional jump jumping to the next instruction.\n\n\t* cfglayout.c (fixup_reorder_chain): Remove kludge for the\n\tcase of conditional jump jumping to the next instruction.\n\t* cfgrtl.c (force_nonfallthru_and_redirect): Accept all\n\tcases of conditional jump jumping to the next instruction.\n\n\nCo-Authored-By: Jan Hubicka <jh@suse.cz>\n\nFrom-SVN: r109247", "tree": {"sha": "9ae9d94e53504579c5780cb80ef18bf1729a5658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae9d94e53504579c5780cb80ef18bf1729a5658"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/comments", "author": null, "committer": null, "parents": [{"sha": "99f1e970919e08ce15113e28618ec93ddc0cddc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f1e970919e08ce15113e28618ec93ddc0cddc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f1e970919e08ce15113e28618ec93ddc0cddc4"}], "stats": {"total": 51, "additions": 14, "deletions": 37}, "files": [{"sha": "0423185b220728f04f7881c37da55ee4464238de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "patch": "@@ -1,3 +1,11 @@\n+2006-01-02  Eric Botcazou  <ebotcazou@adacore.com>\n+            Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfglayout.c (fixup_reorder_chain): Remove kludge for the\n+\tcase of conditional jump jumping to the next instruction.\n+\t* cfgrtl.c (force_nonfallthru_and_redirect): Accept all\n+\tcases of conditional jump jumping to the next instruction.\n+\n 2006-01-02  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (*_cost): Add COSTS_N_INSNS."}, {"sha": "5880819a9182326d2fa8fe35af5aa7f93f6db42e", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 6, "deletions": 34, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "patch": "@@ -680,41 +680,13 @@ fixup_reorder_chain (void)\n \t\tcontinue;\n \n \t      /* The degenerated case of conditional jump jumping to the next\n-\t\t instruction can happen on target having jumps with side\n-\t\t effects.\n-\n-\t\t Create temporarily the duplicated edge representing branch.\n-\t\t It will get unidentified by force_nonfallthru_and_redirect\n-\t\t that would otherwise get confused by fallthru edge not pointing\n-\t\t to the next basic block.  */\n+\t\t instruction can happen for jumps with side effects.  We need\n+\t\t to construct a forwarder block and this will be done just\n+\t\t fine by force_nonfallthru below.  */\n \t      if (!e_taken)\n-\t\t{\n-\t\t  rtx note;\n-\t\t  edge e_fake;\n-\t\t  bool redirected;\n-\n-\t\t  e_fake = unchecked_make_edge (bb, e_fall->dest, 0);\n-\n-\t\t  redirected = redirect_jump (BB_END (bb),\n-\t\t\t\t\t      block_label (bb), 0);\n-\t\t  gcc_assert (redirected);\n-\t\t  \n-\t\t  note = find_reg_note (BB_END (bb), REG_BR_PROB, NULL_RTX);\n-\t\t  if (note)\n-\t\t    {\n-\t\t      int prob = INTVAL (XEXP (note, 0));\n-\n-\t\t      e_fake->probability = prob;\n-\t\t      e_fake->count = e_fall->count * prob / REG_BR_PROB_BASE;\n-\t\t      e_fall->probability -= e_fall->probability;\n-\t\t      e_fall->count -= e_fake->count;\n-\t\t      if (e_fall->probability < 0)\n-\t\t\te_fall->probability = 0;\n-\t\t      if (e_fall->count < 0)\n-\t\t\te_fall->count = 0;\n-\t\t    }\n-\t\t}\n-\t      /* There is one special case: if *neither* block is next,\n+\t\t;\n+\n+\t      /* There is another special case: if *neither* block is next,\n \t\t such as happens at the very end of a function, then we'll\n \t\t need to add a new unconditional jump.  Choose the taken\n \t\t edge based on known or assumed probability.  */"}, {"sha": "6ff6c3911931b5a10e9b024c4375f56dd1d447e9", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=c8c3cb28fa6b56640e6ec8ce6feaf30e7c848cb5", "patch": "@@ -1014,9 +1014,6 @@ force_nonfallthru_and_redirect (edge e, basic_block target)\n      by creating a basic block afterwards to redirect fallthru edge.  */\n   if (e->src != ENTRY_BLOCK_PTR && e->dest != EXIT_BLOCK_PTR\n       && any_condjump_p (BB_END (e->src))\n-      /* When called from cfglayout, fallthru edges do not\n-         necessarily go to the next block.  */\n-      && e->src->next_bb == e->dest\n       && JUMP_LABEL (BB_END (e->src)) == BB_HEAD (e->dest))\n     {\n       rtx note;"}]}