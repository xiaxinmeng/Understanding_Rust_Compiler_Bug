{"sha": "fdccb6df822abcb20bc2274de91d03fd97fa18ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjY2I2ZGY4MjJhYmNiMjBiYzIyNzRkZTkxZDAzZmQ5N2ZhMThhZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-13T18:50:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-13T18:50:39Z"}, "message": "(find_and_verify_loops): Set dest_loop only if JUMP_LABEL (insn) is\nnon-zero.\n\nFrom-SVN: r10210", "tree": {"sha": "dab73222a58bf3a5f665ef8fa232ee6c13322657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dab73222a58bf3a5f665ef8fa232ee6c13322657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdccb6df822abcb20bc2274de91d03fd97fa18ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdccb6df822abcb20bc2274de91d03fd97fa18ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdccb6df822abcb20bc2274de91d03fd97fa18ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdccb6df822abcb20bc2274de91d03fd97fa18ae/comments", "author": null, "committer": null, "parents": [{"sha": "d6b3cb10716b596b8133d286dbf583818c25ee9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b3cb10716b596b8133d286dbf583818c25ee9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b3cb10716b596b8133d286dbf583818c25ee9f"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "f48a42a0930270cda29f5b3734254f9a90c24d1c", "filename": "gcc/loop.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdccb6df822abcb20bc2274de91d03fd97fa18ae/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdccb6df822abcb20bc2274de91d03fd97fa18ae/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=fdccb6df822abcb20bc2274de91d03fd97fa18ae", "patch": "@@ -2338,8 +2338,8 @@ find_and_verify_loops (f)\n \t  {\n \t    rtx p;\n \t    rtx our_next = next_real_insn (insn);\n-\t    int dest_loop = uid_loop_num[INSN_UID (JUMP_LABEL (insn))];\n-\t    int outer_loop;\n+\t    int dest_loop;\n+\t    int outer_loop = -1;\n \n \t    /* Go backwards until we reach the start of the loop, a label,\n \t       or a JUMP_INSN.  */\n@@ -2354,15 +2354,17 @@ find_and_verify_loops (f)\n \t    /* Check for the case where we have a jump to an inner nested\n \t       loop, and do not perform the optimization in that case.  */\n \n-\t    if (dest_loop != -1)\n+\t    if (JUMP_LABEL (insn))\n \t      {\n-\t\tfor (outer_loop = dest_loop; outer_loop != -1;\n-\t\t     outer_loop = loop_outer_loop[outer_loop])\n-\t\t  if (outer_loop == this_loop_num)\n-\t\t    break;\n+\t\tdest_loop = uid_loop_num[INSN_UID (JUMP_LABEL (insn))];\n+\t\tif (dest_loop != -1)\n+\t\t  {\n+\t\t    for (outer_loop = dest_loop; outer_loop != -1;\n+\t\t\t outer_loop = loop_outer_loop[outer_loop])\n+\t\t      if (outer_loop == this_loop_num)\n+\t\t\tbreak;\n+\t\t  }\n \t      }\n-\t    else\n-\t      outer_loop = -1;\n \n \t    /* If we stopped on a JUMP_INSN to the next insn after INSN,\n \t       we have a block of code to try to move."}]}