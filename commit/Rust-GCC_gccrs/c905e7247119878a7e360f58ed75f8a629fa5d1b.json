{"sha": "c905e7247119878a7e360f58ed75f8a629fa5d1b", "node_id": "C_kwDOANBUbNoAKGM5MDVlNzI0NzExOTg3OGE3ZTM2MGY1OGVkNzVmOGE2MjlmYTVkMWI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-10T10:07:15Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-10T12:43:24Z"}, "message": "lto-wrapper: fix memory corruption.\n\nThe first argument of merge_and_complain is actually vector where\nwe merge options and it should be propagated to caller properly.\n\nFixes:\n\n==6656== Invalid read of size 8\n==6656==    at 0x408056: merge_and_complain (lto-wrapper.c:335)\n==6656==    by 0x408056: find_and_merge_options(int, long, char const*, vec<cl_decoded_option, va_heap, vl_ptr>, vec<cl_decoded_option, va_heap, vl_ptr>*, char const*) (lto-wrapper.c:1139)\n==6656==    by 0x408AFC: run_gcc(unsigned int, char**) (lto-wrapper.c:1505)\n==6656==    by 0x4061A2: main (lto-wrapper.c:2138)\n==6656==  Address 0x4e69b18 is 344 bytes inside a block of size 1,768 free'd\n==6656==    at 0x484339F: realloc (vg_replace_malloc.c:1192)\n==6656==    by 0x4993C0: xrealloc (xmalloc.c:181)\n==6656==    by 0x406A82: reserve<cl_decoded_option> (vec.h:290)\n==6656==    by 0x406A82: reserve (vec.h:1858)\n==6656==    by 0x406A82: vec<cl_decoded_option, va_heap, vl_ptr>::safe_push(cl_decoded_option const&) [clone .isra.0] (vec.h:1967)\n==6656==    by 0x4077E0: merge_and_complain (lto-wrapper.c:457)\n==6656==    by 0x4077E0: find_and_merge_options(int, long, char const*, vec<cl_decoded_option, va_heap, vl_ptr>, vec<cl_decoded_option, va_heap, vl_ptr>*, char const*) (lto-wrapper.c:1139)\n==6656==    by 0x408AFC: run_gcc(unsigned int, char**) (lto-wrapper.c:1505)\n==6656==    by 0x4061A2: main (lto-wrapper.c:2138)\n==6656==  Block was alloc'd at\n==6656==    at 0x483E70F: malloc (vg_replace_malloc.c:380)\n==6656==    by 0x4993D7: xrealloc (xmalloc.c:179)\n==6656==    by 0x407476: reserve<cl_decoded_option> (vec.h:290)\n==6656==    by 0x407476: reserve (vec.h:1858)\n==6656==    by 0x407476: reserve_exact (vec.h:1878)\n==6656==    by 0x407476: create (vec.h:1893)\n==6656==    by 0x407476: get_options_from_collect_gcc_options(char const*, char const*) (lto-wrapper.c:163)\n==6656==    by 0x407674: find_and_merge_options(int, long, char const*, vec<cl_decoded_option, va_heap, vl_ptr>, vec<cl_decoded_option, va_heap, vl_ptr>*, char const*) (lto-wrapper.c:1132)\n==6656==    by 0x408AFC: run_gcc(unsigned int, char**) (lto-wrapper.c:1505)\n==6656==    by 0x4061A2: main (lto-wrapper.c:2138)\n\ngcc/ChangeLog:\n\n\t* lto-wrapper.c (merge_and_complain): Make the first argument\n\ta reference type.", "tree": {"sha": "8c2caefc534090b972a70c64e55101788e017350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c2caefc534090b972a70c64e55101788e017350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c905e7247119878a7e360f58ed75f8a629fa5d1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c905e7247119878a7e360f58ed75f8a629fa5d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c905e7247119878a7e360f58ed75f8a629fa5d1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c905e7247119878a7e360f58ed75f8a629fa5d1b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d331688fcb69e9aae84bb94cb7cc54641a90ab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d331688fcb69e9aae84bb94cb7cc54641a90ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d331688fcb69e9aae84bb94cb7cc54641a90ab6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "54f642d76924d1ad8676e7e650fe3c8cc8a75527", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c905e7247119878a7e360f58ed75f8a629fa5d1b/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c905e7247119878a7e360f58ed75f8a629fa5d1b/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=c905e7247119878a7e360f58ed75f8a629fa5d1b", "patch": "@@ -224,7 +224,7 @@ merge_flto_options (vec<cl_decoded_option> &decoded_options,\n    ontop of DECODED_OPTIONS.  */\n \n static void\n-merge_and_complain (vec<cl_decoded_option> decoded_options,\n+merge_and_complain (vec<cl_decoded_option> &decoded_options,\n \t\t    vec<cl_decoded_option> fdecoded_options,\n \t\t    vec<cl_decoded_option> decoded_cl_options)\n {"}]}