{"sha": "fc999c5d2e9f0f594fe82739494fb36b0b428384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM5OTljNWQyZTlmMGY1OTRmZTgyNzM5NDk0ZmIzNmIwYjQyODM4NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-18T09:14:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:14:14Z"}, "message": "par_sco.adb, [...]: Minor reformatting.\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* par_sco.adb, a-reatim.ads, exp_attr.adb, sem_util.adb: Minor\n\treformatting.\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Has_Out_Or_In_Out_Parameter): New flag and\n\tfunction.\n\t(Set_Has_Out_Or_In_Out_Parameter): New procedure.\n\t* sem_ch6.adb (Set_Formal_Mode): Set Has_Out_Or_In_Out_Parameter flag.\n\t* sem_res.adb (Resolve_Call): Error if call of Ada 2012 function\n\twith OUT or IN OUT from earlier Ada mode (e.g. Ada 2005)\n\nFrom-SVN: r212780", "tree": {"sha": "cf519b8d632a0ac0dfb99c88827df7604ad03241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf519b8d632a0ac0dfb99c88827df7604ad03241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc999c5d2e9f0f594fe82739494fb36b0b428384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc999c5d2e9f0f594fe82739494fb36b0b428384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc999c5d2e9f0f594fe82739494fb36b0b428384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc999c5d2e9f0f594fe82739494fb36b0b428384/comments", "author": null, "committer": null, "parents": [{"sha": "b3b26ace90c59e56d59edeffd8ea7f73b07097af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b26ace90c59e56d59edeffd8ea7f73b07097af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b26ace90c59e56d59edeffd8ea7f73b07097af"}], "stats": {"total": 134, "additions": 99, "deletions": 35}, "files": [{"sha": "51c2bf8eea3f4fb80797976a71625e0ef6f981a6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -1,3 +1,17 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par_sco.adb, a-reatim.ads, exp_attr.adb, sem_util.adb: Minor\n+\treformatting.\n+\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Has_Out_Or_In_Out_Parameter): New flag and\n+\tfunction.\n+\t(Set_Has_Out_Or_In_Out_Parameter): New procedure.\n+\t* sem_ch6.adb (Set_Formal_Mode): Set Has_Out_Or_In_Out_Parameter flag.\n+\t* sem_res.adb (Resolve_Call): Error if call of Ada 2012 function\n+\twith OUT or IN OUT from earlier Ada mode (e.g. Ada 2005)\n+\n 2014-07-18  Robert Dewar  <dewar@adacore.com>\n \n \t* bcheck.adb (Check_Consistent_Restrictions):"}, {"sha": "084c1ef0593d8c08d66e409d0bc2818b56af3d36", "filename": "gcc/ada/a-reatim.ads", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fa-reatim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fa-reatim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.ads?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -90,10 +90,9 @@ package Ada.Real_Time is\n    function Minutes (M : Integer) return Time_Span;\n    pragma Ada_05 (Minutes);\n \n-   --  Seconds_Count needs 64 bits, since Time has the full range of\n-   --  Duration. The delta of Duration is 10 ** (-9), so the maximum\n-   --  number of seconds is 2**63/10**9 = 8*10**9 which does not quite\n-   --  fit in 32 bits.\n+   --  Seconds_Count needs 64 bits, since Time has the full range of Duration.\n+   --  The delta of Duration is 10 ** (-9), so the maximum number of seconds is\n+   --  2**63/10**9 = 8*10**9 which does not quite fit in 32 bits.\n \n    type Seconds_Count is range -2 ** 63 .. 2 ** 63 - 1;\n \n@@ -121,8 +120,8 @@ private\n             Time_Span (System.Task_Primitives.Operations.RT_Resolution);\n \n    --  Time and Time_Span are represented in 64-bit Duration value in\n-   --  in nanoseconds. For example, 1 second and 1 nanosecond is\n-   --  represented as the stored integer 1_000_000_001.\n+   --  nanoseconds. For example, 1 second and 1 nanosecond is represented\n+   --  as the stored integer 1_000_000_001.\n \n    pragma Import (Intrinsic, \"<\");\n    pragma Import (Intrinsic, \"<=\");"}, {"sha": "9fc6760ba259d8c1f704a70fedb9b1886fcb20f4", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -384,6 +384,7 @@ package body Einfo is\n    --    Is_Private_Composite            Flag107\n    --    Default_Expressions_Processed   Flag108\n    --    Is_Non_Static_Subtype           Flag109\n+   --    Has_Out_Or_In_Out_Parameter     Flag110\n \n    --    Is_Formal_Subprogram            Flag111\n    --    Is_Renaming_Of_Object           Flag112\n@@ -563,8 +564,6 @@ package body Einfo is\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n-   --    (unused)                        Flag110\n-\n    --    (unused)                        Flag269\n    --    (unused)                        Flag270\n \n@@ -1532,6 +1531,12 @@ package body Einfo is\n       return Flag172 (Id);\n    end Has_Object_Size_Clause;\n \n+   function Has_Out_Or_In_Out_Parameter (Id : E) return B is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Function, E_Generic_Function));\n+      return Flag110 (Id);\n+   end Has_Out_Or_In_Out_Parameter;\n+\n    function Has_Per_Object_Constraint (Id : E) return B is\n    begin\n       return Flag154 (Id);\n@@ -4241,6 +4246,12 @@ package body Einfo is\n       Set_Flag172 (Id, V);\n    end Set_Has_Object_Size_Clause;\n \n+   procedure Set_Has_Out_Or_In_Out_Parameter (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Function, E_Generic_Function));\n+      Set_Flag110 (Id, V);\n+   end Set_Has_Out_Or_In_Out_Parameter;\n+\n    procedure Set_Has_Per_Object_Constraint (Id : E; V : B := True) is\n    begin\n       Set_Flag154 (Id, V);\n@@ -8192,6 +8203,7 @@ package body Einfo is\n       W (\"Has_Missing_Return\",              Flag142 (Id));\n       W (\"Has_Nested_Block_With_Handler\",   Flag101 (Id));\n       W (\"Has_Non_Standard_Rep\",            Flag75  (Id));\n+      W (\"Has_Out_Or_In_Out_Parameter\",     Flag110 (Id));\n       W (\"Has_Object_Size_Clause\",          Flag172 (Id));\n       W (\"Has_Per_Object_Constraint\",       Flag154 (Id));\n       W (\"Has_Postconditions\",              Flag240 (Id));"}, {"sha": "011e10ca3246e6021e953636fdbbc471a71483b6", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -1670,6 +1670,10 @@ package Einfo is\n --       clause has been processed for the type Used to prevent multiple\n --       Object_Size clauses for a given entity.\n \n+--    Has_Out_Or_In_Out_Parameter (Flag110)\n+--       Present in function and generic function entities. Set if the function\n+--       has at least one OUT or IN OUT parameter (allowed only in Ada 2012).\n+\n --    Has_Per_Object_Constraint (Flag154)\n --       Defined in E_Component entities. Set if the subtype of the component\n --       has a per object constraint. Per object constraints result from the\n@@ -5577,6 +5581,7 @@ package Einfo is\n    --    Has_Master_Entity                   (Flag21)\n    --    Has_Missing_Return                  (Flag142)\n    --    Has_Nested_Block_With_Handler       (Flag101)\n+   --    Has_Out_Or_In_Out_Parameter         (Flag110)\n    --    Has_Postconditions                  (Flag240)\n    --    Has_Recursive_Call                  (Flag143)\n    --    Is_Abstract_Subprogram              (Flag19)   (non-generic case only)\n@@ -6498,6 +6503,7 @@ package Einfo is\n    function Has_Nested_Block_With_Handler       (Id : E) return B;\n    function Has_Non_Standard_Rep                (Id : E) return B;\n    function Has_Object_Size_Clause              (Id : E) return B;\n+   function Has_Out_Or_In_Out_Parameter         (Id : E) return B;\n    function Has_Per_Object_Constraint           (Id : E) return B;\n    function Has_Postconditions                  (Id : E) return B;\n    function Has_Pragma_Controlled               (Id : E) return B;\n@@ -7122,6 +7128,7 @@ package Einfo is\n    procedure Set_Has_Nested_Block_With_Handler   (Id : E; V : B := True);\n    procedure Set_Has_Non_Standard_Rep            (Id : E; V : B := True);\n    procedure Set_Has_Object_Size_Clause          (Id : E; V : B := True);\n+   procedure Set_Has_Out_Or_In_Out_Parameter     (Id : E; V : B := True);\n    procedure Set_Has_Per_Object_Constraint       (Id : E; V : B := True);\n    procedure Set_Has_Postconditions              (Id : E; V : B := True);\n    procedure Set_Has_Pragma_Controlled           (Id : E; V : B := True);\n@@ -7860,6 +7867,7 @@ package Einfo is\n    pragma Inline (Has_Nested_Block_With_Handler);\n    pragma Inline (Has_Non_Standard_Rep);\n    pragma Inline (Has_Object_Size_Clause);\n+   pragma Inline (Has_Out_Or_In_Out_Parameter);\n    pragma Inline (Has_Per_Object_Constraint);\n    pragma Inline (Has_Postconditions);\n    pragma Inline (Has_Pragma_Controlled);\n@@ -8332,6 +8340,7 @@ package Einfo is\n    pragma Inline (Set_Has_Nested_Block_With_Handler);\n    pragma Inline (Set_Has_Non_Standard_Rep);\n    pragma Inline (Set_Has_Object_Size_Clause);\n+   pragma Inline (Set_Has_Out_Or_In_Out_Parameter);\n    pragma Inline (Set_Has_Per_Object_Constraint);\n    pragma Inline (Set_Has_Postconditions);\n    pragma Inline (Set_Has_Pragma_Controlled);"}, {"sha": "544a9232f35f87a9fd99c337541c2d238a7e36e0", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -800,8 +800,8 @@ package body Exp_Attr is\n          else\n             pragma Assert\n               (Nkind (Parent (Loop_Stmt)) = N_Handled_Sequence_Of_Statements\n-                and then Nkind (Parent (Parent (Loop_Stmt))) =\n-                           N_Block_Statement);\n+                and then\n+                  Nkind (Parent (Parent (Loop_Stmt))) = N_Block_Statement);\n \n             Decls := Declarations (Parent (Parent (Loop_Stmt)));\n          end if;"}, {"sha": "6fe803d9e80ad23107d583e9209e04f213daf1f4", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -102,8 +102,8 @@ package body Par_SCO is\n    function Is_Logical_Operator (N : Node_Id) return Boolean;\n    --  N is the node for a subexpression. This procedure just tests N to see\n    --  if it is a logical operator (including short circuit conditions, but\n-   --  excluding OR and AND) and returns True if so, False otherwise, it does\n-   --  no other processing.\n+   --  excluding OR and AND) and returns True if so. It also returns True for\n+   --  an if expression. False in all other cases, no other processing is done.\n \n    function To_Source_Location (S : Source_Ptr) return Source_Location;\n    --  Converts Source_Ptr value to Source_Location (line/col) format"}, {"sha": "bd9e4ec52ee7149abe2463b079e7f9600ec440ce", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -2040,6 +2040,11 @@ package body Sem_Ch6 is\n       Spec_Id     : Entity_Id;\n \n    begin\n+      --  Due to the timing of contract analysis, delayed pragmas may be\n+      --  subject to the wrong SPARK_Mode, usually that of the enclosing\n+      --  context. To remedy this, restore the original SPARK_Mode of the\n+      --  related subprogram body.\n+\n       Save_SPARK_Mode_And_Set (Body_Id, Mode);\n \n       --  When a subprogram body declaration is illegal, its defining entity is\n@@ -2116,6 +2121,9 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n+      --  Restore the SPARK_Mode of the enclosing context after all delayed\n+      --  pragmas have been analyzed.\n+\n       Restore_SPARK_Mode (Mode);\n    end Analyze_Subprogram_Body_Contract;\n \n@@ -3693,6 +3701,11 @@ package body Sem_Ch6 is\n       Seen_In_Post : Boolean := False;\n \n    begin\n+      --  Due to the timing of contract analysis, delayed pragmas may be\n+      --  subject to the wrong SPARK_Mode, usually that of the enclosing\n+      --  context. To remedy this, restore the original SPARK_Mode of the\n+      --  related subprogram body.\n+\n       Save_SPARK_Mode_And_Set (Subp, Mode);\n \n       if Present (Items) then\n@@ -3817,6 +3830,9 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n+      --  Restore the SPARK_Mode of the enclosing context after all delayed\n+      --  pragmas have been analyzed.\n+\n       Restore_SPARK_Mode (Mode);\n    end Analyze_Subprogram_Contract;\n \n@@ -11832,9 +11848,8 @@ package body Sem_Ch6 is\n       --  point of the call.\n \n       if Out_Present (Spec) then\n-         if Ekind (Scope (Formal_Id)) = E_Function\n-           or else Ekind (Scope (Formal_Id)) = E_Generic_Function\n-         then\n+         if Ekind_In (Scope (Formal_Id), E_Function, E_Generic_Function) then\n+\n             --  [IN] OUT parameters allowed for functions in Ada 2012\n \n             if Ada_Version >= Ada_2012 then\n@@ -11851,6 +11866,8 @@ package body Sem_Ch6 is\n                   Set_Ekind (Formal_Id, E_Out_Parameter);\n                end if;\n \n+               Set_Has_Out_Or_In_Out_Parameter (Scope (Formal_Id), True);\n+\n             --  But not in earlier versions of Ada\n \n             else"}, {"sha": "97a11d19591a30be762f6dd26d5bdefb35edf069", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -5605,9 +5605,8 @@ package body Sem_Res is\n \n                      Index_Node :=\n                        Make_Indexed_Component (Loc,\n-                         Prefix =>\n-                           Make_Function_Call (Loc,\n-                             Name => New_Subp),\n+                         Prefix      =>\n+                           Make_Function_Call (Loc, Name => New_Subp),\n                          Expressions => Parameter_Associations (N));\n                   else\n                      --  An Ada 2005 prefixed call to a primitive operation\n@@ -5618,9 +5617,9 @@ package body Sem_Res is\n \n                      Index_Node :=\n                         Make_Indexed_Component (Loc,\n-                          Prefix =>\n+                          Prefix       =>\n                             Make_Function_Call (Loc,\n-                               Name => New_Subp,\n+                               Name                   => New_Subp,\n                                Parameter_Associations =>\n                                  New_List\n                                    (Remove_Head (Parameter_Associations (N)))),\n@@ -5749,9 +5748,8 @@ package body Sem_Res is\n                         begin\n                            P := Prev (N);\n                            while Present (P) loop\n-                              if not Nkind_In (P,\n-                                N_Assignment_Statement,\n-                                N_Raise_Constraint_Error)\n+                              if not Nkind_In (P, N_Assignment_Statement,\n+                                                  N_Raise_Constraint_Error)\n                               then\n                                  exit Scope_Loop;\n                               end if;\n@@ -6103,6 +6101,18 @@ package body Sem_Res is\n          end;\n       end if;\n \n+      --  Check for calling a function with OUT or IN OUT parameter when the\n+      --  calling context (us right now) is not Ada 2012, so does not allow\n+      --  OUT or IN OUT parameters in function calls.\n+\n+      if Ada_Version < Ada_2012\n+        and then Ekind (Nam) = E_Function\n+        and then Has_Out_Or_In_Out_Parameter (Nam)\n+      then\n+         Error_Msg_NE (\"& has at least one OUT or `IN OUT` parameter\", N, Nam);\n+         Error_Msg_N (\"\\call to this function only allowed in Ada 2012\", N);\n+      end if;\n+\n       --  Check the dimensions of the actuals in the call. For function calls,\n       --  propagate the dimensions from the returned type to N.\n "}, {"sha": "f05d084ce24ea8cf0994c1dfef6ab80b57459fab", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc999c5d2e9f0f594fe82739494fb36b0b428384/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=fc999c5d2e9f0f594fe82739494fb36b0b428384", "patch": "@@ -1205,7 +1205,6 @@ package body Sem_Util is\n             if Denotes_Discriminant (Node (D)) then\n                D_Val :=\n                  New_Occurrence_Of (Discriminal (Entity (Node (D))), Loc);\n-\n             else\n                D_Val := New_Copy_Tree (Node (D));\n             end if;\n@@ -1223,7 +1222,8 @@ package body Sem_Util is\n       if Ekind (T) = E_Array_Subtype then\n          Id := First_Index (T);\n          while Present (Id) loop\n-            if Denotes_Discriminant (Type_Low_Bound  (Etype (Id))) or else\n+            if Denotes_Discriminant (Type_Low_Bound  (Etype (Id)))\n+                 or else\n                Denotes_Discriminant (Type_High_Bound (Etype (Id)))\n             then\n                return Build_Component_Subtype\n@@ -1493,7 +1493,8 @@ package body Sem_Util is\n                  N_Op_Rem\n             =>\n                if Do_Division_Check (Expr)\n-                 or else Do_Overflow_Check (Expr)\n+                    or else\n+                  Do_Overflow_Check (Expr)\n                then\n                   return False;\n                else\n@@ -1636,12 +1637,13 @@ package body Sem_Util is\n            and then not Comes_From_Source (T)\n            and then Nkind (N) = N_Object_Declaration\n          then\n-            Error_Msg_NE (\"type of& has incomplete component\", N,\n-              Defining_Identifier (N));\n-\n+            Error_Msg_NE\n+              (\"type of& has incomplete component\",\n+               N, Defining_Identifier (N));\n          else\n             Error_Msg_NE\n-              (\"premature usage of incomplete}\", N, First_Subtype (T));\n+              (\"premature usage of incomplete}\",\n+               N, First_Subtype (T));\n          end if;\n       end if;\n    end Check_Fully_Declared;\n@@ -1754,6 +1756,7 @@ package body Sem_Util is\n                   end if;\n \n                   Append_Elmt (N, Writable_Actuals_List);\n+\n                else\n                   if Identifiers_List = No_Elist then\n                      Identifiers_List := New_Elmt_List;\n@@ -1809,9 +1812,7 @@ package body Sem_Util is\n             return;\n          end if;\n \n-         if Nkind (N) in N_Subexpr\n-           and then Is_Static_Expression (N)\n-         then\n+         if Nkind (N) in N_Subexpr and then Is_Static_Expression (N) then\n             return;\n          end if;\n \n@@ -1902,6 +1903,7 @@ package body Sem_Util is\n          when N_Op | N_Membership_Test =>\n             declare\n                Expr : Node_Id;\n+\n             begin\n                Collect_Identifiers (Left_Opnd (N));\n \n@@ -2018,7 +2020,8 @@ package body Sem_Util is\n                  and then Present (Aggregate_Bounds (N))\n                  and then Compile_Time_Known_Bounds (Etype (N))\n                  and then Expr_Value (High_Bound (Aggregate_Bounds (N)))\n-                            > Expr_Value (Low_Bound (Aggregate_Bounds (N)))\n+                            >\n+                          Expr_Value (Low_Bound (Aggregate_Bounds (N)))\n                then\n                   declare\n                      Count_Components   : Uint := Uint_0;"}]}