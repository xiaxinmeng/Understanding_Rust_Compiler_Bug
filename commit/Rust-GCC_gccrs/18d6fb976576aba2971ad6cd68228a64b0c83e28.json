{"sha": "18d6fb976576aba2971ad6cd68228a64b0c83e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThkNmZiOTc2NTc2YWJhMjk3MWFkNmNkNjgyMjhhNjRiMGM4M2UyOA==", "commit": {"author": {"name": "Hans Boehm", "email": "Hans_Boehm@hp.com", "date": "2001-05-20T22:36:34Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-05-20T22:36:34Z"}, "message": "configure.host: Build with -fexceptions.\n\n\t* configure.host: Build with -fexceptions.\n\t* linux_threads.c: Remember which thread stopped world for\n\nFrom-SVN: r42362", "tree": {"sha": "bb912f33fd2185851d06bbae554211ac338240ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb912f33fd2185851d06bbae554211ac338240ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18d6fb976576aba2971ad6cd68228a64b0c83e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d6fb976576aba2971ad6cd68228a64b0c83e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18d6fb976576aba2971ad6cd68228a64b0c83e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d6fb976576aba2971ad6cd68228a64b0c83e28/comments", "author": null, "committer": null, "parents": [{"sha": "cb5fa0f8ea731239b4e5927b9b9c668854d9fd68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5fa0f8ea731239b4e5927b9b9c668854d9fd68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb5fa0f8ea731239b4e5927b9b9c668854d9fd68"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "1b28d5ce3a7323a9526908d2fe25b8d4652d1aba", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d6fb976576aba2971ad6cd68228a64b0c83e28/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d6fb976576aba2971ad6cd68228a64b0c83e28/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=18d6fb976576aba2971ad6cd68228a64b0c83e28", "patch": "@@ -1,3 +1,8 @@\n+2001-05-19  Hans Boehm  <hans_boehm@hp.com>\n+\n+\t* configure.host: Build with -fexceptions.\n+\t* linux_threads.c: Remember which thread stopped world for\n+\n 2001-05-04  Loren J. Rittle  <ljrittle@acm.org>\n \t    with final tuning by Bryce McKinlay\n "}, {"sha": "323668dd33a64d9e48a136951895eff11fdbf6fa", "filename": "boehm-gc/configure.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d6fb976576aba2971ad6cd68228a64b0c83e28/boehm-gc%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d6fb976576aba2971ad6cd68228a64b0c83e28/boehm-gc%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.host?ref=18d6fb976576aba2971ad6cd68228a64b0c83e28", "patch": "@@ -17,7 +17,7 @@\n # It sets the following shell variables:\n #   boehm_gc_cflags\tSpecial CFLAGS to use when building\n \n-boehm_gc_cflags=\n+boehm_gc_cflags=-fexceptions\n \n case \"${target_optspace}:${host}\" in\n   yes:*)"}, {"sha": "92da410e3da2a0299dc367f1afe67302a45ff2fb", "filename": "boehm-gc/linux_threads.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d6fb976576aba2971ad6cd68228a64b0c83e28/boehm-gc%2Flinux_threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d6fb976576aba2971ad6cd68228a64b0c83e28/boehm-gc%2Flinux_threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Flinux_threads.c?ref=18d6fb976576aba2971ad6cd68228a64b0c83e28", "patch": "@@ -326,6 +326,11 @@ GC_thread GC_lookup_thread(pthread_t id)\n     return(p);\n }\n \n+/* There seems to be a very rare thread stopping problem.  To help us \t*/\n+/* debug that, we save the ids of the stopping thread. \t\t\t*/\n+pthread_t GC_stopping_thread;\n+int GC_stopping_pid;\n+\n /* Caller holds allocation lock.\t*/\n void GC_stop_world()\n {\n@@ -335,6 +340,8 @@ void GC_stop_world()\n     register int n_live_threads = 0;\n     register int result;\n \n+    GC_stopping_thread = my_thread;\t/* debugging only.\t*/\n+    GC_stopping_pid = getpid();\t\t/* debugging only.\t*/\n     for (i = 0; i < THREAD_TABLE_SZ; i++) {\n       for (p = GC_threads[i]; p != 0; p = p -> next) {\n         if (p -> id != my_thread) {\n@@ -403,6 +410,7 @@ void GC_start_world()\n     #if DEBUG_THREADS\n       GC_printf0(\"World started\\n\");\n     #endif\n+    GC_stopping_thread = 0;  /* debugging only */\n }\n \n # ifdef IA64"}]}