{"sha": "3cb2b15b6c800aa7afef5b427978371aabb6d20a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiMmIxNWI2YzgwMGFhN2FmZWY1YjQyNzk3ODM3MWFhYmI2ZDIwYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-09T09:57:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-09T09:57:13Z"}, "message": "re PR target/52883 (ICE in simplify_const_unary_operation, at simplify-rtx.c:1464)\n\n\tPR target/52883\n\t* config/i386/predicates.md (x86_64_zext_general_operand): Prevent\n\tVOIDmode immediate operands.\n\t* config/i386/constraints.md (Wz): New constraint.\n\t* config/i386/i386.md (*zero_extendsidi2_rex64): Use Wz instead of Z.\n\ntestsuite/ChangeLog:\n\n\tPR target/52883\n\t* gcc.target/i386/pr52883.c: New testcase.\n\nFrom-SVN: r186243", "tree": {"sha": "23e7af90aa24af732316cc754ee0cff9a03ebe6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e7af90aa24af732316cc754ee0cff9a03ebe6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cb2b15b6c800aa7afef5b427978371aabb6d20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb2b15b6c800aa7afef5b427978371aabb6d20a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb2b15b6c800aa7afef5b427978371aabb6d20a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb2b15b6c800aa7afef5b427978371aabb6d20a/comments", "author": null, "committer": null, "parents": [{"sha": "99a1b0844ad0b3dc179f2a11a684a81caea6e63b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99a1b0844ad0b3dc179f2a11a684a81caea6e63b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99a1b0844ad0b3dc179f2a11a684a81caea6e63b"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "a3dd5518def53d1988bdb2fc5e2507edfc8f7c9b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cb2b15b6c800aa7afef5b427978371aabb6d20a", "patch": "@@ -1,3 +1,11 @@\n+2012-04-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/52883\n+\t* config/i386/predicates.md (x86_64_zext_general_operand): Prevent\n+\tVOIDmode immediate operands.\n+\t* config/i386/constraints.md (Wz): New constraint.\n+\t* config/i386/i386.md (*zero_extendsidi2_rex64): Use Wz instead of Z.\n+\n 2012-04-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/52717\n@@ -88,7 +96,7 @@\n \tsh_cfun_attr_renesas_p, sh_cfun_interrupt_handler_p,\n \tsh_cfun_resbank_handler_p, system_reg_operand, fp_zero_operand,\n \tfp_one_operand, fldi_ok, reg_unused_after, sh_can_redirect_branch,\n-\tsh_hard_regno_rename_ok, check_use_sfunc_addr, sh_contains_memref_p, \n+\tsh_hard_regno_rename_ok, check_use_sfunc_addr, sh_contains_memref_p,\n \tsh_loads_bankedreg_p): Use bool as return type.\n \t(nonpic_symbol_mentioned_p): Use bool as return type.  Remove\n \t'register' modifier."}, {"sha": "fda1a0488e83744c14ed5e31d3156d0bd8e7404f", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=3cb2b15b6c800aa7afef5b427978371aabb6d20a", "patch": "@@ -18,7 +18,7 @@\n ;; <http://www.gnu.org/licenses/>.\n \n ;;; Unused letters:\n-;;;     B     H           T  W\n+;;;     B     H           T\n ;;;           h  k          v\n \n ;; Integer register constraints.\n@@ -199,6 +199,16 @@\n    instructions).\"\n   (match_operand 0 \"x86_64_immediate_operand\"))\n \n+;; We use W prefix to denote any number of\n+;; constant-or-symbol-reference constraints\n+\n+(define_constraint \"Wz\"\n+  \"32-bit unsigned integer constant, or a symbolic reference known\n+   to fit that range (for zero-extending conversion operations that\n+   require non-VOIDmode immediate operands).\"\n+  (and (match_operand 0 \"x86_64_zext_immediate_operand\")\n+       (match_test \"GET_MODE (op) != VOIDmode\")))\n+\n (define_constraint \"Z\"\n   \"32-bit unsigned integer constant, or a symbolic reference known\n    to fit that range (for immediate operands in zero-extending x86-64"}, {"sha": "27ed5f6e07983b31a0f92afa144f00fc82d743bc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3cb2b15b6c800aa7afef5b427978371aabb6d20a", "patch": "@@ -3393,10 +3393,10 @@\n \n (define_insn \"*zero_extendsidi2_rex64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t\"=r ,o,?*Ym,?*y,?*Yi,!*x\")\n+\t\t\t\"=r  ,o,?*Ym,?*y,?*Yi,!*x\")\n \t(zero_extend:DI\n \t (match_operand:SI 1 \"x86_64_zext_general_operand\"\n-\t        \t\"rmZ,0,r   ,m  ,r   ,m*x\")))]\n+\t        \t\"rmWz,0,r   ,m  ,r   ,m*x\")))]\n   \"TARGET_64BIT\"\n   \"@\n    mov{l}\\t{%1, %k0|%k0, %1}"}, {"sha": "92db80912befaec5c3ef2909ab7185ca4a00d6f5", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=3cb2b15b6c800aa7afef5b427978371aabb6d20a", "patch": "@@ -341,11 +341,13 @@\n     (match_operand 0 \"general_operand\")))\n \n ;; Return true if OP is general operand representable on x86_64\n-;; as zero extended constant.\n+;; as zero extended constant.  This predicate is used in zero-extending\n+;; conversion operations that require non-VOIDmode immediate operands.\n (define_predicate \"x86_64_zext_general_operand\"\n   (if_then_else (match_test \"TARGET_64BIT\")\n     (ior (match_operand 0 \"nonimmediate_operand\")\n-\t (match_operand 0 \"x86_64_zext_immediate_operand\"))\n+\t (and (match_operand 0 \"x86_64_zext_immediate_operand\")\n+\t      (match_test \"GET_MODE (op) != VOIDmode\")))\n     (match_operand 0 \"general_operand\")))\n \n ;; Return true if OP is general operand representable on x86_64"}, {"sha": "dd3df5b55c7314afae51b9802e95d7ae231359da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cb2b15b6c800aa7afef5b427978371aabb6d20a", "patch": "@@ -1,3 +1,8 @@\n+2012-04-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/52883\n+\t* gcc.target/i386/pr52883.c: New testcase.\n+\n 2012-04-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* lib/target-supports.exp (check_effective_target_sparc_v9): New."}, {"sha": "766e87ee16a21b5698d6590db328a6fc98e9f55a", "filename": "gcc/testsuite/gcc.target/i386/pr52883.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52883.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb2b15b6c800aa7afef5b427978371aabb6d20a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52883.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52883.c?ref=3cb2b15b6c800aa7afef5b427978371aabb6d20a", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+int a, b, d, e, f, i, j, k, l, m;\n+unsigned c;\n+int g[] = { }, h[0];\n+\n+int\n+fn1 () {\n+  return 0;\n+}\n+\n+void\n+fn2 () {\n+  c = 0;\n+  e = 0;\n+  for (;; e = 0)\n+    if (f > j) {\n+      k = fn1 ();\n+      l = (d || k) * b;\n+      m = l * a;\n+      h[0] = m <= i;\n+    } else\n+      i = g[c];\n+}"}]}