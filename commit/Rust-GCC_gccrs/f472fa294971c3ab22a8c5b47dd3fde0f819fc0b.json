{"sha": "f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3MmZhMjk0OTcxYzNhYjIyYThjNWI0N2RkM2ZkZTBmODE5ZmMwYg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2002-02-28T03:09:41Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2002-02-28T03:09:41Z"}, "message": "dwarf2out.c (stack_adjust_offset): Add support for POST_INC, POST_DEC, and POST_MODIFY.\n\n\t* dwarf2out.c (stack_adjust_offset): Add support for POST_INC,\n\tPOST_DEC, and POST_MODIFY.\n\nFrom-SVN: r50121", "tree": {"sha": "ce5540c2ef14c8dff94186422205259b66526981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce5540c2ef14c8dff94186422205259b66526981"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b/comments", "author": null, "committer": null, "parents": [{"sha": "d627547118977e053c8204594bb45a6c76f87a45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d627547118977e053c8204594bb45a6c76f87a45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d627547118977e053c8204594bb45a6c76f87a45"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "1f9dd893f0353fdb8a2d4a1e4919551c7b58ce0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "patch": "@@ -1,3 +1,8 @@\n+2002-02-27  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* dwarf2out.c (stack_adjust_offset): Add support for POST_INC, \n+\tPOST_DEC, and POST_MODIFY.\n+\n 2002-02-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-typeck.c (digest_init): Remove unused parameter; all"}, {"sha": "9c0be46acd70a59a7f1dd1089c869ec17c95b634", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "patch": "@@ -950,37 +950,56 @@ stack_adjust_offset (pattern)\n \treturn 0;\n \n       offset = INTVAL (XEXP (src, 1));\n+      if (code == PLUS)\n+\toffset = -offset;\n     }\n   else if (GET_CODE (dest) == MEM)\n     {\n       /* (set (mem (pre_dec (reg sp))) (foo)) */\n       src = XEXP (dest, 0);\n       code = GET_CODE (src);\n \n-      if ((code != PRE_DEC && code != PRE_INC && code != PRE_MODIFY)\n-\t  || XEXP (src, 0) != stack_pointer_rtx)\n-\treturn 0;\n+      switch (code) \n+        {\n+\tcase PRE_MODIFY:\n+\tcase POST_MODIFY:\n+\t  if (XEXP (src, 0) == stack_pointer_rtx)\n+\t    {\n+\t      rtx val = XEXP (XEXP (src, 1), 1);\n+\t      /* We handle only adjustments by constant amount.  */\n+\t      if (GET_CODE (XEXP (src, 1)) != PLUS ||\n+\t\t  GET_CODE (val) != CONST_INT)\n+\t\tabort();\n+\t      offset = -INTVAL (val);\n+\t      break;\n+\t    }\n+\t  return 0;\n \n-      if (code == PRE_MODIFY)\n-\t{\n-\t  rtx val = XEXP (XEXP (src, 1), 1);\n+\tcase PRE_DEC:\n+\tcase POST_DEC:\n+\t  if (XEXP (src, 0) == stack_pointer_rtx)\n+\t    {\n+\t      offset = GET_MODE_SIZE (GET_MODE (dest));\n+\t      break;\n+\t    }\n+\t  return 0;\n \n-\t  /* We handle only adjustments by constant amount.  */\n-\t  if (GET_CODE (XEXP (src, 1)) != PLUS ||\n-\t      GET_CODE (val) != CONST_INT)\n-\t    abort ();\n+\tcase PRE_INC:\n+\tcase POST_INC:\n+\t  if (XEXP (src, 0) == stack_pointer_rtx)\n+\t    {\n+\t      offset = -GET_MODE_SIZE (GET_MODE (dest));\n+\t      break;\n+\t    }\n+\t  return 0;\n \n-\t  offset = -INTVAL (val);\n+\tdefault:\n+\t  return 0;\n \t}\n-      else\n-\toffset = GET_MODE_SIZE (GET_MODE (dest));\n     }\n   else\n     return 0;\n \n-  if (code == PLUS || code == PRE_INC)\n-    offset = -offset;\n-\n   return offset;\n }\n "}]}