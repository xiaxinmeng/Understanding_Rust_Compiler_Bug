{"sha": "9d5305381ff11ba5615705672115079ffb7b0750", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ1MzA1MzgxZmYxMWJhNTYxNTcwNTY3MjExNTA3OWZmYjdiMDc1MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-11-23T18:08:59Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-11-23T18:08:59Z"}, "message": "invoke.texi: For man pages, include gcc-vers.texi.\n\n\t* doc/invoke.texi: For man pages, include gcc-vers.texi.\n\tList @file in the option summary.  Include the libiberty\n\tdocumentation for @file.\n\t* gcc.c (main): Call expandargv.\n\t* Makefile.in (gcc-vers.texi): Define srcdir.\n\nFrom-SVN: r107426", "tree": {"sha": "16aa193a55469d54ef36eea04882c35b1ad7f193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16aa193a55469d54ef36eea04882c35b1ad7f193"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d5305381ff11ba5615705672115079ffb7b0750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5305381ff11ba5615705672115079ffb7b0750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5305381ff11ba5615705672115079ffb7b0750", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5305381ff11ba5615705672115079ffb7b0750/comments", "author": null, "committer": null, "parents": [{"sha": "dd97d271a414638726a6bbb905e5e6cf335e8ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd97d271a414638726a6bbb905e5e6cf335e8ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd97d271a414638726a6bbb905e5e6cf335e8ead"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "bd828e7df6d680c6d69f5c3a42a695dc71c64005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d5305381ff11ba5615705672115079ffb7b0750", "patch": "@@ -1,3 +1,11 @@\n+2005-11-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* doc/invoke.texi: For man pages, include gcc-vers.texi.\n+\tList @file in the option summary.  Include the libiberty\n+\tdocumentation for @file.\n+\t* gcc.c (main): Call expandargv.\n+\t* Makefile.in (gcc-vers.texi): Define srcdir.\n+\n 2005-11-23  Diego Novillo  <dnovillo@redhat.com>\n \n \t* passes.c (init_optimization_passes): Document"}, {"sha": "19e0d93dcae4179ce8fe0b845077cc4f6e29acaf", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9d5305381ff11ba5615705672115079ffb7b0750", "patch": "@@ -3320,6 +3320,7 @@ gcc-vers.texi: $(BASEVER) $(DEVPHASE)\n \t then echo \"@set DEVELOPMENT\"; \\\n \t else echo \"@clear DEVELOPMENT\"; \\\n \t fi) > $@T\n+\techo \"@set srcdir $(srcdir)\" >> $@T\n \tmv -f $@T $@\n \n "}, {"sha": "66a7b5daabf354115b77b4dd3b5465805d74bee0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9d5305381ff11ba5615705672115079ffb7b0750", "patch": "@@ -4,6 +4,10 @@\n @c For copying conditions, see the file gcc.texi.\n \n @ignore\n+@c man begin INCLUDE\n+@include gcc-vers.texi\n+@c man end\n+\n @c man begin COPYRIGHT\n Copyright @copyright{} 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n@@ -36,7 +40,7 @@ gcc [@option{-c}|@option{-S}|@option{-E}] [@option{-std=}@var{standard}]\n     [@option{-I}@var{dir}@dots{}] [@option{-L}@var{dir}@dots{}]\n     [@option{-D}@var{macro}[=@var{defn}]@dots{}] [@option{-U}@var{macro}]\n     [@option{-f}@var{option}@dots{}] [@option{-m}@var{machine-option}@dots{}]\n-    [@option{-o} @var{outfile}] @var{infile}@dots{}\n+    [@option{-o} @var{outfile}] [@@@var{file}] @var{infile}@dots{}\n \n Only the most useful options are listed here; see below for the\n remainder.  @samp{g++} accepts mostly the same options as @samp{gcc}.\n@@ -156,7 +160,7 @@ in the following sections.\n @item Overall Options\n @xref{Overall Options,,Options Controlling the Kind of Output}.\n @gccoptlist{-c  -S  -E  -o @var{file}  -combine -pipe  -pass-exit-codes  @gol\n--x @var{language}  -v  -###  --help  --target-help  --version}\n+-x @var{language}  -v  -###  --help  --target-help  --version @@@var{file}}\n \n @item C Language Options\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n@@ -1049,6 +1053,8 @@ line options for each tool.\n @item --version\n @opindex version\n Display the version number and copyrights of the invoked GCC@.\n+\n+@include @value{srcdir}/../libiberty/at-file.texi\n @end table\n \n @node Invoking G++"}, {"sha": "6f4b65b2e503efe402cc6979abd8d964258e5198", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5305381ff11ba5615705672115079ffb7b0750/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=9d5305381ff11ba5615705672115079ffb7b0750", "patch": "@@ -6032,6 +6032,8 @@ main (int argc, const char **argv)\n \n   xmalloc_set_program_name (programname);\n \n+  expandargv (&argc, &argv);\n+\n #ifdef GCC_DRIVER_HOST_INITIALIZATION\n   /* Perform host dependent initialization when needed.  */\n   GCC_DRIVER_HOST_INITIALIZATION;"}]}