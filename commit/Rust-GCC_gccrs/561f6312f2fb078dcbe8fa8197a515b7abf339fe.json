{"sha": "561f6312f2fb078dcbe8fa8197a515b7abf339fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYxZjYzMTJmMmZiMDc4ZGNiZThmYTgxOTdhNTE1YjdhYmYzMzlmZQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-07-12T15:00:58Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-07-12T15:00:58Z"}, "message": "S/390: Remove loc splitter\n\nThe backend splitter splitting a 3 operand load on condition into 2 is\nwrong.  The S/390 load on condition instruction might trap on the\nmemory operand even if the condition is false.  So if the first load\non condition overwrites a register used as part of the memory address\nof the second the second might trigger a segfault even if it does not\nactually perform the load.\n\nTrying to fix this I noticed that the generated code looks anyway\nbetter without the splitter.  So removing the splitter entirely is the\nway to go here.\n\ngcc/ChangeLog:\n\n2017-07-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md: Remove movcc splitter.\n\nFrom-SVN: r250153", "tree": {"sha": "fa07524700f01f4173f2597baf78d9fcd584d8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa07524700f01f4173f2597baf78d9fcd584d8ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/561f6312f2fb078dcbe8fa8197a515b7abf339fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561f6312f2fb078dcbe8fa8197a515b7abf339fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561f6312f2fb078dcbe8fa8197a515b7abf339fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561f6312f2fb078dcbe8fa8197a515b7abf339fe/comments", "author": null, "committer": null, "parents": [{"sha": "e5309d958112d799eae39f67b8660a11698e1328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5309d958112d799eae39f67b8660a11698e1328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5309d958112d799eae39f67b8660a11698e1328"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "fa2a8722e788c5c49c1b51a375e2bc56e8affb53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/561f6312f2fb078dcbe8fa8197a515b7abf339fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/561f6312f2fb078dcbe8fa8197a515b7abf339fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=561f6312f2fb078dcbe8fa8197a515b7abf339fe", "patch": "@@ -1,3 +1,7 @@\n+2017-07-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md: Remove movcc splitter.\n+\n 2017-07-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_rtx_costs): Return proper costs for"}, {"sha": "0eef9b179ee0ea7feeb4ff91ec4e020f50e5cd68", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/561f6312f2fb078dcbe8fa8197a515b7abf339fe/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/561f6312f2fb078dcbe8fa8197a515b7abf339fe/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=561f6312f2fb078dcbe8fa8197a515b7abf339fe", "patch": "@@ -6600,14 +6600,14 @@\n })\n \n ; locr, loc, stoc, locgr, locg, stocg, lochi, locghi\n-(define_insn_and_split \"*mov<mode>cc\"\n-  [(set (match_operand:GPR 0 \"nonimmediate_operand\"   \"=d,d,d,d,d,d,S,S,&d\")\n+(define_insn \"*mov<mode>cc\"\n+  [(set (match_operand:GPR 0 \"nonimmediate_operand\"   \"=d,d,d,d,d,d,S,S\")\n \t(if_then_else:GPR\n \t  (match_operator 1 \"s390_comparison\"\n-\t    [(match_operand 2 \"cc_reg_operand\"        \" c,c,c,c,c,c,c,c,c\")\n+\t    [(match_operand 2 \"cc_reg_operand\"        \" c,c,c,c,c,c,c,c\")\n \t     (match_operand 5 \"const_int_operand\"     \"\")])\n-\t  (match_operand:GPR 3 \"loc_operand\" \" d,0,S,0,K,0,d,0,S\")\n-\t  (match_operand:GPR 4 \"loc_operand\" \" 0,d,0,S,0,K,0,d,S\")))]\n+\t  (match_operand:GPR 3 \"loc_operand\" \" d,0,S,0,K,0,d,0\")\n+\t  (match_operand:GPR 4 \"loc_operand\" \" 0,d,0,S,0,K,0,d\")))]\n   \"TARGET_Z196\"\n   \"@\n    loc<g>r%C1\\t%0,%3\n@@ -6617,23 +6617,9 @@\n    loc<g>hi%C1\\t%0,%h3\n    loc<g>hi%D1\\t%0,%h4\n    stoc<g>%C1\\t%3,%0\n-   stoc<g>%D1\\t%4,%0\n-   #\"\n-  \"&& reload_completed\n-   && MEM_P (operands[3]) && MEM_P (operands[4])\"\n-  [(set (match_dup 0)\n-\t(if_then_else:GPR\n-\t (match_op_dup 1 [(match_dup 2) (const_int 0)])\n-\t (match_dup 3)\n-\t (match_dup 0)))\n-   (set (match_dup 0)\n-\t(if_then_else:GPR\n-\t (match_op_dup 1 [(match_dup 2) (const_int 0)])\n-\t (match_dup 0)\n-\t (match_dup 4)))]\n-  \"\"\n-  [(set_attr \"op_type\" \"RRF,RRF,RSY,RSY,RIE,RIE,RSY,RSY,*\")\n-   (set_attr \"cpu_facility\" \"*,*,*,*,z13,z13,*,*,*\")])\n+   stoc<g>%D1\\t%4,%0\"\n+  [(set_attr \"op_type\" \"RRF,RRF,RSY,RSY,RIE,RIE,RSY,RSY\")\n+   (set_attr \"cpu_facility\" \"*,*,*,*,z13,z13,*,*\")])\n \n ;;\n ;;- Multiply instructions."}]}