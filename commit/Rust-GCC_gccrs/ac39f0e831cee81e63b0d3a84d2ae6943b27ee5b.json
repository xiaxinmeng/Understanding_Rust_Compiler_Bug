{"sha": "ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMzOWYwZTgzMWNlZTgxZTYzYjBkM2E4NGQyYWU2OTQzYjI3ZWU1Yg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-06-10T10:07:13Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-06-10T10:07:13Z"}, "message": "re PR fortran/80988 (171_swim fails)\n\n2017-06-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/80988\n\t* frontend-passes.c (traverse_io_block):  Also\n\tcheck for variables occurring as indices multiple\n\ttime in a single implied DO loop.\n\n2017-06-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/80988\n\t* gfortran.dg/implied_do_io_3.f90:  New test.\n\nFrom-SVN: r249092", "tree": {"sha": "a22801c65ba5677ad8e9e97936b0736f5610e9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a22801c65ba5677ad8e9e97936b0736f5610e9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/comments", "author": null, "committer": null, "parents": [{"sha": "18787c384aba66221a157862c81238b9fea4e13d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18787c384aba66221a157862c81238b9fea4e13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18787c384aba66221a157862c81238b9fea4e13d"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "ec28113820ec396dc7f1b29744b61a6f919fa499", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "patch": "@@ -1,3 +1,10 @@\n+2017-06-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/80988\n+\t* frontend-passes.c (traverse_io_block):  Also\n+\tcheck for variables occurring as indices multiple\n+\ttime in a single implied DO loop.\n+\n 2017-06-05  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/70601"}, {"sha": "11c750352104ab468600c96536953508f8e7453e", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "patch": "@@ -1164,7 +1164,16 @@ traverse_io_block (gfc_code *code, bool *has_reached, gfc_code *prev)\n \t  /*  Check for (a(k), i=1,4) or ((a(j, i), i=1,4), j=1,4).  */\n \t  if (!stack_top || !stack_top->iter\n \t      || stack_top->iter->var->symtree != start->symtree)\n-\t    iters[i] = NULL;\n+\t    {\n+\t      /* Check for (a(i,i), i=1,3).  */\n+\t      int j;\n+\t      \n+\t      for (j=0; j<i; j++)\n+\t\tif (iters[j] && iters[j]->var->symtree == start->symtree)\n+\t\t  return false;\n+\n+\t      iters[i] = NULL;\n+\t    }\n \t  else\n \t    {\n \t      iters[i] = stack_top->iter;"}, {"sha": "531c787996157a41426a530c68ee29de4d73c71b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "patch": "@@ -1,3 +1,8 @@\n+2017-06-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/80988\n+\t* gfortran.dg/implied_do_io_3.f90:  New test.\n+\n 2017-06-10  Tom de Vries  <tom@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_signal): New proc."}, {"sha": "6ac89ac8d2c90e2fb73f9aecc219227d34323642", "filename": "gcc/testsuite/gfortran.dg/implied_do_io_3.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplied_do_io_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplied_do_io_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplied_do_io_3.f90?ref=ac39f0e831cee81e63b0d3a84d2ae6943b27ee5b", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+! { dg-options \"-ffrontend-optimize\" }\n+! PR 80988 - implied do loops with diagonal elements\n+! were not written correctly\n+program main\n+  implicit none\n+  integer :: i,j,k\n+  integer, dimension(3,3) :: a\n+  integer, dimension(3,3,3) :: b\n+  character(len=40) :: line\n+  a = reshape([(((i*10+j),i=1,3),j=1,3)], shape(a))\n+  i = 2147483548\n+  write (unit=line,fmt='(10I3)') (a(i,i),i=1,3)\n+  if (line /= ' 11 22 33') call abort\n+  write (unit=line,fmt='(10I3)') (a(i+1,i+1),i=1,2)\n+  if (line /= ' 22 33') call abort\n+  do k=1,3\n+     do j=1,3\n+        do i=1,3\n+           b(i,j,k) = i*100 + j*10 + k\n+        end do\n+     end do\n+  end do\n+  i = -2147483548\n+  write (unit=line,fmt='(10I4)') ((b(i,j,i),i=1,3),j=1,3)\n+  if (line /= ' 111 212 313 121 222 323 131 232 333') call abort\n+end program main"}]}