{"sha": "922bd191bc3f3aedad6ba95ac8aa1b88b24c744a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyYmQxOTFiYzNmM2FlZGFkNmJhOTVhYzhhYTFiODhiMjRjNzQ0YQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-06T04:07:24Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-06T04:07:24Z"}, "message": "(SELECT_CC_MODE): Add support for ASHIFT.\n\nFrom-SVN: r5627", "tree": {"sha": "e2f0b413657564f1ea37e529203611059780092a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f0b413657564f1ea37e529203611059780092a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/922bd191bc3f3aedad6ba95ac8aa1b88b24c744a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922bd191bc3f3aedad6ba95ac8aa1b88b24c744a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922bd191bc3f3aedad6ba95ac8aa1b88b24c744a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922bd191bc3f3aedad6ba95ac8aa1b88b24c744a/comments", "author": null, "committer": null, "parents": [{"sha": "9b3fad96a672acd1d1b7a4b194065fa8fbb2a547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3fad96a672acd1d1b7a4b194065fa8fbb2a547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b3fad96a672acd1d1b7a4b194065fa8fbb2a547"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "853f8120b063ea0f278a6d7d536d345eb86148c2", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922bd191bc3f3aedad6ba95ac8aa1b88b24c744a/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922bd191bc3f3aedad6ba95ac8aa1b88b24c744a/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=922bd191bc3f3aedad6ba95ac8aa1b88b24c744a", "patch": "@@ -1419,12 +1419,13 @@ extern struct rtx_def *legitimize_pic_address ();\n /* Given a comparison code (EQ, NE, etc.) and the first operand of a COMPARE,\n    return the mode to be used for the comparison.  For floating-point,\n    CCFP[E]mode is used.  CC_NOOVmode should be used when the first operand is a\n-   PLUS, MINUS, or NEG.  CCmode should be used when no special processing is\n-   needed.  */\n+   PLUS, MINUS, NEG, or ASHIFT.  CCmode should be used when no special\n+   processing is needed.  */\n #define SELECT_CC_MODE(OP,X,Y) \\\n   (GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT\t\t\t\t\\\n-   ? ((OP == EQ || OP == NE) ? CCFPmode : CCFPEmode)\t\t\\\n-   : ((GET_CODE (X) == PLUS || GET_CODE (X) == MINUS || GET_CODE (X) == NEG) \\\n+   ? ((OP == EQ || OP == NE) ? CCFPmode : CCFPEmode)\t\t\t\\\n+   : ((GET_CODE (X) == PLUS || GET_CODE (X) == MINUS\t\t\t\\\n+       || GET_CODE (X) == NEG || GET_CODE (X) == ASHIFT)\t\t\\\n       ? CC_NOOVmode : CCmode))\n \n /* A function address in a call instruction"}]}