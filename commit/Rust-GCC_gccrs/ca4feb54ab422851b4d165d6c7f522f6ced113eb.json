{"sha": "ca4feb54ab422851b4d165d6c7f522f6ced113eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E0ZmViNTRhYjQyMjg1MWI0ZDE2NWQ2YzdmNTIyZjZjZWQxMTNlYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-02-13T12:05:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-02-13T12:05:01Z"}, "message": "typeck2.c (digest_init, [...]): Treat vectors like arrays.\n\n        * typeck2.c (digest_init, process_init_constructor): Treat vectors\n        like arrays.\n\nFrom-SVN: r49726", "tree": {"sha": "bf1c3e8a51d86734ca621aa826ae3af9f414ce1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf1c3e8a51d86734ca621aa826ae3af9f414ce1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca4feb54ab422851b4d165d6c7f522f6ced113eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4feb54ab422851b4d165d6c7f522f6ced113eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca4feb54ab422851b4d165d6c7f522f6ced113eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4feb54ab422851b4d165d6c7f522f6ced113eb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aebfea10bedac8653e199c2d9cb6442184d2eb22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebfea10bedac8653e199c2d9cb6442184d2eb22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aebfea10bedac8653e199c2d9cb6442184d2eb22"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "3ee3f76749a3ad79f9451c3152ffae42ae88cb3b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4feb54ab422851b4d165d6c7f522f6ced113eb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4feb54ab422851b4d165d6c7f522f6ced113eb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca4feb54ab422851b4d165d6c7f522f6ced113eb", "patch": "@@ -1,3 +1,8 @@\n+2002-02-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck2.c (digest_init, process_init_constructor): Treat vectors\n+\tlike arrays.\n+\n 2002-02-11  Jason Merrill  <jason@redhat.com>\n \n \t* parse.y (reserved_declspecs): Don't handle attributes."}, {"sha": "1ade13ce9e93202f71030abd89d9523e2f692709", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4feb54ab422851b4d165d6c7f522f6ced113eb/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4feb54ab422851b4d165d6c7f522f6ced113eb/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=ca4feb54ab422851b4d165d6c7f522f6ced113eb", "patch": "@@ -544,7 +544,7 @@ digest_init (type, init, tail)\n \n   if (code == INTEGER_TYPE || code == REAL_TYPE || code == POINTER_TYPE\n       || code == ENUMERAL_TYPE || code == REFERENCE_TYPE\n-      || code == BOOLEAN_TYPE || code == COMPLEX_TYPE || code == VECTOR_TYPE\n+      || code == BOOLEAN_TYPE || code == COMPLEX_TYPE\n       || TYPE_PTRMEMFUNC_P (type))\n     {\n       if (raw_constructor)\n@@ -578,7 +578,7 @@ digest_init (type, init, tail)\n       return error_mark_node;\n     }\n \n-  if (code == ARRAY_TYPE || IS_AGGR_TYPE_CODE (code))\n+  if (code == ARRAY_TYPE || code == VECTOR_TYPE || IS_AGGR_TYPE_CODE (code))\n     {\n       if (raw_constructor && TYPE_NON_AGGREGATE_CLASS (type)\n \t  && TREE_HAS_CONSTRUCTOR (init))\n@@ -598,7 +598,7 @@ digest_init (type, init, tail)\n \t  return process_init_constructor (type, 0, tail);\n \t}\n \n-      if (code != ARRAY_TYPE)\n+      if (CLASS_TYPE_P (type))\n \t{\n \t  int flags = LOOKUP_NORMAL;\n \t  /* Initialization from { } is copy-initialization.  */\n@@ -659,18 +659,26 @@ process_init_constructor (type, init, elts)\n      for each element of this aggregate.  Chain them together in result.\n      If there are too few, use 0 for each scalar ultimate component.  */\n \n-  if (TREE_CODE (type) == ARRAY_TYPE)\n+  if (TREE_CODE (type) == ARRAY_TYPE || TREE_CODE (type) == VECTOR_TYPE)\n     {\n-      tree domain = TYPE_DOMAIN (type);\n       register long len;\n       register int i;\n \n-      if (domain)\n-\tlen = (TREE_INT_CST_LOW (TYPE_MAX_VALUE (domain))\n-\t       - TREE_INT_CST_LOW (TYPE_MIN_VALUE (domain))\n-\t       + 1);\n+      if (TREE_CODE (type) == ARRAY_TYPE)\n+\t{\n+\t  tree domain = TYPE_DOMAIN (type);\n+\t  if (domain)\n+\t    len = (TREE_INT_CST_LOW (TYPE_MAX_VALUE (domain))\n+\t\t   - TREE_INT_CST_LOW (TYPE_MIN_VALUE (domain))\n+\t\t   + 1);\n+\t  else\n+\t    len = -1;  /* Take as many as there are */\n+\t}\n       else\n-\tlen = -1;  /* Take as many as there are */\n+\t{\n+\t  /* Vectors are like simple fixed-size arrays.  */\n+\t  len = TYPE_VECTOR_SUBPARTS (type);\n+\t}\n \n       for (i = 0; len < 0 || i < len; i++)\n \t{"}]}