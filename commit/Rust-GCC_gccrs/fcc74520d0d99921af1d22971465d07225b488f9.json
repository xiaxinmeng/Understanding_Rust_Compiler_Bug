{"sha": "fcc74520d0d99921af1d22971465d07225b488f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNjNzQ1MjBkMGQ5OTkyMWFmMWQyMjk3MTQ2NWQwNzIyNWI0ODhmOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-13T10:39:08Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-13T10:39:08Z"}, "message": "rtl.def (VAR_LOCATION): Remove \"i\" field.\n\ngcc/\n\t* rtl.def (VAR_LOCATION): Remove \"i\" field.\n\t* rtl.h (rtx_def): Add u2.var_location_status.\n\t(PAT_VAR_LOCATION_STATUS): Use it.\n\t(gen_rtx_VAR_LOCATION): Declare.\n\t* gengenrtl.c (excluded_rtx): Add VAR_LOCATION.\n\t* emit-rtl.c (gen_rtx_VAR_LOCATION): New function.\n\t* var-tracking.c (emit_note_insn_var_location): Remove casts.\n\nFrom-SVN: r210362", "tree": {"sha": "2dffcda2eced8481083fed30ba21943ecb650e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dffcda2eced8481083fed30ba21943ecb650e2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcc74520d0d99921af1d22971465d07225b488f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc74520d0d99921af1d22971465d07225b488f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcc74520d0d99921af1d22971465d07225b488f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc74520d0d99921af1d22971465d07225b488f9/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "feb09dd93d0760c10dd9b381f49482fd67f80e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb09dd93d0760c10dd9b381f49482fd67f80e1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb09dd93d0760c10dd9b381f49482fd67f80e1f"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "52daf01f522e2e7cfec6a0cf28c3485a6a3ff414", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcc74520d0d99921af1d22971465d07225b488f9", "patch": "@@ -1,3 +1,13 @@\n+2014-05-13  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* rtl.def (VAR_LOCATION): Remove \"i\" field.\n+\t* rtl.h (rtx_def): Add u2.var_location_status.\n+\t(PAT_VAR_LOCATION_STATUS): Use it.\n+\t(gen_rtx_VAR_LOCATION): Declare.\n+\t* gengenrtl.c (excluded_rtx): Add VAR_LOCATION.\n+\t* emit-rtl.c (gen_rtx_VAR_LOCATION): New function.\n+\t* var-tracking.c (emit_note_insn_var_location): Remove casts.\n+\n 2014-05-13  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* rtl.def (scratch): Fix outdated comment and remove \"0\" field."}, {"sha": "79763d8093751a9ac81df6a8c527609b290073fa", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=fcc74520d0d99921af1d22971465d07225b488f9", "patch": "@@ -859,6 +859,15 @@ gen_lowpart_SUBREG (enum machine_mode mode, rtx reg)\n   return gen_rtx_SUBREG (mode, reg,\n \t\t\t subreg_lowpart_offset (mode, inmode));\n }\n+\n+rtx\n+gen_rtx_VAR_LOCATION (enum machine_mode mode, tree decl, rtx loc,\n+\t\t      enum var_init_status status)\n+{\n+  rtx x = gen_rtx_fmt_te (VAR_LOCATION, mode, decl, loc);\n+  PAT_VAR_LOCATION_STATUS (x) = status;\n+  return x;\n+}\n \f\n \n /* Create an rtvec and stores within it the RTXen passed in the arguments.  */"}, {"sha": "550efb8e17091329a83a4841fbde40f4c47b0c04", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=fcc74520d0d99921af1d22971465d07225b488f9", "patch": "@@ -141,9 +141,10 @@ special_rtx (int idx)\n static int\n excluded_rtx (int idx)\n {\n-  return ((strcmp (defs[idx].enumname, \"CONST_DOUBLE\") == 0)\n-\t  || (strcmp (defs[idx].enumname, \"CONST_WIDE_INT\") == 0)\n-\t  || (strcmp (defs[idx].enumname, \"CONST_FIXED\") == 0));\n+  return (strcmp (defs[idx].enumname, \"VAR_LOCATION\") == 0\n+\t  || strcmp (defs[idx].enumname, \"CONST_DOUBLE\") == 0\n+\t  || strcmp (defs[idx].enumname, \"CONST_WIDE_INT\") == 0\n+\t  || strcmp (defs[idx].enumname, \"CONST_FIXED\") == 0);\n }\n \n /* Place a list of all format specifiers we use into the array FORMAT.  */"}, {"sha": "18acc6b8070fee4d66283cacb4f668e906d81036", "filename": "gcc/rtl.def", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=fcc74520d0d99921af1d22971465d07225b488f9", "patch": "@@ -747,9 +747,7 @@ DEF_RTL_EXPR(US_TRUNCATE, \"us_truncate\", \"e\", RTX_UNARY)\n DEF_RTL_EXPR(FMA, \"fma\", \"eee\", RTX_TERNARY)\n \n /* Information about the variable and its location.  */\n-/* Changed 'te' to 'tei'; the 'i' field is for recording\n-   initialization status of variables.  */\n-DEF_RTL_EXPR(VAR_LOCATION, \"var_location\", \"tei\", RTX_EXTRA)\n+DEF_RTL_EXPR(VAR_LOCATION, \"var_location\", \"te\", RTX_EXTRA)\n \n /* Used in VAR_LOCATION for a pointer to a decl that is no longer\n    addressable.  */"}, {"sha": "6e97dcd997825e90f4c0bbec4bffa37ca202f8a6", "filename": "gcc/rtl.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=fcc74520d0d99921af1d22971465d07225b488f9", "patch": "@@ -362,6 +362,9 @@ struct GTY((chain_next (\"RTX_NEXT (&%h)\"),\n     /* The INSN_UID of an RTX_INSN-class code.  */\n     int insn_uid;\n \n+    /* The PAT_VAR_LOCATION_STATUS of a VAR_LOCATION.  */\n+    enum var_init_status var_location_status;\n+\n     /* In a CONST_WIDE_INT (aka hwivec_def), this is the number of\n        HOST_WIDE_INTs in the hwivec_def.  */\n     unsigned int num_elem;\n@@ -1055,7 +1058,8 @@ extern const char * const reg_note_name[];\n    can be unknown, uninitialized or initialized.  See enumeration\n    type below.  */\n #define PAT_VAR_LOCATION_STATUS(PAT) \\\n-  ((enum var_init_status) (XCINT ((PAT), 2, VAR_LOCATION)))\n+  (RTL_FLAG_CHECK1 (\"PAT_VAR_LOCATION_STATUS\", PAT, VAR_LOCATION) \\\n+   ->u2.var_location_status)\n \n /* Accessors for a NOTE_INSN_VAR_LOCATION.  */\n #define NOTE_VAR_LOCATION_DECL(NOTE) \\\n@@ -2561,6 +2565,8 @@ extern rtx gen_raw_REG (enum machine_mode, int);\n extern rtx gen_rtx_REG (enum machine_mode, unsigned);\n extern rtx gen_rtx_SUBREG (enum machine_mode, rtx, int);\n extern rtx gen_rtx_MEM (enum machine_mode, rtx);\n+extern rtx gen_rtx_VAR_LOCATION (enum machine_mode, tree, rtx,\n+\t\t\t\t enum var_init_status);\n \n #define GEN_INT(N)  gen_rtx_CONST_INT (VOIDmode, (N))\n "}, {"sha": "9e71165e1c78c040d29d35e2cbd37f11b7584dfa", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc74520d0d99921af1d22971465d07225b488f9/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=fcc74520d0d99921af1d22971465d07225b488f9", "patch": "@@ -8748,8 +8748,7 @@ emit_note_insn_var_location (variable_def **varp, emit_note_data *data)\n \n   note_vl = NULL_RTX;\n   if (!complete)\n-    note_vl = gen_rtx_VAR_LOCATION (VOIDmode, decl, NULL_RTX,\n-\t\t\t\t    (int) initialized);\n+    note_vl = gen_rtx_VAR_LOCATION (VOIDmode, decl, NULL_RTX, initialized);\n   else if (n_var_parts == 1)\n     {\n       rtx expr_list;\n@@ -8759,8 +8758,7 @@ emit_note_insn_var_location (variable_def **varp, emit_note_data *data)\n       else\n \texpr_list = loc[0];\n \n-      note_vl = gen_rtx_VAR_LOCATION (VOIDmode, decl, expr_list,\n-\t\t\t\t      (int) initialized);\n+      note_vl = gen_rtx_VAR_LOCATION (VOIDmode, decl, expr_list, initialized);\n     }\n   else if (n_var_parts)\n     {\n@@ -8773,7 +8771,7 @@ emit_note_insn_var_location (variable_def **varp, emit_note_data *data)\n       parallel = gen_rtx_PARALLEL (VOIDmode,\n \t\t\t\t   gen_rtvec_v (n_var_parts, loc));\n       note_vl = gen_rtx_VAR_LOCATION (VOIDmode, decl,\n-\t\t\t\t      parallel, (int) initialized);\n+\t\t\t\t      parallel, initialized);\n     }\n \n   if (where != EMIT_NOTE_BEFORE_INSN)"}]}