{"sha": "2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI1YmYwZTI3ZTBiNzdhNDhmMGY4YTA0NmNiNmE1NjI4MDEzNzA1NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-05-17T04:33:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-05-17T04:33:42Z"}, "message": "sse.md (mulv4si3): New.\n\n        * config/i386/sse.md (mulv4si3): New.\n\n        * lib/target-supports.exp (check_effective_target_vect_int_mul): Add\n        i?86 and x86_64.\n\nFrom-SVN: r99811", "tree": {"sha": "f8700af6e8db43e79f6805f9ce3ecfb5e6382a08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8700af6e8db43e79f6805f9ce3ecfb5e6382a08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/comments", "author": null, "committer": null, "parents": [{"sha": "9d9bd40fb67d65bc99b142f66128b3ad07e63330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d9bd40fb67d65bc99b142f66128b3ad07e63330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d9bd40fb67d65bc99b142f66128b3ad07e63330"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "f42032b6645a147fb4ac6a7fa288703d6d514c1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "patch": "@@ -1,3 +1,7 @@\n+2005-05-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/sse.md (mulv4si3): New.\n+\n 2005-05-17  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.h (EXTRA_CONSTRAINT_T): Remove FIXME and"}, {"sha": "76efe5f0586b239d967239bc52ee8259020535a6", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "patch": "@@ -2490,6 +2490,52 @@\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_expand \"mulv4si3\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n+\t(mult:V4SI (match_operand:V4SI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:V4SI 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_SSE2\"\n+{\n+  rtx t1, t2, t3, t4, t5, t6, thirtytwo;\n+  rtx op0, op1, op2;\n+\n+  op0 = operands[0];\n+  op1 = operands[1];\n+  op2 = operands[2];\n+  t1 = gen_reg_rtx (V4SImode);\n+  t2 = gen_reg_rtx (V4SImode);\n+  t3 = gen_reg_rtx (V4SImode);\n+  t4 = gen_reg_rtx (V4SImode);\n+  t5 = gen_reg_rtx (V4SImode);\n+  t6 = gen_reg_rtx (V4SImode);\n+  thirtytwo = GEN_INT (32);\n+\n+  /* Multiply elements 2 and 0.  */\n+  emit_insn (gen_sse2_umulv2siv2di3 (gen_lowpart (V2DImode, t1), op1, op2));\n+\n+  /* Shift both input vectors down one element, so that elements 3 and 1\n+     are now in the slots for elements 2 and 0.  For K8, at least, this is\n+     faster than using a shuffle.  */\n+  emit_insn (gen_sse2_lshrti3 (gen_lowpart (TImode, t2),\n+\t\t\t       gen_lowpart (TImode, op1), thirtytwo));\n+  emit_insn (gen_sse2_lshrti3 (gen_lowpart (TImode, t3),\n+\t\t\t       gen_lowpart (TImode, op2), thirtytwo));\n+\n+  /* Multiply elements 3 and 1.  */\n+  emit_insn (gen_sse2_umulv2siv2di3 (gen_lowpart (V2DImode, t4), t2, t3));\n+\n+  /* Move the results in element 2 down to element 1; we don't care what\n+     goes in elements 2 and 3.  */\n+  emit_insn (gen_sse2_pshufd_1 (t5, t1, const0_rtx, const2_rtx,\n+\t\t\t\tconst0_rtx, const0_rtx));\n+  emit_insn (gen_sse2_pshufd_1 (t6, t4, const0_rtx, const2_rtx,\n+\t\t\t\tconst0_rtx, const0_rtx));\n+\n+  /* Merge the parts back together.  */\n+  emit_insn (gen_sse2_punpckldq (op0, t5, t6));\n+  DONE;\n+})\n+\n (define_insn \"ashr<mode>3\"\n   [(set (match_operand:SSEMODE24 0 \"register_operand\" \"=x\")\n \t(ashiftrt:SSEMODE24"}, {"sha": "c9f0b74de214f52c921e01801a204f71f4d5a0bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "patch": "@@ -1,3 +1,8 @@\n+2005-05-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_vect_int_mul): Add\n+\ti?86 and x86_64.\n+\n 2005-05-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/compat/generate-random.c (config.h): Do not include."}, {"sha": "ac6dda5fd5787bde87dffece8128b28c2f7b605a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b5bf0e27e0b77a48f0f8a046cb6a56280137054/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=2b5bf0e27e0b77a48f0f8a046cb6a56280137054", "patch": "@@ -955,7 +955,9 @@ proc check_effective_target_vect_int_mult { } {\n \tverbose \"check_effective_target_vect_int_mult: using cached result\" 2\n     } else {\n \tset et_vect_int_mult_saved 0\n-\tif { [istarget powerpc*-*-*] } {\n+\tif { [istarget powerpc*-*-*]\n+\t     || [istarget i?86-*-*]\n+\t     || [istarget x86_64-*-*] } {\n \t   set et_vect_int_mult_saved 1\n \t}\n     }"}]}