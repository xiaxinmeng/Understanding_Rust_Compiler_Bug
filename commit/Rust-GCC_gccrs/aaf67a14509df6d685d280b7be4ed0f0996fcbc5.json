{"sha": "aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmNjdhMTQ1MDlkZjZkNjg1ZDI4MGI3YmU0ZWQwZjA5OTZmY2JjNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2004-12-03T15:11:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-12-03T15:11:56Z"}, "message": "mklibgcc.in: Put back the default set of EXTRA_MULTILIB_PART.\n\n2004-12-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* mklibgcc.in: Put back the default set of EXTRA_MULTILIB_PART.\n\nFrom-SVN: r91684", "tree": {"sha": "0d8a8f9bb32e2a7ae4d568541aba4cf644989e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8a8f9bb32e2a7ae4d568541aba4cf644989e64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf67a14509df6d685d280b7be4ed0f0996fcbc5/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dafb7f3f52bbc30f565060d5d63bc93614a97806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafb7f3f52bbc30f565060d5d63bc93614a97806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dafb7f3f52bbc30f565060d5d63bc93614a97806"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "94e8f94c18eba8a347f8ea8c27d88d2801105524", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf67a14509df6d685d280b7be4ed0f0996fcbc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf67a14509df6d685d280b7be4ed0f0996fcbc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "patch": "@@ -1,3 +1,7 @@\n+2004-12-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* mklibgcc.in: Put back the default set of EXTRA_MULTILIB_PART.\n+\n 2004-12-03  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* configure.ac: Move TL_AC_GCC_VERSION into initialization section."}, {"sha": "cfef2bfc2c47b37b36763694058deac84fee1793", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 28, "deletions": 30, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf67a14509df6d685d280b7be4ed0f0996fcbc5/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf67a14509df6d685d280b7be4ed0f0996fcbc5/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "patch": "@@ -666,36 +666,34 @@ for ml in $MULTILIBS; do\n     # simultaneous goal targets, so that rules which cannot execute\n     # simultaneously are properly serialized.\n     \n-    # We don't need to build the default ones since they have been\n-    # built before we get here.\n-    if [ $dir != \".\" ]; then\n-      extra=\n-      t=$dir/\n-      echo\n-      for f in $EXTRA_MULTILIB_PARTS; do\n-\tout=$dir/$f\n-\tcase $out in\n-\t# Prevent `make' from interpreting $out as a macro assignment\n-\t*'$(EQ)'*) targ=\"T_TARGET=$out T_TARGET\" ;;\n-\t*) targ=$out ;;\n-\tesac\n-\textra=\"$extra $targ\"\n-      done\n-\n-      echo extra$suffix: stmp-dirs\n-      echo \"\t$make_compile\" \\\\\n-      echo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n-      echo '\t  MULTILIB_CFLAGS=\"'$flags'\"' T=$t $extra\n-      echo \"all: extra$suffix\"\n-\n-      # Make libunwind.so and libgcc_s.so depend on these, since they\n-      # are likely to be implicitly used by the link process.\n-      if [ \"$libgcc_s_so\" ]; then\n-\techo \"$libgcc_s_so: extra$suffix\"\n-\tfi\n-      if [ \"$libunwind_so\" ]; then\n-\techo \"$libunwind_so: extra$suffix\"\n-      fi\n+    extra=\n+    echo\n+    for f in $EXTRA_MULTILIB_PARTS; do\n+      case $dir in\n+      .) out=$f ; t= ;;\n+      *) out=$dir/$f ; t=$dir/ ;;\n+      esac\n+      case $out in\n+      # Prevent `make' from interpreting $out as a macro assignment\n+      *'$(EQ)'*) targ=\"T_TARGET=$out T_TARGET\" ;;\n+      *) targ=$out ;;\n+      esac\n+      extra=\"$extra $targ\"\n+    done\n+\n+    echo extra$suffix: stmp-dirs\n+    echo \"\t$make_compile\" \\\\\n+    echo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n+    echo '\t  MULTILIB_CFLAGS=\"'$flags'\"' T=$t $extra\n+    echo \"all: extra$suffix\"\n+\n+    # Make libunwind.so and libgcc_s.so depend on these, since they\n+    # are likely to be implicitly used by the link process.\n+    if [ \"$libgcc_s_so\" ]; then\n+      echo \"$libgcc_s_so: extra$suffix\"\n+    fi\n+    if [ \"$libunwind_so\" ]; then\n+      echo \"$libunwind_so: extra$suffix\"\n     fi\n   fi\n "}]}