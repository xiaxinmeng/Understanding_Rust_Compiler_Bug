{"sha": "51aae43f235863454bcce315c748b2836c5d3f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhYWU0M2YyMzU4NjM0NTRiY2NlMzE1Yzc0OGIyODM2YzVkM2Y5OA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-09-08T19:27:30Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-09-08T19:27:30Z"}, "message": "[fold-const.c] Fix bigendian HFmode in native_interpret_real\n\n\t* fold-const.c (native_interpret_real): Fix HFmode for bigendian where\n\tUNITS_PER_WORD >= 4.\n\nFrom-SVN: r227552", "tree": {"sha": "2bda572c4af1c703a5f18f56949e9eb485f4a2f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bda572c4af1c703a5f18f56949e9eb485f4a2f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51aae43f235863454bcce315c748b2836c5d3f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51aae43f235863454bcce315c748b2836c5d3f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51aae43f235863454bcce315c748b2836c5d3f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51aae43f235863454bcce315c748b2836c5d3f98/comments", "author": null, "committer": null, "parents": [{"sha": "03873eb98330b17e73ada713f31bcbcd50d74026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03873eb98330b17e73ada713f31bcbcd50d74026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03873eb98330b17e73ada713f31bcbcd50d74026"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "bd76b596345bb843365b9d12d9e86f9682b68b6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51aae43f235863454bcce315c748b2836c5d3f98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51aae43f235863454bcce315c748b2836c5d3f98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51aae43f235863454bcce315c748b2836c5d3f98", "patch": "@@ -1,3 +1,8 @@\n+2015-09-08  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* fold-const.c (native_interpret_real): Fix HFmode for bigendian where\n+\tUNITS_PER_WORD >= 4.\n+\n 2015-09-08  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_simd_vec_unpacks_lo_<mode>,"}, {"sha": "e9366e2de6e8a7684bf0a0f51fc63ebd2c2154e8", "filename": "gcc/fold-const.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51aae43f235863454bcce315c748b2836c5d3f98/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51aae43f235863454bcce315c748b2836c5d3f98/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=51aae43f235863454bcce315c748b2836c5d3f98", "patch": "@@ -7182,7 +7182,6 @@ native_interpret_real (tree type, const unsigned char *ptr, int len)\n {\n   machine_mode mode = TYPE_MODE (type);\n   int total_bytes = GET_MODE_SIZE (mode);\n-  int byte, offset, word, words, bitpos;\n   unsigned char value;\n   /* There are always 32 bits in each long, no matter the size of\n      the hosts long.  We handle floating point representations with\n@@ -7193,16 +7192,18 @@ native_interpret_real (tree type, const unsigned char *ptr, int len)\n   total_bytes = GET_MODE_SIZE (TYPE_MODE (type));\n   if (total_bytes > len || total_bytes > 24)\n     return NULL_TREE;\n-  words = (32 / BITS_PER_UNIT) / UNITS_PER_WORD;\n+  int words = (32 / BITS_PER_UNIT) / UNITS_PER_WORD;\n \n   memset (tmp, 0, sizeof (tmp));\n-  for (bitpos = 0; bitpos < total_bytes * BITS_PER_UNIT;\n+  for (int bitpos = 0; bitpos < total_bytes * BITS_PER_UNIT;\n        bitpos += BITS_PER_UNIT)\n     {\n-      byte = (bitpos / BITS_PER_UNIT) & 3;\n+      /* Both OFFSET and BYTE index within a long;\n+\t bitpos indexes the whole float.  */\n+      int offset, byte = (bitpos / BITS_PER_UNIT) & 3;\n       if (UNITS_PER_WORD < 4)\n \t{\n-\t  word = byte / UNITS_PER_WORD;\n+\t  int word = byte / UNITS_PER_WORD;\n \t  if (WORDS_BIG_ENDIAN)\n \t    word = (words - 1) - word;\n \t  offset = word * UNITS_PER_WORD;\n@@ -7212,7 +7213,16 @@ native_interpret_real (tree type, const unsigned char *ptr, int len)\n \t    offset += byte % UNITS_PER_WORD;\n \t}\n       else\n-\toffset = BYTES_BIG_ENDIAN ? 3 - byte : byte;\n+\t{\n+\t  offset = byte;\n+\t  if (BYTES_BIG_ENDIAN)\n+\t    {\n+\t      /* Reverse bytes within each long, or within the entire float\n+\t\t if it's smaller than a long (for HFmode).  */\n+\t      offset = MIN (3, total_bytes - 1) - offset;\n+\t      gcc_assert (offset >= 0);\n+\t    }\n+\t}\n       value = ptr[offset + ((bitpos / BITS_PER_UNIT) & ~3)];\n \n       tmp[bitpos / 32] |= (unsigned long)value << (bitpos & 31);"}]}