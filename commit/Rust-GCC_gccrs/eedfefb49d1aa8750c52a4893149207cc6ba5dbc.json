{"sha": "eedfefb49d1aa8750c52a4893149207cc6ba5dbc", "node_id": "C_kwDOANBUbNoAKGVlZGZlZmI0OWQxYWE4NzUwYzUyYTQ4OTMxNDkyMDdjYzZiYTVkYmM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-16T17:35:24Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:30Z"}, "message": "libproc_macro: Add is_available ffi\n\nAdd ffi call for is_available function.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge.rs: Add internal\n\timplementation.\n\t* librust/proc_macro/rust/lib.rs: Add call to internal\n\timplementation.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "688c8b3625080f1aaec5a41a15012a242a79668d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/688c8b3625080f1aaec5a41a15012a242a79668d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eedfefb49d1aa8750c52a4893149207cc6ba5dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedfefb49d1aa8750c52a4893149207cc6ba5dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eedfefb49d1aa8750c52a4893149207cc6ba5dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedfefb49d1aa8750c52a4893149207cc6ba5dbc/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc4f537942ee67079526e06528a9f0823ee81bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4f537942ee67079526e06528a9f0823ee81bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4f537942ee67079526e06528a9f0823ee81bf1"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "ff2c49688b616a1dad6c6c06e2a86f798fdd3d44", "filename": "librust/proc_macro/rust/bridge.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedfefb49d1aa8750c52a4893149207cc6ba5dbc/librust%2Fproc_macro%2Frust%2Fbridge.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedfefb49d1aa8750c52a4893149207cc6ba5dbc/librust%2Fproc_macro%2Frust%2Fbridge.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge.rs?ref=eedfefb49d1aa8750c52a4893149207cc6ba5dbc", "patch": "@@ -2,3 +2,11 @@ pub mod ident;\n pub mod literal;\n pub mod punct;\n pub mod span;\n+\n+extern \"C\" {\n+    fn bridge__is_available() -> bool;\n+}\n+\n+pub fn is_available() -> bool {\n+    unsafe { bridge__is_available() }\n+}"}, {"sha": "4e6802abeda68494b46054722fe1799145109400", "filename": "librust/proc_macro/rust/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedfefb49d1aa8750c52a4893149207cc6ba5dbc/librust%2Fproc_macro%2Frust%2Flib.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedfefb49d1aa8750c52a4893149207cc6ba5dbc/librust%2Fproc_macro%2Frust%2Flib.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Flib.rs?ref=eedfefb49d1aa8750c52a4893149207cc6ba5dbc", "patch": "@@ -22,7 +22,7 @@ pub mod token_stream;\n /// This function provide a non panicking way to detect whether the API is\n /// invoked from inside of a procedural macro.\n pub fn is_available() -> bool {\n-    todo!(\"Implement this function\")\n+    bridge::is_available()\n }\n \n /// A single token or a delimited sequence of token trees."}]}