{"sha": "b950a32e341adc4457bc428e9b261764ed8456ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk1MGEzMmUzNDFhZGM0NDU3YmM0MjhlOWIyNjE3NjRlZDg0NTZlZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-02-07T19:32:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-02-07T19:32:59Z"}, "message": "re PR debug/19327 (gcc.c-torture/execute/921215-1.c compilation  -O3 -g)\n\n\tPR debug/19327\n\t* dbxout.c (dbxout_symbol) <FUNCTION_DECL>: Skip inline instance\n\tof nested functions.\n\nFrom-SVN: r94709", "tree": {"sha": "25844d916cab7582158d597f59202e60728adaff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25844d916cab7582158d597f59202e60728adaff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b950a32e341adc4457bc428e9b261764ed8456ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b950a32e341adc4457bc428e9b261764ed8456ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b950a32e341adc4457bc428e9b261764ed8456ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b950a32e341adc4457bc428e9b261764ed8456ef/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0d0afeed486505d11e11116d8f7a6b2fa6c3dfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d0afeed486505d11e11116d8f7a6b2fa6c3dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0d0afeed486505d11e11116d8f7a6b2fa6c3dfe"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "cc7b2408a33fe88776cffa34570f521a0554a472", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b950a32e341adc4457bc428e9b261764ed8456ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b950a32e341adc4457bc428e9b261764ed8456ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b950a32e341adc4457bc428e9b261764ed8456ef", "patch": "@@ -1,3 +1,9 @@\n+2005-02-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR debug/19327\n+\t* dbxout.c (dbxout_symbol) <FUNCTION_DECL>: Skip inline instance\n+\tof nested functions.\n+\n 2005-02-07  Jonathan Wakely  <redi@gcc.gnu.org>\n \n \t* doc/extend.texi: Document deprecated extensions allowing"}, {"sha": "e7a7738816d9a3c5cdd75c464f4e5f4310ee1061", "filename": "gcc/dbxout.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b950a32e341adc4457bc428e9b261764ed8456ef/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b950a32e341adc4457bc428e9b261764ed8456ef/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=b950a32e341adc4457bc428e9b261764ed8456ef", "patch": "@@ -2429,6 +2429,9 @@ dbxout_symbol (tree decl, int local ATTRIBUTE_UNUSED)\n       context = decl_function_context (decl);\n       if (context == current_function_decl)\n \tbreak;\n+      /* Don't mention an inline instance of a nested function.  */\n+      if (context && DECL_FROM_INLINE (decl))\n+\tbreak;\n       if (!MEM_P (DECL_RTL (decl))\n \t  || GET_CODE (XEXP (DECL_RTL (decl), 0)) != SYMBOL_REF)\n \tbreak;"}]}