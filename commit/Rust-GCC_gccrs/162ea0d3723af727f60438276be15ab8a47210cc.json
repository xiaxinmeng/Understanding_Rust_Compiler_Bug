{"sha": "162ea0d3723af727f60438276be15ab8a47210cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYyZWEwZDM3MjNhZjcyN2Y2MDQzODI3NmJlMTVhYjhhNDcyMTBjYw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-23T10:24:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:24:27Z"}, "message": "[Ada] Minor reformattings\n\n2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_disp.adb, freeze.adb, gnat1drv.adb, sem_ch5.adb, sem_spark.adb:\n\tMinor reformattings.\n\nFrom-SVN: r260600", "tree": {"sha": "74a5820656b19b9dd65e3cc45667b3e363a26ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74a5820656b19b9dd65e3cc45667b3e363a26ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/162ea0d3723af727f60438276be15ab8a47210cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162ea0d3723af727f60438276be15ab8a47210cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162ea0d3723af727f60438276be15ab8a47210cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162ea0d3723af727f60438276be15ab8a47210cc/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd742f4a165865225a3a6c6d1bd287897994bdd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd742f4a165865225a3a6c6d1bd287897994bdd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd742f4a165865225a3a6c6d1bd287897994bdd1"}], "stats": {"total": 85, "additions": 47, "deletions": 38}, "files": [{"sha": "ee27de0c2a3a33f4e8889e530d1b5e02b75c017b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=162ea0d3723af727f60438276be15ab8a47210cc", "patch": "@@ -1,3 +1,8 @@\n+2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_disp.adb, freeze.adb, gnat1drv.adb, sem_ch5.adb, sem_spark.adb:\n+\tMinor reformattings.\n+\n 2018-05-23  Pascal Obry  <obry@adacore.com>\n \n \t* adaint.c (win32_wait): Properly free the handle/pid lists when"}, {"sha": "0d674e7bcf94cadaf28966ff3ac0dbaacef69ac8", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=162ea0d3723af727f60438276be15ab8a47210cc", "patch": "@@ -4493,7 +4493,7 @@ package body Exp_Disp is\n       Discard_Names : constant Boolean :=\n                         Present (No_Tagged_Streams_Pragma (Typ))\n                           and then (Global_Discard_Names\n-                                      or else Einfo.Discard_Names (Typ));\n+                                     or else Einfo.Discard_Names (Typ));\n \n       --  The following name entries are used by Make_DT to generate a number\n       --  of entities related to a tagged type. These entities may be generated"}, {"sha": "1e634e1ca96d5c940bcc639ade34b545ca36a55e", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=162ea0d3723af727f60438276be15ab8a47210cc", "patch": "@@ -716,6 +716,7 @@ package body Freeze is\n          --  limited objects.\n \n          if Present (Init) and then not Is_Limited_View (Typ) then\n+\n             --  Capture initialization value at point of declaration, and make\n             --  explicit assignment legal, because object may be a constant.\n "}, {"sha": "06b553664992c1d8562d62a51a415fa8360f96c2", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=162ea0d3723af727f60438276be15ab8a47210cc", "patch": "@@ -249,6 +249,7 @@ procedure Gnat1drv is\n \n          --  Turn off length expansion. CodePeer has its own mechanism to\n          --  handle length attribute.\n+\n          Debug_Flag_Dot_PP := True;\n \n          --  Turn off C tree generation, not compatible with CodePeer mode. We\n@@ -257,8 +258,8 @@ procedure Gnat1drv is\n          --  this way when we are doing CodePeer tests on existing test suites\n          --  that may have -gnateg set, to avoid the need for special casing.\n \n-         Modify_Tree_For_C := False;\n-         Generate_C_Code := False;\n+         Modify_Tree_For_C      := False;\n+         Generate_C_Code        := False;\n          Unnest_Subprogram_Mode := False;\n \n          --  Turn off inlining, confuses CodePeer output and gains nothing"}, {"sha": "0da972a95195f87417cab1c707b3883c3824876e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=162ea0d3723af727f60438276be15ab8a47210cc", "patch": "@@ -2058,6 +2058,14 @@ package body Sem_Ch5 is\n    ------------------------------------\n \n    procedure Analyze_Iterator_Specification (N : Node_Id) is\n+      Def_Id    : constant Node_Id    := Defining_Identifier (N);\n+      Iter_Name : constant Node_Id    := Name (N);\n+      Loc       : constant Source_Ptr := Sloc (N);\n+      Subt      : constant Node_Id    := Subtype_Indication (N);\n+\n+      Bas : Entity_Id := Empty;  -- initialize to prevent warning\n+      Typ : Entity_Id;\n+\n       procedure Check_Reverse_Iteration (Typ : Entity_Id);\n       --  For an iteration over a container, if the loop carries the Reverse\n       --  indicator, verify that the container type has an Iterate aspect that\n@@ -2072,16 +2080,6 @@ package body Sem_Ch5 is\n       --  obtained by locating an entity with the proper name in the scope\n       --  of the type.\n \n-      --  Local variables\n-\n-      Def_Id    : constant Node_Id    := Defining_Identifier (N);\n-      Iter_Name : constant Node_Id    := Name (N);\n-      Loc       : constant Source_Ptr := Sloc (N);\n-      Subt      : constant Node_Id    := Subtype_Indication (N);\n-\n-      Bas       : Entity_Id := Empty;  -- initialize to prevent warning\n-      Typ       : Entity_Id;\n-\n       -----------------------------\n       -- Check_Reverse_Iteration --\n       -----------------------------"}, {"sha": "3abfd99ae874eef3613b3bf41b177449df624e39", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/162ea0d3723af727f60438276be15ab8a47210cc/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=162ea0d3723af727f60438276be15ab8a47210cc", "patch": "@@ -1042,18 +1042,23 @@ package body Sem_SPARK is\n    begin\n       case N_Declaration'(Nkind (Decl)) is\n          when N_Full_Type_Declaration =>\n+\n             --  Nothing to do here ??? NOT TRUE IF CONSTRAINT ON TYPE\n+\n             null;\n \n          when N_Object_Declaration =>\n+\n             --  First move the right-hand side\n+\n             Current_Checking_Mode := Move;\n             Check_Node (Expression (Decl));\n \n             declare\n-               Elem : Perm_Tree_Access;\n                Deep : constant Boolean :=\n-                 Is_Deep (Etype (Defining_Identifier (Decl)));\n+                        Is_Deep (Etype (Defining_Identifier (Decl)));\n+               Elem : Perm_Tree_Access;\n+\n             begin\n                Elem := new Perm_Tree_Wrapper'\n                  (Tree =>\n@@ -1064,14 +1069,17 @@ package body Sem_SPARK is\n \n                --  If unitialized declaration, then set to Write_Only. If a\n                --  pointer declaration, it has a null default initialization.\n+\n                if No (Expression (Decl))\n                  and then not Has_Full_Default_Initialization\n-                   (Etype (Defining_Identifier (Decl)))\n+                                (Etype (Defining_Identifier (Decl)))\n                  and then not Is_Access_Type\n-                   (Etype (Defining_Identifier (Decl)))\n+                                (Etype (Defining_Identifier (Decl)))\n+\n                  --  Objects of shallow types are considered as always\n                  --  initialized, leaving the checking of initialization to\n                  --  flow analysis.\n+\n                  and then Deep\n                then\n                   Elem.all.Tree.Permission := Write_Only;\n@@ -1084,9 +1092,7 @@ package body Sem_SPARK is\n                     Unique_Entity (Defining_Identifier (Decl)),\n                     Elem);\n \n-               pragma Assert (Get_First (Current_Perm_Env)\n-                              /= null);\n-\n+               pragma Assert (Get_First (Current_Perm_Env) /= null);\n             end;\n \n          when N_Subtype_Declaration =>\n@@ -2360,7 +2366,7 @@ package body Sem_SPARK is\n             | N_Use_Type_Clause\n             | N_Validate_Unchecked_Conversion\n             | N_Variable_Reference_Marker\n-            =>\n+         =>\n             null;\n \n          --  The following nodes are rewritten by semantic analysis\n@@ -4240,8 +4246,8 @@ package body Sem_SPARK is\n \n    procedure Process_Path (N : Node_Id) is\n       Root : constant Entity_Id := Get_Enclosing_Object (N);\n-   begin\n \n+   begin\n       --  We ignore if yielding to synchronized\n \n       if Present (Root)\n@@ -4609,17 +4615,14 @@ package body Sem_SPARK is\n       --  Shallow unaliased parameters and globals cannot introduce pointer\n       --  aliasing.\n \n-      if not Has_Alias (Id)\n-        and then Is_Shallow (Etype (Id))\n-      then\n+      if not Has_Alias (Id) and then Is_Shallow (Etype (Id)) then\n          null;\n \n       --  Observed IN parameters and globals need not return a permission to\n       --  the caller.\n \n       elsif Mode = E_In_Parameter\n-        and then (not Is_Borrowed_In (Id)\n-                   or else Global_Var)\n+        and then (not Is_Borrowed_In (Id) or else Global_Var)\n       then\n          null;\n \n@@ -4884,10 +4887,7 @@ package body Sem_SPARK is\n    -- Set_Perm_Prefixes_Assign --\n    ------------------------------\n \n-   function Set_Perm_Prefixes_Assign\n-     (N : Node_Id)\n-       return Perm_Tree_Access\n-   is\n+   function Set_Perm_Prefixes_Assign (N : Node_Id) return Perm_Tree_Access is\n       C : constant Perm_Tree_Access := Get_Perm_Tree (N);\n \n    begin\n@@ -4900,7 +4900,9 @@ package body Sem_SPARK is\n       case Kind (C) is\n          when Entire_Object =>\n             pragma Assert (Children_Permission (C) = Read_Write);\n+\n             --  Maroua: Children could have read_only perm. Why Read_Write?\n+\n             C.all.Tree.Permission := Read_Write;\n \n          when Reference =>\n@@ -4912,21 +4914,21 @@ package body Sem_SPARK is\n          when Array_Component =>\n             pragma Assert (C.all.Tree.Get_Elem /= null);\n \n-           --  Given that it is not possible to know which element has been\n-           --  assigned, then the permissions do not get changed in case of\n-           --  Array_Component.\n+            --  Given that it is not possible to know which element has been\n+            --  assigned, then the permissions do not get changed in case of\n+            --  Array_Component.\n \n             null;\n \n          when Record_Component =>\n             declare\n-               Perm : Perm_Kind := Read_Write;\n-\n                Comp : Perm_Tree_Access;\n+               Perm : Perm_Kind := Read_Write;\n \n             begin\n-            --  We take the Glb of all the descendants, and then update the\n-            --  permission of the node with it.\n+               --  We take the Glb of all the descendants, and then update the\n+               --  permission of the node with it.\n+\n                Comp := Perm_Tree_Maps.Get_First (Component (C));\n                while Comp /= null loop\n                   Perm := Glb (Perm, Permission (Comp));\n@@ -4940,6 +4942,7 @@ package body Sem_SPARK is\n       end case;\n \n       case Nkind (N) is\n+\n          --  Base identifier. End recursion here.\n \n          when N_Identifier\n@@ -6212,4 +6215,5 @@ package body Sem_SPARK is\n          Next_Formal (Formal);\n       end loop;\n    end Setup_Parameters;\n+\n end Sem_SPARK;"}]}