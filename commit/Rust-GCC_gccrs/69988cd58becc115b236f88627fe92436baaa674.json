{"sha": "69988cd58becc115b236f88627fe92436baaa674", "node_id": "C_kwDOANBUbNoAKDY5OTg4Y2Q1OGJlY2MxMTViMjM2Zjg4NjI3ZmU5MjQzNmJhYWE2NzQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T09:15:43Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T12:50:17Z"}, "message": "The true side of x != x should set NAN.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_not_equal::op1_range): Set NAN on\n\tTRUE side for x != x.", "tree": {"sha": "e0c80e32456104204484c038443e3da3cc333985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0c80e32456104204484c038443e3da3cc333985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69988cd58becc115b236f88627fe92436baaa674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69988cd58becc115b236f88627fe92436baaa674", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69988cd58becc115b236f88627fe92436baaa674", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69988cd58becc115b236f88627fe92436baaa674/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58fa21622b01d6064024c92bb09fb60fa5b75977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fa21622b01d6064024c92bb09fb60fa5b75977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fa21622b01d6064024c92bb09fb60fa5b75977"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "5ffe38da53a9efb5214e86860c264fdb6cb312fd", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69988cd58becc115b236f88627fe92436baaa674/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69988cd58becc115b236f88627fe92436baaa674/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=69988cd58becc115b236f88627fe92436baaa674", "patch": "@@ -497,14 +497,17 @@ bool\n foperator_not_equal::op1_range (frange &r, tree type,\n \t\t\t\tconst irange &lhs,\n \t\t\t\tconst frange &op2,\n-\t\t\t\trelation_kind) const\n+\t\t\t\trelation_kind rel) const\n {\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n+      // The TRUE side of op1 != op1 implies op1 is NAN.\n+      if (rel == VREL_EQ)\n+\tr.set_nan (type);\n       // If the result is true, the only time we know anything is if\n       // OP2 is a constant.\n-      if (op2.singleton_p ())\n+      else if (op2.singleton_p ())\n \t{\n \t  // This is correct even if op1 is NAN, because the following\n \t  // range would be ~[tmp, tmp] with the NAN property set to"}]}