{"sha": "8496e135b111424e3c84f3f44c74f2cbe48eed90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ5NmUxMzViMTExNDI0ZTNjODRmM2Y0NGM3NGYyY2JlNDhlZWQ5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-07T20:09:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-07T20:09:14Z"}, "message": "c++: Make PR92654 testcase valid.", "tree": {"sha": "525830fda6b6a65deda7e1f7b5ebea4b388fdc55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/525830fda6b6a65deda7e1f7b5ebea4b388fdc55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8496e135b111424e3c84f3f44c74f2cbe48eed90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8496e135b111424e3c84f3f44c74f2cbe48eed90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8496e135b111424e3c84f3f44c74f2cbe48eed90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8496e135b111424e3c84f3f44c74f2cbe48eed90/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e042b396e2a84e3ee17bc52def1bf241cb7d248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e042b396e2a84e3ee17bc52def1bf241cb7d248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e042b396e2a84e3ee17bc52def1bf241cb7d248"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "192c82d34fdedadef7407af9dfaec9465d62ba77", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if-lambda2.C", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8496e135b111424e3c84f3f44c74f2cbe48eed90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if-lambda2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8496e135b111424e3c84f3f44c74f2cbe48eed90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if-lambda2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if-lambda2.C?ref=8496e135b111424e3c84f3f44c74f2cbe48eed90", "patch": "@@ -1,12 +1,17 @@\n // PR c++/92654\n // { dg-do compile { target c++17 } }\n \n-template <unsigned long> struct C;\n+struct A {\n+  constexpr operator int () { return 42; }\n+};\n+template <int I> struct C {\n+  static const bool ap = I;\n+};\n template <auto I>\n void am() {\n   [](auto an)\n      {\n-       if constexpr (C<an>::ap) ; // { dg-error \"constant\" }\n-     }(42);\n+       if constexpr (C<an>::ap) ;\n+     }(A{});\n }\n void fn() { am<42>(); }"}]}