{"sha": "47c0d9de92723e805c6167ff53e850dfe3354e9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjMGQ5ZGU5MjcyM2U4MDVjNjE2N2ZmNTNlODUwZGZlMzM1NGU5Zg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1995-03-18T02:31:09Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1995-03-18T02:31:09Z"}, "message": "* libgcc2.c (__register_exceptions): Handle empty tables.\n\nFrom-SVN: r9200", "tree": {"sha": "f269f291d97eaac2e4a412b23d194a3fe0111e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f269f291d97eaac2e4a412b23d194a3fe0111e3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47c0d9de92723e805c6167ff53e850dfe3354e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c0d9de92723e805c6167ff53e850dfe3354e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c0d9de92723e805c6167ff53e850dfe3354e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c0d9de92723e805c6167ff53e850dfe3354e9f/comments", "author": null, "committer": null, "parents": [{"sha": "0ea6b275aa84087aeb90313f41d1046a83746846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea6b275aa84087aeb90313f41d1046a83746846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea6b275aa84087aeb90313f41d1046a83746846"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "bd33d1c489c60a9fa9262e392097a32315fa9b7d", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c0d9de92723e805c6167ff53e850dfe3354e9f/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c0d9de92723e805c6167ff53e850dfe3354e9f/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=47c0d9de92723e805c6167ff53e850dfe3354e9f", "patch": "@@ -2237,9 +2237,14 @@ __throw_type_match (const char *catch_type, const char *throw_type)\n void\n __register_exceptions (exception_table *table)\n {\n-  struct exception_table_node *node = (struct exception_table_node*)\n-      malloc (sizeof (struct exception_table_node));\n+  struct exception_table_node *node;\n   exception_table *range = table + 1;\n+\n+  if (range->start == (void*)-1)\n+    return;\n+\n+  node = (struct exception_table_node*)\n+    malloc (sizeof (struct exception_table_node));\n   node->table = table;\n \n   /* This look can be optimized away either if the table"}]}