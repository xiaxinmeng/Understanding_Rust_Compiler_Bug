{"sha": "c411011287f707d42fd582a01de2ed0d36867211", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQxMTAxMTI4N2Y3MDdkNDJmZDU4MmEwMWRlMmVkMGQzNjg2NzIxMQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-29T00:16:20Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-29T00:16:20Z"}, "message": "Daily bump.", "tree": {"sha": "56795aed02b9db5569ad962628f77a5d85f9fdda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56795aed02b9db5569ad962628f77a5d85f9fdda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c411011287f707d42fd582a01de2ed0d36867211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c411011287f707d42fd582a01de2ed0d36867211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c411011287f707d42fd582a01de2ed0d36867211", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c411011287f707d42fd582a01de2ed0d36867211/comments", "author": null, "committer": null, "parents": [{"sha": "499fa254ae8c9752d8c2cf3130b13ffddfd83546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499fa254ae8c9752d8c2cf3130b13ffddfd83546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499fa254ae8c9752d8c2cf3130b13ffddfd83546"}], "stats": {"total": 88, "additions": 87, "deletions": 1}, "files": [{"sha": "4331c756d6113052e1f27c08dc24fef9f2a65324", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c411011287f707d42fd582a01de2ed0d36867211/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c411011287f707d42fd582a01de2ed0d36867211/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c411011287f707d42fd582a01de2ed0d36867211", "patch": "@@ -1,3 +1,13 @@\n+2021-03-28  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_output_dwarf_dtprel): Do not add\n+\tXCOFF TLS reloc decorations.\n+\n+2021-03-28  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/analyzer.texi (Analyzer Internals): Update link to\n+\t\"A Memory Model for Static Analysis of C Programs\".\n+\n 2021-03-26  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/aix.h (ADJUST_FIELD_ALIGN): Call function."}, {"sha": "173e3266e8f506ead882ef310bc28c67449f6364", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c411011287f707d42fd582a01de2ed0d36867211/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c411011287f707d42fd582a01de2ed0d36867211/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=c411011287f707d42fd582a01de2ed0d36867211", "patch": "@@ -1 +1 @@\n-20210328\n+20210329"}, {"sha": "90a9f69b63836f9f4e6af9c88532b56ae291bd82", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c411011287f707d42fd582a01de2ed0d36867211/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c411011287f707d42fd582a01de2ed0d36867211/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=c411011287f707d42fd582a01de2ed0d36867211", "patch": "@@ -1,3 +1,33 @@\n+2021-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_init_versions): Predefine D_PIE if flag_pie is set.\n+\n+2021-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_enum_underlying_base_type): New function.\n+\t(LANG_HOOKS_ENUM_UNDERLYING_BASE_TYPE): Set as\n+\td_enum_underlying_base_type.\n+\n+2021-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (DMDGEN_COMPILE): Remove.\n+\t(d/%.dmdgen.o): Use COMPILER_FOR_BUILD and BUILD_COMPILERFLAGS to\n+\tbuild all D generator programs.\n+\t(D_SYSTEM_H): New macro.\n+\t(d/idgen.dmdgen.o): Add dependencies to build.\n+\t(d/impcnvgen.dmdgen.o): Likewise.\n+\t* d-system.h: Include bconfig.h if GENERATOR_FILE is defined.\n+\n+2021-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config-lang.in (gtfiles): Remove modules.cc.\n+\t* modules.cc (struct module_info): Remove GTY marker.\n+\t(static_ctor_list): Remove variable.\n+\t(static_dtor_list): Remove variable.\n+\t(register_moduleinfo): Directly set DECL_STATIC_CONSTRUCTOR on\n+\tdso_ctor, and DECL_STATIC_DESTRUCTOR on dso_dtor.\n+\t(d_finish_compilation): Remove static ctor/dtor handling.\n+\n 2021-03-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-lang.cc (d_init_options_struct): Don't set default"}, {"sha": "d6c8c383fd5810235298b5884099e71f44b3d14e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c411011287f707d42fd582a01de2ed0d36867211/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c411011287f707d42fd582a01de2ed0d36867211/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c411011287f707d42fd582a01de2ed0d36867211", "patch": "@@ -1,3 +1,10 @@\n+2021-03-28  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99602\n+\t* trans-expr.c (gfc_conv_procedure_call): Use the _data attrs\n+\tfor class expressions and detect proc pointer evaluations by\n+\tthe non-null actual argument list.\n+\n 2021-03-27  Steve Kargl  <kargl@gcc.gnu.org>\n \n \t* misc.c (gfc_typename): Fix off-by-one in buffer sizes."}, {"sha": "557db475f63c3fd40ac166746b09f5f58264d406", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c411011287f707d42fd582a01de2ed0d36867211/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c411011287f707d42fd582a01de2ed0d36867211/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c411011287f707d42fd582a01de2ed0d36867211", "patch": "@@ -1,3 +1,30 @@\n+2021-03-28  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/96770\n+\t* gcc.target/arm/pure-code/pr96770.c: Improve scan-assembler-times.\n+\n+2021-03-28  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99602\n+\t* gfortran.dg/pr99602.f90: New test.\n+\t* gfortran.dg/pr99602a.f90: New test.\n+\t* gfortran.dg/pr99602b.f90: New test.\n+\t* gfortran.dg/pr99602c.f90: New test.\n+\t* gfortran.dg/pr99602d.f90: New test.\n+\n+2021-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lib/gdc-utils.exp (gdc-copy-extra): Rename to...\n+\t(gdc-copy-file): ... this.  Use file copy instead of open/close.\n+\t(gdc-convert-test): Save translated dejagnu test to gdc.test\n+\tdirectory, only write dejagnu directives to the test file.\n+\t(gdc-do-test): Don't create gdc.test symlink.\n+\n+2021-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.dg/gdc270a.d: Removed.\n+\t* gdc.dg/gdc270b.d: Removed.\n+\n 2021-03-26  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.target/powerpc/pr99557.c: New."}, {"sha": "2fdf6f5cba0c2effe90f0f9c2479baa59caf3399", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c411011287f707d42fd582a01de2ed0d36867211/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c411011287f707d42fd582a01de2ed0d36867211/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c411011287f707d42fd582a01de2ed0d36867211", "patch": "@@ -1,3 +1,15 @@\n+2021-03-28  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/forward_list\n+\t(forward_list(forward_list&&, const allocator_type&)): Add noexcept qualification.\n+\t* include/debug/list (list(list&&, const allocator_type&)): Likewise and add\n+\tcall to safe container allocator aware move constructor.\n+\t* include/debug/vector (vector(vector&&, const allocator_type&)):\n+\tFix noexcept qualification.\n+\t* testsuite/23_containers/forward_list/cons/noexcept_move_construct.cc:\n+\tAdd allocator-extended move constructor noexceot qualification check.\n+\t* testsuite/23_containers/list/cons/noexcept_move_construct.cc: Likewise.\n+\n 2021-03-26  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* src/c++11/random.cc (USE_LCG): Define when a pseudo-random"}]}