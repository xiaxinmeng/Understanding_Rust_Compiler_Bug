{"sha": "f591bd8f507db985a2d194b3b58b5d8b128dce0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU5MWJkOGY1MDdkYjk4NWEyZDE5NGIzYjU4YjVkOGIxMjhkY2UwYQ==", "commit": {"author": {"name": "Florian Weimer", "email": "fweimer@redhat.com", "date": "2012-10-04T15:33:11Z"}, "committer": {"name": "Florian Weimer", "email": "fw@gcc.gnu.org", "date": "2012-10-04T15:33:11Z"}, "message": "Implement #pragma GCC warning/error\n\n2012-10-04  Florian Weimer  <fweimer@redhat.com>\n\n\t* doc/cpp.texi (Pragmas): Document #pragma GCC warning, #pragma\n\tGCC error.\n\n2012-10-04  Florian Weimer  <fweimer@redhat.com>\n\n\t* c-c++-common/cpp/diagnostic-pragma-1.c: New testcase.\n\n2012-10-04  Florian Weimer  <fweimer@redhat.com>\n\n\t* directives.c (do_pragma_warning_or_error): New.\n\t(do_pragma_warning): New.\n\t(do_pragma_error): New.\n\t(_cpp_init_internal_pragmas): Register new pragmas.\n\nFrom-SVN: r192084", "tree": {"sha": "3992b4ad76993de282e9b81bbe8d85f5c7834619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3992b4ad76993de282e9b81bbe8d85f5c7834619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f591bd8f507db985a2d194b3b58b5d8b128dce0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f591bd8f507db985a2d194b3b58b5d8b128dce0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f591bd8f507db985a2d194b3b58b5d8b128dce0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f591bd8f507db985a2d194b3b58b5d8b128dce0a/comments", "author": {"login": "fweimer-rh", "id": 75532728, "node_id": "MDQ6VXNlcjc1NTMyNzI4", "avatar_url": "https://avatars.githubusercontent.com/u/75532728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fweimer-rh", "html_url": "https://github.com/fweimer-rh", "followers_url": "https://api.github.com/users/fweimer-rh/followers", "following_url": "https://api.github.com/users/fweimer-rh/following{/other_user}", "gists_url": "https://api.github.com/users/fweimer-rh/gists{/gist_id}", "starred_url": "https://api.github.com/users/fweimer-rh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fweimer-rh/subscriptions", "organizations_url": "https://api.github.com/users/fweimer-rh/orgs", "repos_url": "https://api.github.com/users/fweimer-rh/repos", "events_url": "https://api.github.com/users/fweimer-rh/events{/privacy}", "received_events_url": "https://api.github.com/users/fweimer-rh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c62b924434c30cc417df9c1f0bac770e653f0241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62b924434c30cc417df9c1f0bac770e653f0241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62b924434c30cc417df9c1f0bac770e653f0241"}], "stats": {"total": 81, "additions": 78, "deletions": 3}, "files": [{"sha": "959086c98b1c3de789e5bcb7152b9274f1f0d463", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f591bd8f507db985a2d194b3b58b5d8b128dce0a", "patch": "@@ -1,3 +1,8 @@\n+2012-10-04  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* doc/cpp.texi (Pragmas): Document #pragma GCC warning, #pragma\n+\tGCC error.\n+\n 2012-10-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/54735"}, {"sha": "fa5989e6bde9adbc563774a5d9ecd1728d632190", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=f591bd8f507db985a2d194b3b58b5d8b128dce0a", "patch": "@@ -3634,6 +3634,15 @@ This pragma takes no arguments.  It causes the rest of the code in the\n current file to be treated as if it came from a system header.\n @xref{System Headers}.\n \n+@item #pragma GCC warning\n+@itemx #pragma GCC error\n+@code{#pragma GCC warning \"message\"} causes the preprocessor to issue\n+a warning diagnostic with the text @samp{message}.  The message\n+contained in the pragma must be a single string literal.  Similarly,\n+@code{#pragma GCC error \"message\"} issues an error message.  Unlike\n+the @samp{#warning} and @samp{#error} directives, these pragmas can be\n+embedded in preprocessor macros using @samp{_Pragma}.\n+\n @end ftable\n \n @node Other Directives"}, {"sha": "e058566582df8c9b4cf6e85754df2e5c440b8124", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f591bd8f507db985a2d194b3b58b5d8b128dce0a", "patch": "@@ -1,3 +1,7 @@\n+2012-10-04  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* c-c++-common/cpp/diagnostic-pragma-1.c: New testcase.\n+\n 2012-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54323"}, {"sha": "9867c94a8ddc3683d420146b42c88ca8da923b31", "filename": "gcc/testsuite/c-c++-common/cpp/diagnostic-pragma-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fdiagnostic-pragma-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f591bd8f507db985a2d194b3b58b5d8b128dce0a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fdiagnostic-pragma-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fdiagnostic-pragma-1.c?ref=f591bd8f507db985a2d194b3b58b5d8b128dce0a", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile }\n+\n+#pragma GCC warning \"warn-a\" // { dg-warning warn-a }\n+#pragma GCC error \"err-b\" // { dg-error err-b }\n+\n+#define CONST1 _Pragma(\"GCC warning \\\"warn-c\\\"\") 1\n+#define CONST2 _Pragma(\"GCC error \\\"err-d\\\"\") 2\n+\n+char a[CONST1]; // { dg-warning warn-c }\n+char b[CONST2]; // { dg-error err-d }\n+"}, {"sha": "957b216d4a0e806622f33281fcad0b04733231ff", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f591bd8f507db985a2d194b3b58b5d8b128dce0a/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f591bd8f507db985a2d194b3b58b5d8b128dce0a/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=f591bd8f507db985a2d194b3b58b5d8b128dce0a", "patch": "@@ -1,3 +1,10 @@\n+2012-10-04  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* directives.c (do_pragma_warning_or_error): New.\n+\t(do_pragma_warning): New.\n+\t(do_pragma_error): New.\n+\t(_cpp_init_internal_pragmas): Register new pragmas.\n+\n 2012-09-25  Dehao Chen  <dehao@google.com>\n \n \tPR middle-end/54704"}, {"sha": "3c79b6d72f99ec4be20195a539de363dedcb22c7", "filename": "libcpp/directives.c", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f591bd8f507db985a2d194b3b58b5d8b128dce0a/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f591bd8f507db985a2d194b3b58b5d8b128dce0a/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=f591bd8f507db985a2d194b3b58b5d8b128dce0a", "patch": "@@ -1,7 +1,5 @@\n /* CPP Library. (Directive handling.)\n-   Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+   Copyright (C) 1986-2012 Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -118,6 +116,9 @@ static void do_pragma_once (cpp_reader *);\n static void do_pragma_poison (cpp_reader *);\n static void do_pragma_system_header (cpp_reader *);\n static void do_pragma_dependency (cpp_reader *);\n+static void do_pragma_warning_or_error (cpp_reader *, bool error);\n+static void do_pragma_warning (cpp_reader *);\n+static void do_pragma_error (cpp_reader *);\n static void do_linemarker (cpp_reader *);\n static const cpp_token *get_token_no_padding (cpp_reader *);\n static const cpp_token *get__Pragma_string (cpp_reader *);\n@@ -1263,6 +1264,8 @@ _cpp_init_internal_pragmas (cpp_reader *pfile)\n   register_pragma_internal (pfile, \"GCC\", \"system_header\",\n \t\t\t    do_pragma_system_header);\n   register_pragma_internal (pfile, \"GCC\", \"dependency\", do_pragma_dependency);\n+  register_pragma_internal (pfile, \"GCC\", \"warning\", do_pragma_warning);\n+  register_pragma_internal (pfile, \"GCC\", \"error\", do_pragma_error);\n }\n \n /* Return the number of registered pragmas in PE.  */\n@@ -1634,6 +1637,42 @@ do_pragma_dependency (cpp_reader *pfile)\n   free ((void *) fname);\n }\n \n+/* Issue a diagnostic with the message taken from the pragma.  If\n+   ERROR is true, the diagnostic is a warning, otherwise, it is an\n+   error.  */\n+static void\n+do_pragma_warning_or_error (cpp_reader *pfile, bool error)\n+{\n+  const cpp_token *tok = _cpp_lex_token (pfile);\n+  cpp_string str;\n+  if (tok->type != CPP_STRING\n+      || !cpp_interpret_string_notranslate (pfile, &tok->val.str, 1, &str,\n+\t\t\t\t\t    CPP_STRING)\n+      || str.len == 0)\n+    {\n+      cpp_error (pfile, CPP_DL_ERROR, \"invalid \\\"#pragma GCC %s\\\" directive\",\n+\t\t error ? \"error\" : \"warning\");\n+      return;\n+    }\n+  cpp_error (pfile, error ? CPP_DL_ERROR : CPP_DL_WARNING,\n+\t     \"%s\", str.text);\n+  free ((void *)str.text);\n+}\n+\n+/* Issue a warning diagnostic.  */\n+static void\n+do_pragma_warning (cpp_reader *pfile)\n+{\n+  do_pragma_warning_or_error (pfile, false);\n+}\n+\n+/* Issue an error diagnostic.  */\n+static void\n+do_pragma_error (cpp_reader *pfile)\n+{\n+  do_pragma_warning_or_error (pfile, true);\n+}\n+\n /* Get a token but skip padding.  */\n static const cpp_token *\n get_token_no_padding (cpp_reader *pfile)"}]}