{"sha": "d60c4c11a6144244519f3763417239fd9bc2e6e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwYzRjMTFhNjE0NDI0NDUxOWYzNzYzNDE3MjM5ZmQ5YmMyZTZlNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "2000-03-20T23:50:48Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2000-03-20T23:50:48Z"}, "message": "Add ia64 support.\n\n\t* f/target.h (FFETARGET_32bit_longs): New.  Define for alpha, sparc64,\n\tand ia64.\n\t(ffetargetInteger1, ffetargetLogical1, ffetargetReal1, ffetargetReal2,\n\tffetarget_integerdefault_is_magical): Use FFETARGET_32bit_longs.\n\nFrom-SVN: r32658", "tree": {"sha": "484d1dd473a36ceebf7f591747723ea570cdc3d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/484d1dd473a36ceebf7f591747723ea570cdc3d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d60c4c11a6144244519f3763417239fd9bc2e6e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60c4c11a6144244519f3763417239fd9bc2e6e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60c4c11a6144244519f3763417239fd9bc2e6e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60c4c11a6144244519f3763417239fd9bc2e6e4/comments", "author": null, "committer": null, "parents": [{"sha": "1c882ea4e71916155a8e51691c816efcf540c8c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c882ea4e71916155a8e51691c816efcf540c8c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c882ea4e71916155a8e51691c816efcf540c8c9"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "827142beefb5d7f0acd46548d7b32cba1da661cb", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60c4c11a6144244519f3763417239fd9bc2e6e4/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60c4c11a6144244519f3763417239fd9bc2e6e4/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=d60c4c11a6144244519f3763417239fd9bc2e6e4", "patch": "@@ -1,3 +1,10 @@\n+Mon Mar 20 15:49:40 2000  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* f/target.h (FFETARGET_32bit_longs): New.  Define for alpha, sparc64,\n+\tand ia64.\n+\t(ffetargetInteger1, ffetargetLogical1, ffetargetReal1, ffetargetReal2,\n+\tffetarget_integerdefault_is_magical): Use FFETARGET_32bit_longs.\n+\n Fri Mar 10 00:43:55 2000  Jason Merrill  <jason@casey.cygnus.com>\n \n \t* com.c (ffecom_stabilize_aggregate_): Don't refer to TREE_RAISES."}, {"sha": "4efc97348554ebfbabe12fb64860641637a562b4", "filename": "gcc/f/target.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60c4c11a6144244519f3763417239fd9bc2e6e4/gcc%2Ff%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60c4c11a6144244519f3763417239fd9bc2e6e4/gcc%2Ff%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.h?ref=d60c4c11a6144244519f3763417239fd9bc2e6e4", "patch": "@@ -234,6 +234,10 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define FFETARGET_f2cTYLOGICAL2 13\n #define FFETARGET_f2cTYQUAD 14\n \n+#if !defined(__alpha__) && (!defined(__sparc__) || (!defined(__sparcv9) && !defined(__arch64__))) && (!defined(__ia64__) || !defined(__LP64__))\n+#define FFETARGET_32bit_longs\n+#endif\n+\n /* Typedefs. */\n \n typedef unsigned char ffetargetAlign;\t/* ffetargetOffset for alignment. */\n@@ -247,7 +251,7 @@ typedef long long ffetargetOffset;\n #define ffetargetOffset_f \"ll\"\n \n #if FFETARGET_okINTEGER1\n-#if !defined(__alpha__) && (!defined(__sparc__) || (!defined(__sparcv9) && !defined(__arch64__)))\n+#ifdef FFETARGET_32bit_longs\n typedef long int ffetargetInteger1;\n #define ffetargetInteger1_f \"l\"\n #else\n@@ -288,7 +292,7 @@ typedef ? ffetargetInteger8;\n ?\n #endif\n #if FFETARGET_okLOGICAL1\n-#if !defined(__alpha__) && (!defined(__sparc__) || (!defined(__sparcv9) && !defined(__arch64__)))\n+#ifdef FFETARGET_32bit_longs\n typedef long int ffetargetLogical1;\n #define ffetargetLogical1_f \"l\"\n #else\n@@ -330,7 +334,7 @@ typedef ? ffetargetLogical8;\n #endif\n #if FFETARGET_okREAL1\n #ifdef REAL_ARITHMETIC\n-#if !defined(__alpha__) && (!defined(__sparc__) || (!defined(__sparcv9) && !defined(__arch64__)))\n+#ifdef FFETARGET_32bit_longs\n typedef long int ffetargetReal1;\n #define ffetargetReal1_f \"l\"\n #define ffetarget_cvt_r1_to_rv_ REAL_VALUE_UNTO_TARGET_SINGLE\n@@ -354,7 +358,7 @@ typedef float ffetargetReal1;\n #endif\n #if FFETARGET_okREAL2\n #ifdef REAL_ARITHMETIC\n-#if !defined(__alpha__) && (!defined(__sparc__) || (!defined(__sparcv9) && !defined(__arch64__)))\n+#ifdef FFETARGET_32bit_longs\n typedef struct\n   {\n     long int v[2];\n@@ -1496,7 +1500,7 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n #define ffetarget_init_2()\n #define ffetarget_init_3()\n #define ffetarget_init_4()\n-#if !defined(__alpha__) && (!defined(__sparc__) || (!defined(__sparcv9) && !defined(__arch64__)))\n+#ifdef FFETARGET_32bit_longs\n #define ffetarget_integerdefault_is_magical(i) \\\n   (((unsigned long int) i) == FFETARGET_integerBIG_MAGICAL)\n #else"}]}