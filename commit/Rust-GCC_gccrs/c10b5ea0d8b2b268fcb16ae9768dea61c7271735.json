{"sha": "c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEwYjVlYTBkOGIyYjI2OGZjYjE2YWU5NzY4ZGVhNjFjNzI3MTczNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-04-17T17:09:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-04-17T17:09:20Z"}, "message": "re PR bootstrap/62077 (--with-build-config=bootstrap-lto fails)\n\n\tPR bootstrap/62077\n\t* configure.ac (--enable-stage1-checking): Default to\n\trelease,misc,gimple,rtlflag,tree,types if --disable-checking\n\tor --enable-checking is not specified and DEV-PHASE is not\n\texperimental.\n\t* configure: Regenerated.\n\nFrom-SVN: r222187", "tree": {"sha": "0a24fde01f96bf6a5dde201b5fcbad0833e24669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a24fde01f96bf6a5dde201b5fcbad0833e24669"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98c1627cb57af18a873847eda17b5a15e7cec03a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c1627cb57af18a873847eda17b5a15e7cec03a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c1627cb57af18a873847eda17b5a15e7cec03a"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "88dc50ee3499e9af30c9a06e0969844151aaa2a9", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "patch": "@@ -1,3 +1,12 @@\n+2015-04-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/62077\n+\t* configure.ac (--enable-stage1-checking): Default to\n+\trelease,misc,gimple,rtlflag,tree,types if --disable-checking\n+\tor --enable-checking is not specified and DEV-PHASE is not\n+\texperimental.\n+\t* configure: Regenerated.\n+\n 2015-04-14  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* Makefile.tpl (EXTRA_HOST_EXPORTS): New variables."}, {"sha": "7616f88a447b906930f717319100dce94771c989", "filename": "configure", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "patch": "@@ -14761,7 +14761,19 @@ if test \"${enable_stage1_checking+set}\" = set; then :\n   enableval=$enable_stage1_checking; stage1_checking=--enable-checking=${enable_stage1_checking}\n else\n   if test \"x$enable_checking\" = xno || test \"x$enable_checking\" = x; then\n-  stage1_checking=--enable-checking=yes,types\n+  # For --disable-checking or implicit --enable-checking=release, avoid\n+  # setting --enable-checking=gc in the default stage1 checking for LTO\n+  # bootstraps.  See PR62077.\n+  stage1_checking=--enable-checking=release,misc,gimple,rtlflag,tree,types\n+  case $BUILD_CONFIG in\n+    *lto*)\n+      if test \"x$enable_checking\" = x && \\\n+\t test -d ${srcdir}/gcc && \\\n+\t test x\"`cat ${srcdir}/gcc/DEV-PHASE`\" = xexperimental; then\n+\tstage1_checking=--enable-checking=yes,types\n+      fi;;\n+    *) stage1_checking=--enable-checking=yes,types;;\n+  esac\n else\n   stage1_checking=--enable-checking=$enable_checking,types\n fi"}, {"sha": "8c85a08c382f8de32a161df47fa80b06d72c2758", "filename": "configure.ac", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10b5ea0d8b2b268fcb16ae9768dea61c7271735/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=c10b5ea0d8b2b268fcb16ae9768dea61c7271735", "patch": "@@ -3482,7 +3482,19 @@ AC_ARG_ENABLE(stage1-checking,\n \t\t[choose additional checking for stage1 of the compiler])],\n [stage1_checking=--enable-checking=${enable_stage1_checking}],\n [if test \"x$enable_checking\" = xno || test \"x$enable_checking\" = x; then\n-  stage1_checking=--enable-checking=yes,types\n+  # For --disable-checking or implicit --enable-checking=release, avoid\n+  # setting --enable-checking=gc in the default stage1 checking for LTO\n+  # bootstraps.  See PR62077.\n+  stage1_checking=--enable-checking=release,misc,gimple,rtlflag,tree,types\n+  case $BUILD_CONFIG in\n+    *lto*)\n+      if test \"x$enable_checking\" = x && \\\n+\t test -d ${srcdir}/gcc && \\\n+\t test x\"`cat ${srcdir}/gcc/DEV-PHASE`\" = xexperimental; then\n+\tstage1_checking=--enable-checking=yes,types\n+      fi;;\n+    *) stage1_checking=--enable-checking=yes,types;;\n+  esac\n else\n   stage1_checking=--enable-checking=$enable_checking,types\n fi])"}]}