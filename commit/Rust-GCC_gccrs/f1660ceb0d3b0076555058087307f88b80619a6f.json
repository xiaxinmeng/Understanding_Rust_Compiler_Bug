{"sha": "f1660ceb0d3b0076555058087307f88b80619a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2NjBjZWIwZDNiMDA3NjU1NTA1ODA4NzMwN2Y4OGI4MDYxOWE2Zg==", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2020-07-22T07:27:49Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2020-07-29T08:44:12Z"}, "message": "vect: Fix infinite loop while determining peeling amount\n\nThis is a follow up to commit 5c9669a0e6c respectively discussion\nhttps://gcc.gnu.org/pipermail/gcc-patches/2020-June/549132.html\n\nIn case a type has a lower alignment than its size, ensure that we\nadvance.  For example, on s390x we have for a long double an alignment\nconstraint of 8 bytes whereas the size is 16 bytes.  Increasing the loop\nvariable only by TARGET_ALIGN / DR_SIZE which equals zero in case of a\nlong double results in an infinite loop.  This is fixed by ensuring that\nwe advance at least by one.\n\ngcc/ChangeLog:\n\n\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n\tEnsure that loop variable npeel_tmp advances in each iteration.", "tree": {"sha": "2618f154d4848882280c06f9a8c09dfd87cc3a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2618f154d4848882280c06f9a8c09dfd87cc3a66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1660ceb0d3b0076555058087307f88b80619a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1660ceb0d3b0076555058087307f88b80619a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1660ceb0d3b0076555058087307f88b80619a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1660ceb0d3b0076555058087307f88b80619a6f/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "269322ece17202632bc354e9c510e4a5bd6ad84b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269322ece17202632bc354e9c510e4a5bd6ad84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/269322ece17202632bc354e9c510e4a5bd6ad84b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a78ae61d1b07f0e43367f9b74c4995e0d481cebf", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1660ceb0d3b0076555058087307f88b80619a6f/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1660ceb0d3b0076555058087307f88b80619a6f/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=f1660ceb0d3b0076555058087307f88b80619a6f", "patch": "@@ -1779,7 +1779,7 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n                 {\n                   vect_peeling_hash_insert (&peeling_htab, loop_vinfo,\n \t\t\t\t\t    dr_info, npeel_tmp);\n-\t\t  npeel_tmp += target_align / dr_size;\n+\t\t  npeel_tmp += MAX (1, target_align / dr_size);\n                 }\n \n \t      one_misalignment_known = true;"}]}