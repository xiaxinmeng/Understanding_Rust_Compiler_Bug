{"sha": "def9623c20edb10be93391abe9a3c8c7e5788bb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVmOTYyM2MyMGVkYjEwYmU5MzM5MWFiZTlhM2M4YzdlNTc4OGJiNQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-04-18T19:55:42Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-04-18T19:55:42Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r780", "tree": {"sha": "468f5bcc7828e207dd2bc6081bd7a55294d0e387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/468f5bcc7828e207dd2bc6081bd7a55294d0e387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/def9623c20edb10be93391abe9a3c8c7e5788bb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/def9623c20edb10be93391abe9a3c8c7e5788bb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/def9623c20edb10be93391abe9a3c8c7e5788bb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/def9623c20edb10be93391abe9a3c8c7e5788bb5/comments", "author": null, "committer": null, "parents": [{"sha": "aeedc93fbae3f9aa761121167020569b65fb01d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeedc93fbae3f9aa761121167020569b65fb01d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeedc93fbae3f9aa761121167020569b65fb01d9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "866ce6f5b91f0c3ac3aa1e5a477d0fb23a816704", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/def9623c20edb10be93391abe9a3c8c7e5788bb5/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/def9623c20edb10be93391abe9a3c8c7e5788bb5/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=def9623c20edb10be93391abe9a3c8c7e5788bb5", "patch": "@@ -2193,7 +2193,7 @@ while (0)\n    CODE is the expression code--redundant, since it can be obtained\n    with `GET_CODE (X)'.  */\n \n-#define CONST_COSTS(X,CODE)\t\t\t\t\t\t\\\n+#define CONST_COSTS(X,CODE,OUTER_CODE)\t\t\t\t\t\\\n   case CONST_INT:\t\t\t\t\t\t\t\\\n     /* Always return 0, since we don't have different sized\t\t\\\n        instructions, hence different costs according to Richard\t\t\\\n@@ -2243,7 +2243,7 @@ while (0)\n    strength reduction, and also makes it easier to identify what the\n    compiler is doing.  */\n \n-#define RTX_COSTS(X,CODE)\t\t\t\t\t\t\\\n+#define RTX_COSTS(X,CODE,OUTER_CODE)\t\t\t\t\t\\\n   case MEM:\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       int num_words = (GET_MODE_SIZE (GET_MODE (X)) > UNITS_PER_WORD) ? 2 : 1; \\"}]}