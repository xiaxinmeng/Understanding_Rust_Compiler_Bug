{"sha": "0e0335e36a45b4411427a58f8cd0584ad750e0c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUwMzM1ZTM2YTQ1YjQ0MTE0MjdhNThmOGNkMDU4NGFkNzUwZTBjNg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-02-12T10:10:28Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-02-12T10:10:28Z"}, "message": "Channels.java: New file.\n\n2003-02-12  Michael Koch  <konqueror@gmx.de>\n\n\t* java/nio/channels/Channels.java: New file.\n\t* Makefile.am\n\t(ordinary_java_source_files): Added java/nio/channels/Channels.java.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r62762", "tree": {"sha": "1532740e854d6b2f6220155d0440d918e8f9b209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1532740e854d6b2f6220155d0440d918e8f9b209"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e0335e36a45b4411427a58f8cd0584ad750e0c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0335e36a45b4411427a58f8cd0584ad750e0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e0335e36a45b4411427a58f8cd0584ad750e0c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0335e36a45b4411427a58f8cd0584ad750e0c6/comments", "author": null, "committer": null, "parents": [{"sha": "ad2e63d5df78b30935e27389a237330ba8c3a34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2e63d5df78b30935e27389a237330ba8c3a34e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2e63d5df78b30935e27389a237330ba8c3a34e"}], "stats": {"total": 141, "additions": 140, "deletions": 1}, "files": [{"sha": "fb06ebfacc1b5957901afb4958051b1bc5e4ad6b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0e0335e36a45b4411427a58f8cd0584ad750e0c6", "patch": "@@ -1,3 +1,10 @@\n+2003-02-12  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/nio/channels/Channels.java: New file.\n+\t* Makefile.am\n+\t(ordinary_java_source_files): Added java/nio/channels/Channels.java.\n+\t* Makefile.in: Regenerated.\n+\n 2003-02-12  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/ByteBuffer.java"}, {"sha": "e735ed804421040ba9623c021ab86d65ff712dba", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=0e0335e36a45b4411427a58f8cd0584ad750e0c6", "patch": "@@ -2159,6 +2159,7 @@ java/nio/channels/AsynchronousCloseException.java \\\n java/nio/channels/ByteChannel.java \\\n java/nio/channels/CancelledKeyException.java \\\n java/nio/channels/Channel.java \\\n+java/nio/channels/Channels.java \\\n java/nio/channels/ClosedByInterruptException.java \\\n java/nio/channels/ClosedChannelException.java \\\n java/nio/channels/ClosedSelectorException.java \\"}, {"sha": "e49fa19097152ce57751aa7c3cd05c2491b24583", "filename": "libjava/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=0e0335e36a45b4411427a58f8cd0584ad750e0c6", "patch": "@@ -1919,6 +1919,7 @@ java/nio/channels/AsynchronousCloseException.java \\\n java/nio/channels/ByteChannel.java \\\n java/nio/channels/CancelledKeyException.java \\\n java/nio/channels/Channel.java \\\n+java/nio/channels/Channels.java \\\n java/nio/channels/ClosedByInterruptException.java \\\n java/nio/channels/ClosedChannelException.java \\\n java/nio/channels/ClosedSelectorException.java \\\n@@ -3343,7 +3344,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/nio/channels/AsynchronousCloseException.P \\\n .deps/java/nio/channels/ByteChannel.P \\\n .deps/java/nio/channels/CancelledKeyException.P \\\n-.deps/java/nio/channels/Channel.P \\\n+.deps/java/nio/channels/Channel.P .deps/java/nio/channels/Channels.P \\\n .deps/java/nio/channels/ClosedByInterruptException.P \\\n .deps/java/nio/channels/ClosedChannelException.P \\\n .deps/java/nio/channels/ClosedSelectorException.P \\"}, {"sha": "d911b41d00b177c2e6bdc7f1e3e294d40cea5222", "filename": "libjava/java/nio/channels/Channels.java", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0335e36a45b4411427a58f8cd0584ad750e0c6/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java?ref=0e0335e36a45b4411427a58f8cd0584ad750e0c6", "patch": "@@ -0,0 +1,130 @@\n+/* Channels.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package java.nio.channels;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.Reader;\n+import java.io.Writer;\n+import java.nio.channels.WritableByteChannel;\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.CharsetEncoder;\n+\n+/**\n+ * @since 1.4\n+ */\n+public final class Channels \n+{\n+  /**\n+   * Constructs a stream that reads bytes from the given channel.\n+   */\n+  public static InputStream newInputStream (ReadableByteChannel ch)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+  \n+  /**\n+   * Constructs a stream that writes bytes to the given channel.\n+   */\n+  public static OutputStream newOutputStream (WritableByteChannel ch) \n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+  \n+  /**\n+   * Constructs a channel that reads bytes from the given stream.\n+   */\n+  public static ReadableByteChannel newChannel (InputStream in)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+  \n+  /**\n+   * Constructs a channel that writes bytes to the given stream.\n+   */\n+  public static WritableByteChannel newChannel (OutputStream out)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  /**\n+   * Constructs a reader that decodes bytes from the given channel using the\n+   * given decoder.\n+   */\n+  public static Reader newReader (ReadableByteChannel ch, CharsetDecoder dec,\n+                                  int minBufferCap)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  /**\n+   * Constructs a reader that decodes bytes from the given channel according to\n+   * the named charset.\n+   *\n+   * @exception UnsupportedCharsetException If no support for the named charset\n+   * is available in this instance of the Java virtual machine.\n+   */\n+  public static Reader newReader (ReadableByteChannel ch, String csName)\n+  {\n+    return newReader (ch, Charset.forName (csName).newDecoder (), -1);\n+  }\n+\n+  /**\n+   * Constructs a writer that encodes characters using the given encoder and\n+   * writes the resulting bytes to the given channel.\n+   */\n+  public static Writer newWriter (WritableByteChannel ch, CharsetEncoder enc,\n+                                  int minBufferCap)\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n+  /**\n+   * Constructs a writer that encodes characters according to the named charset\n+   * and writes the resulting bytes to the given channel.\n+   *\n+   * @exception UnsupportedCharsetException If no support for the named charset\n+   * is available in this instance of the Java virtual machine.\n+   */\n+  public static Writer newWriter (WritableByteChannel ch,\n+                                  String csName)\n+  {\n+    return newWriter (ch, Charset.forName (csName).newEncoder (), -1);\n+  }\n+}"}]}