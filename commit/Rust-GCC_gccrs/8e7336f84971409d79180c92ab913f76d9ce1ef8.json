{"sha": "8e7336f84971409d79180c92ab913f76d9ce1ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3MzM2Zjg0OTcxNDA5ZDc5MTgwYzkyYWI5MTNmNzZkOWNlMWVmOA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-02-15T22:28:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-15T22:28:33Z"}, "message": "toplev.c (flag_schedule_reverse_before_reload): Delete variable.\n\n        * toplev.c (flag_schedule_reverse_before_reload): Delete variable.\n        (flag_schedule_reverse_after_reload): Likewise.\n        (f_options): Remove reverse scheduling support.\n        * flags.h (flag_schedule_reverse_before_reload): Delete declaration.\n        (flag_schedule_reverse_after_reload): Likewise.\n        * haifa-sched.c (rank_for_schedule): Remove support for reverse\n        scheduling.\nTrivial cleanup.\n\nFrom-SVN: r18020", "tree": {"sha": "c33d77674471be47f59cb343f6a555032257c45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c33d77674471be47f59cb343f6a555032257c45c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7336f84971409d79180c92ab913f76d9ce1ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7336f84971409d79180c92ab913f76d9ce1ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7336f84971409d79180c92ab913f76d9ce1ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7336f84971409d79180c92ab913f76d9ce1ef8/comments", "author": null, "committer": null, "parents": [{"sha": "17248a6b14ca39f1314be1c00f796035ebfde1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17248a6b14ca39f1314be1c00f796035ebfde1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17248a6b14ca39f1314be1c00f796035ebfde1de"}], "stats": {"total": 35, "additions": 12, "deletions": 23}, "files": [{"sha": "472a5b34175bb367993a3f0796b3ce0dc52cda7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e7336f84971409d79180c92ab913f76d9ce1ef8", "patch": "@@ -1,3 +1,13 @@\n+Sun Feb 15 23:28:44 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* toplev.c (flag_schedule_reverse_before_reload): Delete variable.\n+\t(flag_schedule_reverse_after_reload): Likewise.\n+\t(f_options): Remove reverse scheduling support.\n+\t* flags.h (flag_schedule_reverse_before_reload): Delete declaration.\n+\t(flag_schedule_reverse_after_reload): Likewise.\n+\t* haifa-sched.c (rank_for_schedule): Remove support for reverse\n+\tscheduling.\n+\t\n Sun Feb 15 21:33:55 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.c: Get system includes, prototypes and macros via \"system.h\""}, {"sha": "fd1678bd734675f67f530c186d42d707e9b66e38", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=8e7336f84971409d79180c92ab913f76d9ce1ef8", "patch": "@@ -339,18 +339,12 @@ extern int flag_schedule_insns_after_reload;\n    flag_schedule_speculative_load means allow speculative motion of some\n    load insns.\n    flag_schedule_speculative_load_dangerous allows speculative motion of more\n-   load insns.\n-   flag_schedule_reverse_before_reload means try to reverse original order\n-   of insns (S).\n-   flag_schedule_reverse_after_reload means try to reverse original order\n-   of insns (R).  */\n+   load insns.  */\n \n extern int flag_schedule_interblock;\n extern int flag_schedule_speculative;\n extern int flag_schedule_speculative_load;\n extern int flag_schedule_speculative_load_dangerous;\n-extern int flag_schedule_reverse_before_reload;\n-extern int flag_schedule_reverse_after_reload;\n \n /* flag_on_branch_count_reg means try to replace add-1,compare,branch tupple\n    by a cheaper branch, on a count register. */"}, {"sha": "9c29876479e9579337eede9cd09ddc97295a8756", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=8e7336f84971409d79180c92ab913f76d9ce1ef8", "patch": "@@ -4133,12 +4133,6 @@ rank_for_schedule (x, y)\n   int val, priority_val, spec_val, prob_val, weight_val;\n \n \n-  /* schedule reverse is a stress test of the scheduler correctness,\n-     controlled by -fsched-reverse option.  */\n-  if ((reload_completed && flag_schedule_reverse_after_reload) ||\n-      (!reload_completed && flag_schedule_reverse_before_reload))\n-    return INSN_LUID (tmp2) - INSN_LUID (tmp);\n-\n   /* prefer insn with higher priority */\n   priority_val = INSN_PRIORITY (tmp2) - INSN_PRIORITY (tmp);\n   if (priority_val)"}, {"sha": "d3a3287c296eb03cc18d15467b02985d093cd91e", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7336f84971409d79180c92ab913f76d9ce1ef8/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8e7336f84971409d79180c92ab913f76d9ce1ef8", "patch": "@@ -624,19 +624,12 @@ int flag_schedule_insns_after_reload = 0;\n    flag_schedule_speculative_load means allow speculative motion of some\n    load insns.\n    flag_schedule_speculative_load_dangerous allows speculative motion of more\n-   load insns.\n-   flag_schedule_reverse_before_reload means try to reverse original order\n-   of insns (S).\n-   flag_schedule_reverse_after_reload means try to reverse original order\n-   of insns (R).  */\n+   load insns.  */\n \n int flag_schedule_interblock = 1;\n int flag_schedule_speculative = 1;\n int flag_schedule_speculative_load = 0;\n int flag_schedule_speculative_load_dangerous = 0;\n-int flag_schedule_reverse_before_reload = 0;\n-int flag_schedule_reverse_after_reload = 0;\n-\n \n /* flag_on_branch_count_reg means try to replace add-1,compare,branch tupple\n    by a cheaper branch, on a count register. */\n@@ -751,8 +744,6 @@ struct { char *string; int *variable; int on_value;} f_options[] =\n   {\"sched-spec\",&flag_schedule_speculative, 1},\n   {\"sched-spec-load\",&flag_schedule_speculative_load, 1},\n   {\"sched-spec-load-dangerous\",&flag_schedule_speculative_load_dangerous, 1},\n-  {\"sched-reverse-S\",&flag_schedule_reverse_before_reload, 1},\n-  {\"sched-reverse-R\",&flag_schedule_reverse_after_reload, 1},\n   {\"branch-count-reg\",&flag_branch_on_count_reg, 1},\n #endif  /* HAIFA */\n   {\"pic\", &flag_pic, 1},"}]}