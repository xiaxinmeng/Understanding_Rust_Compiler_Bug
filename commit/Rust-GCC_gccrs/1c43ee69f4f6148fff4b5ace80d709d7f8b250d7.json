{"sha": "1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0M2VlNjlmNGY2MTQ4ZmZmNGI1YWNlODBkNzA5ZDdmOGIyNTBkNw==", "commit": {"author": {"name": "Delia Burduv", "email": "delia.burduv@arm.com", "date": "2020-03-11T18:01:26Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-03-11T18:02:11Z"}, "message": "Bug fix: cannot convert 'const short int*' to 'const __bf16*'\n\nThis patch fixes a bug introduced by my earlier patch (\nhttps://gcc.gnu.org/pipermail/gcc-patches/2020-March/541680.html ).\nIt introduces a new scalar builtin type that was missing in the original\npatch.\n\nBootstrapped cleanly on arm-none-linux-gnueabihf.\nTested for regression on arm-none-linux-gnueabihf. No regression from\nbefore the original patch.\nTests that failed or became unsupported because of the original tests\nnow work as they did before it.\n\n\t* config/arm/arm-builtins.c\n\t(arm_init_simd_builtin_scalar_types): New.\n\t* config/arm/arm_neon.h (vld2_bf16): Used new builtin type.\n\t(vld2q_bf16): Used new builtin type.\n\t(vld3_bf16): Used new builtin type.\n\t(vld3q_bf16): Used new builtin type.\n\t(vld4_bf16): Used new builtin type.\n\t(vld4q_bf16): Used new builtin type.\n\t(vld2_dup_bf16): Used new builtin type.\n\t(vld2q_dup_bf16): Used new builtin type.\n\t(vld3_dup_bf16): Used new builtin type.\n\t(vld3q_dup_bf16): Used new builtin type.\n\t(vld4_dup_bf16): Used new builtin type.\n\t(vld4q_dup_bf16): Used new builtin type.", "tree": {"sha": "2aaad7d4c978bfd5c05566326c2fcc7d6a4c0223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aaad7d4c978bfd5c05566326c2fcc7d6a4c0223"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/comments", "author": null, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d42ff1d3b62521829d90e5b972baba2a0339e2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42ff1d3b62521829d90e5b972baba2a0339e2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42ff1d3b62521829d90e5b972baba2a0339e2bf"}], "stats": {"total": 45, "additions": 32, "deletions": 13}, "files": [{"sha": "dfc9b8e7c33bdf092eaabdb742fdee432eb2d225", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "patch": "@@ -1,3 +1,20 @@\n+2020-03-11  Delia Burduv  <delia.burduv@arm.com>\n+\n+\t* config/arm/arm-builtins.c\n+\t(arm_init_simd_builtin_scalar_types): New.\n+\t* config/arm/arm_neon.h (vld2_bf16): Used new builtin type.\n+\t(vld2q_bf16): Used new builtin type.\n+\t(vld3_bf16): Used new builtin type.\n+\t(vld3q_bf16): Used new builtin type.\n+\t(vld4_bf16): Used new builtin type.\n+\t(vld4q_bf16): Used new builtin type.\n+\t(vld2_dup_bf16): Used new builtin type.\n+\t(vld2q_dup_bf16): Used new builtin type.\n+\t(vld3_dup_bf16): Used new builtin type.\n+\t(vld3q_dup_bf16): Used new builtin type.\n+\t(vld4_dup_bf16): Used new builtin type.\n+\t(vld4q_dup_bf16): Used new builtin type.\n+\n 2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/94134"}, {"sha": "1f55898e946b7c84d4a557deda7d3ecba97ef9d7", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "patch": "@@ -784,6 +784,7 @@ const char *arm_scalar_builtin_types[] = {\n   \"__builtin_neon_oi\",\n   \"__builtin_neon_ci\",\n   \"__builtin_neon_xi\",\n+  \"__builtin_neon_bf\",\n   NULL\n };\n \n@@ -1101,7 +1102,8 @@ arm_init_simd_builtin_scalar_types (void)\n \t\t\t\t\t     \"__builtin_neon_df\");\n   (*lang_hooks.types.register_builtin_type) (intTI_type_node,\n \t\t\t\t\t     \"__builtin_neon_ti\");\n-\n+  (*lang_hooks.types.register_builtin_type) (arm_bf16_type_node,\n+                                             \"__builtin_neon_bf\");\n   /* Unsigned integer types for various mode sizes.  */\n   (*lang_hooks.types.register_builtin_type) (unsigned_intQI_type_node,\n \t\t\t\t\t     \"__builtin_neon_uqi\");"}, {"sha": "aa21730dea0ddff97e402f324d9b1ae994815ffc", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c43ee69f4f6148fff4b5ace80d709d7f8b250d7/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=1c43ee69f4f6148fff4b5ace80d709d7f8b250d7", "patch": "@@ -19562,7 +19562,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld2_bf16 (bfloat16_t const * __ptr)\n {\n   union { bfloat16x4x2_t __i; __builtin_neon_ti __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2v4bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld2v4bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19571,7 +19571,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld2q_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x8x2_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2v8bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld2v8bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19580,7 +19580,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld3_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x4x3_t __i; __builtin_neon_ei __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3v4bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld3v4bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19589,7 +19589,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld3q_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x8x3_t __i; __builtin_neon_ci __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3v8bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld3v8bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19598,7 +19598,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld4_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x4x4_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4v4bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld4v4bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19607,7 +19607,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld4q_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x8x4_t __i; __builtin_neon_xi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4v8bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld4v8bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19616,7 +19616,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld2_dup_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x4x2_t __i; __builtin_neon_ti __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2_dupv4bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld2_dupv4bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19625,7 +19625,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld2q_dup_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x8x2_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2_dupv8bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld2_dupv8bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19634,7 +19634,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld3_dup_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x4x3_t __i; __builtin_neon_ei __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3_dupv4bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld3_dupv4bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19643,7 +19643,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld3q_dup_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x8x3_t __i; __builtin_neon_ci __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3_dupv8bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld3_dupv8bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19652,7 +19652,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld4_dup_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x4x4_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4_dupv4bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld4_dupv4bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n \n@@ -19661,7 +19661,7 @@ __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vld4q_dup_bf16 (const bfloat16_t * __ptr)\n {\n   union { bfloat16x8x4_t __i; __builtin_neon_xi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4_dupv8bf ((const __builtin_neon_hi *) __ptr);\n+  __rv.__o = __builtin_neon_vld4_dupv8bf ((const __builtin_neon_bf *) __ptr);\n   return __rv.__i;\n }\n "}]}