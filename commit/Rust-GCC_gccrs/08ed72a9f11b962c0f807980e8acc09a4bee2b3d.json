{"sha": "08ed72a9f11b962c0f807980e8acc09a4bee2b3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhlZDcyYTlmMTFiOTYyYzBmODA3OTgwZThhY2MwOWE0YmVlMmIzZA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2001-09-13T09:53:28Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2001-09-13T09:53:28Z"}, "message": "float-m68k.h: Define DECIMAL_DIG and FLT_EVAL_METHOD for C99.\n\n\t* config/float-m68k.h: Define DECIMAL_DIG and FLT_EVAL_METHOD for\n\tC99.\n\nFrom-SVN: r45577", "tree": {"sha": "8f257cada360b2078c00583f9f27ce7b1c49c632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f257cada360b2078c00583f9f27ce7b1c49c632"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08ed72a9f11b962c0f807980e8acc09a4bee2b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ed72a9f11b962c0f807980e8acc09a4bee2b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ed72a9f11b962c0f807980e8acc09a4bee2b3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ed72a9f11b962c0f807980e8acc09a4bee2b3d/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "133d3133614e67b07891110d12ec1bfc6af58eb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/133d3133614e67b07891110d12ec1bfc6af58eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/133d3133614e67b07891110d12ec1bfc6af58eb0"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "bb91029575004f3386005cb66881e0335c800477", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ed72a9f11b962c0f807980e8acc09a4bee2b3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ed72a9f11b962c0f807980e8acc09a4bee2b3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08ed72a9f11b962c0f807980e8acc09a4bee2b3d", "patch": "@@ -1,3 +1,8 @@\n+2001-09-13  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/float-m68k.h: Define DECIMAL_DIG and FLT_EVAL_METHOD for\n+\tC99.\n+\n 2001-09-13  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (small_symbolic_operand): New."}, {"sha": "c942b1da913b4895124bec5595a62bc06b50a83c", "filename": "gcc/config/float-m68k.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08ed72a9f11b962c0f807980e8acc09a4bee2b3d/gcc%2Fconfig%2Ffloat-m68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08ed72a9f11b962c0f807980e8acc09a4bee2b3d/gcc%2Fconfig%2Ffloat-m68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-m68k.h?ref=08ed72a9f11b962c0f807980e8acc09a4bee2b3d", "patch": "@@ -94,7 +94,34 @@\n #undef LDBL_MAX_10_EXP\n #define LDBL_MAX_10_EXP 4932\n \n+#if __STDC_VERSION__ >= 199901L\n+   /* The floating-point expression evaluation method.\n+        -1  indeterminate\n+         0  evaluate all operations and constants just to the range and\n+            precision of the type\n+         1  evaluate operations and constants of type float and double\n+            to the range and precision of the double type, evaluate\n+            long double operations and constants to the range and\n+            precision of the long double type\n+         2  evaluate all operations and constants to the range and\n+            precision of the long double type\n+   */\n+\n /* ??? FLT_EVAL_METHOD depends on TARGET_68040_ONLY.  We do not currently\n    have a preprocessor token that we can use to tell that this is on.  */\n+# undef FLT_EVAL_METHOD\n+# define FLT_EVAL_METHOD -1\n+\n+   /* Number of decimal digits to enable rounding to the given number of\n+      decimal digits without loss of precision.\n+         if FLT_RADIX == 10^n:  #mantissa * log10 (FLT_RADIX)\n+         else                :  ceil (1 + #mantissa * log10 (FLT_RADIX))\n+      where #mantissa is the number of bits in the mantissa of the widest\n+      supported floating-point type.\n+   */\n+# undef DECIMAL_DIG\n+# define DECIMAL_DIG\t21\n+\n+#endif\t/* C99 */\n \n #endif /*  _FLOAT_H_ */"}]}