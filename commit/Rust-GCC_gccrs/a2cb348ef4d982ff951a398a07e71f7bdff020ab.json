{"sha": "a2cb348ef4d982ff951a398a07e71f7bdff020ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjYjM0OGVmNGQ5ODJmZjk1MWEzOThhMDdlNzFmN2JkZmYwMjBhYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-09-05T08:07:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T08:07:00Z"}, "message": "a-dirval-mingw.adb, [...]: Minor reformatting\n\n2005-09-01  Robert Dewar  <dewar@adacore.com>\n\n\t* a-dirval-mingw.adb, a-direct.adb, a-coinve.adb,\n\tg-dynhta.adb, g-dynhta.ads, cstand.adb, exp_smem.adb, g-debuti.ads,\n\tg-dirope.adb, g-table.adb, lib-sort.adb, sem_maps.adb,\n\texp_fixd.adb, exp_aggr.adb, a-intnam-mingw.ads, a-intnam-vxworks.ads,\n\tg-arrspl.adb, g-arrspl.ads, g-awk.adb, g-awk.ads, g-boubuf.ads,\n\tg-boubuf.ads, g-boubuf.ads, g-bubsor.ads, g-bubsor.adb, g-busora.adb,\n\tg-busora.ads, g-busorg.adb, g-busorg.ads, g-calend.adb, g-calend.ads,\n\tg-casuti.adb, g-casuti.ads, g-catiio.adb, g-catiio.ads, g-cgi.adb,\n\tg-cgi.ads, g-cgicoo.adb, g-cgicoo.ads, g-cgideb.adb, g-cgideb.ads,\n\tg-comlin.adb, g-comver.ads, g-semaph.ads, g-socthi.ads,\n\tsem_ch7.adb, a-direio.adb, a-caldel.ads, i-cstrea-vms.adb,\n\ta-ztedit.adb, a-ztenau.adb, g-socthi-vms.adb, g-socthi-vms.ads,\n\tg-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi-vxworks.ads,\n\ta-intnam-irix.ads, a-intnam-irix.ads, a-intnam-hpux.ads,\n\ta-intnam-os2.ads, a-intnam-os2.ads, a-caldel-vms.adb, a-calend-vms.adb,\n\ta-calend-vms.ads, g-heasor.adb, g-heasor.ads, g-hesora.adb,\n\tg-hesora.ads, g-hesorg.adb, g-hesorg.ads, g-htable.adb, g-htable.ads,\n\tg-io.adb, g-io.ads, g-io_aux.adb, g-io_aux.ads, g-locfil.ads,\n\tg-memdum.adb, g-memdum.ads, g-traceb.adb, g-traceb.ads, i-cobol.adb,\n\ti-cobol.ads, i-cstrea.ads, i-cstrin.adb, a-wtedit.adb, a-tifiio.adb,\n\ta-wtenau.adb, a-wtenau.adb, a-teioed.adb: Minor reformatting\n\nFrom-SVN: r103894", "tree": {"sha": "4719707ee1466c01c795cf2a027236826eba7d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4719707ee1466c01c795cf2a027236826eba7d41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2cb348ef4d982ff951a398a07e71f7bdff020ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cb348ef4d982ff951a398a07e71f7bdff020ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2cb348ef4d982ff951a398a07e71f7bdff020ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cb348ef4d982ff951a398a07e71f7bdff020ab/comments", "author": null, "committer": null, "parents": [{"sha": "f67b3771d51db363dc9c6e9d721b71568fceff14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67b3771d51db363dc9c6e9d721b71568fceff14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67b3771d51db363dc9c6e9d721b71568fceff14"}], "stats": {"total": 1245, "additions": 575, "deletions": 670}, "files": [{"sha": "9f50bb7a5799a47c4b5c72a842891aa8f67f7247", "filename": "gcc/ada/a-caldel-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-caldel-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-caldel-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-caldel-vms.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -32,7 +32,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Alpha/VMS version.\n+--  This is the Alpha/VMS version\n \n with System.OS_Primitives;\n --  Used for Max_Sensible_Delay"}, {"sha": "1de0d5c8d2976b6608cc02aadc248e13d21caa7e", "filename": "gcc/ada/a-caldel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-caldel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-caldel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-caldel.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package implements Calendar.Time delays using protected objects.\n+--  This package implements Calendar.Time delays using protected objects\n \n --  Note: the compiler generates direct calls to this interface, in the\n --  processing of time types."}, {"sha": "391e9fb69a7dcc556a84b8158426f2a9f30f8c21", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1992-2003 Free Software Foundation, Inc.        --\n+--            Copyright (C) 1992-2005 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Alpha/VMS version.\n+--  This is the Alpha/VMS version\n \n with System.Aux_DEC; use System.Aux_DEC;\n "}, {"sha": "1242ef6d65b090485499e9df45e1ef2995044af2", "filename": "gcc/ada/a-calend-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-calend-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-calend-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -35,7 +35,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Alpha/VMS version.\n+--  This is the Alpha/VMS version\n \n with System.OS_Primitives;\n package Ada.Calendar is"}, {"sha": "8af2f4c7302201bb99477ef776d86c498d97c9c4", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -592,7 +592,7 @@ package body Ada.Containers.Indefinite_Vectors is\n          Index_As_Int    : constant Int := Int (Index);\n          Old_Last_As_Int : constant Int := Int (Container.Last);\n \n-         --  TODO: somewhat vestigial...fix.\n+         --  TODO: somewhat vestigial...fix ???\n          Count1 : constant Int'Base := Int (Count);\n          Count2 : constant Int'Base := Old_Last_As_Int - Index_As_Int + 1;\n          N      : constant Int'Base := Int'Min (Count1, Count2);"}, {"sha": "3d0216672b9dc0ed48f8116bb43e7dbbc5d42952", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -62,7 +62,7 @@ package body Ada.Directories is\n    procedure Free is new Ada.Unchecked_Deallocation (Search_Data, Search_Ptr);\n \n    function File_Exists (Name : String) return Boolean;\n-   --  Returns True if the named file exists.\n+   --  Returns True if the named file exists\n \n    procedure Fetch_Next_Entry (Search : Search_Type);\n    --  Get the next entry in a directory, setting Entry_Fetched if successful\n@@ -126,7 +126,7 @@ package body Ada.Directories is\n       then\n          raise Name_Error;\n \n-         --  This is not an invalid case. Build the path name.\n+         --  This is not an invalid case so build the path name\n \n       else\n          Last := Containing_Directory'Length;"}, {"sha": "b5f79391a7178ac6f57ac29dda0fa9172b260bb0", "filename": "gcc/ada/a-direio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -51,7 +51,7 @@ package body Ada.Direct_IO is\n \n    Zeroes : constant System.Storage_Elements.Storage_Array :=\n               (1 .. System.Storage_Elements.Storage_Offset (Bytes) => 0);\n-   --  Buffer used to fill out partial records.\n+   --  Buffer used to fill out partial records\n \n    package FCB renames System.File_Control_Block;\n    package FIO renames System.File_IO;"}, {"sha": "55aba243b3f2318dea372b6c691a00492f649493", "filename": "gcc/ada/a-dirval-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-dirval-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-dirval-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval-mingw.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                            (Windows Version)                             --\n --                                                                          --\n---          Copyright (C) 2004 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -147,7 +147,7 @@ package body Ada.Directories.Validity is\n             end if;\n          end loop;\n \n-         --  If no invalid chars, and not all spaces, file name is valid.\n+         --  If no invalid chars, and not all spaces, file name is valid\n \n          return not Only_Spaces;\n       end if;"}, {"sha": "51eee895a9ee9c8d54d6a51fb412e5cb1d75f3ba", "filename": "gcc/ada/a-intnam-hpux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-hpux.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -32,7 +32,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a HP-UX version of this package.\n+--  This is a HP-UX version of this package\n \n --  The following signals are reserved by the run time:\n "}, {"sha": "43aed4788238dfd36eaed91a18c06bb0da109551", "filename": "gcc/ada/a-intnam-irix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-irix.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -177,7 +177,7 @@ package Ada.Interrupts.Names is\n    SIGUME : constant Interrupt_ID :=\n      System.OS_Interface.SIGUME;      --  Uncorrectable memory error\n \n-   --  Signals defined for Posix 1003.1c.\n+   --  Signals defined for Posix 1003.1c\n \n    SIGPTINTR : constant Interrupt_ID :=\n      System.OS_Interface.SIGPTINTR;    --  Pthread Interrupt Signal"}, {"sha": "13038fe241037b49605da6fbaece87b70701e058", "filename": "gcc/ada/a-intnam-mingw.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-mingw.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -31,10 +31,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a NT (native) version of this package.\n+--  This is a NT (native) version of this package\n \n---  This target-dependent package spec contains names of interrupts\n---  supported by the local system.\n+--  This target-dependent package spec contains names of interrupts supported\n+--  by the local system.\n \n with System.OS_Interface;\n --  used for names of interrupts"}, {"sha": "9f1099b0da381dfe444ee9a77457891bca080184", "filename": "gcc/ada/a-intnam-os2.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-os2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-os2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-os2.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -32,7 +32,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is an OS/2 version of this package.\n+--  This is an OS/2 version of this package\n \n --  This target-dependent package spec contains names of interrupts\n --  supported by the local system."}, {"sha": "beb915be0b0b09417a9c5328b1590bf487c7f4e8", "filename": "gcc/ada/a-intnam-vxworks.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-intnam-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-vxworks.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -31,14 +31,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the VxWorks version of this package.\n+--  This is the VxWorks version of this package\n \n with System.OS_Interface;\n \n package Ada.Interrupts.Names is\n \n    subtype Hardware_Interrupts is Interrupt_ID\n      range Interrupt_ID'First .. System.OS_Interface.Max_HW_Interrupt;\n-   --  Range of values that can be used for hardware interrupts.\n+   --  Range of values that can be used for hardware interrupts\n \n end Ada.Interrupts.Names;"}, {"sha": "86a3b7c12cd51b2e5657159de3bdf25a021b0f1f", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 31, "deletions": 30, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -90,7 +90,7 @@ package body Ada.Text_IO.Editing is\n \n                Result_Index := Result_Index + Count - 1;\n \n-               --  Last + 1 was a ')' throw it away too.\n+               --  Last + 1 was a ')' throw it away too\n \n                Picture_Index := Last + 2;\n \n@@ -139,10 +139,10 @@ package body Ada.Text_IO.Editing is\n       In_Currency   : Boolean := False;\n \n       Dollar : Boolean := False;\n-      --  Overridden immediately if necessary.\n+      --  Overridden immediately if necessary\n \n       Zero : Boolean := True;\n-      --  Set to False when a non-zero digit is output.\n+      --  Set to False when a non-zero digit is output\n \n    begin\n \n@@ -236,7 +236,7 @@ package body Ada.Text_IO.Editing is\n       for J in reverse Last .. Answer'Last loop\n          exit when J = Pic.Radix_Position;\n \n-         --  Do this test First, Separator_Character can equal Pic.Floater.\n+         --  Do this test First, Separator_Character can equal Pic.Floater\n \n          if Answer (J) = Pic.Floater then\n             exit;\n@@ -692,11 +692,11 @@ package body Ada.Text_IO.Editing is\n          end case;\n       end loop;\n \n-      --  Now get rid of Blank_when_Zero and complete Star fill.\n+      --  Now get rid of Blank_when_Zero and complete Star fill\n \n       if Zero and Pic.Blank_When_Zero then\n \n-         --  Value is zero, and blank it.\n+         --  Value is zero, and blank it\n \n          Last := Answer'Last;\n \n@@ -897,7 +897,7 @@ package body Ada.Text_IO.Editing is\n                   raise Picture_Error;\n                end if;\n \n-               --  Two decimal points is a no-no.\n+               --  Two decimal points is a no-no\n \n                Answer.Has_Fraction    := True;\n                Answer.End_Of_Fraction := J;\n@@ -917,7 +917,7 @@ package body Ada.Text_IO.Editing is\n          Answer.Start_Of_Int := Answer.End_Of_Int + 1;\n       end if;\n \n-      --  No significant (intger) digits needs a null range.\n+      --  No significant (integer) digits needs a null range\n \n       return Answer;\n    end Parse_Number_String;\n@@ -953,7 +953,7 @@ package body Ada.Text_IO.Editing is\n       type Legality is  (Okay, Reject);\n \n       State : Legality := Reject;\n-      --  Start in reject, which will reject null strings.\n+      --  Start in reject, which will reject null strings\n \n       Index : Pic_Index := Pic.Picture.Expanded'First;\n \n@@ -1067,7 +1067,7 @@ package body Ada.Text_IO.Editing is\n       begin\n          Debug_Start (\"Floating_Bracket\");\n \n-         --  Two different floats not allowed.\n+         --  Two different floats not allowed\n \n          if Pic.Floater /= '!' and then Pic.Floater /= '<' then\n             raise Picture_Error;\n@@ -1393,6 +1393,7 @@ package body Ada.Text_IO.Editing is\n                      raise Picture_Error;\n                   else\n                      --  Overwrite Floater and Start_Float\n+\n                      Pic.Floater := '*';\n                      Pic.Start_Float := Index;\n                      Star_Suppression;\n@@ -1411,7 +1412,7 @@ package body Ada.Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  A single dollar does not a floating make.\n+                  --  A single dollar does not a floating make\n \n                   Number_Completion;\n                   return;\n@@ -1423,8 +1424,8 @@ package body Ada.Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Only one dollar before the sign is okay,\n-                  --  but doesn't float.\n+                  --  Only one dollar before the sign is okay, but doesn't\n+                  --  float.\n \n                   Pic.Radix_Position := Index;\n                   Skip;\n@@ -1459,7 +1460,7 @@ package body Ada.Text_IO.Editing is\n          --  Set to True if a '_', '0', '/', 'B', or 'b' is encountered\n \n          Must_Float : Boolean := False;\n-         --  Set to true if a '#' occurs after an insert.\n+         --  Set to true if a '#' occurs after an insert\n \n       begin\n          Debug_Start (\"Leading_Pound\");\n@@ -1548,7 +1549,7 @@ package body Ada.Text_IO.Editing is\n                when '9' =>\n                   if State /= Okay then\n \n-                     --  A single '#' doesn't float.\n+                     --  A single '#' doesn't float\n \n                      Pic.Floater := '!';\n                      Pic.Start_Float := Invalid_Position;\n@@ -1565,8 +1566,8 @@ package body Ada.Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Only one pound before the sign is okay,\n-                  --  but doesn't float.\n+                  --  Only one pound before the sign is okay, but doesn't\n+                  --  float.\n \n                   Pic.Radix_Position := Index;\n                   Skip;\n@@ -1631,7 +1632,7 @@ package body Ada.Text_IO.Editing is\n                return;\n             end if;\n \n-            --  Will return in Okay state if a '9' was seen.\n+            --  Will return in Okay state if a '9' was seen\n \n          end loop;\n       end Number;\n@@ -2075,7 +2076,7 @@ package body Ada.Text_IO.Editing is\n       -- Picture --\n       -------------\n \n-      --  Note that Picture can be called in either State.\n+      --  Note that Picture can be called in either State\n \n       --  It will set state to Valid only if a 9 is encountered or floating\n       --  currency is called.\n@@ -2136,7 +2137,7 @@ package body Ada.Text_IO.Editing is\n          Debug_Start (\"Picture_Bracket\");\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '<';\n          Pic.Start_Float := Index;\n@@ -2208,7 +2209,7 @@ package body Ada.Text_IO.Editing is\n \n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '-';\n          Pic.Start_Float := Index;\n@@ -2253,7 +2254,7 @@ package body Ada.Text_IO.Editing is\n \n                when 'Z' | 'z' =>\n \n-                  --  Can't have Z and a floating sign.\n+                  --  Can't have Z and a floating sign\n \n                   if State = Okay then\n                      Set_State (Reject);\n@@ -2272,7 +2273,7 @@ package body Ada.Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Don't assume that state is okay, haven't seen a digit.\n+                  --  Don't assume that state is okay, haven't seen a digit\n \n                   Picture;\n                   return;\n@@ -2293,7 +2294,7 @@ package body Ada.Text_IO.Editing is\n          Debug_Start (\"Picture_Plus\");\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '+';\n          Pic.Start_Float := Index;\n@@ -2320,7 +2321,7 @@ package body Ada.Text_IO.Editing is\n                   Pic.Max_Leading_Digits := Pic.Max_Leading_Digits + 1;\n                   Pic.End_Float := Index;\n                   Skip;\n-                  Set_State (Okay);  --  \"++\" is enough.\n+                  Set_State (Okay);  --  \"++\" is enough\n                   Floating_Plus;\n                   Trailing_Currency;\n                   return;\n@@ -2341,7 +2342,7 @@ package body Ada.Text_IO.Editing is\n                      Set_State (Reject);\n                   end if;\n \n-                  --  Can't have Z and a floating sign.\n+                  --  Can't have Z and a floating sign\n \n                   Pic.Picture.Expanded (Index) := 'Z'; -- consistency\n \n@@ -2366,7 +2367,7 @@ package body Ada.Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Don't assume that state is okay, haven't seen a digit.\n+                  --  Don't assume that state is okay, haven't seen a digit\n \n                   Picture;\n                   return;\n@@ -2427,12 +2428,12 @@ package body Ada.Text_IO.Editing is\n          end case;\n \n          --  Blank when zero either if the PIC does not contain a '9' or if\n-         --  requested by the user and no '*'\n+         --  requested by the user and no '*'.\n \n          Pic.Blank_When_Zero :=\n            (Computed_BWZ or Pic.Blank_When_Zero) and not Pic.Star_Fill;\n \n-         --  Star fill if '*' and no '9'.\n+         --  Star fill if '*' and no '9'\n \n          Pic.Star_Fill := Pic.Star_Fill and Computed_BWZ;\n \n@@ -2706,7 +2707,7 @@ package body Ada.Text_IO.Editing is\n \n       when Constraint_Error =>\n \n-         --  To deal with special cases like null strings.\n+      --  To deal with special cases like null strings\n \n       raise Picture_Error;\n    end Precalculate;"}, {"sha": "6a06f8be7dc49802f7a7b566f79fa6f91f54342b", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -183,7 +183,7 @@ package body Ada.Text_IO.Fixed_IO is\n \n    --    Fore + Aft + Exp + Extra_Layout_Space\n \n-   --  is always long enough for formatting any fixed point number.\n+   --  is always long enough for formatting any fixed point number\n \n    --  Implementation of Put routines\n \n@@ -247,7 +247,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  least 20 in order to print T'First, which is at most -2.0**63.\n    --  This means D < 0, so use\n \n-   --    (1)   Y = -S and Z = -10**(-D).\n+   --    (1)   Y = -S and Z = -10**(-D)\n \n    --  If 1.0 / S is an integer greater than one, use\n "}, {"sha": "7f10a6e1f3bd212e1feb8f5f0f11978caf02dc6c", "filename": "gcc/ada/a-wtedit.adb", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -266,7 +266,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n                Result_Index := Result_Index + Count - 1;\n \n-               --  Last was a ')' throw it away too.\n+               --  Last was a ')' throw it away too\n \n                Picture_Index := Last + 1;\n \n@@ -313,10 +313,10 @@ package body Ada.Wide_Text_IO.Editing is\n       Currency_Pos  : Integer := Pic.Start_Currency;\n \n       Dollar : Boolean := False;\n-      --  Overridden immediately if necessary.\n+      --  Overridden immediately if necessary\n \n       Zero : Boolean := True;\n-      --  Set to False when a non-zero digit is output.\n+      --  Set to False when a non-zero digit is output\n \n    begin\n \n@@ -856,11 +856,11 @@ package body Ada.Wide_Text_IO.Editing is\n          end case;\n       end loop;\n \n-      --  Now get rid of Blank_when_Zero and complete Star fill.\n+      --  Now get rid of Blank_when_Zero and complete Star fill\n \n       if Zero and Pic.Blank_When_Zero then\n \n-         --  Value is zero, and blank it.\n+         --  Value is zero, and blank it\n \n          Last := Answer'Last;\n \n@@ -1063,7 +1063,7 @@ package body Ada.Wide_Text_IO.Editing is\n                   raise Picture_Error;\n                end if;\n \n-               --  Two decimal points is a no-no.\n+               --  Two decimal points is a no-no\n \n                Answer.Has_Fraction    := True;\n                Answer.End_Of_Fraction := J;\n@@ -1083,7 +1083,7 @@ package body Ada.Wide_Text_IO.Editing is\n          Answer.Start_Of_Int := Answer.End_Of_Int + 1;\n       end if;\n \n-      --  No significant (intger) digits needs a null range.\n+      --  No significant (intger) digits needs a null range\n \n       return Answer;\n    end Parse_Number_String;\n@@ -1116,7 +1116,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n       type Legality is  (Okay, Reject);\n       State : Legality := Reject;\n-      --  Start in reject, which will reject null strings.\n+      --  Start in reject, which will reject null strings\n \n       Index : Pic_Index := Pic.Picture.Expanded'First;\n \n@@ -1426,7 +1426,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n       procedure Leading_Dollar is\n       begin\n-         --  Treat as a floating dollar, and unwind otherwise.\n+         --  Treat as a floating dollar, and unwind otherwise\n \n          Pic.Floater := '$';\n          Pic.Start_Currency := Index;\n@@ -1495,7 +1495,7 @@ package body Ada.Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  A single dollar does not a floating make.\n+                  --  A single dollar does not a floating make\n \n                   Number_Completion;\n                   return;\n@@ -1507,8 +1507,8 @@ package body Ada.Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Only one dollar before the sign is okay,\n-                  --  but doesn't float.\n+                  --  Only one dollar before the sign is okay, but doesn't\n+                  --  float.\n \n                   Pic.Radix_Position := Index;\n                   Skip;\n@@ -1543,7 +1543,7 @@ package body Ada.Wide_Text_IO.Editing is\n          --  Set to True if a '_', '0', '/', 'B', or 'b' is encountered\n \n          Must_Float : Boolean := False;\n-         --  Set to true if a '#' occurs after an insert.\n+         --  Set to true if a '#' occurs after an insert\n \n       begin\n          --  Treat as a floating currency. If it isn't, this will be\n@@ -1619,7 +1619,7 @@ package body Ada.Wide_Text_IO.Editing is\n                when '9' =>\n                   if State /= Okay then\n \n-                     --  A single '#' doesn't float.\n+                     --  A single '#' doesn't float\n \n                      Pic.Floater := '!';\n                      Pic.Start_Float := Invalid_Position;\n@@ -1636,8 +1636,8 @@ package body Ada.Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Only one pound before the sign is okay,\n-                  --  but doesn't float.\n+                  --  Only one pound before the sign is okay, but doesn't\n+                  --  float.\n \n                   Pic.Radix_Position := Index;\n                   Skip;\n@@ -1700,7 +1700,7 @@ package body Ada.Wide_Text_IO.Editing is\n                return;\n             end if;\n \n-            --  Will return in Okay state if a '9' was seen.\n+            --  Will return in Okay state if a '9' was seen\n \n          end loop;\n       end Number;\n@@ -2130,7 +2130,7 @@ package body Ada.Wide_Text_IO.Editing is\n       -- Picture --\n       -------------\n \n-      --  Note that Picture can be called in either State.\n+      --  Note that Picture can be called in either State\n \n       --  It will set state to Valid only if a 9 is encountered or floating\n       --  currency is called.\n@@ -2188,7 +2188,7 @@ package body Ada.Wide_Text_IO.Editing is\n          Pic.Sign_Position := Index;\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '<';\n          Pic.Start_Float := Index;\n@@ -2258,7 +2258,7 @@ package body Ada.Wide_Text_IO.Editing is\n       begin\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '-';\n          Pic.Start_Float := Index;\n@@ -2285,7 +2285,7 @@ package body Ada.Wide_Text_IO.Editing is\n                   Pic.Max_Leading_Digits := Pic.Max_Leading_Digits + 1;\n                   Pic.End_Float := Index;\n                   Skip;\n-                  Set_State (Okay);  --  \"-- \" is enough.\n+                  Set_State (Okay);  --  \"-- \" is enough\n                   Floating_Minus;\n                   Trailing_Currency;\n                   return;\n@@ -2303,7 +2303,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n                when 'Z' | 'z' =>\n \n-                  --  Can't have Z and a floating sign.\n+                  --  Can't have Z and a floating sign\n \n                   if State = Okay then\n                      Set_State (Reject);\n@@ -2322,7 +2322,7 @@ package body Ada.Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Don't assume that state is okay, haven't seen a digit.\n+                  --  Don't assume that state is okay, haven't seen a digit\n \n                   Picture;\n                   return;\n@@ -2342,7 +2342,7 @@ package body Ada.Wide_Text_IO.Editing is\n       begin\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '+';\n          Pic.Start_Float := Index;\n@@ -2369,7 +2369,7 @@ package body Ada.Wide_Text_IO.Editing is\n                   Pic.Max_Leading_Digits := Pic.Max_Leading_Digits + 1;\n                   Pic.End_Float := Index;\n                   Skip;\n-                  Set_State (Okay);  --  \"++\" is enough.\n+                  Set_State (Okay);  --  \"++\" is enough\n                   Floating_Plus;\n                   Trailing_Currency;\n                   return;\n@@ -2390,7 +2390,7 @@ package body Ada.Wide_Text_IO.Editing is\n                      Set_State (Reject);\n                   end if;\n \n-                  --  Can't have Z and a floating sign.\n+                  --  Can't have Z and a floating sign\n \n                   Pic.Picture.Expanded (Index) := 'Z'; -- consistency\n \n@@ -2410,7 +2410,7 @@ package body Ada.Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Don't assume that state is okay, haven't seen a digit.\n+                  --  Don't assume that state is okay, haven't seen a digit\n \n                   Picture;\n                   return;\n@@ -2474,7 +2474,7 @@ package body Ada.Wide_Text_IO.Editing is\n          Pic.Blank_When_Zero :=\n            (Computed_BWZ or Pic.Blank_When_Zero) and not Pic.Star_Fill;\n \n-         --  Star fill if '*' and no '9'.\n+         --  Star fill if '*' and no '9'\n \n          Pic.Star_Fill := Pic.Star_Fill and Computed_BWZ;\n \n@@ -2693,7 +2693,7 @@ package body Ada.Wide_Text_IO.Editing is\n \n       when Constraint_Error =>\n \n-         --  To deal with special cases like null strings.\n+      --  To deal with special cases like null strings\n \n       raise Picture_Error;\n "}, {"sha": "9f60e29ac15dd84a8cab0e94712cb84a4c84fb3e", "filename": "gcc/ada/a-wtenau.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-wtenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-wtenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenau.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -46,10 +46,10 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n    -----------------------\n \n    procedure Store_Char\n-     (WC   : Wide_Character;\n-      Buf  : out Wide_String;\n-      Ptr  : in out Integer);\n-   --  Store a single character in buffer, checking for overflow.\n+     (WC  : Wide_Character;\n+      Buf : out Wide_String;\n+      Ptr : in out Integer);\n+   --  Store a single character in buffer, checking for overflow\n \n    --  These definitions replace the ones in Ada.Characters.Handling, which\n    --  do not seem to work for some strange not understood reason ??? at\n@@ -324,9 +324,9 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n    ----------------\n \n    procedure Store_Char\n-     (WC   : Wide_Character;\n-      Buf  : out Wide_String;\n-      Ptr  : in out Integer)\n+     (WC  : Wide_Character;\n+      Buf : out Wide_String;\n+      Ptr : in out Integer)\n    is\n    begin\n       if Ptr = Buf'Last then"}, {"sha": "57478426e8b37381e151888a46572e237be99a03", "filename": "gcc/ada/a-ztedit.adb", "status": "modified", "additions": 31, "deletions": 33, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -267,7 +267,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                Result_Index := Result_Index + Count - 1;\n \n-               --  Last was a ')' throw it away too.\n+               --  Last was a ')' throw it away too\n \n                Picture_Index := Last + 1;\n \n@@ -314,10 +314,10 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       Currency_Pos  : Integer := Pic.Start_Currency;\n \n       Dollar : Boolean := False;\n-      --  Overridden immediately if necessary.\n+      --  Overridden immediately if necessary\n \n       Zero : Boolean := True;\n-      --  Set to False when a non-zero digit is output.\n+      --  Set to False when a non-zero digit is output\n \n    begin\n \n@@ -857,11 +857,11 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          end case;\n       end loop;\n \n-      --  Now get rid of Blank_when_Zero and complete Star fill.\n+      --  Now get rid of Blank_when_Zero and complete Star fill\n \n       if Zero and Pic.Blank_When_Zero then\n \n-         --  Value is zero, and blank it.\n+         --  Value is zero, and blank it\n \n          Last := Answer'Last;\n \n@@ -1065,7 +1065,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                   raise Picture_Error;\n                end if;\n \n-               --  Two decimal points is a no-no.\n+               --  Two decimal points is a no-no\n \n                Answer.Has_Fraction    := True;\n                Answer.End_Of_Fraction := J;\n@@ -1085,7 +1085,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          Answer.Start_Of_Int := Answer.End_Of_Int + 1;\n       end if;\n \n-      --  No significant (intger) digits needs a null range.\n+      --  No significant (intger) digits needs a null range\n \n       return Answer;\n    end Parse_Number_String;\n@@ -1118,7 +1118,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n       type Legality is  (Okay, Reject);\n       State : Legality := Reject;\n-      --  Start in reject, which will reject null strings.\n+      --  Start in reject, which will reject null strings\n \n       Index : Pic_Index := Pic.Picture.Expanded'First;\n \n@@ -1418,17 +1418,16 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       -- Leading_Dollar --\n       --------------------\n \n-      --  Note that Leading_Dollar can be called in either State.\n-      --  It will set state to Okay only if a 9 or (second) $\n-      --  is encountered.\n+      --  Note that Leading_Dollar can be called in either State. It will set\n+      --  state to Okay only if a 9 or (second) is encountered.\n \n       --  Also notice the tricky bit with State and Zero_Suppression.\n       --  Zero_Suppression is Picture_Error if a '$' or a '9' has been\n       --  encountered, exactly the cases where State has been set.\n \n       procedure Leading_Dollar is\n       begin\n-         --  Treat as a floating dollar, and unwind otherwise.\n+         --  Treat as a floating dollar, and unwind otherwise\n \n          Pic.Floater := '$';\n          Pic.Start_Currency := Index;\n@@ -1497,7 +1496,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  A single dollar does not a floating make.\n+                  --  A single dollar does not a floating make\n \n                   Number_Completion;\n                   return;\n@@ -1509,8 +1508,8 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Only one dollar before the sign is okay,\n-                  --  but doesn't float.\n+                  --  Only one dollar before the sign is okay, but doesn't\n+                  --  float.\n \n                   Pic.Radix_Position := Index;\n                   Skip;\n@@ -1533,8 +1532,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       --  this procedure.  Also note that Leading_Pound can be called in\n       --  either State.\n \n-      --  It will set state to Okay only if a 9 or  (second) # is\n-      --  encountered.\n+      --  It will set state to Okay only if a 9 or (second) # is encountered\n \n       --  One Last note:  In ambiguous cases, the currency is treated as\n       --  floating unless there is only one '#'.\n@@ -1545,7 +1543,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          --  Set to True if a '_', '0', '/', 'B', or 'b' is encountered\n \n          Must_Float : Boolean := False;\n-         --  Set to true if a '#' occurs after an insert.\n+         --  Set to true if a '#' occurs after an insert\n \n       begin\n          --  Treat as a floating currency. If it isn't, this will be\n@@ -1621,7 +1619,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                when '9' =>\n                   if State /= Okay then\n \n-                     --  A single '#' doesn't float.\n+                     --  A single '#' doesn't float\n \n                      Pic.Floater := '!';\n                      Pic.Start_Float := Invalid_Position;\n@@ -1638,8 +1636,8 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Only one pound before the sign is okay,\n-                  --  but doesn't float.\n+                  --  Only one pound before the sign is okay, but doesn't\n+                  --  float.\n \n                   Pic.Radix_Position := Index;\n                   Skip;\n@@ -1702,7 +1700,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                return;\n             end if;\n \n-            --  Will return in Okay state if a '9' was seen.\n+            --  Will return in Okay state if a '9' was seen\n \n          end loop;\n       end Number;\n@@ -2132,7 +2130,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       -- Picture --\n       -------------\n \n-      --  Note that Picture can be called in either State.\n+      --  Note that Picture can be called in either State\n \n       --  It will set state to Valid only if a 9 is encountered or floating\n       --  currency is called.\n@@ -2190,7 +2188,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          Pic.Sign_Position := Index;\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '<';\n          Pic.Start_Float := Index;\n@@ -2260,7 +2258,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       begin\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '-';\n          Pic.Start_Float := Index;\n@@ -2305,7 +2303,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n                when 'Z' | 'z' =>\n \n-                  --  Can't have Z and a floating sign.\n+                  --  Can't have Z and a floating sign\n \n                   if State = Okay then\n                      Set_State (Reject);\n@@ -2324,7 +2322,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Don't assume that state is okay, haven't seen a digit.\n+                  --  Don't assume that state is okay, haven't seen a digit\n \n                   Picture;\n                   return;\n@@ -2344,7 +2342,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n       begin\n          Pic.Sign_Position := Index;\n \n-         --  Treat as a floating sign, and unwind otherwise.\n+         --  Treat as a floating sign, and unwind otherwise\n \n          Pic.Floater := '+';\n          Pic.Start_Float := Index;\n@@ -2371,7 +2369,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                   Pic.Max_Leading_Digits := Pic.Max_Leading_Digits + 1;\n                   Pic.End_Float := Index;\n                   Skip;\n-                  Set_State (Okay);  --  \"++\" is enough.\n+                  Set_State (Okay);  --  \"++\" is enough\n                   Floating_Plus;\n                   Trailing_Currency;\n                   return;\n@@ -2392,7 +2390,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      Set_State (Reject);\n                   end if;\n \n-                  --  Can't have Z and a floating sign.\n+                  --  Can't have Z and a floating sign\n \n                   Pic.Picture.Expanded (Index) := 'Z'; -- consistency\n \n@@ -2412,7 +2410,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n                      Pic.End_Float := Invalid_Position;\n                   end if;\n \n-                  --  Don't assume that state is okay, haven't seen a digit.\n+                  --  Don't assume that state is okay, haven't seen a digit\n \n                   Picture;\n                   return;\n@@ -2476,7 +2474,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          Pic.Blank_When_Zero :=\n            (Computed_BWZ or Pic.Blank_When_Zero) and not Pic.Star_Fill;\n \n-         --  Star fill if '*' and no '9'.\n+         --  Star fill if '*' and no '9'\n \n          Pic.Star_Fill := Pic.Star_Fill and Computed_BWZ;\n \n@@ -2695,7 +2693,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n       when Constraint_Error =>\n \n-         --  To deal with special cases like null strings.\n+         --  To deal with special cases like null strings\n \n       raise Picture_Error;\n "}, {"sha": "f3b570f69c64ed1dd71392527072d9a535c46c93", "filename": "gcc/ada/a-ztenau.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-ztenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fa-ztenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenau.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -47,10 +47,10 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n    -----------------------\n \n    procedure Store_Char\n-     (WC   : Wide_Wide_Character;\n-      Buf  : out Wide_Wide_String;\n-      Ptr  : in out Integer);\n-   --  Store a single character in buffer, checking for overflow.\n+     (WC  : Wide_Wide_Character;\n+      Buf : out Wide_Wide_String;\n+      Ptr : in out Integer);\n+   --  Store a single character in buffer, checking for overflow\n \n    --  These definitions replace the ones in Ada.Characters.Handling, which\n    --  do not seem to work for some strange not understood reason ??? at\n@@ -326,9 +326,9 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n    ----------------\n \n    procedure Store_Char\n-     (WC   : Wide_Wide_Character;\n-      Buf  : out Wide_Wide_String;\n-      Ptr  : in out Integer)\n+     (WC  : Wide_Wide_Character;\n+      Buf : out Wide_Wide_String;\n+      Ptr : in out Integer)\n    is\n    begin\n       if Ptr = Buf'Last then"}, {"sha": "efd3237bf7542e8429162e04ef523688f68b5fdc", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -114,7 +114,7 @@ package body CStand is\n    --  Make an entry in the names table for Nam, and set as Chars field of Id\n \n    function New_Operator (Op : Name_Id; Typ : Entity_Id) return Entity_Id;\n-   --  Build entity for standard operator with given name and type.\n+   --  Build entity for standard operator with given name and type\n \n    function New_Standard_Entity\n      (New_Node_Kind : Node_Kind := N_Defining_Identifier) return Entity_Id;\n@@ -537,7 +537,7 @@ package body CStand is\n       Set_Is_Known_Valid             (Standard_Character);\n       Set_Size_Known_At_Compile_Time (Standard_Character);\n \n-      --  Create the bounds for type Character.\n+      --  Create the bounds for type Character\n \n       R_Node := New_Node (N_Range, Stloc);\n \n@@ -582,7 +582,7 @@ package body CStand is\n       Set_Is_Known_Valid             (Standard_Wide_Character);\n       Set_Size_Known_At_Compile_Time (Standard_Wide_Character);\n \n-      --  Create the bounds for type Wide_Character.\n+      --  Create the bounds for type Wide_Character\n \n       R_Node := New_Node (N_Range, Stloc);\n \n@@ -1259,20 +1259,22 @@ package body CStand is\n                       (Standard_Exception_Type, True);\n       Make_Name       (Standard_Exception_Type, \"exception\");\n \n-      Make_Component  (Standard_Exception_Type, Standard_Boolean,\n-                                                 \"Not_Handled_By_Others\");\n-      Make_Component  (Standard_Exception_Type, Standard_Character, \"Lang\");\n-      Make_Component  (Standard_Exception_Type, Standard_Natural,\n-                                                           \"Name_Length\");\n-      Make_Component  (Standard_Exception_Type, Standard_A_Char,\n-                                                             \"Full_Name\");\n-      Make_Component  (Standard_Exception_Type, Standard_A_Char,\n-                                                            \"HTable_Ptr\");\n-      Make_Component  (Standard_Exception_Type, Standard_Unsigned,\n-                                                          \"Import_Code\");\n-      Make_Component  (Standard_Exception_Type, Standard_A_Char,\n-                                                            \"Raise_Hook\");\n-      --  Build tree for record declaration, for use by the back-end.\n+      Make_Component\n+        (Standard_Exception_Type, Standard_Boolean,   \"Not_Handled_By_Others\");\n+      Make_Component\n+        (Standard_Exception_Type, Standard_Character, \"Lang\");\n+      Make_Component\n+        (Standard_Exception_Type, Standard_Natural,   \"Name_Length\");\n+      Make_Component\n+        (Standard_Exception_Type, Standard_A_Char,    \"Full_Name\");\n+      Make_Component\n+        (Standard_Exception_Type, Standard_A_Char,    \"HTable_Ptr\");\n+      Make_Component\n+        (Standard_Exception_Type, Standard_Unsigned,  \"Import_Code\");\n+      Make_Component\n+        (Standard_Exception_Type, Standard_A_Char,    \"Raise_Hook\");\n+\n+      --  Build tree for record declaration, for use by the back-end\n \n       declare\n          Comp_List : List_Id;"}, {"sha": "511392d5f78eb43143d31209e488b094446133b7", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -965,7 +965,7 @@ package body Exp_Fixd is\n                New_Occurrence_Of (Rnd, Loc))));\n       end if;\n \n-      --  Set type of result, for use in caller.\n+      --  Set type of result, for use in caller\n \n       Set_Etype (Qnn, QR_Typ);\n    end Build_Scaled_Divide_Code;\n@@ -1095,7 +1095,7 @@ package body Exp_Fixd is\n    --  is an integer or the reciprocal of an integer, and for\n    --  implementation efficiency we need the smallest such K.\n \n-   --  First we reduce the left fraction to lowest terms.\n+   --  First we reduce the left fraction to lowest terms\n \n    --    If numerator = 1, then for K = 1, the small ratio is the reciprocal\n    --    of an integer, and this is clearly the minimum K case, so set K = 1,\n@@ -1213,7 +1213,7 @@ package body Exp_Fixd is\n    --  is an integer or the reciprocal of an integer, and for\n    --  implementation efficiency we need the smallest such K.\n \n-   --  First we reduce the left fraction to lowest terms.\n+   --  First we reduce the left fraction to lowest terms\n \n    --    If denominator = 1, then for K = 1, the small ratio is an integer\n    --    (the numerator) and this is clearly the minimum K case, so set K = 1,\n@@ -1415,15 +1415,16 @@ package body Exp_Fixd is\n    --  is an integer or the reciprocal of an integer, and for\n    --  implementation efficiency we need the smallest such K.\n \n-   --  First we reduce the left fraction to lowest terms.\n+   --  First we reduce the left fraction to lowest terms\n \n-   --    If denominator = 1, then for K = 1, the small ratio is an\n-   --    integer, and this is clearly the minimum K case, so set\n-   --    K = 1, Right_Small = Lit_Value.\n+   --    If denominator = 1, then for K = 1, the small ratio is an integer, and\n+   --    this is clearly the minimum K case, so set\n \n-   --    If denominator > 1, then set K to the numerator of the\n-   --    fraction, so that the resulting small ratio is the\n-   --    reciprocal of the integer (the denominator value).\n+   --      K = 1, Right_Small = Lit_Value.\n+\n+   --    If denominator > 1, then set K to the numerator of the fraction, so\n+   --    that the resulting small ratio is the reciprocal of the integer (the\n+   --    denominator value).\n \n    procedure Do_Multiply_Fixed_Universal\n      (N           : Node_Id;"}, {"sha": "32aea3fcb18d9ac445811a64a1544af31e1916ba", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -60,7 +60,7 @@ package body Exp_Smem is\n    procedure Build_Full_Name\n      (E : in  Entity_Id;\n       N : out String_Id);\n-   --  Build the fully qualified string name of a shared variable.\n+   --  Build the fully qualified string name of a shared variable\n \n    function On_Lhs_Of_Assignment (N : Node_Id) return Boolean;\n    --  Determines if N is on the left hand of the assignment. This means"}, {"sha": "0d0366484f7a19c7f9c09644dad8e9b3671f70f0", "filename": "gcc/ada/g-arrspl.adb", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-arrspl.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,8 +43,7 @@ package body GNAT.Array_Split is\n \n    function Count\n      (Source  : Element_Sequence;\n-      Pattern : Element_Set)\n-      return    Natural;\n+      Pattern : Element_Set) return Natural;\n    --  Returns the number of occurences of Pattern elements in Source, 0 is\n    --  returned if no occurence is found in Source.\n \n@@ -92,8 +91,7 @@ package body GNAT.Array_Split is\n \n    function Count\n      (Source  : Element_Sequence;\n-      Pattern : Element_Set)\n-      return    Natural\n+      Pattern : Element_Set) return Natural\n    is\n       C : Natural := 0;\n    begin\n@@ -144,8 +142,7 @@ package body GNAT.Array_Split is\n \n    function Separators\n      (S     : Slice_Set;\n-      Index : Slice_Number)\n-      return  Slice_Separators\n+      Index : Slice_Number) return Slice_Separators\n    is\n    begin\n       if Index > S.N_Slice then\n@@ -154,7 +151,7 @@ package body GNAT.Array_Split is\n       elsif Index = 0\n         or else (Index = 1 and then S.N_Slice = 1)\n       then\n-         --  Whole string, or no separator used.\n+         --  Whole string, or no separator used\n \n          return (Before => Array_End,\n                  After  => Array_End);\n@@ -238,8 +235,10 @@ package body GNAT.Array_Split is\n \n          loop\n             if K > Count_Sep then\n-               --  No more separator, last slice end at the end of the source\n+\n+               --  No more separators, last slice ends at the end of the source\n                --  string.\n+\n                Stop := S.Source'Last;\n             else\n                Stop := S.Indexes (K) - 1;\n@@ -255,13 +254,17 @@ package body GNAT.Array_Split is\n             case Mode is\n \n                when Single =>\n+\n                   --  In this mode just set start to character next to the\n                   --  current separator, advance the separator index.\n+\n                   Start := S.Indexes (K) + 1;\n                   K := K + 1;\n \n                when Multiple =>\n-                  --  In this mode skip separators following each others\n+\n+                  --  In this mode skip separators following each other\n+\n                   loop\n                      Start := S.Indexes (K) + 1;\n                      K := K + 1;\n@@ -282,8 +285,7 @@ package body GNAT.Array_Split is\n \n    function Slice\n      (S     : Slice_Set;\n-      Index : Slice_Number)\n-      return Element_Sequence\n+      Index : Slice_Number) return Element_Sequence\n    is\n    begin\n       if Index = 0 then"}, {"sha": "5c8051250a957ab306d03c3aab80aa393c72cf32", "filename": "gcc/ada/g-arrspl.ads", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-arrspl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-arrspl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-arrspl.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@ generic\n    --  Element of the array, this must be a discrete type\n \n    type Element_Sequence is array (Positive range <>) of Element;\n-   --  The array which is a sequence of element.\n+   --  The array which is a sequence of element\n \n    type Element_Set is private;\n    --  This type represent a set of elements. This set does not defined a\n@@ -120,8 +120,7 @@ package GNAT.Array_Split is\n \n    function Slice\n      (S     : Slice_Set;\n-      Index : Slice_Number)\n-      return  Element_Sequence;\n+      Index : Slice_Number) return Element_Sequence;\n    pragma Inline (Slice);\n    --  Returns the slice at position Index. First slice is 1. If Index is 0\n    --  the whole array is returned including the separators (this is the\n@@ -138,8 +137,7 @@ package GNAT.Array_Split is\n \n    function Separators\n      (S     : Slice_Set;\n-      Index : Slice_Number)\n-      return  Slice_Separators;\n+      Index : Slice_Number) return Slice_Separators;\n    --  Returns the separators used to slice (front and back) the slice at\n    --  position Index. For slices at start and end of the original array, the\n    --  Array_End value is returned for the corresponding outer bound. In\n@@ -165,7 +163,7 @@ private\n       Start : Positive;\n       Stop  : Natural;\n    end record;\n-   --  Starting/Ending position of a slice. This does not include separators.\n+   --  Starting/Ending position of a slice. This does not include separators\n \n    type Slices_Indexes is array (Slice_Number range <>) of Slice_Info;\n    type Slices_Access is access Slices_Indexes;"}, {"sha": "2aa712aef3f070bb9b84b345505feb7356e0967b", "filename": "gcc/ada/g-awk.adb", "status": "modified", "additions": 42, "deletions": 61, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-awk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-awk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-awk.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2000-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 2000-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,7 +65,7 @@ package body GNAT.AWK is\n \n       procedure Current_Line (S : Mode; Session : Session_Type)\n         is abstract;\n-      --  Split Session's current line using split mode.\n+      --  Split current line of Session using split mode S\n \n       ------------------------\n       -- Split on separator --\n@@ -102,7 +102,7 @@ package body GNAT.AWK is\n \n    package File_Table is\n       new Dynamic_Tables (AWK_File, Natural, 1, 5, 50);\n-   --  List of filename associated with a Session.\n+   --  List of file names associated with a Session\n \n    procedure Free is new Unchecked_Deallocation (String, AWK_File);\n \n@@ -114,17 +114,17 @@ package body GNAT.AWK is\n       First : Positive;\n       Last  : Natural;\n    end record;\n-   --  This is a field slice (First .. Last) in session's current line.\n+   --  This is a field slice (First .. Last) in session's current line\n \n    package Field_Table is\n       new Dynamic_Tables (Field_Slice, Natural, 1, 10, 100);\n-   --  List of fields for the current line.\n+   --  List of fields for the current line\n \n    --------------\n    -- Patterns --\n    --------------\n \n-   --  Define all patterns style : exact string, regular expression, boolean\n+   --  Define all patterns style: exact string, regular expression, boolean\n    --  function.\n \n    package Patterns is\n@@ -137,13 +137,12 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : Pattern;\n-         Session : Session_Type)\n-         return    Boolean\n+         Session : Session_Type) return Boolean\n       is abstract;\n-      --  Returns True if P match for the current session and False otherwise.\n+      --  Returns True if P match for the current session and False otherwise\n \n       procedure Release (P : in out Pattern);\n-      --  Release memory used by the pattern structure.\n+      --  Release memory used by the pattern structure\n \n       --------------------------\n       -- Exact string pattern --\n@@ -156,8 +155,7 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : String_Pattern;\n-         Session : Session_Type)\n-         return    Boolean;\n+         Session : Session_Type) return Boolean;\n \n       --------------------------------\n       -- Regular expression pattern --\n@@ -172,8 +170,7 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : Regexp_Pattern;\n-         Session : Session_Type)\n-         return    Boolean;\n+         Session : Session_Type) return Boolean;\n \n       procedure Release (P : in out Regexp_Pattern);\n \n@@ -187,8 +184,7 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : Callback_Pattern;\n-         Session : Session_Type)\n-         return    Boolean;\n+         Session : Session_Type) return Boolean;\n \n    end Patterns;\n \n@@ -211,9 +207,8 @@ package body GNAT.AWK is\n \n       procedure Call\n         (A       : Action;\n-         Session : Session_Type)\n-         is abstract;\n-      --  Call action A as required.\n+         Session : Session_Type) is abstract;\n+      --  Call action A as required\n \n       -------------------\n       -- Simple action --\n@@ -317,13 +312,13 @@ package body GNAT.AWK is\n \n    procedure Finalize (Session : in out Session_Type) is\n    begin\n-      --  We release the session data only if it is not the default session.\n+      --  We release the session data only if it is not the default session\n \n       if Session.Data /= Def_Session.Data then\n          Free (Session.Data);\n \n-         --  Since we have closed the current session, set it to point\n-         --  now to the default session.\n+         --  Since we have closed the current session, set it to point now to\n+         --  the default session.\n \n          Cur_Session.Data := Def_Session.Data;\n       end if;\n@@ -334,11 +329,10 @@ package body GNAT.AWK is\n    ----------------------\n \n    function Always_True return Boolean;\n-   --  A function that always returns True.\n+   --  A function that always returns True\n \n    function Apply_Filters\n-     (Session : Session_Type := Current_Session)\n-      return    Boolean;\n+     (Session : Session_Type := Current_Session) return Boolean;\n    --  Apply any filters for which the Pattern is True for Session. It returns\n    --  True if a least one filters has been applied (i.e. associated action\n    --  callback has been called).\n@@ -358,7 +352,7 @@ package body GNAT.AWK is\n    --  number and the filename if possible.\n \n    procedure Read_Line (Session : Session_Type);\n-   --  Read a line for the Session and set Current_Line.\n+   --  Read a line for the Session and set Current_Line\n \n    procedure Split_Line (Session : Session_Type);\n    --  Split session's Current_Line according to the session separators and\n@@ -414,8 +408,7 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : String_Pattern;\n-         Session : Session_Type)\n-         return    Boolean\n+         Session : Session_Type) return Boolean\n       is\n       begin\n          return P.Str = Field (P.Rank, Session);\n@@ -427,8 +420,7 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : Regexp_Pattern;\n-         Session : Session_Type)\n-         return    Boolean\n+         Session : Session_Type) return Boolean\n       is\n          use type Regpat.Match_Location;\n \n@@ -444,8 +436,7 @@ package body GNAT.AWK is\n \n       function Match\n         (P       : Callback_Pattern;\n-         Session : Session_Type)\n-         return    Boolean\n+         Session : Session_Type) return Boolean\n       is\n          pragma Unreferenced (Session);\n \n@@ -664,14 +655,13 @@ package body GNAT.AWK is\n    -------------------\n \n    function Apply_Filters\n-     (Session : Session_Type := Current_Session)\n-      return    Boolean\n+     (Session : Session_Type := Current_Session) return Boolean\n    is\n       Filters : Pattern_Action_Table.Instance renames Session.Data.Filters;\n       Results : Boolean := False;\n \n    begin\n-      --  Iterate through the filters table, if pattern match call action.\n+      --  Iterate through the filters table, if pattern match call action\n \n       for F in 1 .. Pattern_Action_Table.Last (Filters) loop\n          if Patterns.Match (Filters.Table (F).Pattern.all, Session) then\n@@ -748,8 +738,7 @@ package body GNAT.AWK is\n \n    function Discrete_Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    Discrete\n+      Session : Session_Type := Current_Session) return Discrete\n    is\n    begin\n       return Discrete'Value (Field (Rank, Session));\n@@ -760,8 +749,7 @@ package body GNAT.AWK is\n    -----------------\n \n    function End_Of_Data\n-     (Session : Session_Type := Current_Session)\n-      return    Boolean\n+     (Session : Session_Type := Current_Session) return Boolean\n    is\n    begin\n       return Session.Data.File_Index = File_Table.Last (Session.Data.Files)\n@@ -773,8 +761,7 @@ package body GNAT.AWK is\n    -----------------\n \n    function End_Of_File\n-     (Session : Session_Type := Current_Session)\n-      return    Boolean\n+     (Session : Session_Type := Current_Session) return Boolean\n    is\n    begin\n       return Text_IO.End_Of_File (Session.Data.Current_File);\n@@ -786,8 +773,7 @@ package body GNAT.AWK is\n \n    function Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    String\n+      Session : Session_Type := Current_Session) return String\n    is\n       Fields : Field_Table.Instance renames Session.Data.Fields;\n \n@@ -800,7 +786,7 @@ package body GNAT.AWK is\n \n       elsif Rank = 0 then\n \n-         --  Returns the whole line, this is what $0 does under Session_Type.\n+         --  Returns the whole line, this is what $0 does under Session_Type\n \n          return To_String (Session.Data.Current_Line);\n \n@@ -813,8 +799,7 @@ package body GNAT.AWK is\n \n    function Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    Integer\n+      Session : Session_Type := Current_Session) return Integer\n    is\n    begin\n       return Integer'Value (Field (Rank, Session));\n@@ -830,8 +815,7 @@ package body GNAT.AWK is\n \n    function Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    Float\n+      Session : Session_Type := Current_Session) return Float\n    is\n    begin\n       return Float'Value (Field (Rank, Session));\n@@ -850,8 +834,7 @@ package body GNAT.AWK is\n    ----------\n \n    function File\n-     (Session : Session_Type := Current_Session)\n-      return    String\n+     (Session : Session_Type := Current_Session) return String\n    is\n       Files : File_Table.Instance renames Session.Data.Files;\n \n@@ -942,8 +925,7 @@ package body GNAT.AWK is\n    ----------------------\n \n    function Number_Of_Fields\n-     (Session : Session_Type := Current_Session)\n-      return    Count\n+     (Session : Session_Type := Current_Session) return Count\n    is\n    begin\n       return Count (Field_Table.Last (Session.Data.Fields));\n@@ -954,8 +936,7 @@ package body GNAT.AWK is\n    --------------------------\n \n    function Number_Of_File_Lines\n-     (Session : Session_Type := Current_Session)\n-      return    Count\n+     (Session : Session_Type := Current_Session) return Count\n    is\n    begin\n       return Count (Session.Data.FNR);\n@@ -966,8 +947,7 @@ package body GNAT.AWK is\n    ---------------------\n \n    function Number_Of_Files\n-     (Session : Session_Type := Current_Session)\n-      return    Natural\n+     (Session : Session_Type := Current_Session) return Natural\n    is\n       Files : File_Table.Instance renames Session.Data.Files;\n \n@@ -980,8 +960,7 @@ package body GNAT.AWK is\n    ---------------------\n \n    function Number_Of_Lines\n-     (Session : Session_Type := Current_Session)\n-      return    Count\n+     (Session : Session_Type := Current_Session) return Count\n    is\n    begin\n       return Count (Session.Data.NR);\n@@ -1078,7 +1057,7 @@ package body GNAT.AWK is\n       Session : Session_Type)\n    is\n       function Filename return String;\n-      --  Returns current filename and \"??\" if the informations is not\n+      --  Returns current filename and \"??\" if this information is not\n       --  available.\n \n       function Line return String;\n@@ -1090,7 +1069,6 @@ package body GNAT.AWK is\n \n       function Filename return String is\n          File : constant String := AWK.File (Session);\n-\n       begin\n          if File = \"\" then\n             return \"??\";\n@@ -1105,7 +1083,6 @@ package body GNAT.AWK is\n \n       function Line return String is\n          L : constant String := Natural'Image (Session.Data.FNR);\n-\n       begin\n          return L (2 .. L'Last);\n       end Line;\n@@ -1132,6 +1109,10 @@ package body GNAT.AWK is\n       NR  : Natural renames Session.Data.NR;\n       FNR : Natural renames Session.Data.FNR;\n \n+      ---------------\n+      -- Read_Line --\n+      ---------------\n+\n       function Read_Line return String is\n          Buffer : String (1 .. 1_024);\n          Last   : Natural;"}, {"sha": "4d7c65f86057652cfe3c8c2abf0215f599ec9ed4", "filename": "gcc/ada/g-awk.ads", "status": "modified", "additions": 26, "deletions": 43, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-awk.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-awk.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-awk.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2000-2003 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 2000-2005 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -187,31 +187,30 @@ with GNAT.Regpat;\n package GNAT.AWK is\n \n    Session_Error : exception;\n-   --  Raised when a Session is reused but is not closed.\n+   --  Raised when a Session is reused but is not closed\n \n    File_Error : exception;\n-   --  Raised when there is a file problem (see below).\n+   --  Raised when there is a file problem (see below)\n \n    End_Error : exception;\n    --  Raised when an attempt is made to read beyond the end of the last\n    --  file of a session.\n \n    Field_Error : exception;\n-   --  Raised when accessing a field value which does not exist.\n+   --  Raised when accessing a field value which does not exist\n \n    Data_Error : exception;\n-   --  Raised when it is not possible to convert a field value to a specific\n-   --  type.\n+   --  Raised when it is impossible to convert a field value to a specific type\n \n    type Count is new Natural;\n \n    type Widths_Set is array (Positive range <>) of Positive;\n-   --  Used to store a set of columns widths.\n+   --  Used to store a set of columns widths\n \n    Default_Separators : constant String := \" \" & ASCII.HT;\n \n    Use_Current : constant String := \"\";\n-   --  Value used when no separator or filename is specified in iterators.\n+   --  Value used when no separator or filename is specified in iterators\n \n    type Session_Type is limited private;\n    --  This is the main exported type. A session is used to keep the state of\n@@ -256,7 +255,7 @@ package GNAT.AWK is\n      (Separators : String       := Default_Separators;\n       Session    : Session_Type := Current_Session)\n      renames Set_Field_Separators;\n-   --  FS is the AWK abbreviation for above service.\n+   --  FS is the AWK abbreviation for above service\n \n    procedure Set_Field_Widths\n      (Field_Widths : Widths_Set;\n@@ -294,54 +293,44 @@ package GNAT.AWK is\n    -------------------------------------\n \n    function Number_Of_Fields\n-     (Session : Session_Type := Current_Session)\n-      return    Count;\n+     (Session : Session_Type := Current_Session) return Count;\n    pragma Inline (Number_Of_Fields);\n    --  Returns the number of fields in the current record. It returns 0 when\n    --  no file is being processed.\n \n    function NF\n-     (Session : Session_Type := Current_Session)\n-      return    Count\n+     (Session : Session_Type := Current_Session) return Count\n      renames Number_Of_Fields;\n-   --  AWK abbreviation for above service.\n+   --  AWK abbreviation for above service\n \n    function Number_Of_File_Lines\n-     (Session : Session_Type := Current_Session)\n-      return    Count;\n+     (Session : Session_Type := Current_Session) return Count;\n    pragma Inline (Number_Of_File_Lines);\n    --  Returns the current line number in the processed file. It returns 0 when\n    --  no file is being processed.\n \n-   function FNR\n-     (Session : Session_Type := Current_Session)\n-      return    Count renames Number_Of_File_Lines;\n-   --  AWK abbreviation for above service.\n+   function FNR (Session : Session_Type := Current_Session) return Count\n+     renames Number_Of_File_Lines;\n+   --  AWK abbreviation for above service\n \n    function Number_Of_Lines\n-     (Session : Session_Type := Current_Session)\n-      return    Count;\n+     (Session : Session_Type := Current_Session) return Count;\n    pragma Inline (Number_Of_Lines);\n    --  Returns the number of line processed until now. This is equal to number\n    --  of line in each already processed file plus FNR. It returns 0 when\n    --  no file is being processed.\n \n-   function NR\n-     (Session : Session_Type := Current_Session)\n-      return    Count\n+   function NR (Session : Session_Type := Current_Session) return Count\n      renames Number_Of_Lines;\n-   --  AWK abbreviation for above service.\n+   --  AWK abbreviation for above service\n \n    function Number_Of_Files\n-     (Session : Session_Type := Current_Session)\n-      return    Natural;\n+     (Session : Session_Type := Current_Session) return Natural;\n    pragma Inline (Number_Of_Files);\n    --  Returns the number of files associated with Session. This is the total\n    --  number of files added with Add_File and Add_Files services.\n \n-   function File\n-     (Session : Session_Type := Current_Session)\n-      return    String;\n+   function File (Session : Session_Type := Current_Session) return String;\n    --  Returns the name of the file being processed. It returns the empty\n    --  string when no file is being processed.\n \n@@ -351,24 +340,21 @@ package GNAT.AWK is\n \n    function Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    String;\n+      Session : Session_Type := Current_Session) return String;\n    --  Returns field number Rank value of the current record. If Rank = 0 it\n    --  returns the current record (i.e. the line as read in the file). It\n    --  raises Field_Error if Rank > NF or if Session is not open.\n \n    function Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    Integer;\n+      Session : Session_Type := Current_Session) return Integer;\n    --  Returns field number Rank value of the current record as an integer. It\n    --  raises Field_Error if Rank > NF or if Session is not open. It\n    --  raises Data_Error if the field value cannot be converted to an integer.\n \n    function Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    Float;\n+      Session : Session_Type := Current_Session) return Float;\n    --  Returns field number Rank value of the current record as a float. It\n    --  raises Field_Error if Rank > NF or if Session is not open. It\n    --  raises Data_Error if the field value cannot be converted to a float.\n@@ -377,8 +363,7 @@ package GNAT.AWK is\n       type Discrete is (<>);\n    function Discrete_Field\n      (Rank    : Count;\n-      Session : Session_Type := Current_Session)\n-      return    Discrete;\n+      Session : Session_Type := Current_Session) return Discrete;\n    --  Returns field number Rank value of the current record as a type\n    --  Discrete. It raises Field_Error if Rank > NF. It raises Data_Error if\n    --  the field value cannot be converted to type Discrete.\n@@ -527,16 +512,14 @@ package GNAT.AWK is\n    --  or by an instantiation of For_Every_Line (see below).\n \n    function End_Of_Data\n-     (Session : Session_Type := Current_Session)\n-      return    Boolean;\n+     (Session : Session_Type := Current_Session) return Boolean;\n    pragma Inline (End_Of_Data);\n    --  Returns True if there is no more data to be processed in Session. It\n    --  means that the latest session's file is being processed and that\n    --  there is no more data to be read in this file (End_Of_File is True).\n \n    function End_Of_File\n-     (Session : Session_Type := Current_Session)\n-      return    Boolean;\n+     (Session : Session_Type := Current_Session) return Boolean;\n    pragma Inline (End_Of_File);\n    --  Returns True when there is no more data to be processed on the current\n    --  session's file."}, {"sha": "9641d37c9af03a01648893a7a30f77d86d52ad9e", "filename": "gcc/ada/g-boubuf.ads", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-boubuf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-boubuf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-boubuf.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2003 Ada Core Technologies, Inc.               --\n+--                     Copyright (C) 2003-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,35 +44,34 @@ with System;\n generic\n    type Element is private;\n    --  The type of the values contained within buffer objects\n+\n package GNAT.Bounded_Buffers is\n    pragma Pure;\n \n    type Content is array (Positive range <>) of Element;\n-   --  Content is an internal artefact that cannot be hidden\n-   --  because protected types cannot contain type declarations.\n+   --  Content is an internal artefact that cannot be hidden because protected\n+   --  types cannot contain type declarations.\n \n    Default_Ceiling : constant System.Priority := System.Default_Priority;\n-   --  A convenience value for the Ceiling discriminant.\n+   --  A convenience value for the Ceiling discriminant\n \n    protected type Bounded_Buffer\n       (Capacity : Positive;\n-      --  Objects of type Bounded_Buffer specify the maximum\n-      --  number of Element values they can hold via the\n-      --  discriminant Capacity.\n+      --  Objects of type Bounded_Buffer specify the maximum number of Element\n+      --  values they can hold via the discriminant Capacity.\n+\n       Ceiling : System.Priority)\n-      --  Users must specify the ceiling priority for the object.\n-      --  If the Real-Time Systems Annex is not in use this value\n-      --  is not important.\n+      --  Users must specify the ceiling priority for the object. If the\n+      --  Real-Time Systems Annex is not in use this value is not important.\n    is\n       pragma Priority (Ceiling);\n \n       entry Insert (Item : in Element);\n-      --  Insert Item into the buffer. Blocks caller\n-      --  until space is available.\n+      --  Insert Item into the buffer, blocks caller until space is available\n \n       entry Remove (Item : out Element);\n-      --  Remove next available Element from buffer.\n-      --  Blocks caller until an Element is available.\n+      --  Remove next available Element from buffer. Blocks caller until an\n+      --  Element is available.\n \n       function Empty return Boolean;\n       --  Returns whether the instance contains any Elements.\n@@ -89,13 +88,16 @@ package GNAT.Bounded_Buffers is\n \n    private\n       Values   : Content (1 .. Capacity);\n-      --  The container for the values held by the buffer instance.\n+      --  The container for the values held by the buffer instance\n+\n       Next_In  : Positive := 1;\n-      --  The index of the next Element inserted. Wraps around.\n+      --  The index of the next Element inserted. Wraps around\n+\n       Next_Out : Positive := 1;\n-      --  The index of the next Element removed. Wraps around.\n+      --  The index of the next Element removed. Wraps around\n+\n       Count    : Natural  := 0;\n-      --  The number of Elements currently held.\n+      --  The number of Elements currently held\n    end Bounded_Buffer;\n \n end GNAT.Bounded_Buffers;"}, {"sha": "2537f7039358f810f643d506fdfb23e43ccb734f", "filename": "gcc/ada/g-bubsor.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-bubsor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-bubsor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-bubsor.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "19dcbef7db9ca5ca40931b73d3cdac6f51198573", "filename": "gcc/ada/g-bubsor.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-bubsor.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-bubsor.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-bubsor.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,7 +44,7 @@\n --  has the advantage of being Pure, while this unit can only be Preelaborate.\n \n package GNAT.Bubble_Sort is\n-pragma Preelaborate (Bubble_Sort);\n+   pragma Preelaborate;\n \n    --  The data to be sorted is assumed to be indexed by integer values from\n    --  1 to N, where N is the number of items to be sorted."}, {"sha": "5d21e97b8a9c5cec9c8dbd465ee56a10573c020a", "filename": "gcc/ada/g-busora.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busora.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busora.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-busora.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b3e3b6070c7b8314ebca137495d5c152faec0c8b", "filename": "gcc/ada/g-busora.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busora.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busora.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-busora.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@\n --  offers a similar routine with a more convenient interface.\n \n package GNAT.Bubble_Sort_A is\n-pragma Preelaborate (Bubble_Sort_A);\n+   pragma Preelaborate;\n \n    --  The data to be sorted is assumed to be indexed by integer values from\n    --  1 to N, where N is the number of items to be sorted. In addition, the"}, {"sha": "c9d9daefb4782fcce6d26ec25633f5726e1fec1c", "filename": "gcc/ada/g-busorg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busorg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busorg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-busorg.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1e90d347a32c379d1ef261dccb004fcdc0861544", "filename": "gcc/ada/g-busorg.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busorg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-busorg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-busorg.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,7 +63,7 @@ generic\n    --  item is greater than or equal to the Op1 item.\n \n package GNAT.Bubble_Sort_G is\n-pragma Pure (Bubble_Sort_G);\n+   pragma Pure;\n \n    procedure Sort (N : Natural);\n    --  This procedures sorts items in the range from 1 to N into ascending"}, {"sha": "e73b10364f50b50e5859545a023ef61fec9e2a42", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -96,8 +96,7 @@ package body GNAT.Calendar is\n    function Julian_Day\n      (Year  : Year_Number;\n       Month : Month_Number;\n-      Day   : Day_Number)\n-      return  Integer\n+      Day   : Day_Number) return Integer\n    is\n       Internal_Year  : Integer;\n       Internal_Month : Integer;\n@@ -227,8 +226,7 @@ package body GNAT.Calendar is\n       Hour       : Hour_Number;\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n-      Sub_Second : Second_Duration := 0.0)\n-      return Time\n+      Sub_Second : Second_Duration := 0.0) return Time\n    is\n       Dsecs : constant Day_Duration :=\n                 Day_Duration (Hour * 3600 + Minute * 60 + Second) +\n@@ -291,8 +289,7 @@ package body GNAT.Calendar is\n    ------------------\n \n    function Week_In_Year\n-     (Date : Ada.Calendar.Time)\n-      return Week_In_Year_Number\n+     (Date : Ada.Calendar.Time) return Week_In_Year_Number\n    is\n       Year       : Year_Number;\n       Month      : Month_Number;\n@@ -306,7 +303,7 @@ package body GNAT.Calendar is\n    begin\n       Split (Date, Year, Month, Day, Hour, Minute, Second, Sub_Second);\n \n-      --  Day offset number for the first week of the year.\n+      --  Day offset number for the first week of the year\n \n       Offset := Julian_Day (Year, 1, 1) mod 7;\n "}, {"sha": "5cbff83ef3b3fb2bc88ef0f1758b3f5a8a79f957", "filename": "gcc/ada/g-calend.ads", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,7 +65,7 @@ package GNAT.Calendar is\n    --  Second_Duration precision depends on the target clock precision.\n \n    function Day_Of_Week (Date : Ada.Calendar.Time) return Day_Name;\n-   --  Return the day name.\n+   --  Return the day name\n \n    function Day_In_Year (Date : Ada.Calendar.Time) return Day_In_Year_Number;\n    --  Returns the day number in the year. (1st January is day 1 and 31st\n@@ -93,9 +93,8 @@ package GNAT.Calendar is\n       Hour       : Hour_Number;\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n-      Sub_Second : Second_Duration := 0.0)\n-      return Ada.Calendar.Time;\n-   --  Returns an Ada.Calendar.Time data built from the date and time values.\n+      Sub_Second : Second_Duration := 0.0) return Ada.Calendar.Time;\n+   --  Returns an Ada.Calendar.Time data built from the date and time values\n \n    --  C timeval conversion\n \n@@ -119,11 +118,11 @@ private\n    function Julian_Day\n      (Year  : Ada.Calendar.Year_Number;\n       Month : Ada.Calendar.Month_Number;\n-      Day   : Ada.Calendar.Day_Number)\n-      return  Integer;\n-   --  Compute Julian day number.\n+      Day   : Ada.Calendar.Day_Number) return Integer;\n+   --  Compute Julian day number\n    --\n-   --  The code of this function is a modified version of algorithm\n-   --  199 from the Collected Algorithms of the ACM.\n-   --  The author of algorithm 199 is Robert G. Tantzen.\n+   --  The code of this function is a modified version of algorithm 199 from\n+   --  the Collected Algorithms of the ACM. The author of algorithm 199 is\n+   --  Robert G. Tantzen.\n+\n end GNAT.Calendar;"}, {"sha": "be72488b39eb16f81d118d8fffe3cb21f04222cb", "filename": "gcc/ada/g-casuti.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-casuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-casuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-casuti.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cae617cce5b11af17fceb90412d3ccc170a25ea4", "filename": "gcc/ada/g-casuti.ads", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-casuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-casuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-casuti.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,13 +43,12 @@\n with System.Case_Util;\n \n package GNAT.Case_Util is\n-pragma Pure (Case_Util);\n-\n-pragma Elaborate_Body;\n---  The elaborate body is because we have a dummy body to deal with bootstrap\n---  path problems (we used to have a real body, and now we don't need it any\n---  more, but the bootstrap requires that we have a dummy body, since otherwise\n---  the old body gets picked up.\n+   pragma Pure;\n+   pragma Elaborate_Body;\n+   --  The elaborate body is because we have a dummy body to deal with\n+   --  bootstrap path problems (we used to have a real body, and now we don't\n+   --  need it any more, but the bootstrap requires that we have a dummy body,\n+   --  since otherwise the old body gets picked up.\n \n    --  Note: all the following functions handle the full Latin-1 set\n "}, {"sha": "147601dcb70aa7d5d817d6b925d938eff4163136", "filename": "gcc/ada/g-catiio.adb", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-catiio.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1999-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1999-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -63,10 +63,10 @@ package body GNAT.Calendar.Time_IO is\n    -----------------------\n \n    function Am_Pm (H : Natural) return String;\n-   --  return AM or PM depending on the hour H\n+   --  Return AM or PM depending on the hour H\n \n    function Hour_12 (H : Natural) return Positive;\n-   --  Convert a 1-24h format to a 0-12 hour format.\n+   --  Convert a 1-24h format to a 0-12 hour format\n \n    function Image (Str : String; Length : Natural := 0) return String;\n    --  Return Str capitalized and cut to length number of characters. If\n@@ -75,18 +75,15 @@ package body GNAT.Calendar.Time_IO is\n    function Image\n      (N       : Long_Integer;\n       Padding : Padding_Mode := Zero;\n-      Length  : Natural := 0)\n-      return    String;\n-   --  Return image of N. This number is eventually padded with zeros or\n-   --  spaces depending of the length required. If length is 0 then no padding\n-   --  occurs.\n+      Length  : Natural := 0) return String;\n+   --  Return image of N. This number is eventually padded with zeros or spaces\n+   --  depending of the length required. If length is 0 then no padding occurs.\n \n    function Image\n      (N       : Integer;\n       Padding : Padding_Mode := Zero;\n-      Length  : Natural := 0)\n-      return    String;\n-   --  As above with N provided in Integer format.\n+      Length  : Natural := 0) return String;\n+   --  As above with N provided in Integer format\n \n    -----------\n    -- Am_Pm --\n@@ -122,8 +119,7 @@ package body GNAT.Calendar.Time_IO is\n \n    function Image\n      (Str    : String;\n-      Length : Natural := 0)\n-      return   String\n+      Length : Natural := 0) return String\n    is\n       use Ada.Characters.Handling;\n       Local : constant String :=\n@@ -144,8 +140,7 @@ package body GNAT.Calendar.Time_IO is\n    function Image\n      (N       : Integer;\n       Padding : Padding_Mode := Zero;\n-      Length  : Natural := 0)\n-      return    String\n+      Length  : Natural := 0) return String\n    is\n    begin\n       return Image (Long_Integer (N), Padding, Length);\n@@ -154,8 +149,7 @@ package body GNAT.Calendar.Time_IO is\n    function Image\n      (N       : Long_Integer;\n       Padding : Padding_Mode := Zero;\n-      Length  : Natural := 0)\n-      return    String\n+      Length  : Natural := 0) return String\n    is\n       function Pad_Char return String;\n \n@@ -192,13 +186,12 @@ package body GNAT.Calendar.Time_IO is\n \n    function Image\n      (Date    : Ada.Calendar.Time;\n-      Picture : Picture_String)\n-      return    String\n+      Picture : Picture_String) return String\n    is\n-      Padding    : Padding_Mode := Zero;\n+      Padding : Padding_Mode := Zero;\n       --  Padding is set for one directive\n \n-      Result     : Unbounded_String;\n+      Result : Unbounded_String;\n \n       Year       : Year_Number;\n       Month      : Month_Number;"}, {"sha": "639f3631a3738fc52f6b298c599192f6f7c2deb1", "filename": "gcc/ada/g-catiio.ads", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-catiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-catiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-catiio.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1999-2003 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 1999-2005, AdaCore                     --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -116,16 +116,15 @@ package GNAT.Calendar.Time_IO is\n \n    function Image\n      (Date    : Ada.Calendar.Time;\n-      Picture : Picture_String)\n-      return    String;\n-   --  Return Date as a string with format Picture.\n-   --  raise Picture_Error if picture string is wrong\n+      Picture : Picture_String) return String;\n+   --  Return Date as a string with format Picture. Raise Picture_Error if\n+   --  picture string is wrong.\n \n    procedure Put_Time\n      (Date    : Ada.Calendar.Time;\n       Picture : Picture_String);\n-   --  Put Date with format Picture.\n-   --  raise Picture_Error if picture string is wrong\n+   --  Put Date with format Picture. Raise Picture_Error if picture string is\n+   --  wrong\n \n private\n    ISO_Date      : constant Picture_String := \"%Y-%m-%d\";"}, {"sha": "03bbeb417f6ef08c9e11c155f9cd9fb151df1f91", "filename": "gcc/ada/g-cgi.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgi.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--                      Copyright (C) 2001-2005, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,10 +50,10 @@ package body GNAT.CGI is\n    --  services exported by this unit.\n \n    Current_Method : Method_Type;\n-   --  This is the current method used to pass CGI parameters.\n+   --  This is the current method used to pass CGI parameters\n \n    Header_Sent : Boolean := False;\n-   --  Will be set to True when the header will be sent.\n+   --  Will be set to True when the header will be sent\n \n    --  Key/Value table declaration\n \n@@ -72,7 +72,7 @@ package body GNAT.CGI is\n \n    procedure Check_Environment;\n    pragma Inline (Check_Environment);\n-   --  This procedure will raise Data_Error if Valid_Environment is False.\n+   --  This procedure will raise Data_Error if Valid_Environment is False\n \n    procedure Initialize;\n    --  Initialize CGI package by reading the runtime environment. This\n@@ -178,7 +178,7 @@ package body GNAT.CGI is\n       --  for the data is passed in CONTENT_LENGTH environment variable.\n \n       procedure Set_Parameter_Table (Data : String);\n-      --  Parse the parameter data and set the parameter table.\n+      --  Parse the parameter data and set the parameter table\n \n       --------------------\n       -- Initialize_GET --\n@@ -328,7 +328,7 @@ package body GNAT.CGI is\n       Required : Boolean := False) return String\n    is\n       function Get_Environment (Variable_Name : String) return String;\n-      --  Returns the environment variable content.\n+      --  Returns the environment variable content\n \n       ---------------------\n       -- Get_Environment --"}, {"sha": "6ad3d5f6b4f4a20ff600538a42a5152af3ee3f7e", "filename": "gcc/ada/g-cgi.ads", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgi.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2000-2003 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 2000-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -115,7 +115,7 @@ package GNAT.CGI is\n    --  and will be raised when calling any services below (except for Ok).\n \n    Parameter_Not_Found : exception;\n-   --  This exception is raised when a specific parameter is not found.\n+   --  This exception is raised when a specific parameter is not found\n \n    Default_Header : constant String := \"Content-type: text/html\";\n    --  This is the default header returned by Put_Header. If the CGI program\n@@ -186,12 +186,11 @@ package GNAT.CGI is\n    --  the exception Data_Error.\n \n    function Method return Method_Type;\n-   --  Returns the method used to call the CGI.\n+   --  Returns the method used to call the CGI\n \n    function Metavariable\n      (Name     : Metavariable_Name;\n-      Required : Boolean := False)\n-      return     String;\n+      Required : Boolean := False) return String;\n    --  Returns parameter Name value. Returns the null string if Name\n    --  environment variable is not defined or raises Data_Error if\n    --  Required is set to True.\n@@ -215,8 +214,7 @@ package GNAT.CGI is\n \n    function Value\n      (Key      : String;\n-      Required : Boolean := False)\n-      return     String;\n+      Required : Boolean := False) return String;\n    --  Returns the parameter value associated to the parameter named Key.\n    --  If parameter does not exist, returns an empty string if Required\n    --  is False and raises the exception Parameter_Not_Found otherwise.\n@@ -227,7 +225,7 @@ package GNAT.CGI is\n    --  (i.e. Position > Argument_Count)\n \n    function Key_Exists (Key : String) return Boolean;\n-   --  Returns True if the parameter named Key existx and False otherwise.\n+   --  Returns True if the parameter named Key exists and False otherwise\n \n    function Key (Position : Positive) return String;\n    --  Returns the parameter key associated with the CGI parameter number"}, {"sha": "50c9ce86476e58f892f5d01d51df1598eb29e58e", "filename": "gcc/ada/g-cgicoo.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgicoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgicoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgicoo.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2000-2003 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 2000-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,12 +43,12 @@ package body GNAT.CGI.Cookie is\n    use Ada;\n \n    Valid_Environment : Boolean := False;\n-   --  This boolean will be set to True if the initialization was fine.\n+   --  This boolean will be set to True if the initialization was fine\n \n    Header_Sent : Boolean := False;\n-   --  Will be set to True when the header will be sent.\n+   --  Will be set to True when the header will be sent\n \n-   --  Cookie data that have been added.\n+   --  Cookie data that has been added\n \n    type String_Access is access String;\n \n@@ -67,14 +67,14 @@ package body GNAT.CGI.Cookie is\n    end record;\n \n    package Cookie_Table is new Table (Cookie_Data, Positive, 1, 5, 50);\n-   --  This is the table to keep all cookies to be sent back to the server.\n+   --  This is the table to keep all cookies to be sent back to the server\n \n    package Key_Value_Table is new Table (Key_Value, Positive, 1, 1, 50);\n-   --  This is the table to keep all cookies received from the server.\n+   --  This is the table to keep all cookies received from the server\n \n    procedure Check_Environment;\n    pragma Inline (Check_Environment);\n-   --  This procedure will raise Data_Error if Valid_Environment is False.\n+   --  This procedure will raise Data_Error if Valid_Environment is False\n \n    procedure Initialize;\n    --  Initialize CGI package by reading the runtime environment. This\n@@ -149,7 +149,7 @@ package body GNAT.CGI.Cookie is\n       HTTP_COOKIE : constant String := Metavariable (CGI.HTTP_Cookie);\n \n       procedure Set_Parameter_Table (Data : String);\n-      --  Parse Data and insert information in Key_Value_Table.\n+      --  Parse Data and insert information in Key_Value_Table\n \n       -------------------------\n       -- Set_Parameter_Table --\n@@ -161,8 +161,8 @@ package body GNAT.CGI.Cookie is\n          --  Add a single parameter into the table at index K. The parameter\n          --  format is \"key=value\".\n \n-         Count : constant Positive\n-           := 1 + Strings.Fixed.Count (Data, Strings.Maps.To_Set (\";\"));\n+         Count : constant Positive :=\n+                   1 + Strings.Fixed.Count (Data, Strings.Maps.To_Set (\";\"));\n          --  Count is the number of parameters in the string. Parameters are\n          --  separated by ampersand character.\n \n@@ -185,6 +185,8 @@ package body GNAT.CGI.Cookie is\n             end if;\n          end Add_Parameter;\n \n+      --  Start of processing for Set_Parameter_Table\n+\n       begin\n          Key_Value_Table.Set_Last (Count);\n \n@@ -196,11 +198,13 @@ package body GNAT.CGI.Cookie is\n             Index := Sep + 2;\n          end loop;\n \n-         --  add last parameter\n+         --  Add last parameter\n \n          Add_Parameter (Count, Data (Index .. Data'Last));\n       end Set_Parameter_Table;\n \n+   --  Start of processing for Initialize\n+\n    begin\n       if HTTP_COOKIE /= \"\" then\n          Set_Parameter_Table (HTTP_COOKIE);\n@@ -245,7 +249,6 @@ package body GNAT.CGI.Cookie is\n      (Header : String  := Default_Header;\n       Force  : Boolean := False)\n    is\n-\n       procedure Output_Cookies;\n       --  Iterate through the list of cookies to be sent to the server\n       --  and output them.\n@@ -264,7 +267,7 @@ package body GNAT.CGI.Cookie is\n             Max_Age : Natural;\n             Path    : String;\n             Secure  : Boolean);\n-         --  Output one cookie in the CGI header.\n+         --  Output one cookie in the CGI header\n \n          -----------------------\n          -- Output_One_Cookie --\n@@ -344,7 +347,8 @@ package body GNAT.CGI.Cookie is\n       Domain  : String   := \"\";\n       Max_Age : Natural  := Natural'Last;\n       Path    : String   := \"/\";\n-      Secure  : Boolean  := False) is\n+      Secure  : Boolean  := False)\n+   is\n    begin\n       Cookie_Table.Increment_Last;\n \n@@ -364,8 +368,7 @@ package body GNAT.CGI.Cookie is\n \n    function Value\n      (Key      : String;\n-      Required : Boolean := False)\n-      return     String\n+      Required : Boolean := False) return String\n    is\n    begin\n       Check_Environment;"}, {"sha": "c8d56cbf5d3552a9bf1bb9b425ddd2b80a4cd1b9", "filename": "gcc/ada/g-cgicoo.ads", "status": "modified", "additions": 22, "deletions": 23, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgicoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgicoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgicoo.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2000-2001 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 2000-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,9 +38,9 @@\n --  The complete CGI Cookie specification can be found in the RFC2109 at:\n --     http://www.ics.uci.edu/pub/ietf/http/rfc2109.txt\n \n---  This package builds up data tables whose memory is not released.\n---  A CGI program is expected to be a short lived program and so it\n---  is adequate to have the underlying OS free the program on exit.\n+--  This package builds up data tables whose memory is not released. A CGI\n+--  program is expected to be a short lived program and so it is adequate to\n+--  have the underlying OS free the program on exit.\n \n package GNAT.CGI.Cookie is\n \n@@ -50,7 +50,7 @@ package GNAT.CGI.Cookie is\n    --  will be raised when calling any services below (except for Ok).\n \n    Cookie_Not_Found : exception;\n-   --  This exception is raised when a specific parameter is not found.\n+   --  This exception is raised when a specific parameter is not found\n \n    procedure Put_Header\n      (Header : String  := Default_Header;\n@@ -67,33 +67,32 @@ package GNAT.CGI.Cookie is\n    --     max_age=<max_age>; path=<path>[; secured]\n \n    function Ok return Boolean;\n-   --  Returns True if the CGI cookie environment is valid and False\n-   --  otherwise. Every service used when the CGI environment is not valid\n-   --  will raise the exception Data_Error.\n+   --  Returns True if the CGI cookie environment is valid and False otherwise.\n+   --  Every service used when the CGI environment is not valid will raise the\n+   --  exception Data_Error.\n \n    function Count return Natural;\n-   --  Returns the number of cookies received by the CGI.\n+   --  Returns the number of cookies received by the CGI\n \n    function Value\n      (Key      : String;\n-      Required : Boolean := False)\n-      return     String;\n-   --  Returns the cookie value associated with the cookie named Key. If\n-   --  cookie does not exist, returns an empty string if Required is\n-   --  False and raises the exception Cookie_Not_Found otherwise.\n+      Required : Boolean := False) return String;\n+   --  Returns the cookie value associated with the cookie named Key. If cookie\n+   --  does not exist, returns an empty string if Required is False and raises\n+   --  the exception Cookie_Not_Found otherwise.\n \n    function Value (Position : Positive) return String;\n-   --  Returns the value associated with the cookie number Position\n-   --  of the CGI. It raises Cookie_Not_Found if there is no such\n-   --  cookie (i.e. Position > Count)\n+   --  Returns the value associated with the cookie number Position of the CGI.\n+   --  It raises Cookie_Not_Found if there is no such cookie (i.e. Position >\n+   --  Count)\n \n    function Exists (Key : String) return Boolean;\n-   --  Returns True if the cookie named Key exist and False otherwise.\n+   --  Returns True if the cookie named Key exist and False otherwise\n \n    function Key (Position : Positive) return String;\n-   --  Returns the key associated with the cookie number Position of\n-   --  the CGI. It raises Cookie_Not_Found if there is no such cookie\n-   --  (i.e. Position > Count)\n+   --  Returns the key associated with the cookie number Position of the CGI.\n+   --  It raises Cookie_Not_Found if there is no such cookie (i.e. Position >\n+   --  Count)\n \n    procedure Set\n      (Key     : String;\n@@ -103,8 +102,8 @@ package GNAT.CGI.Cookie is\n       Max_Age : Natural := Natural'Last;\n       Path    : String  := \"/\";\n       Secure  : Boolean := False);\n-   --  Add a cookie to the list of cookies. This will be sent back\n-   --  to the server by the Put_Header service above.\n+   --  Add a cookie to the list of cookies. This will be sent back to the\n+   --  server by the Put_Header service above.\n \n    generic\n       with procedure"}, {"sha": "4c353d865693eb0d865c898c7460cef70dd6d4ad", "filename": "gcc/ada/g-cgideb.adb", "status": "modified", "additions": 27, "deletions": 53, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgideb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgideb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgideb.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2000-2001 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 2000-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,13 +37,11 @@ package body GNAT.CGI.Debug is\n \n    use Ada.Strings.Unbounded;\n \n-   --\n-   --  Define the abstract type which act as a template for all debug IO mode.\n+   --  Define the abstract type which act as a template for all debug IO modes.\n    --  To create a new IO mode you must:\n    --     1. create a new package spec\n    --     2. create a new type derived from IO.Format\n    --     3. implement all the abstract rountines in IO\n-   --\n \n    package IO is\n \n@@ -54,51 +52,39 @@ package body GNAT.CGI.Debug is\n       function Variable\n         (Mode  : Format;\n          Name  : String;\n-         Value : String)\n-         return  String\n-      is abstract;\n-      --  Returns variable Name and its associated value.\n-\n-      function New_Line\n-        (Mode : Format)\n-         return String\n-      is abstract;\n+         Value : String) return String is abstract;\n+      --  Returns variable Name and its associated value\n+\n+      function New_Line (Mode : Format) return String is abstract;\n       --  Returns a new line such as this concatenated between two strings\n       --  will display the strings on two lines.\n \n-      function Title\n-        (Mode : Format;\n-         Str  : String)\n-         return String\n-      is abstract;\n+      function Title (Mode : Format; Str : String) return String is abstract;\n       --  Returns Str as a Title. A title must be alone and centered on a\n       --  line. Next output will be on the following line.\n \n       function Header\n         (Mode : Format;\n-         Str  : String)\n-         return String\n-      is abstract;\n+         Str  : String) return String is abstract;\n       --  Returns Str as an Header. An header must be alone on its line. Next\n       --  output will be on the following line.\n \n    end IO;\n \n-   --\n-   --  IO for HTML mode\n-   --\n+   ----------------------\n+   -- IO for HTML Mode --\n+   ----------------------\n \n    package HTML_IO is\n \n-      --  see IO for comments about these routines.\n+      --  See IO for comments about these routines\n \n       type Format is new IO.Format with null record;\n \n       function Variable\n         (IO    : Format;\n          Name  : String;\n-         Value : String)\n-         return  String;\n+         Value : String) return String;\n \n       function New_Line (IO : in Format) return String;\n \n@@ -108,9 +94,9 @@ package body GNAT.CGI.Debug is\n \n    end HTML_IO;\n \n-   --\n-   --  IO for plain text mode\n-   --\n+   ----------------------------\n+   -- IO for Plain Text Mode --\n+   ----------------------------\n \n    package Text_IO is\n \n@@ -121,8 +107,7 @@ package body GNAT.CGI.Debug is\n       function Variable\n         (IO    : Format;\n          Name  : String;\n-         Value : String)\n-         return  String;\n+         Value : String) return String;\n \n       function New_Line (IO : in Format) return String;\n \n@@ -188,10 +173,10 @@ package body GNAT.CGI.Debug is\n       NL : constant String := (1 => ASCII.LF);\n \n       function Bold (S : in String) return String;\n-      --  Returns S as an HTML bold string.\n+      --  Returns S as an HTML bold string\n \n       function Italic (S : in String) return String;\n-      --  Returns S as an HTML italic string.\n+      --  Returns S as an HTML italic string\n \n       ----------\n       -- Bold --\n@@ -207,8 +192,7 @@ package body GNAT.CGI.Debug is\n       ------------\n \n       function Header (IO : in Format; Str : in String) return String is\n-         pragma Warnings (Off, IO);\n-\n+         pragma Unreferenced (IO);\n       begin\n          return \"<h2>\" & Str & \"</h2>\" & NL;\n       end Header;\n@@ -227,8 +211,7 @@ package body GNAT.CGI.Debug is\n       --------------\n \n       function New_Line (IO : in Format) return String is\n-         pragma Warnings (Off, IO);\n-\n+         pragma Unreferenced (IO);\n       begin\n          return \"<br>\" & NL;\n       end New_Line;\n@@ -238,8 +221,7 @@ package body GNAT.CGI.Debug is\n       -----------\n \n       function Title (IO : in Format; Str : in String) return String is\n-         pragma Warnings (Off, IO);\n-\n+         pragma Unreferenced (IO);\n       begin\n          return \"<p align=center><font size=+2>\" & Str & \"</font></p>\" & NL;\n       end Title;\n@@ -251,11 +233,9 @@ package body GNAT.CGI.Debug is\n       function Variable\n         (IO    : Format;\n          Name  : String;\n-         Value : String)\n-         return  String\n+         Value : String) return String\n       is\n-         pragma Warnings (Off, IO);\n-\n+         pragma Unreferenced (IO);\n       begin\n          return Bold (Name) & \" = \" & Italic (Value);\n       end Variable;\n@@ -282,8 +262,7 @@ package body GNAT.CGI.Debug is\n       --------------\n \n       function New_Line (IO : in Format) return String is\n-         pragma Warnings (Off, IO);\n-\n+         pragma Unreferenced (IO);\n       begin\n          return String'(1 => ASCII.LF);\n       end New_Line;\n@@ -295,7 +274,6 @@ package body GNAT.CGI.Debug is\n       function Title (IO : in Format; Str : in String) return String is\n          Spaces : constant Natural := (80 - Str'Length) / 2;\n          Indent : constant String (1 .. Spaces) := (others => ' ');\n-\n       begin\n          return Indent & Str & New_Line (IO);\n       end Title;\n@@ -307,11 +285,9 @@ package body GNAT.CGI.Debug is\n       function Variable\n         (IO    : Format;\n          Name  : String;\n-         Value : String)\n-         return  String\n+         Value : String) return String\n       is\n-         pragma Warnings (Off, IO);\n-\n+         pragma Unreferenced (IO);\n       begin\n          return \"   \" & Name & \" = \" & Value;\n       end Variable;\n@@ -324,7 +300,6 @@ package body GNAT.CGI.Debug is\n \n    function HTML_Output return String is\n       HTML : HTML_IO.Format;\n-\n    begin\n       return IO.Output (Mode => HTML);\n    end HTML_Output;\n@@ -335,7 +310,6 @@ package body GNAT.CGI.Debug is\n \n    function Text_Output return String is\n       Text : Text_IO.Format;\n-\n    begin\n       return IO.Output (Mode => Text);\n    end Text_Output;"}, {"sha": "7192ed227baf0cabd0ff3036469436dbbf775f58", "filename": "gcc/ada/g-cgideb.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgideb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-cgideb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgideb.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2000 Ada Core Technologies, Inc.              --\n+--                     Copyright (C) 2000-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,9 +36,9 @@\n \n package GNAT.CGI.Debug is\n \n-   --  Both functions below output all possible CGI parameters set. These\n-   --  are the form field and all CGI environment variables which make the\n-   --  CGI environment at runtime.\n+   --  Both functions below output all possible CGI parameters set. These are\n+   --  the form field and all CGI environment variables which make the CGI\n+   --  environment at runtime.\n \n    function Text_Output return String;\n    --  Returns a plain text version of the CGI runtime environment"}, {"sha": "c6142bddbfa09cdf3c0ae555ff803127ba1971a3", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -49,23 +49,22 @@ package body GNAT.Command_Line is\n    The_Parameter : Parameter_Type;\n    The_Switch    : Parameter_Type;\n    --  This type and this variable are provided to store the current switch\n-   --  and parameter\n+   --  and parameter.\n \n    type Is_Switch_Type is array (1 .. CL.Argument_Count) of Boolean;\n    pragma Pack (Is_Switch_Type);\n \n    Is_Switch : Is_Switch_Type := (others => False);\n    --  Indicates wich arguments on the command line are considered not be\n-   --  switches or parameters to switches (this leaves e.g. the filenames...)\n+   --  switches or parameters to switches (this leaves e.g. the filenames...).\n \n    type Section_Type is array (1 .. CL.Argument_Count + 1) of Section_Number;\n    pragma Pack (Section_Type);\n    Section : Section_Type := (others => 1);\n-   --  Contains the number of the section associated with the current\n-   --  switch.  If this number is 0, then it is a section delimiter, which\n-   --  is never returns by GetOpt.\n-   --  The last element of this array is set to 0 to avoid the need to test for\n-   --  if we have reached the end of the command line in loops.\n+   --  Contains the number of the section associated with the current switch.\n+   --  If this number is 0, then it is a section delimiter, which is never\n+   --  returns by GetOpt. The last element of this array is set to 0 to avoid\n+   --  the need to test for reaching the end of the command line in loops.\n \n    Current_Argument : Natural := 1;\n    --  Number of the current argument parsed on the command line\n@@ -82,8 +81,8 @@ package body GNAT.Command_Line is\n    --  True if we are expanding a file\n \n    Switch_Character : Character := '-';\n-   --  The character at the beginning of the command line arguments,\n-   --  indicating the beginning of a switch\n+   --  The character at the beginning of the command line arguments, indicating\n+   --  the beginning of a switch.\n \n    Stop_At_First : Boolean := False;\n    --  If it is True then Getopt stops at the first non-switch argument\n@@ -97,24 +96,25 @@ package body GNAT.Command_Line is\n    --  Set the parameter that will be returned by Parameter below\n \n    function Goto_Next_Argument_In_Section return Boolean;\n-   --  Go to the next argument on the command line. If we are at the end\n-   --  of the current section, we want to make sure there is no other\n-   --  identical section on the command line (there might be multiple\n-   --  instances of -largs). Returns True iff there is another argument.\n+   --  Go to the next argument on the command line. If we are at the end of the\n+   --  current section, we want to make sure there is no other identical\n+   --  section on the command line (there might be multiple instances of\n+   --  -largs). Returns True iff there is another argument.\n \n    function Get_File_Names_Case_Sensitive return Integer;\n    pragma Import (C, Get_File_Names_Case_Sensitive,\n                   \"__gnat_get_file_names_case_sensitive\");\n+\n    File_Names_Case_Sensitive : constant Boolean :=\n                                  Get_File_Names_Case_Sensitive /= 0;\n \n    procedure Canonical_Case_File_Name (S : in out String);\n-   --  Given a file name, converts it to canonical case form. For systems\n-   --  where file names are case sensitive, this procedure has no effect.\n-   --  If file names are not case sensitive (i.e. for example if you have\n-   --  the file \"xyz.adb\", you can refer to it as XYZ.adb or XyZ.AdB), then\n-   --  this call converts the given string to canonical all lower case form,\n-   --  so that two file names compare equal if they refer to the same file.\n+   --  Given a file name, converts it to canonical case form. For systems where\n+   --  file names are case sensitive, this procedure has no effect. If file\n+   --  names are not case sensitive (i.e. for example if you have the file\n+   --  \"xyz.adb\", you can refer to it as XYZ.adb or XyZ.AdB), then this call\n+   --  converts the given string to canonical all lower case form, so that two\n+   --  file names compare equal if they refer to the same file.\n \n    ------------------------------\n    -- Canonical_Case_File_Name --\n@@ -150,8 +150,8 @@ package body GNAT.Command_Line is\n       NL      : Positive;\n \n    begin\n-      --  It is assumed that a directory is opened at the current level;\n-      --  otherwise, GNAT.Directory_Operations.Directory_Error will be raised\n+      --  It is assumed that a directory is opened at the current level.\n+      --  Otherwise GNAT.Directory_Operations.Directory_Error will be raised\n       --  at the first call to Read.\n \n       loop\n@@ -162,7 +162,7 @@ package body GNAT.Command_Line is\n          if Last = 0 then\n             Close (It.Levels (Current).Dir);\n \n-            --  If we are at level 1, we are finished; return an empty string.\n+            --  If we are at level 1, we are finished; return an empty string\n \n             if Current = 1 then\n                return String'(1 .. 0 => ' ');"}, {"sha": "33494202f7e24c6f4581248a04a5c56af166784b", "filename": "gcc/ada/g-comver.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-comver.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-comver.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comver.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                 Copyright (C) 2002 Ada Core Technologies                 --\n+--                     Copyright (C) 2002-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@\n --  GNAT compiler used to compile the program. It relies on the generated\n --  constant in the binder generated package that records this information.\n \n---  Note: to use this package you must first instantiate it, e.g.\n+--  Note: to use this package you must first instantiate it, for example:\n \n --    package CVer is new GNAT.Compiler_Version;\n \n@@ -44,13 +44,12 @@\n --  to import the necessary variable from the binder file causes trouble when\n --  building a shared library, since the symbol is not available.\n \n---  Note: this unit is only useable if the main program is written\n---  in Ada. It cannot be used if the main program is written in a\n---  foreign language.\n+--  Note: this unit is only useable if the main program is written in Ada.\n+--  It cannot be used if the main program is written in foreign language.\n \n generic\n package GNAT.Compiler_Version is\n-pragma Pure (Compiler_Version);\n+   pragma Pure;\n \n    function Version return String;\n    --  This function returns the version in the form \"v.vvx (yyyyddmm)\"."}, {"sha": "07932f266378e467f6ccc0fc68cc361e3cc534e0", "filename": "gcc/ada/g-debuti.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-debuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-debuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debuti.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@\n with System;\n \n package GNAT.Debug_Utilities is\n-pragma Pure (Debug_Utilities);\n+   pragma Pure;\n \n    Address_64 : constant Boolean := Standard'Address_Size = 64;\n    --  Set true if 64 bit addresses (assumes only 32 and 64 are possible)"}, {"sha": "d9b2c0b0d0479795da3536c95ffb24f80f0788a3", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -105,11 +105,11 @@ package body GNAT.Directory_Operations is\n             Cut_Start := Cut_Start + 1;\n          end if;\n \n-         --  Cut_End point to the last basename character.\n+         --  Cut_End point to the last basename character\n \n          Cut_End := Path'Last;\n \n-         --  If basename ends with Suffix, adjust Cut_End.\n+         --  If basename ends with Suffix, adjust Cut_End\n \n          if Suffix /= \"\"\n            and then Path (Path'Last - Suffix'Length + 1 .. Cut_End) = Suffix\n@@ -279,8 +279,7 @@ package body GNAT.Directory_Operations is\n \n       procedure Double_Result_Size is\n          New_Result : constant OS_Lib.String_Access :=\n-           new String (1 .. 2 * Result'Last);\n-\n+                        new String (1 .. 2 * Result'Last);\n       begin\n          New_Result (1 .. Result_Last) := Result (1 .. Result_Last);\n          OS_Lib.Free (Result);\n@@ -306,6 +305,7 @@ package body GNAT.Directory_Operations is\n \n       procedure Read (K : in out Positive) is\n          P : Character;\n+\n       begin\n          For_All_Characters : loop\n             if Is_Var_Prefix (Path (K)) then\n@@ -314,7 +314,6 @@ package body GNAT.Directory_Operations is\n                --  Could be a variable\n \n                if K < Path'Last then\n-\n                   if Path (K + 1) = P then\n \n                      --  Not a variable after all, this is a double $ or %,\n@@ -566,7 +565,6 @@ package body GNAT.Directory_Operations is\n    function Get_Current_Dir return Dir_Name_Str is\n       Current_Dir : String (1 .. Max_Path + 1);\n       Last        : Natural;\n-\n    begin\n       Get_Current_Dir (Current_Dir, Last);\n       return Current_Dir (1 .. Last);\n@@ -708,11 +706,9 @@ package body GNAT.Directory_Operations is\n    -------------------------\n \n    function Read_Is_Thread_Safe return Boolean is\n-\n       function readdir_is_thread_safe return Integer;\n       pragma Import\n         (C, readdir_is_thread_safe, \"__gnat_readdir_is_thread_safe\");\n-\n    begin\n       return (readdir_is_thread_safe /= 0);\n    end Read_Is_Thread_Safe;"}, {"sha": "de89123a22aaf72295d43ab5b03561a45bc436f6", "filename": "gcc/ada/g-dynhta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-dynhta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-dynhta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2005 AdaCore                      --\n+--                     Copyright (C) 2002-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2518fe96a14c7885185eb9851bed91863f17a5d7", "filename": "gcc/ada/g-dynhta.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-dynhta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-dynhta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,7 @@ package GNAT.Dynamic_HTables is\n \n    generic\n       type Header_Num is range <>;\n-      --  An integer type indicating the number and range of hash headers.\n+      --  An integer type indicating the number and range of hash headers\n \n       type Element (<>) is limited private;\n       --  The type of element to be stored\n@@ -85,7 +85,7 @@ package GNAT.Dynamic_HTables is\n       --  type, but could be some other form of type such as an integer type).\n \n       Null_Ptr : Elmt_Ptr;\n-      --  The null value of the Elmt_Ptr type.\n+      --  The null value of the Elmt_Ptr type\n \n       with procedure Set_Next (E : Elmt_Ptr; Next : Elmt_Ptr);\n       with function  Next     (E : Elmt_Ptr) return Elmt_Ptr;\n@@ -154,7 +154,7 @@ package GNAT.Dynamic_HTables is\n \n    generic\n       type Header_Num is range <>;\n-      --  An integer type indicating the number and range of hash headers.\n+      --  An integer type indicating the number and range of hash headers\n \n       type Element is private;\n       --  The type of element to be stored"}, {"sha": "83df12471aca187bff4c495f92656d4d057d958c", "filename": "gcc/ada/g-heasor.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-heasor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-heasor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-heasor.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "67c3ebe6f3016d978e9d868ae66f602b44735794", "filename": "gcc/ada/g-heasor.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-heasor.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-heasor.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-heasor.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,7 @@\n --  the body for exact details of the algorithm used.\n \n package GNAT.Heap_Sort is\n-pragma Preelaborate (Heap_Sort);\n+   pragma Preelaborate;\n \n    --  The data to be sorted is assumed to be indexed by integer values\n    --  from 1 to N, where N is the number of items to be sorted."}, {"sha": "438bd712750de05c7e91f79db38b0605b64580b6", "filename": "gcc/ada/g-hesora.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesora.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesora.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-hesora.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e5f968899835bdc4d7617d646ef96d5d4d0be2d8", "filename": "gcc/ada/g-hesora.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesora.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesora.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-hesora.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@\n --  the body for exact details of the algorithm used.\n \n package GNAT.Heap_Sort_A is\n-pragma Preelaborate (Heap_Sort_A);\n+   pragma Preelaborate;\n \n    --  The data to be sorted is assumed to be indexed by integer values from\n    --  1 to N, where N is the number of items to be sorted. In addition, the"}, {"sha": "10700b07d2e4423adfae50fc4aa4aa3eaaa46daf", "filename": "gcc/ada/g-hesorg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesorg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesorg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-hesorg.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3f4d2a0721be26cebe78bba202cf5d1275423e70", "filename": "gcc/ada/g-hesorg.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesorg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-hesorg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-hesorg.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,7 +77,7 @@ generic\n    --  zero will in this case be resolved at instantiation time.\n \n package GNAT.Heap_Sort_G is\n-pragma Pure (Heap_Sort_G);\n+   pragma Pure;\n \n    procedure Sort (N : Natural);\n    --  This procedures sorts items in the range from 1 to N into ascending"}, {"sha": "7cb2660fae2b59fe3f11a6edf2a1ac9e70b029e4", "filename": "gcc/ada/g-htable.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-htable.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ef28bc5d675a3371cb53e9040ad0f2ee0095bdd0", "filename": "gcc/ada/g-htable.ads", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-htable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-htable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-htable.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,13 +46,12 @@\n with System.HTable;\n \n package GNAT.HTable is\n-pragma Preelaborate (HTable);\n-\n-pragma Elaborate_Body;\n---  The elaborate body is because we have a dummy body to deal with bootstrap\n---  path problems (we used to have a real body, and now we don't need it any\n---  more, but the bootstrap requires that we have a dummy body, since otherwise\n---  the old body gets picked up.\n+   pragma Preelaborate;\n+   pragma Elaborate_Body;\n+   --  The elaborate body is because we have a dummy body to deal with\n+   --  bootstrap path problems (we used to have a real body, and now we don't\n+   --  need it any more, but the bootstrap requires that we have a dummy body,\n+   --  since otherwise the old body gets picked up.\n \n    -------------------\n    -- Simple_HTable --"}, {"sha": "4d5f4ec1c8d403684c7d6285c55ba65cd6fc5c2e", "filename": "gcc/ada/g-io.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "89aaa992e868f2a962df1e9155905c1d0590e94e", "filename": "gcc/ada/g-io.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                      Copyright (C) 1995-2005 AdaCore                     --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,7 +41,7 @@\n --  If such checks are needed then the regular Text_IO package must be used.\n \n package GNAT.IO is\n-pragma Preelaborate (IO);\n+   pragma Preelaborate;\n \n    type File_Type is limited private;\n    --  Specifies file to be used (the only possibilities are Standard_Output"}, {"sha": "0df6e59514ed6ed6a88dc5a04b431f2472c4101b", "filename": "gcc/ada/g-io_aux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io_aux.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "91a7153b6263f773589957e439b7faf0afc71606", "filename": "gcc/ada/g-io_aux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-io_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io_aux.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                      Copyright (C) 1995-2005 AdaCore                     --\n+--                     Copyright (C) 1995-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "6bc5af04da017e83a4496ad6a5bf5849ed2e5518", "filename": "gcc/ada/g-locfil.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-locfil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-locfil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-locfil.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1995-2001 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1995-2005 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@\n --  purpose of providing realiable system wide locking capability.\n \n package GNAT.Lock_Files is\n-pragma Preelaborate;\n+   pragma Preelaborate;\n \n    Lock_Error : exception;\n    --  Exception raised if file cannot be locked\n@@ -62,7 +62,7 @@ pragma Preelaborate;\n      (Lock_File_Name : Path_Name;\n       Wait           : Duration := 1.0;\n       Retries        : Natural  := Natural'Last);\n-   --  See above. The full lock file path is given as one string.\n+   --  See above. The full lock file path is given as one string\n \n    procedure Unlock_File (Directory : Path_Name; Lock_File_Name : Path_Name);\n    --  Unlock a file. Directory can optionally terminate with a directory"}, {"sha": "e6061927615a1445aa2f1a0a28a9a9e506a9ab54", "filename": "gcc/ada/g-memdum.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-memdum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-memdum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-memdum.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005 AdaCore                      --\n+--                     Copyright (C) 2003-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "484765f711c514d1bc88162beb2374acc5206a0a", "filename": "gcc/ada/g-memdum.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-memdum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-memdum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-memdum.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005 AdaCore                      --\n+--                     Copyright (C) 2003-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,7 @@\n with System;\n \n package GNAT.Memory_Dump is\n-pragma Preelaborate (Memory_Dump);\n+   pragma Preelaborate;\n \n    procedure Dump (Addr : System.Address; Count : Natural);\n    --  Dumps indicated number (Count) of bytes, starting at the address given"}, {"sha": "a1ed4e9e797d536f31c67eeb6605b3180b84aec2", "filename": "gcc/ada/g-semaph.ads", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-semaph.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-semaph.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-semaph.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2003 Ada Core Technologies, Inc.              --\n+--                     Copyright (C) 2003-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,7 +40,7 @@ with System;\n package GNAT.Semaphores is\n \n    Default_Ceiling : constant System.Priority := System.Default_Priority;\n-   --  A convenient value for the priority discriminants that follow.\n+   --  A convenient value for the priority discriminants that follow\n \n    ------------------------\n    -- Counting_Semaphore --\n@@ -52,19 +52,18 @@ package GNAT.Semaphores is\n       --  value of this counter is set by clients via the discriminant.\n \n       Ceiling : System.Priority)\n-      --  Users must specify the ceiling priority for the object.\n-      --  If the Real-Time Systems Annex is not in use this value\n-      --  is not important.\n+      --  Users must specify the ceiling priority for the object. If the\n+      --  Real-Time Systems Annex is not in use this value is not important.\n    is\n       pragma Priority (Ceiling);\n \n       entry Seize;\n-      --  Blocks caller until/unless the semaphore's internal counter\n-      --  is greater than zero.\n-      --  Decrements the semaphore's internal counter when executed.\n+      --  Blocks caller until/unless the semaphore's internal counter is\n+      --  greater than zero. Decrements the semaphore's internal counter when\n+      --  executed.\n \n       procedure Release;\n-      --  Increments the semaphore's internal counter.\n+      --  Increments the semaphore's internal counter\n \n    private\n       Count : Natural := Initial_Value;\n@@ -75,23 +74,23 @@ package GNAT.Semaphores is\n    ----------------------\n \n    protected type Binary_Semaphore\n-      (Initially_Available : Boolean;\n-      --  Binary semaphores are either available or not; there is no\n-      --  internal count involved.  The discriminant value determines\n-      --  whether the individual object is initially available.\n+     (Initially_Available : Boolean;\n+      --  Binary semaphores are either available or not; there is no internal\n+      --  count involved. The discriminant value determines whether the\n+      --  individual object is initially available.\n+\n       Ceiling : System.Priority)\n-      --  Users must specify the ceiling priority for the object.\n-      --  If the Real-Time Systems Annex is not in use\n-      --  this value is not important.\n+      --  Users must specify the ceiling priority for the object. If the\n+      --  Real-Time Systems Annex is not in use this value is not important.\n    is\n       pragma Priority (Ceiling);\n \n       entry Seize;\n-      --  Blocks the caller unless/until semaphore is available.\n-      --  After execution the semaphore is no longer available.\n+      --  Blocks the caller unless/until semaphore is available. After\n+      --  execution the semaphore is no longer available.\n \n       procedure Release;\n-      --  Makes the semaphore available.\n+      --  Makes the semaphore available\n \n    private\n       Available : Boolean := Initially_Available;"}, {"sha": "e525cc839e3f289439e47f1170d510397f4c6a57", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -35,7 +35,7 @@\n --  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n --  should not be directly with'ed by an applications program.\n \n---  This version is for NT.\n+--  This version is for NT\n \n with GNAT.Sockets.Constants; use GNAT.Sockets.Constants;\n with Interfaces.C.Strings;   use Interfaces.C.Strings;"}, {"sha": "a73b0a7ce036198dc216dbfd07bedab5a3f64c5f", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -49,16 +49,16 @@ package GNAT.Sockets.Thin is\n    package C renames Interfaces.C;\n \n    use type C.int;\n-   --  So that we can declare the Failure constant below.\n+   --  So that we can declare the Failure constant below\n \n    Success : constant C.int :=  0;\n    Failure : constant C.int := -1;\n \n    function Socket_Errno return Integer;\n-   --  Returns last socket error number.\n+   --  Returns last socket error number\n \n    procedure Set_Socket_Errno (Errno : Integer);\n-   --  Set last socket error number.\n+   --  Set last socket error number\n \n    function Socket_Error_Message\n      (Errno : Integer)\n@@ -335,7 +335,7 @@ package GNAT.Sockets.Thin is\n \n    procedure Free_Socket_Set\n      (Set : Fd_Set_Access);\n-   --  Free system-dependent socket set.\n+   --  Free system-dependent socket set\n \n    procedure Get_Socket_From_Set\n      (Set    : Fd_Set_Access;"}, {"sha": "b8dcc2dc91508afda97d3ed8e917ca716159452e", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2001-2004 Ada Core Technologies, Inc.         --\n+--              Copyright (C) 2001-2005 Ada Core Technologies, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Temporary version for Alpha/VMS.\n+--  Temporary version for Alpha/VMS\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n with GNAT.Task_Lock;"}, {"sha": "6a19d2dc5f4604ab798dbac39e1ff57d0e67c753", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2002-2004 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 2002-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@\n --  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n --  should not be directly with'ed by an applications program.\n \n---  This is the Alpha/VMS version.\n+--  This is the Alpha/VMS version\n \n with Interfaces.C.Pointers;\n \n@@ -58,7 +58,7 @@ package GNAT.Sockets.Thin is\n    Failure : constant C.int := -1;\n \n    function Socket_Errno return Integer renames GNAT.OS_Lib.Errno;\n-   --  Returns last socket error number.\n+   --  Returns last socket error number\n \n    function Socket_Error_Message (Errno : Integer) return C.Strings.chars_ptr;\n    --  Returns the error message string for the error number Errno. If\n@@ -354,7 +354,7 @@ package GNAT.Sockets.Thin is\n \n    procedure Free_Socket_Set\n      (Set    : Fd_Set_Access);\n-   --  Free system-dependent socket set.\n+   --  Free system-dependent socket set\n \n    procedure Get_Socket_From_Set\n      (Set    : Fd_Set_Access;\n@@ -369,7 +369,7 @@ package GNAT.Sockets.Thin is\n    procedure Insert_Socket_In_Set\n      (Set    : Fd_Set_Access;\n       Socket : C.int);\n-   --  Insert socket in the socket set.\n+   --  Insert socket in the socket set\n \n    function  Is_Socket_In_Set\n      (Set    : Fd_Set_Access;\n@@ -396,7 +396,7 @@ package GNAT.Sockets.Thin is\n    procedure Remove_Socket_From_Set\n      (Set    : Fd_Set_Access;\n       Socket : C.int);\n-   --  Remove socket from the socket set.\n+   --  Remove socket from the socket set\n \n    procedure Finalize;\n    procedure Initialize (Process_Blocking_IO : Boolean);"}, {"sha": "2d818272983556b8ca749bae79ffa6953f75d0e9", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2002-2004 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 2002-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,11 +57,11 @@ package GNAT.Sockets.Thin is\n    Failure : constant C.int := -1;\n \n    function Socket_Errno return Integer renames GNAT.OS_Lib.Errno;\n-   --  Returns last socket error number.\n+   --  Returns last socket error number\n \n    function Socket_Error_Message (Errno : Integer) return C.Strings.chars_ptr;\n-   --  Returns the error message string for the error number Errno. If\n-   --  Errno is not known it returns \"Unknown system error\".\n+   --  Returns the error message string for the error number Errno. If Errno is\n+   --  not known it returns \"Unknown system error\".\n \n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n@@ -145,25 +145,25 @@ package GNAT.Sockets.Thin is\n      (Sin : Sockaddr_In_Access;\n       Len : C.int);\n    pragma Inline (Set_Length);\n-   --  Set Sin.Sin_Length to Len.\n+   --  Set Sin.Sin_Length to Len\n \n    procedure Set_Family\n      (Sin     : Sockaddr_In_Access;\n       Family  : C.int);\n    pragma Inline (Set_Family);\n-   --  Set Sin.Sin_Family to Family.\n+   --  Set Sin.Sin_Family to Family\n \n    procedure Set_Port\n      (Sin     : Sockaddr_In_Access;\n       Port    : C.unsigned_short);\n    pragma Inline (Set_Port);\n-   --  Set Sin.Sin_Port to Port.\n+   --  Set Sin.Sin_Port to Port\n \n    procedure Set_Address\n      (Sin        : Sockaddr_In_Access;\n       Address    : In_Addr);\n    pragma Inline (Set_Address);\n-   --  Set Sin.Sin_Addr to Address.\n+   --  Set Sin.Sin_Addr to Address\n \n    type Hostent is record\n       H_Name      : C.Strings.chars_ptr;"}, {"sha": "10a9a2160e5f2ab8bf02ea816fa9bf94a5af39a2", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001-2004 Ada Core Technologies, Inc.         --\n+--              Copyright (C) 2001-2005 Ada Core Technologies, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,11 +59,11 @@ package GNAT.Sockets.Thin is\n    Failure : constant C.int := -1;\n \n    function Socket_Errno return Integer renames GNAT.OS_Lib.Errno;\n-   --  Returns last socket error number.\n+   --  Returns last socket error number\n \n    function Socket_Error_Message (Errno : Integer) return C.Strings.chars_ptr;\n-   --  Returns the error message string for the error number Errno. If\n-   --  Errno is not known it returns \"Unknown system error\".\n+   --  Returns the error message string for the error number Errno. If Errno is\n+   --  not known it returns \"Unknown system error\".\n \n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n@@ -357,17 +357,17 @@ package GNAT.Sockets.Thin is\n    procedure Last_Socket_In_Set\n      (Set    : Fd_Set_Access;\n       Last   : Int_Access);\n-   --  Find the largest socket in the socket set. This is needed for\n-   --  select(). When Last_Socket_In_Set is called, parameter Last is\n-   --  a maximum value of the largest socket. This hint is used to\n-   --  avoid scanning very large socket sets. After the call, Last is\n-   --  set back to the real largest socket in the socket set.\n+   --  Find the largest socket in the socket set. This is needed for select().\n+   --  When Last_Socket_In_Set is called, parameter Last is a maximum value of\n+   --  the largest socket. This hint is used to avoid scanning very large\n+   --  socket sets. After the call, Last is set back to the real largest socket\n+   --  in the socket set.\n \n    function  New_Socket_Set\n      (Set : Fd_Set_Access) return Fd_Set_Access;\n-   --  Allocate a new socket set which is a system-dependent structure\n-   --  and initialize by copying Set if it is non-null, by making it\n-   --  empty otherwise.\n+   --  Allocate a new socket set which is a system-dependent structure and\n+   --  initialize by copying Set if it is non-null, by making it empty\n+   --  otherwise.\n \n    procedure Remove_Socket_From_Set\n      (Set    : Fd_Set_Access;"}, {"sha": "4d7a09b214044d25f0547bb3b258040aebd73279", "filename": "gcc/ada/g-table.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-table.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-table.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005 AdaCore                      --\n+--                     Copyright (C) 1998-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ package body GNAT.Table is\n    --  ensures that we initially allocate the table.\n \n    Last_Val : Integer;\n-   --  Current value of Last.\n+   --  Current value of Last\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "be068d6bdf2aa36907081ee8a5a746233688d2e7", "filename": "gcc/ada/g-traceb.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-traceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-traceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-traceb.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1999-2000 Ada Core Technologies, Inc.           --\n+--                      Copyright (C) 1999-2005, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "0f593fc62496ff58ea64d66ede53246304aa1499", "filename": "gcc/ada/g-traceb.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-traceb.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1999-2004 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 1999-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,7 +78,7 @@ package GNAT.Traceback is\n    --  Code location used in building tracebacks\n \n    subtype Tracebacks_Array is Ada.Exceptions.Traceback.Tracebacks_Array;\n-   --  Traceback array used to hold a generated traceback list.\n+   --  Traceback array used to hold a generated traceback list\n \n    ----------------\n    -- Call_Chain --"}, {"sha": "fd30de8576f2608639ea8e02c1718a5128366264", "filename": "gcc/ada/i-cobol.adb", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cobol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cobol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -31,10 +31,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  The body of Interfaces.COBOL is implementation independent (i.e. the\n---  same version is used with all versions of GNAT). The specialization\n---  to a particular COBOL format is completely contained in the private\n---  part ot the spec.\n+--  The body of Interfaces.COBOL is implementation independent (i.e. the same\n+--  version is used with all versions of GNAT). The specialization to a\n+--  particular COBOL format is completely contained in the private part of\n+--  the spec.\n \n with Interfaces; use Interfaces;\n with System;     use System;\n@@ -76,26 +76,23 @@ package body Interfaces.COBOL is\n \n    function Binary_To_Decimal\n      (Item   : Byte_Array;\n-      Format : Binary_Format)\n-      return   Integer_64;\n+      Format : Binary_Format) return Integer_64;\n    --  This function converts a numeric value in the given format to its\n    --  corresponding integer value. This is the non-generic implementation\n    --  of Decimal_Conversions.To_Decimal. The generic routine does the\n    --  final conversion to the fixed-point format.\n \n    function Numeric_To_Decimal\n      (Item   : Numeric;\n-      Format : Display_Format)\n-      return   Integer_64;\n+      Format : Display_Format) return Integer_64;\n    --  This function converts a numeric value in the given format to its\n    --  corresponding integer value. This is the non-generic implementation\n    --  of Decimal_Conversions.To_Decimal. The generic routine does the\n    --  final conversion to the fixed-point format.\n \n    function Packed_To_Decimal\n      (Item   : Packed_Decimal;\n-      Format : Packed_Format)\n-      return   Integer_64;\n+      Format : Packed_Format) return Integer_64;\n    --  This function converts a packed value in the given format to its\n    --  corresponding integer value. This is the non-generic implementation\n    --  of Decimal_Conversions.To_Decimal. The generic routine does the\n@@ -207,7 +204,7 @@ package body Interfaces.COBOL is\n    -- Numeric_To_Decimal --\n    ------------------------\n \n-   --  The following assumptions are made in the coding of this routine\n+   --  The following assumptions are made in the coding of this routine:\n \n    --    The range of COBOL_Digits is compact and the ten values\n    --    represent the digits 0-9 in sequence\n@@ -220,7 +217,7 @@ package body Interfaces.COBOL is\n \n    --    The COBOL_Minus_Digits set is disjoint from COBOL_Digits\n \n-   --  These assumptions are true for all COBOL representations we know of.\n+   --  These assumptions are true for all COBOL representations we know of\n \n    function Numeric_To_Decimal\n      (Item   : Numeric;\n@@ -708,7 +705,7 @@ package body Interfaces.COBOL is\n       --  Note that the tests here are all compile time tests\n \n       function Length (Format : Binary_Format) return Natural is\n-         pragma Warnings (Off, Format);\n+         pragma Unreferenced (Format);\n       begin\n          if Num'Digits <= 2 then\n             return 1;\n@@ -743,8 +740,7 @@ package body Interfaces.COBOL is\n       function Length\n         (Format : Packed_Format) return Natural\n       is\n-         pragma Warnings (Off, Format);\n-\n+         pragma Unreferenced (Format);\n       begin\n          case Packed_Representation is\n             when IBM =>\n@@ -847,14 +843,12 @@ package body Interfaces.COBOL is\n \n       function To_Decimal\n         (Item   : Numeric;\n-         Format : Display_Format)\n-         return   Num\n+         Format : Display_Format) return Num\n       is\n          pragma Unsuppress (Range_Check);\n \n       begin\n          return Num'Fixed_Value (Numeric_To_Decimal (Item, Format));\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;"}, {"sha": "f474d69cc058cbecc072acb9ca79292057dd6495", "filename": "gcc/ada/i-cobol.ads", "status": "modified", "additions": 13, "deletions": 22, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cobol.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cobol.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                             (ASCII Version)                              --\n --                                                                          --\n---          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -386,12 +386,10 @@ package Interfaces.COBOL is\n \n       function Valid\n         (Item   : Numeric;\n-         Format : Display_Format)\n-         return   Boolean;\n+         Format : Display_Format) return Boolean;\n \n       function Length\n-        (Format : Display_Format)\n-         return   Natural;\n+        (Format : Display_Format) return Natural;\n \n       function To_Decimal\n         (Item   : Numeric;\n@@ -400,36 +398,30 @@ package Interfaces.COBOL is\n \n       function To_Display\n         (Item   : Num;\n-         Format : Display_Format)\n-         return   Numeric;\n+         Format : Display_Format) return Numeric;\n \n       --  Packed Formats: data values are represented as Packed_Decimal\n \n       function Valid\n         (Item   : Packed_Decimal;\n-         Format : Packed_Format)\n-         return   Boolean;\n+         Format : Packed_Format) return Boolean;\n \n       function Length\n-        (Format : Packed_Format)\n-         return   Natural;\n+        (Format : Packed_Format) return Natural;\n \n       function To_Decimal\n         (Item   : Packed_Decimal;\n-         Format : Packed_Format)\n-         return   Num;\n+         Format : Packed_Format) return Num;\n \n       function To_Packed\n         (Item   : Num;\n-         Format : Packed_Format)\n-         return   Packed_Decimal;\n+         Format : Packed_Format) return Packed_Decimal;\n \n       --  Binary Formats: external data values are represented as Byte_Array\n \n       function Valid\n         (Item   : Byte_Array;\n-         Format : Binary_Format)\n-         return   Boolean;\n+         Format : Binary_Format) return Boolean;\n \n       function Length\n         (Format : Binary_Format)\n@@ -441,8 +433,7 @@ package Interfaces.COBOL is\n \n       function To_Binary\n         (Item   : Num;\n-         Format : Binary_Format)\n-         return   Byte_Array;\n+         Format : Binary_Format) return Byte_Array;\n \n       --  Internal Binary formats: data values are of type Binary/Long_Binary\n \n@@ -517,14 +508,14 @@ private\n \n    type Packed_Format is (U, S);\n \n-   Packed_Unsigned   : constant Packed_Format := U;\n-   Packed_Signed     : constant Packed_Format := S;\n+   Packed_Unsigned : constant Packed_Format := U;\n+   Packed_Signed   : constant Packed_Format := S;\n \n    type Packed_Representation_Type is (IBM);\n    --  Indicator for format used for packed decimal\n \n    Packed_Representation : constant Packed_Representation_Type := IBM;\n-   --  This version of the spec uses IBM internal format, as described above.\n+   --  This version of the spec uses IBM internal format, as described above\n \n    -----------------------------\n    -- Display Decimal Formats --"}, {"sha": "9e34a96ea59a9602dacc4e6eff697f85768288fc", "filename": "gcc/ada/i-cstrea-vms.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cstrea-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cstrea-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea-vms.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Alpha/VMS version.\n+--  This is the Alpha/VMS version\n \n with Unchecked_Conversion;\n package body Interfaces.C_Streams is\n@@ -87,8 +87,8 @@ package body Interfaces.C_Streams is\n       Ch : int;\n \n    begin\n-      --  This Fread goes with the Fwrite below.\n-      --  The C library fread sometimes can't read fputc generated files.\n+      --  This Fread goes with the Fwrite below. The C library fread sometimes\n+      --  can't read fputc generated files.\n \n       for C in 1 .. count loop\n          for S in 1 .. size loop\n@@ -125,8 +125,8 @@ package body Interfaces.C_Streams is\n       Ch : int;\n \n    begin\n-      --  This Fread goes with the Fwrite below.\n-      --  The C library fread sometimes can't read fputc generated files.\n+      --  This Fread goes with the Fwrite below. The C library fread sometimes\n+      --  can't read fputc generated files.\n \n       for C in 1 + index .. count + index loop\n          for S in 1 .. size loop"}, {"sha": "af3279817c5a1707fdf976b87567a1597c431b1b", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1995-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1995-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -123,16 +123,14 @@ package Interfaces.C_Streams is\n      (buffer : voids;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t;\n+      stream : FILEs) return size_t;\n \n    function fread\n      (buffer : voids;\n       index  : size_t;\n       size   : size_t;\n       count  : size_t;\n-      stream : FILEs)\n-      return   size_t;\n+      stream : FILEs) return size_t;\n    --  Same as normal fread, but has a parameter 'index' that indicates\n    --  the starting index for the read within 'buffer' (which must be the\n    --  address of the beginning of a whole array object with an assumed\n@@ -198,11 +196,11 @@ package Interfaces.C_Streams is\n    --  functions.\n \n    function file_exists (name : chars) return int;\n-   --  Tests if given name corresponds to an existing file.\n+   --  Tests if given name corresponds to an existing file\n \n    function is_regular_file (handle : int) return int;\n-   --  Tests if given handle is for a regular file (result 1) or for\n-   --  a non-regular file (pipe or device, result 0).\n+   --  Tests if given handle is for a regular file (result 1) or for a\n+   --  non-regular file (pipe or device, result 0).\n \n    ---------------------------------\n    -- Control of Text/Binary Mode --"}, {"sha": "84c0e22f62dabb512d9ba55e6888c2325b054b4c", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,11 +38,10 @@ with Unchecked_Conversion;\n \n package body Interfaces.C.Strings is\n \n-   --  Note that the type chars_ptr has a pragma No_Strict_Aliasing in\n-   --  the spec, to prevent any assumptions about aliasing for values\n-   --  of this type, since arbitrary addresses can be converted, and it\n-   --  is quite likely that this type will in fact be used for aliasing\n-   --  values of other types.\n+   --  Note that the type chars_ptr has a pragma No_Strict_Aliasing in the\n+   --  spec, to prevent any assumptions about aliasing for values of this type,\n+   --  since arbitrary addresses can be converted, and it is quite likely that\n+   --  this type will in fact be used for aliasing values of other types.\n \n    function To_chars_ptr is\n       new Unchecked_Conversion (Address, chars_ptr);\n@@ -116,7 +115,7 @@ package body Interfaces.C.Strings is\n       Index := Position_Of_Nul (Into => Chars);\n       Pointer := Memory_Alloc ((Index - Chars'First + 1));\n \n-      --  If nul is present, transfer string up to and including it.\n+      --  If nul is present, transfer string up to and including nul\n \n       if Index <= Chars'Last then\n          Update (Item   => Pointer,\n@@ -322,8 +321,9 @@ package body Interfaces.C.Strings is\n       Result : char_array (0 .. Length);\n \n    begin\n-      --  As per AI-00177, this is equivalent to\n-      --          To_Ada (Value (Item, Length) & nul);\n+      --  As per AI-00177, this is equivalent to:\n+\n+      --    To_Ada (Value (Item, Length) & nul);\n \n       if Item = Null_Ptr then\n          raise Dereference_Error;"}, {"sha": "477eec3db2f3594f0a134c08b9984946edd6865a", "filename": "gcc/ada/lib-sort.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Flib-sort.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Flib-sort.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-sort.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---   Copyright (C) 1992-2002 Free Software Foundation, Inc.                 --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,10 +43,10 @@ procedure Sort (Tbl : in out Unit_Ref_Table) is\n    --  even though we have to copy Tbl back and forth.\n \n    function Lt_Uname (C1, C2 : Natural) return Boolean;\n-   --  Comparison routine for comparing Unames. Needed by the sorting routine.\n+   --  Comparison routine for comparing Unames. Needed by the sorting routine\n \n    procedure Move_Uname (From : Natural; To : Natural);\n-   --  Move routine needed by the sorting routine below.\n+   --  Move routine needed by the sorting routine below\n \n    --------------\n    -- Lt_Uname --"}, {"sha": "178cfd3dd60155004ea7aa360ac3dd43e758e69a", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -1939,7 +1939,7 @@ package body Sem_Ch7 is\n                Next_Elmt (Priv_Elmt);\n             end loop;\n \n-            --  Now restore the type itself to its private view.\n+            --  Now restore the type itself to its private view\n \n             Exchange_Declarations (Id);\n "}, {"sha": "90c1c4a3ac199f3afb9ff74c8d86b32c2001b05b", "filename": "gcc/ada/sem_maps.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fsem_maps.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cb348ef4d982ff951a398a07e71f7bdff020ab/gcc%2Fada%2Fsem_maps.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_maps.adb?ref=a2cb348ef4d982ff951a398a07e71f7bdff020ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,7 @@ package body Sem_Maps is\n \n    procedure Write_Map (E : Entity_Id);\n    pragma Warnings (Off, Write_Map);\n-   --  For debugging purposes.\n+   --  For debugging purposes\n \n    ---------------------\n    -- Add_Association --\n@@ -72,7 +72,7 @@ package body Sem_Maps is\n \n       if Headers_Table.Table (Offh + J) /= No_Assoc then\n \n-         --  Place new association at head of chain.\n+         --  Place new association at head of chain\n \n          Associations_Table.Table (K).Next := Headers_Table.Table (Offh + J);\n       end if;"}]}