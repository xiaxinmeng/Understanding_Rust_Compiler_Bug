{"sha": "83d589612915545c8c0aef8049987437252a5398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNkNTg5NjEyOTE1NTQ1YzhjMGFlZjgwNDk5ODc0MzcyNTJhNTM5OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-27T16:53:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-27T16:53:51Z"}, "message": "re PR target/41484 (Please add memory forms of pmovzx* (SSE4.1))\n\n\tPR target/41484\n\t* config/i386/sse.md (sse4_1_extendv8qiv8hi2): Also accept memory\n\toperands for operand 1.\n\t(sse4_1_extendv4qiv4si2): Ditto.\n\t(sse4_1_extendv2qiv2di2): Ditto.\n\t(sse4_1_extendv4hiv4si2): Ditto.\n\t(sse4_1_extendv2hiv2di2): Ditto.\n\t(sse4_1_extendv2siv2di2): Ditto.\n\t(sse4_1_zero_extendv8qiv8hi2): Ditto.\n\t(sse4_1_zero_extendv4qiv4si2): Ditto.\n\t(sse4_1_zero_extendv2qiv2di2): Ditto.\n\t(sse4_1_zero_extendv4hiv4si2): Ditto.\n\t(sse4_1_zero_extendv2hiv2di2): Ditto.\n\t(sse4_1_zero_extendv2siv2di2): Ditto.\n\t(*sse4_1_extendv8qiv8hi2): Remove insn pattern.\n\t(*sse4_1_extendv4qiv4si2): Ditto.\n\t(*sse4_1_extendv2qiv2di2): Ditto.\n\t(*sse4_1_extendv4hiv4si2): Ditto.\n\t(*sse4_1_extendv2hiv2di2): Ditto.\n\t(*sse4_1_extendv2siv2di2): Ditto.\n\t(*sse4_1_zero_extendv8qiv8hi2): Ditto.\n\t(*sse4_1_zero_extendv4qiv4si2): Ditto.\n\t(*sse4_1_zero_extendv2qiv2di2): Ditto.\n\t(*sse4_1_zero_extendv4hiv4si2): Ditto.\n\t(*sse4_1_zero_extendv2hiv2di2): Ditto.\n\t(*sse4_1_zero_extendv2siv2di2): Ditto.\n\nFrom-SVN: r163591", "tree": {"sha": "e529af67c77515da2e3c870d9a3b1d7ee9142fe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e529af67c77515da2e3c870d9a3b1d7ee9142fe8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83d589612915545c8c0aef8049987437252a5398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d589612915545c8c0aef8049987437252a5398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d589612915545c8c0aef8049987437252a5398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d589612915545c8c0aef8049987437252a5398/comments", "author": null, "committer": null, "parents": [{"sha": "757fc8ed221b246542164c808e160db7c0f71f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/757fc8ed221b246542164c808e160db7c0f71f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/757fc8ed221b246542164c808e160db7c0f71f1c"}], "stats": {"total": 284, "additions": 55, "deletions": 229}, "files": [{"sha": "b20a4426f1a1511ee4ba0ee64e288da25770df7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 17, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d589612915545c8c0aef8049987437252a5398/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d589612915545c8c0aef8049987437252a5398/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83d589612915545c8c0aef8049987437252a5398", "patch": "@@ -1,3 +1,32 @@\n+2010-08-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/41484\n+\t* config/i386/sse.md (sse4_1_extendv8qiv8hi2): Also accept memory\n+\toperands for operand 1.\n+\t(sse4_1_extendv4qiv4si2): Ditto.\n+\t(sse4_1_extendv2qiv2di2): Ditto.\n+\t(sse4_1_extendv4hiv4si2): Ditto.\n+\t(sse4_1_extendv2hiv2di2): Ditto.\n+\t(sse4_1_extendv2siv2di2): Ditto.\n+\t(sse4_1_zero_extendv8qiv8hi2): Ditto.\n+\t(sse4_1_zero_extendv4qiv4si2): Ditto.\n+\t(sse4_1_zero_extendv2qiv2di2): Ditto.\n+\t(sse4_1_zero_extendv4hiv4si2): Ditto.\n+\t(sse4_1_zero_extendv2hiv2di2): Ditto.\n+\t(sse4_1_zero_extendv2siv2di2): Ditto.\n+\t(*sse4_1_extendv8qiv8hi2): Remove insn pattern.\n+\t(*sse4_1_extendv4qiv4si2): Ditto.\n+\t(*sse4_1_extendv2qiv2di2): Ditto.\n+\t(*sse4_1_extendv4hiv4si2): Ditto.\n+\t(*sse4_1_extendv2hiv2di2): Ditto.\n+\t(*sse4_1_extendv2siv2di2): Ditto.\n+\t(*sse4_1_zero_extendv8qiv8hi2): Ditto.\n+\t(*sse4_1_zero_extendv4qiv4si2): Ditto.\n+\t(*sse4_1_zero_extendv2qiv2di2): Ditto.\n+\t(*sse4_1_zero_extendv4hiv4si2): Ditto.\n+\t(*sse4_1_zero_extendv2hiv2di2): Ditto.\n+\t(*sse4_1_zero_extendv2siv2di2): Ditto.\n+\n 2010-08-27  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/mips/mips-protos.h (mips_function_arg_advance): Delete\n@@ -23,8 +52,7 @@\n \t(rs6000_parm_start): Likewise.\n \t(rs6000_arg_size): Likewise.\n \t(rs6000_darwin64_record_arg_advance_recurse): Likewise.\n-\t(rs6000_darwin64_record_arg): Likewise.  Take a bool instead of\n-\tan int.\n+\t(rs6000_darwin64_record_arg): Likewise.  Take a bool instead of an int.\n \t(rs6000_mixed_function_arg): Likewise.\n \t(function_arg): Rename to...\n \t(rs6000_function_arg): ...this.\n@@ -62,8 +90,8 @@\n 2010-08-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45255\n-\t* tree.c (decl_address_invariant_p): DECL_DLLIMPORT_P\n-\tstatics and externals are also invariant.\n+\t* tree.c (decl_address_invariant_p): DECL_DLLIMPORT_P statics\n+\tand externals are also invariant.\n \n 2010-08-25  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -85,8 +113,7 @@\n \n 2010-08-25  Richard Guenther  <rguenther@suse.de>\n \n-\t* alias.c (get_alias_set): Assign a single alias-set to\n-\tall pointers.\n+\t* alias.c (get_alias_set): Assign a single alias-set to all pointers.\n \t* gimple.c (gimple_get_alias_set): Remove special handling\n \tfor pointers.\n \n@@ -136,8 +163,7 @@\n \n \t* config/arm/iterators.md (VU, SE, V_widen_l): New.\n \t(V_unpack, US): New.\n-\t* config/arm/neon.md (vec_unpack<US>_hi_<mode>): Expansion for\n-\tvmovl.\n+\t* config/arm/neon.md (vec_unpack<US>_hi_<mode>): Expansion for vmovl.\n \t(vec_unpack<US>_lo_<mode>): Likewise.\n \t(neon_vec_unpack<US>_hi_<mode>): Instruction pattern for vmovl.\n \t(neon_vec_unpack<US>_lo_<mode>): Likewise.\n@@ -239,8 +265,7 @@\n \tTARGET_MEM_REF more properly.\n \t(indirect_ref_may_alias_decl_p): Likewise.\n \t* emit-rtl.c (set_mem_attributes_minus_bitpos): Keep TARGET_MEM_REFs.\n-\t* alias.c (ao_ref_from_mem): Handle TARGET_MEM_REF more\n-\tproperly.\n+\t* alias.c (ao_ref_from_mem): Handle TARGET_MEM_REF more properly.\n \n 2010-08-23  Anatoly Sokolov  <aesok@post.ru>\n \n@@ -268,10 +293,10 @@\n \t* tree-flow.h (may_be_nonaddressable_p): New definition. Make the\n \texisting static function global.\n \n-\t*tree-ssa-loop-ivopts.c (may_be_nonaddressable_p): This function\n+\t* tree-ssa-loop-ivopts.c (may_be_nonaddressable_p): This function\n \tis changed to global.\n \n-\t*tree-ssa-loop-prefetch.c (gather_memory_references_ref): Call\n+\t* tree-ssa-loop-prefetch.c (gather_memory_references_ref): Call\n \tmay_be_nonaddressable_p on base, and don't collect this reference\n \tif the address of the base could not be taken.\n \n@@ -377,7 +402,7 @@\n \tpriority.\n \t(compare_ctor, compare_dtor): Move to ipa.c; use DECL_UID to stabilize\n \tsort; reverse order of constructors.\n-\t(cgraph_build_cdtor_fns):Move to ipa.c; rename to build_cdtor_fns.\n+\t(cgraph_build_cdtor_fns): Move to ipa.c; rename to build_cdtor_fns.\n \t(cgraph_finalize_function): Do not call record_cdtor_fn.\n \t(cgraph_finalize_compilation_unit): Do not call cgraph_build_cdtor_fns.\n \t(cgraph_build_static_cdtor): Move to ipa.c.\n@@ -407,7 +432,8 @@\n \t* lto-cgraph.c (lto_output_edge): Use gimple_has_body_p instead of\n \tflag_wpa.\n \t* lto-streamer-out.c (lto_output): Likewise.\n-\t* passes.c (ipa_write_optimization_summaries): Initialize statement uids.\n+\t* passes.c (ipa_write_optimization_summaries): Initialize statement\n+\tuids.\n \n 2010-08-20  Olivier Hainque  <hainque@adacore.com>\n \n@@ -451,9 +477,9 @@\n \n \trevert r163410, partially revert r163267.\n \t* config/rs6000/darwin.h (LIB_SPEC): Remove.\n-\t* config/darwin.h (REAL_LIBGCC_SPEC): Link lgcc for all \n+\t* config/darwin.h (REAL_LIBGCC_SPEC): Link lgcc for all\n \tDarwin versions.\n-\t\n+\n 2010-08-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/44974\n@@ -462,7 +488,7 @@\n \n 2010-08-20  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/i386/i386.md (ashift RSP splitter): Remove splitter.\n+\t* config/i386/i386.md (ashift %rsp splitter): Remove splitter.\n \t(pro_epilogue_adjust_stack_di_2): Use \"l\" constraint for\n \talternative 1 of operand 2.\n "}, {"sha": "ffcbdf835590057b8804cf1e2496990fb7faa94b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 212, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d589612915545c8c0aef8049987437252a5398/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d589612915545c8c0aef8049987437252a5398/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=83d589612915545c8c0aef8049987437252a5398", "patch": "@@ -9596,28 +9596,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n \t(sign_extend:V8HI\n \t  (vec_select:V8QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)\n-\t\t       (const_int 4)\n-\t\t       (const_int 5)\n-\t\t       (const_int 6)\n-\t\t       (const_int 7)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovsxbw\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_extendv8qiv8hi2\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(sign_extend:V8HI\n-\t  (vec_select:V8QI\n-\t    (vec_duplicate:V16QI\n-\t      (match_operand:V8QI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)\n \t\t       (const_int 2)\n@@ -9637,24 +9616,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(sign_extend:V4SI\n \t  (vec_select:V4QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovsxbd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_extendv4qiv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(sign_extend:V4SI\n-\t  (vec_select:V4QI\n-\t    (vec_duplicate:V16QI\n-\t      (match_operand:V4QI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)\n \t\t       (const_int 2)\n@@ -9670,22 +9632,7 @@\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(sign_extend:V2DI\n \t  (vec_select:V2QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovsxbq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_extendv2qiv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(sign_extend:V2DI\n-\t  (vec_select:V2QI\n-\t    (vec_duplicate:V16QI\n-\t      (match_operand:V2QI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n@@ -9699,24 +9646,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(sign_extend:V4SI\n \t  (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovsxwd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_extendv4hiv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(sign_extend:V4SI\n-\t  (vec_select:V4HI\n-\t    (vec_duplicate:V8HI\n-\t      (match_operand:V2HI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)\n \t\t       (const_int 2)\n@@ -9732,22 +9662,7 @@\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(sign_extend:V2DI\n \t  (vec_select:V2HI\n-\t    (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovsxwq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_extendv2hiv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(sign_extend:V2DI\n-\t  (vec_select:V2HI\n-\t    (vec_duplicate:V8HI\n-\t      (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n@@ -9761,22 +9676,7 @@\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(sign_extend:V2DI\n \t  (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovsxdq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_extendv2siv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(sign_extend:V2DI\n-\t  (vec_select:V2SI\n-\t    (vec_duplicate:V4SI\n-\t      (match_operand:V2SI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n@@ -9790,28 +9690,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n \t(zero_extend:V8HI\n \t  (vec_select:V8QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)\n-\t\t       (const_int 4)\n-\t\t       (const_int 5)\n-\t\t       (const_int 6)\n-\t\t       (const_int 7)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovzxbw\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_zero_extendv8qiv8hi2\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(zero_extend:V8HI\n-\t  (vec_select:V8QI\n-\t    (vec_duplicate:V16QI\n-\t      (match_operand:V8QI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)\n \t\t       (const_int 2)\n@@ -9831,24 +9710,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(zero_extend:V4SI\n \t  (vec_select:V4QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovzxbd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_zero_extendv4qiv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(zero_extend:V4SI\n-\t  (vec_select:V4QI\n-\t    (vec_duplicate:V16QI\n-\t      (match_operand:V4QI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)\n \t\t       (const_int 2)\n@@ -9864,22 +9726,7 @@\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(zero_extend:V2DI\n \t  (vec_select:V2QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovzxbq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_zero_extendv2qiv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(zero_extend:V2DI\n-\t  (vec_select:V2QI\n-\t    (vec_duplicate:V16QI\n-\t      (match_operand:V2QI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n@@ -9893,24 +9740,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(zero_extend:V4SI\n \t  (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)\n-\t\t       (const_int 2)\n-\t\t       (const_int 3)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovzxwd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_zero_extendv4hiv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(zero_extend:V4SI\n-\t  (vec_select:V4HI\n-\t    (vec_duplicate:V8HI\n-\t      (match_operand:V4HI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)\n \t\t       (const_int 2)\n@@ -9926,22 +9756,7 @@\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(zero_extend:V2DI\n \t  (vec_select:V2HI\n-\t    (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovzxwq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_zero_extendv2hiv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(zero_extend:V2DI\n-\t  (vec_select:V2HI\n-\t    (vec_duplicate:V8HI\n-\t      (match_operand:V2HI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n@@ -9955,22 +9770,7 @@\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(zero_extend:V2DI\n \t  (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"register_operand\" \"x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmovzxdq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_zero_extendv2siv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(zero_extend:V2DI\n-\t  (vec_select:V2SI\n-\t    (vec_duplicate:V4SI\n-\t      (match_operand:V2SI 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\""}]}