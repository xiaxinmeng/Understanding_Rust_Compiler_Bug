{"sha": "3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FhOGFiN2JmYThlMzhiMDE4YWE2ZWNjZjQ3NGQ1ZDQ5NjQzYzQ5ZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2001-07-17T12:55:19Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2001-07-17T12:55:19Z"}, "message": "c-pragma.h (HANDLE_PRAGMA_WEAK): Define iff ASM_WEAKEN_LABEL and ASM_OUTPUT_WEAK_ALIAS are defined.\n\n\t* c-pragma.h (HANDLE_PRAGMA_WEAK): Define iff ASM_WEAKEN_LABEL and\n\tASM_OUTPUT_WEAK_ALIAS are defined.\n\t* defaults.h (ASM_OUTPUT_WEAK_ALIAS): Define if possible.\n\t* config/mips/iris6.h (ASM_OUTPUT_WEAK_ALIAS, ASM_WEAKEN_LABEL):\n\tMoved ...\n\t* config/mips/iris5.h: ... here.\n\t(HANDLE_SYSV_PRAGMA): Defined as 1.\n\t* varasm.c (weak_finish): Use ASM_OUTPUT_WEAK_ALIAS.\n\t* doc/tm.texi (ASM_OUTPUT_WEAK_ALIAS): Support the undefined weak\n\tsymbol.\n\nCo-Authored-By: Rainer Orth <ro@TechFak.Uni-Bielefeld.DE>\n\nFrom-SVN: r44072", "tree": {"sha": "1bb5a4c22af007bf7d40f8f54c148c7d84c03b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb5a4c22af007bf7d40f8f54c148c7d84c03b48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/comments", "author": null, "committer": null, "parents": [{"sha": "4b01f8d817fd5d3bd2176637b1f02b14741a2684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b01f8d817fd5d3bd2176637b1f02b14741a2684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b01f8d817fd5d3bd2176637b1f02b14741a2684"}], "stats": {"total": 81, "additions": 55, "deletions": 26}, "files": [{"sha": "ce3195a658699b807b2c8ce5341739e685a079cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -1,3 +1,17 @@\n+2001-07-17  H.J. Lu <hjl@gnu.org>\n+\t    Rainer Orth <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* c-pragma.h (HANDLE_PRAGMA_WEAK): Define iff ASM_WEAKEN_LABEL and\n+\tASM_OUTPUT_WEAK_ALIAS are defined.\n+\t* defaults.h (ASM_OUTPUT_WEAK_ALIAS): Define if possible.\n+\t* config/mips/iris6.h (ASM_OUTPUT_WEAK_ALIAS, ASM_WEAKEN_LABEL):\n+\tMoved ...\n+\t* config/mips/iris5.h: ... here.\n+\t(HANDLE_SYSV_PRAGMA): Defined as 1.\n+\t* varasm.c (weak_finish): Use ASM_OUTPUT_WEAK_ALIAS.\n+\t* doc/tm.texi (ASM_OUTPUT_WEAK_ALIAS): Support the undefined weak\n+\tsymbol.\n+\n 2001-07-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-parse.in (all_prefix_attributes): New variable."}, {"sha": "89ee4a7ef551e9bd5b795bc3541e434523291472", "filename": "gcc/c-pragma.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.h?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -1,5 +1,5 @@\n /* Pragma related interfaces.\n-   Copyright (C) 1995, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -22,9 +22,9 @@ Boston, MA 02111-1307, USA.  */\n #define GCC_C_PRAGMA_H\n \n #ifdef HANDLE_SYSV_PRAGMA\n-/* Support #pragma weak iff ASM_WEAKEN_LABEL and ASM_OUTPUT_DEF are\n+/* Support #pragma weak iff ASM_WEAKEN_LABEL and ASM_OUTPUT_WEAK_ALIAS are\n    defined.  */\n-#if defined (ASM_WEAKEN_LABEL) && defined (ASM_OUTPUT_DEF)\n+#if defined (ASM_WEAKEN_LABEL) && defined (ASM_OUTPUT_WEAK_ALIAS)\n #define HANDLE_PRAGMA_WEAK SUPPORTS_WEAK\n #endif\n "}, {"sha": "eab210f9d44f10e1fd4180ee025b67fc02c86525", "filename": "gcc/config/mips/iris5.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fconfig%2Fmips%2Firis5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fconfig%2Fmips%2Firis5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5.h?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -170,3 +170,26 @@ do {\t\t\t\t\t\t\t\\\n   tree name_tree = get_identifier (NAME);\t\t\\\n   TREE_ASM_WRITTEN (name_tree) = 1;\t\t\t\\\n } while (0)\n+\n+/* This is how we tell the assembler that a symbol is weak.  */\n+\n+#define ASM_OUTPUT_WEAK_ALIAS(FILE, NAME, VALUE)\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\\\n+      fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\\\n+      if (VALUE)\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\\\n+          fputc (' ', FILE);\t\t\t\t\\\n+          assemble_name (FILE, VALUE);\t\t\t\\\n+        }\t\t\t\t\t\t\\\n+      fputc ('\\n', FILE);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+#define ASM_WEAKEN_LABEL(FILE, NAME) ASM_OUTPUT_WEAK_ALIAS(FILE, NAME, 0)\n+\n+/* Handle #pragma weak and #pragma pack.  */\n+#undef HANDLE_SYSV_PRAGMA\n+#define HANDLE_SYSV_PRAGMA 1"}, {"sha": "bec3414f14f4dcf5c040a360facaa253dfeb6ad9", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -207,23 +207,6 @@ Boston, MA 02111-1307, USA.  */\n #define TYPE_ASM_OP\t\"\\t.type\\t\"\n #define SIZE_ASM_OP\t\"\\t.size\\t\"\n \n-/* This is how we tell the assembler that a symbol is weak.  */\n-\n-#define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)\t\\\n- do {\t\t\t\t\t\t\\\n-  ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\\\n-  fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\\\n-  if (VALUE)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fputc (' ', FILE);\t\t\t\\\n-      assemble_name (FILE, VALUE);\t\t\\\n-    }\t\t\t\t\t\t\\\n-  fputc ('\\n', FILE);\t\t\t\t\\\n- } while (0)\n-\n-#define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,0)\n-\n /* Irix assembler does not support the init_priority C++ attribute.  */\n #undef SUPPORTS_INIT_PRIORITY\n #define SUPPORTS_INIT_PRIORITY 0"}, {"sha": "ed5be8bcf6e2198a45dc2d052f151b6b63e8662e", "filename": "gcc/defaults.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -142,6 +142,18 @@ do { ASM_OUTPUT_LABEL(FILE,LABEL_ALTERNATE_NAME (INSN)); } while (0)\n   ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM)\n #endif\n \n+/* This is how we tell the assembler that a symbol is weak.  */\n+#if !defined (ASM_OUTPUT_WEAK_ALIAS) && defined (ASM_OUTPUT_DEF)\n+#define ASM_OUTPUT_WEAK_ALIAS(STREAM, NAME, VALUE)\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      ASM_WEAKEN_LABEL (STREAM, NAME);\t\t\t\\\n+      if (VALUE)\t\t\t\t\t\\\n+        ASM_OUTPUT_DEF (STREAM, NAME, VALUE);\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+#endif\n+\n /* This determines whether or not we support weak symbols.  */\n #ifndef SUPPORTS_WEAK\n #ifdef ASM_WEAKEN_LABEL"}, {"sha": "6fcc3ba8a47db1cc85acdbf3075325185f8e20e1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -6423,7 +6423,8 @@ correct for most systems.\n @item ASM_OUTPUT_WEAK_ALIAS (@var{stream}, @var{name}, @var{value})\n A C statement to output to the stdio stream @var{stream} assembler code\n which defines (equates) the weak symbol @var{name} to have the value\n-@var{value}.\n+@var{value}.  If @var{value} is @code{NULL}, it defines @var{name} as\n+an undefined weak symbol.\n \n Define this macro if the target only supports weak aliases; define\n @code{ASM_OUTPUT_DEF} instead if possible."}, {"sha": "76f1c675792955c753a891d771841e87e6565b0e", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=3aa8ab7bfa8e38b018aa6eccf474d5d49643c49e", "patch": "@@ -4773,11 +4773,7 @@ weak_finish ()\n       for (t = weak_decls; t; t = t->next)\n \t{\n \t  if (t->name)\n-\t    {\n-\t      ASM_WEAKEN_LABEL (asm_out_file, t->name);\n-\t      if (t->value)\n-\t\tASM_OUTPUT_DEF (asm_out_file, t->name, t->value);\n-\t    }\n+\t    ASM_OUTPUT_WEAK_ALIAS (asm_out_file, t->name, t->value);\n \t}\n     }\n #endif"}]}