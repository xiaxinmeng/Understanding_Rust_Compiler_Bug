{"sha": "df0fc585b70b65a188de010f50cb90b0db3b9045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwZmM1ODViNzBiNjVhMTg4ZGUwMTBmNTBjYjkwYjBkYjNiOTA0NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-16T13:19:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-16T13:19:56Z"}, "message": "* tree.c (warn_deprecated_use): Return bool.  Simplify logic.\n\nFrom-SVN: r260290", "tree": {"sha": "2edb27676dcee764fffc7b0539b7b789889458b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2edb27676dcee764fffc7b0539b7b789889458b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df0fc585b70b65a188de010f50cb90b0db3b9045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0fc585b70b65a188de010f50cb90b0db3b9045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0fc585b70b65a188de010f50cb90b0db3b9045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0fc585b70b65a188de010f50cb90b0db3b9045/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68435eb293a6b9c161936bccab66e4b1f702372b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68435eb293a6b9c161936bccab66e4b1f702372b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68435eb293a6b9c161936bccab66e4b1f702372b"}], "stats": {"total": 66, "additions": 26, "deletions": 40}, "files": [{"sha": "b90e1da89dcc9bcad25aa3853f9eab606aee2aeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0fc585b70b65a188de010f50cb90b0db3b9045/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0fc585b70b65a188de010f50cb90b0db3b9045/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df0fc585b70b65a188de010f50cb90b0db3b9045", "patch": "@@ -1,3 +1,7 @@\n+2018-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (warn_deprecated_use): Return bool.  Simplify logic.\n+\n 2018-05-16  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vectorizer.h (struct stmt_info_for_cost): Add where member."}, {"sha": "68165f4deed50bd72cddf477c1000369c16fcb9a", "filename": "gcc/tree.c", "status": "modified", "additions": 21, "deletions": 39, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0fc585b70b65a188de010f50cb90b0db3b9045/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0fc585b70b65a188de010f50cb90b0db3b9045/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=df0fc585b70b65a188de010f50cb90b0db3b9045", "patch": "@@ -12420,14 +12420,16 @@ typedef_variant_p (const_tree type)\n   return is_typedef_decl (TYPE_NAME (type));\n }\n \n-/* Warn about a use of an identifier which was marked deprecated.  */\n-void\n+/* Warn about a use of an identifier which was marked deprecated.  Returns\n+   whether a warning was given.  */\n+\n+bool\n warn_deprecated_use (tree node, tree attr)\n {\n   const char *msg;\n \n   if (node == 0 || !warn_deprecated_decl)\n-    return;\n+    return false;\n \n   if (!attr)\n     {\n@@ -12450,7 +12452,7 @@ warn_deprecated_use (tree node, tree attr)\n   else\n     msg = NULL;\n \n-  bool w;\n+  bool w = false;\n   if (DECL_P (node))\n     {\n       if (msg)\n@@ -12476,49 +12478,29 @@ warn_deprecated_use (tree node, tree attr)\n \t    what = DECL_NAME (TYPE_NAME (node));\n \t}\n \n-      if (decl)\n+      if (what)\n \t{\n-\t  if (what)\n-\t    {\n-\t      if (msg)\n-\t\tw = warning (OPT_Wdeprecated_declarations,\n-\t\t\t     \"%qE is deprecated: %s\", what, msg);\n-\t      else\n-\t\tw = warning (OPT_Wdeprecated_declarations,\n-\t\t\t     \"%qE is deprecated\", what);\n-\t    }\n+\t  if (msg)\n+\t    w = warning (OPT_Wdeprecated_declarations,\n+\t\t\t \"%qE is deprecated: %s\", what, msg);\n \t  else\n-\t    {\n-\t      if (msg)\n-\t\tw = warning (OPT_Wdeprecated_declarations,\n-\t\t\t     \"type is deprecated: %s\", msg);\n-\t      else\n-\t\tw = warning (OPT_Wdeprecated_declarations,\n-\t\t\t     \"type is deprecated\");\n-\t    }\n-\t  if (w)\n-\t    inform (DECL_SOURCE_LOCATION (decl), \"declared here\");\n+\t    w = warning (OPT_Wdeprecated_declarations,\n+\t\t\t \"%qE is deprecated\", what);\n \t}\n       else\n \t{\n-\t  if (what)\n-\t    {\n-\t      if (msg)\n-\t\twarning (OPT_Wdeprecated_declarations, \"%qE is deprecated: %s\",\n-\t\t\t what, msg);\n-\t      else\n-\t\twarning (OPT_Wdeprecated_declarations, \"%qE is deprecated\", what);\n-\t    }\n+\t  if (msg)\n+\t    w = warning (OPT_Wdeprecated_declarations,\n+\t\t\t \"type is deprecated: %s\", msg);\n \t  else\n-\t    {\n-\t      if (msg)\n-\t\twarning (OPT_Wdeprecated_declarations, \"type is deprecated: %s\",\n-\t\t\t msg);\n-\t      else\n-\t\twarning (OPT_Wdeprecated_declarations, \"type is deprecated\");\n-\t    }\n+\t    w = warning (OPT_Wdeprecated_declarations,\n+\t\t\t \"type is deprecated\");\n \t}\n+      if (w && decl)\n+\tinform (DECL_SOURCE_LOCATION (decl), \"declared here\");\n     }\n+\n+  return w;\n }\n \n /* Return true if REF has a COMPONENT_REF with a bit-field field declaration"}, {"sha": "ef8bff405fe738fe0350808f3b31065b82cc0aba", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0fc585b70b65a188de010f50cb90b0db3b9045/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0fc585b70b65a188de010f50cb90b0db3b9045/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=df0fc585b70b65a188de010f50cb90b0db3b9045", "patch": "@@ -4828,7 +4828,7 @@ extern tree tree_strip_sign_nop_conversions (tree);\n extern const_tree strip_invariant_refs (const_tree);\n extern tree lhd_gcc_personality (void);\n extern void assign_assembler_name_if_needed (tree);\n-extern void warn_deprecated_use (tree, tree);\n+extern bool warn_deprecated_use (tree, tree);\n extern void cache_integer_cst (tree);\n extern const char *combined_fn_name (combined_fn);\n "}]}