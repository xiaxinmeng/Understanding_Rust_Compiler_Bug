{"sha": "502c50846ce1ee2c46022fe2f004c19b7ea42314", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAyYzUwODQ2Y2UxZWUyYzQ2MDIyZmUyZjAwNGMxOWI3ZWE0MjMxNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-05T11:11:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-05T11:11:50Z"}, "message": "re PR middle-end/43690 (Internal compiler error detected by avr-gcc.)\n\n\tPR middle-end/43690\n\t* gimplify.c (gimplify_asm_expr): If a \"m\" input is a\n\t{pre,post}{in,de}crement, fail.\n\n\t* c-c++-common/pr43690.c: New test.\n\nFrom-SVN: r166354", "tree": {"sha": "4b778aed069a282624447328e96ba9fd6fa1c854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b778aed069a282624447328e96ba9fd6fa1c854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/502c50846ce1ee2c46022fe2f004c19b7ea42314", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502c50846ce1ee2c46022fe2f004c19b7ea42314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502c50846ce1ee2c46022fe2f004c19b7ea42314", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502c50846ce1ee2c46022fe2f004c19b7ea42314/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb1150418276ecc5a39261ad5a4204c8d9632803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1150418276ecc5a39261ad5a4204c8d9632803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1150418276ecc5a39261ad5a4204c8d9632803"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "9af445b0b85861ece538b44a5f964653d4b9f3e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=502c50846ce1ee2c46022fe2f004c19b7ea42314", "patch": "@@ -3,6 +3,10 @@\n \t* cfgexpand.c (expand_debug_expr): Handle MEM_REF\n \twith non-zero offset.\n \n+\tPR middle-end/43690\n+\t* gimplify.c (gimplify_asm_expr): If a \"m\" input is a\n+\t{pre,post}{in,de}crement, fail.\n+\n \tPR debug/46307\n \t* tree-ssa-operands.c (get_expr_operands): Handle FMA_EXPR.\n \t* tree-pretty-print.c (dump_generic_node): Likewise."}, {"sha": "128ac0259bcf1c76d0118d85307311ac1ee56feb", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=502c50846ce1ee2c46022fe2f004c19b7ea42314", "patch": "@@ -5066,6 +5066,13 @@ gimplify_asm_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n       /* If the operand is a memory input, it should be an lvalue.  */\n       if (!allows_reg && allows_mem)\n \t{\n+\t  tree inputv = TREE_VALUE (link);\n+\t  STRIP_NOPS (inputv);\n+\t  if (TREE_CODE (inputv) == PREDECREMENT_EXPR\n+\t      || TREE_CODE (inputv) == PREINCREMENT_EXPR\n+\t      || TREE_CODE (inputv) == POSTDECREMENT_EXPR\n+\t      || TREE_CODE (inputv) == POSTINCREMENT_EXPR)\n+\t    TREE_VALUE (link) = error_mark_node;\n \t  tret = gimplify_expr (&TREE_VALUE (link), pre_p, post_p,\n \t\t\t\tis_gimple_lvalue, fb_lvalue | fb_mayfail);\n \t  mark_addressable (TREE_VALUE (link));"}, {"sha": "8ac52a0d4af04298bd59f88f1bc867ca33a476b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=502c50846ce1ee2c46022fe2f004c19b7ea42314", "patch": "@@ -1,3 +1,8 @@\n+2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/43690\n+\t* c-c++-common/pr43690.c: New test.\n+\n 2010-11-05  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* objc.dg/torture/forward-1.m: Restore for m32 NeXT."}, {"sha": "67c6cb0f88cd059c640c3db7a7128c737591aad2", "filename": "gcc/testsuite/c-c++-common/pr43690.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr43690.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502c50846ce1ee2c46022fe2f004c19b7ea42314/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr43690.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr43690.c?ref=502c50846ce1ee2c46022fe2f004c19b7ea42314", "patch": "@@ -0,0 +1,13 @@\n+/* PR middle-end/43690 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void\n+foo (char *x)\n+{\n+  asm (\"\" : : \"m\" (x++));\t/* { dg-error \"is not directly addressable\" } */\n+  asm (\"\" : : \"m\" (++x));\t/* { dg-error \"is not directly addressable\" } */\n+  asm (\"\" : : \"m\" (x--));\t/* { dg-error \"is not directly addressable\" } */\n+  asm (\"\" : : \"m\" (--x));\t/* { dg-error \"is not directly addressable\" } */\n+  asm (\"\" : : \"m\" (x + 1));\t/* { dg-error \"is not directly addressable\" } */\n+}"}]}