{"sha": "a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA1MjRlYjNmNWVhNjI3NzdlOWU4MzhmNzI0YWI0OTY1YzFhOThlZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-31T18:42:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-31T18:42:55Z"}, "message": "i386-protos.h: Remove the prototype for ix86_setup_incoming_varargs.\n\n\t* config/i386/i386-protos.h: Remove the prototype for\n\tix86_setup_incoming_varargs.\n\t* config/i386/i386.c (TARGET_SETUP_INCOMING_VARARGS): New.\n\t(ix86_setup_incoming_varargs): Make it static.\n\t* config/i386/i386.h (SETUP_INCOMING_VARARGS): Remove.\n\nFrom-SVN: r77046", "tree": {"sha": "8ed152407b62814578e590f8841b64755623f292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ed152407b62814578e590f8841b64755623f292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/comments", "author": null, "committer": null, "parents": [{"sha": "852dcbdd7834df145afa036f5d591da9429ec88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852dcbdd7834df145afa036f5d591da9429ec88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/852dcbdd7834df145afa036f5d591da9429ec88a"}], "stats": {"total": 49, "additions": 15, "deletions": 34}, "files": [{"sha": "67b2e832880e44a59001a2b9a3f32d1a0e055669", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "patch": "@@ -1,3 +1,11 @@\n+2004-01-31  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/i386/i386-protos.h: Remove the prototype for\n+\tix86_setup_incoming_varargs.\n+\t* config/i386/i386.c (TARGET_SETUP_INCOMING_VARARGS): New.\n+\t(ix86_setup_incoming_varargs): Make it static.\n+\t* config/i386/i386.h (SETUP_INCOMING_VARARGS): Remove.\n+\n 2004-01-31  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* alloc-pool.c: Fix comment typos."}, {"sha": "ba7dda10146d90c5da20d51078fb4b2d35860d64", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "patch": "@@ -165,8 +165,6 @@ extern int ix86_function_arg_boundary (enum machine_mode, tree);\n extern int ix86_return_in_memory (tree);\n extern void ix86_va_start (tree, rtx);\n extern rtx ix86_va_arg (tree, tree);\n-extern void ix86_setup_incoming_varargs (CUMULATIVE_ARGS *,\n-\t\t\t\t\t enum machine_mode, tree, int *, int);\n \n extern rtx ix86_force_to_memory (enum machine_mode, rtx);\n extern void ix86_free_from_memory (enum machine_mode);"}, {"sha": "decbd6ec851c613a37d9b4a67369abe331256aab", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "patch": "@@ -834,6 +834,8 @@ static void x86_file_start (void);\n static void ix86_reorg (void);\n static bool ix86_expand_carry_flag_compare (enum rtx_code, rtx, rtx, rtx*);\n static tree ix86_build_builtin_va_list (void);\n+static void ix86_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\t\t tree, int *, int);\n \n struct ix86_address\n {\n@@ -1029,6 +1031,9 @@ static void init_ext_80387_constants (void);\n #undef TARGET_STRUCT_VALUE_RTX\n #define TARGET_STRUCT_VALUE_RTX hook_rtx_tree_int_null\n \n+#undef TARGET_SETUP_INCOMING_VARARGS\n+#define TARGET_SETUP_INCOMING_VARARGS ix86_setup_incoming_varargs\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* The svr4 ABI for the i386 says that records and unions are returned\n@@ -2947,21 +2952,9 @@ ix86_build_builtin_va_list (void)\n   return build_array_type (record, build_index_type (size_zero_node));\n }\n \n-/* Perform any needed actions needed for a function that is receiving a\n-   variable number of arguments.\n-\n-   CUM is as above.\n-\n-   MODE and TYPE are the mode and type of the current parameter.\n-\n-   PRETEND_SIZE is a variable that should be set to the amount of stack\n-   that must be pushed by the prolog to pretend that our caller pushed\n-   it.\n+/* Worker function for TARGET_SETUP_INCOMING_VARARGS.  */\n \n-   Normally, this macro will push all remaining incoming registers on the\n-   stack and set PRETEND_SIZE to the length of the registers pushed.  */\n-\n-void\n+static void\n ix86_setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t\t\t     tree type, int *pretend_size ATTRIBUTE_UNUSED,\n \t\t\t     int no_rtl)"}, {"sha": "ddfbcebce2dd3df6af4864c166871f61132b7554", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0524eb3f5ea62777e9e838f724ab4965c1a98ef/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=a0524eb3f5ea62777e9e838f724ab4965c1a98ef", "patch": "@@ -1788,24 +1788,6 @@ typedef struct ix86_args {\n #define FUNCTION_ARG_PASS_BY_REFERENCE(CUM, MODE, TYPE, NAMED) \\\n   function_arg_pass_by_reference(&CUM, MODE, TYPE, NAMED)\n  \n-/* Perform any needed actions needed for a function that is receiving a\n-   variable number of arguments.\n-\n-   CUM is as above.\n-\n-   MODE and TYPE are the mode and type of the current parameter.\n-\n-   PRETEND_SIZE is a variable that should be set to the amount of stack\n-   that must be pushed by the prolog to pretend that our caller pushed\n-   it.\n-\n-   Normally, this macro will push all remaining incoming registers on the\n-   stack and set PRETEND_SIZE to the length of the registers pushed.  */\n-\n-#define SETUP_INCOMING_VARARGS(CUM, MODE, TYPE, PRETEND_SIZE, NO_RTL)\t\\\n-  ix86_setup_incoming_varargs (&(CUM), (MODE), (TYPE), &(PRETEND_SIZE), \\\n-\t\t\t       (NO_RTL))\n-\n /* Implement `va_start' for varargs and stdarg.  */\n #define EXPAND_BUILTIN_VA_START(VALIST, NEXTARG) \\\n   ix86_va_start (VALIST, NEXTARG)"}]}