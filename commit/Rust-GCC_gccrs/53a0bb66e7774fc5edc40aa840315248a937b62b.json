{"sha": "53a0bb66e7774fc5edc40aa840315248a937b62b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNhMGJiNjZlNzc3NGZjNWVkYzQwYWE4NDAzMTUyNDhhOTM3YjYyYg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-06-06T10:29:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:29:31Z"}, "message": "gnatcmd.adb (GNATCmd): Accept switch -aP for commands that accept switch -P\n\n2007-04-20  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (GNATCmd): Accept switch -aP for commands that accept\n\tswitch -P\n\t(ASIS_Main): New global variable\n\t(Get_Closure): New procedure\n\t(GNATCmd): Set ASIS_Main when -P and -U with a main is used for gnat\n\tcheck, metric or pretty. Call Get_Closure in this case.\n\t(Check_Files): For GNAT LIST, check all sources of all projects when\n\tAll_Projects is True.\n\t(GNATCmd): Accept -U for GNAT LIST\n\nFrom-SVN: r125416", "tree": {"sha": "7fb0da022b54cc4f85561f7ebcd4dd5626ed8821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fb0da022b54cc4f85561f7ebcd4dd5626ed8821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53a0bb66e7774fc5edc40aa840315248a937b62b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53a0bb66e7774fc5edc40aa840315248a937b62b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53a0bb66e7774fc5edc40aa840315248a937b62b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53a0bb66e7774fc5edc40aa840315248a937b62b/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f38df0e11608009b95e0332b9fbab26eb593095c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38df0e11608009b95e0332b9fbab26eb593095c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f38df0e11608009b95e0332b9fbab26eb593095c"}], "stats": {"total": 218, "additions": 198, "deletions": 20}, "files": [{"sha": "6135b40d30a798d10163f045abbfafaa1e06991c", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 198, "deletions": 20, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53a0bb66e7774fc5edc40aa840315248a937b62b/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53a0bb66e7774fc5edc40aa840315248a937b62b/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=53a0bb66e7774fc5edc40aa840315248a937b62b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,6 +42,7 @@ with Prj.Util; use Prj.Util;\n with Sinput.P;\n with Snames;   use Snames;\n with Table;\n+with Tempdir;\n with Types;    use Types;\n with Hostparm; use Hostparm;\n --  Used to determine if we are in VMS or not for error message purposes\n@@ -65,16 +66,18 @@ procedure GNATCmd is\n    --  Prefix of binder generated file, changed to b__ for VMS\n \n    Old_Project_File_Used : Boolean := False;\n-   --  This flag indicates a switch -p (for gnatxref and gnatfind) for\n-   --  an old fashioned project file. -p cannot be used in conjonction\n-   --  with -P.\n+   --  This flag indicates a switch -p (for gnatxref and gnatfind) for an old\n+   --  fashioned project file. -p cannot be used in conjonction with -P.\n \n    Max_Files_On_The_Command_Line : constant := 30; --  Arbitrary\n \n    Temp_File_Name : String_Access := null;\n    --  The name of the temporary text file to put a list of source/object\n-   --  files to pass to a tool, when there are more than\n-   --  Max_Files_On_The_Command_Line files.\n+   --  files to pass to a tool, when the number of files exceeds the value of\n+   --  Max_Files_On_The_Command_Line.\n+\n+   ASIS_Main : String_Access := null;\n+   --  Main for commands Check, Metric and Pretty, when -U is used\n \n    package First_Switches is new Table.Table\n      (Table_Component_Type => String_Access,\n@@ -226,6 +229,10 @@ procedure GNATCmd is\n    procedure Delete_Temp_Config_Files;\n    --  Delete all temporary config files\n \n+   procedure Get_Closure;\n+   --  Get the sources in the closure of the ASIS_Main and add them to the\n+   --  list of arguments.\n+\n    function Index (Char : Character; Str : String) return Natural;\n    --  Returns first occurrence of Char in Str, returns 0 if Char not in Str\n \n@@ -386,17 +393,17 @@ procedure GNATCmd is\n \n                if The_Command = List then\n                   if\n-                    Unit_Data.File_Names (Body_Part).Name /= No_Name\n+                    Unit_Data.File_Names (Body_Part).Name /= No_File\n                   then\n                      --  There is a body, check if it is for this project\n \n-                     if Unit_Data.File_Names (Body_Part).Project =\n-                       Project\n+                     if All_Projects or else\n+                        Unit_Data.File_Names (Body_Part).Project =  Project\n                      then\n                         Subunit := False;\n \n                         if Unit_Data.File_Names (Specification).Name =\n-                          No_Name\n+                          No_File\n                         then\n                            --  We have a body with no spec: we need to check if\n                            --  this is a subunit, because gnatls will complain\n@@ -428,13 +435,13 @@ procedure GNATCmd is\n                      end if;\n \n                   elsif\n-                    Unit_Data.File_Names (Specification).Name /= No_Name\n+                    Unit_Data.File_Names (Specification).Name /= No_File\n                   then\n                      --  We have a spec with no body; check if it is for this\n                      --  project.\n \n-                     if Unit_Data.File_Names (Specification).Project =\n-                       Project\n+                     if All_Projects or else\n+                        Unit_Data.File_Names (Specification).Project = Project\n                      then\n                         Last_Switches.Increment_Last;\n                         Last_Switches.Table (Last_Switches.Last) :=\n@@ -452,7 +459,7 @@ procedure GNATCmd is\n \n                elsif The_Command = Stack then\n                   if\n-                    Unit_Data.File_Names (Body_Part).Name /= No_Name\n+                    Unit_Data.File_Names (Body_Part).Name /= No_File\n                   then\n                      --  There is a body. Check if .ci files for this project\n                      --  must be added.\n@@ -464,7 +471,7 @@ procedure GNATCmd is\n                         Subunit := False;\n \n                         if\n-                          Unit_Data.File_Names (Specification).Name = No_Name\n+                          Unit_Data.File_Names (Specification).Name = No_File\n                         then\n                            --  We have a body with no spec: we need to check\n                            --  if this is a subunit, because .ci files are not\n@@ -502,7 +509,7 @@ procedure GNATCmd is\n                      end if;\n \n                   elsif\n-                    Unit_Data.File_Names (Specification).Name /= No_Name\n+                    Unit_Data.File_Names (Specification).Name /= No_File\n                   then\n                      --  We have a spec with no body. Check if it is for this\n                      --  project.\n@@ -684,7 +691,7 @@ procedure GNATCmd is\n    begin\n       Prj.Env.Create_Config_Pragmas_File\n         (Project, Project, Project_Tree, Include_Config_Files => False);\n-      return Project_Tree.Projects.Table (Project).Config_File_Name;\n+      return Name_Id (Project_Tree.Projects.Table (Project).Config_File_Name);\n    end Configuration_Pragmas_File;\n \n    ------------------------------\n@@ -730,6 +737,147 @@ procedure GNATCmd is\n       end if;\n    end Delete_Temp_Config_Files;\n \n+   -----------------\n+   -- Get_Closure --\n+   -----------------\n+\n+   procedure Get_Closure is\n+      Args : constant Argument_List :=\n+               (1 => new String'(\"-q\"),\n+                2 => new String'(\"-b\"),\n+                3 => new String'(\"-P\"),\n+                4 => Project_File,\n+                5 => ASIS_Main,\n+                6 => new String'(\"-bargs\"),\n+                7 => new String'(\"-R\"),\n+                8 => new String'(\"-Z\"));\n+      --  Arguments of the invocation of gnatmake to get the list of\n+\n+      FD : File_Descriptor;\n+      --  File descriptor for the temp file that will get the output of the\n+      --  invocation of gnatmake.\n+\n+      Name : Path_Name_Type;\n+      --  Path of the file FD\n+\n+      GN_Name : constant String := Program_Name (\"gnatmake\").all;\n+      --  Name for gnatmake\n+\n+      GN_Path : constant String_Access := Locate_Exec_On_Path (GN_Name);\n+      --  Path of gnatmake\n+\n+      Return_Code : Integer;\n+\n+      Unused : Boolean;\n+      pragma Warnings (Off, Unused);\n+\n+      File : Ada.Text_IO.File_Type;\n+      Line : String (1 .. 250);\n+      Last : Natural;\n+\n+      Udata : Unit_Data;\n+      Path  : File_Name_Type;\n+\n+   begin\n+      if GN_Path = null then\n+         Put_Line (Standard_Error, \"could not locate \" & GN_Name);\n+         raise Error_Exit;\n+      end if;\n+\n+      --  Create the temp file\n+\n+      Tempdir.Create_Temp_File (FD, Name);\n+\n+      --  And close it, because on VMS Spawn with a file descriptor created\n+      --  with Create_Temp_File does not redirect output.\n+\n+      Close (FD);\n+\n+      --  Spawn \"gnatmake -q -b -P <project> <main> -bargs -R -Z\"\n+\n+      Spawn\n+        (Program_Name => GN_Path.all,\n+         Args         => Args,\n+         Output_File  => Get_Name_String (Name),\n+         Success      => Unused,\n+         Return_Code  => Return_Code,\n+         Err_To_Out   => True);\n+\n+      Close (FD);\n+\n+      --  Read the output of the invocation of gnatmake\n+\n+      Open (File, In_File, Get_Name_String (Name));\n+\n+      --  If it was unsuccessful, display the first line in the file and exit\n+      --  with error.\n+\n+      if Return_Code /= 0 then\n+         Get_Line (File, Line, Last);\n+\n+         if not Keep_Temporary_Files then\n+            Delete (File);\n+         else\n+            Close (File);\n+         end if;\n+\n+         Put_Line (Standard_Error, Line (1 .. Last));\n+         Put_Line\n+           (Standard_Error, \"could not get closure of \" & ASIS_Main.all);\n+         raise Error_Exit;\n+\n+      else\n+         --  Get each file name in the file, find its path and add it the the\n+         --  list of arguments.\n+\n+         while not End_Of_File (File) loop\n+            Get_Line (File, Line, Last);\n+            Path := No_File;\n+\n+            for Unit in Unit_Table.First ..\n+                        Unit_Table.Last (Project_Tree.Units)\n+            loop\n+               Udata := Project_Tree.Units.Table (Unit);\n+\n+               if Udata.File_Names (Specification).Name /= No_File\n+                 and then\n+                   Get_Name_String (Udata.File_Names (Specification).Name) =\n+                      Line (1 .. Last)\n+               then\n+                  Path := Udata.File_Names (Specification).Path;\n+                  exit;\n+\n+               elsif Udata.File_Names (Body_Part).Name /= No_File\n+                 and then\n+                   Get_Name_String (Udata.File_Names (Body_Part).Name) =\n+                     Line (1 .. Last)\n+               then\n+                  Path := Udata.File_Names (Body_Part).Path;\n+                  exit;\n+               end if;\n+            end loop;\n+\n+            Last_Switches.Increment_Last;\n+\n+            if Path /= No_File then\n+               Last_Switches.Table (Last_Switches.Last) :=\n+                  new String'(Get_Name_String (Path));\n+\n+            else\n+               Last_Switches.Table (Last_Switches.Last) :=\n+                 new String'(Line (1 .. Last));\n+            end if;\n+         end loop;\n+\n+         if not Keep_Temporary_Files then\n+            Delete (File);\n+\n+         else\n+            Close (File);\n+         end if;\n+      end if;\n+   end Get_Closure;\n+\n    -----------\n    -- Index --\n    -----------\n@@ -1493,9 +1641,19 @@ begin\n                      end if;\n                   end if;\n \n+                  --  -aPdir  Add dir to the project search path\n+\n+                  if Argv'Length > 3\n+                    and then Argv (Argv'First + 1 .. Argv'First + 2) = \"aP\"\n+                  then\n+                     Add_Search_Project_Directory\n+                       (Argv (Argv'First + 3 .. Argv'Last));\n+\n+                     Remove_Switch (Arg_Num);\n+\n                   --  -vPx  Specify verbosity while parsing project files\n \n-                  if Argv'Length = 4\n+                  elsif Argv'Length = 4\n                     and then Argv (Argv'First + 1 .. Argv'First + 2) = \"vP\"\n                   then\n                      case Argv (Argv'Last) is\n@@ -1591,7 +1749,8 @@ begin\n                     (The_Command = Check  or else\n                      The_Command = Pretty or else\n                      The_Command = Metric or else\n-                     The_Command = Stack)\n+                     The_Command = Stack  or else\n+                     The_Command = List)\n                     and then Argv'Length = 2\n                     and then Argv (2) = 'U'\n                   then\n@@ -1602,6 +1761,19 @@ begin\n                      Arg_Num := Arg_Num + 1;\n                   end if;\n \n+               elsif ((The_Command = Check and then Argv (Argv'First) /= '+')\n+                        or else The_Command = Metric\n+                        or else The_Command = Pretty)\n+                 and then Project_File /= null\n+                 and then All_Projects\n+               then\n+                  if ASIS_Main /= null then\n+                     Fail (\"cannot specify more than one main after -U\");\n+                  else\n+                     ASIS_Main := Argv;\n+                     Remove_Switch (Arg_Num);\n+                  end if;\n+\n                else\n                   Arg_Num := Arg_Num + 1;\n                end if;\n@@ -2040,11 +2212,17 @@ begin\n             end;\n          end if;\n \n+         --  For gnat check, metric or pretty with -U + a main, get the list\n+         --  of sources from the closure and add them to the arguments.\n+\n+         if ASIS_Main /= null then\n+            Get_Closure;\n+\n          --  For gnat check, gnat pretty, gnat metric, gnat list, and gnat\n          --  stack, if no file has been put on the command line, call tool\n          --  with all the sources of the main project.\n \n-         if The_Command = Check  or else\n+         elsif The_Command = Check  or else\n             The_Command = Pretty or else\n             The_Command = Metric or else\n             The_Command = List   or else"}]}