{"sha": "2bc2379be5c98d34ecbb347b2abf059aa6d94499", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjMjM3OWJlNWM5OGQzNGVjYmIzNDdiMmFiZjA1OWFhNmQ5NDQ5OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2019-11-04T19:39:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-04T19:39:52Z"}, "message": "ipa-inline-transform.c: Include ipa-utils.h\n\n\n\t* ipa-inline-transform.c: Include ipa-utils.h\n\t(inline_call): Set thunk_expansion flag.\n\t* ipa-utils.h (thunk_expansion): Declare.\n\t* ipa-devirt.c (thunk_expansion): New global var.\n\t(devirt_node_removal_hook): Do not invalidate cache while\n\tdoing thunk expansion.\n\nFrom-SVN: r277789", "tree": {"sha": "c77dfa441b49c1963d53760f79ab87018bafc88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c77dfa441b49c1963d53760f79ab87018bafc88a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bc2379be5c98d34ecbb347b2abf059aa6d94499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc2379be5c98d34ecbb347b2abf059aa6d94499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc2379be5c98d34ecbb347b2abf059aa6d94499", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc2379be5c98d34ecbb347b2abf059aa6d94499/comments", "author": null, "committer": null, "parents": [{"sha": "0ec77a6c25cbe321d9712e41a3aa04dff97eaaa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec77a6c25cbe321d9712e41a3aa04dff97eaaa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec77a6c25cbe321d9712e41a3aa04dff97eaaa6"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "6d90105c8c369f4f047beb75e9a0637d8e5b715c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bc2379be5c98d34ecbb347b2abf059aa6d94499", "patch": "@@ -1,3 +1,12 @@\n+2019-11-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-inline-transform.c: Include ipa-utils.h\n+\t(inline_call): Set thunk_expansion flag.\n+\t* ipa-utils.h (thunk_expansion): Declare.\n+\t* ipa-devirt.c (thunk_expansion): New global var.\n+\t(devirt_node_removal_hook): Do not invalidate cache while\n+\tdoing thunk expansion.\n+\n 2019-11-04  Tamar Christina  <tamar.christina@arm.com>\n \n \t* tree-vect-slp.c (vectorize_slp_instance_root_stmt): Initialize rstmt."}, {"sha": "4a73ba1aa76731d3c0c184ef2b90758b23452eff", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=2bc2379be5c98d34ecbb347b2abf059aa6d94499", "patch": "@@ -172,6 +172,11 @@ struct default_hash_traits <type_pair>\n     }\n };\n \n+/* HACK alert: this is used to communicate with ipa-inline-transform that\n+   thunk is being expanded and there is no need to clear the polymorphic\n+   call target cache.  */\n+bool thunk_expansion;\n+\n static bool odr_types_equivalent_p (tree, tree, bool, bool *,\n \t\t\t\t    hash_set<type_pair> *,\n \t\t\t\t    location_t, location_t);\n@@ -2747,6 +2752,7 @@ static void\n devirt_node_removal_hook (struct cgraph_node *n, void *d ATTRIBUTE_UNUSED)\n {\n   if (cached_polymorphic_call_targets\n+      && !thunk_expansion\n       && cached_polymorphic_call_targets->contains (n))\n     free_polymorphic_call_targets_hash ();\n }"}, {"sha": "8b9588982f325431f4d6a08ea0c3e79387526da5", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=2bc2379be5c98d34ecbb347b2abf059aa6d94499", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n+#include \"ipa-utils.h\"\n \n int ncalls_inlined;\n int nfunctions_inlined;\n@@ -352,6 +353,7 @@ inline_call (struct cgraph_edge *e, bool update_original,\n   if (to->thunk.thunk_p)\n     {\n       struct cgraph_node *target = to->callees->callee;\n+      thunk_expansion = true;\n       symtab->call_cgraph_removal_hooks (to);\n       if (in_lto_p)\n \tto->get_untransformed_body ();\n@@ -360,6 +362,7 @@ inline_call (struct cgraph_edge *e, bool update_original,\n       for (e = to->callees; e && e->callee != target; e = e->next_callee)\n \t;\n       symtab->call_cgraph_insertion_hooks (to);\n+      thunk_expansion = false;\n       gcc_assert (e);\n     }\n "}, {"sha": "947307a3d66ddcd52c96b6c6325dd603dfed7ce0", "filename": "gcc/ipa-utils.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2Fipa-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc2379be5c98d34ecbb347b2abf059aa6d94499/gcc%2Fipa-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.h?ref=2bc2379be5c98d34ecbb347b2abf059aa6d94499", "patch": "@@ -47,13 +47,17 @@ void ipa_merge_profiles (struct cgraph_node *dst,\n \t\t\t struct cgraph_node *src, bool preserve_body = false);\n bool recursive_call_p (tree, tree);\n \n+/* In ipa-prop.c  */\n+void ipa_remove_useless_jump_functions ();\n+\n /* In ipa-profile.c  */\n bool ipa_propagate_frequency (struct cgraph_node *node);\n \n /* In ipa-devirt.c  */\n \n struct odr_type_d;\n typedef odr_type_d *odr_type;\n+extern bool thunk_expansion;\n void build_type_inheritance_graph (void);\n void rebuild_type_inheritance_graph (void);\n void update_type_inheritance_graph (void);"}]}