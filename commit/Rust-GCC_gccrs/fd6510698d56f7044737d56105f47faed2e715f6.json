{"sha": "fd6510698d56f7044737d56105f47faed2e715f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ2NTEwNjk4ZDU2ZjcwNDQ3MzdkNTYxMDVmNDdmYWVkMmU3MTVmNg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-10-07T14:05:24Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-10-07T14:05:24Z"}, "message": "do not emit bogus set-not-used warnings for objc* entities used as message receivers.\n\ngcc/objc:\n\t* objc-act.c (objc_build_message_expr):  Call mark_exp_read () to signal that\n\tthe receiver has been used.\ngcc/testsuite:\n\t* objc.dg/set-not-used-1.m: New\n\t* obj-c++.dg/set-not-used-1.mm: New.\n\nFrom-SVN: r165111", "tree": {"sha": "cf236f98bc8a616033ac7a6dc99454808110a4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf236f98bc8a616033ac7a6dc99454808110a4ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd6510698d56f7044737d56105f47faed2e715f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6510698d56f7044737d56105f47faed2e715f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6510698d56f7044737d56105f47faed2e715f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6510698d56f7044737d56105f47faed2e715f6/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "518ade91f476c6425472df6763f6f7bd29dda7a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518ade91f476c6425472df6763f6f7bd29dda7a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518ade91f476c6425472df6763f6f7bd29dda7a7"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "27de164764c98cb030b7bd328c490149b71ad69c", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=fd6510698d56f7044737d56105f47faed2e715f6", "patch": "@@ -1,3 +1,8 @@\n+2010-10-07  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* objc-act.c (objc_build_message_expr):  Call mark_exp_read () to signal that\n+\tthe receiver has been used.\n+\n 2010-10-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* README: Obsolete file removed."}, {"sha": "e1dca585442f08f123d53466a55d4567fe82990e", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=fd6510698d56f7044737d56105f47faed2e715f6", "patch": "@@ -6455,6 +6455,9 @@ objc_finish_message_expr (tree receiver, tree sel_name, tree method_params)\n   tree selector, retval, class_tree;\n   int self, super, have_cast;\n \n+  /* We have used the receiver, so mark it as read.  */\n+  mark_exp_read (receiver);\n+\n   /* Extract the receiver of the message, as well as its type\n      (where the latter may take the form of a cast or be inferred\n      from the implementation context).  */"}, {"sha": "f78e4962bd6c889b1c37f32d1aac647871672b4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd6510698d56f7044737d56105f47faed2e715f6", "patch": "@@ -1,3 +1,8 @@\n+2010-10-07  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* objc.dg/set-not-used-1.m: New\n+\t* obj-c++.dg/set-not-used-1.mm: New.\n+\n 2010-10-07  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* objc.dg/attributes/method-attribute-3.m: New."}, {"sha": "6380ec9df5d007ab34e6a63087c5cb9e96a6d736", "filename": "gcc/testsuite/obj-c++.dg/set-not-used-1.mm", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fset-not-used-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fset-not-used-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fset-not-used-1.mm?ref=fd6510698d56f7044737d56105f47faed2e715f6", "patch": "@@ -0,0 +1,36 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-but-set-variable\" } */\n+\n+#import \"../objc-obj-c++-shared/Object1.h\"\n+#include <objc/objc-api.h>\n+\n+@interface obj : Object\n+{\n+  int value;\n+}\n+- (int) value;\n+- (void) setValue: (int)number;\n+@end\n+\n+@implementation obj : Object\n+\n+- (int) value { return value; }\n+- (void) setValue: (int)number { value = number; }\n+\n+@end\n+\n+int main (void)\n+{\n+  obj *a;\t\t/* { dg-bogus \"set but not used\" } */\n+  obj *b;\t\t/* { dg-bogus \"set but not used\" } */\n+  obj *c;\t\t/* { dg-warning \"set but not used\" } */\n+\n+  a = [obj new];\n+  b = [obj new];\n+  c = [obj new];\n+\n+  [b setValue: [a value]];\n+\n+  return [a value];\n+}"}, {"sha": "6380ec9df5d007ab34e6a63087c5cb9e96a6d736", "filename": "gcc/testsuite/objc.dg/set-not-used-1.m", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Ftestsuite%2Fobjc.dg%2Fset-not-used-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6510698d56f7044737d56105f47faed2e715f6/gcc%2Ftestsuite%2Fobjc.dg%2Fset-not-used-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fset-not-used-1.m?ref=fd6510698d56f7044737d56105f47faed2e715f6", "patch": "@@ -0,0 +1,36 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-but-set-variable\" } */\n+\n+#import \"../objc-obj-c++-shared/Object1.h\"\n+#include <objc/objc-api.h>\n+\n+@interface obj : Object\n+{\n+  int value;\n+}\n+- (int) value;\n+- (void) setValue: (int)number;\n+@end\n+\n+@implementation obj : Object\n+\n+- (int) value { return value; }\n+- (void) setValue: (int)number { value = number; }\n+\n+@end\n+\n+int main (void)\n+{\n+  obj *a;\t\t/* { dg-bogus \"set but not used\" } */\n+  obj *b;\t\t/* { dg-bogus \"set but not used\" } */\n+  obj *c;\t\t/* { dg-warning \"set but not used\" } */\n+\n+  a = [obj new];\n+  b = [obj new];\n+  c = [obj new];\n+\n+  [b setValue: [a value]];\n+\n+  return [a value];\n+}"}]}