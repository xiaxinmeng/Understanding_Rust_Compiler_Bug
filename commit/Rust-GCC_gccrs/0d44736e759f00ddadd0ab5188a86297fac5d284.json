{"sha": "0d44736e759f00ddadd0ab5188a86297fac5d284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ0NDczNmU3NTlmMDBkZGFkZDBhYjUxODhhODYyOTdmYWM1ZDI4NA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-07-08T13:03:38Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-07-08T13:03:38Z"}, "message": "optabs.c (expand_binop): Tighten conditions for doubleword expansions.\n\n\t* optabs.c (expand_binop): Tighten conditions for doubleword\n\texpansions.\n\t(widen_bswap): Assert that mode bitsize and precision are the\n\tsame.\n\t* stor-layout.c (get_best_mode): Skip modes that have lower\n\tprecision than bitsize.\n\t* recog.c (simplify_while_replacing): Assert that bitsize and\n\tprecision are the same.\n\nFrom-SVN: r176040", "tree": {"sha": "d3cb9244ced6ff224a76525334a1a776a361f70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3cb9244ced6ff224a76525334a1a776a361f70c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d44736e759f00ddadd0ab5188a86297fac5d284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d44736e759f00ddadd0ab5188a86297fac5d284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d44736e759f00ddadd0ab5188a86297fac5d284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d44736e759f00ddadd0ab5188a86297fac5d284/comments", "author": null, "committer": null, "parents": [{"sha": "86cdf39313b1c1bd212037be84f9161eda0d4c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86cdf39313b1c1bd212037be84f9161eda0d4c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86cdf39313b1c1bd212037be84f9161eda0d4c7f"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "f1cabbbc3313ecc26b9a7e1ba344332c4d3bc9ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d44736e759f00ddadd0ab5188a86297fac5d284", "patch": "@@ -16,6 +16,15 @@\n \t* rtlanal.c (nonzero_bits1): Don't compare GET_MODE_SIZE against\n \ta bitsize.\n \n+\t* optabs.c (expand_binop): Tighten conditions for doubleword\n+\texpansions.\n+\t(widen_bswap): Assert that mode bitsize and precision are the\n+\tsame.\n+\t* stor-layout.c (get_best_mode): Skip modes that have lower\n+\tprecision than bitsize.\n+\t* recog.c (simplify_while_replacing): Assert that bitsize and\n+\tprecision are the same.\n+\n 2011-07-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* Makefile.in (LIBGCOV): Remove."}, {"sha": "915a45e2abbb082149c39edf4f5b1c3d40558d40", "filename": "gcc/optabs.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=0d44736e759f00ddadd0ab5188a86297fac5d284", "patch": "@@ -1428,12 +1428,12 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n      takes operands of this mode and makes a wider mode.  */\n \n   if (binoptab == smul_optab\n-      && GET_MODE_WIDER_MODE (mode) != VOIDmode\n+      && GET_MODE_2XWIDER_MODE (mode) != VOIDmode\n       && (optab_handler ((unsignedp ? umul_widen_optab : smul_widen_optab),\n-\t\t\t GET_MODE_WIDER_MODE (mode))\n+\t\t\t GET_MODE_2XWIDER_MODE (mode))\n \t  != CODE_FOR_nothing))\n     {\n-      temp = expand_binop (GET_MODE_WIDER_MODE (mode),\n+      temp = expand_binop (GET_MODE_2XWIDER_MODE (mode),\n \t\t\t   unsignedp ? umul_widen_optab : smul_widen_optab,\n \t\t\t   op0, op1, NULL_RTX, unsignedp, OPTAB_DIRECT);\n \n@@ -1575,6 +1575,7 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n       && mclass == MODE_INT\n       && (CONST_INT_P (op1) || optimize_insn_for_speed_p ())\n       && GET_MODE_SIZE (mode) == 2 * UNITS_PER_WORD\n+      && GET_MODE_PRECISION (mode) == GET_MODE_BITSIZE (mode)\n       && optab_handler (binoptab, word_mode) != CODE_FOR_nothing\n       && optab_handler (ashl_optab, word_mode) != CODE_FOR_nothing\n       && optab_handler (lshr_optab, word_mode) != CODE_FOR_nothing)\n@@ -1647,7 +1648,7 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n   if ((binoptab == rotl_optab || binoptab == rotr_optab)\n       && mclass == MODE_INT\n       && CONST_INT_P (op1)\n-      && GET_MODE_SIZE (mode) == 2 * UNITS_PER_WORD\n+      && GET_MODE_PRECISION (mode) == 2 * BITS_PER_WORD\n       && optab_handler (ashl_optab, word_mode) != CODE_FOR_nothing\n       && optab_handler (lshr_optab, word_mode) != CODE_FOR_nothing)\n     {\n@@ -2463,6 +2464,8 @@ widen_bswap (enum machine_mode mode, rtx op0, rtx target)\n   x = widen_operand (op0, wider_mode, mode, true, true);\n   x = expand_unop (wider_mode, bswap_optab, x, NULL_RTX, true);\n \n+  gcc_assert (GET_MODE_PRECISION (wider_mode) == GET_MODE_BITSIZE (wider_mode)\n+\t      && GET_MODE_PRECISION (mode) == GET_MODE_BITSIZE (mode));\n   if (x != 0)\n     x = expand_shift (RSHIFT_EXPR, wider_mode, x,\n \t\t      GET_MODE_BITSIZE (wider_mode)"}, {"sha": "933168149a870302575b5e4926bbc16b5eef2439", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=0d44736e759f00ddadd0ab5188a86297fac5d284", "patch": "@@ -638,6 +638,8 @@ simplify_while_replacing (rtx *loc, rtx to, rtx object,\n \t\t  (GET_MODE_SIZE (is_mode) - GET_MODE_SIZE (wanted_mode) -\n \t\t   offset);\n \n+\t      gcc_assert (GET_MODE_PRECISION (wanted_mode)\n+\t\t\t  == GET_MODE_BITSIZE (wanted_mode));\n \t      pos %= GET_MODE_BITSIZE (wanted_mode);\n \n \t      newmem = adjust_address_nv (XEXP (x, 0), wanted_mode, offset);"}, {"sha": "76f27b2c93928eea5dbb9ad3598ab665dc9f4ec2", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d44736e759f00ddadd0ab5188a86297fac5d284/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=0d44736e759f00ddadd0ab5188a86297fac5d284", "patch": "@@ -2389,7 +2389,8 @@ get_best_mode (int bitsize, int bitpos, unsigned int align,\n        mode = GET_MODE_WIDER_MODE (mode))\n     {\n       unit = GET_MODE_BITSIZE (mode);\n-      if ((bitpos % unit) + bitsize <= unit)\n+      if (unit == GET_MODE_PRECISION (mode)\n+\t  && (bitpos % unit) + bitsize <= unit)\n \tbreak;\n     }\n \n@@ -2414,7 +2415,8 @@ get_best_mode (int bitsize, int bitpos, unsigned int align,\n \t   tmode = GET_MODE_WIDER_MODE (tmode))\n \t{\n \t  unit = GET_MODE_BITSIZE (tmode);\n-\t  if (bitpos / unit == (bitpos + bitsize - 1) / unit\n+\t  if (unit == GET_MODE_PRECISION (tmode)\n+\t      && bitpos / unit == (bitpos + bitsize - 1) / unit\n \t      && unit <= BITS_PER_WORD\n \t      && unit <= MIN (align, BIGGEST_ALIGNMENT)\n \t      && (largest_mode == VOIDmode"}]}