{"sha": "5abe96858868a873bddbb41b4e32599daa6f385c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiZTk2ODU4ODY4YTg3M2JkZGJiNDFiNGUzMjU5OWRhYTZmMzg1Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-11-16T21:34:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-11-16T21:34:39Z"}, "message": "re PR middle-end/34030 (ICE in in compare_values_warnv, at tree-vrp.c:701)\n\n2007-11-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/34030\n\t* fold-const.c (fold_binary): Use correct types for folding\n\t1 << X & Y to Y >> X & 1.\n\n\t* gcc.c-torture/compile/pr34030.c: New testcase.\n\nFrom-SVN: r130238", "tree": {"sha": "a2048e1254f70d5a8f267c703cc73c6bd6733224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2048e1254f70d5a8f267c703cc73c6bd6733224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5abe96858868a873bddbb41b4e32599daa6f385c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abe96858868a873bddbb41b4e32599daa6f385c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5abe96858868a873bddbb41b4e32599daa6f385c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abe96858868a873bddbb41b4e32599daa6f385c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6dfe2fc46ac63fafbfdd9c5a505e72e8fe2b861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dfe2fc46ac63fafbfdd9c5a505e72e8fe2b861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6dfe2fc46ac63fafbfdd9c5a505e72e8fe2b861"}], "stats": {"total": 55, "additions": 37, "deletions": 18}, "files": [{"sha": "7bd076309e6150674f1b8b29ff8d44de821ce0fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5abe96858868a873bddbb41b4e32599daa6f385c", "patch": "@@ -1,3 +1,9 @@\n+2007-11-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/34030\n+\t* fold-const.c (fold_binary): Use correct types for folding\n+\t1 << X & Y to Y >> X & 1.\n+\n 2007-11-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/33870"}, {"sha": "1057d2609a195755cc5206b43c450c5fcb8e930f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=5abe96858868a873bddbb41b4e32599daa6f385c", "patch": "@@ -11858,24 +11858,24 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t  tree arg01 = TREE_OPERAND (arg0, 1);\n \t  if (TREE_CODE (arg00) == LSHIFT_EXPR\n \t      && integer_onep (TREE_OPERAND (arg00, 0)))\n-\t    return\n-\t      fold_build2 (code, type,\n-\t\t\t   build2 (BIT_AND_EXPR, TREE_TYPE (arg0),\n-\t\t\t\t   build2 (RSHIFT_EXPR, TREE_TYPE (arg00),\n-\t\t\t\t\t   arg01, TREE_OPERAND (arg00, 1)),\n-\t\t\t\t   fold_convert (TREE_TYPE (arg0),\n-\t\t\t\t\t\t integer_one_node)),\n-\t\t\t   arg1);\n-\t  else if (TREE_CODE (TREE_OPERAND (arg0, 1)) == LSHIFT_EXPR\n-\t\t   && integer_onep (TREE_OPERAND (TREE_OPERAND (arg0, 1), 0)))\n-\t    return\n-\t      fold_build2 (code, type,\n-\t\t\t   build2 (BIT_AND_EXPR, TREE_TYPE (arg0),\n-\t\t\t\t   build2 (RSHIFT_EXPR, TREE_TYPE (arg01),\n-\t\t\t\t\t   arg00, TREE_OPERAND (arg01, 1)),\n-\t\t\t\t   fold_convert (TREE_TYPE (arg0),\n-\t\t\t\t\t\t integer_one_node)),\n-\t\t\t   arg1);\n+\t    {\n+\t      tree tem = fold_build2 (RSHIFT_EXPR, TREE_TYPE (arg00),\n+\t\t\t\t      arg01, TREE_OPERAND (arg00, 1));\n+\t      tem = fold_build2 (BIT_AND_EXPR, TREE_TYPE (arg0), tem,\n+\t\t\t\t build_int_cst (TREE_TYPE (arg0), 1));\n+\t      return fold_build2 (code, type,\n+\t\t\t\t  fold_convert (TREE_TYPE (arg1), tem), arg1);\n+\t    }\n+\t  else if (TREE_CODE (arg01) == LSHIFT_EXPR\n+\t\t   && integer_onep (TREE_OPERAND (arg01, 0)))\n+\t    {\n+\t      tree tem = fold_build2 (RSHIFT_EXPR, TREE_TYPE (arg01),\n+\t\t\t\t      arg00, TREE_OPERAND (arg01, 1));\n+\t      tem = fold_build2 (BIT_AND_EXPR, TREE_TYPE (arg0), tem,\n+\t\t\t\t build_int_cst (TREE_TYPE (arg0), 1));\n+\t      return fold_build2 (code, type,\n+\t\t\t\t  fold_convert (TREE_TYPE (arg1), tem), arg1);\n+\t    }\n \t}\n \n       /* If this is an NE or EQ comparison of zero against the result of a"}, {"sha": "5da0c1d878f36e90fccc33f3e4e11bda31872e4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5abe96858868a873bddbb41b4e32599daa6f385c", "patch": "@@ -1,3 +1,8 @@\n+2007-11-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/34030\n+\t* gcc.c-torture/compile/pr34030.c: New testcase.\n+\n 2007-11-16  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34008"}, {"sha": "f4f9e176d3f2bff9a35310e6dd30a0c9c52a53f2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr34030.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34030.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe96858868a873bddbb41b4e32599daa6f385c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34030.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34030.c?ref=5abe96858868a873bddbb41b4e32599daa6f385c", "patch": "@@ -0,0 +1,8 @@\n+int myvar;\n+\n+int foo(int mynum)\n+{\n+  if ((((void *)0) == (myvar & ((1U<<0) << mynum))) && (mynum > 0))\n+    return 1;\n+  return 0;\n+}"}]}