{"sha": "c952126870c92cf293d59ffb1497e402eb8fc269", "node_id": "C_kwDOANBUbNoAKGM5NTIxMjY4NzBjOTJjZjI5M2Q1OWZmYjE0OTdlNDAyZWI4ZmMyNjk", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-18T12:48:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-18T14:43:04Z"}, "message": "ipa/103989 - avoid IPA inlining of small functions with -Og\n\nThe following change avoids doing IPA inlining of small functions\ninto functions compiled with -Og - those functions will see almost no\nfollowup scalar cleanups so that the benefit anticipated by the\ninliner will not be realized and instead the late diagnostic code\nwill be confused by dead code that is left around.\n\n2022-01-18  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/103989\n\t* ipa-inline.cc (inline_small_functions): Do not enqueue call\n\tedges originating in functions compiled with -Og.\n\n\t* g++.dg/opt/pr103989.C: New testcase.", "tree": {"sha": "83ef891500bdd07ebeef4f75edc508bd82874ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83ef891500bdd07ebeef4f75edc508bd82874ee1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c952126870c92cf293d59ffb1497e402eb8fc269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c952126870c92cf293d59ffb1497e402eb8fc269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c952126870c92cf293d59ffb1497e402eb8fc269", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c952126870c92cf293d59ffb1497e402eb8fc269/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e89b2a270d31d7298d516ae545e256645992c7b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89b2a270d31d7298d516ae545e256645992c7b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e89b2a270d31d7298d516ae545e256645992c7b9"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "f8bb072c4220c9852cca57bf55c1551f310392d1", "filename": "gcc/ipa-inline.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c952126870c92cf293d59ffb1497e402eb8fc269/gcc%2Fipa-inline.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c952126870c92cf293d59ffb1497e402eb8fc269/gcc%2Fipa-inline.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.cc?ref=c952126870c92cf293d59ffb1497e402eb8fc269", "patch": "@@ -2029,7 +2029,12 @@ inline_small_functions (void)\n       struct cgraph_edge *next = NULL;\n       bool has_speculative = false;\n \n-      if (!opt_for_fn (node->decl, optimize))\n+      if (!opt_for_fn (node->decl, optimize)\n+\t  /* With -Og we do not want to perform IPA inlining of small\n+\t     functions since there are no scalar cleanups after it\n+\t     that would realize the anticipated win.  All abstraction\n+\t     is removed during early inlining.  */\n+\t  || opt_for_fn (node->decl, optimize_debug))\n \tcontinue;\n \n       if (dump_file)"}, {"sha": "4604811b42a1bc01052481901ee9915248cb7884", "filename": "gcc/testsuite/g++.dg/opt/pr103989.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c952126870c92cf293d59ffb1497e402eb8fc269/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr103989.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c952126870c92cf293d59ffb1497e402eb8fc269/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr103989.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr103989.C?ref=c952126870c92cf293d59ffb1497e402eb8fc269", "patch": "@@ -0,0 +1,30 @@\n+// { dg-require-effective-target c++17 }\n+// { dg-options \"-Og -Wall\" }\n+\n+#include <optional>\n+#include <memory>\n+\n+struct A {\n+  A (int a) : a {a} \n+  {}\n+\n+  const std::shared_ptr <int> x;\n+  int a;\n+};\n+\n+class B\n+{\n+public:\n+  B (const std::optional <A>& a)\n+    : a {a}\n+  {\n+  }\n+public:\n+  const std::optional <A> a;\n+};\n+\n+int\n+main ()\n+{\n+  B b {std::nullopt};\n+}"}]}