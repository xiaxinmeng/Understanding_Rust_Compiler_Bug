{"sha": "bdf5a983859d00db4be03b27df54c19b33dc6a28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmNWE5ODM4NTlkMDBkYjRiZTAzYjI3ZGY1NGMxOWIzM2RjNmEyOA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-08-07T10:20:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-21T07:22:48Z"}, "message": "[Ada] Fix target configuration file used for CodePeer/SPARK for new ints\n\ngcc/ada/\n\n\t* ada_get_targ.adb (Width_From_Size): Add case for 128 bits.\n\tReorder declarations in the same order as get_targ.adb to\n\tfacilitate diffs.", "tree": {"sha": "e8e1b8f29654a1f82b92284f938e5bf7188667ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e1b8f29654a1f82b92284f938e5bf7188667ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdf5a983859d00db4be03b27df54c19b33dc6a28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf5a983859d00db4be03b27df54c19b33dc6a28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf5a983859d00db4be03b27df54c19b33dc6a28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf5a983859d00db4be03b27df54c19b33dc6a28/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74580e1b05a04184bd23ad115f10d09428535182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74580e1b05a04184bd23ad115f10d09428535182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74580e1b05a04184bd23ad115f10d09428535182"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "01833402450f5ea7d62409ffdcf1130f9b275008", "filename": "gcc/ada/ada_get_targ.adb", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf5a983859d00db4be03b27df54c19b33dc6a28/gcc%2Fada%2Fada_get_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf5a983859d00db4be03b27df54c19b33dc6a28/gcc%2Fada%2Fada_get_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada_get_targ.adb?ref=bdf5a983859d00db4be03b27df54c19b33dc6a28", "patch": "@@ -118,15 +118,6 @@ package body Get_Targ is\n       return 4;\n    end Get_Maximum_Alignment;\n \n-   ------------------------------------\n-   -- Get_System_Allocator_Alignment --\n-   ------------------------------------\n-\n-   function Get_System_Allocator_Alignment return Nat is\n-   begin\n-      return 1;\n-   end Get_System_Allocator_Alignment;\n-\n    ------------------------\n    -- Get_Float_Words_BE --\n    ------------------------\n@@ -181,6 +172,15 @@ package body Get_Targ is\n       return 1;\n    end Get_Strict_Alignment;\n \n+   ------------------------------------\n+   -- Get_System_Allocator_Alignment --\n+   ------------------------------------\n+\n+   function Get_System_Allocator_Alignment return Nat is\n+   begin\n+      return 1;\n+   end Get_System_Allocator_Alignment;\n+\n    --------------------------------\n    -- Get_Double_Float_Alignment --\n    --------------------------------\n@@ -199,15 +199,6 @@ package body Get_Targ is\n       return 0;\n    end Get_Double_Scalar_Alignment;\n \n-   -----------------------------\n-   -- Get_Max_Unaligned_Field --\n-   -----------------------------\n-\n-   function Get_Max_Unaligned_Field return Pos is\n-   begin\n-      return 64;  -- Can be different on some targets (e.g., AAMP)\n-   end Get_Max_Unaligned_Field;\n-\n    ----------------------\n    -- Digits_From_Size --\n    ----------------------\n@@ -224,6 +215,15 @@ package body Get_Targ is\n       end case;\n    end Digits_From_Size;\n \n+   -----------------------------\n+   -- Get_Max_Unaligned_Field --\n+   -----------------------------\n+\n+   function Get_Max_Unaligned_Field return Pos is\n+   begin\n+      return 64;  -- Can be different on some targets (e.g., AAMP)\n+   end Get_Max_Unaligned_Field;\n+\n    -----------------------------\n    -- Register_Back_End_Types --\n    -----------------------------\n@@ -255,13 +255,14 @@ package body Get_Targ is\n    -- Width_From_Size --\n    ---------------------\n \n-   function Width_From_Size  (Size : Pos) return Pos is\n+   function Width_From_Size (Size : Pos) return Pos is\n    begin\n       case Size is\n-         when  8     => return  4;\n-         when 16     => return  6;\n-         when 32     => return 11;\n-         when 64     => return 21;\n+         when   8    => return  4;\n+         when  16    => return  6;\n+         when  32    => return 11;\n+         when  64    => return 21;\n+         when 128    => return 40;\n          when others => raise Program_Error;\n       end case;\n    end Width_From_Size;"}]}