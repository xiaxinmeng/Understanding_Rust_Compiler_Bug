{"sha": "151c42b0b5d8606b9b40eddbd396a8c93432c12f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUxYzQyYjBiNWQ4NjA2YjliNDBlZGRiZDM5NmE4YzkzNDMyYzEyZg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-12-02T14:50:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-02T14:50:16Z"}, "message": "sem_util.adb (Unique_Name): Reach through Unique_Entity to get the name of the entity.\n\n2011-12-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_util.adb (Unique_Name): Reach through Unique_Entity to\n\tget the name of the entity.\n\t(Unique_Entity): Correct case for subprogram stubs.\n\n2011-12-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb (Check_Initialization): Do not emit warning on\n\tinitialization of limited type object in Alfa mode.\n\nFrom-SVN: r181916", "tree": {"sha": "65edef2315e7308b4640ea0fca96912f1eead182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65edef2315e7308b4640ea0fca96912f1eead182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/151c42b0b5d8606b9b40eddbd396a8c93432c12f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/151c42b0b5d8606b9b40eddbd396a8c93432c12f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/151c42b0b5d8606b9b40eddbd396a8c93432c12f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/151c42b0b5d8606b9b40eddbd396a8c93432c12f/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a6c40a6542f02b0ec9f6b979785517d4b11f9c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6c40a6542f02b0ec9f6b979785517d4b11f9c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6c40a6542f02b0ec9f6b979785517d4b11f9c6"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "6a23baed9da3da6302d72a240a4ea906793e1672", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/151c42b0b5d8606b9b40eddbd396a8c93432c12f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/151c42b0b5d8606b9b40eddbd396a8c93432c12f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=151c42b0b5d8606b9b40eddbd396a8c93432c12f", "patch": "@@ -1,3 +1,14 @@\n+2011-12-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_util.adb (Unique_Name): Reach through Unique_Entity to\n+\tget the name of the entity.\n+\t(Unique_Entity): Correct case for subprogram stubs.\n+\n+2011-12-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb (Check_Initialization): Do not emit warning on\n+\tinitialization of limited type object in Alfa mode.\n+\n 2011-12-02  Robert Dewar  <dewar@adacore.com>\n \n \t* sinfo.ads: Minor reformatting."}, {"sha": "e708ee7d6f6c6fb01fdcad1c2d8670065aaf4646", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/151c42b0b5d8606b9b40eddbd396a8c93432c12f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/151c42b0b5d8606b9b40eddbd396a8c93432c12f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=151c42b0b5d8606b9b40eddbd396a8c93432c12f", "patch": "@@ -9704,9 +9704,25 @@ package body Sem_Ch3 is\n                  (\"?cannot initialize entities of limited type!\", Exp);\n \n             elsif Ada_Version < Ada_2005 then\n-               Error_Msg_N\n-                 (\"cannot initialize entities of limited type\", Exp);\n-               Explain_Limited_Type (T, Exp);\n+\n+               --  The side effect removal machinery may generate illegal Ada\n+               --  code to avoid the usage of access types and 'reference in\n+               --  Alfa mode. Since this is legal code with respect to theorem\n+               --  proving, do not emit the error.\n+\n+               if Alfa_Mode\n+                 and then Nkind (Exp) = N_Function_Call\n+                 and then Nkind (Parent (Exp)) = N_Object_Declaration\n+                 and then not Comes_From_Source\n+                                (Defining_Identifier (Parent (Exp)))\n+               then\n+                  null;\n+\n+               else\n+                  Error_Msg_N\n+                    (\"cannot initialize entities of limited type\", Exp);\n+                  Explain_Limited_Type (T, Exp);\n+               end if;\n \n             else\n                --  Specialize error message according to kind of illegal"}, {"sha": "4fc88f2e0e0a3850e76ebf3746e7afc1c3305502", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/151c42b0b5d8606b9b40eddbd396a8c93432c12f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/151c42b0b5d8606b9b40eddbd396a8c93432c12f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=151c42b0b5d8606b9b40eddbd396a8c93432c12f", "patch": "@@ -3045,7 +3045,8 @@ package body Sem_Util is\n \n    function Effectively_Has_Constrained_Partial_View\n      (Typ  : Entity_Id;\n-      Scop : Entity_Id := Current_Scope) return Boolean is\n+      Scop : Entity_Id := Current_Scope) return Boolean\n+   is\n    begin\n       return Has_Constrained_Partial_View (Typ)\n         or else (In_Generic_Body (Scop)\n@@ -6111,9 +6112,12 @@ package body Sem_Util is\n    ---------------------\n \n    function In_Generic_Body (Id : Entity_Id) return Boolean is\n-      S : Entity_Id := Id;\n+      S : Entity_Id;\n \n    begin\n+      --  Climb scopes looking for generic body\n+\n+      S := Id;\n       while Present (S) and then S /= Standard_Standard loop\n \n          --  Generic package body\n@@ -6135,6 +6139,8 @@ package body Sem_Util is\n          S := Scope (S);\n       end loop;\n \n+      --  False if top of scope stack without finding a generic body\n+\n       return False;\n    end In_Generic_Body;\n \n@@ -12905,7 +12911,12 @@ package body Sem_Util is\n \n             if Nkind (P) = N_Subprogram_Body_Stub then\n                if Present (Library_Unit (P)) then\n-                  U := Get_Body_From_Stub (P);\n+\n+                  --  Get to the function or procedure (generic) entity through\n+                  --  the body entity.\n+\n+                  U :=\n+                    Unique_Entity (Defining_Entity (Get_Body_From_Stub (P)));\n                end if;\n             else\n                U := Corresponding_Spec (P);\n@@ -12929,6 +12940,11 @@ package body Sem_Util is\n \n    function Unique_Name (E : Entity_Id) return String is\n \n+      --  Names of E_Subprogram_Body or E_Package_Body entities are not\n+      --  reliable, as they may not include the overloading suffix. Instead,\n+      --  when looking for the name of E or one of its enclosing scope, we get\n+      --  the name of the corresponding Unique_Entity.\n+\n       function Get_Scoped_Name (E : Entity_Id) return String;\n       --  Return the name of E prefixed by all the names of the scopes to which\n       --  E belongs, except for Standard.\n@@ -12945,7 +12961,7 @@ package body Sem_Util is\n          then\n             return Name;\n          else\n-            return Get_Scoped_Name (Scope (E)) & \"__\" & Name;\n+            return Get_Scoped_Name (Unique_Entity (Scope (E))) & \"__\" & Name;\n          end if;\n       end Get_Scoped_Name;\n \n@@ -12965,7 +12981,7 @@ package body Sem_Util is\n          return Unique_Name (Etype (E)) & \"__\" & Get_Name_String (Chars (E));\n \n       else\n-         return Get_Scoped_Name (E);\n+         return Get_Scoped_Name (Unique_Entity (E));\n       end if;\n    end Unique_Name;\n "}]}