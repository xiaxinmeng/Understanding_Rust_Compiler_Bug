{"sha": "b5fbe7164833774eabba67ecd47b3658d8e2c395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmYmU3MTY0ODMzNzc0ZWFiYmE2N2VjZDQ3YjM2NThkOGUyYzM5NQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-11-07T15:19:17Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-11-07T15:19:17Z"}, "message": "rtx_writer: avoid printing trailing default values\n\ngcc/ChangeLog:\n\t* print-rtl.c (rtx_writer::operand_has_default_value_p): New\n\tmethod.\n\t(rtx_writer::print_rtx): In compact mode, omit trailing operands\n\tthat have the default values.\n\t* print-rtl.h (rtx_writer::operand_has_default_value_p): New\n\tmethod.\n\t* rtl-tests.c (selftest::test_dumping_insns): Remove empty\n\tlabel string from expected dump.\n\t(seltest::test_uncond_jump): Remove trailing \"(nil)\" for REG_NOTES\n\tfrom expected dump.\n\nFrom-SVN: r241908", "tree": {"sha": "2a53d93e01ff3266941b8cd229c9472180d2f20d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a53d93e01ff3266941b8cd229c9472180d2f20d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5fbe7164833774eabba67ecd47b3658d8e2c395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fbe7164833774eabba67ecd47b3658d8e2c395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5fbe7164833774eabba67ecd47b3658d8e2c395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fbe7164833774eabba67ecd47b3658d8e2c395/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "061ee39672f0086c2a9ab6e38f0747d0b9ad18a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061ee39672f0086c2a9ab6e38f0747d0b9ad18a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061ee39672f0086c2a9ab6e38f0747d0b9ad18a8"}], "stats": {"total": 67, "additions": 63, "deletions": 4}, "files": [{"sha": "02e05647b7dca54e9887b6a96be7b13c86f7a980", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5fbe7164833774eabba67ecd47b3658d8e2c395", "patch": "@@ -1,3 +1,16 @@\n+2016-11-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* print-rtl.c (rtx_writer::operand_has_default_value_p): New\n+\tmethod.\n+\t(rtx_writer::print_rtx): In compact mode, omit trailing operands\n+\tthat have the default values.\n+\t* print-rtl.h (rtx_writer::operand_has_default_value_p): New\n+\tmethod.\n+\t* rtl-tests.c (selftest::test_dumping_insns): Remove empty\n+\tlabel string from expected dump.\n+\t(seltest::test_uncond_jump): Remove trailing \"(nil)\" for REG_NOTES\n+\tfrom expected dump.\n+\n 2016-11-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/77834"}, {"sha": "3f15a216c96e40dc4b5142ad3df8ad96f4213166", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=b5fbe7164833774eabba67ecd47b3658d8e2c395", "patch": "@@ -564,6 +564,43 @@ rtx_writer::print_rtx_operand (const_rtx in_rtx, int idx)\n     }\n }\n \n+/* Subroutine of rtx_writer::print_rtx.\n+   In compact mode, determine if operand IDX of IN_RTX is interesting\n+   to dump, or (if in a trailing position) it can be omitted.  */\n+\n+bool\n+rtx_writer::operand_has_default_value_p (const_rtx in_rtx, int idx)\n+{\n+  const char *format_ptr = GET_RTX_FORMAT (GET_CODE (in_rtx));\n+\n+  switch (format_ptr[idx])\n+    {\n+    case 'e':\n+    case 'u':\n+      return XEXP (in_rtx, idx) == NULL_RTX;\n+\n+    case 's':\n+      return XSTR (in_rtx, idx) == NULL;\n+\n+    case '0':\n+      switch (GET_CODE (in_rtx))\n+\t{\n+\tcase JUMP_INSN:\n+\t  /* JUMP_LABELs are always omitted in compact mode, so treat\n+\t     any value here as omittable, so that earlier operands can\n+\t     potentially be omitted also.  */\n+\t  return m_compact;\n+\n+\tdefault:\n+\t  return false;\n+\n+\t}\n+\n+    default:\n+      return false;\n+    }\n+}\n+\n /* Print IN_RTX onto m_outfile.  This is the recursive part of printing.  */\n \n void\n@@ -681,9 +718,18 @@ rtx_writer::print_rtx (const_rtx in_rtx)\n \tfprintf (m_outfile, \" %d\", INSN_UID (in_rtx));\n     }\n \n+  /* Determine which is the final operand to print.\n+     In compact mode, skip trailing operands that have the default values\n+     e.g. trailing \"(nil)\" values.  */\n+  int limit = GET_RTX_LENGTH (GET_CODE (in_rtx));\n+  if (m_compact)\n+    while (limit > idx && operand_has_default_value_p (in_rtx, limit - 1))\n+      limit--;\n+\n   /* Get the format string and skip the first elements if we have handled\n      them already.  */\n-  for (; idx < GET_RTX_LENGTH (GET_CODE (in_rtx)); idx++)\n+\n+  for (; idx < limit; idx++)\n     print_rtx_operand (in_rtx, idx);\n \n   switch (GET_CODE (in_rtx))"}, {"sha": "68db057b201b92235882bdc9bda8788f19120ece", "filename": "gcc/print-rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2Fprint-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2Fprint-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.h?ref=b5fbe7164833774eabba67ecd47b3658d8e2c395", "patch": "@@ -39,6 +39,7 @@ class rtx_writer\n   void print_rtx_operand_code_r (const_rtx in_rtx);\n   void print_rtx_operand_code_u (const_rtx in_rtx, int idx);\n   void print_rtx_operand (const_rtx in_rtx, int idx);\n+  bool operand_has_default_value_p (const_rtx in_rtx, int idx);\n \n  private:\n   FILE *m_outfile;"}, {"sha": "228226bbb685fb61cb0c7416d02cf8dd42258dd1", "filename": "gcc/rtl-tests.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2Frtl-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbe7164833774eabba67ecd47b3658d8e2c395/gcc%2Frtl-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-tests.c?ref=b5fbe7164833774eabba67ecd47b3658d8e2c395", "patch": "@@ -122,7 +122,7 @@ test_dumping_insns ()\n   /* Labels.  */\n   rtx_insn *label = gen_label_rtx ();\n   CODE_LABEL_NUMBER (label) = 42;\n-  ASSERT_RTL_DUMP_EQ (\"(clabel 0 42 \\\"\\\")\\n\", label);\n+  ASSERT_RTL_DUMP_EQ (\"(clabel 0 42)\\n\", label);\n \n   LABEL_NAME (label)= \"some_label\";\n   ASSERT_RTL_DUMP_EQ (\"(clabel 0 42 (\\\"some_label\\\"))\\n\", label);\n@@ -176,8 +176,7 @@ test_uncond_jump ()\n   ASSERT_TRUE (control_flow_insn_p (jump_insn));\n \n   ASSERT_RTL_DUMP_EQ (\"(cjump_insn 1 (set (pc)\\n\"\n-\t\t      \"        (label_ref 0))\\n\"\n-\t\t      \"     (nil))\\n\",\n+\t\t      \"        (label_ref 0)))\\n\",\n \t\t      jump_insn);\n }\n "}]}