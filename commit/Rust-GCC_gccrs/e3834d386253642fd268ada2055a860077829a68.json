{"sha": "e3834d386253642fd268ada2055a860077829a68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM4MzRkMzg2MjUzNjQyZmQyNjhhZGEyMDU1YTg2MDA3NzgyOWE2OA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2008-08-05T14:04:56Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2008-08-05T14:04:56Z"}, "message": "spu_spu_mfcio.h: Wrap in extern \"C\" if __cplusplus.\n\n\t* config/spu_spu_mfcio.h: Wrap in extern \"C\" if __cplusplus.\n\tReword some comments throughout the file.\n\n\t(MFC_MIN_DMA_LIST_ELEMENTS): New define.\n\t(MFC_MAX_DMA_LIST_ELEMENTS): Likewise.\n\t(MFC_MIN_DMA_LIST_SIZE): Redefine in terms of MFC_MIN_DMA_LIST_ELEMENTS.\n\t(MFC_MAX_DMA_LIST_SIZE): Redefine in terms of MFC_MAX_DMA_LIST_ELEMENTS.\n\n\t(MFC_START_ENABLE): Remove PPU-only define.\n\t(MFC_PUTS_CMD, MFC_PUTFS_CMD, MFC_PUTBS_CMD): Likewise.\n\t(MFC_GETS_CMD, MFC_GETFS_CMD, MFC_GETBS_CMD): Likewise.\n\n\t(MFC_PUTB_CMD, MFC_PUTF_CMD): Reimplement using symbolic constants.\n\t(MFC_PUTL_CMD, MFC_PUTLB_CMD, MFC_PUTLF_CMD): Likewise.\n\t(MFC_PUTR_CMD, MFC_PUTRB_CMD, MFC_PUTRF_CMD): Likewise.\n\t(MFC_PUTRL_CMD, MFC_PUTRLB_CMD, MFC_PUTRLF_CMD): Likewise.\n\t(MFC_GETB_CMD, MFC_GETF_CMD): Likewise.\n\t(MFC_GETL_CMD, MFC_GETLB_CMD, MFC_GETLF_CMD): Likewise.\n\t(MFC_SNDSIGB_CMD, MFC_SNDSIGF_CMD): Likewise.\n\n\t(MFC_SDCRT_CMD, MFC_SDCRTST_CMD): New defines.\n\t(MFC_SDCRZ_CMD, MFC_SDCRST_CMD, MFC_SDCRF_CMD): Likewise.\n\t(mfc_sdcrt, mfc_sdcrtst): Likewise.\n\t(mfc_sdcrz, mfc_sdcrst, mfc_sdcrf): Likewise.\n\n\t(spu_read_machine_status): Fix typo.\n\nFrom-SVN: r138714", "tree": {"sha": "9200bec9d59010273e44c9bff01a2df3a2c5ccae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9200bec9d59010273e44c9bff01a2df3a2c5ccae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3834d386253642fd268ada2055a860077829a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3834d386253642fd268ada2055a860077829a68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3834d386253642fd268ada2055a860077829a68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3834d386253642fd268ada2055a860077829a68/comments", "author": null, "committer": null, "parents": [{"sha": "9e071d06dfb8dbd1e2f76f26c918bce0a1e5fb9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e071d06dfb8dbd1e2f76f26c918bce0a1e5fb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e071d06dfb8dbd1e2f76f26c918bce0a1e5fb9e"}], "stats": {"total": 127, "additions": 89, "deletions": 38}, "files": [{"sha": "e0933bda083b1d7c137b6a170f4957a20dde078d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3834d386253642fd268ada2055a860077829a68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3834d386253642fd268ada2055a860077829a68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3834d386253642fd268ada2055a860077829a68", "patch": "@@ -1,3 +1,32 @@\n+2008-08-05  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/spu_spu_mfcio.h: Wrap in extern \"C\" if __cplusplus.\n+\tReword some comments throughout the file.\n+\n+\t(MFC_MIN_DMA_LIST_ELEMENTS): New define.\n+\t(MFC_MAX_DMA_LIST_ELEMENTS): Likewise.\n+\t(MFC_MIN_DMA_LIST_SIZE): Redefine in terms of MFC_MIN_DMA_LIST_ELEMENTS.\n+\t(MFC_MAX_DMA_LIST_SIZE): Redefine in terms of MFC_MAX_DMA_LIST_ELEMENTS.\n+\n+\t(MFC_START_ENABLE): Remove PPU-only define.\n+\t(MFC_PUTS_CMD, MFC_PUTFS_CMD, MFC_PUTBS_CMD): Likewise.\n+\t(MFC_GETS_CMD, MFC_GETFS_CMD, MFC_GETBS_CMD): Likewise.\n+\n+\t(MFC_PUTB_CMD, MFC_PUTF_CMD): Reimplement using symbolic constants.\n+\t(MFC_PUTL_CMD, MFC_PUTLB_CMD, MFC_PUTLF_CMD): Likewise.\n+\t(MFC_PUTR_CMD, MFC_PUTRB_CMD, MFC_PUTRF_CMD): Likewise.\n+\t(MFC_PUTRL_CMD, MFC_PUTRLB_CMD, MFC_PUTRLF_CMD): Likewise.\n+\t(MFC_GETB_CMD, MFC_GETF_CMD): Likewise.\n+\t(MFC_GETL_CMD, MFC_GETLB_CMD, MFC_GETLF_CMD): Likewise.\n+\t(MFC_SNDSIGB_CMD, MFC_SNDSIGF_CMD): Likewise.\n+\n+\t(MFC_SDCRT_CMD, MFC_SDCRTST_CMD): New defines.\n+\t(MFC_SDCRZ_CMD, MFC_SDCRST_CMD, MFC_SDCRF_CMD): Likewise.\n+\t(mfc_sdcrt, mfc_sdcrtst): Likewise.\n+\t(mfc_sdcrz, mfc_sdcrst, mfc_sdcrf): Likewise.\n+\n+\t(spu_read_machine_status): Fix typo.\n+\n 2008-08-05  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/spu/spu.h (CANNOT_CHANGE_MODE_CLASS): Allow (multi)word-sized"}, {"sha": "8423b9e8d5dc576356f127b150a1f8e016fb1182", "filename": "gcc/config/spu/spu_mfcio.h", "status": "modified", "additions": 60, "deletions": 38, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3834d386253642fd268ada2055a860077829a68/gcc%2Fconfig%2Fspu%2Fspu_mfcio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3834d386253642fd268ada2055a860077829a68/gcc%2Fconfig%2Fspu%2Fspu_mfcio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu_mfcio.h?ref=e3834d386253642fd268ada2055a860077829a68", "patch": "@@ -31,6 +31,10 @@ typedef unsigned long long uint64_t;\n #include <stdint.h>\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n \n /****************************************************************/\n /* DMA list element structure*/\n@@ -59,64 +63,61 @@ typedef struct mfc_list_element {\n #define MFC_MIN_DMA_SIZE_MASK (MFC_MIN_DMA_SIZE - 1)\n #define MFC_MAX_DMA_SIZE_MASK (MFC_MAX_DMA_SIZE - 1)\n \n-#define MFC_MIN_DMA_LIST_SIZE 0x0008   /*   8 bytes */\n-#define MFC_MAX_DMA_LIST_SIZE 0x4000   /* 16K bytes */\n+#define MFC_MIN_DMA_LIST_ELEMENTS 1\n+#define MFC_MAX_DMA_LIST_ELEMENTS 2048\n+\n+#define MFC_MIN_DMA_LIST_SIZE (MFC_MIN_DMA_LIST_ELEMENTS << 3) /*   8 bytes */\n+#define MFC_MAX_DMA_LIST_SIZE (MFC_MAX_DMA_LIST_ELEMENTS << 3) /* 16K bytes */\n \n /****************************************************************/\n-/* MFC DMA Command flags which identify classes of operations.   */\n+/* MFC DMA command modifiers to identify classes of operations. */\n /****************************************************************/\n-/* Note: These flags may be used in conjunction with the base command types\n-  (i.e. MFC_PUT_CMD, MFC_PUTR_CMD, MFC_GET_CMD, and MFC_SNDSIG_CMD)\n-  to construct the various command permutations.\n- */\n+\n+/* Note: These commands modifier may be used in conjunction with the base\n+   command types (i.e. MFC_PUT_CMD, MFC_GET_CMD, and MFC_SNDSIG_CMD)\n+   to construct the various command permutations.  */\n \n #define MFC_BARRIER_ENABLE    0x0001\n #define MFC_FENCE_ENABLE      0x0002\n-#define MFC_LIST_ENABLE       0x0004   /* SPU Only */\n-#define MFC_START_ENABLE      0x0008   /*  PU Only */\n+#define MFC_LIST_ENABLE       0x0004\n #define MFC_RESULT_ENABLE     0x0010\n \n /****************************************************************/\n /* MFC DMA Put Commands                                 */\n /****************************************************************/\n \n #define MFC_PUT_CMD          0x0020\n-#define MFC_PUTS_CMD         0x0028   /*  PU Only */\n-#define MFC_PUTR_CMD         0x0030\n-#define MFC_PUTF_CMD         0x0022\n-#define MFC_PUTB_CMD         0x0021\n-#define MFC_PUTFS_CMD        0x002A   /*  PU Only */\n-#define MFC_PUTBS_CMD        0x0029   /*  PU Only */\n-#define MFC_PUTRF_CMD        0x0032\n-#define MFC_PUTRB_CMD        0x0031\n-#define MFC_PUTL_CMD         0x0024   /* SPU Only */\n-#define MFC_PUTRL_CMD        0x0034   /* SPU Only */\n-#define MFC_PUTLF_CMD        0x0026   /* SPU Only */\n-#define MFC_PUTLB_CMD        0x0025   /* SPU Only */\n-#define MFC_PUTRLF_CMD       0x0036   /* SPU Only */\n-#define MFC_PUTRLB_CMD       0x0035   /* SPU Only */\n+#define MFC_PUTB_CMD         (MFC_PUT_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_PUTF_CMD         (MFC_PUT_CMD | MFC_FENCE_ENABLE)\n+#define MFC_PUTL_CMD         (MFC_PUT_CMD | MFC_LIST_ENABLE)\n+#define MFC_PUTLB_CMD        (MFC_PUTL_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_PUTLF_CMD        (MFC_PUTL_CMD | MFC_FENCE_ENABLE)\n+\n+#define MFC_PUTR_CMD         (MFC_PUT_CMD | MFC_RESULT_ENABLE)\n+#define MFC_PUTRB_CMD        (MFC_PUTR_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_PUTRF_CMD        (MFC_PUTR_CMD | MFC_FENCE_ENABLE)\n+#define MFC_PUTRL_CMD        (MFC_PUTR_CMD | MFC_LIST_ENABLE)\n+#define MFC_PUTRLB_CMD       (MFC_PUTRL_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_PUTRLF_CMD       (MFC_PUTRL_CMD | MFC_FENCE_ENABLE)\n \n /****************************************************************/\n /* MFC DMA Get Commands                                 */\n /****************************************************************/\n \n #define MFC_GET_CMD          0x0040\n-#define MFC_GETS_CMD         0x0048   /*  PU Only */\n-#define MFC_GETF_CMD         0x0042\n-#define MFC_GETB_CMD         0x0041\n-#define MFC_GETFS_CMD        0x004A   /*  PU Only */\n-#define MFC_GETBS_CMD        0x0049   /*  PU Only */\n-#define MFC_GETL_CMD         0x0044   /* SPU Only */\n-#define MFC_GETLF_CMD        0x0046   /* SPU Only */\n-#define MFC_GETLB_CMD        0x0045   /* SPU Only */\n+#define MFC_GETB_CMD         (MFC_GET_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_GETF_CMD         (MFC_GET_CMD | MFC_FENCE_ENABLE)\n+#define MFC_GETL_CMD         (MFC_GET_CMD | MFC_LIST_ENABLE)\n+#define MFC_GETLB_CMD        (MFC_GETL_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_GETLF_CMD        (MFC_GETL_CMD | MFC_FENCE_ENABLE)\n \n /****************************************************************/\n /* MFC Synchronization Commands                           */\n /****************************************************************/\n \n #define MFC_SNDSIG_CMD       0x00A0\n-#define MFC_SNDSIGB_CMD      0x00A1\n-#define MFC_SNDSIGF_CMD      0x00A2\n+#define MFC_SNDSIGB_CMD      (MFC_SNDSIG_CMD | MFC_BARRIER_ENABLE)\n+#define MFC_SNDSIGF_CMD      (MFC_SNDSIG_CMD | MFC_FENCE_ENABLE)\n #define MFC_BARRIER_CMD      0x00C0\n #define MFC_EIEIO_CMD        0x00C8\n #define MFC_SYNC_CMD         0x00CC\n@@ -125,10 +126,20 @@ typedef struct mfc_list_element {\n /* MFC Atomic Commands                                 */\n /****************************************************************/\n \n-#define MFC_GETLLAR_CMD      0x00D0   /* SPU Only */\n-#define MFC_PUTLLC_CMD       0x00B4   /* SPU Only */\n-#define MFC_PUTLLUC_CMD      0x00B0   /* SPU Only */\n-#define MFC_PUTQLLUC_CMD     0x00B8   /* SPU Only */\n+#define MFC_GETLLAR_CMD      0x00D0\n+#define MFC_PUTLLC_CMD       0x00B4\n+#define MFC_PUTLLUC_CMD      0x00B0\n+#define MFC_PUTQLLUC_CMD     0x00B8\n+\n+/****************************************************************/\n+/* MFC SL1 Storage Control Commands                             */\n+/****************************************************************/\n+\n+#define MFC_SDCRT_CMD        0x0080\n+#define MFC_SDCRTST_CMD      0x0081\n+#define MFC_SDCRZ_CMD        0x0089\n+#define MFC_SDCRST_CMD       0x008D\n+#define MFC_SDCRF_CMD        0x008F\n \n /****************************************************************/\n /* Channel Defines                                    */\n@@ -209,6 +220,13 @@ typedef struct mfc_list_element {\n #define mfc_eieio(tag,tid,rid) spu_mfcdma32(0,0,0,tag,MFC_CMD_WORD(tid,rid,MFC_EIEIO_CMD))\n #define mfc_sync(tag)          spu_mfcdma32(0,0,0,tag,MFC_SYNC_CMD)\n \n+/* MFC SL1 Storage Control Commands */\n+#define mfc_sdcrt(  ea,size,tag,tid,rid) spu_mfcdma64(0,mfc_ea2h(ea),mfc_ea2l(ea),size,tag,MFC_CMD_WORD(tid,rid,MFC_SDCRT_CMD))\n+#define mfc_sdcrtst(ea,size,tag,tid,rid) spu_mfcdma64(0,mfc_ea2h(ea),mfc_ea2l(ea),size,tag,MFC_CMD_WORD(tid,rid,MFC_SDCRTST_CMD))\n+#define mfc_sdcrz(  ea,size,tag,tid,rid) spu_mfcdma64(0,mfc_ea2h(ea),mfc_ea2l(ea),size,tag,MFC_CMD_WORD(tid,rid,MFC_SDCRZ_CMD))\n+#define mfc_sdcrst( ea,size,tag,tid,rid) spu_mfcdma64(0,mfc_ea2h(ea),mfc_ea2l(ea),size,tag,MFC_CMD_WORD(tid,rid,MFC_SDCRST_CMD))\n+#define mfc_sdcrf(  ea,size,tag,tid,rid) spu_mfcdma64(0,mfc_ea2h(ea),mfc_ea2l(ea),size,tag,MFC_CMD_WORD(tid,rid,MFC_SDCRF_CMD))\n+\n /* DMA Queue */\n #define mfc_stat_cmd_queue()          spu_readchcnt(MFC_Cmd)\n \n@@ -267,7 +285,7 @@ typedef struct mfc_list_element {\n #define spu_read_event_mask()         spu_readch(SPU_RdEventMask)\n \n /* SPU State Management */\n-#define spu_read_machine_status()     spu_readch(SPU_MachStat)\n+#define spu_read_machine_status()     spu_readch(SPU_RdMachStat)\n #define spu_write_srr0(srr0)          spu_writech(SPU_WrSRR0,srr0)\n #define spu_read_srr0()               spu_readch(SPU_RdSRR0)\n \n@@ -291,4 +309,8 @@ extern unsigned int __mfc_tag_release (unsigned int);\n extern unsigned int __mfc_multi_tag_reserve (unsigned int);\n extern unsigned int __mfc_multi_tag_release (unsigned int, unsigned int);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif /* __SPU_MFCIO_H__ */"}]}