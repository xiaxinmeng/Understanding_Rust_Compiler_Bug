{"sha": "ee460e75424c78db2684a8f4dec1c993b0c05758", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU0NjBlNzU0MjRjNzhkYjI2ODRhOGY0ZGVjMWM5OTNiMGMwNTc1OA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-06-16T20:21:21Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-06-16T20:21:21Z"}, "message": "re PR tree-optimization/49343 (ICE on field with variable offset)\n\n2011-06-16  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/49343\n\t* tree-sra.c (build_ref_for_model): Use component_ref_field_offset to\n\tcalculate offset, provide 2nd operand for the new COMPONENT_REF.\n\n\t* testsuite/gnat.dg/discr31.adb: New test.\n\t* testsuite/gnat.dg/discr31.ads: Likewise.\n\nFrom-SVN: r175111", "tree": {"sha": "148334680920f915f20b2a6b506202f76d398ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/148334680920f915f20b2a6b506202f76d398ff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee460e75424c78db2684a8f4dec1c993b0c05758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee460e75424c78db2684a8f4dec1c993b0c05758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee460e75424c78db2684a8f4dec1c993b0c05758", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee460e75424c78db2684a8f4dec1c993b0c05758/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a285ba2ef9a4ebdd613b12bca42576816fe6251f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a285ba2ef9a4ebdd613b12bca42576816fe6251f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a285ba2ef9a4ebdd613b12bca42576816fe6251f"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "0d04bc82e09deb0f84d8d40925a436ebc229b602", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee460e75424c78db2684a8f4dec1c993b0c05758", "patch": "@@ -1,3 +1,9 @@\n+2011-06-16  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/49343\n+\t* tree-sra.c (build_ref_for_model): Use component_ref_field_offset to\n+\tcalculate offset, provide 2nd operand for the new COMPONENT_REF.\n+\n 2011-06-16  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/darwin-protos.h (machopic_select_rtx_section): Move to"}, {"sha": "afe706ca30abecdd264c585dd422850d1d83da7e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee460e75424c78db2684a8f4dec1c993b0c05758", "patch": "@@ -1,3 +1,9 @@\n+2011-06-16  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/49343\n+\t* gnat.dg/discr31.adb: New test.\n+\t* gnat.dg/discr31.ads: Likewise.\n+\n 2011-06-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/debug/pr49032.c: Prune mips-tfile warning."}, {"sha": "0fe02cc213126b8bfb9d3d28fbe5197f2ac4c309", "filename": "gcc/testsuite/gnat.dg/discr31.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr31.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr31.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr31.adb?ref=ee460e75424c78db2684a8f4dec1c993b0c05758", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+package body Discr31 is\n+\n+   function Log_Item(Packet : in Packet_Data_Type) return Log_Item_Type is\n+      None : Log_Item_Type(0);\n+   begin\n+      return None;\n+   end;\n+\n+end Discr31;"}, {"sha": "ffc76b45943fd3f61bc485f412941ff81c44f335", "filename": "gcc/testsuite/gnat.dg/discr31.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr31.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr31.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr31.ads?ref=ee460e75424c78db2684a8f4dec1c993b0c05758", "patch": "@@ -0,0 +1,14 @@\n+package Discr31 is\n+\n+   type Byte_List_Type is array(Positive range <>) of Integer;\n+\n+   type Log_Item_Type(Last : Natural) is record\n+      Data : Byte_List_Type(1 .. Last) := (others => 0);\n+      Link : Natural := 0;\n+   end record;\n+\n+   type Packet_Data_Type is access Log_Item_Type;\n+\n+   function Log_Item(Packet : in Packet_Data_Type) return Log_Item_Type;\n+\n+end Discr31;"}, {"sha": "28eba433dad5faa80df373881b2d984c1a756845", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee460e75424c78db2684a8f4dec1c993b0c05758/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=ee460e75424c78db2684a8f4dec1c993b0c05758", "patch": "@@ -1421,12 +1421,16 @@ build_ref_for_model (location_t loc, tree base, HOST_WIDE_INT offset,\n {\n   if (TREE_CODE (model->expr) == COMPONENT_REF)\n     {\n-      tree t, exp_type;\n-      offset -= int_bit_position (TREE_OPERAND (model->expr, 1));\n+      tree t, exp_type, fld = TREE_OPERAND (model->expr, 1);\n+      tree cr_offset = component_ref_field_offset (model->expr);\n+\n+      gcc_assert (cr_offset && host_integerp (cr_offset, 1));\n+      offset -= TREE_INT_CST_LOW (cr_offset) * BITS_PER_UNIT;\n+      offset -= TREE_INT_CST_LOW (DECL_FIELD_BIT_OFFSET (fld));\n       exp_type = TREE_TYPE (TREE_OPERAND (model->expr, 0));\n       t = build_ref_for_offset (loc, base, offset, exp_type, gsi, insert_after);\n-      return fold_build3_loc (loc, COMPONENT_REF, model->type, t,\n-\t\t\t      TREE_OPERAND (model->expr, 1), NULL_TREE);\n+      return fold_build3_loc (loc, COMPONENT_REF, model->type, t, fld,\n+\t\t\t      TREE_OPERAND (model->expr, 2));\n     }\n   else\n     return build_ref_for_offset (loc, base, offset, model->type,"}]}