{"sha": "6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4NGUxNTQxYzg1ODM1YzZhYjRiOWVlOGZiNWMwNTczZGRhYWMwMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-11-04T12:23:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-11-04T12:23:39Z"}, "message": "(optimize_reg_copy_1): If P is a CALL_INSN, count it as being crossed\nby SRC since SRC used to die there.\n\nFrom-SVN: r2689", "tree": {"sha": "4f3784c723ba65488e98c6591b5a13fc63dcccc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f3784c723ba65488e98c6591b5a13fc63dcccc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00/comments", "author": null, "committer": null, "parents": [{"sha": "5145eda8f01658086322f1b52e6d9d3285c3744e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5145eda8f01658086322f1b52e6d9d3285c3744e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5145eda8f01658086322f1b52e6d9d3285c3744e"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "471bd0400da00dbfdd2cefc34fbdef745e032ea3", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=6c84e1541c85835c6ab4b9ee8fb5c0573ddaac00", "patch": "@@ -697,6 +697,12 @@ optimize_reg_copy_1 (insn, dest, src)\n \t  int n_calls = 0;\n \t  int d_n_calls = 0;\n \n+\t  /* If P is a CALL_INSN, SRC crosses one more call, since it\n+\t     used to die there.  */\n+\n+\t  if (GET_CODE (p) == CALL_INSN)\n+\t    n_calls++;\n+\n \t  /* We can do the optimization.  Scan forward from INSN again,\n \t     replacing regs as we go.  Set FAILED if a replacement can't\n \t     be done.  In that case, we can't move the death note for SRC."}]}