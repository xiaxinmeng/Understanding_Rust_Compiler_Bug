{"sha": "c39858bdb8b7abe0ef235039c69c429e666d5e63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM5ODU4YmRiOGI3YWJlMGVmMjM1MDM5YzY5YzQyOWU2NjZkNWU2Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-15T16:11:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-15T16:11:48Z"}, "message": "re PR rtl-optimization/70222 (Test miscompiled with -O1)\n\n\tPR rtl-optimization/70222\n\t* combine.c (simplify_shift_const_1): For A >> B >> C LSHIFTRT\n\toptimization if mode is different from result_mode, queue up masking\n\tof the result in outer_op.  Formatting fix.\n\n\t* gcc.c-torture/execute/pr70222-1.c: New test.\n\t* gcc.c-torture/execute/pr70222-2.c: New test.\n\nFrom-SVN: r234222", "tree": {"sha": "780aea325a716ecc198a88cd3bc011cf8ea2e921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/780aea325a716ecc198a88cd3bc011cf8ea2e921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c39858bdb8b7abe0ef235039c69c429e666d5e63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c39858bdb8b7abe0ef235039c69c429e666d5e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c39858bdb8b7abe0ef235039c69c429e666d5e63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c39858bdb8b7abe0ef235039c69c429e666d5e63/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "511e5c4889a3d6fc41547031a8c1d8ac7915508a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511e5c4889a3d6fc41547031a8c1d8ac7915508a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511e5c4889a3d6fc41547031a8c1d8ac7915508a"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "ad9e13fb043c8edbdf15c74a8ed57945e48e59d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c39858bdb8b7abe0ef235039c69c429e666d5e63", "patch": "@@ -1,5 +1,10 @@\n 2016-03-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/70222\n+\t* combine.c (simplify_shift_const_1): For A >> B >> C LSHIFTRT\n+\toptimization if mode is different from result_mode, queue up masking\n+\tof the result in outer_op.  Formatting fix.\n+\n \tPR middle-end/70239\n \t* tree-ssa-sccvn.c (VN_INFO_GET): Use safe_grow_cleared instead\n \tof safe_grow."}, {"sha": "f701f289f3fd62773fd14a6bbb2a34daa150d7d7", "filename": "gcc/combine.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c39858bdb8b7abe0ef235039c69c429e666d5e63", "patch": "@@ -10524,9 +10524,19 @@ simplify_shift_const_1 (enum rtx_code code, machine_mode result_mode,\n \t\t   && CONST_INT_P (XEXP (varop, 0))\n \t\t   && !CONST_INT_P (XEXP (varop, 1)))\n \t    {\n+\t      /* For ((unsigned) (cstULL >> count)) >> cst2 we have to make\n+\t\t sure the result will be masked.  See PR70222.  */\n+\t      if (code == LSHIFTRT\n+\t\t  && mode != result_mode\n+\t\t  && !merge_outer_ops (&outer_op, &outer_const, AND,\n+\t\t\t\t       GET_MODE_MASK (result_mode)\n+\t\t\t\t       >> orig_count, result_mode,\n+\t\t\t\t       &complement_p))\n+\t\tbreak;\n+\n \t      rtx new_rtx = simplify_const_binary_operation (code, mode,\n-\t\t\t\t\t\t\t XEXP (varop, 0),\n-\t\t\t\t\t\t\t GEN_INT (count));\n+\t\t\t\t\t\t\t     XEXP (varop, 0),\n+\t\t\t\t\t\t\t     GEN_INT (count));\n \t      varop = gen_rtx_fmt_ee (code, mode, new_rtx, XEXP (varop, 1));\n \t      count = 0;\n \t      continue;"}, {"sha": "732cb3384531de30c935646a81cdd405b76d0fc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c39858bdb8b7abe0ef235039c69c429e666d5e63", "patch": "@@ -1,3 +1,9 @@\n+2016-03-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/70222\n+\t* gcc.c-torture/execute/pr70222-1.c: New test.\n+\t* gcc.c-torture/execute/pr70222-2.c: New test.\n+\n 2016-03-15  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/tree-ssa/pr68714.c: Test during reassoc1 pass."}, {"sha": "d79672e7fb4c5efeafc38819af2ec233ea5b8625", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70222-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70222-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70222-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70222-1.c?ref=c39858bdb8b7abe0ef235039c69c429e666d5e63", "patch": "@@ -0,0 +1,30 @@\n+/* PR rtl-optimization/70222 */\n+\n+int a = 1;\n+unsigned int b = 2;\n+int c = 0;\n+int d = 0;\n+\n+void\n+foo ()\n+{\n+  int e = ((-(c >= c)) < b) > ((int) (-1ULL >> ((a / a) * 15)));\n+  d = -e;\n+}\n+\n+__attribute__((noinline, noclone)) void\n+bar (int x)\n+{\n+  if (x != -1)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+#if __CHAR_BIT__ == 8 && __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8\n+  foo ();\n+  bar (d);\n+#endif\n+  return 0;\n+}"}, {"sha": "7611c986a9b752c5a25bd88081a7b9ba034fdf95", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70222-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70222-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39858bdb8b7abe0ef235039c69c429e666d5e63/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70222-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70222-2.c?ref=c39858bdb8b7abe0ef235039c69c429e666d5e63", "patch": "@@ -0,0 +1,20 @@\n+/* PR rtl-optimization/70222 */\n+\n+#if __CHAR_BIT__ == 8 && __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8\n+__attribute__((noinline, noclone)) unsigned int\n+foo (int x)\n+{\n+  unsigned long long y = -1ULL >> x;\n+  return (unsigned int) y >> 31;\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+#if __CHAR_BIT__ == 8 && __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8\n+  if (foo (15) != 1 || foo (32) != 1 || foo (33) != 0)\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}]}