{"sha": "96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZkOWIyMmMwYmExOWEyMTc3ZmU3ZDI1NGNiM2E3ZTVmYTQ5NDYzZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-02-12T21:34:11Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-02-12T21:34:11Z"}, "message": "class.c (gfc_build_class_symbol): Reject polymorphic arrays.\n\n2011-02-12  Janus Weil  <janus@gcc.gnu.org>\n\n\t* class.c (gfc_build_class_symbol): Reject polymorphic arrays.\n\t* decl.c (build_sym,build_struct,attr_decl1): Use return value of\n\t'gfc_build_class_symbol'.\n\n\n2011-02-12  Janus Weil  <janus@gcc.gnu.org>\n\n\t* gfortran.dg/allocate_derived_1.f90: Modified as polymorphic arrays\n\tare temporarily disabled.\n\t* gfortran.dg/class_7.f03: Ditto.\n\t* gfortran.dg/coarray_14.f90: Ditto.\n\t* gfortran.dg/typebound_proc_13.f03: Ditto.\n\nFrom-SVN: r170092", "tree": {"sha": "1f3c46a16af849afee31b6d349f3b132ad36634f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f3c46a16af849afee31b6d349f3b132ad36634f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a016dc83ecbbcd3deb7b23b6b8dad86475c1a831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a016dc83ecbbcd3deb7b23b6b8dad86475c1a831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a016dc83ecbbcd3deb7b23b6b8dad86475c1a831"}], "stats": {"total": 74, "additions": 50, "deletions": 24}, "files": [{"sha": "e3b545f904df8258e525fc431b2d559dc135f528", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -1,3 +1,9 @@\n+2011-02-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\t* class.c (gfc_build_class_symbol): Reject polymorphic arrays.\n+\t* decl.c (build_sym,build_struct,attr_decl1): Use return value of\n+\t'gfc_build_class_symbol'.\n+\n 2011-02-12  Michael Matz  <matz@suse.de>\n \t    Janus Weil  <janus@gcc.gnu.org>\n \t    Tobias Burnus  <burnus@net-b.de>"}, {"sha": "7c8babef7e30044957f9e20c50b79c49b6bfb097", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -184,6 +184,12 @@ gfc_build_class_symbol (gfc_typespec *ts, symbol_attribute *attr,\n   gfc_symbol *vtab;\n   gfc_component *c;\n \n+  if (*as)\n+    {\n+      gfc_error (\"Polymorphic array at %C not yet supported\");\n+      return FAILURE;\n+    }\n+\n   /* Determine the name of the encapsulating type.  */\n   get_unique_hashed_string (tname, ts->u.derived);\n   if ((*as) && (*as)->rank && attr->allocatable)"}, {"sha": "9712ea2aa09695b2e338241722b976d1a8ef7d68", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -1180,7 +1180,7 @@ build_sym (const char *name, gfc_charlen *cl, bool cl_deferred,\n   if (sym->ts.type == BT_CLASS\n       && (sym->attr.class_ok = sym->attr.dummy || sym->attr.pointer\n \t\t\t       || sym->attr.allocatable))\n-    gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false);\n+    return gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false);\n \n   return SUCCESS;\n }\n@@ -1639,10 +1639,9 @@ build_struct (const char *name, gfc_charlen *cl, gfc_expr **init,\n       bool delayed = (gfc_state_stack->sym == c->ts.u.derived)\n \t\t     || (!c->ts.u.derived->components\n \t\t\t && !c->ts.u.derived->attr.zero_comp);\n-      gfc_build_class_symbol (&c->ts, &c->attr, &c->as, delayed);\n+      return gfc_build_class_symbol (&c->ts, &c->attr, &c->as, delayed);\n     }\n \n-\n   return t;\n }\n \n@@ -6048,8 +6047,12 @@ attr_decl1 (void)\n     \n   if (sym->ts.type == BT_CLASS && !sym->attr.class_ok\n       && (sym->attr.class_ok = sym->attr.class_ok || current_attr.allocatable\n-\t\t\t       || current_attr.pointer))\n-    gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false);\n+\t\t\t       || current_attr.pointer)\n+      && gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false) == FAILURE)\n+    {\n+      m = MATCH_ERROR;\n+      goto cleanup;\n+    }\n \n   if (gfc_set_array_spec (sym, as, &var_locus) == FAILURE)\n     {"}, {"sha": "db4c7acf564783a20039779c67c1ad566dce482e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -1,3 +1,11 @@\n+2011-02-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\t* gfortran.dg/allocate_derived_1.f90: Modified as polymorphic arrays\n+\tare temporarily disabled.\n+\t* gfortran.dg/class_7.f03: Ditto.\n+\t* gfortran.dg/coarray_14.f90: Ditto.\n+\t* gfortran.dg/typebound_proc_13.f03: Ditto.\n+\n 2011-02-12  Mikael Morin  <mikael.morin@sfr.fr>\n \n \tPR fortran/45586"}, {"sha": "648012431acf244a2ff09af9d4a4b43c3deada1f", "filename": "gcc/testsuite/gfortran.dg/allocate_derived_1.f90", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_1.f90?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -24,27 +24,28 @@\n   real :: r\n  end type\n \n- class(t1),dimension(:),allocatable :: x\n+! FIXME: uncomment and dejagnuify the lines below once class arrays are enabled\n+!  class(t1),dimension(:),allocatable :: x\n  type(t2),dimension(:),allocatable :: y\n- class(t3),dimension(:),allocatable :: z\n+!  class(t3),dimension(:),allocatable :: z\n \n- allocate(      x(1))\n- allocate(t1 :: x(2))\n- allocate(t2 :: x(3))\n- allocate(t3 :: x(4))\n- allocate(tx :: x(5))  ! { dg-error \"Error in type-spec at\" }\n- allocate(u0 :: x(6))  ! { dg-error \"may not be ABSTRACT\" }\n- allocate(v1 :: x(7))  ! { dg-error \"is type incompatible with typespec\" }\n+!  allocate(      x(1))\n+!  allocate(t1 :: x(2))\n+!  allocate(t2 :: x(3))\n+!  allocate(t3 :: x(4))\n+!  allocate(tx :: x(5))  ! { \"Error in type-spec at\" }\n+!  allocate(u0 :: x(6))  ! { \"may not be ABSTRACT\" }\n+!  allocate(v1 :: x(7))  ! { \"is type incompatible with typespec\" }\n \n  allocate(      y(1))\n  allocate(t1 :: y(2))  ! { dg-error \"is type incompatible with typespec\" }\n  allocate(t2 :: y(3))\n  allocate(t3 :: y(3))  ! { dg-error \"is type incompatible with typespec\" }\n \n- allocate(      z(1))\n- allocate(t1 :: z(2))  ! { dg-error \"is type incompatible with typespec\" }\n- allocate(t2 :: z(3))  ! { dg-error \"is type incompatible with typespec\" }\n- allocate(t3 :: z(4))\n+!  allocate(      z(1))\n+!  allocate(t1 :: z(2))  ! { \"is type incompatible with typespec\" }\n+!  allocate(t2 :: z(3))  ! { \"is type incompatible with typespec\" }\n+!  allocate(t3 :: z(4))\n \n end\n "}, {"sha": "d7f1c835ef4272546dc3b0c123891402ba1ec89b", "filename": "gcc/testsuite/gfortran.dg/class_7.f03", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_7.f03?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -9,7 +9,8 @@\n   end type t0\n   type t\n     integer :: i\n-    class(t0), allocatable :: foo(3)  ! { dg-error \"deferred shape\" }\n+! FIXME: uncomment and dejagnuify once class arrays are enabled\n+!    class(t0), allocatable :: foo(3)  ! { \"deferred shape\" }\n   end type t\n \n ! PR41608: Would ICE on missing type decl"}, {"sha": "3e3f0462b301cee3fcea64b89f8c8b1bf96a37cf", "filename": "gcc/testsuite/gfortran.dg/coarray_14.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_14.f90?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -47,7 +47,7 @@ end subroutine test\n program myTest\n type t\n end type t\n-class(t), allocatable :: a[:]\n+type(t), allocatable :: a[:]\n  allocate (t :: a) ! { dg-error \"Coarray specification required in ALLOCATE statement\" }\n allocate (t :: a[*]) ! { dg-error \"allocatable scalar coarrays are not yet supported\" }\n end program myTest"}, {"sha": "62054b6fa3fa69b33a3e8739591f6d2b92c5529f", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_13.f03", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_13.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_13.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_13.f03?ref=96d9b22c0ba19a2177fe7d254cb3a7e5fa49463f", "patch": "@@ -16,7 +16,8 @@ MODULE m\n \n   TYPE t2\n   CONTAINS\n-    PROCEDURE, PASS :: nonscalar ! { dg-error \"must be scalar\" }\n+! FIXME: uncomment and dejagnuify once class arrays are enabled\n+!    PROCEDURE, PASS :: nonscalar ! { \"must be scalar\" }\n     PROCEDURE, PASS :: is_pointer ! { dg-error \"must not be POINTER\" }\n     PROCEDURE, PASS :: is_allocatable ! { dg-error \"must not be ALLOCATABLE\" }\n   END TYPE t2\n@@ -26,9 +27,9 @@ MODULE m\n   SUBROUTINE myproc ()\n   END SUBROUTINE myproc\n \n-  SUBROUTINE nonscalar (me)\n-    CLASS(t2), INTENT(IN) :: me(:)\n-  END SUBROUTINE nonscalar\n+!  SUBROUTINE nonscalar (me)\n+!    CLASS(t2), INTENT(IN) :: me(:)\n+!  END SUBROUTINE nonscalar\n \n   SUBROUTINE is_pointer (me)\n     CLASS(t2), POINTER, INTENT(IN) :: me"}]}