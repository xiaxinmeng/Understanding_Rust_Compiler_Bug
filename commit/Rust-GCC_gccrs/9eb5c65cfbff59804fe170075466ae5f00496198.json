{"sha": "9eb5c65cfbff59804fe170075466ae5f00496198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWViNWM2NWNmYmZmNTk4MDRmZTE3MDA3NTQ2NmFlNWYwMDQ5NjE5OA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-07-10T00:36:20Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-07-10T00:36:20Z"}, "message": "c_kind_tests_2.f03: clean-up leftover module(s).\n\n2009-07-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* gfortran.dg/c_kind_tests_2.f03: clean-up leftover module(s).\n\t* gfortran.dg/module_equivalence_6.f90: Ditto.\n\t* gfortran.dg/alloc_comp_auto_array_2.f90: Ditto.\n\t* gfortran.dg/nan_2.f90: Ditto.\n\t* gfortran.dg/inquire_11.f90: Ditto.\n\t* gfortran.dg/abstract_type_3.f03: Ditto.\n\t* gfortran.dg/abstract_type_1.f90: Ditto.\n\t* gfortran.dg/private_type_9.f90: Ditto.\n\t* gfortran.dg/abstract_type_5.f03: Ditto.\n\t* gfortran.dg/elemental_subroutine_6.f90: Ditto.\n\t* gfortran.dg/derived_comp_array_ref_3.f90: Ditto.\n\t* gfortran.dg/derived_sub.f90: Ditto.\n\t* gfortran.dg/missing_optional_dummy_5.f90: Ditto.\n\t* gfortran.dg/bounds_check_fail_2.f90: Ditto.\n\t* gfortran.dg/maxloc_bounds_6.f90: Ditto.\n\t* gfortran.dg/mvbits_6.f90: Ditto.\n\t* gfortran.dg/abstract_type_2.f03: Ditto.\n\t* gfortran.dg/abstract_type_4.f03: Ditto.\n\t* gfortran.dg/bounds_check_9.f90: Ditto.\n\t* gfortran.dg/optional_dim_3.f90: Ditto.\n\t* gfortran.dg/pr32921.f: Ditto.\n\t* gfortran.dg/entry_16.f90: Ditto.\n\t* gfortran.dg/generic_16.f90: Ditto.\n\nFrom-SVN: r149454", "tree": {"sha": "d405c7e284f1a5cd6230e87fee5369fafdd01aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d405c7e284f1a5cd6230e87fee5369fafdd01aa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9eb5c65cfbff59804fe170075466ae5f00496198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eb5c65cfbff59804fe170075466ae5f00496198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eb5c65cfbff59804fe170075466ae5f00496198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eb5c65cfbff59804fe170075466ae5f00496198/comments", "author": null, "committer": null, "parents": [{"sha": "06c43499b3210be5c7df5b014e26b254fd6a8bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c43499b3210be5c7df5b014e26b254fd6a8bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06c43499b3210be5c7df5b014e26b254fd6a8bc0"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "333544c0fd109b3e8a36455769b058349a37209e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -1,3 +1,30 @@\n+2009-07-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/c_kind_tests_2.f03: clean-up leftover module(s).\n+\t* gfortran.dg/module_equivalence_6.f90: Ditto.\n+\t* gfortran.dg/alloc_comp_auto_array_2.f90: Ditto.\n+\t* gfortran.dg/nan_2.f90: Ditto.\n+\t* gfortran.dg/inquire_11.f90: Ditto.\n+\t* gfortran.dg/abstract_type_3.f03: Ditto.\n+\t* gfortran.dg/abstract_type_1.f90: Ditto.\n+\t* gfortran.dg/private_type_9.f90: Ditto.\n+\t* gfortran.dg/abstract_type_5.f03: Ditto.\n+\t* gfortran.dg/elemental_subroutine_6.f90: Ditto.\n+\t* gfortran.dg/derived_comp_array_ref_3.f90: Ditto.\n+\t* gfortran.dg/derived_sub.f90: Ditto.\n+\t* gfortran.dg/missing_optional_dummy_5.f90: Ditto.\n+\t* gfortran.dg/bounds_check_fail_2.f90: Ditto.\n+\t* gfortran.dg/maxloc_bounds_6.f90: Ditto.\n+\t* gfortran.dg/mvbits_6.f90: Ditto.\n+\t* gfortran.dg/abstract_type_2.f03: Ditto.\n+\t* gfortran.dg/abstract_type_4.f03: Ditto.\n+\t* gfortran.dg/bounds_check_9.f90: Ditto.\n+\t* gfortran.dg/optional_dim_3.f90: Ditto.\n+\t* gfortran.dg/pr32921.f: Ditto.\n+\t* gfortran.dg/entry_16.f90: Ditto.\n+\t* gfortran.dg/generic_16.f90: Ditto.\n+\n+\n 2009-07-09  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* gcc.target/m68k/20090709-1.c: New."}, {"sha": "7a91e11a89c22242b78fcaf8a32995fbb3014a43", "filename": "gcc/testsuite/gfortran.dg/abstract_type_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_1.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -11,3 +11,4 @@ MODULE m\n   END TYPE t ! { dg-error \"END MODULE\" }\n \n END MODULE m\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "9b4ddebe40a1de806daa776f15696aa03701b510", "filename": "gcc/testsuite/gfortran.dg/abstract_type_2.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_2.f03?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -11,3 +11,4 @@ MODULE m\n   END TYPE error_t ! { dg-error \"END MODULE\" }\n \n END MODULE m\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "a6f06235d24e440c38a653087bbb4349b47aeca7", "filename": "gcc/testsuite/gfortran.dg/abstract_type_3.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_3.f03?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -49,3 +49,4 @@ SUBROUTINE impl ()\n   END SUBROUTINE impl\n \n END MODULE m\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "bc34d4e541f7ab311c70a770a712ce735a2cee44", "filename": "gcc/testsuite/gfortran.dg/abstract_type_4.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_4.f03?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -26,3 +26,4 @@ PROGRAM main\n   ! See if constructing the extending type works.\n   conc = concrete_t (1, 2)\n END PROGRAM main\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "7da38e8fed7b7151bd76755c5a0c13e4ea58edd5", "filename": "gcc/testsuite/gfortran.dg/abstract_type_5.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_5.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_5.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_5.f03?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -43,3 +43,4 @@ SUBROUTINE test ()\n   END SUBROUTINE test\n \n END MODULE m\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "c8945cfc37516c8dba9c367ae22c161001163e20", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_auto_array_2.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_auto_array_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_auto_array_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_auto_array_2.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -38,3 +38,4 @@ end module grid_io\n   call read_grid_header\n end\n ! { dg-final { cleanup-tree-dump \"grid_io\" } }\n+! { dg-final { cleanup-modules \"grid_io\" } }"}, {"sha": "3b487efa146cc6c0551cf3a8a13d2076682f4154", "filename": "gcc/testsuite/gfortran.dg/bounds_check_9.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_9.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -34,3 +34,4 @@ program main\n   call sub()\n   call sub((/4,5/))\n end program main\n+! { dg-final { cleanup-modules \"sub_mod\" } }"}, {"sha": "d79272b3876e8bd39a7045928dff2bd35164bd7a", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_2.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_2.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -37,3 +37,4 @@ program main\n   call sub((/4/))\n end program main\n ! { dg-output \"Fortran runtime error: Array bound mismatch\" }\n+! { dg-final { cleanup-modules \"sub_mod\" } }"}, {"sha": "a8cdbdff50c431389a6e7b2452f5f6eee0a5fbdc", "filename": "gcc/testsuite/gfortran.dg/c_kind_tests_2.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_kind_tests_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_kind_tests_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_kind_tests_2.f03?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -12,3 +12,4 @@ module c_kind_tests_2\n   real(myI), bind(c) :: myCFloat2 ! { dg-warning \"is for type INTEGER\" }\n   real(4), bind(c) :: myFloat     ! { dg-warning \"may not be a C interoperable\" }\n end module c_kind_tests_2\n+! { dg-final { cleanup-modules \"c_kind_tests_2\" } }"}, {"sha": "7a0b77ea802b545804abf03a066a63df5da813a4", "filename": "gcc/testsuite/gfortran.dg/derived_comp_array_ref_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_comp_array_ref_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_comp_array_ref_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_comp_array_ref_3.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -26,4 +26,4 @@ END MODULE cdf_nc_chisq_mod\n   use cdf_nc_chisq_mod\n   call local_cum_nc_chisq\n end\n-! { dg-final { cleanup-modules \"cdf_aux_mod cdf_beta_mod\" } }\n+! { dg-final { cleanup-modules \"cdf_nc_chisq_mod\" } }"}, {"sha": "9b6624579c2d606a737a6c582d588f11248a0e23", "filename": "gcc/testsuite/gfortran.dg/derived_sub.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_sub.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_sub.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_sub.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -31,3 +31,4 @@ subroutine subthree(mytype_cur)\n   end subroutine \n \n end module\n+! { dg-final { cleanup-modules \"modone modtwo\" } }"}, {"sha": "44577c888b79444f8ca89397f08aa26603ea020d", "filename": "gcc/testsuite/gfortran.dg/elemental_subroutine_6.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_6.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -21,4 +21,5 @@ SUBROUTINE my_sub (in, out)\n     ALLOCATE( out(1:42, 1:42) )\n     out(1, 1:42) = in(1, 1:42)\n   END SUBROUTINE\n-END MODULE foo\n\\ No newline at end of file\n+END MODULE foo\n+! { dg-final { cleanup-modules \"foo\" } }"}, {"sha": "384d99fd72c380e239d0f2fa0aa35a5b2da235a1", "filename": "gcc/testsuite/gfortran.dg/entry_16.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_16.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -41,3 +41,4 @@ END MODULE complex\n   if (.not.((a + b) .eq. (b + a))) call abort ()\n   if (.not.((a + b) .eq. cx (4, 2))) call abort ()\n end\n+! { dg-final { cleanup-modules \"complex\" } }"}, {"sha": "501e146bcc1d1f6da2fd47e0e23120ff1a4c7cd4", "filename": "gcc/testsuite/gfortran.dg/generic_16.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_16.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -32,3 +32,4 @@ PROGRAM main\n   REAL(kind=dp) :: rawData(2), data, work(3)\n   data = median(rawData, work) ! { dg-error \"no specific function\" }\n END PROGRAM main\n+! { dg-final { cleanup-modules \"auxiliary\" } }"}, {"sha": "cc5e26d0908ae98f15b90e176a21b9d92adb850e", "filename": "gcc/testsuite/gfortran.dg/inquire_11.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_11.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -8,3 +8,4 @@ SUBROUTINE i()\n     INQUIRE (UNIT=1, EXIST=qexist)\n   END SUBROUTINE i\n END MODULE print_it\n+! { dg-final { cleanup-modules \"print_it\" } }"}, {"sha": "3a63418aef35be591f037eda588d673793dba459", "filename": "gcc/testsuite/gfortran.dg/maxloc_bounds_6.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxloc_bounds_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxloc_bounds_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxloc_bounds_6.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -13,4 +13,3 @@ program main\n   write(line,fmt='(80I1)') res\n end program main\n ! { dg-output \"Fortran runtime error: Incorrect extent in MASK argument of MAXLOC intrinsic in dimension 2: is 3, should be 2\" }\n-! { dg-final { cleanup-modules \"tst\" } }"}, {"sha": "4ad399e8a98cef94ec15ba707af72c73491eb6d8", "filename": "gcc/testsuite/gfortran.dg/missing_optional_dummy_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_5.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -25,5 +25,5 @@ end module krmod\n \n ! { dg-final { scan-tree-dump \" tm_doit \\\\(&parm.\\(6|7\\), 0B, 0\\\\);\" \"original\" } }\n ! { dg-final { cleanup-tree-dump \"original\" } }\n-! { dg-final { cleanup-modules \"pr22146\" } }\n+! { dg-final { cleanup-modules \"krmod\" } }\n "}, {"sha": "c33a2caa3d13e8844e2c7289237237a45b251d29", "filename": "gcc/testsuite/gfortran.dg/module_equivalence_6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_equivalence_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_equivalence_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_equivalence_6.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -19,4 +19,4 @@ PROGRAM fortranlibtest\n   INTEGER :: ii\n   ii = H5P_DEFAULT_F \n END PROGRAM fortranlibtest\n-! { dg-final { cleanup-modules \"H5GLOBAL HD5\" } }\n+! { dg-final { cleanup-modules \"H5GLOBAL HDF5\" } }"}, {"sha": "56ceacc5ec8e366bfead3d600b1f6409a1819df2", "filename": "gcc/testsuite/gfortran.dg/mvbits_6.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmvbits_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fmvbits_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmvbits_6.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -31,3 +31,4 @@ program try_yg0009\n       call yg0009(tda2l,4,3,1,-1,-4,-3)\n \n       end\n+! { dg-final { cleanup-modules \"yg0009_stuff\" } }"}, {"sha": "5882fa0888e214b0620bb23c0e1823294deb634e", "filename": "gcc/testsuite/gfortran.dg/nan_2.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fnan_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fnan_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnan_2.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -105,3 +105,4 @@ program test\n   if (isinf(max(-large, -inf, nan))) call abort\n \n end program test\n+! { dg-final { cleanup-modules \"aux2\" } }"}, {"sha": "45099a30735df54bc96405ecf2c002a5089deac1", "filename": "gcc/testsuite/gfortran.dg/optional_dim_3.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Foptional_dim_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Foptional_dim_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foptional_dim_3.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -50,3 +50,4 @@ program main\n   call sub(bound=.false., dimmy=1_8)\n   call sub()\n end program main\n+! { dg-final { cleanup-modules \"tst_foo\" } }"}, {"sha": "42bb986ada02e48d06fd0df58d76adf8a4a7dc43", "filename": "gcc/testsuite/gfortran.dg/pr32921.f", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr32921.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr32921.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr32921.f?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -47,3 +47,4 @@ SUBROUTINE EXTRAPI()\n       END\n ! { dg-final { scan-tree-dump-times \"stride\" 4 \"lim\" } }\n ! { dg-final { cleanup-tree-dump \"lim\" } }\n+! { dg-final { cleanup-modules \"LES3D_DATA\" } }"}, {"sha": "3ca2fd5fb0f005054c7862fb47db3ea95346811f", "filename": "gcc/testsuite/gfortran.dg/private_type_9.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eb5c65cfbff59804fe170075466ae5f00496198/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_9.f90?ref=9eb5c65cfbff59804fe170075466ae5f00496198", "patch": "@@ -39,3 +39,4 @@ module m4\n end module m4\n \n end\n+! { dg-final { cleanup-modules \"m1 m2 m3 m4\" } }"}]}