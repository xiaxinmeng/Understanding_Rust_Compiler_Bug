{"sha": "1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU2MWFkNzRjMTVkZGY5YzNkMjRlODI2ZmYyODBmNWZhMWQwMGFlMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-04-17T02:29:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-04-17T02:29:51Z"}, "message": "re PR c++/38543 ([C++0x] Cannot specialize variadic template function)\n\n\tPR c++/38543\n\t* pt.c (determine_specialization): Instead of comparing the number\n\tof parms, check that tsubst gives the right answer.\n\nFrom-SVN: r186522", "tree": {"sha": "4990fd45ccbd69512a85642e2703881236066217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4990fd45ccbd69512a85642e2703881236066217"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54aa834f49ab0e8855400d7d9ed513bf666ecb24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54aa834f49ab0e8855400d7d9ed513bf666ecb24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54aa834f49ab0e8855400d7d9ed513bf666ecb24"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "8746c642351cebe091d53347d6483599690d9170", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "patch": "@@ -1,5 +1,9 @@\n 2012-04-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/38543\n+\t* pt.c (determine_specialization): Instead of comparing the number\n+\tof parms, check that tsubst gives the right answer.\n+\n \tPR c++/52008\n \t* pt.c (process_partial_specialization): Complain about a partial\n \tspecialization with fewer args than primary template parms."}, {"sha": "0ca6993b701b8800d14ec6da5c00641d2ee27313", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "patch": "@@ -1839,6 +1839,7 @@ determine_specialization (tree template_id,\n \t{\n \t  tree decl_arg_types;\n \t  tree fn_arg_types;\n+\t  tree insttype;\n \n \t  /* In case of explicit specialization, we need to check if\n \t     the number of template headers appearing in the specialization\n@@ -1900,15 +1901,6 @@ determine_specialization (tree template_id,\n \t  fn_arg_types \n \t    = skip_artificial_parms_for (fn, fn_arg_types);\n \n-\t  /* Check that the number of function parameters matches.\n-\t     For example,\n-\t       template <class T> void f(int i = 0);\n-\t       template <> void f<int>();\n-\t     The specialization f<int> is invalid but is not caught\n-\t     by get_bindings below.  */\n-\t  if (list_length (fn_arg_types) != list_length (decl_arg_types))\n-\t    continue;\n-\n \t  /* Function templates cannot be specializations; there are\n \t     no partial specializations of functions.  Therefore, if\n \t     the type of DECL does not match FN, there is no\n@@ -1929,6 +1921,15 @@ determine_specialization (tree template_id,\n \t       specialize TMPL will produce DECL.  */\n \t    continue;\n \n+\t  /* Make sure that the deduced arguments actually work.  */\n+\t  insttype = tsubst (TREE_TYPE (fn), targs, tf_none, NULL_TREE);\n+\t  if (insttype == error_mark_node)\n+\t    continue;\n+\t  fn_arg_types\n+\t    = skip_artificial_parms_for (fn, TYPE_ARG_TYPES (insttype));\n+\t  if (!compparms (fn_arg_types, decl_arg_types))\n+\t    continue;\n+\n \t  /* Save this template, and the arguments deduced.  */\n \t  templates = tree_cons (targs, fn, templates);\n \t}"}, {"sha": "0b6fcf503177d716eeaa8355a6a8e3cfcadeda19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "patch": "@@ -1,5 +1,8 @@\n 2012-04-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/38543\n+\t* g++.dg/cpp0x/variadic131.C: New.\n+\n \tPR c++/52008\n \t* g++.dg/cpp0x/variadic130.C: New.\n "}, {"sha": "3006f87ed23502060d11cae0b0440aff22d0ce78", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic131.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic131.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic131.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic131.C?ref=1561ad74c15ddf9c3d24e826ff280f5fa1d00ae2", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/38543\n+// { dg-do compile { target c++11 } }\n+\n+template< typename ... T > void foo( T ... args );\n+template<> void foo( ){}\n+template<> void foo(int,double){}\n+int main()\n+{\n+  foo( 0, 0.0 );\n+  return 55;\n+}"}]}