{"sha": "89b5a316cffa4a9fa2504e776a4cdc2ef492f00b", "node_id": "C_kwDOANBUbNoAKDg5YjVhMzE2Y2ZmYTRhOWZhMjUwNGU3NzZhNGNkYzJlZjQ5MmYwMGI", "commit": {"author": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2022-09-30T22:59:24Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2022-09-30T23:04:43Z"}, "message": "Minor cleanup/prep in DOM\n\nIt's a bit weird that free_dom_edge_info leaves a dangling pointer in e->aux.\nNot sure what I was thinking.\n\nThere's two callers.  One wipes e->aux immediately after the call, the other\nattaches a newly created object immediately after the call.  So we can wipe\ne->aux within the call and simplify one of the two call sites.\n\nThis is preparatory work for a minor optimization where we want to detect\nanother class of edge equivalences in DOM (until something better is available)\nand either attach them an existing edge_info structure or create a new one if\none doesn't currently exist for a given edge.\n\ngcc/\n\t* tree-ssa-dom.cc (free_dom_edge_info): Clear e->aux too.\n\t(free_all_edge_infos): Do not clear e->aux here.", "tree": {"sha": "11aaa758cde1a97e7f97281ba1bfa3843f4e5619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11aaa758cde1a97e7f97281ba1bfa3843f4e5619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b5a316cffa4a9fa2504e776a4cdc2ef492f00b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b5a316cffa4a9fa2504e776a4cdc2ef492f00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b5a316cffa4a9fa2504e776a4cdc2ef492f00b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b5a316cffa4a9fa2504e776a4cdc2ef492f00b/comments", "author": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2002c54cb7f183c27ad7a5c294b868930cea17db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2002c54cb7f183c27ad7a5c294b868930cea17db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2002c54cb7f183c27ad7a5c294b868930cea17db"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "fa43dbe6c44dbbd51b5e010e7153a2ad3ac14ae4", "filename": "gcc/tree-ssa-dom.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b5a316cffa4a9fa2504e776a4cdc2ef492f00b/gcc%2Ftree-ssa-dom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b5a316cffa4a9fa2504e776a4cdc2ef492f00b/gcc%2Ftree-ssa-dom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.cc?ref=89b5a316cffa4a9fa2504e776a4cdc2ef492f00b", "patch": "@@ -393,7 +393,8 @@ edge_info::record_simple_equiv (tree lhs, tree rhs)\n     simple_equivalences.safe_push (equiv_pair (lhs, rhs));\n }\n \n-/* Free the edge_info data attached to E, if it exists.  */\n+/* Free the edge_info data attached to E, if it exists and\n+   clear e->aux.  */\n \n void\n free_dom_edge_info (edge e)\n@@ -402,6 +403,7 @@ free_dom_edge_info (edge e)\n \n   if (edge_info)\n     delete edge_info;\n+  e->aux = NULL;\n }\n \n /* Free all EDGE_INFO structures associated with edges in the CFG.\n@@ -420,10 +422,7 @@ free_all_edge_infos (void)\n   FOR_EACH_BB_FN (bb, cfun)\n     {\n       FOR_EACH_EDGE (e, ei, bb->preds)\n-        {\n-\t  free_dom_edge_info (e);\n-\t  e->aux = NULL;\n-\t}\n+\tfree_dom_edge_info (e);\n     }\n }\n "}]}