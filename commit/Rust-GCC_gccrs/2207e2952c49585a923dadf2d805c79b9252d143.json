{"sha": "2207e2952c49585a923dadf2d805c79b9252d143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwN2UyOTUyYzQ5NTg1YTkyM2RhZGYyZDgwNWM3OWI5MjUyZDE0Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-10T16:31:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-10T16:31:17Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r954", "tree": {"sha": "1805edb766f1f9d677ab03c881bf2e1ac1c48ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1805edb766f1f9d677ab03c881bf2e1ac1c48ea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2207e2952c49585a923dadf2d805c79b9252d143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2207e2952c49585a923dadf2d805c79b9252d143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2207e2952c49585a923dadf2d805c79b9252d143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2207e2952c49585a923dadf2d805c79b9252d143/comments", "author": null, "committer": null, "parents": [{"sha": "7bb0943f9cd7d9c7f056671ec8331b0ea7e98c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bb0943f9cd7d9c7f056671ec8331b0ea7e98c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bb0943f9cd7d9c7f056671ec8331b0ea7e98c94"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "e55b2bd7046d7d5fa370002cb714baf23a5e2bf9", "filename": "gcc/stmt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2207e2952c49585a923dadf2d805c79b9252d143/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2207e2952c49585a923dadf2d805c79b9252d143/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=2207e2952c49585a923dadf2d805c79b9252d143", "patch": "@@ -2799,6 +2799,13 @@ expand_decl (decl)\n       /* Reference the variable indirect through that rtx.  */\n       DECL_RTL (decl) = gen_rtx (MEM, DECL_MODE (decl), address);\n \n+      /* If this is a memory ref that contains aggregate components,\n+\t mark it as such for cse and loop optimize.  */\n+      MEM_IN_STRUCT_P (DECL_RTL (decl))\n+\t= (TREE_CODE (TREE_TYPE (decl)) == ARRAY_TYPE\n+\t   || TREE_CODE (TREE_TYPE (decl)) == RECORD_TYPE\n+\t   || TREE_CODE (TREE_TYPE (decl)) == UNION_TYPE);\n+\n       /* Indicate the alignment we actually gave this variable.  */\n #ifdef STACK_BOUNDARY\n       DECL_ALIGN (decl) = STACK_BOUNDARY;"}]}