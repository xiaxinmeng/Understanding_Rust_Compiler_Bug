{"sha": "857458c409cd870d092ac3b9a37df21da4fd554e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU3NDU4YzQwOWNkODcwZDA5MmFjM2I5YTM3ZGYyMWRhNGZkNTU0ZQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-06-29T19:43:25Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-06-29T19:43:25Z"}, "message": "sparc.h (CPP_SPEC): Split up v9/non-v9 stuff.\n\n\t* sparc/sparc.h\t(CPP_SPEC): Split up v9/non-v9 stuff.\n\tMove -Acpu and -Amachine from here.\n\t(CPP_PREDEFINES): To here.\n\t(NO_BUILTIN_PTRDIFF_TYPE): Undefine.\n\t(NO_BUILTIN_SIZE_TYPE): Likewise.\n\t(PTRDIFF_TYPE): Split up v9/non-v9 definitions.\n\t(SIZE_TYPE): Likewise.\n\nFrom-SVN: r7601", "tree": {"sha": "28b382b4f66d829ddfc1ea7de8c30de91ac59a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28b382b4f66d829ddfc1ea7de8c30de91ac59a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/857458c409cd870d092ac3b9a37df21da4fd554e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857458c409cd870d092ac3b9a37df21da4fd554e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/857458c409cd870d092ac3b9a37df21da4fd554e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857458c409cd870d092ac3b9a37df21da4fd554e/comments", "author": null, "committer": null, "parents": [{"sha": "d52a8965947c9bdc29a607f14561b7e8513b7af1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d52a8965947c9bdc29a607f14561b7e8513b7af1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d52a8965947c9bdc29a607f14561b7e8513b7af1"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "c9339c2cef99f930a0c33daeab8fd7d5b9270cbc", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857458c409cd870d092ac3b9a37df21da4fd554e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857458c409cd870d092ac3b9a37df21da4fd554e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=857458c409cd870d092ac3b9a37df21da4fd554e", "patch": "@@ -57,7 +57,7 @@ extern enum arch_type sparc_arch_type;\n #else\n #define CPP_PREDEFINES \\\n   \"-Dsparc -Dsun -Dunix -D__GCC_NEW_VARARGS__ \\\n-   -Asystem(unix) -Asystem(bsd)\"\n+   -Asystem(unix) -Asystem(bsd) -Acpu(sparc) -Amachine(sparc)\"\n #endif\n \n #define LIB_SPEC \"%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p} %{g:-lg}\"\n@@ -72,34 +72,35 @@ extern enum arch_type sparc_arch_type;\n #define ASM_SPEC \" %| %{!pg:%{!p:%{fpic:-k} %{fPIC:-k}}}\"\n \n /* Define macros to distinguish architectures.  */\n+\n+#ifdef SPARCV9\n+#define CPP_SPEC \"\\\n+%{mint64:-D__INT_MAX__=9223372036854775807LL -D__LONG_MAX__=9223372036854775807LL} \\\n+%{mlong64:-D__LONG_MAX__=9223372036854775807LL} \\\n+\"\n+#else\n #define CPP_SPEC \"\\\n %{msparclite:-D__sparclite__} \\\n %{mf930:-D__sparclite__} %{mf934:-D__sparclite__} \\\n %{mv8:-D__sparc_v8__} \\\n %{msupersparc:-D__supersparc__ -D__sparc_v8__}\t\\\n-%{!mv9:-Acpu(sparc) -Amachine(sparc)} \\\n-%{mv9:-D__sparc_v9__ -Acpu(sparc64) -Amachine(sparc64)} \\\n-%{mint64:-D__INT_MAX__=9223372036854775807LL -D__LONG_MAX__=9223372036854775807LL} \\\n-%{mlong64:-D__LONG_MAX__=9223372036854775807LL} \\\n \"\n+#endif\n \n /* Prevent error on `-sun4' and `-target sun4' options.  */\n /* This used to translate -dalign to -malign, but that is no good\n    because it can't turn off the usual meaning of making debugging dumps.  */\n \n #define CC1_SPEC \"%{sun4:} %{target:}\"\n \n-#define NO_BUILTIN_PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \\\n-  (POINTER_SIZE == 64 ? \"long long int\"\t\t\t\t\\\n-   : POINTER_SIZE == 32 && LONG_TYPE_SIZE == 32 ? \"long int\"\t\\\n-   : 0 /*abort*/)\n-\n-#define NO_BUILTIN_SIZE_TYPE\n-#define SIZE_TYPE \\\n-  (POINTER_SIZE == 64 ? \"long long unsigned int\"\t\t\\\n-   : POINTER_SIZE == 32 && LONG_TYPE_SIZE == 32 ? \"long unsigned int\" \\\n-   : 0 /*abort*/)\n+#ifdef SPARCV9\n+#define PTRDIFF_TYPE \"long long int\"\n+#define SIZE_TYPE \"long long unsigned int\"\n+#else\n+#define PTRDIFF_TYPE \"int\"\n+/* In 2.4 it should work to delete this.\n+   #define SIZE_TYPE \"int\"  */\n+#endif\n \n /* ??? This should be 32 bits for v9 but what can we do?  */\n #define WCHAR_TYPE \"short unsigned int\"\n@@ -230,7 +231,8 @@ extern int target_flags;\n #define TARGET_LONG64 (target_flags & MASK_LONG64)\n \n /* Nonzero if pointers are 64 bits.\n-   This option is for v9 only.  */\n+   This is not a user selectable option, though it may be one day -\n+   so it is used to determine pointer size instead of an architecture flag.  */\n #define MASK_PTR64 0x8000\n #define TARGET_PTR64 (target_flags & MASK_PTR64)\n \n@@ -245,6 +247,7 @@ extern int target_flags;\n /* Memory models.\n    Two memory models are supported:\n    TARGET_MEDLOW: 32 bit address space, top 32 bits = 0\n+                  (pointers still 64 bits)\n    TARGET_MEDANY: 32 bit address space, data segment loaded anywhere\n                   (use %g4 as offset).\n    TARGET_FULLANY: not supported yet.\n@@ -312,7 +315,6 @@ extern int target_flags;\n \n /* ??? Until we support a combination v8/v9 compiler, the v9 specific options\n    are only defined for the v9 compiler.  */\n-/* ??? code models should be selected with -mcode-model=xxx.  */\n #ifdef SPARCV9\n #define V9_SWITCHES \\\n /*  {\"v9\", MASK_V9}, */\t\t\t\\"}]}