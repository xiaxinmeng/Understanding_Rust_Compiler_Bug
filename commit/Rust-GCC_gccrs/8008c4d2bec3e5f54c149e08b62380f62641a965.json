{"sha": "8008c4d2bec3e5f54c149e08b62380f62641a965", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwOGM0ZDJiZWMzZTVmNTRjMTQ5ZTA4YjYyMzgwZjYyNjQxYTk2NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-05-27T19:19:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-05-27T19:19:23Z"}, "message": "re PR c++/60385 (confused by earlier errors, bailing out)\n\n/cp\n2016-05-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60385\n\t* name-lookup.c (push_namespace): Return bool, false when pushdecl\n\tfails.\n\t* name-lookup.h (push_namespace): Adjust declaration.\n\t* parser.c (cp_parser_namespace_definition): Check push_namespace\n\treturn value.\n\n/testsuite\n2016-05-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60385\n\t* g++.dg/parse/namespace13.C: New.\n\nFrom-SVN: r236835", "tree": {"sha": "7477cadbff321ea450085460b0be3337e0e5b309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7477cadbff321ea450085460b0be3337e0e5b309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8008c4d2bec3e5f54c149e08b62380f62641a965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8008c4d2bec3e5f54c149e08b62380f62641a965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8008c4d2bec3e5f54c149e08b62380f62641a965", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8008c4d2bec3e5f54c149e08b62380f62641a965/comments", "author": null, "committer": null, "parents": [{"sha": "9a01befbca8a8d3ad2576e9774ba2f93efd71663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a01befbca8a8d3ad2576e9774ba2f93efd71663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a01befbca8a8d3ad2576e9774ba2f93efd71663"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "cdc2f5a46fd808239965da67dd8da734acdf85e6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8008c4d2bec3e5f54c149e08b62380f62641a965", "patch": "@@ -1,3 +1,12 @@\n+2016-05-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60385\n+\t* name-lookup.c (push_namespace): Return bool, false when pushdecl\n+\tfails.\n+\t* name-lookup.h (push_namespace): Adjust declaration.\n+\t* parser.c (cp_parser_namespace_definition): Check push_namespace\n+\treturn value.\n+\n 2016-05-27  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tPR c++/69855"}, {"sha": "11733700627575b1f4f812648df60de7f730204a", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=8008c4d2bec3e5f54c149e08b62380f62641a965", "patch": "@@ -3701,9 +3701,10 @@ handle_namespace_attrs (tree ns, tree attributes)\n }\n   \n /* Push into the scope of the NAME namespace.  If NAME is NULL_TREE, then we\n-   select a name that is unique to this compilation unit.  */\n+   select a name that is unique to this compilation unit.  Returns FALSE if\n+   pushdecl fails, TRUE otherwise.  */\n \n-void\n+bool\n push_namespace (tree name)\n {\n   tree d = NULL_TREE;\n@@ -3777,7 +3778,11 @@ push_namespace (tree name)\n \tTREE_PUBLIC (d) = 0;\n       else\n \tTREE_PUBLIC (d) = 1;\n-      pushdecl (d);\n+      if (pushdecl (d) == error_mark_node)\n+\t{\n+\t  timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n+\t  return false;\n+\t}\n       if (anon)\n \t{\n \t  /* Clear DECL_NAME for the benefit of debugging back ends.  */\n@@ -3795,6 +3800,7 @@ push_namespace (tree name)\n   current_namespace = d;\n \n   timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n+  return true;\n }\n \n /* Pop from the scope of the current namespace.  */"}, {"sha": "2cb129caad9e92bc5cc9dac41a6e07622766b9f6", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=8008c4d2bec3e5f54c149e08b62380f62641a965", "patch": "@@ -312,7 +312,7 @@ extern tree push_inner_scope (tree);\n extern void pop_inner_scope (tree, tree);\n extern void push_binding_level (cp_binding_level *);\n \f\n-extern void push_namespace (tree);\n+extern bool push_namespace (tree);\n extern void pop_namespace (void);\n extern void push_nested_namespace (tree);\n extern void pop_nested_namespace (tree);"}, {"sha": "2a46d6fbde7f3fcda5e2fe916f0dc036f3b49521", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8008c4d2bec3e5f54c149e08b62380f62641a965", "patch": "@@ -17549,7 +17549,7 @@ cp_parser_namespace_definition (cp_parser* parser)\n     }\n \n   /* Start the namespace.  */\n-  push_namespace (identifier);\n+  bool ok = push_namespace (identifier);\n \n   /* Parse any nested namespace definition. */\n   if (cp_lexer_next_token_is (parser->lexer, CPP_SCOPE))\n@@ -17582,7 +17582,7 @@ cp_parser_namespace_definition (cp_parser* parser)\n \n   /* \"inline namespace\" is equivalent to a stub namespace definition\n      followed by a strong using directive.  */\n-  if (is_inline)\n+  if (is_inline && ok)\n     {\n       tree name_space = current_namespace;\n       /* Set up namespace association.  */\n@@ -17610,7 +17610,8 @@ cp_parser_namespace_definition (cp_parser* parser)\n     pop_namespace ();\n \n   /* Finish the namespace.  */\n-  pop_namespace ();\n+  if (ok)\n+    pop_namespace ();\n   /* Look for the final `}'.  */\n   cp_parser_require (parser, CPP_CLOSE_BRACE, RT_CLOSE_BRACE);\n }"}, {"sha": "69206816dd7fbd253ee707532523ce5630ae90c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8008c4d2bec3e5f54c149e08b62380f62641a965", "patch": "@@ -1,3 +1,8 @@\n+2016-05-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60385\n+\t* g++.dg/parse/namespace13.C: New.\n+\n 2016-05-26  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/pr21417.c: Update expected output."}, {"sha": "5a053846406be910ab2ab605fe53a972843494e5", "filename": "gcc/testsuite/g++.dg/parse/namespace13.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8008c4d2bec3e5f54c149e08b62380f62641a965/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnamespace13.C?ref=8008c4d2bec3e5f54c149e08b62380f62641a965", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/60385\n+\n+float foo4();   // { dg-message \"previous declaration\" }\n+\n+namespace foo4  // { dg-error \"redeclared\" }\n+{\n+  struct bar6\n+    {\n+      friend wchar_t bar1();\n+    };\n+}"}]}