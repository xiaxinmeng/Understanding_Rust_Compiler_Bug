{"sha": "457442eb8afcd995a002df6c91d4a9ef8fa3eeb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU3NDQyZWI4YWZjZDk5NWEwMDJkZjZjOTFkNGE5ZWY4ZmEzZWViNg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-03-30T21:04:06Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-03-30T21:04:06Z"}, "message": "PR tree-optimization/84818 - integer_onep must not be used for i18n\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/84818\n\t* builtins.c (check_access): Use warning_n.\n\nFrom-SVN: r258983", "tree": {"sha": "b04f5fbdafa4c400094a75290014e8636f2c9177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b04f5fbdafa4c400094a75290014e8636f2c9177"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d92f13104acabd09f3a2bc6ad41f75bded22771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d92f13104acabd09f3a2bc6ad41f75bded22771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d92f13104acabd09f3a2bc6ad41f75bded22771"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "b9f56ad1eab40913037f89729ab09b07f5536de4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=457442eb8afcd995a002df6c91d4a9ef8fa3eeb6", "patch": "@@ -1,3 +1,8 @@\n+2018-03-30  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/84818\n+\t* builtins.c (check_access): Use warning_n.\n+\n 2018-03-30  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n \tPR target/83822"}, {"sha": "0c560182f72500d53cbc54c98efe24854d2068af", "filename": "gcc/builtins.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457442eb8afcd995a002df6c91d4a9ef8fa3eeb6/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=457442eb8afcd995a002df6c91d4a9ef8fa3eeb6", "patch": "@@ -3172,13 +3172,12 @@ check_access (tree exp, tree, tree, tree dstwrite,\n \t\t\t  exp, func, range[0], dstsize);\n \t    }\n \t  else if (tree_int_cst_equal (range[0], range[1]))\n-\t    warning_at (loc, opt,\n-\t\t\t(integer_onep (range[0])\n-\t\t\t ? G_(\"%K%qD writing %E byte into a region \"\n-\t\t\t      \"of size %E overflows the destination\")\n-\t\t\t : G_(\"%K%qD writing %E bytes into a region \"\n-\t\t\t      \"of size %E overflows the destination\")),\n-\t\t\texp, func, range[0], dstsize);\n+\t    warning_n (loc, opt, tree_to_uhwi (range[0]),\n+\t\t       \"%K%qD writing %E byte into a region \"\n+\t\t       \"of size %E overflows the destination\",\n+\t\t       \"%K%qD writing %E bytes into a region \"\n+\t\t       \"of size %E overflows the destination\",\n+\t\t       exp, func, range[0], dstsize);\n \t  else if (tree_int_cst_sign_bit (range[1]))\n \t    {\n \t      /* Avoid printing the upper bound if it's invalid.  */\n@@ -3273,10 +3272,9 @@ check_access (tree exp, tree, tree, tree dstwrite,\n       location_t loc = tree_nonartificial_location (exp);\n \n       if (tree_int_cst_equal (range[0], range[1]))\n-\twarning_at (loc, opt,\n-\t\t    (tree_int_cst_equal (range[0], integer_one_node)\n-\t\t     ? G_(\"%K%qD reading %E byte from a region of size %E\")\n-\t\t     : G_(\"%K%qD reading %E bytes from a region of size %E\")),\n+\twarning_n (loc, opt, tree_to_uhwi (range[0]),\n+\t\t   \"%K%qD reading %E byte from a region of size %E\",\n+\t\t   \"%K%qD reading %E bytes from a region of size %E\",\n \t\t    exp, func, range[0], slen);\n       else if (tree_int_cst_sign_bit (range[1]))\n \t{"}]}