{"sha": "cd2a3ba227ec911a49752265362a07008a50aac6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyYTNiYTIyN2VjOTExYTQ5NzUyMjY1MzYyYTA3MDA4YTUwYWFjNg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-07T03:34:28Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-07T03:34:28Z"}, "message": "toplev.c (main): Call the front-end specific post_options hook if one is given.\n\n        * toplev.c (main): Call the front-end specific post_options\n        hook if one is given.\n        * toplev.h (struct_lang_hooks, lang_hooks): New.\n        * c-lang.c (c_post_options, lang_hooks): Implement lang_hooks\n        for the C front end.\n        * cp/decl2.c (cxx_post_options, lang_hooks): Implement\n        lang_hooks for the C++ front end.\n        * objc/objc-act.c (objc_post_options, lang_hooks): Implement\n        lang_hooks for the ObjC front end.\n        * f/com.c (lang_hooks): Hooks for the Fortran front end.\n        * java/lang.c (lang_hooks): Hooks for the Java front end.\n\nFrom-SVN: r38757", "tree": {"sha": "4dc1d6254e96cddffb6b0b0b93145fa144532257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dc1d6254e96cddffb6b0b0b93145fa144532257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd2a3ba227ec911a49752265362a07008a50aac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2a3ba227ec911a49752265362a07008a50aac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2a3ba227ec911a49752265362a07008a50aac6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2a3ba227ec911a49752265362a07008a50aac6/comments", "author": null, "committer": null, "parents": [{"sha": "65289a3a42e60ebfe23f858ccfa0e66b13e844ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65289a3a42e60ebfe23f858ccfa0e66b13e844ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65289a3a42e60ebfe23f858ccfa0e66b13e844ed"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "559b125db6e7b10987eff93cbabd86063db4c75e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -1,3 +1,17 @@\n+2001-01-07  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * toplev.c (main): Call the front-end specific post_options\n+        hook if one is given.\n+        * toplev.h (struct_lang_hooks, lang_hooks): New.\n+        * c-lang.c (c_post_options, lang_hooks): Implement lang_hooks\n+        for the C front end.\n+        * cp/decl2.c (cxx_post_options, lang_hooks): Implement\n+        lang_hooks for the C++ front end.\n+        * objc/objc-act.c (objc_post_options, lang_hooks): Implement\n+        lang_hooks for the ObjC front end.\n+        * f/com.c (lang_hooks): Hooks for the Fortran front end.\n+        * java/lang.c (lang_hooks): Hooks for the Java front end.\n+\n 2001-01-07  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * c-lex.c (init_c_lex): Request #define / #undef callbacks"}, {"sha": "52f6015a49f91766c51fee686b27d36811efe6fa", "filename": "gcc/c-lang.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -38,10 +38,19 @@ Boston, MA 02111-1307, USA.  */\n \n static int c_tree_printer PARAMS ((output_buffer *));\n static int c_missing_noreturn_ok_p PARAMS ((tree));\n+static void c_post_options PARAMS ((void));\n+\n+/* Each front end provides its own.  */\n+struct lang_hooks lang_hooks = {c_post_options};\n+\n+/* Post-switch processing.  */\n+static void\n+c_post_options ()\n+{\n+}\n \n /* Each of the functions defined here\n    is an alternative to a function in objc-actions.c.  */\n-\n int\n lang_decode_option (argc, argv)\n      int argc;"}, {"sha": "4daf5909d8b00ff67e7172867fd5795b2d4f8785", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -59,6 +59,7 @@ typedef struct priority_info_s {\n   int destructions_p;\n } *priority_info;\n \n+static void cxx_post_options PARAMS ((void));\n static void mark_vtable_entries PARAMS ((tree));\n static void grok_function_init PARAMS ((tree, tree));\n static int finish_vtable_vardecl PARAMS ((tree *, void *));\n@@ -543,6 +544,15 @@ static const char * const unsupported_options[] = {\n   \"strict-prototype\",\n };\n \n+/* Each front end provides its own.  */\n+struct lang_hooks lang_hooks = {cxx_post_options};\n+\n+/* Post-switch processing.  */\n+static void\n+cxx_post_options ()\n+{\n+}\n+\n /* Compare two option strings, pointed two by P1 and P2, for use with\n    bsearch.  */\n "}, {"sha": "f6f80e03bace7636d9566cc41791837bf7d7ca41", "filename": "gcc/f/com.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -14676,6 +14676,9 @@ insert_block (block)\n     = chainon (current_binding_level->blocks, block);\n }\n \n+/* Each front end provides its own.  */\n+struct lang_hooks lang_hooks = {NULL /* post_options */};\n+\n int\n lang_decode_option (argc, argv)\n      int argc;"}, {"sha": "3a9f34509dd682069cd6d00f9d05ee81098afb05", "filename": "gcc/java/lang.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -186,6 +186,9 @@ static int dependency_tracking = 0;\n #define DEPEND_TARGET_SET 4\n #define DEPEND_FILE_ALREADY_SET 8\n \n+/* Each front end provides its own.  */\n+struct lang_hooks lang_hooks = {NULL /* post_options */};\n+\n /* Process an option that can accept a `no-' form.\n    Return 1 if option found, 0 otherwise.  */\n static int"}, {"sha": "06b0e8cbcf3d01f384f822e271dedf25342152ff", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -148,6 +148,7 @@ char *util_firstobj;\n \n static void init_objc\t\t\t\tPARAMS ((void));\n static void finish_objc\t\t\t\tPARAMS ((void));\n+static void objc_post_options\t\t\tPARAMS ((void));\n \n /* Code generation.  */\n \n@@ -626,6 +627,15 @@ static int generating_instance_variables = 0;\n \n static int print_struct_values = 0;\n \n+/* Each front end provides its own.  */\n+struct lang_hooks lang_hooks = {objc_post_options};\n+\n+/* Post-switch processing.  */\n+static void\n+objc_post_options ()\n+{\n+}\n+\n /* Some platforms pass small structures through registers versus through\n    an invisible pointer.  Determine at what size structure is the \n    transition point between the two possibilities. */"}, {"sha": "0d51302471f5295b335fbabf0c49b02755fc2d8f", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -4750,6 +4750,10 @@ main (argc, argv)\n \t}\n     }\n \n+  /* All command line options have been processed.  */\n+  if (lang_hooks.post_options)\n+    (*lang_hooks.post_options) ();\n+\n   /* Reflect any language-specific diagnostic option setting.  */\n   reshape_diagnostic_buffer ();\n "}, {"sha": "05fca0103a1b7fbb9df26c0aa4429e330c5672ca", "filename": "gcc/toplev.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2a3ba227ec911a49752265362a07008a50aac6/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=cd2a3ba227ec911a49752265362a07008a50aac6", "patch": "@@ -133,4 +133,14 @@ extern int sorrycount;\n \n extern const char *progname;\n \n+/* Language-specific hooks.  */\n+struct lang_hooks\n+{\n+  /* If non-NULL, called when all command line options have been processed.  */\n+  void (*post_options) PARAMS ((void));\n+};\n+\n+/* Each front end provides its own.  */\n+extern struct lang_hooks lang_hooks;\n+\n #endif /* __GCC_TOPLEV_H */"}]}