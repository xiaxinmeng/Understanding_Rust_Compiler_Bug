{"sha": "565b88862d1336a37ca7f3bbffd99c194182e961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY1Yjg4ODYyZDEzMzZhMzdjYTdmM2JiZmZkOTljMTk0MTgyZTk2MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-20T14:40:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-20T14:40:10Z"}, "message": "re PR middle-end/45705 (Useless store not optimized away)\n\n2010-09-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45705\n\t* tree-ssa-dom.c (optimize_stmt): Perform redundant store elimination.\n\n\t* gcc.dg/tree-ssa/ssa-dom-dse-1.c: New testcase.\n\nFrom-SVN: r164434", "tree": {"sha": "f21c6617ab6ed8a7aa8f4afb71c9b2f0bd39f76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f21c6617ab6ed8a7aa8f4afb71c9b2f0bd39f76d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/565b88862d1336a37ca7f3bbffd99c194182e961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/565b88862d1336a37ca7f3bbffd99c194182e961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/565b88862d1336a37ca7f3bbffd99c194182e961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/565b88862d1336a37ca7f3bbffd99c194182e961/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e979df36984081291bce02e95a66e849e6dc212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e979df36984081291bce02e95a66e849e6dc212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e979df36984081291bce02e95a66e849e6dc212"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "baba93b09d27657b341422ef989651c9d796e165", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=565b88862d1336a37ca7f3bbffd99c194182e961", "patch": "@@ -1,3 +1,8 @@\n+2010-09-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45705\n+\t* tree-ssa-dom.c (optimize_stmt): Perform redundant store elimination.\n+\n 2010-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/45695"}, {"sha": "93a35b6cd686fa99cce55f6327e7e5b72977ee25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=565b88862d1336a37ca7f3bbffd99c194182e961", "patch": "@@ -1,3 +1,8 @@\n+2010-09-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45705\n+\t* gcc.dg/tree-ssa/ssa-dom-dse-1.c: New testcase.\n+\n 2010-09-20  Michael Matz  <matz@suse.de>\n \n \tPR testsuite/45706"}, {"sha": "504e4bc038d87a41a9513473cbe38172cfb7c8e2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-dse-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-dse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-dse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-dse-1.c?ref=565b88862d1336a37ca7f3bbffd99c194182e961", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+int x;\n+void\n+foo (void)\n+{\n+  if (x == 0)\n+    x = 0;\n+}\n+void\n+bar (int i)\n+{\n+  if (x == i)\n+    x = i;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"x =\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "54a35af4a855362586b7883d310bd512ea415e42", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/565b88862d1336a37ca7f3bbffd99c194182e961/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=565b88862d1336a37ca7f3bbffd99c194182e961", "patch": "@@ -2178,6 +2178,48 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si)\n       update_stmt_if_modified (stmt);\n       eliminate_redundant_computations (&si);\n       stmt = gsi_stmt (si);\n+\n+      /* Perform simple redundant store elimination.  */\n+      if (gimple_assign_single_p (stmt)\n+\t  && TREE_CODE (gimple_assign_lhs (stmt)) != SSA_NAME)\n+\t{\n+\t  tree lhs = gimple_assign_lhs (stmt);\n+\t  tree rhs = gimple_assign_rhs1 (stmt);\n+\t  tree cached_lhs;\n+\t  gimple new_stmt;\n+\t  if (TREE_CODE (rhs) == SSA_NAME)\n+\t    {\n+\t      tree tem = SSA_NAME_VALUE (rhs);\n+\t      if (tem)\n+\t\trhs = tem;\n+\t    }\n+\t  /* Build a new statement with the RHS and LHS exchanged.  */\n+\t  if (TREE_CODE (rhs) == SSA_NAME)\n+\t    {\n+\t      gimple defstmt = SSA_NAME_DEF_STMT (rhs);\n+\t      new_stmt = gimple_build_assign (rhs, lhs);\n+\t      SSA_NAME_DEF_STMT (rhs) = defstmt;\n+\t    }\n+\t  else\n+\t    new_stmt = gimple_build_assign (rhs, lhs);\n+\t  gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n+\t  cached_lhs = lookup_avail_expr (new_stmt, false);\n+\t  if (cached_lhs\n+\t      && rhs == cached_lhs)\n+\t    {\n+\t      basic_block bb = gimple_bb (stmt);\n+\t      int lp_nr = lookup_stmt_eh_lp (stmt);\n+\t      unlink_stmt_vdef (stmt);\n+\t      gsi_remove (&si, true);\n+\t      if (lp_nr != 0)\n+\t\t{\n+\t\t  bitmap_set_bit (need_eh_cleanup, bb->index);\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    fprintf (dump_file, \"  Flagged to clear EH edges.\\n\");\n+\t\t}\n+\t      return;\n+\t    }\n+\t}\n     }\n \n   /* Record any additional equivalences created by this statement.  */"}]}