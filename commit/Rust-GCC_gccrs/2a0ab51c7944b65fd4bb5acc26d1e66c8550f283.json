{"sha": "2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEwYWI1MWM3OTQ0YjY1ZmQ0YmI1YWNjMjZkMWU2NmM4NTUwZjI4Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-05-21T10:25:52Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-05-21T10:25:52Z"}, "message": "re PR libstdc++/31621 (libstdc++ uses -xc++ which can cause exceptions to show up which causes __gxx_personality_v0 to be referenced)\n\n2007-05-21  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/31621\n\t* acinclude.m4 ([GLIBCXX_CHECK_LINKER_FEATURES]): Use the C compiler.\n\t* configure: Regenerate.\n\nFrom-SVN: r124896", "tree": {"sha": "299b6f0d9fe1ac1fb292cfb9513ddef0472f4541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299b6f0d9fe1ac1fb292cfb9513ddef0472f4541"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/comments", "author": null, "committer": null, "parents": [{"sha": "a38e7aa5444eeef446063429186a41639d8cf186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a38e7aa5444eeef446063429186a41639d8cf186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a38e7aa5444eeef446063429186a41639d8cf186"}], "stats": {"total": 50, "additions": 17, "deletions": 33}, "files": [{"sha": "322e2b528f6fa09b87b8c2329774bf29ac46b5d6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "patch": "@@ -1,3 +1,9 @@\n+2007-05-21  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/31621\n+\t* acinclude.m4 ([GLIBCXX_CHECK_LINKER_FEATURES]): Use the C compiler.\n+\t* configure: Regenerate.\n+\n 2007-05-20  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_algo.h: Shuffle the functions to better match the"}, {"sha": "ddc26c8a1292a4f21a35433304e0849a94e96b9a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "patch": "@@ -251,11 +251,9 @@ AC_DEFUN([GLIBCXX_CHECK_LINKER_FEATURES], [\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])"}, {"sha": "4cb9d3904138f5d63bf1afd61443abae52dcba6f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 10, "deletions": 30, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a0ab51c7944b65fd4bb5acc26d1e66c8550f283/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2a0ab51c7944b65fd4bb5acc26d1e66c8550f283", "patch": "@@ -8561,11 +8561,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -54678,11 +54676,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -55696,11 +55692,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -56682,11 +56676,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -78067,11 +78059,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -78914,11 +78904,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -79810,11 +79798,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -81098,11 +81084,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -81836,11 +81820,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5\n@@ -82339,11 +82321,9 @@ echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n     # NB: This flag only works reliably after 2.16.1. Configure tests\n     # for this are difficult, so hard wire a value that should work.\n \n-    # All these tests are for C++, but run with the \"C\" compiler driver.\n-    # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-x c++ -Wl,--gc-sections'\n+    CFLAGS='-Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     echo \"$as_me:$LINENO: checking for ld that supports -Wl,--gc-sections\" >&5"}]}