{"sha": "31449cf8e119bbe172a68689068591827472da5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0NDljZjhlMTE5YmJlMTcyYTY4Njg5MDY4NTkxODI3NDcyZGE1Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-07T04:22:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-07T20:49:29Z"}, "message": "c++: ICE on invalid concept placeholder [PR94481].\n\nHere the 'decltype' is missing '(auto)', so open_paren was NULL, and trying\nto get its location is a SEGV.  Using matching_parens avoids that problem.\n\ngcc/cp/ChangeLog\n2020-04-07  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/94481\n\t* parser.c (cp_parser_placeholder_type_specifier): Use\n\tmatching_parens.", "tree": {"sha": "95d85f2965934a6c8f971f4f2d4fe43aa5af4cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95d85f2965934a6c8f971f4f2d4fe43aa5af4cbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31449cf8e119bbe172a68689068591827472da5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31449cf8e119bbe172a68689068591827472da5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31449cf8e119bbe172a68689068591827472da5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31449cf8e119bbe172a68689068591827472da5c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c23c899aedf11069e992eed7358802b262d62f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23c899aedf11069e992eed7358802b262d62f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23c899aedf11069e992eed7358802b262d62f98"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "8227f28e1bf807143af9c95611594c51163a693e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31449cf8e119bbe172a68689068591827472da5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31449cf8e119bbe172a68689068591827472da5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31449cf8e119bbe172a68689068591827472da5c", "patch": "@@ -1,3 +1,9 @@\n+2020-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/94481\n+\t* parser.c (cp_parser_placeholder_type_specifier): Use\n+\tmatching_parens.\n+\n 2020-04-07  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* coroutines.cc (maybe_promote_captured_temps): Ensure that"}, {"sha": "2c33ca4dd168dc37d836ca520694c5eae6fa026f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31449cf8e119bbe172a68689068591827472da5c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31449cf8e119bbe172a68689068591827472da5c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=31449cf8e119bbe172a68689068591827472da5c", "patch": "@@ -18367,20 +18367,18 @@ cp_parser_placeholder_type_specifier (cp_parser *parser, location_t loc,\n \n   /* As per the standard, require auto or decltype(auto), except in some\n      cases (template parameter lists, -fconcepts-ts enabled).  */\n-  cp_token *placeholder = NULL, *open_paren = NULL, *close_paren = NULL;\n+  cp_token *placeholder = NULL, *close_paren = NULL;\n   if (cxx_dialect >= cxx2a)\n     {\n       if (cp_lexer_next_token_is_keyword (parser->lexer, RID_AUTO))\n \tplaceholder = cp_lexer_consume_token (parser->lexer);\n       else if (cp_lexer_next_token_is_keyword (parser->lexer, RID_DECLTYPE))\n \t{\n \t  placeholder = cp_lexer_consume_token (parser->lexer);\n-\t  open_paren = cp_parser_require (parser, CPP_OPEN_PAREN,\n-\t\t\t\t\t  RT_OPEN_PAREN);\n+\t  matching_parens parens;\n+\t  parens.require_open (parser);\n \t  cp_parser_require_keyword (parser, RID_AUTO, RT_AUTO);\n-          close_paren = cp_parser_require (parser, CPP_CLOSE_PAREN,\n-\t\t\t\t\t   RT_CLOSE_PAREN,\n-\t\t\t\t\t   open_paren->location);\n+\t  close_paren = parens.require_close (parser);\n \t}\n     }\n \n@@ -18429,7 +18427,7 @@ cp_parser_placeholder_type_specifier (cp_parser *parser, location_t loc,\n      results in an invented template parameter.  */\n   if (parser->auto_is_implicit_function_template_parm_p)\n     {\n-      if (placeholder && token_is_decltype (placeholder))\n+      if (close_paren)\n \t{\n \t  location_t loc = make_location (placeholder->location,\n \t\t\t\t\t  placeholder->location,"}, {"sha": "b04354cf8d08cb8e960cc0ad840d36cf93dd7514", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-placeholder2.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31449cf8e119bbe172a68689068591827472da5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-placeholder2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31449cf8e119bbe172a68689068591827472da5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-placeholder2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-placeholder2.C?ref=31449cf8e119bbe172a68689068591827472da5c", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/94481\n+// { dg-do compile { target c++2a } }\n+\n+template<typename T>\n+concept C = true;\n+\n+void foo() {\n+  C decltype c = 1;\t\t// { dg-error \"\" }\n+}"}]}