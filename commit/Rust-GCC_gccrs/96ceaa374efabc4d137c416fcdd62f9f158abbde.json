{"sha": "96ceaa374efabc4d137c416fcdd62f9f158abbde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZjZWFhMzc0ZWZhYmM0ZDEzN2M0MTZmY2RkNjJmOWYxNThhYmJkZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2012-11-20T19:29:02Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2012-11-20T19:29:02Z"}, "message": "rs6000.md (movdf_hardfloat32): Add a comment explaining the register ordering preferences.\n\n2012-11-20  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.md (movdf_hardfloat32): Add a comment\n\texplaining the register ordering preferences.\n\nFrom-SVN: r193673", "tree": {"sha": "d84bb4db28c514084202f9dac829835f7acd97ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d84bb4db28c514084202f9dac829835f7acd97ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96ceaa374efabc4d137c416fcdd62f9f158abbde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ceaa374efabc4d137c416fcdd62f9f158abbde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96ceaa374efabc4d137c416fcdd62f9f158abbde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ceaa374efabc4d137c416fcdd62f9f158abbde/comments", "author": null, "committer": null, "parents": [{"sha": "7139194bf9ee6158e94d4ddfb47dcfcdb338eae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7139194bf9ee6158e94d4ddfb47dcfcdb338eae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7139194bf9ee6158e94d4ddfb47dcfcdb338eae4"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "30a611274d3b5b0de31256a0e889055c90da0261", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96ceaa374efabc4d137c416fcdd62f9f158abbde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96ceaa374efabc4d137c416fcdd62f9f158abbde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96ceaa374efabc4d137c416fcdd62f9f158abbde", "patch": "@@ -1,3 +1,8 @@\n+2012-11-20  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (movdf_hardfloat32): Add a comment\n+\texplaining the register ordering preferences.\n+\n 2012-11-20  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR tree-optimization/55350"}, {"sha": "7719ec3bad8ed8cfdef9af93394af534f7c3dae5", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96ceaa374efabc4d137c416fcdd62f9f158abbde/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96ceaa374efabc4d137c416fcdd62f9f158abbde/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=96ceaa374efabc4d137c416fcdd62f9f158abbde", "patch": "@@ -8018,6 +8018,14 @@\n ;; Don't have reload use general registers to load a constant.  It is\n ;; less efficient than loading the constant into an FP register, since\n ;; it will probably be used there.\n+\n+;; The move constraints are ordered to prefer floating point registers before\n+;; general purpose registers to avoid doing a store and a load to get the value\n+;; into a floating point register when it is needed for a floating point\n+;; operation.  Prefer traditional floating point registers over VSX registers,\n+;; since the D-form version of the memory instructions does not need a GPR for\n+;; reloading.\n+\n (define_insn \"*movdf_hardfloat32\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,d,d,ws,?wa,Z,?Z,ws,?wa,wa,Y,r,!r,!r,!r,!r\")\n \t(match_operand:DF 1 \"input_operand\" \"d,m,d,Z,Z,ws,wa,ws,wa,j,r,Y,r,G,H,F\"))]"}]}