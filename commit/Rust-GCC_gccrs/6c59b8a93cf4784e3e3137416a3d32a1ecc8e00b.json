{"sha": "6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1OWI4YTkzY2Y0Nzg0ZTNlMzEzNzQxNmEzZDMyYTFlY2M4ZTAwYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-01-04T21:11:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-01-07T21:09:11Z"}, "message": "c++: Add TARGET_EXPR comments\n\nDiscussing the 98469 patch and class prvalues with Jakub led me to\ndouble-check our handling of TARGET_EXPR in constexpr.c, and add a note\nabout why we don't strip them in parameter initialization.  And another to\nclarify that we're handling an INIT_EXPR in a place we do strip them.\n\ngcc/cp/ChangeLog:\n\n\t* constexpr.c (cxx_bind_parameters_in_call): Add comment.\n\t(cxx_eval_store_expression): Add comment.", "tree": {"sha": "f118a0ed3863ae888ed200d795385bce6cbd20d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f118a0ed3863ae888ed200d795385bce6cbd20d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d65a07d54bd9371475648f7de9d4b6a01238813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d65a07d54bd9371475648f7de9d4b6a01238813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d65a07d54bd9371475648f7de9d4b6a01238813"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4a5e6384da68661d96878788528c696e512194c9", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=6c59b8a93cf4784e3e3137416a3d32a1ecc8e00b", "patch": "@@ -1591,6 +1591,9 @@ cxx_bind_parameters_in_call (const constexpr_ctx *ctx, tree t,\n       if (TREE_ADDRESSABLE (type))\n \t/* Undo convert_for_arg_passing work here.  */\n \tx = convert_from_reference (x);\n+      /* Normally we would strip a TARGET_EXPR in an initialization context\n+\t such as this, but here we do the elision differently: we keep the\n+\t TARGET_EXPR, and use its CONSTRUCTOR as the value of the parm.  */\n       arg = cxx_eval_constant_expression (ctx, x, /*lval=*/false,\n \t\t\t\t\t  non_constant_p, overflow_p);\n       /* Don't VERIFY_CONSTANT here.  */\n@@ -5388,6 +5391,9 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n \n   if (!preeval)\n     {\n+      /* We're handling an INIT_EXPR of class type, so the value of the\n+\t initializer can depend on the object it's initializing.  */\n+\n       /* Create a new CONSTRUCTOR in case evaluation of the initializer\n \t wants to modify it.  */\n       if (*valp == NULL_TREE)"}]}