{"sha": "88438c0e875c0bd43b55c793811a017416447145", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0MzhjMGU4NzVjMGJkNDNiNTVjNzkzODExYTAxNzQxNjQ0NzE0NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-04-20T09:18:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:18:59Z"}, "message": "exp_attr.adb (Expand_N_Attribute_Reference [Attribute_Valid]): Disable expansion when generating C code.\n\n2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference [Attribute_Valid]):\n\tDisable expansion when generating C code.\n\t* sinfo.ads, inline.ads: Minor editing.\n\nFrom-SVN: r235247", "tree": {"sha": "52905e302961d000734c5af7242f8bf0bde9ff31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52905e302961d000734c5af7242f8bf0bde9ff31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88438c0e875c0bd43b55c793811a017416447145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88438c0e875c0bd43b55c793811a017416447145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88438c0e875c0bd43b55c793811a017416447145", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88438c0e875c0bd43b55c793811a017416447145/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37e6613f5530611fb5ba5db6c7972694a8b0f5c"}], "stats": {"total": 183, "additions": 93, "deletions": 90}, "files": [{"sha": "b1a363a0542e2ea78d79c60c9d0b68ba4fcd7ba6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88438c0e875c0bd43b55c793811a017416447145", "patch": "@@ -1,3 +1,9 @@\n+2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference [Attribute_Valid]):\n+\tDisable expansion when generating C code.\n+\t* sinfo.ads, inline.ads: Minor editing.\n+\n 2016-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_util.adb, contracts.adb, ghost.adb, exp_ch6.adb: Minor"}, {"sha": "0b0a3951ab545b7e7953087e9c1341430c21a857", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 81, "deletions": 84, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=88438c0e875c0bd43b55c793811a017416447145", "patch": "@@ -6352,96 +6352,93 @@ package body Exp_Attr is\n             --  Start of processing for Float_Valid\n \n             begin\n-               case Float_Rep (Btyp) is\n-\n-                  --  The AAMP back end handles Valid for floating-point types\n-\n-                  when AAMP =>\n-                     Analyze_And_Resolve (Pref, Ptyp);\n-                     Set_Etype (N, Standard_Boolean);\n-                     Set_Analyzed (N);\n-\n-                  when IEEE_Binary =>\n-                     Find_Fat_Info (Ptyp, Ftp, Pkg);\n-\n-                     --  If the prefix is a reverse SSO component, or is\n-                     --  possibly unaligned, first create a temporary copy\n-                     --  that is in native SSO, and properly aligned. Make it\n-                     --  Volatile to prevent folding in the back-end. Note\n-                     --  that we use an intermediate constrained string type\n-                     --  to initialize the temporary, as the value at hand\n-                     --  might be invalid, and in that case it cannot be copied\n-                     --  using a floating point register.\n-\n-                     if In_Reverse_Storage_Order_Object (Pref)\n-                          or else\n-                        Is_Possibly_Unaligned_Object (Pref)\n-                     then\n-                        declare\n-                           Temp : constant Entity_Id :=\n-                                    Make_Temporary (Loc, 'F');\n-\n-                           Fat_S : constant Entity_Id :=\n-                                     Get_Fat_Entity (Name_S);\n-                           --  Constrained string subtype of appropriate size\n-\n-                           Fat_P : constant Entity_Id :=\n-                                     Get_Fat_Entity (Name_P);\n-                           --  Access to Fat_S\n+               --  The C and AAMP back-ends handle Valid for fpt types\n \n-                           Decl : constant Node_Id :=\n-                                    Make_Object_Declaration (Loc,\n-                                      Defining_Identifier => Temp,\n-                                      Aliased_Present     => True,\n-                                      Object_Definition   =>\n-                                        New_Occurrence_Of (Ptyp, Loc));\n+               if Generate_C_Code or else Float_Rep (Btyp) = AAMP then\n+                  Analyze_And_Resolve (Pref, Ptyp);\n+                  Set_Etype (N, Standard_Boolean);\n+                  Set_Analyzed (N);\n \n-                        begin\n-                           Set_Aspect_Specifications (Decl, New_List (\n-                             Make_Aspect_Specification (Loc,\n-                               Identifier =>\n-                                 Make_Identifier (Loc, Name_Volatile))));\n-\n-                           Insert_Actions (N,\n-                             New_List (\n-                               Decl,\n-\n-                               Make_Assignment_Statement (Loc,\n-                                 Name =>\n-                                   Make_Explicit_Dereference (Loc,\n-                                     Prefix =>\n-                                       Unchecked_Convert_To (Fat_P,\n-                                         Make_Attribute_Reference (Loc,\n-                                           Prefix =>\n-                                             New_Occurrence_Of (Temp, Loc),\n-                                           Attribute_Name =>\n-                                             Name_Unrestricted_Access))),\n-                                 Expression =>\n-                                   Unchecked_Convert_To (Fat_S,\n-                                     Relocate_Node (Pref)))),\n-\n-                             Suppress => All_Checks);\n-\n-                           Rewrite (Pref, New_Occurrence_Of (Temp, Loc));\n-                        end;\n-                     end if;\n+               else\n+                  Find_Fat_Info (Ptyp, Ftp, Pkg);\n+\n+                  --  If the prefix is a reverse SSO component, or is possibly\n+                  --  unaligned, first create a temporary copy that is in\n+                  --  native SSO, and properly aligned. Make it Volatile to\n+                  --  prevent folding in the back-end. Note that we use an\n+                  --  intermediate constrained string type to initialize the\n+                  --  temporary, as the value at hand might be invalid, and in\n+                  --  that case it cannot be copied using a floating point\n+                  --  register.\n+\n+                  if In_Reverse_Storage_Order_Object (Pref)\n+                    or else Is_Possibly_Unaligned_Object (Pref)\n+                  then\n+                     declare\n+                        Temp : constant Entity_Id :=\n+                                 Make_Temporary (Loc, 'F');\n+\n+                        Fat_S : constant Entity_Id :=\n+                                  Get_Fat_Entity (Name_S);\n+                        --  Constrained string subtype of appropriate size\n+\n+                        Fat_P : constant Entity_Id :=\n+                                  Get_Fat_Entity (Name_P);\n+                        --  Access to Fat_S\n+\n+                        Decl : constant Node_Id :=\n+                                 Make_Object_Declaration (Loc,\n+                                   Defining_Identifier => Temp,\n+                                   Aliased_Present     => True,\n+                                   Object_Definition   =>\n+                                     New_Occurrence_Of (Ptyp, Loc));\n+\n+                     begin\n+                        Set_Aspect_Specifications (Decl, New_List (\n+                          Make_Aspect_Specification (Loc,\n+                            Identifier =>\n+                              Make_Identifier (Loc, Name_Volatile))));\n+\n+                        Insert_Actions (N,\n+                          New_List (\n+                            Decl,\n+\n+                            Make_Assignment_Statement (Loc,\n+                              Name =>\n+                                Make_Explicit_Dereference (Loc,\n+                                  Prefix =>\n+                                    Unchecked_Convert_To (Fat_P,\n+                                      Make_Attribute_Reference (Loc,\n+                                        Prefix =>\n+                                          New_Occurrence_Of (Temp, Loc),\n+                                        Attribute_Name =>\n+                                          Name_Unrestricted_Access))),\n+                              Expression =>\n+                                Unchecked_Convert_To (Fat_S,\n+                                  Relocate_Node (Pref)))),\n+\n+                          Suppress => All_Checks);\n+\n+                        Rewrite (Pref, New_Occurrence_Of (Temp, Loc));\n+                     end;\n+                  end if;\n \n-                     --  We now have an object of the proper endianness and\n-                     --  alignment, and can construct a Valid attribute.\n+                  --  We now have an object of the proper endianness and\n+                  --  alignment, and can construct a Valid attribute.\n \n-                     --  We make sure the prefix of this valid attribute is\n-                     --  marked as not coming from source, to avoid losing\n-                     --  warnings from 'Valid looking like a possible update.\n+                  --  We make sure the prefix of this valid attribute is\n+                  --  marked as not coming from source, to avoid losing\n+                  --  warnings from 'Valid looking like a possible update.\n \n-                     Set_Comes_From_Source (Pref, False);\n+                  Set_Comes_From_Source (Pref, False);\n \n-                     Expand_Fpt_Attribute\n-                       (N, Pkg, Name_Valid,\n-                        New_List (\n-                          Make_Attribute_Reference (Loc,\n-                            Prefix         => Unchecked_Convert_To (Ftp, Pref),\n-                            Attribute_Name => Name_Unrestricted_Access)));\n-               end case;\n+                  Expand_Fpt_Attribute\n+                    (N, Pkg, Name_Valid,\n+                     New_List (\n+                       Make_Attribute_Reference (Loc,\n+                         Prefix         => Unchecked_Convert_To (Ftp, Pref),\n+                         Attribute_Name => Name_Unrestricted_Access)));\n+               end if;\n \n                --  One more task, we still need a range check. Required\n                --  only if we have a constraint, since the Valid routine"}, {"sha": "04662b831131045c72734d70666e05a82d445d11", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=88438c0e875c0bd43b55c793811a017416447145", "patch": "@@ -74,9 +74,9 @@ package Inline is\n       --  must be inhibited.\n \n       Current_Sem_Unit : Unit_Number_Type;\n-      --  The semantic unit within which the instantiation is found. Must\n-      --  be restored when compiling the body, to insure that internal enti-\n-      --  ties use the same counter and are unique over spec and body.\n+      --  The semantic unit within which the instantiation is found. Must be\n+      --  restored when compiling the body, to insure that internal entities\n+      --  use the same counter and are unique over spec and body.\n \n       Scope_Suppress           : Suppress_Record;\n       Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;"}, {"sha": "f86eea3da1e59776f1fd9c171d610131399ba424", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88438c0e875c0bd43b55c793811a017416447145/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=88438c0e875c0bd43b55c793811a017416447145", "patch": "@@ -879,9 +879,9 @@ package Sinfo is\n    --    Present in subprogram declarations. Denotes analyzed but unexpanded\n    --    body of subprogram, to be used when inlining calls. Present when the\n    --    subprogram has an Inline pragma and inlining is enabled. If the\n-   --    declaration is completed by a renaming_as_body, and the renamed en-\n-   --    tity is a subprogram, the Body_To_Inline is the name of that entity,\n-   --    which is used directly in later calls to the original subprogram.\n+   --    declaration is completed by a renaming_as_body, and the renamed entity\n+   --    is a subprogram, the Body_To_Inline is the name of that entity, which\n+   --    is used directly in later calls to the original subprogram.\n \n    --  Body_Required (Flag13-Sem)\n    --    A flag that appears in the N_Compilation_Unit node indicating that"}]}