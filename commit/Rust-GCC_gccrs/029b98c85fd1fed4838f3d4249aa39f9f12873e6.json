{"sha": "029b98c85fd1fed4838f3d4249aa39f9f12873e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI5Yjk4Yzg1ZmQxZmVkNDgzOGYzZDQyNDlhYTM5ZjlmMTI4NzNlNg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-26T18:05:00Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-26T18:05:00Z"}, "message": "In gcc/testsuite/: 2010-12-26 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/testsuite/:\n2010-12-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/gnu-api-2-class.m: Updated the test to work with the\n\tApple runtime as well.\n\t* obj-c++.dg/gnu-api-2-class.mm: Same change.\n\t* objc.dg/gnu-api-2-ivar.m: Same change.\n\t* obj-c++.dg/gnu-api-2-ivar.mm: Same change.\n\t* objc.dg/gnu-api-2-method.m: Same change.\n\t* obj-c++.dg/gnu-api-2-method.mm: Same change.\n\t* objc.dg/gnu-api-2-objc.m: Same change.\n\t* obj-c++.dg/gnu-api-2-objc.mm: Same change.\n\t* objc.dg/gnu-api-2-object.m: Same change.\n\t* obj-c++.dg/gnu-api-2-object.mm: Same change.\n\t* objc.dg/gnu-api-2-property.m: Same change.\n\t* obj-c++.dg/gnu-api-2-property.mm: Same change.\n\t* objc.dg/gnu-api-2-protocol.m: Same change.\n\t* obj-c++.dg/gnu-api-2-protocol.mm: Same change.\n\n\t* objc.dg/gnu-api-2-objc.m: Also, fixed test for\n\tobjc_disposeClassPair not to create a new class pair with the same\n\tname as an existing class, and to test that the class pair is\n\tcreated correctly.\n\t* obj-c++.dg/gnu-api-2-objc.mm: Same change.\n\nFrom-SVN: r168252", "tree": {"sha": "26529a8d1d86affc219c3a8d96b6942327c3237a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26529a8d1d86affc219c3a8d96b6942327c3237a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/029b98c85fd1fed4838f3d4249aa39f9f12873e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029b98c85fd1fed4838f3d4249aa39f9f12873e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/029b98c85fd1fed4838f3d4249aa39f9f12873e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029b98c85fd1fed4838f3d4249aa39f9f12873e6/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa539f518911a5dbc968cc19ac4efb4d47e92dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa539f518911a5dbc968cc19ac4efb4d47e92dca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa539f518911a5dbc968cc19ac4efb4d47e92dca"}], "stats": {"total": 101, "additions": 79, "deletions": 22}, "files": [{"sha": "60773fb90c7824e5c0528ee3bf4b30c63f8e6db5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -1,3 +1,27 @@\n+2010-12-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/gnu-api-2-class.m: Updated the test to work with the\n+\tApple runtime as well.\n+\t* obj-c++.dg/gnu-api-2-class.mm: Same change.\n+\t* objc.dg/gnu-api-2-ivar.m: Same change.\n+\t* obj-c++.dg/gnu-api-2-ivar.mm: Same change.\n+\t* objc.dg/gnu-api-2-method.m: Same change.\n+\t* obj-c++.dg/gnu-api-2-method.mm: Same change.\n+\t* objc.dg/gnu-api-2-objc.m: Same change.\n+\t* obj-c++.dg/gnu-api-2-objc.mm: Same change.\n+\t* objc.dg/gnu-api-2-object.m: Same change.\n+\t* obj-c++.dg/gnu-api-2-object.mm: Same change.\n+\t* objc.dg/gnu-api-2-property.m: Same change.\n+\t* obj-c++.dg/gnu-api-2-property.mm: Same change.\n+\t* objc.dg/gnu-api-2-protocol.m: Same change.\n+\t* obj-c++.dg/gnu-api-2-protocol.mm: Same change.\n+\n+\t* objc.dg/gnu-api-2-objc.m: Also, fixed test for\n+\tobjc_disposeClassPair not to create a new class pair with the same\n+\tname as an existing class, and to test that the class pair is\n+\tcreated correctly.\n+\t* obj-c++.dg/gnu-api-2-objc.mm: Same change.\n+\t\n 2010-12-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/special/special.exp: Added load-category-2 and"}, {"sha": "1e0aaa967e18c3e44b921fed69ce7fb6e89143bb", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-class.mm", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'class', covering all functions starting with 'class'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -256,7 +257,7 @@ int main ()\n   std::cout << \"Testing class_copyPropertyList ()...\\n\";\n   {\n     unsigned int count;\n-    Property * list = class_copyPropertyList (objc_getClass (\"MySubClass\"), &count);\n+    objc_property_t * list = class_copyPropertyList (objc_getClass (\"MySubClass\"), &count);\n \n     if (count != 0  ||  list != NULL)\n       abort ();"}, {"sha": "47cc57521313d5f850e0b5df65868352c509b749", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-ivar.mm", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-ivar.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-ivar.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-ivar.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'ivar', covering all functions starting with 'ivar'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol"}, {"sha": "56f9f2d155769e79883d7f972c25071aa1ad8517", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-method.mm", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-method.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-method.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-method.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'method', covering all functions starting with 'method'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol"}, {"sha": "b7d4ace00704a75685a1c743bb928351f9faf6c8", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-objc.mm", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-objc.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-objc.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-objc.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'objc', covering all functions starting with 'objc'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -103,7 +104,10 @@ int main ()\n   std::cout << \"Testing objc_disposeClassPair ()...\\n\";\n   {\n     Method method = class_getInstanceMethod (objc_getClass (\"MySubClass\"), @selector (setVariable:));\n-    Class new_class = objc_allocateClassPair (objc_getClass (\"MyRootClass\"), \"MyNewSubClass\", 0);\n+    Class new_class = objc_allocateClassPair (objc_getClass (\"MyRootClass\"), \"MyNewSubClass2\", 0);\n+\n+    if (new_class == Nil)\n+      abort ();\n \n     /* Add a bit of everything to the class to exercise undoing all these changes.  */\n "}, {"sha": "219cd3d1cc5a55e647a92339cab0b9e466c111b5", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-object.mm", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-object.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-object.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-object.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'object', covering all functions starting with 'object'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol"}, {"sha": "0279124dcc099cdc4df868357e6c7d1550a291d2", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-property.mm", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-property.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-property.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-property.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'property', covering all functions starting with 'property'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -50,15 +51,22 @@ int main ()\n   /* TODO: Test new ABI (when available).  */\n   std::cout << \"Testing property_getAttributes () ...\\n\";\n   {\n+    /* The Apple/NeXT runtime seems to crash on the following.  */\n+#ifdef __GNU_LIBOBJC__\n     if (property_getAttributes (NULL) != NULL)\n       abort ();\n+#endif\n   }\n \n   /* TODO: Test new ABI (when available).  */\n   std::cout << \"Testing property_getName () ...\\n\";\n   {\n+    /* The Apple/NeXT runtime seems to crash on the following.  */\n+#ifdef __GNU_LIBOBJC__\n+\n     if (property_getName (NULL) != NULL)\n       abort ();\n+#endif\n   }\n \n   return (0);"}, {"sha": "b16ba5c898a70e1834c224f2a5c3a289ae59c5ac", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-protocol.mm", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-protocol.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-protocol.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-protocol.mm?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'protocol', covering all functions starting with 'protocol'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -88,7 +89,7 @@ int main ()\n   std::cout << \"Testing protocol_copyPropertyList ()...\\n\";\n   {\n     unsigned int count;\n-    Property *list;\n+    objc_property_t *list;\n \n     list = protocol_copyPropertyList (@protocol (MyProtocol), &count);\n \n@@ -136,7 +137,7 @@ int main ()\n   /* TODO: Test new ABI (when available).  */\n   std::cout << \"Testing protocol_getProperty ()...\\n\";\n   {\n-    Property property;\n+    objc_property_t property;\n \n     property = protocol_getProperty (objc_getProtocol (\"MyProtocol\"), \"someProperty\",\n \t\t\t\t     YES, YES);"}, {"sha": "2b2715ceb3db2067702b72cf4a8d76ead9d2d462", "filename": "gcc/testsuite/objc.dg/gnu-api-2-class.m", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'class', covering all functions starting with 'class'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -256,7 +257,7 @@ int main(int argc, void **args)\n   printf (\"Testing class_copyPropertyList ()...\\n\");\n   {\n     unsigned int count;\n-    Property * list = class_copyPropertyList (objc_getClass (\"MySubClass\"), &count);\n+    objc_property_t * list = class_copyPropertyList (objc_getClass (\"MySubClass\"), &count);\n \n     if (count != 0  ||  list != NULL)\n       abort ();"}, {"sha": "484489ed75e5f7a0f9e3a7e51a33d8781924559b", "filename": "gcc/testsuite/objc.dg/gnu-api-2-ivar.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-ivar.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-ivar.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-ivar.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'ivar', covering all functions starting with 'ivar'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol"}, {"sha": "a46305721f5ec09df6bf31e7ae92581aa3598fe8", "filename": "gcc/testsuite/objc.dg/gnu-api-2-method.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-method.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-method.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-method.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'method', covering all functions starting with 'method'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol"}, {"sha": "67e43c9d50bd8da6cccc3c8dfc76b26d52d750c8", "filename": "gcc/testsuite/objc.dg/gnu-api-2-objc.m", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'objc', covering all functions starting with 'objc'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -103,7 +104,10 @@ int main(int argc, void **args)\n   printf (\"Testing objc_disposeClassPair ()...\\n\");\n   {\n     Method method = class_getInstanceMethod (objc_getClass (\"MySubClass\"), @selector (setVariable:));\n-    Class new_class = objc_allocateClassPair (objc_getClass (\"MyRootClass\"), \"MyNewSubClass\", 0);\n+    Class new_class = objc_allocateClassPair (objc_getClass (\"MyRootClass\"), \"MyNewSubClass2\", 0);\n+\n+    if (new_class == Nil)\n+      abort ();\n \n     /* Add a bit of everything to the class to exercise undoing all these changes.  */\n "}, {"sha": "db9576fc6fc680f5299c708195d438b3c2e224a8", "filename": "gcc/testsuite/objc.dg/gnu-api-2-object.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'object', covering all functions starting with 'object'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol"}, {"sha": "8ac34e981f1d1b596dcce3953cb3af07d54a4beb", "filename": "gcc/testsuite/objc.dg/gnu-api-2-property.m", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-property.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-property.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-property.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'property', covering all functions starting with 'property'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -50,15 +51,21 @@ int main(int argc, void **args)\n   /* TODO: Test new ABI (when available).  */\n   printf (\"Testing property_getAttributes () ...\\n\");\n   {\n+    /* The Apple/NeXT runtime seems to crash on the following.  */\n+#ifdef __GNU_LIBOBJC__\n     if (property_getAttributes (NULL) != NULL)\n       abort ();\n+#endif\n   }\n \n   /* TODO: Test new ABI (when available).  */\n   printf (\"Testing property_getName () ...\\n\");\n   {\n+    /* The Apple/NeXT runtime seems to crash on the following.  */\n+#ifdef __GNU_LIBOBJC__\n     if (property_getName (NULL) != NULL)\n       abort ();\n+#endif\n   }\n \n   return 0;"}, {"sha": "84aca5d2c9561bf61510868a1b1cbbfc02116ac6", "filename": "gcc/testsuite/objc.dg/gnu-api-2-protocol.m", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-protocol.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029b98c85fd1fed4838f3d4249aa39f9f12873e6/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-protocol.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-protocol.m?ref=029b98c85fd1fed4838f3d4249aa39f9f12873e6", "patch": "@@ -3,7 +3,6 @@\n   This is test 'protocol', covering all functions starting with 'protocol'.  */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */\n@@ -16,11 +15,13 @@ @interface MyRootClass\n { Class isa; }\n + alloc;\n - init;\n++ initialize;\n @end\n \n @implementation MyRootClass\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n++ initialize { return self; }\n @end\n \n @protocol MyProtocol\n@@ -88,7 +89,7 @@ int main(int argc, void **args)\n   printf (\"Testing protocol_copyPropertyList ()...\\n\");\n   {\n     unsigned int count;\n-    Property *list;\n+    objc_property_t *list;\n \n     list = protocol_copyPropertyList (@protocol (MyProtocol), &count);\n \n@@ -136,7 +137,7 @@ int main(int argc, void **args)\n   /* TODO: Test new ABI (when available).  */\n   printf (\"Testing protocol_getProperty ()...\\n\");\n   {\n-    Property property;\n+    objc_property_t property;\n \n     property = protocol_getProperty (objc_getProtocol (\"MyProtocol\"), \"someProperty\",\n \t\t\t\t     YES, YES);"}]}