{"sha": "a1a82749bab505e884b71c83c37bac9e78b7112d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhODI3NDliYWI1MDVlODg0YjcxYzgzYzM3YmFjOWU3OGI3MTEyZA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2009-12-09T21:31:49Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2009-12-09T21:31:49Z"}, "message": "pa-signal.h: Do not include ucontext.h.\n\n\t* include/pa-signal.h: Do not include ucontext.h.\n\t(SIGNAL_HANDLER): Add __attribute__ ((unused)) to signal handler\n\targuments.\n\t(MAKE_THROW_FRAME): Do not adjust program counter.\n\t* include/hppa-signal.h: Do not include sys/types.h, sys/syscall.h and\n\tunistd.h.\n\t(MAKE_THROW_FRAME): Do not adjust program counter.\n\t(HANDLE_FPE): Define.\n\t(INIT_SEGV, INIT_FPE): Revise indentation.\n\nFrom-SVN: r155116", "tree": {"sha": "c94f37ec30185e17faa6b719270647b7d590a4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94f37ec30185e17faa6b719270647b7d590a4d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1a82749bab505e884b71c83c37bac9e78b7112d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a82749bab505e884b71c83c37bac9e78b7112d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1a82749bab505e884b71c83c37bac9e78b7112d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a82749bab505e884b71c83c37bac9e78b7112d/comments", "author": null, "committer": null, "parents": [{"sha": "5df19a915e5519446f457d5be782066f178da12d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df19a915e5519446f457d5be782066f178da12d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df19a915e5519446f457d5be782066f178da12d"}], "stats": {"total": 113, "additions": 47, "deletions": 66}, "files": [{"sha": "adef8782f74f3b0cf90f28112e4f77f65f607b11", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a82749bab505e884b71c83c37bac9e78b7112d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a82749bab505e884b71c83c37bac9e78b7112d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1a82749bab505e884b71c83c37bac9e78b7112d", "patch": "@@ -1,3 +1,15 @@\n+2009-12-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* include/pa-signal.h: Do not include ucontext.h.\n+\t(SIGNAL_HANDLER): Add __attribute__ ((unused)) to signal handler\n+\targuments.\n+\t(MAKE_THROW_FRAME): Do not adjust program counter.\n+\t* include/hppa-signal.h: Do not include sys/types.h, sys/syscall.h and\n+\tunistd.h.\n+\t(MAKE_THROW_FRAME): Do not adjust program counter.\n+\t(HANDLE_FPE): Define.\n+\t(INIT_SEGV, INIT_FPE): Revise indentation.\n+\n 2009-12-09  Bryce McKinlay  <bmckinlay@gmail.com>\n \n \tPR java/41991  "}, {"sha": "116a62ee852eba02954bcb6cd021be40f16cb6cc", "filename": "libjava/include/hppa-signal.h", "status": "modified", "additions": 29, "deletions": 48, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a82749bab505e884b71c83c37bac9e78b7112d/libjava%2Finclude%2Fhppa-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a82749bab505e884b71c83c37bac9e78b7112d/libjava%2Finclude%2Fhppa-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fhppa-signal.h?ref=a1a82749bab505e884b71c83c37bac9e78b7112d", "patch": "@@ -1,68 +1,49 @@\n /* hppa-signal.h - Catch runtime signals and turn them into exceptions,\n    on a HP-UX 11 PA system.  */\n \n-/* Copyright (C) 2006  Free Software Foundation\n+/* Copyright (C) 2006, 2009  Free Software Foundation\n \n    This file is part of libgcj.\n \n This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-/* This file is really more of a specification.  The rest of the system\n-   should be arranged so that this Just Works.  */\n-\n #ifndef JAVA_SIGNAL_H\n-# define JAVA_SIGNAL_H 1\n+#define JAVA_SIGNAL_H 1\n \n-#include <sys/types.h>\n #include <signal.h>\n-#include <sys/syscall.h>\n-#include <unistd.h>\n \n-# define HANDLE_SEGV 1\n-# undef HANDLE_FPE\n+#define HANDLE_SEGV 1\n+#define HANDLE_FPE 1\n \n #define SIGNAL_HANDLER(_name)\t\t\t\t\t\t\\\n-  static void _name (int _dummy __attribute__ ((unused)),\t\t\\\n-\t\t     siginfo_t *_info __attribute__ ((__unused__)),\t\\\n-\t\t     void *arg __attribute__ ((__unused__)))\n-\n-#define MAKE_THROW_FRAME(_exception)\t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  ucontext_t *_context = (ucontext_t *) arg;\t\t\t\t\\\n-  (void)_dummy;\t\t\t\t\t\t\t\t\\\n-  (void)_info;\t\t\t\t\t\t\t\t\\\n-  mcontext_t *mc = &(_context->uc_mcontext);\t\t\t\t\\\n-  SetSSReg (mc, ss_pcoq_head, GetSSReg (mc, ss_pcoq_tail));\t\t\\\n-  SetSSReg (mc, ss_pcsq_head, GetSSReg (mc, ss_pcsq_tail));\t\t\\\n-  /* This part is not quit right if the head pc was pointing\t\t\\\n-     at a branch.  The tail needs to be adjusted to the branch\t\t\\\n-     target if the branch is taken.  The tail space register\t\t\\\n-     may need adjustment as well if the branch is an interspace\t\t\\\n-     branch.  */\t\t\t\t\t\t\t\\\n-  SetSSReg (mc, ss_pcoq_tail, (GetSSReg (mc, ss_pcoq_tail) + 4));\t\\\n-\t\t\t\t\t\t\t\t\t\\\n- }\t\t\t\t\t\t\t\t\t\\\n+static void  _name (int _dummy __attribute__ ((unused)),\t\t\\\n+\t\t    siginfo_t *_info __attribute__ ((__unused__)),\t\\\n+\t\t    void *arg __attribute__ ((__unused__)))\n+\n+#define MAKE_THROW_FRAME(_exception)\n+\n+#define INIT_SEGV\t\t\t\t\\\n+do\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    struct sigaction sa;\t\t\t\\\n+    sa.sa_sigaction = catch_segv;\t\t\\\n+    sigemptyset (&sa.sa_mask);\t\t\t\\\n+    sa.sa_flags = SA_SIGINFO | SA_NODEFER;\t\\\n+    sigaction (SIGSEGV, &sa, NULL);\t\t\\\n+  }\t\t\t\t\t\t\\\n while (0)\n \n-# define INIT_SEGV\t\t\t\t\\\n-  do {\t\t\t\t\t\t\\\n-      struct sigaction sa;\t\t\t\\\n-      sa.sa_sigaction = catch_segv;\t\t\\\n-      sigemptyset (&sa.sa_mask);\t\t\\\n-      sa.sa_flags = SA_SIGINFO | SA_NODEFER;\t\\\n-      sigaction (SIGSEGV, &sa, NULL);\t\t\\\n-    } while (0)\n-\n-# define INIT_FPE\t\t\t\t\\\n-  do {\t\t\t\t\t\t\\\n-      struct sigaction sa;\t\t\t\\\n-      sa.sa_sigaction = catch_fpe;\t\t\\\n-      sigemptyset (&sa.sa_mask);\t\t\\\n-      sa.sa_flags = SA_SIGINFO | SA_NODEFER;\t\\\n-      sigaction (SIGFPE, &sa, NULL);\t\t\\\n-    } while (0)\n+#define INIT_FPE\t\t\t\t\\\n+do\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    struct sigaction sa;\t\t\t\\\n+    sa.sa_sigaction = catch_fpe;\t\t\\\n+    sigemptyset (&sa.sa_mask);\t\t\t\\\n+    sa.sa_flags = SA_SIGINFO | SA_NODEFER;\t\\\n+    sigaction (SIGFPE, &sa, NULL);\t\t\\\n+  }\t\t\t\t\t\t\\\n+while (0)\n \n #endif /* JAVA_SIGNAL_H */"}, {"sha": "add132517376e516d3a7440803460c064a815fba", "filename": "libjava/include/pa-signal.h", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a82749bab505e884b71c83c37bac9e78b7112d/libjava%2Finclude%2Fpa-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a82749bab505e884b71c83c37bac9e78b7112d/libjava%2Finclude%2Fpa-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fpa-signal.h?ref=a1a82749bab505e884b71c83c37bac9e78b7112d", "patch": "@@ -1,6 +1,6 @@\n // pa-signal.h - Catch runtime signals and turn them into exceptions.\n \n-/* Copyright (C) 1998, 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2009  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -12,29 +12,17 @@ details.  */\n #define JAVA_SIGNAL_H 1\n \n #include <signal.h>\n-#include <ucontext.h>\n #include <sys/syscall.h>\n \n #define HANDLE_SEGV 1\n #define HANDLE_FPE 1\n \n-#define SIGNAL_HANDLER(_name) \t\t\t\t\t\\\n-static void _Jv_##_name (int _dummy, siginfo_t *_info, void *arg)\n+#define SIGNAL_HANDLER(_name)\t\t\t\t\t\t\\\n+static void _Jv_##_name (int _dummy __attribute__ ((unused)),\t\t\\\n+\t\t\t siginfo_t *_info __attribute__ ((__unused__)), \\\n+\t\t\t void *arg __attribute__ ((__unused__)))\n \n-#define MAKE_THROW_FRAME(_exception)\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  struct ucontext *uc = (struct ucontext *)arg;\t\t\t\\\n-  struct sigcontext *sc = &uc->uc_mcontext;\t\t\t\\\n-  (void)_dummy;\t\t\t\t\t\t\t\\\n-  (void)_info;\t\t\t\t\t\t\t\\\n-  /* Advance the program counter so that it is after the start \t\\\n-     of the instruction:  the exception handler expects\t\t\\\n-     the PC to point to the instruction after a call. */\t\\\n-  sc->sc_iaoq[0] = sc->sc_iaoq[1];\t\t\t\t\\\n-  sc->sc_iaoq[1] += 4;\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\\\n-while (0)\n+#define MAKE_THROW_FRAME(_exception)\n \n #define INIT_SEGV\t\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\\"}]}