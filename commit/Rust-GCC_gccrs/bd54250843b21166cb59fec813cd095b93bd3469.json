{"sha": "bd54250843b21166cb59fec813cd095b93bd3469", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ1NDI1MDg0M2IyMTE2NmNiNTlmZWM4MTNjZDA5NWI5M2JkMzQ2OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-02-28T06:34:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-02-28T06:34:20Z"}, "message": "Revert\n\t2016-02-26  Richard Biener  <rguenther@suse.de>\n\t\t    Jeff Law  <law@redhat.com>\n\n\tPR tree-optimization/69740\n\t* cfghooks.c (remove_edge): Request loop fixups if we delete\n\tan edge that might turn an irreducible loop into a natural\n\tloop.\n\n\tRevert\n\t2016-02-26  Richard Biener  <rguenther@suse.de>\n\t\t    Jeff Law  <law@redhat.com>\n\n\tPR tree-optimization/69740\n\t* gcc.c-torture/compile/pr69740-1.c: New test.\n\t* gcc.c-torture/compile/pr69740-2.c: New test.\n\nFrom-SVN: r233787", "tree": {"sha": "26474a452da2468c2d5b072574636f450c0fef5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26474a452da2468c2d5b072574636f450c0fef5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd54250843b21166cb59fec813cd095b93bd3469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd54250843b21166cb59fec813cd095b93bd3469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd54250843b21166cb59fec813cd095b93bd3469", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd54250843b21166cb59fec813cd095b93bd3469/comments", "author": null, "committer": null, "parents": [{"sha": "460006a23091588c4a42423eeb91128b48dcd0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460006a23091588c4a42423eeb91128b48dcd0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/460006a23091588c4a42423eeb91128b48dcd0f5"}], "stats": {"total": 67, "additions": 22, "deletions": 45}, "files": [{"sha": "85c6301bf6d0de8c1c5e3ae90366025c37b41bad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd54250843b21166cb59fec813cd095b93bd3469/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd54250843b21166cb59fec813cd095b93bd3469/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd54250843b21166cb59fec813cd095b93bd3469", "patch": "@@ -1,3 +1,14 @@\n+2016-02-27  Jeff Law  <law@redhat.com>\n+\n+\tRevert\n+\t2016-02-26  Richard Biener  <rguenther@suse.de>\n+\t\t    Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/69740\n+\t* cfghooks.c (remove_edge): Request loop fixups if we delete\n+\tan edge that might turn an irreducible loop into a natural\n+\tloop.\n+\n 2016-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/69896"}, {"sha": "bbb1017fd1f951637314ce3a8e145acdb7f078d5", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd54250843b21166cb59fec813cd095b93bd3469/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd54250843b21166cb59fec813cd095b93bd3469/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=bd54250843b21166cb59fec813cd095b93bd3469", "patch": "@@ -408,20 +408,7 @@ void\n remove_edge (edge e)\n {\n   if (current_loops != NULL)\n-    {\n-      rescan_loop_exit (e, false, true);\n-\n-      /* Removal of an edge inside an irreducible region or which leads\n-\t to an irreducible region can turn the region into a natural loop.\n-\t In that case, ask for the loop structure fixups.\n-\n-\t FIXME: Note that LOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS is not always\n-\t set, so always ask for fixups when removing an edge in that case.  */\n-      if (!loops_state_satisfies_p (LOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS)\n-\t  || (e->flags & EDGE_IRREDUCIBLE_LOOP)\n-\t  || (e->dest->flags & BB_IRREDUCIBLE_LOOP))\n-\tloops_state_set (LOOPS_NEED_FIXUP);\n-    }\n+    rescan_loop_exit (e, false, true);\n \n   /* This is probably not needed, but it doesn't hurt.  */\n   /* FIXME: This should be called via a remove_edge hook.  */"}, {"sha": "c809e2ca8eb3846239f98ae8d86533698468f204", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd54250843b21166cb59fec813cd095b93bd3469/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd54250843b21166cb59fec813cd095b93bd3469/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd54250843b21166cb59fec813cd095b93bd3469", "patch": "@@ -1,3 +1,13 @@\n+2016-02-27  Jeff Law  <law@redhat.com>\n+\n+\tRevert\n+\t2016-02-26  Richard Biener  <rguenther@suse.de>\n+\t\t    Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/69740\n+\t* gcc.c-torture/compile/pr69740-1.c: New test.\n+\t* gcc.c-torture/compile/pr69740-2.c: New test.\n+\n 2016-02-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/69910"}, {"sha": "ac867d8a99926d0a0dbe7422f65e20902ff24d32", "filename": "gcc/testsuite/gcc.c-torture/compile/pr69740-1.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460006a23091588c4a42423eeb91128b48dcd0f5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69740-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460006a23091588c4a42423eeb91128b48dcd0f5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69740-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69740-1.c?ref=460006a23091588c4a42423eeb91128b48dcd0f5", "patch": "@@ -1,12 +0,0 @@\n-char a;\n-short b;\n-void fn1() {\n-  if (b)\n-    ;\n-  else {\n-    int c[1] = {0};\n-  l1:;\n-  }\n-  if (a)\n-    goto l1;\n-}"}, {"sha": "a89c9a0fd12e972bd1605345acffc2422ebdf721", "filename": "gcc/testsuite/gcc.c-torture/compile/pr69740-2.c", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460006a23091588c4a42423eeb91128b48dcd0f5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69740-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460006a23091588c4a42423eeb91128b48dcd0f5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69740-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69740-2.c?ref=460006a23091588c4a42423eeb91128b48dcd0f5", "patch": "@@ -1,19 +0,0 @@\n-inline int foo(int *p1, int p2) {\n-  int z = *p1;\n-  while (z > p2)\n-    p2 = 2;\n-  return z;\n-}\n-int main() {\n-  int i;\n-  for (;;) {\n-    int j, k;\n-    i = foo(&k, 7);\n-    if (k)\n-      j = i;\n-    else\n-      k = j;\n-    if (2 != j)\n-      __builtin_abort();\n-  }\n-}"}]}