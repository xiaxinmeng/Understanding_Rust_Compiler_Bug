{"sha": "9938b5d971c49e642b6050e427ba4e5816cec7d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzOGI1ZDk3MWM0OWU2NDJiNjA1MGU0MjdiYTRlNTgxNmNlYzdkOQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-05-05T20:31:45Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-05-05T20:31:45Z"}, "message": "simd-6.c: New.\n\n2003-05-05  Aldy Hernandez  <aldyh@redhat.com>\n\n        * testsuite/gcc.c-torture/compile/simd-6.c: New.\n\n        * c-typeck.c (digest_init): Handle arrays of vector constants.\n\nFrom-SVN: r66501", "tree": {"sha": "e0395b7cdcefb033285841242f80cfd86facbea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0395b7cdcefb033285841242f80cfd86facbea1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9938b5d971c49e642b6050e427ba4e5816cec7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9938b5d971c49e642b6050e427ba4e5816cec7d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9938b5d971c49e642b6050e427ba4e5816cec7d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9938b5d971c49e642b6050e427ba4e5816cec7d9/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5f3cd6b647a78dedc9febf193651f6498939f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f3cd6b647a78dedc9febf193651f6498939f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f3cd6b647a78dedc9febf193651f6498939f79"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "3cf8d08105c8972620d7415935c2210f0d52e9af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9938b5d971c49e642b6050e427ba4e5816cec7d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9938b5d971c49e642b6050e427ba4e5816cec7d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9938b5d971c49e642b6050e427ba4e5816cec7d9", "patch": "@@ -1,3 +1,9 @@\n+2003-05-05  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * testsuite/gcc.c-torture/compile/simd-6.c: New.\n+\n+        * c-typeck.c (digest_init): Handle arrays of vector constants.\n+\n 2003-05-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (expand_builtin_mempcpy): New function."}, {"sha": "c4e482ee240b990d186387753e54890b2be59309", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9938b5d971c49e642b6050e427ba4e5816cec7d9/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9938b5d971c49e642b6050e427ba4e5816cec7d9/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=9938b5d971c49e642b6050e427ba4e5816cec7d9", "patch": "@@ -4787,10 +4787,17 @@ digest_init (type, init, require_constant)\n   /* Build a VECTOR_CST from a *constant* vector constructor.  If the\n      vector constructor is not constant (e.g. {1,2,3,foo()}) then punt\n      below and handle as a constructor.  */\n-  if (code == VECTOR_TYPE\n-      && comptypes (TREE_TYPE (inside_init), type)\n-      && TREE_CONSTANT (inside_init))\n-    return build_vector (type, CONSTRUCTOR_ELTS (inside_init));\n+    if (code == VECTOR_TYPE\n+        && comptypes (TREE_TYPE (inside_init), type)\n+        && TREE_CONSTANT (inside_init))\n+      {\n+\tif (TREE_CODE (inside_init) == VECTOR_CST\n+\t    && comptypes (TYPE_MAIN_VARIANT (TREE_TYPE (inside_init)),\n+\t\t\t  TYPE_MAIN_VARIANT (type)))\n+\t  return inside_init;\n+\telse\n+\t  return build_vector (type, CONSTRUCTOR_ELTS (inside_init));\n+      }\n \n   /* Any type can be initialized\n      from an expression of the same type, optionally with braces.  */"}, {"sha": "9106a73363d9ab9fb75d12bd298db82027d19401", "filename": "gcc/testsuite/gcc.c-torture/compile/simd-6.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9938b5d971c49e642b6050e427ba4e5816cec7d9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9938b5d971c49e642b6050e427ba4e5816cec7d9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-6.c?ref=9938b5d971c49e642b6050e427ba4e5816cec7d9", "patch": "@@ -0,0 +1,3 @@\n+typedef int __attribute__((mode(V2SI))) vec;\n+\n+vec a[] = {(vec) {1, 2}, {3, 4}};"}]}