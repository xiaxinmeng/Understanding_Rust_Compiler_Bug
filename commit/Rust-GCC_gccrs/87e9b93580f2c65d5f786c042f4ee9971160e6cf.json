{"sha": "87e9b93580f2c65d5f786c042f4ee9971160e6cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlOWI5MzU4MGYyYzY1ZDVmNzg2YzA0MmY0ZWU5OTcxMTYwZTZjZg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-01-29T16:17:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:17:48Z"}, "message": "sem_util.ads, [...] (In_Pragma_Expression): New function.\n\n2014-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.ads, sem_util.adb (In_Pragma_Expression): New function.\n\t* sem_warn.adb (Check_References): Suppress warnings if inside\n\tInitial_Condition pragma.\n\nFrom-SVN: r207266", "tree": {"sha": "7f398ae8a51242fecb9eede9b5904481094467d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f398ae8a51242fecb9eede9b5904481094467d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87e9b93580f2c65d5f786c042f4ee9971160e6cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e9b93580f2c65d5f786c042f4ee9971160e6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e9b93580f2c65d5f786c042f4ee9971160e6cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e9b93580f2c65d5f786c042f4ee9971160e6cf/comments", "author": null, "committer": null, "parents": [{"sha": "69b09963574f716ae1fdc00ebf2c5483d75d14c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b09963574f716ae1fdc00ebf2c5483d75d14c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69b09963574f716ae1fdc00ebf2c5483d75d14c1"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "fec258c0aba6e35e8e1edbcd2d1ef3361b1a1bfc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=87e9b93580f2c65d5f786c042f4ee9971160e6cf", "patch": "@@ -1,3 +1,9 @@\n+2014-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.ads, sem_util.adb (In_Pragma_Expression): New function.\n+\t* sem_warn.adb (Check_References): Suppress warnings if inside\n+\tInitial_Condition pragma.\n+\n 2014-01-29  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Check_Missing_Part_Of): List all values of"}, {"sha": "58a28bbeecb0d3cd5e772154e1229c7507701e17", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=87e9b93580f2c65d5f786c042f4ee9971160e6cf", "patch": "@@ -8447,6 +8447,25 @@ package body Sem_Util is\n       return False;\n    end In_Parameter_Specification;\n \n+   --------------------------\n+   -- In_Pragma_Expression --\n+   --------------------------\n+\n+   function In_Pragma_Expression (N : Node_Id; Nam : Name_Id) return Boolean is\n+      P : Node_Id;\n+   begin\n+      P := Parent (N);\n+      loop\n+         if No (P) then\n+            return False;\n+         elsif Nkind (P) = N_Pragma and then Pragma_Name (P) = Nam then\n+            return True;\n+         else\n+            P := Parent (P);\n+         end if;\n+      end loop;\n+   end In_Pragma_Expression;\n+\n    -------------------------------------\n    -- In_Reverse_Storage_Order_Object --\n    -------------------------------------"}, {"sha": "5d32cfa64fb201373d8a68aea813f541a995dce7", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=87e9b93580f2c65d5f786c042f4ee9971160e6cf", "patch": "@@ -1006,15 +1006,18 @@ package Sem_Util is\n    function In_Parameter_Specification (N : Node_Id) return Boolean;\n    --  Returns True if node N belongs to a parameter specification\n \n+   function In_Pragma_Expression (N : Node_Id; Nam : Name_Id) return Boolean;\n+   --  Returns true if the expression N occurs within a pragma with name Nam\n+\n    function In_Reverse_Storage_Order_Object (N : Node_Id) return Boolean;\n    --  Returns True if N denotes a component or subcomponent in a record or\n    --  array that has Reverse_Storage_Order.\n \n    function In_Subprogram_Or_Concurrent_Unit return Boolean;\n    --  Determines if the current scope is within a subprogram compilation unit\n-   --  (inside a subprogram declaration, subprogram body, or generic\n-   --  subprogram declaration) or within a task or protected body. The test is\n-   --  for appearing anywhere within such a construct (that is it does not need\n+   --  (inside a subprogram declaration, subprogram body, or generic subprogram\n+   --  declaration) or within a task or protected body. The test is for\n+   --  appearing anywhere within such a construct (that is it does not need\n    --  to be directly within).\n \n    function In_Visible_Part (Scope_Id : Entity_Id) return Boolean;"}, {"sha": "3c12676c52dc79f182b6ed7cc18d49f919e7cd97", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e9b93580f2c65d5f786c042f4ee9971160e6cf/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=87e9b93580f2c65d5f786c042f4ee9971160e6cf", "patch": "@@ -1315,6 +1315,14 @@ package body Sem_Warn is\n                      UR := Expression (UR);\n                   end loop;\n \n+                  --  Don't issue warning if appearing inside Initial_Condition\n+                  --  pragma or aspect, since that expression is not evaluated\n+                  --  at the point where it occurs in the source.\n+\n+                  if In_Pragma_Expression (UR, Name_Initial_Condition) then\n+                     goto Continue;\n+                  end if;\n+\n                   --  Here we issue the warning, all checks completed\n \n                   --  If we have a return statement, this was a case of an OUT\n@@ -1380,7 +1388,6 @@ package body Sem_Warn is\n                               end if;\n                            end if;\n                         end if;\n-\n                         --  All other cases of unset reference active\n \n                      elsif not Warnings_Off_E1 then"}]}