{"sha": "99d520ade527dcb82b6f3057ea571caaeb00c2b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlkNTIwYWRlNTI3ZGNiODJiNmYzMDU3ZWE1NzFjYWFlYjAwYzJiNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2011-09-02T10:07:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T10:07:35Z"}, "message": "sinfo.ads, sinfo.adb: New semantic attribute Premature_Use...\n\n2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sinfo.ads, sinfo.adb: New semantic attribute Premature_Use,\n\tpresent in incomplete type declarations to refine the error\n\tmessage the full declaration is in the same unit.\n\t* sem_ch4.adb (Analyze_Selected_Component): If the prefix is of\n\tan incomplete type, set the Premature_Use for additional message.\n\t* sem_ch3.adb (Find_Type_Name): If partial view is incomplete\n\tand Premature_Use is set, place additional information at the\n\tpoint of premature use.\n\nFrom-SVN: r178461", "tree": {"sha": "ce09a607f900a207daf6f88246d93c39a6056b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce09a607f900a207daf6f88246d93c39a6056b95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99d520ade527dcb82b6f3057ea571caaeb00c2b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d520ade527dcb82b6f3057ea571caaeb00c2b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d520ade527dcb82b6f3057ea571caaeb00c2b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d520ade527dcb82b6f3057ea571caaeb00c2b7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b5588dd53fd0da82e406f5de6e9f189f89f1b1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5588dd53fd0da82e406f5de6e9f189f89f1b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5588dd53fd0da82e406f5de6e9f189f89f1b1a"}], "stats": {"total": 90, "additions": 83, "deletions": 7}, "files": [{"sha": "52c8f1cf2bb909f4282a5a3329bbd017cb577776", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=99d520ade527dcb82b6f3057ea571caaeb00c2b7", "patch": "@@ -1,3 +1,14 @@\n+2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb: New semantic attribute Premature_Use,\n+\tpresent in incomplete type declarations to refine the error\n+\tmessage the full declaration is in the same unit.\n+\t* sem_ch4.adb (Analyze_Selected_Component): If the prefix is of\n+\tan incomplete type, set the Premature_Use for additional message.\n+\t* sem_ch3.adb (Find_Type_Name): If partial view is incomplete\n+\tand Premature_Use is set, place additional information at the\n+\tpoint of premature use.\n+\n 2011-09-02  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch6.adb: (Check_Post_State): Suppress warning"}, {"sha": "372f7d27ff302582d66960135654c863504c28e2", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=99d520ade527dcb82b6f3057ea571caaeb00c2b7", "patch": "@@ -3313,17 +3313,21 @@ package body Sem_Ch3 is\n          --  Case of initialization present\n \n          else\n-\n-            --  Not allowed in Ada 83\n+            --  Check restrictions in Ada 83 and SPARK modes\n \n             if not Constant_Present (N) then\n \n-               --  A declaration of unconstrained type in SPARK is limited,\n-               --  the only exception to this is the admission of declaration\n-               --  of constants of type string.\n+               --  In SPARK, a declaration of unconstrained type is allowed\n+               --  only for constants of type string.\n+\n+               --  Why no check for Comes_From_Source here, seems wrong ???\n+               --  Where is check to differentiate string case ???\n \n                Check_SPARK_Restriction\n-                 (\"declaration of unconstrained type is limited\", E);\n+                 (\"declaration of object of unconstrained type not allowed\",\n+                  E);\n+\n+               --  Unconstrained variables not allowed in Ada 83 mode\n \n                if Ada_Version = Ada_83\n                  and then Comes_From_Source (Object_Definition (N))\n@@ -15056,6 +15060,14 @@ package body Sem_Ch3 is\n                Tag_Mismatch;\n             end if;\n          end if;\n+         if Present (Prev)\n+           and then Nkind (Parent (Prev)) = N_Incomplete_Type_Declaration\n+           and then Present (Premature_Use (Parent (Prev)))\n+         then\n+            Error_Msg_Sloc := Sloc (N);\n+            Error_Msg_N\n+              (\"\\full declaration #\", Premature_Use (Parent (Prev)));\n+         end if;\n \n          return New_Id;\n       end if;"}, {"sha": "e539a5679f0e2e7d23c0338f28218a8af627873c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=99d520ade527dcb82b6f3057ea571caaeb00c2b7", "patch": "@@ -4322,6 +4322,28 @@ package body Sem_Ch4 is\n             Error_Msg_Node_2 := First_Subtype (Prefix_Type);\n             Error_Msg_NE (\"no selector& for}\", N, Sel);\n \n+            --  If prefix is incomplete, dd information.\n+\n+            if Is_Incomplete_Type (Type_To_Use) then\n+               declare\n+                  Inc : constant Entity_Id := First_Subtype (Type_To_Use);\n+\n+               begin\n+                  if From_With_Type (Scope (Type_To_Use)) then\n+                     Error_Msg_NE\n+                       (\"\\limited view of& has no components\", N, Inc);\n+                  else\n+                     Error_Msg_NE\n+                       (\"\\premature usage of incomplete type&\", N, Inc);\n+                     if\n+                       Nkind (Parent (Inc)) = N_Incomplete_Type_Declaration\n+                     then\n+                        Set_Premature_Use (Parent (Inc), N);\n+                     end if;\n+                  end if;\n+               end;\n+            end if;\n+\n             Check_Misspelled_Selector (Type_To_Use, Sel);\n          end if;\n "}, {"sha": "32d993880b7de289b8d713e087b0079a00ed44b7", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=99d520ade527dcb82b6f3057ea571caaeb00c2b7", "patch": "@@ -2459,6 +2459,14 @@ package body Sinfo is\n       return Node3 (N);\n    end Prefix;\n \n+   function Premature_Use\n+      (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Incomplete_Type_Declaration);\n+      return Node5 (N);\n+   end Premature_Use;\n+\n    function Present_Expr\n       (N : Node_Id) return Uint is\n    begin\n@@ -5510,6 +5518,14 @@ package body Sinfo is\n       Set_Node3_With_Parent (N, Val);\n    end Set_Prefix;\n \n+   procedure Set_Premature_Use\n+      (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Incomplete_Type_Declaration);\n+      Set_Node5 (N, Val);\n+   end Set_Premature_Use;\n+\n    procedure Set_Present_Expr\n       (N : Node_Id; Val : Uint) is\n    begin"}, {"sha": "203d18643b4c54383c1808d4f39b52c72a6a4bcf", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d520ade527dcb82b6f3057ea571caaeb00c2b7/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=99d520ade527dcb82b6f3057ea571caaeb00c2b7", "patch": "@@ -1598,6 +1598,12 @@ package Sinfo is\n    --    package specification. This field is Empty for library bodies (the\n    --    parent spec in this case can be found from the corresponding spec).\n \n+   --  Premature_Use (Node5-Sem)\n+   --    Present in N_Incomplete_Type_Declaration node. Used for improved\n+   --    error diagnostics: if there is a premature usage of an incomplete\n+   --    type, a subsequently generated error message indicates the position\n+   --    of its full declaration.\n+\n    --  Present_Expr (Uint3-Sem)\n    --    Present in an N_Variant node. This has a meaningful value only after\n    --    Gigi has back annotated the tree with representation information. At\n@@ -3091,6 +3097,7 @@ package Sinfo is\n       --  Discriminant_Specifications (List4) (set to No_List if no\n       --   discriminant part, or if the discriminant part is an\n       --   unknown discriminant part)\n+      --  Premature_Use (Node5-Sem) used for improved diagnostics.\n       --  Unknown_Discriminants_Present (Flag13) set if (<>) discriminant\n       --  Tagged_Present (Flag15)\n \n@@ -8814,6 +8821,9 @@ package Sinfo is\n    function Prefix\n      (N : Node_Id) return Node_Id;    -- Node3\n \n+   function Premature_Use\n+     (N : Node_Id) return Node_Id;    -- Node5\n+\n    function Present_Expr\n      (N : Node_Id) return Uint;       -- Uint3\n \n@@ -9786,6 +9796,9 @@ package Sinfo is\n    procedure Set_Prefix\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n+   procedure Set_Premature_Use\n+     (N : Node_Id; Val : Node_Id);            -- Node5\n+\n    procedure Set_Present_Expr\n      (N : Node_Id; Val : Uint);               -- Uint3\n \n@@ -10420,7 +10433,7 @@ package Sinfo is\n         2 => False,   --  unused\n         3 => False,   --  unused\n         4 => True,    --  Discriminant_Specifications (List4)\n-        5 => False),  --  unused\n+        5 => False),  --  Premature_Use\n \n      N_Explicit_Dereference =>\n        (1 => False,   --  unused\n@@ -11993,6 +12006,7 @@ package Sinfo is\n    pragma Inline (Pragmas_After);\n    pragma Inline (Pragmas_Before);\n    pragma Inline (Prefix);\n+   pragma Inline (Premature_Use);\n    pragma Inline (Present_Expr);\n    pragma Inline (Prev_Ids);\n    pragma Inline (Print_In_Hex);\n@@ -12314,6 +12328,7 @@ package Sinfo is\n    pragma Inline (Set_Pragmas_After);\n    pragma Inline (Set_Pragmas_Before);\n    pragma Inline (Set_Prefix);\n+   pragma Inline (Set_Premature_Use);\n    pragma Inline (Set_Present_Expr);\n    pragma Inline (Set_Prev_Ids);\n    pragma Inline (Set_Print_In_Hex);"}]}