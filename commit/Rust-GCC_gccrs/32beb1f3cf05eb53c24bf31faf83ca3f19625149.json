{"sha": "32beb1f3cf05eb53c24bf31faf83ca3f19625149", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJiZWIxZjNjZjA1ZWI1M2MyNGJmMzFmYWY4M2NhM2YxOTYyNTE0OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T12:01:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T12:01:56Z"}, "message": "[multiple changes]\n\n2009-04-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_aggr.adb: Minor code reorganization, no behaviour change.\n\n2009-04-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Use_One_Type): Handle properly a redundant use type\n\tclause in a unit that is a package body or a subunit, when the previous\n\tclause appears in a spec or a parent.\n\nFrom-SVN: r146250", "tree": {"sha": "e685d9539c91a823c683d17cb4684f75fb306407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e685d9539c91a823c683d17cb4684f75fb306407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32beb1f3cf05eb53c24bf31faf83ca3f19625149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32beb1f3cf05eb53c24bf31faf83ca3f19625149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32beb1f3cf05eb53c24bf31faf83ca3f19625149", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32beb1f3cf05eb53c24bf31faf83ca3f19625149/comments", "author": null, "committer": null, "parents": [{"sha": "532bfb0ab9e6f1275c49659aa7939455b8426559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/532bfb0ab9e6f1275c49659aa7939455b8426559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/532bfb0ab9e6f1275c49659aa7939455b8426559"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "67f4c53fb422d566c1ee829403f13605ca5038cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32beb1f3cf05eb53c24bf31faf83ca3f19625149/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32beb1f3cf05eb53c24bf31faf83ca3f19625149/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=32beb1f3cf05eb53c24bf31faf83ca3f19625149", "patch": "@@ -1,3 +1,13 @@\n+2009-04-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_aggr.adb: Minor code reorganization, no behaviour change.\n+\n+2009-04-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Use_One_Type): Handle properly a redundant use type\n+\tclause in a unit that is a package body or a subunit, when the previous\n+\tclause appears in a spec or a parent.\n+\n 2009-04-17  Thomas Quinot  <quinot@adacore.com>\n \n \t* sinfo.ads, exp_aggr.adb, exp_aggr.ads: Minor reformatting"}, {"sha": "61fa79021ca552a919d3907745852466bbd81082", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32beb1f3cf05eb53c24bf31faf83ca3f19625149/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32beb1f3cf05eb53c24bf31faf83ca3f19625149/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=32beb1f3cf05eb53c24bf31faf83ca3f19625149", "patch": "@@ -1226,10 +1226,10 @@ package body Exp_Aggr is\n             if Present (Comp_Type)\n               and then Needs_Finalization (Comp_Type)\n               and then not Is_Limited_Type (Comp_Type)\n-              and then\n-                (not Is_Array_Type (Comp_Type)\n-                   or else not Is_Controlled (Component_Type (Comp_Type))\n-                   or else Nkind (Expr) /= N_Aggregate)\n+              and then not\n+                (Is_Array_Type (Comp_Type)\n+                   and then Is_Controlled (Component_Type (Comp_Type))\n+                   and then Nkind (Expr) = N_Aggregate)\n             then\n                Append_List_To (L,\n                  Make_Adjust_Call ("}, {"sha": "58d9ff68a46fecdb8f7295ae0d0ee13b9ee74b27", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32beb1f3cf05eb53c24bf31faf83ca3f19625149/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32beb1f3cf05eb53c24bf31faf83ca3f19625149/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=32beb1f3cf05eb53c24bf31faf83ca3f19625149", "patch": "@@ -7249,14 +7249,33 @@ package body Sem_Ch8 is\n                      Unit1 := Unit (Parent (Clause1));\n                      Unit2 := Unit (Parent (Clause2));\n \n-                     --  If both clauses are on same unit, report redundancy\n+                     --  If both clauses are on same unit, or one is the body\n+                     --  of the other, or one of them is in a subunit, report\n+                     --  redundancy on the later one.\n \n                      if Unit1 = Unit2 then\n                         Error_Msg_Sloc := Sloc (Current_Use_Clause (T));\n                         Error_Msg_NE\n                           (\"& is already use-visible through previous \"\n                            & \"use_type_clause #?\", Clause1, T);\n                         return;\n+\n+                     elsif Nkind (Unit1) = N_Subunit then\n+                        Error_Msg_Sloc := Sloc (Current_Use_Clause (T));\n+                        Error_Msg_NE\n+                          (\"& is already use-visible through previous \"\n+                           & \"use_type_clause #?\", Clause1, T);\n+                        return;\n+\n+                     elsif Nkind_In (Unit2, N_Package_Body, N_Subprogram_Body)\n+                       and then Nkind (Unit1) /= Nkind (Unit2)\n+                       and then Nkind (Unit1) /= N_Subunit\n+                     then\n+                        Error_Msg_Sloc := Sloc (Clause1);\n+                        Error_Msg_NE\n+                          (\"& is already use-visible through previous \"\n+                           & \"use_type_clause #?\", Current_Use_Clause (T), T);\n+                        return;\n                      end if;\n \n                      --  There is a redundant use type clause in a child unit."}]}