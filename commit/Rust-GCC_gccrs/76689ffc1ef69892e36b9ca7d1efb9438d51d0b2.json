{"sha": "76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY2ODlmZmMxZWY2OTg5MmUzNmI5Y2E3ZDFlZmI5NDM4ZDUxZDBiMg==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-01-16T17:18:05Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-01-16T17:18:05Z"}, "message": "rs6000-c (altivec_overloaded_builtins): Add support for built-in functions vector signed char vec_nabs (vector signed...\n\ngcc/ChangeLog:\n\n2017-01-16  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-c (altivec_overloaded_builtins): Add support\n\tfor built-in functions\n\tvector signed char vec_nabs (vector signed char)\n\tvector signed short vec_nabs (vector signed short)\n\tvector signed int vec_nabs (vector signed int)\n\tvector signed long long vec_nabs (vector signed long long)\n\tvector float vec_nabs (vector float)\n\tvector double vec_nabs (vector double)\n\t* config/rs6000/rs6000-builtin.def: Add definitions for NABS functions\n\tand NABS overload.\n\t* config/rs6000/altivec.md: New define_expand nabs<mode>2 types\n\t* config/rs6000/altivec.h: New define for vec_nabs built-in function.\n\t* doc/extend.texi: Update the documentation file for the new built-in\n\tfunctions.\n\ngcc/testsuite/ChangeLog:\n\n2017-01-16  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3.c: New vec_nabs testcase.\n\t* gcc.target/powerpc/builtins-3-p8.c: New vec_nabs testcase.\n\nFrom-SVN: r244501", "tree": {"sha": "4ade759b4eb3247f5be8b99d2058b04da8b40664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ade759b4eb3247f5be8b99d2058b04da8b40664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a413677093aca39a9a51c40bdead14d9a06593e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a413677093aca39a9a51c40bdead14d9a06593e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a413677093aca39a9a51c40bdead14d9a06593e"}], "stats": {"total": 138, "additions": 136, "deletions": 2}, "files": [{"sha": "5a318f9dc37deface255116538e485d6a54a1b34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -1,3 +1,20 @@\n+2017-01-16  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c (altivec_overloaded_builtins): Add support\n+\tfor built-in functions\n+\tvector signed char vec_nabs (vector signed char)\n+\tvector signed short vec_nabs (vector signed short)\n+\tvector signed int vec_nabs (vector signed int)\n+\tvector signed long long vec_nabs (vector signed long long)\n+\tvector float vec_nabs (vector float)\n+\tvector double vec_nabs (vector double)\n+\t* config/rs6000/rs6000-builtin.def: Add definitions for NABS functions\n+\tand NABS overload.\n+\t* config/rs6000/altivec.md: New define_expand nabs<mode>2 types\n+\t* config/rs6000/altivec.h: New define for vec_nabs built-in function.\n+\t* doc/extend.texi: Update the documentation file for the new built-in\n+\tfunctions.\n+\n 2017-01-16  Martin Sebor  <msebor@redhat.com>\n \n \t* gimple-ssa-sprintf.c (format_directive): Correct a typo in a warning"}, {"sha": "17bc33e9de3d71c6683a809bca69039bbb459431", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -189,6 +189,7 @@\n #define vec_vupklsh __builtin_vec_vupklsh\n #define vec_vupklsb __builtin_vec_vupklsb\n #define vec_abs __builtin_vec_abs\n+#define vec_nabs __builtin_vec_nabs\n #define vec_abss __builtin_vec_abss\n #define vec_add __builtin_vec_add\n #define vec_adds __builtin_vec_adds"}, {"sha": "2a26007c163b28bc5f0529bcdfcc742dd70e3cda", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -2740,6 +2740,33 @@\n   operands[4] = gen_reg_rtx (<MODE>mode);\n })\n \n+;; Generate\n+;;    vspltisw SCRATCH1,0\n+;;    vsubu?m SCRATCH2,SCRATCH1,%1\n+;;    vmins? %0,%1,SCRATCH2\"\n+(define_expand \"nabs<mode>2\"\n+  [(set (match_dup 2) (match_dup 3))\n+   (set (match_dup 4)\n+        (minus:VI2 (match_dup 2)\n+\t\t   (match_operand:VI2 1 \"register_operand\" \"v\")))\n+   (set (match_operand:VI2 0 \"register_operand\" \"=v\")\n+        (smin:VI2 (match_dup 1) (match_dup 4)))]\n+  \"<VI_unit>\"\n+{\n+  int i;\n+  int n_elt = GET_MODE_NUNITS (<MODE>mode);\n+\n+  rtvec v = rtvec_alloc (n_elt);\n+\n+  /* Create an all 0 constant.  */\n+  for (i = 0; i < n_elt; ++i)\n+    RTVEC_ELT (v, i) = const0_rtx;\n+\n+  operands[2] = gen_reg_rtx (<MODE>mode);\n+  operands[3] = gen_rtx_CONST_VECTOR (<MODE>mode, v);\n+  operands[4] = gen_reg_rtx (<MODE>mode);\n+})\n+\n ;; Generate\n ;;    vspltisw SCRATCH1,-1\n ;;    vslw SCRATCH2,SCRATCH1,SCRATCH1"}, {"sha": "1cdf9a87959f6b2fe36929eea6ad6dcc071ba6b6", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -1129,6 +1129,14 @@ BU_ALTIVEC_A (ABSS_V4SI,      \"abss_v4si\",\tSAT,\taltivec_abss_v4si)\n BU_ALTIVEC_A (ABSS_V8HI,      \"abss_v8hi\",\tSAT,\taltivec_abss_v8hi)\n BU_ALTIVEC_A (ABSS_V16QI,     \"abss_v16qi\",\tSAT,\taltivec_abss_v16qi)\n \n+/* Altivec NABS functions.  */\n+BU_ALTIVEC_A (NABS_V2DI,      \"nabs_v2di\",\tCONST,\tnabsv2di2)\n+BU_ALTIVEC_A (NABS_V4SI,      \"nabs_v4si\",\tCONST,\tnabsv4si2)\n+BU_ALTIVEC_A (NABS_V8HI,      \"nabs_v8hi\",\tCONST,\tnabsv8hi2)\n+BU_ALTIVEC_A (NABS_V16QI,     \"nabs_v16qi\",\tCONST,\tnabsv16qi2)\n+BU_ALTIVEC_A (NABS_V4SF,      \"nabs_v4sf\",\tCONST,\tvsx_nabsv4sf2)\n+BU_ALTIVEC_A (NABS_V2DF,      \"nabs_v2df\",\tCONST,\tvsx_nabsv2df2)\n+\n /* 1 argument Altivec builtin functions.  */\n BU_ALTIVEC_1 (VEXPTEFP,\t      \"vexptefp\",\tFP,\taltivec_vexptefp)\n BU_ALTIVEC_1 (VLOGEFP,\t      \"vlogefp\",\tFP,\taltivec_vlogefp)\n@@ -1408,6 +1416,7 @@ BU_ALTIVEC_OVERLOAD_2 (XOR,\t   \"xor\")\n \n /* 1 argument Altivec overloaded functions.  */\n BU_ALTIVEC_OVERLOAD_1 (ABS,\t   \"abs\")\n+BU_ALTIVEC_OVERLOAD_1 (NABS,\t   \"nabs\")\n BU_ALTIVEC_OVERLOAD_1 (ABSS,\t   \"abss\")\n BU_ALTIVEC_OVERLOAD_1 (CEIL,\t   \"ceil\")\n BU_ALTIVEC_OVERLOAD_1 (EXPTE,\t   \"expte\")"}, {"sha": "3bc1f738f5089df6e7dc19be39d1f28aa6f6a047", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -1992,6 +1992,18 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V8HI, RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMULOUB, ALTIVEC_BUILTIN_VMULOUB,\n     RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NABS, ALTIVEC_BUILTIN_NABS_V16QI,\n+    RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NABS, ALTIVEC_BUILTIN_NABS_V8HI,\n+    RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NABS, ALTIVEC_BUILTIN_NABS_V4SI,\n+    RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NABS, ALTIVEC_BUILTIN_NABS_V2DI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NABS, ALTIVEC_BUILTIN_NABS_V4SF,\n+    RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0, 0 },\n+  { ALTIVEC_BUILTIN_VEC_NABS, VSX_BUILTIN_XVNABSDP,\n+    RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0, 0 },\n   { ALTIVEC_BUILTIN_VEC_NEARBYINT, VSX_BUILTIN_XVRDPI,\n     RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0, 0 },\n   { ALTIVEC_BUILTIN_VEC_NEARBYINT, VSX_BUILTIN_XVRSPI,"}, {"sha": "f8864eb502bb4577e352edc8ed9eb0107a8c28d3", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -16304,6 +16304,12 @@ vector unsigned short vec_vmuloub (vector unsigned char,\n \n vector float vec_nmsub (vector float, vector float, vector float);\n \n+vector signed char vec_nabs (vector signed char);\n+vector signed short vec_nabs (vector signed short);\n+vector signed int vec_nabs (vector signed int);\n+vector float vec_nabs (vector float);\n+vector double vec_nabs (vector double);\n+\n vector float vec_nor (vector float, vector float);\n vector signed int vec_nor (vector signed int, vector signed int);\n vector unsigned int vec_nor (vector unsigned int, vector unsigned int);\n@@ -17710,6 +17716,8 @@ vector long long vec_min (vector long long, vector long long);\n vector unsigned long long vec_min (vector unsigned long long,\n                                    vector unsigned long long);\n \n+vector signed long long vec_nabs (vector signed long long);\n+\n vector long long vec_nand (vector long long, vector long long);\n vector long long vec_nand (vector bool long long, vector long long);\n vector long long vec_nand (vector long long, vector bool long long);"}, {"sha": "547272c7a0c03b38602be08f1eeaf7312974f1fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -1,3 +1,8 @@\n+2017-01-16  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3.c: New vec_nabs testcase.\n+\t* gcc.target/powerpc/builtins-3-p8.c: New vec_nabs testcase.\n+\n 2017-01-16 Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-3-p9.c (test_ne_long()):"}, {"sha": "d2964b4d838685214a107ba6f7310eb13b00d335", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p8.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -16,10 +16,20 @@ test_pack_float (vector double x, vector double y)\n   return vec_pack (x, y);\n }\n \n+vector long long\n+test_nabs_long_long (vector long long x)\n+{\n+  return vec_nabs (x);\n+}\n+\n /* Expected test results:\n \n      test_eq_long_long          1 vcmpequd inst\n-     test_pack_float            1 vpkudum inst */\n+     test_pack_float            1 vpkudum inst\n+     test_nabs_long_long        1 vspltisw, 1 vsubudm, 1 vminsd */\n \n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpkudum\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vspltisw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubudm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vminsd\"   1 } } */"}, {"sha": "bddd0ac91ccdf93d65520743e01db7b50c72477c", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76689ffc1ef69892e36b9ca7d1efb9438d51d0b2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=76689ffc1ef69892e36b9ca7d1efb9438d51d0b2", "patch": "@@ -28,14 +28,59 @@ test_shift_left_double (vector double x, vector double y)\n \treturn vec_sld (x, y, /* shift_by */ 10);\n }\n \n+vector signed char\n+test_nabs_char (vector signed char x)\n+{\n+\treturn vec_nabs (x);\n+}\n+\n+vector short\n+test_nabs_short (vector short x)\n+{\n+  return vec_nabs (x);\n+}\n+\n+vector int\n+test_nabs_int (vector int x)\n+{\n+  return vec_nabs (x);\n+}\n+\n+vector float\n+test_nabs_float (vector float x)\n+{\n+  return vec_nabs (x);\n+}\n+\n+vector double\n+test_nabs_double (vector double x)\n+{\n+\treturn vec_nabs (x);\n+}\n+\n /* Expected test results:\n \n      test_eq_char              1 vcmpequb inst\n      test_eq_short             1 vcmpequh inst\n      test_eq_int               1 vcmpequw inst\n-     test_shift_left_double    1 vsldoi inst */\n+     test_shift_left_double    1 vsldoi inst\n+     test_nabs_char            1 vspltisw, 1 vsububm, 1 vminsb\n+     test_nabs_short           1 vspltisw, 1 vsubuhm, 1 vminsh\n+     test_nabs_int             1 vspltisw, 1 vsubuwm, 1 vminsw\n+     test_nabs_float           1 xvnabssp\n+     test_nabs_double          1 xvnabsdp */\n \n /* { dg-final { scan-assembler-times \"vcmpequb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequh\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequw\" 1 } } */\n /* { dg-final { scan-assembler-times \"vsldoi\"   1 } } */\n+/* { dg-final { scan-assembler-times \"vsububm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vsubuhm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vsubuwm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vminsb\"   1 } } */\n+/* { dg-final { scan-assembler-times \"vminsh\"   1 } } */\n+/* { dg-final { scan-assembler-times \"vminsw\"   1 } } */\n+/* { dg-final { scan-assembler-times \"vspltisw\" 3 } } */\n+/* { dg-final { scan-assembler-times \"xvnabssp\" 1 } } */\n+/* { dg-final { scan-assembler-times \"xvnabsdp\" 1 } } */\n+"}]}