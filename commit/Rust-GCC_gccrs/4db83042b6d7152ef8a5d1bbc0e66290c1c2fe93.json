{"sha": "4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRiODMwNDJiNmQ3MTUyZWY4YTVkMWJiYzBlNjYyOTBjMWMyZmU5Mw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-04-15T09:23:14Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-04-15T09:23:14Z"}, "message": "Link in print-rtl.o to all gen* programs except gengenrtl\n\nFrom-SVN: r19222", "tree": {"sha": "1d2daaf00985812118111ee526e8d49b58ee1e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d2daaf00985812118111ee526e8d49b58ee1e3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/comments", "author": null, "committer": null, "parents": [{"sha": "9aeba741d928c4c1c17d91d4bfaa562bf8c3c278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aeba741d928c4c1c17d91d4bfaa562bf8c3c278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aeba741d928c4c1c17d91d4bfaa562bf8c3c278"}], "stats": {"total": 70, "additions": 50, "deletions": 20}, "files": [{"sha": "821a51df1e7f64ddd20e4af61f2f430b2f10f15d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -1,3 +1,12 @@\n+Wed Apr 15 12:10:18 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* Makefile.in (gen{config,flags,codes,emit}): Link in host print-rtl.o.\n+\t(gen{extract,peep,opinit,output}): Ditto.\n+\n+\t* gen{attr,codes,config,emit,output}.c (insn_attr_name): Provide a\n+\tglobal definition so print-rtl.o can be linked in.\n+\t* gen{peep,recog}.c (insn_attr_name): Ditto.\n+\n Tue Apr 14 07:30:57 1998  K. Richard Pixley  <rich@kyoto.noir.com>\n \n \t* fixincludes: discard empty C++ comments, as found in sys/time.h"}, {"sha": "8c26e9b05c6d4a46638faf557a32e02f3a2836ed", "filename": "gcc/Makefile.in", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -1612,65 +1612,65 @@ $(MD_FILE): $(MD_DEPS)\n \t$(MD_CPP) $(MD_CPPFLAGS) $(md_file) | sed 's/^# /; /g' > tmp-$@\n \tmv tmp-$@ $@\n \n-genconfig : genconfig.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genconfig : genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t  genconfig.o $(HOST_RTL) $(HOST_LIBS)\n+\t  genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genconfig.o : genconfig.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c\n \n-genflags : genflags.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genflags : genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genflags.o $(HOST_RTL) $(HOST_LIBS)\n+\t genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genflags.o : genflags.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c\n \n-gencodes : gencodes.o $(HOST_RTL) $(HOST_LIBDEPS)\n+gencodes : gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t gencodes.o $(HOST_RTL) $(HOST_LIBS)\n+\t gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n gencodes.o : gencodes.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c\n \n-genemit : genemit.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genemit : genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genemit.o $(HOST_RTL) $(HOST_LIBS)\n+\t genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genemit.o : genemit.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c\n \n-genopinit : genopinit.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genopinit : genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genopinit.o $(HOST_RTL) $(HOST_LIBS)\n+\t genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genopinit.o : genopinit.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c\n \n-genrecog : genrecog.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genrecog : genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genrecog.o $(HOST_RTL) $(HOST_LIBS)\n+\t genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genrecog.o : genrecog.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c\n \n-genextract : genextract.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genextract : genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genextract.o $(HOST_RTL) $(HOST_LIBS)\n+\t genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genextract.o : genextract.c $(RTL_H) $(build_xm_file) system.h insn-config.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c\n \n-genpeep : genpeep.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genpeep : genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genpeep.o $(HOST_RTL) $(HOST_LIBS)\n+\t genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genpeep.o : genpeep.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c\n \n-genattr : genattr.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genattr : genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genattr.o $(HOST_RTL) $(HOST_LIBS)\n+\t genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genattr.o : genattr.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c\n@@ -1682,9 +1682,9 @@ genattrtab : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_RTLANAL) $(HOST_LIBDE\n genattrtab.o : genattrtab.c $(RTL_H)  $(build_xm_file) system.h insn-config.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c\n \n-genoutput : genoutput.o $(HOST_RTL) $(HOST_LIBDEPS)\n+genoutput : genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genoutput.o $(HOST_RTL) $(HOST_LIBS)\n+\t genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_LIBS)\n \n genoutput.o : genoutput.c $(RTL_H) $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c"}, {"sha": "7f900be699415e2e742560e106b37a68e3da6c2a", "filename": "gcc/genattr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -35,6 +35,9 @@ char *xmalloc PROTO((unsigned));\n static void fatal ();\n void fancy_abort PROTO((void));\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n /* A range of values.  */\n \n struct range"}, {"sha": "c74ae0a6e9f4b2a1fa0716bd07e40cbd3d1a0c57", "filename": "gcc/gencodes.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -37,6 +37,9 @@ char *xmalloc PROTO((unsigned));\n static void fatal ();\n void fancy_abort PROTO((void));\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n static int insn_code_number;\n \n static void gen_insn PROTO((rtx));"}, {"sha": "ce85c7a52d2a9a2d5aee36eeed3a10b5cf43b029", "filename": "gcc/genconfig.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -31,6 +31,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n /* flags to determine output of machine description dependent #define's.  */\n static int max_recog_operands;  /* Largest operand number seen.  */\n static int max_dup_operands;    /* Largest number of match_dup in any insn.  */"}, {"sha": "d239ba65febbad9d8519f3524c50a9ec2f317798", "filename": "gcc/genemit.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -34,6 +34,9 @@ char *xmalloc PROTO((unsigned));\n static void fatal ();\n void fancy_abort PROTO((void));\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n static int max_opno;\n static int max_dup_opno;\n static int register_constraints;"}, {"sha": "490ecb47c5af9890d510c885681a1c2585fde8ee", "filename": "gcc/genoutput.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -115,6 +115,9 @@ static void mybcopy ();\n static void mybzero ();\n static int n_occurrences PROTO((int, char *));\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n /* insns in the machine description are assigned sequential code numbers\n    that are used by insn-recog.c (produced by genrecog) to communicate\n    to insn-output.c (produced by this program).  */"}, {"sha": "805e9efc5ae489a21e49c912a896d4a4bbe218ae", "filename": "gcc/genpeep.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -30,6 +30,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n /* While tree-walking an instruction pattern, we keep a chain\n    of these `struct link's to record how to get down to the\n    current position.  In each one, POS is the operand number,"}, {"sha": "b015f81d5e111ecef4169386df8874abdd30be0c", "filename": "gcc/genrecog.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=4db83042b6d7152ef8a5d1bbc0e66290c1c2fe93", "patch": "@@ -57,6 +57,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n \n+/* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n+char **insn_name_ptr = 0;\n+\n /* Data structure for a listhead of decision trees.  The alternatives\n    to a node are kept in a doublely-linked list so we can easily add nodes\n    to the proper place when merging.  */"}]}