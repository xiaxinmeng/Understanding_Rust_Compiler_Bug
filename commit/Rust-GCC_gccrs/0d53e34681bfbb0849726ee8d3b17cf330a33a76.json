{"sha": "0d53e34681bfbb0849726ee8d3b17cf330a33a76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1M2UzNDY4MWJmYmIwODQ5NzI2ZWU4ZDNiMTdjZjMzMGEzM2E3Ng==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-10-25T15:45:08Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-10-25T15:45:08Z"}, "message": "pr-support.c (pop_compact_frame, pop_frame): Correct logic for doubleword pops.\n\n\t* config/c6x/pr-support.c (pop_compact_frame, pop_frame): Correct\n\tlogic for doubleword pops.\n\nFrom-SVN: r180435", "tree": {"sha": "d9964adb72e57b741bb3225e2132a5b666ea22a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9964adb72e57b741bb3225e2132a5b666ea22a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d53e34681bfbb0849726ee8d3b17cf330a33a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d53e34681bfbb0849726ee8d3b17cf330a33a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d53e34681bfbb0849726ee8d3b17cf330a33a76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d53e34681bfbb0849726ee8d3b17cf330a33a76/comments", "author": null, "committer": null, "parents": [{"sha": "5b2d9d9084afb8803644c8e5ec8422d86606f9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2d9d9084afb8803644c8e5ec8422d86606f9f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2d9d9084afb8803644c8e5ec8422d86606f9f0"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "2ceb1921591b3ad48788997cc54aa6757b00985f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d53e34681bfbb0849726ee8d3b17cf330a33a76/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d53e34681bfbb0849726ee8d3b17cf330a33a76/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0d53e34681bfbb0849726ee8d3b17cf330a33a76", "patch": "@@ -3,6 +3,9 @@\n \t* config/c6x/pr-support.c (__gnu_unwind_24bit): Correct logic for the\n \tcase where B3 isn't the return register.\n \n+\t* config/c6x/pr-support.c (pop_compact_frame, pop_frame): Correct\n+\tlogic for doubleword pops.\n+\n 2011-10-25  Andreas Tobler  <andreast@fgznet.ch>\n \n \t* config/rs6000/t-freebsd: Add wildcard."}, {"sha": "2e0958c4a23bec3bc5a97be489e315b280bd477a", "filename": "libgcc/config/c6x/pr-support.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d53e34681bfbb0849726ee8d3b17cf330a33a76/libgcc%2Fconfig%2Fc6x%2Fpr-support.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d53e34681bfbb0849726ee8d3b17cf330a33a76/libgcc%2Fconfig%2Fc6x%2Fpr-support.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Fpr-support.c?ref=0d53e34681bfbb0849726ee8d3b17cf330a33a76", "patch": "@@ -153,10 +153,7 @@ pop_compact_frame (_Unwind_Context * context, _uw mask, _uw *ptr, int inc_sp)\n {\n   int size;\n   _uw test;\n-  int i;\n-  int regno;\n-  int regno2;\n-  int nregs;\n+  int i, regno, nregs;\n \n   size = 0;\n   nregs = __builtin_popcount (mask);\n@@ -167,13 +164,11 @@ pop_compact_frame (_Unwind_Context * context, _uw mask, _uw *ptr, int inc_sp)\n \tcontinue;\n \n       regno = unwind_frame_regs[12 - i];\n-      /* The last slot is a sigle word, so cannot store a register pair.  */\n-      if (nregs > 2)\n-\tregno2 = unwind_frame_regs[13 - i];\n-      else\n-\tregno2 = 0xff;\n \n-      if ((mask & (test << 1)) != 0 && regno2 == regno + 1 && (regno & 1) == 0)\n+      if (i < 12 && nregs > 2\n+\t  && (mask & (test << 1)) != 0\n+\t  && unwind_frame_regs[11 - i] == regno + 1\n+\t  && (regno & 1) == 0)\n \t{\n \t  i++;\n \t  nregs--;\n@@ -196,12 +191,11 @@ pop_compact_frame (_Unwind_Context * context, _uw mask, _uw *ptr, int inc_sp)\n \tcontinue;\n \n       regno = unwind_frame_regs[12 - i];\n-      if (nregs > 2)\n-\tregno2 = unwind_frame_regs[13 - i];\n-      else\n-\tregno2 = 0xff;\n \n-      if ((mask & (test << 1)) != 0 && regno2 == regno + 1 && (regno & 1) == 0)\n+      if (i < 12 && nregs > 2\n+\t  && (mask & (test << 1)) != 0\n+\t  && unwind_frame_regs[11 - i] == regno + 1\n+\t  && (regno & 1) == 0)\n \t{\n \t  /* Register pair.  */\n \t  unwind_restore_pair (context, regno, ptr);\n@@ -243,7 +237,7 @@ pop_frame (_Unwind_Context * context, _uw mask, _uw *ptr, int inc_sp)\n       if ((mask & (1 << i)) == 0)\n \tcontinue;\n       regno = unwind_frame_regs[12 - i];\n-      if (i < 12 && unwind_frame_regs[13 - i] == (regno + 1)\n+      if (i < 12 && unwind_frame_regs[11 - i] == (regno + 1)\n \t  && (mask & (1 << (i + 1))) != 0\n \t  && (((_uw)ptr) & 4) == 0\n \t  && (regno & 1) == 0)"}]}