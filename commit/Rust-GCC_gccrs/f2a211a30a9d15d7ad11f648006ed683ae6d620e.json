{"sha": "f2a211a30a9d15d7ad11f648006ed683ae6d620e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhMjExYTMwYTlkMTVkN2FkMTFmNjQ4MDA2ZWQ2ODNhZTZkNjIwZQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-08-31T10:24:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:24:38Z"}, "message": "symbols-vms.adb (Initialize): Read symbol files with continuation lines\n\n2007-08-31  Vincent Celier  <celier@adacore.com>\n\n\t* symbols-vms.adb (Initialize): Read symbol files with continuation\n\tlines\n\t(Finalize): If symbol is long, split the line\n\nFrom-SVN: r127983", "tree": {"sha": "3ffabc9f717ea09572757c7fd88ff74648be1c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ffabc9f717ea09572757c7fd88ff74648be1c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2a211a30a9d15d7ad11f648006ed683ae6d620e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a211a30a9d15d7ad11f648006ed683ae6d620e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a211a30a9d15d7ad11f648006ed683ae6d620e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a211a30a9d15d7ad11f648006ed683ae6d620e/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98d68cf1e21e23331a95c636f43fe769d02e9677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d68cf1e21e23331a95c636f43fe769d02e9677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d68cf1e21e23331a95c636f43fe769d02e9677"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "0a43f6fa2095743dd41ac377707a1fbe7feeaffe", "filename": "gcc/ada/symbols-vms.adb", "status": "modified", "additions": 41, "deletions": 2, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a211a30a9d15d7ad11f648006ed683ae6d620e/gcc%2Fada%2Fsymbols-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a211a30a9d15d7ad11f648006ed683ae6d620e/gcc%2Fada%2Fsymbols-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols-vms.adb?ref=f2a211a30a9d15d7ad11f648006ed683ae6d620e", "patch": "@@ -42,6 +42,9 @@ package body Symbols is\n    Symbol_File_Name : String_Access := null;\n    --  Name of the symbol file\n \n+   Long_Symbol_Length : constant := 100;\n+   --  Magic length of symbols, over which the lines are split\n+\n    Sym_Policy : Policy := Autonomous;\n    --  The symbol policy. Set by Initialize\n \n@@ -120,9 +123,11 @@ package body Symbols is\n       Success       : out Boolean)\n    is\n       File : Ada.Text_IO.File_Type;\n-      Line : String (1 .. 1_000);\n+      Line : String (1 .. 2_000);\n       Last : Natural;\n \n+      Offset : Natural;\n+\n    begin\n       --  Record the symbol file name\n \n@@ -221,7 +226,26 @@ package body Symbols is\n          --  Read line by line\n \n          while not End_Of_File (File) loop\n-            Get_Line (File, Line, Last);\n+            Offset := 0;\n+            loop\n+               Get_Line (File, Line (Offset + 1 .. Line'Last), Last);\n+               exit when Line (Last) /= '-';\n+\n+               if End_Of_File (File) then\n+                  if not Quiet then\n+                     Put_Line (\"symbol file \"\"\" & Reference &\n+                               \"\"\" is incorrectly formatted:\");\n+                     Put_Line (\"\"\"\" & Line (1 .. Last) & \"\"\"\");\n+                  end if;\n+\n+                  Close (File);\n+                  Success := False;\n+                  return;\n+\n+               else\n+                  Offset := Last - 1;\n+               end if;\n+            end loop;\n \n             --  Ignore empty lines\n \n@@ -549,8 +573,23 @@ package body Symbols is\n             for Index in 1 .. Symbol_Table.Last (Original_Symbols) loop\n                if Original_Symbols.Table (Index).Present then\n                   Put (File, Symbol_Vector);\n+\n+                  --  Split the line if symbol name length is too large\n+\n+                  if Original_Symbols.Table (Index).Name'Length >\n+                    Long_Symbol_Length\n+                  then\n+                     Put_Line (File, \"-\");\n+                  end if;\n+\n                   Put (File, Original_Symbols.Table (Index).Name.all);\n \n+                  if Original_Symbols.Table (Index).Name'Length >\n+                    Long_Symbol_Length\n+                  then\n+                     Put_Line (File, \"-\");\n+                  end if;\n+\n                   if Original_Symbols.Table (Index).Kind = Data then\n                      Put_Line (File, Equal_Data);\n "}]}