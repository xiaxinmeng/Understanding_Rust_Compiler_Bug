{"sha": "7149f02cac5d517914046bcaa429ad784a9066ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE0OWYwMmNhYzVkNTE3OTE0MDQ2YmNhYTQyOWFkNzg0YTkwNjZhZQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-09-07T20:03:14Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-09-07T20:03:14Z"}, "message": "m32r.h (REGISTER_MOVE_COST, [...]): Remove.\n\n\t* config/m32r/m32r.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove.\n\t* config/m32r/m32r.c (TARGET_MEMORY_MOVE_COSTS): Define.\n\t(m32r_memory_move_cost): New function.\n\nFrom-SVN: r163966", "tree": {"sha": "98e9028e60148534ddf3c727a91e7f6e274a70b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98e9028e60148534ddf3c727a91e7f6e274a70b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7149f02cac5d517914046bcaa429ad784a9066ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7149f02cac5d517914046bcaa429ad784a9066ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7149f02cac5d517914046bcaa429ad784a9066ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7149f02cac5d517914046bcaa429ad784a9066ae/comments", "author": null, "committer": null, "parents": [{"sha": "21e928492982646038dfc5562686200d329d9cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e928492982646038dfc5562686200d329d9cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21e928492982646038dfc5562686200d329d9cfd"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "664f10da1041bdf451c5f657fb56a42fbeadc57a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7149f02cac5d517914046bcaa429ad784a9066ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7149f02cac5d517914046bcaa429ad784a9066ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7149f02cac5d517914046bcaa429ad784a9066ae", "patch": "@@ -1,3 +1,9 @@\n+2010-09-07  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/m32r/m32r.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove.\n+\t* config/m32r/m32r.c (TARGET_MEMORY_MOVE_COSTS): Define.\n+\t(m32r_memory_move_cost): New function.\n+\n 2010-09-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config.gcc: Append t-android for Android targets."}, {"sha": "5fff1cce004abe9b27044edaf6efdd4eb0e6f4b8", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7149f02cac5d517914046bcaa429ad784a9066ae/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7149f02cac5d517914046bcaa429ad784a9066ae/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=7149f02cac5d517914046bcaa429ad784a9066ae", "patch": "@@ -89,6 +89,7 @@ static void m32r_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t\t tree, int *, int);\n static void init_idents (void);\n static bool m32r_rtx_costs (rtx, int, int, int *, bool speed);\n+static int m32r_memory_move_cost (enum machine_mode, reg_class_t, bool);\n static bool m32r_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t    const_tree, bool);\n static int m32r_arg_partial_bytes (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -152,6 +153,9 @@ static const struct attribute_spec m32r_attribute_table[] =\n #undef  TARGET_IN_SMALL_DATA_P\n #define TARGET_IN_SMALL_DATA_P m32r_in_small_data_p\n \n+\n+#undef  TARGET_MEMORY_MOVE_COSTS\n+#define TARGET_MEMORY_MOVE_COSTS m32r_memory_move_costs\n #undef  TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS m32r_rtx_costs\n #undef  TARGET_ADDRESS_COST\n@@ -1366,6 +1370,22 @@ m32r_issue_rate (void)\n \f\n /* Cost functions.  */\n \n+/* Implement TARGET_HANDLE_OPTION.\n+\n+   Memory is 3 times as expensive as registers.\n+   ??? Is that the right way to look at it?  */\n+\n+static int\n+m32r_memory_move_cost (enum machine_mode mode,\n+\t\t       reg_class_t rclass ATTRIBUTE_UNUSED,\n+\t\t       bool in ATTRIBUTE_UNUSED)\n+{\n+  if (GET_MODE_SIZE (mode) <= UNITS_PER_WORD)\n+    return 6;\n+  else\n+    return 12;\n+}\n+\n static bool\n m32r_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED, int *total,\n \t\tbool speed ATTRIBUTE_UNUSED)"}, {"sha": "66ff1ec9bfb7197024075176e322dd659c409530", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7149f02cac5d517914046bcaa429ad784a9066ae/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7149f02cac5d517914046bcaa429ad784a9066ae/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=7149f02cac5d517914046bcaa429ad784a9066ae", "patch": "@@ -1067,16 +1067,6 @@ L2:     .word STATIC\n \f\n /* Costs.  */\n \n-/* Compute extra cost of moving data between one register class\n-   and another.  */\n-#define REGISTER_MOVE_COST(MODE, CLASS1, CLASS2) 2\n-\n-/* Compute the cost of moving data between registers and memory.  */\n-/* Memory is 3 times as expensive as registers.\n-   ??? Is that the right way to look at it?  */\n-#define MEMORY_MOVE_COST(MODE,CLASS,IN_P) \\\n-(GET_MODE_SIZE (MODE) <= UNITS_PER_WORD ? 6 : 12)\n-\n /* The cost of a branch insn.  */\n /* A value of 2 here causes GCC to avoid using branches in comparisons like\n    while (a < N && a).  Branches aren't that expensive on the M32R so"}]}