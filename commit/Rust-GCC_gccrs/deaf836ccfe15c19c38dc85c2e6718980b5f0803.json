{"sha": "deaf836ccfe15c19c38dc85c2e6718980b5f0803", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVhZjgzNmNjZmUxNWMxOWMzOGRjODVjMmU2NzE4OTgwYjVmMDgwMw==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-09-18T08:59:52Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-09-18T08:59:52Z"}, "message": "re PR tree-optimization/50412 (gfortran -Ofast ICE in vect_do_peeling_for_loop_bound)\n\n\n        PR tree-optimization/50412\n        * tree-vect-data-refs.c (vect_analyze_group_access): Fail for\n        acceses that require epilogue loop if vectorizing outer loop.\n\nFrom-SVN: r178940", "tree": {"sha": "a435f436a26f0e927db7c221eb9e20a0efbcee92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a435f436a26f0e927db7c221eb9e20a0efbcee92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deaf836ccfe15c19c38dc85c2e6718980b5f0803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deaf836ccfe15c19c38dc85c2e6718980b5f0803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deaf836ccfe15c19c38dc85c2e6718980b5f0803", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deaf836ccfe15c19c38dc85c2e6718980b5f0803/comments", "author": null, "committer": null, "parents": [{"sha": "ab0ca06f703628ad4d25662758fe578a76d6d6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab0ca06f703628ad4d25662758fe578a76d6d6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab0ca06f703628ad4d25662758fe578a76d6d6dc"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "be2acbec117beb27c1a1ef8dc67fad0be256bf22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=deaf836ccfe15c19c38dc85c2e6718980b5f0803", "patch": "@@ -1,3 +1,9 @@\n+2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50412\n+\t* tree-vect-data-refs.c (vect_analyze_group_access): Fail for\n+\tacceses that require epilogue loop if vectorizing outer loop.\n+\n 2011-09-17  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.md (UNSPEC_EDGE8, UNSPEC_EDGE8L,"}, {"sha": "d375576f57794f8968a5cd6a1cb9af5d4bab1aa8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=deaf836ccfe15c19c38dc85c2e6718980b5f0803", "patch": "@@ -1,3 +1,8 @@\n+2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50412\n+\t* gfortran.dg/vect/pr50412.f90: New.\n+\n 2011-09-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50424"}, {"sha": "4f95741f7355be3649cece9c13ea2dac6bb3bbc6", "filename": "gcc/testsuite/gfortran.dg/vect/pr50412.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr50412.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr50412.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr50412.f90?ref=deaf836ccfe15c19c38dc85c2e6718980b5f0803", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+\n+      DOUBLE PRECISION AK,AI,AAE\n+      COMMON/com/AK(36),AI(4,4),AAE(8,4),ii,jj\n+      DO 20 II=1,4\n+        DO 21 JJ=1,4\n+          AK(n)=AK(n)-AAE(I,II)*AI(II,JJ)\n+   21   CONTINUE\n+   20 CONTINUE\n+      END\n+\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "e1cbecdff735d409eb4b7b1e9d0f1126d51b5aff", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaf836ccfe15c19c38dc85c2e6718980b5f0803/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=deaf836ccfe15c19c38dc85c2e6718980b5f0803", "patch": "@@ -2060,6 +2060,10 @@ vect_analyze_group_access (struct data_reference *dr)\n   HOST_WIDE_INT dr_step = TREE_INT_CST_LOW (step);\n   HOST_WIDE_INT stride, last_accessed_element = 1;\n   bool slp_impossible = false;\n+  struct loop *loop = NULL;\n+\n+  if (loop_vinfo)\n+    loop = LOOP_VINFO_LOOP (loop_vinfo);\n \n   /* For interleaving, STRIDE is STEP counted in elements, i.e., the size of the\n      interleaving group (including gaps).  */\n@@ -2090,11 +2094,18 @@ vect_analyze_group_access (struct data_reference *dr)\n \n \t  if (loop_vinfo)\n \t    {\n-\t      LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo) = true;\n-\n \t      if (vect_print_dump_info (REPORT_DETAILS))\n \t\tfprintf (vect_dump, \"Data access with gaps requires scalar \"\n \t\t\t\t    \"epilogue loop\");\n+              if (loop->inner)\n+                {\n+                  if (vect_print_dump_info (REPORT_DETAILS))\n+                    fprintf (vect_dump, \"Peeling for outer loop is not\"\n+                                        \" supported\");\n+                  return false;\n+                }\n+\n+              LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo) = true;\n \t    }\n \n \t  return true;\n@@ -2277,10 +2288,17 @@ vect_analyze_group_access (struct data_reference *dr)\n       /* There is a gap in the end of the group.  */\n       if (stride - last_accessed_element > 0 && loop_vinfo)\n \t{\n-\t  LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo) = true;\n \t  if (vect_print_dump_info (REPORT_DETAILS))\n \t    fprintf (vect_dump, \"Data access with gaps requires scalar \"\n \t\t\t\t\"epilogue loop\");\n+          if (loop->inner)\n+            {\n+              if (vect_print_dump_info (REPORT_DETAILS))\n+                fprintf (vect_dump, \"Peeling for outer loop is not supported\");\n+              return false;\n+            }\n+\n+          LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo) = true;\n \t}\n     }\n "}]}