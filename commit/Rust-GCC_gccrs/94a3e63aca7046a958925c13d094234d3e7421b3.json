{"sha": "94a3e63aca7046a958925c13d094234d3e7421b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRhM2U2M2FjYTcwNDZhOTU4OTI1YzEzZDA5NDIzNGQzZTc0MjFiMw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-05-16T04:36:09Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-05-16T04:36:09Z"}, "message": "tree-scalar-evolution.c (set_nb_iterations_in_loop): Only check for TREE_OVERFLOW on INTEGER_CST trees.\n\n\n\t* tree-scalar-evolution.c (set_nb_iterations_in_loop): Only\n\tcheck for TREE_OVERFLOW on INTEGER_CST trees.\n\t* tree-chrec.c (chrec_convert): Only clear TREE_OVERFLOW on\n\tCONSTANT_CLASS_P tree nodes.\n\nFrom-SVN: r99765", "tree": {"sha": "7d1d7246dd3c847c51837e7d52c7dd222df2c14c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d1d7246dd3c847c51837e7d52c7dd222df2c14c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94a3e63aca7046a958925c13d094234d3e7421b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94a3e63aca7046a958925c13d094234d3e7421b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94a3e63aca7046a958925c13d094234d3e7421b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94a3e63aca7046a958925c13d094234d3e7421b3/comments", "author": null, "committer": null, "parents": [{"sha": "21e43850583de699a759686dbcc143841221d738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e43850583de699a759686dbcc143841221d738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21e43850583de699a759686dbcc143841221d738"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "ce284d11cf509811a159724638a1776fd3aff70e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94a3e63aca7046a958925c13d094234d3e7421b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94a3e63aca7046a958925c13d094234d3e7421b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94a3e63aca7046a958925c13d094234d3e7421b3", "patch": "@@ -1,3 +1,10 @@\n+2005-05-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* tree-scalar-evolution.c (set_nb_iterations_in_loop): Only\n+\tcheck for TREE_OVERFLOW on INTEGER_CST trees.\n+\t* tree-chrec.c (chrec_convert): Only clear TREE_OVERFLOW on\n+\tCONSTANT_CLASS_P tree nodes.\n+\n 2005-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/21551"}, {"sha": "cb72df0aad380aaa78e9ea0577110a7d1bf48502", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94a3e63aca7046a958925c13d094234d3e7421b3/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94a3e63aca7046a958925c13d094234d3e7421b3/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=94a3e63aca7046a958925c13d094234d3e7421b3", "patch": "@@ -1062,9 +1062,11 @@ chrec_convert (tree type,\n \ttree res = fold_convert (type, chrec);\n \n \t/* Don't propagate overflows.  */\n-\tTREE_OVERFLOW (res) = 0;\n \tif (CONSTANT_CLASS_P (res))\n-\t  TREE_CONSTANT_OVERFLOW (res) = 0;\n+\t  {\n+\t    TREE_CONSTANT_OVERFLOW (res) = 0;\n+\t    TREE_OVERFLOW (res) = 0;\n+\t  }\n \n \t/* But reject constants that don't fit in their type after conversion.\n \t   This can happen if TYPE_MIN_VALUE or TYPE_MAX_VALUE are not the"}, {"sha": "4019f78c0aeb511de65cc0449db5d38231ffd6b6", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94a3e63aca7046a958925c13d094234d3e7421b3/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94a3e63aca7046a958925c13d094234d3e7421b3/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=94a3e63aca7046a958925c13d094234d3e7421b3", "patch": "@@ -922,8 +922,9 @@ set_nb_iterations_in_loop (struct loop *loop,\n      count of the loop in order to be compatible with the other\n      nb_iter computations in loop-iv.  This also allows the\n      representation of nb_iters that are equal to MAX_INT.  */\n-  if ((TREE_CODE (res) == INTEGER_CST && TREE_INT_CST_LOW (res) == 0)\n-      || TREE_OVERFLOW (res))\n+  if (TREE_CODE (res) == INTEGER_CST\n+      && (TREE_INT_CST_LOW (res) == 0\n+\t  || TREE_OVERFLOW (res)))\n     res = chrec_dont_know;\n   \n   if (dump_file && (dump_flags & TDF_DETAILS))"}]}