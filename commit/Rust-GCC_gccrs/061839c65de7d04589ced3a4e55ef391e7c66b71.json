{"sha": "061839c65de7d04589ced3a4e55ef391e7c66b71", "node_id": "C_kwDOANBUbNoAKDA2MTgzOWM2NWRlN2QwNDU4OWNlZDNhNGU1NWVmMzkxZTdjNjZiNzE", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-11-21T06:57:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-11-21T08:48:42Z"}, "message": "Make ARMv8-M attribute cmse_nonsecure_call work in Ada\n\nUnlike most other machine attributes, this one does not work in Ada because,\nwhile it applies to pointer-to-function types, it is explicitly marked as\nrequiring declarations in the implementation.\n\nNow, in Ada, machine attributes are specified like this:\n\n  type Non_Secure is access procedure;\n  pragma Machine_Attribute (Non_Secure, \"cmse_nonsecure_call\");\n\ni.e. not attached to the declaration of Non_Secure.\n\nThe change extends the support to Ada by also accepting pointer-to-function\ntypes in the handler.\n\ngcc/\n\t* config/arm/arm.cc (arm_attribute_table) <cmse_nonsecure_call>:\n\tChange decl_required field to false.\n\t(arm_handle_cmse_nonsecure_call): Deal with a TYPE node.\n\ngcc/testsuite/\n\t* gnat.dg/machine_attr2.ads, gnat.dg/machine_attr2.adb: New test.", "tree": {"sha": "4bf6febe0cc0a8a5522975ef0b5dedca4776fc14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bf6febe0cc0a8a5522975ef0b5dedca4776fc14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/061839c65de7d04589ced3a4e55ef391e7c66b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061839c65de7d04589ced3a4e55ef391e7c66b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061839c65de7d04589ced3a4e55ef391e7c66b71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061839c65de7d04589ced3a4e55ef391e7c66b71/comments", "author": null, "committer": null, "parents": [{"sha": "454a823dc980bf3631b13670765f1a3eb66e499a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454a823dc980bf3631b13670765f1a3eb66e499a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454a823dc980bf3631b13670765f1a3eb66e499a"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "b587561eebea921bdc68016922d37948e2870ce2", "filename": "gcc/config/arm/arm.cc", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061839c65de7d04589ced3a4e55ef391e7c66b71/gcc%2Fconfig%2Farm%2Farm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061839c65de7d04589ced3a4e55ef391e7c66b71/gcc%2Fconfig%2Farm%2Farm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.cc?ref=061839c65de7d04589ced3a4e55ef391e7c66b71", "patch": "@@ -375,7 +375,7 @@ static const struct attribute_spec arm_attribute_table[] =\n   /* ARMv8-M Security Extensions support.  */\n   { \"cmse_nonsecure_entry\", 0, 0, true, false, false, false,\n     arm_handle_cmse_nonsecure_entry, NULL },\n-  { \"cmse_nonsecure_call\", 0, 0, true, false, false, true,\n+  { \"cmse_nonsecure_call\", 0, 0, false, false, false, true,\n     arm_handle_cmse_nonsecure_call, NULL },\n   { \"Advanced SIMD type\", 1, 1, false, true, false, true, NULL, NULL },\n   { NULL, 0, 0, false, false, false, false, NULL, NULL }\n@@ -7605,8 +7605,8 @@ arm_handle_cmse_nonsecure_call (tree *node, tree name,\n \t\t\t\t int /* flags */,\n \t\t\t\t bool *no_add_attrs)\n {\n-  tree decl = NULL_TREE, fntype = NULL_TREE;\n-  tree type;\n+  tree decl = NULL_TREE;\n+  tree fntype, type;\n \n   if (!use_cmse)\n     {\n@@ -7616,16 +7616,20 @@ arm_handle_cmse_nonsecure_call (tree *node, tree name,\n       return NULL_TREE;\n     }\n \n-  if (TREE_CODE (*node) == VAR_DECL || TREE_CODE (*node) == TYPE_DECL)\n+  if (DECL_P (*node))\n     {\n-      decl = *node;\n-      fntype = TREE_TYPE (decl);\n+      fntype = TREE_TYPE (*node);\n+\n+      if (TREE_CODE (*node) == VAR_DECL || TREE_CODE (*node) == TYPE_DECL)\n+\tdecl = *node;\n     }\n+  else\n+    fntype = *node;\n \n-  while (fntype != NULL_TREE && TREE_CODE (fntype) == POINTER_TYPE)\n+  while (fntype && TREE_CODE (fntype) == POINTER_TYPE)\n     fntype = TREE_TYPE (fntype);\n \n-  if (!decl || TREE_CODE (fntype) != FUNCTION_TYPE)\n+  if ((DECL_P (*node) && !decl) || TREE_CODE (fntype) != FUNCTION_TYPE)\n     {\n \twarning (OPT_Wattributes, \"%qE attribute only applies to base type of a \"\n \t\t \"function pointer\", name);\n@@ -7640,10 +7644,17 @@ arm_handle_cmse_nonsecure_call (tree *node, tree name,\n \n   /* Prevent trees being shared among function types with and without\n      cmse_nonsecure_call attribute.  */\n-  type = TREE_TYPE (decl);\n+  if (decl)\n+    {\n+      type = build_distinct_type_copy (TREE_TYPE (decl));\n+      TREE_TYPE (decl) = type;\n+    }\n+  else\n+    {\n+      type = build_distinct_type_copy (*node);\n+      *node = type;\n+    }\n \n-  type = build_distinct_type_copy (type);\n-  TREE_TYPE (decl) = type;\n   fntype = type;\n \n   while (TREE_CODE (fntype) != FUNCTION_TYPE)"}, {"sha": "e98a69aefc1ef865e8b9ca5ce9cd7042b1bcfd34", "filename": "gcc/testsuite/gnat.dg/machine_attr2.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061839c65de7d04589ced3a4e55ef391e7c66b71/gcc%2Ftestsuite%2Fgnat.dg%2Fmachine_attr2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061839c65de7d04589ced3a4e55ef391e7c66b71/gcc%2Ftestsuite%2Fgnat.dg%2Fmachine_attr2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmachine_attr2.adb?ref=061839c65de7d04589ced3a4e55ef391e7c66b71", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do compile { target arm*-*-* } }\n+-- { dg-options \"-mcpu=cortex-m33 -mcmse\" }\n+\n+package body Machine_Attr2 is\n+  \n+  procedure Call (Proc : Non_Secure) is\n+  begin\n+    Proc.all;\n+  end;\n+\n+  procedure Foo; -- { dg-warning \"only applies to base type\" }\n+  pragma Machine_Attribute (Foo, \"cmse_nonsecure_call\");\n+  procedure Foo is null;\n+\n+end Machine_Attr2;"}, {"sha": "4eda09e0f9791cb46cdd8dde221e3a5bd219093c", "filename": "gcc/testsuite/gnat.dg/machine_attr2.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061839c65de7d04589ced3a4e55ef391e7c66b71/gcc%2Ftestsuite%2Fgnat.dg%2Fmachine_attr2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061839c65de7d04589ced3a4e55ef391e7c66b71/gcc%2Ftestsuite%2Fgnat.dg%2Fmachine_attr2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmachine_attr2.ads?ref=061839c65de7d04589ced3a4e55ef391e7c66b71", "patch": "@@ -0,0 +1,8 @@\n+package Machine_Attr2 is\n+\n+  type Non_Secure is access procedure;\n+  pragma Machine_Attribute (Non_Secure, \"cmse_nonsecure_call\");\n+\n+  procedure Call (Proc : Non_Secure);\n+\n+end Machine_Attr2;"}]}