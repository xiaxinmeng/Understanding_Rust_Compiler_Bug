{"sha": "034e84c4a5d2e59e6a8313d5beccf8d541698c47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0ZTg0YzRhNWQyZTU5ZTZhODMxM2Q1YmVjY2Y4ZDU0MTY5OGM0Nw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1997-11-26T21:04:33Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-11-26T21:04:33Z"}, "message": "Fix System V profiling.\n\nFrom-SVN: r16756", "tree": {"sha": "8ea4615fbf99f6f7bf6c8d2c69055862d592ac44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea4615fbf99f6f7bf6c8d2c69055862d592ac44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/034e84c4a5d2e59e6a8313d5beccf8d541698c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034e84c4a5d2e59e6a8313d5beccf8d541698c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/034e84c4a5d2e59e6a8313d5beccf8d541698c47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034e84c4a5d2e59e6a8313d5beccf8d541698c47/comments", "author": null, "committer": null, "parents": [{"sha": "92dcf4c8513bb6dd1602e7ef55a9c550df59ffe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92dcf4c8513bb6dd1602e7ef55a9c550df59ffe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92dcf4c8513bb6dd1602e7ef55a9c550df59ffe7"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "f60b9060a0f830934746d0b861f2985af0c0d838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034e84c4a5d2e59e6a8313d5beccf8d541698c47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034e84c4a5d2e59e6a8313d5beccf8d541698c47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=034e84c4a5d2e59e6a8313d5beccf8d541698c47", "patch": "@@ -1,3 +1,11 @@\n+Wed Nov 26 15:47:30 1997  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.c (output_function_profiler): Put label address in r0, and\n+\tstore LR in 4(sp) for System V/eabi.\n+\n+\t* rs6000.h (ASM_OUTPUT_REG_{PUSH,POP}): Keep stack aligned to 16\n+\tbyte boundary, and maintain stack backchain.\n+\n Wed Nov 26 11:12:26 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* toplev.c (main): Complain about -gdwarfn."}, {"sha": "ef627e87b49c556f4ba7d4762af07ba3214acb6b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034e84c4a5d2e59e6a8313d5beccf8d541698c47/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034e84c4a5d2e59e6a8313d5beccf8d541698c47/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=034e84c4a5d2e59e6a8313d5beccf8d541698c47", "patch": "@@ -4436,28 +4436,33 @@ output_function_profiler (file, labelno)\n       if (flag_pic == 1)\n \t{\n \t  fprintf (file, \"\\tbl _GLOBAL_OFFSET_TABLE_@local-4\\n\");\n+\t  fprintf (file, \"\\t%s %s,4(%s)\\n\",\n+\t\t   (TARGET_NEW_MNEMONICS) ? \"stw\" : \"st\",\n+\t\t   reg_names[0], reg_names[1]);\n \t  fprintf (file, \"\\tmflr %s\\n\", reg_names[11]);\n \t  fprintf (file, \"\\t%s %s,\", (TARGET_NEW_MNEMONICS) ? \"lwz\" : \"l\",\n-\t\t   reg_names[11]);\n+\t\t   reg_names[0]);\n \t  assemble_name (file, buf);\n \t  fprintf (file, \"@got(%s)\\n\", reg_names[11]);\n \t}\n #if TARGET_ELF\n       else if (flag_pic > 1 || TARGET_RELOCATABLE)\n \t{\n-\t  fprintf (file, \"\\tstw %s,4(%s)\\n\", reg_names[0], reg_names[1]);\n-\t  fprintf (file, \"%s\\n\", MINIMAL_TOC_SECTION_ASM_OP);\n-\t  assemble_name (file, buf);\n-\t  fprintf (file, \"X = .-.LCTOC1\\n\");\n-\t  fprintf (file, \"\\t.long \");\n-\t  assemble_name (file, buf);\n-\t  fputs (\"\\n\\t.previous\\n\", file);\n+\t  fprintf (file, \"\\t%s %s,4(%s)\\n\",\n+\t\t   (TARGET_NEW_MNEMONICS) ? \"stw\" : \"st\",\n+\t\t   reg_names[0], reg_names[1]);\n \t  rs6000_pic_func_labelno = rs6000_pic_labelno;\n \t  rs6000_output_load_toc_table (file, 11);\n \t  fprintf (file, \"\\t%s %s,\", (TARGET_NEW_MNEMONICS) ? \"lwz\" : \"l\",\n \t\t   reg_names[11]);\n \t  assemble_name (file, buf);\n \t  fprintf (file, \"X(%s)\\n\", reg_names[11]);\n+\t  fprintf (file, \"%s\\n\", MINIMAL_TOC_SECTION_ASM_OP);\n+\t  assemble_name (file, buf);\n+\t  fprintf (file, \"X = .-.LCTOC1\\n\");\n+\t  fprintf (file, \"\\t.long \");\n+\t  assemble_name (file, buf);\n+\t  fputs (\"\\n\\t.previous\\n\", file);\n \t}\n #endif\n       else if (TARGET_NEW_MNEMONICS)\n@@ -4466,7 +4471,7 @@ output_function_profiler (file, labelno)\n \t  assemble_name (file, buf);\n \t  fprintf (file, \"@ha\\n\");\n \t  fprintf (file, \"\\tstw %s,4(%s)\\n\", reg_names[0], reg_names[1]);\n-\t  fprintf (file, \"\\taddi %s,%s,\", reg_names[11], reg_names[11]);\n+\t  fprintf (file, \"\\taddi %s,%s,\", reg_names[0], reg_names[11]);\n \t  assemble_name (file, buf);\n \t  fputs (\"@l\\n\", file);\n \t}"}, {"sha": "3e7b932ffb2f6a235303604ad83d21b3258d9bd0", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034e84c4a5d2e59e6a8313d5beccf8d541698c47/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034e84c4a5d2e59e6a8313d5beccf8d541698c47/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=034e84c4a5d2e59e6a8313d5beccf8d541698c47", "patch": "@@ -2904,12 +2904,17 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_ASCII(FILE, P, N)  output_ascii ((FILE), (P), (N))\n \n /* This is how to output code to push a register on the stack.\n-   It need not be very fast code.  */\n+   It need not be very fast code.\n+\n+   On the rs6000, we must keep the backchain up to date.  In order\n+   to simplify things, always allocate 16 bytes for a push (System V\n+   wants to keep stack aligned to a 16 byte boundary).  */\n \n #define ASM_OUTPUT_REG_PUSH(FILE,REGNO)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   extern char *reg_names[];\t\t\t\t\t\t\\\n-  asm_fprintf (FILE, \"\\{tstu|stwu} %s,-4(%s)\\n\", reg_names[REGNO],\t\\\n+  asm_fprintf (FILE, \"\\t{stu|stwu} %s,-16(%s)\\n\\t{st|stw} %s,8(%s)\\n\",\t\\\n+\t       reg_names[1], reg_names[1], reg_names[REGNO],\t\t\\\n \t       reg_names[1]);\t\t\t\t\t\t\\\n } while (0)\n \n@@ -2919,7 +2924,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_REG_POP(FILE,REGNO)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   extern char *reg_names[];\t\t\t\t\t\t\\\n-  asm_fprintf (FILE, \"\\t{l|lwz} %s,0(%s)\\n\\t{ai|addic} %s,%s,4\\n\",\t\\\n+  asm_fprintf (FILE, \"\\t{l|lwz} %s,8(%s)\\n\\t{ai|addic} %s,%s,16\\n\",\t\\\n \t       reg_names[REGNO], reg_names[1], reg_names[1],\t\t\\\n \t       reg_names[1]);\t\t\t\t\t\t\\\n } while (0)"}]}