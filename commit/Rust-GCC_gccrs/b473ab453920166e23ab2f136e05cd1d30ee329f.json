{"sha": "b473ab453920166e23ab2f136e05cd1d30ee329f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ3M2FiNDUzOTIwMTY2ZTIzYWIyZjEzNmUwNWNkMWQzMGVlMzI5Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-05-20T12:52:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:52:53Z"}, "message": "g-byorma.adb, [...]: Update comments.\n\n2008-05-20  Robert Dewar  <dewar@adacore.com>\n\n\t* g-byorma.adb, gnatlink.adb, prepcomp.adb, sinfo.ads,\n\tsem_ch12.adb: Update comments. Minor reformatting.\n\n\t* exp_ch2.adb: Typo\n\n\t* s-unstyp.ads: Fixed some typos in comments.\n\nFrom-SVN: r135651", "tree": {"sha": "2ab5e757720242b1e1b9f5f6052c4f646debc0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ab5e757720242b1e1b9f5f6052c4f646debc0e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b473ab453920166e23ab2f136e05cd1d30ee329f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b473ab453920166e23ab2f136e05cd1d30ee329f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b473ab453920166e23ab2f136e05cd1d30ee329f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b473ab453920166e23ab2f136e05cd1d30ee329f/comments", "author": null, "committer": null, "parents": [{"sha": "590760eb9d222ed4b15e77bf6b53aec2827d0cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590760eb9d222ed4b15e77bf6b53aec2827d0cdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/590760eb9d222ed4b15e77bf6b53aec2827d0cdf"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "6093f2a73337c1f7c26e4828677fc73aa5a617e9", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -469,7 +469,7 @@ package body Exp_Ch2 is\n          --  we also generate an extra parameter to hold the Constrained\n          --  attribute of the actual. No renaming is generated for this flag.\n \n-         --  Calling Node_Possible_Modifications in the expander is dubious,\n+         --  Calling Note_Possible_Modification in the expander is dubious,\n          --  because this generates a cross-reference entry, and should be\n          --  done during semantic processing so it is called in -gnatc mode???\n "}, {"sha": "7e355b041b58b3cd94962c228a81732745a56508", "filename": "gcc/ada/g-byorma.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fg-byorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fg-byorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-byorma.adb?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2006-2007, AdaCore                     --\n+--                     Copyright (C) 2006-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -87,6 +87,7 @@ package body GNAT.Byte_Order_Mark is\n       then\n          Len := 2;\n          BOM := UTF16_LE;\n+\n       --  UTF-8 (endian-independent)\n \n       elsif Str'Length >= 3\n@@ -178,7 +179,7 @@ package body GNAT.Byte_Order_Mark is\n         and then Str (Str'First + 2) = Character'Val (16#78#)\n         and then Str (Str'First + 3) = Character'Val (16#6D#)\n       then\n-         --  Utf8, ASCII, some part of ISO8859, Shift-JIS, EUC,...\n+         --  UTF-8, ASCII, some part of ISO8859, Shift-JIS, EUC,...\n \n          Len := 0;\n          BOM := Unknown;"}, {"sha": "3a1ef9b4dd74a3a4b5c4e6caa19612f09289e1ac", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -935,14 +935,13 @@ procedure Gnatlink is\n \n       Objs_End := Linker_Objects.Last;\n \n-      --  Let's continue to compute the Link_Bytes, the linker options are\n-      --  part of command line length.\n+      --  Continue to compute the Link_Bytes, the linker options are part of\n+      --  command line length.\n \n       Store_File_Context;\n \n       while Next_Line (Nfirst .. Nlast) /= End_Info loop\n          Link_Bytes := Link_Bytes + Nlast - Nfirst + 2;\n-         --  See comment above\n          Get_Next_Line;\n       end loop;\n "}, {"sha": "a2b58be7ab1fe8f73380e30d52a3f897b8b3d15d", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -245,8 +245,7 @@ package body Prepcomp is\n                \"\"\" not found\");\n       end if;\n \n-      --  Initialize the scanner and set its behavior for a processing data\n-      --  file\n+      --  Initialize scanner and set its behavior for processing a data file\n \n       Scn.Scanner.Initialize_Scanner (Source_Index_Of_Preproc_Data_File);\n       Scn.Scanner.Set_End_Of_Line_As_Token (True);"}, {"sha": "c951140ff09e54d3d4b93ca26ba66d6fe837bc72", "filename": "gcc/ada/s-unstyp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fs-unstyp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fs-unstyp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-unstyp.ads?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package contains definitions of standard unsigned types that\n---  correspond in size to the standard signed types declared in Standard.\n+--  correspond in size to the standard signed types declared in Standard,\n --  and (unlike the types in Interfaces) have corresponding names. It\n --  also contains some related definitions for other specialized types\n --  used by the compiler in connection with packed array types."}, {"sha": "75f4512c72c9a1000b1a807d6fb725e88b125b68", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -2729,7 +2729,7 @@ package body Sem_Ch12 is\n       Save_Parent : Node_Id;\n \n    begin\n-      --  Create copy of generic unit,and save for instantiation. If the unit\n+      --  Create copy of generic unit, and save for instantiation. If the unit\n       --  is a child unit, do not copy the specifications for the parent, which\n       --  are not part of the generic tree.\n \n@@ -4040,14 +4040,15 @@ package body Sem_Ch12 is\n          Create_Instantiation_Source (N, Gen_Unit, False, S_Adjustment);\n \n          --  Copy original generic tree, to produce text for instantiation\n-         --  Inherit overriding indicator from instance node.\n \n          Act_Tree :=\n            Copy_Generic_Node\n              (Original_Node (Gen_Decl), Empty, Instantiating => True);\n \n+         --  Inherit overriding indicator from instance node\n+\n          Act_Spec := Specification (Act_Tree);\n-         Set_Must_Override (Act_Spec, Must_Override (N));\n+         Set_Must_Override     (Act_Spec, Must_Override (N));\n          Set_Must_Not_Override (Act_Spec, Must_Not_Override (N));\n \n          Renaming_List :=\n@@ -4634,7 +4635,7 @@ package body Sem_Ch12 is\n             --  Verify that the actual subprograms match. Note that actuals\n             --  that are attributes are rewritten as subprograms. If the\n             --  subprogram in the formal package is defaulted, no check is\n-            --  needed. Note that this can only happen in Ada2005 when the\n+            --  needed. Note that this can only happen in Ada 2005 when the\n             --  formal package can be partially parametrized.\n \n             if Nkind (Unit_Declaration_Node (E1)) =\n@@ -9982,7 +9983,9 @@ package body Sem_Ch12 is\n             Check_Restriction (No_Fixed_Point, Actual);\n          end if;\n \n-         --  Deal with error of using incomplete type as generic actual\n+         --  Deal with error of using incomplete type as generic actual.\n+         --  This includes limited views of a type, even if the non-limited\n+         --  view may be available.\n \n          if Ekind (Act_T) = E_Incomplete_Type\n            or else (Is_Class_Wide_Type (Act_T)"}, {"sha": "536118f9586b62a1b5709451f49ea1a7dac6ac89", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b473ab453920166e23ab2f136e05cd1d30ee329f/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b473ab453920166e23ab2f136e05cd1d30ee329f", "patch": "@@ -5797,9 +5797,9 @@ package Sinfo is\n \n       --  Note: overriding indicator is an Ada 2005 feature\n \n-      ------------------------------\n-      -- 12.3 Generic Actual Part --\n-      ------------------------------\n+      -------------------------------\n+      -- 12.3  Generic Actual Part --\n+      -------------------------------\n \n       --  GENERIC_ACTUAL_PART ::=\n       --    (GENERIC_ASSOCIATION {, GENERIC_ASSOCIATION})\n@@ -5812,9 +5812,10 @@ package Sinfo is\n       --    [generic_formal_parameter_SELECTOR_NAME =>]\n \n       --  Note: unlike the procedure call case, a generic association node\n-      --  is generated for every association, even if no formal is present.\n-      --  In this case the parser will leave the Selector_Name field set\n-      --  to Empty, to be filled in later by the semantic pass.\n+      --  is generated for every association, even if no formal parameter\n+      --  selector name is present. In this case the parser will leave the\n+      --  Selector_Name field set to Empty, to be filled in later by the\n+      --  semantic pass.\n \n       --  In Ada 2005, a formal may be associated with a box, if the\n       --  association is part of the list of actuals for a formal package."}]}