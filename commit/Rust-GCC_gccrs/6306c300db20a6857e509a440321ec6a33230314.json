{"sha": "6306c300db20a6857e509a440321ec6a33230314", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMwNmMzMDBkYjIwYTY4NTdlNTA5YTQ0MDMyMWVjNmEzMzIzMDMxNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-19T14:47:55Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-19T14:47:55Z"}, "message": "Replace PREV_INSN et al macros with functions\n\ngcc/\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* rtl.h (PREV_INSN): Convert to an inline function.  Strengthen\n\tthe return type from rtx to rtx_insn *,  which will enable various\n\tconversions in followup patches.  For now this is is done by a\n\tchecked cast.\n\t(NEXT_INSN): Likewise.\n\t(SET_PREV_INSN): Convert to an inline function.  This is intended\n\tfor use as an lvalue, and so returns an rtx& to allow in-place\n\tmodification.\n\t(SET_NEXT_INSN): Likewise.\n\nFrom-SVN: r214152", "tree": {"sha": "589ac48e7d95e2fa8ff1134994862a12df1b34c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/589ac48e7d95e2fa8ff1134994862a12df1b34c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6306c300db20a6857e509a440321ec6a33230314", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6306c300db20a6857e509a440321ec6a33230314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6306c300db20a6857e509a440321ec6a33230314", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6306c300db20a6857e509a440321ec6a33230314/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c77935ee29336399ab6318e912baa174e243654a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c77935ee29336399ab6318e912baa174e243654a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c77935ee29336399ab6318e912baa174e243654a"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "d2db5c902403d270e8067361971010cc8f9026f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6306c300db20a6857e509a440321ec6a33230314/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6306c300db20a6857e509a440321ec6a33230314/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6306c300db20a6857e509a440321ec6a33230314", "patch": "@@ -1,3 +1,15 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (PREV_INSN): Convert to an inline function.  Strengthen\n+\tthe return type from rtx to rtx_insn *,  which will enable various\n+\tconversions in followup patches.  For now this is is done by a\n+\tchecked cast.\n+\t(NEXT_INSN): Likewise.\n+\t(SET_PREV_INSN): Convert to an inline function.  This is intended\n+\tfor use as an lvalue, and so returns an rtx& to allow in-place\n+\tmodification.\n+\t(SET_NEXT_INSN): Likewise.\n+\n 2014-07-08  Mark Wielaard  <mjw@redhat.com>\n \n \tPR debug/59051"}, {"sha": "c9a3cb3617c4acd0cb6ae7a49f20a11c39a057cb", "filename": "gcc/rtl.h", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6306c300db20a6857e509a440321ec6a33230314/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6306c300db20a6857e509a440321ec6a33230314/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=6306c300db20a6857e509a440321ec6a33230314", "patch": "@@ -972,15 +972,33 @@ extern void rtl_check_failed_flag (const char *, const_rtx, const char *,\n   (RTL_INSN_CHAIN_FLAG_CHECK (\"INSN_UID\", (INSN))->u2.insn_uid)\n \n /* Chain insns together in sequence.  */\n+\n /* For now these are split in two: an rvalue form:\n      PREV_INSN/NEXT_INSN\n    and an lvalue form:\n      SET_NEXT_INSN/SET_PREV_INSN.  */\n \n-#define PREV_INSN(INSN)      XEXP ((const_rtx)(INSN), 0)\n-#define SET_PREV_INSN(INSN)  XEXP (INSN, 0)\n-#define NEXT_INSN(INSN)      XEXP ((const_rtx)(INSN), 1)\n-#define SET_NEXT_INSN(INSN)  XEXP (INSN, 1)\n+inline rtx_insn *PREV_INSN (const_rtx insn)\n+{\n+  rtx prev = XEXP (insn, 0);\n+  return safe_as_a <rtx_insn *> (prev);\n+}\n+\n+inline rtx& SET_PREV_INSN (rtx insn)\n+{\n+  return XEXP (insn, 0);\n+}\n+\n+inline rtx_insn *NEXT_INSN (const_rtx insn)\n+{\n+  rtx next = XEXP (insn, 1);\n+  return safe_as_a <rtx_insn *> (next);\n+}\n+\n+inline rtx& SET_NEXT_INSN (rtx insn)\n+{\n+  return XEXP (insn, 1);\n+}\n \n #define BLOCK_FOR_INSN(INSN) XBBDEF (INSN, 2)\n "}]}