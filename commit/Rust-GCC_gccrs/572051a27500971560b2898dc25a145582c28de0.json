{"sha": "572051a27500971560b2898dc25a145582c28de0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcyMDUxYTI3NTAwOTcxNTYwYjI4OThkYzI1YTE0NTU4MmMyOGRlMA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-05-19T20:27:36Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-05-19T20:27:36Z"}, "message": "acinclude.m4: Fix --help spacing, correct comments.\n\n2001-05-19  Phil Edwards  <pme@sources.redhat.com>\n\n\t* acinclude.m4:  Fix --help spacing, correct comments.\n\t* aclocal.m4:  Regenerate.\n\t* configure:  Regenerate.\n\t* mkcheck.in:  Add usage comments.\n\t* docs/html/documentation.html:  Point to doxygen'd tarball.\n\nFrom-SVN: r42316", "tree": {"sha": "9ab42221af021a884608152e156b0388fd462887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ab42221af021a884608152e156b0388fd462887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/572051a27500971560b2898dc25a145582c28de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572051a27500971560b2898dc25a145582c28de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/572051a27500971560b2898dc25a145582c28de0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572051a27500971560b2898dc25a145582c28de0/comments", "author": null, "committer": null, "parents": [{"sha": "97d24516096d049cb068a9c0ee55c87460735d2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d24516096d049cb068a9c0ee55c87460735d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d24516096d049cb068a9c0ee55c87460735d2a"}], "stats": {"total": 1785, "additions": 911, "deletions": 874}, "files": [{"sha": "b64845ffb4f784685cfc43a4ada68cbab266e38c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=572051a27500971560b2898dc25a145582c28de0", "patch": "@@ -1,3 +1,11 @@\n+2001-05-19  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* acinclude.m4:  Fix --help spacing, correct comments.\n+\t* aclocal.m4:  Regenerate.\n+\t* configure:  Regenerate.\n+\t* mkcheck.in:  Add usage comments.\n+\t* docs/html/documentation.html:  Point to doxygen'd tarball.\n+\n 2001-05-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/README: Add notes."}, {"sha": "1b57fe7a4c3f8cb0b6729582664969285864640f", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=572051a27500971560b2898dc25a145582c28de0", "patch": "@@ -1036,8 +1036,8 @@ dnl\n AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n   AC_MSG_CHECKING([for clocale to use])\n   AC_ARG_ENABLE(clocale,\n-  [  --enable-clocale       enable model for target locale package. \n-     --enable-clocale=MODEL use MODEL target-speific locale package. [default=generic]\n+  [  --enable-clocale        enable model for target locale package. \n+  --enable-clocale=MODEL  use MODEL target-speific locale package. [default=generic]\n   ], \n   if test x$enable_clocale = xno; then\n      enable_clocale=generic\n@@ -1080,8 +1080,8 @@ dnl\n AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n   AC_MSG_CHECKING([for cstdio to use])\n   AC_ARG_ENABLE(cstdio,\n-  [  --enable-cstdio        enable stdio for target io package. \n-     --enable-cstdio=LIB    use LIB target-speific io package. [default=stdio]\n+  [  --enable-cstdio         enable stdio for target io package. \n+  --enable-cstdio=LIB     use LIB target-speific io package. [default=stdio]\n   ], \n   if test x$enable_cstdio = xno; then\n      enable_cstdio=stdio\n@@ -1428,8 +1428,7 @@ define([GLIBCPP_ENABLE_CHEADERS_DEFAULT], ifelse($1, c_std, c_std, c_std))dnl\n AC_MSG_CHECKING([for c header strategy to use])\n AC_ARG_ENABLE(cheaders,\n changequote(<<, >>)dnl\n-<<  --enable-cheaders construct \"C\" header files for\n-                           g++ [default=>>GLIBCPP_ENABLE_CHEADERS_DEFAULT],\n+<<  --enable-cheaders       construct \"C\" header files for g++ [default=>>GLIBCPP_ENABLE_CHEADERS_DEFAULT],\n changequote([, ])\n   [case \"$enableval\" in\n    c) \n@@ -1567,6 +1566,9 @@ dnl  GLIBCPP_EXPORT_INSTALL_INFO\n dnl  calculates gxx_install_dir\n dnl  exports glibcpp_toolexecdir\n dnl  exports glibcpp_toolexeclibdir\n+dnl  exports glibcpp_builddir\n+dnl  exports glibcpp_srcdir\n+dnl  exports glibcpp_prefixdir\n dnl\n dnl Assumes cross_compiling bits already done, and with_cross_host in\n dnl particular\n@@ -1590,7 +1592,7 @@ AC_MSG_RESULT($libstdcxx_interface)\n # Process the option --with-gxx-include-dir=<path to include-files directory>\n AC_MSG_CHECKING([for --with-gxx-include-dir])\n AC_ARG_WITH(gxx-include-dir,\n-[ --with-gxx-include-dir  the installation directory for include files],\n+[  --with-gxx-include-dir  the installation directory for include files],\n [case \"${withval}\" in\n   yes)\n     AC_MSG_ERROR(Missing directory for --with-gxx-include-dir)"}, {"sha": "63efed04dd5fc27684bc7752fad455c4cdeedf60", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=572051a27500971560b2898dc25a145582c28de0", "patch": "@@ -1048,8 +1048,8 @@ dnl\n AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n   AC_MSG_CHECKING([for clocale to use])\n   AC_ARG_ENABLE(clocale,\n-  [  --enable-clocale       enable model for target locale package. \n-     --enable-clocale=MODEL use MODEL target-speific locale package. [default=generic]\n+  [  --enable-clocale        enable model for target locale package. \n+  --enable-clocale=MODEL  use MODEL target-speific locale package. [default=generic]\n   ], \n   if test x$enable_clocale = xno; then\n      enable_clocale=generic\n@@ -1092,8 +1092,8 @@ dnl\n AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n   AC_MSG_CHECKING([for cstdio to use])\n   AC_ARG_ENABLE(cstdio,\n-  [  --enable-cstdio        enable stdio for target io package. \n-     --enable-cstdio=LIB    use LIB target-speific io package. [default=stdio]\n+  [  --enable-cstdio         enable stdio for target io package. \n+  --enable-cstdio=LIB     use LIB target-speific io package. [default=stdio]\n   ], \n   if test x$enable_cstdio = xno; then\n      enable_cstdio=stdio\n@@ -1440,8 +1440,7 @@ define([GLIBCPP_ENABLE_CHEADERS_DEFAULT], ifelse($1, c_std, c_std, c_std))dnl\n AC_MSG_CHECKING([for c header strategy to use])\n AC_ARG_ENABLE(cheaders,\n changequote(<<, >>)dnl\n-<<  --enable-cheaders construct \"C\" header files for\n-                           g++ [default=>>GLIBCPP_ENABLE_CHEADERS_DEFAULT],\n+<<  --enable-cheaders       construct \"C\" header files for g++ [default=>>GLIBCPP_ENABLE_CHEADERS_DEFAULT],\n changequote([, ])\n   [case \"$enableval\" in\n    c) \n@@ -1579,6 +1578,9 @@ dnl  GLIBCPP_EXPORT_INSTALL_INFO\n dnl  calculates gxx_install_dir\n dnl  exports glibcpp_toolexecdir\n dnl  exports glibcpp_toolexeclibdir\n+dnl  exports glibcpp_builddir\n+dnl  exports glibcpp_srcdir\n+dnl  exports glibcpp_prefixdir\n dnl\n dnl Assumes cross_compiling bits already done, and with_cross_host in\n dnl particular\n@@ -1602,7 +1604,7 @@ AC_MSG_RESULT($libstdcxx_interface)\n # Process the option --with-gxx-include-dir=<path to include-files directory>\n AC_MSG_CHECKING([for --with-gxx-include-dir])\n AC_ARG_WITH(gxx-include-dir,\n-[ --with-gxx-include-dir  the installation directory for include files],\n+[  --with-gxx-include-dir  the installation directory for include files],\n [case \"${withval}\" in\n   yes)\n     AC_MSG_ERROR(Missing directory for --with-gxx-include-dir)"}, {"sha": "85cd0283d8a180096cd11760c57ded0ccdd2e7dc", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 867, "deletions": 857, "changes": 1724, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=572051a27500971560b2898dc25a145582c28de0"}, {"sha": "b451fc44ce6fcbe40b42d145eadb0b8bb3ce2c1a", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=572051a27500971560b2898dc25a145582c28de0", "patch": "@@ -3,7 +3,7 @@\n  <META NAME=\"KEYWORDS\" CONTENT=\"libstdc++, homepage, home, g++, libg++, STL\">\n  <TITLE>Standard C++ Library v3</TITLE>\n <LINK REL=StyleSheet HREF=\"lib3styles.css\">\n-<!-- $Id: documentation.html,v 1.7 2000/12/03 23:47:47 jsm28 Exp $ -->\n+<!-- $Id: documentation.html,v 1.1 2000/12/10 04:03:08 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -69,6 +69,21 @@ <H2><A NAME=\"3\">Chapter-Specific Information, Extensions, Notes and Advice</A></\n          <LI><A HREF=\"ext/howto.html\">Extensions to the Standard Library</A>\n       </OL>\n \n+<HR>\n+<H2><A NAME=\"4\">Source Documentation</A></H2>\n+<P>In addition to the distribution documentation (these pages), we also\n+   have a set of HTML documents generated from the sources themselves,\n+   using the Doxygen tool.  These are useful for examining the signatures\n+   of public member functions for the library classes, etc.  The latest\n+   collection is libstdc++-doxygen-20010501.tar.gz (3.7MB), available in\n+   the libstdc++ snapshots directory at\n+   <TT>&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/&gt;</TT>.  You will\n+   almost certainly need to use one of the\n+   <A HREF=\"http://gcc.gnu.org/mirrors.html\">mirror sites</A>.  After\n+   unpacking, simply load libstdc++-doxygen-20010501/index.html in a browser.\n+   Feedback (and additional documentation!) is welcome.\n+</P>\n+\n \n </BODY>\n </HTML>"}, {"sha": "58daf4159d918282dfc1b173dde4f2f492ee0f2c", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572051a27500971560b2898dc25a145582c28de0/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=572051a27500971560b2898dc25a145582c28de0", "patch": "@@ -23,8 +23,8 @@ elif [ \"$WHICH\"x = 1x ]; then\n   echo \"running mkcheck\"\n   echo \"$0: testing the install directory\"\n else\n-  echo 'Usage: mkcheck 0'\n-  echo '       mkcheck 1'\n+  echo 'Usage: mkcheck 0    /* test the build directory    */'\n+  echo '       mkcheck 1    /* test the install directory  */'\n   exit 1;\n fi\n "}]}