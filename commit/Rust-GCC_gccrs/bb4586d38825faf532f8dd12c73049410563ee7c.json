{"sha": "bb4586d38825faf532f8dd12c73049410563ee7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0NTg2ZDM4ODI1ZmFmNTMyZjhkZDEyYzczMDQ5NDEwNTYzZWU3Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-16T17:04:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-16T17:04:30Z"}, "message": "re PR c++/47999 ([C++0x] auto type deduction works incorrectly in a function template)\n\n\tPR c++/47999\n\t* semantics.c (finish_call_expr): Preserve reference semantics\n\tin templates.\n\nFrom-SVN: r171053", "tree": {"sha": "b52452674927ebc84d6820aa58bd3129547bd535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b52452674927ebc84d6820aa58bd3129547bd535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb4586d38825faf532f8dd12c73049410563ee7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4586d38825faf532f8dd12c73049410563ee7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb4586d38825faf532f8dd12c73049410563ee7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4586d38825faf532f8dd12c73049410563ee7c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8d7041a307a92daf512f1b076832834cdb16c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d7041a307a92daf512f1b076832834cdb16c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8d7041a307a92daf512f1b076832834cdb16c9b"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "ed5dcd85bda68f5aa6837159f7541275714f713e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb4586d38825faf532f8dd12c73049410563ee7c", "patch": "@@ -1,5 +1,9 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47999\n+\t* semantics.c (finish_call_expr): Preserve reference semantics\n+\tin templates.\n+\n \t* call.c (convert_default_arg): Use LOOKUP_IMPLICIT.\n \n 2011-03-16  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "ce24d468bdd086250531d8899f7315c47e4b208c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=bb4586d38825faf532f8dd12c73049410563ee7c", "patch": "@@ -2150,11 +2150,17 @@ finish_call_expr (tree fn, VEC(tree,gc) **args, bool disallow_virtual,\n     /* A call where the function is unknown.  */\n     result = cp_build_function_call_vec (fn, args, complain);\n \n-  if (processing_template_decl)\n+  if (processing_template_decl && result != error_mark_node)\n     {\n+      if (TREE_CODE (result) == INDIRECT_REF)\n+\tresult = TREE_OPERAND (result, 0);\n+      gcc_assert (TREE_CODE (result) == CALL_EXPR\n+\t\t  || TREE_CODE (fn) == PSEUDO_DTOR_EXPR\n+\t\t  || errorcount);\n       result = build_call_vec (TREE_TYPE (result), orig_fn, orig_args);\n       KOENIG_LOOKUP_P (result) = koenig_p;\n       release_tree_vector (orig_args);\n+      result = convert_from_reference (result);\n     }\n \n   return result;"}, {"sha": "649dc4c61f8b96e1cb2d93c6cabe333c212c7560", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb4586d38825faf532f8dd12c73049410563ee7c", "patch": "@@ -1,3 +1,7 @@\n+2011-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/auto22.C: New.\n+\n 2011-03-16  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/guality/vla-1.c (main): Use result of f1 to avoid"}, {"sha": "66630e5367ff36202130387ca10c2f4fb424c510", "filename": "gcc/testsuite/g++.dg/cpp0x/auto22.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4586d38825faf532f8dd12c73049410563ee7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto22.C?ref=bb4586d38825faf532f8dd12c73049410563ee7c", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/47999\n+// { dg-options -std=c++0x }\n+\n+int& identity(int& i)\n+{\n+  return i;\n+}\n+\n+// In a function template, auto type deduction works incorrectly.\n+template <typename = void>\n+void f()\n+{\n+  int i = 0;\n+  auto&& x = identity(i); // Type of x should be `int&`, but it is `int&&`.\n+}\n+\n+int main (int argc, char* argv[])\n+{\n+  f();\n+  return 0;\n+}"}]}