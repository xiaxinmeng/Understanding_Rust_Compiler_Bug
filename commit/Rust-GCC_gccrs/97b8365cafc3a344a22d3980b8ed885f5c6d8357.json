{"sha": "97b8365cafc3a344a22d3980b8ed885f5c6d8357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdiODM2NWNhZmMzYTM0NGEyMmQzOTgwYjhlZDg4NWY1YzZkODM1Nw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-09T19:58:05Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-09T19:58:05Z"}, "message": "Merged gcj-eclipse branch to trunk.\n\nFrom-SVN: r120621", "tree": {"sha": "996a5f57d4a68c53473382e45cb22f574cb3e4db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/996a5f57d4a68c53473382e45cb22f574cb3e4db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97b8365cafc3a344a22d3980b8ed885f5c6d8357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b8365cafc3a344a22d3980b8ed885f5c6d8357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b8365cafc3a344a22d3980b8ed885f5c6d8357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b8365cafc3a344a22d3980b8ed885f5c6d8357/comments", "author": null, "committer": null, "parents": [{"sha": "c648dedbde727ca3f883bb5fd773aa4af70d3369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c648dedbde727ca3f883bb5fd773aa4af70d3369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c648dedbde727ca3f883bb5fd773aa4af70d3369"}], "stats": {"total": 708877, "additions": 607313, "deletions": 101564}, "files": [{"sha": "5776df2c0fa98c7a2c75c7602af733415b00963b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 583, "deletions": 0, "changes": 583, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,3 +1,246 @@\n+2007-01-09  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (build_java_arrayaccess): Rewrite to generate array\n+\taccess in canonical form.\n+\t(expand_java_arraystore): Use build_fold_addr_expr() on address of\n+\tarray access.\n+\n+2007-01-03  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/28754\n+\t* expr.c (expand_java_field_op): If we're initializing a field's\n+\tdeclaring interface we should not also initialize the class\n+\tcontext in which it was referenced.\n+\n+2007-01-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java-tree.h (compiling_from_source, current_encoding,\n+\tJTI_FINIT_IDENTIFIER_NODE, JTI_INSTINIT_IDENTIFIER_NODE,\n+\tJTI_LENGTH_IDENTIFIER_NODE, JTI_SUPER_IDENTIFIER_NODE,\n+\tJTI_CONTINUE_IDENTIFIER_NODE, JTI_ACCESS0_IDENTIFIER_NODE,\n+\tJTI_WFL_OPERATOR): Removed\n+\t(finit_identifier_node, instinit_identifier_node,\n+\tlength_identifier_node, super_identifier_node,\n+\tcontinue_identifier_node, access0_identifier_node, wfl_operator):\n+\tRemoved.\n+\t(cyclic_inheritance_report,\n+\tDECL_FUNCTION_STATIC_METHOD_INVOCATION_COMPOUND,\n+\tDECL_FUNCTION_NAP, DECL_FUNCTION_SYNTHETIC_CTOR,\n+\tDECL_FIXED_CONSTRUCTOR_P): Removed.\n+\t(struct lang_decl_func) <smic, nap, synthetic_ctor, fixed_ctor>:\n+\tRemoved.\n+\t(TYPE_FINIT_STMT_LIST, TYPE_CLINIT_STMT_LIST, TYPE_II_STMT_LIST,\n+\tTYPE_IMPORT_LIST, TYPE_IMPORT_DEMAND_LIST): Removed.\n+\t(struct lang_type) <finit_stmt_list, clinit_stmt_list, ii_block,\n+\timport_list, import_demand_list>: Removed.\n+\t(java_layout_seen_class_methods, init_jcf_parse, init_src_parse,\n+\tcxx_keyword_p): Removed.\n+\t(DECL_FINIT_P, DECL_INSTINIT_P, ID_FINIT_P, ID_INSTINIT_P,\n+\tTYPE_UNUSED, TYPE_UNDERFLOW, TYPE_UNEXPECTED,\n+\tCLASS_ACCESS0_GENERATED_P, CLASS_HAS_FINIT_P,\n+\tIS_A_SINGLE_IMPORT_CLASSFILE_NAME_P, IS_A_CLASSFILE_NAME,\n+\tIS_AN_IMPORT_ON_DEMAND_P, COMPOUND_ASSIGN_P, SWITCH_HAS_DEFAULT,\n+\tPRIMARY_P, MODIFY_EXPR_FROM_INITIALIZATION_P,\n+\tCLASS_METHOD_CHECKED_P, FOR_LOOP_P, ANONYMOUS_CLASS_P,\n+\tLOCAL_CLASS_P, ARG_FINAL_P, SUPPRESS_UNREACHABLE_ERROR,\n+\tRESOLVE_PACKAGE_NAME_P, RESOLVE_TYPE_NAME_P, IS_BREAK_STMT_P,\n+\tIS_CRAFTED_STRING_BUFFER_P, IS_INIT_CHECKED, CALL_USING_SUPER,\n+\tNESTED_FIELD_ACCESS_IDENTIFIER_P, TOPLEVEL_CLASS_DECL_P,\n+\tPURE_INNER_CLASS_TYPE_P, TOPLEVEL_CLASS_TYPE_P,\n+\tCALL_CONSTRUCTOR_P, CALL_EXPLICIT_CONSTRUCTOR_P,\n+\tCALL_THIS_CONSTRUCTOR_P, CALL_SUPER_CONSTRUCTOR_P,\n+\tFINALLY_EXPR_LABEL, FINALLY_EXPR_BLOCK, BLOCK_IS_IMPLICIT,\n+\tBLOCK_EMPTY_P, IS_UNCHECKED_EXCEPTION_P, java_error_count,\n+\tjava_parse_abort_on_error, extract_field_decl): Removed.\n+\t(finput): Declare.\n+\t* lang.c: (compiling_from_source, current_encoding): Removed.\n+\t(java_handle_option): Ignore -fencoding.\n+\t* parse.h: Don't include lex.h.\n+\t(java_error_count, int_fits_type_p, stabilize_reference, RULE,\n+\tRECOVERED, DRECOVERED, RECOVER, DRECOVER, YYERROR_NOW,\n+\tYYNOT_TWICE, CLASS_MODIFIERS, FIELD_MODIFIERS, METHOD_MODIFIERS,\n+\tINTERFACE_MODIFIERS, INTERFACE_INNER_MODIFIERS,\n+\tINTERFACE_METHOD_MODIFIERS, INTERFACE_FIELD_MODIFIERS,\n+\tMODIFIER_WFL, THIS_MODIFIER_ONLY, parse_error_context,\n+\tABSTRACT_CHECK, JCONSTRUCTOR_CHECK, exit_java_complete_class,\n+\tCLASS_OR_INTERFACE, GET_REAL_TYPE, GET_TYPE_NAME,\n+\tOBSOLETE_MODIFIER_WARNING, OBSOLETE_MODIFIER_WARNING2,\n+\tBUILD_PTR_FROM_NAME, INCOMPLETE_TYPE_P,\n+\tJAVA_MAYBE_GENERATE_DEBUG_INFO, JBSC_TYPE_P, JSTRING_P,\n+\tJNULLP_TYPE_P, JDECL_P, TYPE_INTERFACE_P, TYPE_CLASS_P,\n+\tIDENTIFIER_INNER_CLASS_OUTER_FIELD_ACCESS,\n+\tMANGLE_OUTER_LOCAL_VARIABLE_NAME,\n+\tMANGLE_ALIAS_INITIALIZER_PARAMETER_NAME_ID,\n+\tMANGLE_ALIAS_INITIALIZER_PARAMETER_NAME_STRING,\n+\tSKIP_THIS_AND_ARTIFICIAL_PARMS, MARK_FINAL_PARMS,\n+\tUNMARK_FINAL_PARMS, CRAFTED_PARAM_LIST_FIXUP,\n+\tAIPL_FUNCTION_CREATION, AIPL_FUNCTION_DECLARATION,\n+\tAIPL_FUNCTION_CTOR_INVOCATION, AIPL_FUNCTION_FINIT_INVOCATION,\n+\tERROR_CANT_CONVERT_TO_BOOLEAN, ERROR_CANT_CONVERT_TO_NUMERIC,\n+\tERROR_CAST_NEEDED_TO_INTEGRAL, ERROR_VARIABLE_NOT_INITIALIZED,\n+\tLOOP_EXPR_BODY_MAIN_BLOCK, LOOP_EXPR_BODY_UPDATE_BLOCK,\n+\tLOOP_EXPR_BODY_CONDITION_EXPR, LOOP_EXPR_BODY_LABELED_BODY,\n+\tLOOP_EXPR_BODY_BODY_EXPR, PUSH_LABELED_BLOCK, POP_LABELED_BLOCK,\n+\tPUSH_LOOP, POP_LOOP, PUSH_EXCEPTIONS, POP_EXCEPTIONS,\n+\tIN_TRY_BLOCK_P, EXCEPTIONS_P, ANONYMOUS_ARRAY_BASE_TYPE,\n+\tANONYMOUS_ARRAY_DIMS_SIG, ANONYMOUS_ARRAY_INITIALIZER,\n+\tINVOKE_STATIC, INVOKE_NONVIRTUAL, INVOKE_SUPER, INVOKE_INTERFACE,\n+\tINVOKE_VIRTUAL, jdep_code, struct _jdep, JDEP_DECL, JDEP_DECL_WFL,\n+\tJDEP_KIND, JDEP_WFL, JDEP_MISC, JDEP_ENCLOSING, JDEP_CLASS,\n+\tJDEP_APPLY_PATCH, JDEP_GET_PATCH, JDEP_CHAIN, JDEP_TO_RESOLVE,\n+\tJDEP_RESOLVED_DECL, JDEP_RESOLVED, JDEP_RESOLVED_P, struct\n+\tjdeplist_s, jdeplists, CLASSD_FIRST, CLASSD_LAST, CLASSD_CHAIN,\n+\tJDEP_INSERT, SET_TYPE_FOR_RESOLUTION, WFL_STRIP_BRACKET,\n+\tSTRING_STRIP_BRACKETS, PROMOTE_RECORD_IF_COMPLETE,\n+\tBLOCK_CHAIN_DECL, GET_CURRENT_BLOCK, EXPR_WFL_GET_LINECOL,\n+\tEXPR_WFL_QUALIFICATION, QUAL_WFL, QUAL_RESOLUTION, QUAL_DECL_TYPE,\n+\tGET_SKIP_TYPE, COMPLETE_CHECK_OP, COMPLETE_CHECK_OP_0,\n+\tCOMPLETE_CHECK_OP_1, COMPLETE_CHECK_OP_2, BUILD_APPEND,\n+\tBUILD_STRING_BUFFER, BUILD_THROW, SET_WFL_OPERATOR,\n+\tPATCH_METHOD_RETURN_ERROR, CHECK_METHODS, CLEAR_DEPRECATED,\n+\tCHECK_DEPRECATED_NO_RESET, CHECK_DEPRECATED, REGISTER_IMPORT,\n+\tCURRENT_OSB, struct parser_ctxt, GET_CPC_LIST, CPC_INNER_P,\n+\tGET_CPC, GET_CPC_UN, GET_CPC_UN_MODE, GET_CPC_DECL_NODE,\n+\tGET_ENCLOSING_CPC, GET_NEXT_ENCLOSING_CPC,\n+\tGET_ENCLOSING_CPC_CONTEXT, INNER_ENCLOSING_SCOPE_CHECK, PUSH_CPC,\n+\tPUSH_ERROR, POP_CPC, DEBUG_CPC, CPC_INITIALIZER_LIST,\n+\tCPC_STATIC_INITIALIZER_LIST, CPC_INSTANCE_INITIALIZER_LIST,\n+\tCPC_INITIALIZER_STMT, CPC_STATIC_INITIALIZER_STMT,\n+\tCPC_INSTANCE_INITIALIZER_STMT, SET_CPC_INITIALIZER_STMT,\n+\tSET_CPC_STATIC_INITIALIZER_STMT,\n+\tSET_CPC_INSTANCE_INITIALIZER_STMT, JAVA_NOT_RADIX10_FLAG,\n+\tjava_complete_class, java_check_circular_reference,\n+\tjava_fix_constructors, java_layout_classes, java_reorder_fields,\n+\tjava_method_add_stmt, java_get_line_col, reset_report,\n+\tjava_init_lex, yyparse, java_parse, yyerror, java_expand_classes,\n+\tjava_finish_classes, ctxp, ctxp_for_generation,\n+\tctxp_for_generation_last): Removed.\n+\t* expr.c (force_evaluation_order): Don't mention NEW_CLASS_EXPR.\n+\t* mangle.c (utf8_cmp): New function.\n+\t(cxx_keywords): New global.\n+\t(cxx_keyword_p): New function.\n+\t* jvspec.c (JAVA_START_CHAR): Removed obsolete comment.\n+\t* java-tree.def (UNARY_PLUS_EXPR, NEW_ARRAY_EXPR,\n+\tNEW_ANONYMOUS_ARRAY_EXPR, NEW_CLASS_EXPR, THIS_EXPR,\n+\tCASE_EXPR, DEFAULT_EXPR, JAVA_CATCH_EXPR, SYNCHRONIZED_EXPR,\n+\tTHROW_EXPR, CONDITIONAL_EXPR, INSTANCEOF_EXPR, NEW_ARRAY_INIT,\n+\tCLASS_LITERAL, JAVA_EXC_OBJ_EXPR): Removed.\n+\t* Make-lang.in (java.srcextra): Do nothing.\n+\t(parse.c, keyword.h, gt-java-parse.h): Removed targets.\n+\t(JAVA_OBJS): Don't mention deleted files.\n+\t(java.mostlyclean): Likewise.\n+\t(java.clean): Likewise.\n+\t(JAVA_LEX_C): Removed.\n+\t(buffer.o, check-init.o, parse.o): Remove unused targets.\n+\t(typeck.o): Updated.\n+\t* jcf-parse.c (read_class): Comment out unused code.\n+\t(java_layout_seen_class_methods): New function.\n+\t(parse_source_file_1, parse_source_file_2, parse_source_file_3):\n+\tRemoved.\n+\t(java_parse_file): Comment out unused code.  Don't use 'ctxp'.\n+\t(init_jcf_parse): Removed.\n+\t* config-lang.in (gtfiles): Remove deleted files.\n+\t* decl.c (java_init_decl_processing): Don't initialize\n+\tfinit_identifier_node, instinit_identifier_node,\n+\tlength_identifier_node, super_identifier_node,\n+\tcontinue_identifier_node, access0_identifier_node.  Don't call\n+\tinit_jcf_parse.\n+\t* class.c (cyclic_inheritance_report): New global.\n+\t(add_method_1): Don't use\n+\tDECL_FUNCTION_STATIC_METHOD_INVOCATION_COMPOUND.\n+\t(maybe_layout_super_class): Comment out code.\n+\t(safe_layout_class): New function.\n+\t* java-gimplify.c (java_gimplify_expr): Removed CASE_EXPR,\n+\tDEFAULT_EXPR, NEW_ARRAY_INIT, JAVA_CATCH_EXPR, JAVA_EXC_OBJ_EXPR,\n+\tUNARY_PLUS_EXPR, NEW_ARRAY_EXPR, NEW_ANONYMOUS_ARRAY_EXPR,\n+\tNEW_CLASS_EXPR, SYNCHRONIZED_EXPR, CONDITIONAL_EXPR,\n+\tINSTANCEOF_EXPR, CLASS_LITERAL, THIS_EXPR.\n+\t(java_gimplify_case_expr): Removed.\n+\t(java_gimplify_default_expr): Likewise.\n+\t(java_gimplify_new_array_init): Likewise.\n+\t* parse.y: Removed.\n+\t* keyword.gperf, keyword.h: Removed.\n+\t* chartables.h: Removed.\n+\t* check-init.c: Removed.\n+\t* buffer.c, buffer.h: Removed.\n+\t* convert.h: Removed.\n+\t* gen-table.pl: Removed.\n+\t* lex.c, lex.h: Removed.\n+\n+2007-01-02  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (expand_java_arraystore): Make sure we perform a bounds\n+\tcheck at runtime before we perform a type check.\n+\n+2006-12-19  Andrew Haley  <aph@redhat.com>\n+\n+\t* decl.c: Bump minor BC ABI version.\n+\n+2006-12-13  Gary Benson  <gbenson@redhat.com>\n+\n+\t* jcf-depend.c (jcf_dependency_add_file): Mark filename unused.\n+\n+2006-12-12  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lang-specs.h: Pass -M options to jc1.\n+\t* jcf-depend.c (jcf_dependency_add_file): Don't emit\n+\tdependencies.\n+\n+2006-12-07  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* jcf-path.c (jcf_path_compute): Use platform PATH_SEPARATOR.\n+\n+2006-12-06  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* lang-specs.h: Pass '%U'-based options as separate arguments.\n+\n+2006-12-05  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/29495:\n+\t* jcf-parse.c (HANDLE_SYNTHETIC_ATTRIBUTE): Mark fields and\n+\tclasses as well.\n+\t* class.c (add_field): Handle ACC_SYNTHETIC.\n+\t(add_method_1): Likewise.  Handle bridge and varargs.\n+\t(get_access_flags_from_decl): Handle synthetic, bridge, varargs,\n+\tannotation.\n+\t(set_class_decl_access_flags): Handle synthetic and annotation.\n+\t* java-tree.h (METHOD_BRIDGE): New macro.\n+\t(METHOD_VARARGS): Likewise.\n+\t(TYPE_SYNTHETIC): Likewise.\n+\t(TYPE_ANNOTATION): Likewise.\n+\t(lang_type): New fields 'synthetic' and 'annotation'.\n+\t(lang_decl_func): New fields 'varargs' and 'bridge'.\n+\n+2006-12-04  Andrew Haley  <aph@redhat.com>\n+\n+\t* jcf-parse.c (rewrite_reflection_indexes): Don't do anything if\n+\tthere's no map.\n+\n+2006-11-29  Gary Benson  <gbenson@redhat.com>\n+\n+\t* expr.c (rewrite_arglist_getcaller): Reorder.\n+\n+2006-11-29  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (rewrite_arglist_getcaller): Remove DECL_INLINE.\n+\t* lang.c (java_decl_ok_for_sibcall): Check for DECL_INLINE.\n+\n+2006-11-23  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (rewrite_arglist_getcaller): New.\n+\t(rewrite_arglist_getclass): Fix indentation.\n+\t(rules): Add gnu.classpath.VMStackWalker.getCallingClass() and \n+\tgnu.classpath.VMStackWalker.getCallingClassLoader().\n+\t* builtins.c (initialize_builtins): Remove duplicate def'n of\n+\t__sync_synchronize.\n+\tAdd __builtin_return_address.\n+\n+2006-11-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* jcf-reader.c (get_attribute): Mark attr_type unused.\n+\n+\t* builtins.c (compareAndSwapObject_builtin): Fix declaration.\n+\n 2007-01-08  Richard Guenther  <rguenther@suse.de>\n \n \t* lex.c (do_java_lex): Use build_int_cst_wide_type.\n@@ -18,6 +261,346 @@\n \t* check-init.c (check_init): Remove handling of FIX_CEIL_EXPR,\n \tFIX_FLOOR_EXPR and FIX_ROUND_EXPR.\n \n+2006-11-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* java-tree.h (CONSTANT_LazyFlag): New.\n+\t* constants.c (build_constants_constructor): Mask CONSTANT_LazyFlag.\n+\t* jcf-parse.c (handle_innerclass_attribute): Write attribute to\n+\treflection_data.\n+\t(handle_constant): Return 0 for dummy cpool entries.\n+\tHandle constants of kind Class.\n+\tHandle constants of kind NameAndType.\n+\t(handle_enclosingmethod_attribute): New.\n+\t(handle_signature_attribute): New.\n+\t(HANDLE_ENCLOSINGMETHOD_ATTRIBUTE): New.\n+\t(HANDLE_SIGNATURE_ATTRIBUTE): New.\n+\t(handle_constant): Use unmangle_classname()rather than calling\n+\tidentifier_subst() directly.\n+\n+2006-11-02  Andrew Haley  <aph@redhat.com>\n+\n+\t* java-tree.h (FIELD_ENUM): New.\n+\t(lang_decl_var.field_enum): New.\n+\t(lang_type.enum_class): New.\n+\t(CLASS_ENUM): New.\n+\t* class.c (set_class_decl_access_flags): Handle enum types.\n+\t(add_field): Handle enum fields.\n+\t(get_access_flags_from_decl): Likewise.\n+\n+\t* class.c (make_class_data): Put reflection_data into rodata.\n+\n+2006-11-01  Andrew Haley  <aph@redhat.com>\n+\n+\t* jcf-parse.c (field_offsets, bit_obstack): New variables.\n+\t(jcf_parse): Write end marker to annotation_data.\n+\t(java_parse_file): Create field_offsets bitmap.  Destroy it.\n+\t(annotation_grow, annotation_rewrite_byte) \n+\t(annotation_rewrite_short, annotation_rewrite_int) \n+\t(annotation_read_short, annotation_write_byte) \n+\t(annotation_write_short, annotation_write_int) \n+\t(handle_long_constant, handle_constant, handle_element_value) \n+\t(handle_annotation, handle_annotations) \n+\t(handle_annotation_attribute, rewrite_reflection_indexes) \n+\t(handle_member_annotations, handle_parameter_annotations) \n+\t(handle_default_annotation): New functions.\n+\t(HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE) \n+\t(HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE) \n+\t(HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE) \n+\t(HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE) \n+\t(HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE): New definitions.\n+\t* java-tree.h (enum jv_attr_type, enum jv_attr_kind): New. \n+\t(TYPE_REFLECTION_DATA): New.\n+\t(TYPE_REFLECTION_DATASIZE): New.\n+\t* jcf.h (enum cpool_tag): Convert a bunch of #define constants to\n+\tan enum.\n+\t* jcf-reader.c (get_attribute): Pass field/method index and\n+\tattribute type to get_attribute().\n+\t* constants.c (find_class_or_string_constant): Make nonstatic.\n+\t(cpool_for_class): Likewise.\n+\t(build_constants_constructor): Separate string and scalar types.\n+\t* class.c (make_class_data): Generate field_indexes permutation.\n+\tPass it to rewrite_reflection_indexes().\n+\t(make_class_data): Generate constructor for reflection_data field.\n+\n+2006-10-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcj.texi (Top): Don't mention jv-scan.\n+\t(Invoking gcj): Likewise.\n+\t(Invoking gcjh): Likewise.\n+\t(Invoking gjnih): Likewise.\n+\t(Invoking gij): Likewise.\n+\t(Invoking gcj-dbtool): Likewise.\n+\t(Invoking jv-scan): Removed.\n+\t* parse-scan.y: Removed.\n+\t* jv-scan.c: Removed.\n+\t* config-lang.in (stagestuff): Don't mention jv-scan.\n+\t* Make-lang.in (java): Removed jv-scan.\n+\t(JAVA_TARGET_INDEPENDENT_BIN_TOOLS): Likewise.\n+\t(JVSCAN_OBJS): Removed.\n+\t(jv-scan$(exeext)): Likewise.\n+\t(JAVA_MANFILES): Removed jv-scan.1.\n+\t(java.uninstall): Don't mention jv-scan.\n+\t(java.mostlyclean): Likewise.\n+\t(java.maintainer-clean): Likewise.\n+\t(.INTERMEDIATE): Likewise.\n+\t(java/jv-scan.o): Removed.\n+\t(jv-scan.pod): Likewise.\n+\t(java.srcextra): Don't mention parse-scan.c.\n+\t(java.mostlyclean): Likewise.\n+\t(java/parse-scan.c): Removed.\n+\t(java/parse-scan.o-warn): Removed.\n+\t(java/parse-scan.o): Removed.\n+\n+2006-10-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lang.c (java_handle_option): Don't use\n+\tjcf_write_base_directory.\n+\t* jcf.h (jcf_write_base_directory): Removed.\n+\t* parse.y (java_expand_classes): Don't call write_classfile.\n+\t* config-lang.in (gtfiles): Removed jcf-write.c.\n+\t* Make-lang.in (JAVA_OBJS): Removed jcf-write.o.\n+\t(java/jcf-write.o): Removed.\n+\t* jcf-parse.c (parse_class_file): Don't call write_classfile.\n+\t* java-tree.h (write_classfile): Removed declaration.\n+\t* jcf-write.c: Removed.\n+\n+2006-10-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (java): Removed gjnih, gcjh.\n+\t(JAVA_TARGET_INDEPENDENT_BIN_TOOLS): Likewise.\n+\t(GCJH_OBJS): Removed.\n+\t(GJNIH_OBJS): Likewise.\n+\t(gjnih$(exeext)): Likewise.\n+\t(gcjh$(exeext)): Likewise.\n+\t(JAVA_MANFILES): Removed gcjh.1, gjnih.1.\n+\t(java.install-common): Don't special case gcjh.\n+\t(java.uninstall): Don't mention gcjh, gjnih.\n+\t(java.mostlyclean): Likewise.\n+\t(java.maintainer-clean): Likewise.\n+\t(.INTERMEDIATE): Likewise.\n+\t(gcjh.pod): Removed.\n+\t(gjnih.pod): Likewise.\n+\t(GCJH_TARGET_INSTALL_NAME): Removed.\n+\t(java/gjavah-jni.o): Removed.\n+\t(java/gjavah.o): Likewise.\n+\t* config-lang.in (stagestuff): Removed gjnih, gcjh.\n+\t* gjavah.c: Removed.\n+\n+2006-10-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-dump.c (print_element_value): Expect a utf8 constant in the\n+\t\"string\" case.\n+\n+2006-10-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jvgenmain.c (main): Handle -findirect-dispatch.\n+\t* jvspec.c (jvgenmain_spec): Pass -findirect-dispatch to\n+\tjvgenmain.\n+\n+2006-10-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* builtins.c (compareAndSwapInt_builtin): Check that we really do\n+\thave a compare_and_swap builtin.\n+\t(compareAndSwapLong_builtin): Likewise.\n+\t(compareAndSwapObject_builtin): Likewise.\n+\n+2006-10-04  Andrew Haley  <aph@redhat.com>\n+\n+\t* builtins.c (java_builtins): Add compareAndSwapInt,\n+\tcompareAndSwapLong, compareAndSwapObject, putOrderedInt,\n+\tputOrderedLong, putOrderedObject, putIntVolatile, putLongVolatile,\n+\tputObjectVolatile, getObjectVolatile, getIntVolatile,\n+\tgetLongVolatile, getLong.\n+\t(UNMARSHAL3): New macro.\n+\t(UNMARSHAL4): Likewise.\n+\t(UNMARSHAL5): Likewise.\n+\t(build_arglist_for_builtin): New function.\n+\t(build_addr_sum, build_check_this): New functions.\n+\t(putObject_builtin. compareAndSwapInt_builtin,\n+\tcompareAndSwapLong_builtin, compareAndSwapObject_builtin,\n+\tputVolatile_builtin, getVolatile_builtin): New builtins.\n+\n+2006-06-08  Andrew Haley  <aph@redhat.com>\n+ \n+\t* expr.c (build_field_ref): Pass NULL_TREE as SPECIAL arg to\n+\tget_symbol_table_index().\n+\t(maybe_rewrite_invocation): Set SPECIAL if we need to access a\n+\tprivate method.\n+\t(build_known_method_ref): New arg: special.  Pass it to\n+\tget_symbol_table_index.\n+\t(get_symbol_table_index): Put SPECIAL in the TREE_PURPOSE field of\n+\tthe method list.\n+\t(build_invokevirtual): New arg: special.  Pass it to\n+\tget_symbol_table_index.\n+\t(expand_invoke): New variable: special.\n+\tPass it to maybe_rewrite_invocation().\n+\tPass it to build_known_method_ref().\n+\t* class.c (build_symbol_entry): Add new arg: special.  Use it to\n+\tbuild the symbol table conbstructor.\n+\t(emit_symbol_table): Extract SPECIAL from the method list and pass\n+\tit to build_symbol_entry().\n+\t* parse.y (patch_invoke): Call maybe_rewrite_invocation() and set\n+\tspecial accordingly.\n+ \n+2006-09-08  Andrew Haley  <aph@redhat.com>\n+\n+\t* class.c (layout_class_method): Use build_java_signature, not\n+\tbuild_java_argument_signature.  Use lookup_java_method, not\n+\tlookup_argument_method.\n+\n+2006-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\t* jvspec.c (lang_specific_driver): Add -s-bc-abi when needed.\n+\n+2006-07-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lang.opt: Added missing -W options.\n+\n+2006-07-12  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/28329:\n+\t* lang-specs.h: Pass '%U'-based options as separate arguments.\n+\tUse -faux-classpath.\n+\t* lang.c (java_handle_option): Handle OPT_faux_classpath.\n+\t* lang.opt (faux-classpath): New option.\n+\n+2006-07-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* class.c (make_class_data): Set value for reflection_data field.\n+\t* decl.c (java_init_decl_processing): Add reflection_data field.\n+\n+2006-07-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-dump.c (HANDLE_ENCLOSINGMETHOD_ATTRIBUTE): Declare locals\n+\tearlier.\n+\t(HANDLE_SIGNATURE_ATTRIBUTE): Likewise.\n+\n+2006-07-07  Andrew Haley  <aph@redhat.com>\n+\n+        * jcf-parse.c (set_source_filename): Don't check for\n+\tCLASS_FROM_CURRENTLY_COMPILED_P.\n+        Remove // comments.\n+\n+2006-07-07  Andrew Haley  <aph@redhat.com>\n+\n+\t* java-tree.h (java_read_sourcefilenames): Declare.\n+\t* lang.c (java_handle_option): Call java_read_sourcefilenames().\n+\t* lang.opt (fsource-filename): New opt.\n+\t* lang-specs.h: Add -fsource-filename.\n+\t* jcf-parse.c (num_files, filenames): New variables.\n+\t(reverse, cmpstringp, java_read_sourcefilenames,\n+\tfind_sourcefile): New.\n+\t(set_source_filename): Call find_sourcefile to find the real name\n+\tof a source file.\n+\n+2006-06-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-reader.c (get_attribute): Handle EnclosingMethod,\n+\tSignature, LocalVariableTypeTable, annotation attributes.\n+\t* jcf-dump.c (HANDLE_ENCLOSINGMETHOD_ATTRIBUTE): New macro.\n+\t(HANDLE_SIGNATURE_ATTRIBUTE): Likewise.\n+\t(HANDLE_START_FIELD): Mention 'descriptor', not 'signature'.\n+\t(HANDLE_METHOD): Likewise.\n+\t(HANDLE_LOCALVARIABLETYPETABLE_ATTRIBUTE): New macro.\n+\t(print_annotation): New function.\n+\t(print_element_value): Likewise.\n+\t(indent): Likewise.\n+\t(HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE): New macro.\n+\t(HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE): Likewise.\n+\t(print_parameter_annotations): New function.\n+\t(HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE): New macro.\n+\t(HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE):\n+\tLikewise.\n+\t(HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE): Likewise.\n+\t(print_annotations): New function.\n+\n+2006-06-23  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lang-specs.h: Default -fsource and -ftarget to 1.5.  If\n+\temitting class files, always use 1.5.\n+\t* gcj.texi (Input Options): Document -fsource.\n+\t(Code Generation): Document -ftarget.\n+\n+2006-06-21  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/28089:\n+\t* expr.c (expand_java_field_op): Initialize field's declaring\n+\tclass.\n+\n+2006-06-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* expr.c (push_value): Always flush quick stack.\n+\n+2006-06-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* expr.c (push_value): Also flush quick stack if value is a\n+\tcomponent_ref.\n+\n+2006-06-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* expr.c (push_value): Flush quick stack if value has side\n+\teffects.\n+\n+2006-06-13  Tom Tromey  <tromey@redhat.com>\n+\n+\t* class.c (is_compiled_class): Explicitly check for current\n+\tclass.\n+\n+2006-06-09  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gjavah.c (decompile_method): Don't decompile a static field\n+\taccessor method.\n+\n+2006-06-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lang-specs.h <jc1>: Add .jar file to command line if\n+\t-fsaw-java-file.  Also, remove -ffilelist-file in this case.\n+\n+2006-06-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-dump.c (print_access_flags): Handle varargs, bridge,\n+\tsynthetic, enum, annotation.\n+\t* jcf.h (ACC_BRIDGE): New macro.\n+\t(ACC_VARARGS): Likewise.\n+\t(ACC_SYNTHETIC): Likewise.\n+\t(ACC_ENUM): Likewise.\n+\t(ACC_ANNOTATION): Likewise.\n+\n+2006-06-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lang.opt (-fsaw-java-file, -fsource, -ftarget): New options.\n+\t* jvspec.c (jvgenmain_spec): Remove -fsaw-java-file, -fsource,\n+\tand -ftarget.\n+\t(lang_specific_driver): Removed dead code.  Add -fsaw-java-file\n+\twhen needed.  Handle classpath-setting.\n+\t* Make-lang.in ($(GCJ)$(exeext)): Link in jcf-path.o.\n+\t* lang-specs.h: Rewrote.\n+\n+2006-06-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-io.c (find_class): Set source_ok to 0.\n+\t* jcf-parse.c (jcf_parse): Disable gnu.gcj.gcj-compiled warning.\n+\t(parse_class_file): Don't call java_mark_class_local.\n+\t(java_parse_file): Skip .java files.  Call java_mark_class_local\n+\tbefore lowering any code.\n+\t(parse_zip_file_entries): Don't call duplicate_class_warning\n+\there.\n+\t(process_zip_dir): ... call it here.\n+\t* class.c (add_field): Don't mark field external if it is being\n+\tcompiled into this object.\n+\t(make_class_data): Handle situation where class_dtable_decl is\n+\tcreated before Class is compiled.\n+\t(is_compiled_class): Don't assume files in zip are compiled into\n+\tthis object.\n+\t(layout_class_method): Don't mark method external if it is being\n+\tcompiled into this object.\n+\n+2006-06-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-path.c (jcf_path_compute): New function.\n+\t* jcf.h (jcf_path_compute): Declare.\n+\n 2006-10-23 Rafael Avila de Espindola  <rafael.espindola@gmail.com>\n \n \t* decl.c: Include langhooks.h."}, {"sha": "f1c347ffeb1a8979b083ee28e1797d67bf407c63", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 20, "deletions": 112, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,7 @@\n # Top level -*- makefile -*- fragment for the GNU compiler for the Java(TM)\n # language.\n-#   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+#   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+#   2005, 2006, 2007 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -43,18 +44,15 @@\n # Actual names to use when installing a native compiler.\n JAVA_INSTALL_NAME := $(shell echo gcj|sed '$(program_transform_name)')\n JAVA_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gcj|sed '$(program_transform_name)')\n-GCJH_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gcjh|sed '$(program_transform_name)')\n \n GCJ = gcj\n \n # Define the names for selecting java in LANGUAGES.\n-java: jc1$(exeext) $(GCJ)$(exeext) jvgenmain$(exeext) \\\n-      gcjh$(exeext) jv-scan$(exeext) jcf-dump$(exeext) \\\n-      gjnih$(exeext)\n+java: jc1$(exeext) $(GCJ)$(exeext) jvgenmain$(exeext) jcf-dump$(exeext)\n \n # Define the name of target independent tools to be installed in $(bindir)\n # Names are subject to changes\n-JAVA_TARGET_INDEPENDENT_BIN_TOOLS = gcjh gjnih jv-scan jcf-dump\n+JAVA_TARGET_INDEPENDENT_BIN_TOOLS = jcf-dump\n \n # Tell GNU make to ignore these if they exist.\n .PHONY: java\n@@ -67,55 +65,28 @@ jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION))\n \n # Create the compiler driver for $(GCJ).\n-$(GCJ)$(exeext): $(GCC_OBJS) jvspec.o version.o \\\n+$(GCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o version.o \\\n \t   prefix.o intl.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) jvspec.o \\\n-\t  prefix.o intl.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  java/jcf-path.o prefix.o intl.o \\\n+\t  version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the $(GCJ) driver which calls the cross-compiler.\n $(GCJ)-cross$(exeext): $(GCJ)$(exeext)\n \t-rm -f $(GCJ)-cross$(exeext)\n \tcp $(GCJ)$(exeext) $(GCJ)-cross$(exeext)\n \n-java.srcextra: java/parse.c java/parse-scan.c\n-\t-cp -p $^ $(srcdir)/java\n-\n-java/parse.c: java/parse.y\n-\t-$(BISON) -t --name-prefix=java_ $(BISONFLAGS) -o $@ $<\n-\n-java/parse-scan.c: java/parse-scan.y\n-\t-$(BISON) -t $(BISONFLAGS) -o $@ $< \n-\n-$(srcdir)/java/keyword.h: $(srcdir)/java/keyword.gperf\n-\t(cd $(srcdir)/java || exit 1; \\\n-\tgperf -L ANSI-C -C -F ', 0' -p -t -j1 -i 1 -g -o -N java_keyword -k1,4,$$ \\\n-\t\tkeyword.gperf > k$$$$.h || { \\\n-\techo \"Please update gperf from ftp://ftp.gnu.org/pub/gnu/gperf/\" >&2; \\\n-\trm -f k$$$$.h; \\\n-\texit 1; } ; \\\n-\tmv -f k$$$$.h keyword.h)\n-\n-gt-java-parse.h : s-gtype ; @true\n+java.srcextra:\n \n # Executables built by this Makefile:\n-JAVA_OBJS = java/parse.o java/class.o java/decl.o java/expr.o \\\n+JAVA_OBJS = java/class.o java/decl.o java/expr.o \\\n   java/constants.o java/lang.o java/typeck.o java/except.o \\\n   java/verify-glue.o java/verify-impl.o \\\n   java/zextract.o java/jcf-io.o java/win32-host.o java/jcf-parse.o java/mangle.o \\\n   java/mangle_name.o java/builtins.o java/resource.o \\\n-  java/jcf-write.o java/buffer.o java/check-init.o java/jcf-depend.o \\\n+  java/jcf-depend.o \\\n   java/jcf-path.o java/boehm.o java/java-gimplify.o\n \n-GCJH_OBJS = java/gjavah.o java/jcf-io.o java/jcf-depend.o java/jcf-path.o \\\n-  java/win32-host.o java/zextract.o version.o errors.o ggc-none.o \\\n-  intl.o\n-\n-GJNIH_OBJS = java/gjavah-jni.o java/jcf-io.o java/jcf-depend.o java/jcf-path.o \\\n-  java/win32-host.o java/zextract.o version.o errors.o \\\n-  ggc-none.o intl.o\n-\n-JVSCAN_OBJS = java/parse-scan.o java/jv-scan.o version.o intl.o\n-\n JCFDUMP_OBJS = java/jcf-dump.o java/jcf-io.o java/jcf-depend.o java/jcf-path.o \\\n \t\tjava/win32-host.o java/zextract.o errors.o version.o ggc-none.o intl.o\n \n@@ -128,26 +99,13 @@ java-warn = $(STRICT_WARN)\n jvspec.o-warn = -Wno-error\n \n # Bison-1.75 output often yields (harmless) -Wtraditional warnings\n-java/parse-scan.o-warn = -Wno-error\n java/parse.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(JAVA_OBJS) $(BACKEND) $(ZLIB) $(LIBICONV) $(LIBS) attribs.o\n \n-gcjh$(exeext): $(GCJH_OBJS) $(LIBDEPS)\n-\trm -f $@\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCJH_OBJS) $(CPPLIBS) $(ZLIB) $(LIBS)\n-\n-gjnih$(exeext): $(GJNIH_OBJS) $(LIBDEPS)\n-\trm -f $@\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GJNIH_OBJS) $(CPPLIBS) $(ZLIB) $(LIBS)\n-\n-jv-scan$(exeext): $(JVSCAN_OBJS) $(LIBDEPS)\n-\trm -f $@\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JVSCAN_OBJS) $(LIBICONV) $(LIBS)\n-\n jcf-dump$(exeext): $(JCFDUMP_OBJS) $(LIBDEPS)\n \trm -f $@\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JCFDUMP_OBJS) \\\n@@ -179,9 +137,9 @@ java.srcinfo: doc/gcj.info\n java.dvi: doc/gcj.dvi\n java.pdf: doc/gcj.pdf\n java.html: $(build_htmldir)/java/index.html\n-JAVA_MANFILES = doc/gcj.1 doc/gcjh.1 doc/jv-scan.1 doc/jcf-dump.1 doc/gij.1 \\\n+JAVA_MANFILES = doc/gcj.1 doc/jcf-dump.1 doc/gij.1 \\\n                 doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1 \\\n-\t\tdoc/gcj-dbtool.1 doc/gjnih.1\n+\t\tdoc/gcj-dbtool.1\n \n java.man: $(JAVA_MANFILES)\n \n@@ -191,14 +149,10 @@ java.srcman: $(JAVA_MANFILES)\n check-java :\n \n # Install hooks:\n-# jc1, gcj, jvgenmain, and gcjh are installed elsewhere as part\n+# jc1, gcj, and jvgenmain are installed elsewhere as part\n # of $(COMPILERS).\n \n # Install gcj as well as the target-independent tools.\n-# For a native build, we special-case gcjh and also install\n-# its explicitly-prefixed variant. This allows us to write\n-# portable makefiles for both cross builds (where gcjh *must*\n-# be explicitly prefixed) and native builds.\n java.install-common: installdirs\n \t-if [ -f $(GCJ)$(exeext) ]; then \\\n \t  rm -f $(DESTDIR)$(bindir)/$(JAVA_INSTALL_NAME)$(exeext); \\\n@@ -218,13 +172,6 @@ java.install-common: installdirs\n \t    rm -f $(DESTDIR)$(bindir)/$$tool_transformed_name$(exeext); \\\n \t    $(INSTALL_PROGRAM) $$tool$(exeext) $(DESTDIR)$(bindir)/$$tool_transformed_name$(exeext); \\\n \t    chmod a+x $(DESTDIR)$(bindir)/$$tool_transformed_name$(exeext); \\\n-\t    if [ -f $(GCJ)-cross$(exeext) ]; then \\\n-\t      true; \\\n-\t    elif [ $$tool = gcjh ]; then \\\n-\t      rm -f $(DESTDIR)$(bindir)/$(GCJH_TARGET_INSTALL_NAME)$(exeext); \\\n-\t      ( cd $(DESTDIR)$(bindir) && \\\n-\t        $(LN) $$tool_transformed_name$(exeext) $(GCJH_TARGET_INSTALL_NAME)$(exeext) ); \\\n-\t    fi; \\\n           fi ; \\\n        done\n \n@@ -233,9 +180,6 @@ java.install-man:\n java.uninstall:\n \t-rm -rf $(DESTDIR)$(bindir)/$(JAVA_INSTALL_NAME)$(exeext)\n \t-rm -rf $(DESTDIR)$(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext)\n-\t-rm -rf $(DESTDIR)$(man1dir)/gcjh$(man1ext)\n-\t-rm -rf $(DESTDIR)$(man1dir)/gjnih$(man1ext)\n-\t-rm -rf $(DESTDIR)$(man1dir)/jv-scan$(man1ext)\n \t-rm -rf $(DESTDIR)$(man1dir)/jcf-dump$(man1ext)\n \t-rm -rf $(DESTDIR)$(man1dir)/gij$(man1ext)\n \t-rm -rf $(DESTDIR)$(man1dir)/jv-convert$(man1ext)\n@@ -249,18 +193,16 @@ java.install-info: $(DESTDIR)$(infodir)/gcj.info\n # We just have to delete files specific to us.\n \n java.mostlyclean:\n-\t-rm -f java/parse.c java/parse-scan.c\n \t-rm -f java/*$(objext) $(DEMANGLER_PROG)\n \t-rm -f java/*$(coverageexts)\n-\t-rm -f jc1$(exeext) $(GCJ)$(exeext) jvgenmain$(exeext) gcjh$(exeext) \\\n-          gjnih$(exeext) jv-scan$(exeext) jcf-dump$(exeext) s-java\n+\t-rm -f jc1$(exeext) $(GCJ)$(exeext) jvgenmain$(exeext) \\\n+          jcf-dump$(exeext) s-java\n java.clean:\n java.distclean:\n \t-rm -f java/config.status java/Makefile\n-\t-rm -f java/parse.output java/y.tab.c\n java.maintainer-clean:\n-\t-rm -f $(docobjdir)/gcj.1 $(docobjdir)/gcjh.1 $(docobjdir)/gjnih.1\n-\t-rm -f $(docobjdir)/jv-scan.1 $(docobjdir)/jcf-dump.1\n+\t-rm -f $(docobjdir)/gcj.1\n+\t-rm -f $(docobjdir)/jcf-dump.1\n \t-rm -f $(docobjdir)/gij.1\n \t-rm -f $(docobjdir)/jv-convert.1\n \t-rm -f $(docobjdir)/grmic.1\n@@ -286,22 +228,14 @@ java.stagefeedback: stageprofile-start\n #\f\n # .o:.h dependencies.\n JAVA_TREE_H = $(TREE_H) $(HASHTAB_H) java/java-tree.h java/java-tree.def\n-JAVA_LEX_C = java/lex.c java/keyword.h java/chartables.h\n \n java/jcf-dump.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(JAVA_TREE_H) \\\n   java/jcf-dump.c java/jcf-reader.c java/jcf.h java/javaop.h java/javaop.def \\\n   version.h $(GGC_H) intl.h\n-java/gjavah.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(JAVA_TREE_H) \\\n-  java/gjavah.c java/jcf-reader.c java/jcf.h java/javaop.h version.h $(GGC_H) \\\n-  intl.h\n java/boehm.o: java/boehm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(TREE_H) $(JAVA_TREE_H) java/parse.h toplev.h\n-java/buffer.o: java/buffer.c $(CONFIG_H) java/buffer.h $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) toplev.h\n java/builtins.o: java/builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H) $(GGC_H) $(FLAGS_H) langhooks.h gt-java-builtins.h\n-java/check-init.o: java/check-init.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) toplev.h\n java/class.o: java/class.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H) $(RTL_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n   $(TARGET_H) $(FUNCTION_H) gt-java-class.h $(CGRAPH_H)\n@@ -323,11 +257,6 @@ java/jcf-depend.o: java/jcf-depend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(FLAGS_H) \\\n   input.h java/java-except.h $(SYSTEM_H) coretypes.h $(TM_H) toplev.h \\\n   java/parse.h $(GGC_H) debug.h $(REAL_H) gt-java-jcf-parse.h $(TM_P_H)\n-java/jcf-write.o: java/jcf-write.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  $(RTL_H) java/java-opcodes.h java/parse.h java/buffer.h $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) toplev.h $(GGC_H) gt-java-jcf-write.h $(TM_P_H)\n-java/jv-scan.o: java/jv-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  version.h intl.h\n java/jvgenmain.o: java/jvgenmain.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) intl.h\n java/lang.o: java/lang.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h input.h \\\n@@ -341,7 +270,7 @@ java/resource.o: java/resource.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H) $(RTL_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n   $(TARGET_H) $(FUNCTION_H) gt-java-resource.h $(EXPR_H)\n java/typeck.o: java/typeck.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  java/convert.h toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) $(REAL_H)\n+  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) $(REAL_H)\n java/win32-host.o: java/win32-host.c $(CONFIG_H) $(SYSTEM_H) coretypes.h java/jcf.h\n java/verify-glue.o: java/verify-glue.c $(CONFIG_H) $(SYSTEM_H) $(JAVA_TREE_H) \\\n   coretypes.h $(TM_H) java/verify.h toplev.h\n@@ -352,13 +281,6 @@ java/zextract.o: java/zextract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n java/java-gimplify.o: java/java-gimplify.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(JAVA_TREE_H) $(TREE_GIMPLE_H) toplev.h\n \n-java/parse-scan.o: java/parse-scan.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) toplev.h $(JAVA_LEX_C) java/parse.h java/lex.h input.h\n-java/parse.o: java/parse.c java/jcf-reader.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) $(FUNCTION_H) $(JAVA_TREE_H) $(JAVA_LEX_C) java/parse.h \\\n-  java/lex.h input.h $(GGC_H) debug.h gt-java-parse.h gtype-java.h $(TARGET_H) \\\n-  $(TREE_DUMP_H)\n-\n # jcf-io.o needs $(ZLIBINC) added to cflags.\n java/jcf-io.o: java/jcf-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H)\n@@ -373,14 +295,6 @@ java/jcf-path.o: java/jcf-path.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n \t  $(srcdir)/java/jcf-path.c $(OUTPUT_OPTION)\n \n-# create gjnih's object\n-java/gjavah-jni.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(JAVA_TREE_H) \\\n-  java/gjavah.c java/jcf-reader.c java/jcf.h java/javaop.h version.h $(GGC_H) \\\n-  intl.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(ZLIBINC) \\\n-\t\t-DJNI_DEFAULT=1 \\\n-\t\t$(srcdir)/java/gjavah.c $(OUTPUT_OPTION)\n-\n TEXI_JAVA_FILES = java/gcj.texi $(gcc_docdir)/include/fdl.texi\t\t\\\n \t $(gcc_docdir)/include/gpl.texi $(gcc_docdir)/include/gcc-common.texi   \\\n \t gcc-vers.texi\n@@ -403,17 +317,11 @@ $(build_htmldir)/java/index.html: $(TEXI_JAVA_FILES)\n \trm -f $(@D)/*\n \t$(TEXI2HTML) -I $(gcc_docdir)/include -I $(srcdir)/java -o $(@D) $<\n \n-.INTERMEDIATE: gcj.pod gcjh.pod jv-scan.pod jcf-dump.pod gij.pod \\\n-  jv-convert.pod grmic.pod grmiregistry.pod gcj-dbtool.pod gjnih.pod\n+.INTERMEDIATE: gcj.pod jcf-dump.pod gij.pod \\\n+  jv-convert.pod grmic.pod grmiregistry.pod gcj-dbtool.pod\n \n gcj.pod: java/gcj.texi\n \t-$(TEXI2POD) -D gcj < $< > $@\n-gcjh.pod: java/gcj.texi\n-\t-$(TEXI2POD) -D gcjh < $< > $@\n-gjnih.pod: java/gcj.texi\n-\t-$(TEXI2POD) -D gjnih < $< > $@\n-jv-scan.pod: java/gcj.texi\n-\t-$(TEXI2POD) -D jv-scan < $< > $@\n jcf-dump.pod: java/gcj.texi\n \t-$(TEXI2POD) -D jcf-dump < $< > $@\n gij.pod: java/gcj.texi"}, {"sha": "996dac78585e05e27415dd5aa695128e4800764b", "filename": "gcc/java/buffer.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fbuffer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fbuffer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuffer.c?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,51 +0,0 @@\n-/* A \"buffer\" utility type.\n-   Copyright (C) 1998, 2003 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* Written by Per Bothner <bothner@cygnus.com>, July 1998. */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"buffer.h\"\n-\n-/* Grow BUFP so there is room for at least SIZE more bytes. */\n-\n-void\n-buffer_grow (struct buffer *bufp, int size)\n-{\n-  if (bufp->limit - bufp->ptr >= size)\n-    return;\n-  if (bufp->data == 0)\n-    {\n-      if (size < 120)\n-\tsize = 120;\n-      bufp->data = XNEWVEC (unsigned char, size);\n-      bufp->ptr = bufp->data;\n-    }\n-  else\n-    {\n-      int index = bufp->ptr - bufp->data;\n-      size += 2 * (bufp->limit - bufp->data);\n-      bufp->data = xrealloc (bufp->data, size);\n-      bufp->ptr = bufp->data + index;\n-    }\n-  bufp->limit = bufp->data + size;\n-}"}, {"sha": "c74cc28a9ef39d9eb8ef487c8148d5b9b7c0d5ac", "filename": "gcc/java/buffer.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fbuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fbuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuffer.h?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,46 +0,0 @@\n-/* A \"buffer\" utility type.\n-   Copyright (C) 1998, 2000, 2003 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* Written by Per Bothner <bothner@cygnus.com>, July 1998. */\n-\n-/* A simple data structure for an expandable buffer. */\n-\n-struct buffer\n-{\n-  /* The start of the actual data buffer. */\n-  unsigned char *data;\n-\n-  /* Where to write next in the buffer. */\n-  unsigned char *ptr;\n-\n-  /* The end of the allocated data buffer. */\n-  unsigned char *limit;\n-};\n-\n-#define NULL_BUFFER { (void*) 0, (void*) 0, (void*) 0 }\n-\n-#define BUFFER_INIT(BUFP) \\\n-  ((BUFP)->data = NULL, (BUFP)->ptr = NULL, (BUFP)->limit = NULL)\n-\n-#define BUFFER_LENGTH(BUFP) ((BUFP)->ptr - (BUFP)->data)\n-\n-#define BUFFER_RESET(BUFP) ((BUFP)->ptr = (BUFP)->data)\n-\n-extern void buffer_grow (struct buffer*, int);"}, {"sha": "9f2290011daebe989e8f51e3631a37cbcfdee0c1", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 309, "deletions": 2, "changes": 311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -34,7 +34,12 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"flags.h\"\n #include \"langhooks.h\"\n #include \"java-tree.h\"\n-\n+#include <stdarg.h>\n+#include \"convert.h\"\n+#include \"rtl.h\"\n+#include \"insn-codes.h\"\n+#include \"expr.h\"\n+#include \"optabs.h\"\n \n static tree max_builtin (tree, tree);\n static tree min_builtin (tree, tree);\n@@ -43,6 +48,13 @@ static tree convert_real (tree, tree);\n \n static tree java_build_function_call_expr (tree, tree);\n \n+static tree putObject_builtin (tree, tree);\n+static tree compareAndSwapInt_builtin (tree, tree);\n+static tree compareAndSwapLong_builtin (tree, tree);\n+static tree compareAndSwapObject_builtin (tree, tree);\n+static tree putVolatile_builtin (tree, tree);\n+static tree getVolatile_builtin (tree, tree);\n+\n \f\n \n /* Functions of this type are used to inline a given call.  Such a\n@@ -90,6 +102,25 @@ static GTY(()) struct builtin_record java_builtins[] =\n   { { \"java.lang.Double\" }, { \"longBitsToDouble\" }, convert_real, 0 },\n   { { \"java.lang.Float\" }, { \"floatToRawIntBits\" }, convert_real, 0 },\n   { { \"java.lang.Double\" }, { \"doubleToRawLongBits\" }, convert_real, 0 },\n+  { { \"sun.misc.Unsafe\" }, { \"putInt\" }, putObject_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putLong\" }, putObject_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putObject\" }, putObject_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"compareAndSwapInt\" }, \n+    compareAndSwapInt_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"compareAndSwapLong\" }, \n+    compareAndSwapLong_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"compareAndSwapObject\" }, \n+    compareAndSwapObject_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putOrderedInt\" }, putVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putOrderedLong\" }, putVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putOrderedObject\" }, putVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putIntVolatile\" }, putVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putLongVolatile\" }, putVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"putObjectVolatile\" }, putVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"getObjectVolatile\" }, getVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"getIntVolatile\" }, getVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"getLongVolatile\" }, getVolatile_builtin, 0},\n+  { { \"sun.misc.Unsafe\" }, { \"getLong\" }, getVolatile_builtin, 0},\n   { { NULL }, { NULL }, NULL, END_BUILTINS }\n };\n \n@@ -145,6 +176,265 @@ convert_real (tree method_return_type, tree method_arguments)\n \n \f\n \n+/* Provide builtin support for atomic operations.  These are\n+   documented at length in libjava/sun/misc/Unsafe.java.  */\n+\n+/* FIXME.  There are still a few things wrong with this logic.  In\n+   particular, atomic writes of multi-word integers are not truly\n+   atomic: this requires more work.\n+\n+   In general, double-word compare-and-swap cannot portably be\n+   implemented, so we need some kind of fallback for 32-bit machines.\n+\n+*/\n+\n+\n+/* Macros to unmarshal arguments from a TREE_LIST into a few\n+   variables.  We also convert the offset arg from a long to an\n+   integer that is the same size as a pointer.  */\n+\n+#define UNMARSHAL3(METHOD_ARGUMENTS)\t\t\t\t\t\\\n+tree this_arg, obj_arg, offset_arg;\t\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  tree chain = METHOD_ARGUMENTS;\t\t\t\t\t\\\n+  this_arg = TREE_VALUE (chain);\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  obj_arg = TREE_VALUE (chain);\t\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  offset_arg = fold_convert (java_type_for_size (POINTER_SIZE, 0),\t\\\n+\t\t\t     TREE_VALUE (chain));\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+#define UNMARSHAL4(METHOD_ARGUMENTS)\t\t\t\t\t\\\n+tree value_type, this_arg, obj_arg, offset_arg, value_arg;\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  tree chain = METHOD_ARGUMENTS;\t\t\t\t\t\\\n+  this_arg = TREE_VALUE (chain);\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  obj_arg = TREE_VALUE (chain);\t\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  offset_arg = fold_convert (java_type_for_size (POINTER_SIZE, 0),\t\\\n+\t\t\t     TREE_VALUE (chain));\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  value_arg = TREE_VALUE (chain);\t\t\t\t\t\\\n+  value_type = TREE_TYPE (value_arg);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+#define UNMARSHAL5(METHOD_ARGUMENTS)\t\t\t\t\t\\\n+tree value_type, this_arg, obj_arg, offset_arg, expected_arg, value_arg; \\\n+do\t\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  tree chain = METHOD_ARGUMENTS;\t\t\t\t\t\\\n+  this_arg = TREE_VALUE (chain);\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  obj_arg = TREE_VALUE (chain);\t\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  offset_arg = fold_convert (java_type_for_size (POINTER_SIZE, 0),\t\\\n+\t\t\t     TREE_VALUE (chain));\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  expected_arg = TREE_VALUE (chain);\t\t\t\t\t\\\n+  chain = TREE_CHAIN (chain);\t\t\t\t\t\t\\\n+  value_arg = TREE_VALUE (chain);\t\t\t\t\t\\\n+  value_type = TREE_TYPE (value_arg);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+/* Construct an arglist from a call.  */\n+\n+static tree\n+build_arglist_for_builtin (tree arg, ...)\n+{\n+  va_list ap;\n+  tree nextarg;\n+  tree newarglist = build_tree_list (NULL_TREE, arg);\n+\n+  va_start(ap, arg);\n+  while ((nextarg = va_arg(ap, tree)))\n+    newarglist = tree_cons (NULL_TREE, nextarg, newarglist);\n+\n+  return nreverse (newarglist);\n+}\n+\n+/* Add an address to an offset, forming a sum.  */\n+\n+static tree\n+build_addr_sum (tree type, tree addr, tree offset)\n+{\n+  tree ptr_type = build_pointer_type (type);\n+  return  fold_build2 (PLUS_EXPR, \n+\t\t       ptr_type, \n+\t\t       fold_convert (ptr_type, addr), offset);\n+}\n+\n+/* Make sure that this-arg is non-NULL.  This is a security check.  */\n+\n+static tree\n+build_check_this (tree stmt, tree this_arg)\n+{\n+  return build2 (COMPOUND_EXPR, TREE_TYPE (stmt), \n+\t\t java_check_reference (this_arg, 1), stmt);\n+}\n+\n+/* Now the builtins.  These correspond to the primitive functions in\n+   libjava/sun/misc/natUnsafe.cc.  */\n+\n+static tree\n+putObject_builtin (tree method_return_type ATTRIBUTE_UNUSED, \n+\t\t   tree method_arguments)\n+{\n+  tree addr, stmt;\n+  UNMARSHAL4 (method_arguments);\n+\n+  addr = build_addr_sum (value_type, obj_arg, offset_arg);\n+  stmt = fold_build2 (MODIFY_EXPR, value_type,\n+\t\t      build_java_indirect_ref (value_type, addr,\n+\t\t\t\t\t       flag_check_references),\n+\t\t      value_arg);\n+\n+  return build_check_this (stmt, this_arg);\n+}\n+\n+static tree\n+compareAndSwapInt_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n+\t\t\t   tree method_arguments)\n+{\n+  enum machine_mode mode = TYPE_MODE (int_type_node);\n+  if (sync_compare_and_swap_cc[mode] != CODE_FOR_nothing \n+      || sync_compare_and_swap[mode] != CODE_FOR_nothing)\n+    {\n+      tree newarglist, addr, stmt;\n+      UNMARSHAL5 (method_arguments);\n+\n+      addr = build_addr_sum (int_type_node, obj_arg, offset_arg);\n+\n+      newarglist \n+\t= build_arglist_for_builtin (addr, expected_arg, value_arg, NULL_TREE);\n+      stmt = (build_function_call_expr\n+\t      (built_in_decls[BUILT_IN_BOOL_COMPARE_AND_SWAP_4],\n+\t       newarglist));\n+\n+      return build_check_this (stmt, this_arg);\n+    }\n+  return NULL_TREE;\n+}\n+\n+static tree\n+compareAndSwapLong_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n+\t\t\t    tree method_arguments)\n+{\n+  enum machine_mode mode = TYPE_MODE (long_type_node);\n+  if (sync_compare_and_swap_cc[mode] != CODE_FOR_nothing \n+      || sync_compare_and_swap[mode] != CODE_FOR_nothing)\n+    {\n+      tree newarglist, addr, stmt;\n+      UNMARSHAL5 (method_arguments);\n+\n+      addr = build_addr_sum (long_type_node, obj_arg, offset_arg);\n+\n+      newarglist \n+\t= build_arglist_for_builtin (addr, expected_arg, value_arg, NULL_TREE);\n+      stmt = (build_function_call_expr\n+\t      (built_in_decls[BUILT_IN_BOOL_COMPARE_AND_SWAP_8],\n+\t       newarglist));\n+\n+      return build_check_this (stmt, this_arg);\n+    }\n+  return NULL_TREE;\n+}\n+static tree\n+compareAndSwapObject_builtin (tree method_return_type ATTRIBUTE_UNUSED, \n+\t\t\t      tree method_arguments)\n+{\n+  enum machine_mode mode = TYPE_MODE (ptr_type_node);\n+  if (sync_compare_and_swap_cc[mode] != CODE_FOR_nothing \n+      || sync_compare_and_swap[mode] != CODE_FOR_nothing)\n+  {\n+    tree newarglist, addr, stmt;\n+    int builtin;\n+\n+    UNMARSHAL5 (method_arguments);\n+    builtin = (POINTER_SIZE == 32 \n+\t       ? BUILT_IN_BOOL_COMPARE_AND_SWAP_4 \n+\t       : BUILT_IN_BOOL_COMPARE_AND_SWAP_8);\n+\n+    addr = build_addr_sum (value_type, obj_arg, offset_arg);\n+\n+    newarglist \n+      = build_arglist_for_builtin (addr, expected_arg, value_arg, NULL_TREE);\n+    stmt = (build_function_call_expr\n+\t    (built_in_decls[builtin],\n+\t     newarglist));\n+\n+    return build_check_this (stmt, this_arg);\n+  }\n+  return NULL_TREE;\n+}\n+\n+static tree\n+putVolatile_builtin (tree method_return_type ATTRIBUTE_UNUSED, \n+\t\t     tree method_arguments)\n+{\n+  tree newarglist, addr, stmt, modify_stmt;\n+  UNMARSHAL4 (method_arguments);\n+  \n+  addr = build_addr_sum (value_type, obj_arg, offset_arg);\n+  addr \n+    = fold_convert (build_pointer_type (build_type_variant (value_type, 0, 1)),\n+\t\t    addr);\n+  \n+  newarglist = NULL_TREE;\n+  stmt = (build_function_call_expr\n+\t  (built_in_decls[BUILT_IN_SYNCHRONIZE],\n+\t   newarglist));\n+  modify_stmt = fold_build2 (MODIFY_EXPR, value_type,\n+\t\t\t     build_java_indirect_ref (value_type, addr,\n+\t\t\t\t\t\t      flag_check_references),\n+\t\t\t     value_arg);\n+  stmt = build2 (COMPOUND_EXPR, TREE_TYPE (modify_stmt), \n+\t\t stmt, modify_stmt);\n+\n+  return build_check_this (stmt, this_arg);\n+}\n+\n+static tree\n+getVolatile_builtin (tree method_return_type ATTRIBUTE_UNUSED, \n+\t\t     tree method_arguments)\n+{\n+  tree newarglist, addr, stmt, modify_stmt, tmp;\n+  UNMARSHAL3 (method_arguments);\n+  \n+  addr = build_addr_sum (method_return_type, obj_arg, offset_arg);\n+  addr \n+    = fold_convert (build_pointer_type (build_type_variant \n+\t\t\t\t\t(method_return_type, 0, 1)), addr);\n+  \n+  newarglist = NULL_TREE;\n+  stmt = (build_function_call_expr\n+\t  (built_in_decls[BUILT_IN_SYNCHRONIZE],\n+\t   newarglist));\n+  \n+  tmp = build_decl (VAR_DECL, NULL, method_return_type);\n+  DECL_IGNORED_P (tmp) = 1;\n+  DECL_ARTIFICIAL (tmp) = 1;\n+  pushdecl (tmp);\n+\n+  modify_stmt = fold_build2 (MODIFY_EXPR, method_return_type,\n+\t\t\t     tmp,\n+\t\t\t     build_java_indirect_ref (method_return_type, addr,\n+\t\t\t\t\t\t      flag_check_references));\n+\n+  stmt = build2 (COMPOUND_EXPR, void_type_node, modify_stmt, stmt);\n+  stmt = build2 (COMPOUND_EXPR, method_return_type, stmt, tmp);\n+  \n+  return stmt;\n+}\n+  \n+\f\n+\n #define BUILTIN_NOTHROW 1\n #define BUILTIN_CONST 2\n /* Define a single builtin.  */\n@@ -258,10 +548,27 @@ initialize_builtins (void)\n \t\t  boolean_ftype_boolean_boolean,\n \t\t  \"__builtin_expect\",\n \t\t  BUILTIN_CONST | BUILTIN_NOTHROW);\n-\t\t  \n+  define_builtin (BUILT_IN_BOOL_COMPARE_AND_SWAP_4, \n+\t\t  \"__sync_bool_compare_and_swap_4\",\n+\t\t  build_function_type_list (boolean_type_node,\n+\t\t\t\t\t    int_type_node, \n+\t\t\t\t\t    build_pointer_type (int_type_node),\n+\t\t\t\t\t    int_type_node, NULL_TREE), \n+\t\t  \"__sync_bool_compare_and_swap_4\", 0);\n+  define_builtin (BUILT_IN_BOOL_COMPARE_AND_SWAP_8, \n+\t\t  \"__sync_bool_compare_and_swap_8\",\n+\t\t  build_function_type_list (boolean_type_node,\n+\t\t\t\t\t    long_type_node, \n+\t\t\t\t\t    build_pointer_type (long_type_node),\n+\t\t\t\t\t    int_type_node, NULL_TREE), \n+\t\t  \"__sync_bool_compare_and_swap_8\", 0);\n   define_builtin (BUILT_IN_SYNCHRONIZE, \"__sync_synchronize\",\n \t\t  build_function_type (void_type_node, void_list_node),\n \t\t  \"__sync_synchronize\", BUILTIN_NOTHROW);\n+  \n+  define_builtin (BUILT_IN_RETURN_ADDRESS, \"__builtin_return_address\",\n+\t\t  build_function_type_list (ptr_type_node, int_type_node, NULL_TREE),\n+\t\t  \"__builtin_return_address\", BUILTIN_NOTHROW);\n \n   build_common_builtin_nodes ();\n }"}, {"sha": "7cb5f86cb62038a118d782f0be49533ae34934ab", "filename": "gcc/java/chartables.h", "status": "removed", "additions": 0, "deletions": 3219, "changes": 3219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fchartables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fchartables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fchartables.h?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369"}, {"sha": "4aca9926a817fd221742f8346f4c67952152d15b", "filename": "gcc/java/check-init.c", "status": "removed", "additions": 0, "deletions": 1032, "changes": 1032, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,1032 +0,0 @@\n-/* Code to test for \"definitive [un]assignment\".\n-   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2006 Free Software Foundation,\n-   Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  \n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-/* Written by Per Bothner <bothner@cygnus.com>, January 1999. */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"tree.h\"\n-#include \"flags.h\" /* Needed for optimize. */\n-#include \"java-tree.h\"\n-#include \"toplev.h\" /* Needed for fatal. */\n-\n-/* The basic idea is that we assign each local variable declaration\n-   and each blank final field an index, and then we pass around\n-   bitstrings, where the (2*i)'th bit is set if decl whose DECL_BIT_INDEX\n-   is i is definitely assigned, and the (2*i=1)'th bit is set if \n-   decl whose DECL_BIT_INDEX is i is definitely unassigned */\n-\n-/* One segment of a bitstring. */\n-typedef unsigned int word;\n-\n-/* Pointer to a bitstring. */\n-typedef word *words;\n-\n-/* Number of locals variables currently active. */\n-static int num_current_locals = 0;\n-\n-/* The value of num_current_locals when we entered the closest\n-   enclosing LOOP_EXPR. */\n-static int loop_current_locals;\n-\n-/* The index of the first local variable in the current block.\n-\n-   The variables whose DECL_BIT_INDEX are in the range from\n-   start_current_locals (inclusive) up to num_current_locals (exclusive)\n-   are declared in the \"current\" block.  If there is a loop or branch\n-   form, we set start_current_locals to num_current_locals to indicate\n-   there is no current block.\n-\n-   The point is that if a variable in the current block is set,\n-   there are no other control paths that we have to worry about.\n-   Hence, we can remove it from the set of variables we are\n-   checking, making its bit index available for some other variable.\n-   For simplicity, we only do that if the variable's bit index\n-   is (num_current_locals-1);  freeing up its bit index is then\n-   just a simple matter of decrementing num_current_locals.\n-   The reason this is worth doing is that it is simple, and\n-   allows us to use short (usually one-word) bit-strings,\n-   even for methods with thousands of local variables, as\n-   long as most of them are initialized immediately after or in\n-   their declaration. */\n-static int start_current_locals = 0;\n-\n-static int num_current_words;\n-\n-#define COPYN(DST, SRC, NWORDS) memcpy (DST, SRC, NWORDS * sizeof(word))\n-#define COPY(DST, SRC) COPYN (DST, SRC, num_current_words)\n-\n-#define SET_ALL(DST) memset (DST, ~0, num_current_words * sizeof(word))\n-#define CLEAR_ALL(DST) memset (DST, 0, num_current_words * sizeof(word))\n-\n-#define INTERSECTN(DST, SRC1, SRC2, N) \\\n-  do { int n = N; \\\n-  while (--n >= 0) DST[n] = SRC1[n] & SRC2[n]; \\\n-  } while (0)\n-\n-#define UNION(DST, SRC1, SRC2) \\\n-  UNIONN (DST, SRC1, SRC2, num_current_words)\n-\n-#define UNIONN(DST, SRC1, SRC2, N) \\\n-  do { int n = N; \\\n-  while (--n >= 0) DST[n] = SRC1[n] | SRC2[n]; \\\n-  } while (0)\n-\n-#define INTERSECT(DST, SRC1, SRC2) \\\n-  INTERSECTN (DST, SRC1, SRC2, num_current_words)\n-\n-#define WORD_SIZE  ((unsigned int)(sizeof(word) * BITS_PER_UNIT))\n-\n-static void check_bool_init (tree, words, words, words);\n-static void check_init (tree, words);\n-static void check_cond_init (tree, tree, tree, words, words, words);\n-static void check_bool2_init (enum tree_code, tree, tree, words, words, words);\n-struct alternatives;\n-static void done_alternative (words, struct alternatives *);\n-static tree get_variable_decl (tree);\n-static void final_assign_error (tree);\n-static void check_final_reassigned (tree, words);\n-\n-#define ALLOC_WORDS(NUM) (xmalloc ((NUM) * sizeof (word)))\n-#define FREE_WORDS(PTR) (free (PTR))\n-\n-/* DECLARE_BUFFERS is used to allocate NUMBUFFER bit sets, each of\n-   which is an array of length num_current_words number of words.\n-   Declares a new local variable BUFFER to hold the result (or rather\n-   a pointer to the first of the bit sets).  In almost all cases\n-   num_current_words will be 1 or at most 2, so we try to stack\n-   allocate the arrays in that case, using a stack array\n-   named BUFFER##_short.  Each DECLARE_BUFFERS must be matched by\n-   a corresponding RELEASE_BUFFERS to avoid memory leaks.  */\n-\n-#define DECLARE_BUFFERS(BUFFER, NUMBUFFERS) \\\n-  word BUFFER##_short[2 * NUMBUFFERS]; \\\n-  words BUFFER = ALLOC_BUFFER(BUFFER##_short, NUMBUFFERS * num_current_words)\n-\n-#define RELEASE_BUFFERS(BUFFER) \\\n-  FREE_BUFFER(BUFFER, BUFFER##_short)\n-\n-#define ALLOC_BUFFER(SHORTBUFFER, NUMWORDS) \\\n-  ((NUMWORDS) * sizeof(word) <= sizeof(SHORTBUFFER) ? SHORTBUFFER \\\n-   : ALLOC_WORDS(NUMWORDS))\n-\n-#define FREE_BUFFER(BUFFER, SHORTBUFFER) \\\n-  if (BUFFER != SHORTBUFFER) FREE_WORDS(BUFFER)\n-\n-#define SET_P(WORDS, BIT) \\\n-  (WORDS[(BIT) / WORD_SIZE] & (1 << ((BIT) % WORD_SIZE)))\n-\n-#define CLEAR_BIT(WORDS, BIT) \\\n-  (WORDS[(BIT) / WORD_SIZE] &= ~ (1 << ((BIT) % WORD_SIZE)))\n-\n-#define SET_BIT(WORDS, BIT) \\\n-  (WORDS[(BIT) / WORD_SIZE] |= (1 << ((BIT) % WORD_SIZE)))\n-\n-#define WORDS_NEEDED(BITS) (((BITS)+(WORD_SIZE-1))/(WORD_SIZE))\n-\n-#define ASSIGNED_P(WORDS, BIT)  SET_P(WORDS, 2 * (BIT))\n-#define UNASSIGNED_P(WORDS, BIT)  SET_P(WORDS, 2 * (BIT) + 1)\n-\n-#define SET_ASSIGNED(WORDS, INDEX) SET_BIT (WORDS, 2 * (INDEX))\n-#define SET_UNASSIGNED(WORDS, INDEX) SET_BIT (WORDS, 2 * (INDEX) + 1)\n-\n-#define CLEAR_ASSIGNED(WORDS, INDEX) CLEAR_BIT (WORDS, 2 * (INDEX))\n-#define CLEAR_UNASSIGNED(WORDS, INDEX) CLEAR_BIT (WORDS, 2 * (INDEX) + 1)\n-\n-/* Get the \"interesting\" declaration from a MODIFY_EXPR or COMPONENT_REF.\n-   Return the declaration or NULL_TREE if no interesting declaration.  */\n-\n-static tree\n-get_variable_decl (tree exp)\n-{\n-  /* A static field can be wrapped in a COMPOUND_EXPR where the first\n-     argument initializes the class.  */\n-  if (TREE_CODE (exp) == COMPOUND_EXPR)\n-    exp = extract_field_decl (exp);\n-\n-  if (TREE_CODE (exp) == VAR_DECL)\n-    {\n-      if (! TREE_STATIC (exp) ||  FIELD_FINAL (exp))\n-\treturn exp;\n-    }\n-  /* We only care about final parameters. */\n-  else if (TREE_CODE (exp) == PARM_DECL)\n-    {\n-      if (DECL_FINAL (exp))\n-\treturn exp;\n-    }\n-  /* See if exp is this.field. */\n-  else if (TREE_CODE (exp) == COMPONENT_REF)\n-    {\n-      tree op0 = TREE_OPERAND (exp, 0);\n-      tree op1 = TREE_OPERAND (exp, 1);\n-      tree mdecl = current_function_decl;\n-      if (TREE_CODE (op0) == INDIRECT_REF\n-\t  && TREE_CODE (op1) == FIELD_DECL\n-\t  && ! METHOD_STATIC (mdecl)\n-\t  && FIELD_FINAL (op1))\n-\t{\n-\t  op0 = TREE_OPERAND (op0, 0);\n-\t  if (op0 == BLOCK_EXPR_DECLS (DECL_FUNCTION_BODY (mdecl)))\n-\t    return op1;\n-\t}\n-    }\n-  else if (TREE_CODE (exp) == INDIRECT_REF)\n-    {\n-      /* For indirect dispatch, look for an expression of the form \n-      (indirect_ref (+ (array_ref otable <N>) this)).  \n-      FIXME: it would probably be better to generate a JAVA_FIELD_REF\n-      expression that gets converted to OTABLE access at\n-      gimplification time.  */\n-      exp = TREE_OPERAND (exp, 0);\n-      if (TREE_CODE (exp) == PLUS_EXPR)\n-\t{\n-\t  tree op0 = TREE_OPERAND (exp, 0);\n-\t  STRIP_NOPS (op0);\n-\t  if (TREE_CODE (op0) == ARRAY_REF)\n-\t    {\n-\t      tree table = TREE_OPERAND (op0, 0);\n-\t      if (TREE_CODE (table) == VAR_DECL\n-\t\t  && DECL_LANG_SPECIFIC (table)\n-\t\t  && DECL_OWNER (table) \n-\t\t  && TYPE_OTABLE_DECL (DECL_OWNER (table)) == table)\n-\t\t{\n-\t\t  HOST_WIDE_INT index \n-\t\t    = TREE_INT_CST_LOW (TREE_OPERAND (op0, 1));\n-\t\t  tree otable_methods \n-\t\t    = TYPE_OTABLE_METHODS (DECL_OWNER (table));\n-\t\t  tree element;\n-\t\t  for (element = otable_methods; \n-\t\t       element; \n-\t\t       element = TREE_CHAIN (element))\n-\t\t    {\n-\t\t      if (index == 1)\n-\t\t\t{\n-\t\t\t  tree purpose = TREE_PURPOSE (element);\n-\t\t\t  if (TREE_CODE (purpose) == FIELD_DECL)\n-\t\t\t    return purpose;\n-\t\t\t  else\n-\t\t\t    return NULL_TREE;\n-\t\t\t}\n-\t\t      --index;\n-\t\t    }\n-\t\t}\n-\t    }\n-\t}\n-    }\n-\n-  return NULL_TREE;\n-}\n-\n-static void\n-final_assign_error (tree name)\n-{\n-  error (\"Can't reassign a value to the final variable %qs\",\n-\t IDENTIFIER_POINTER (name));\n-}\n-\n-static void\n-check_final_reassigned (tree decl, words before)\n-{\n-  int index = DECL_BIT_INDEX (decl);\n-  /* A final local already assigned or a final parameter\n-     assigned must be reported as errors */\n-  if (DECL_FINAL (decl) && index != -2\n-      && (index < loop_current_locals /* I.e. -1, or outside current loop. */\n-          || (DECL_LOCAL_FINAL_IUD (decl) ? ASSIGNED_P (before, index)\n-              : ! UNASSIGNED_P (before, index))))\n-    {\n-      final_assign_error (DECL_NAME (decl));\n-    }\n-}\n-\n-/* Check a conditional form (TEST_EXP ? THEN_EXP : ELSE_EXP) for\n-   definite [un]assignment.\n-   BEFORE, WHEN_FALSE, and WHEN_TRUE are as in check_bool_init. */\n-\n-static void\n-check_cond_init (tree test_exp, tree then_exp, tree else_exp,\n-\t\t words before, words when_false, words when_true)\n-{\n-  int save_start_current_locals = start_current_locals;\n-  DECLARE_BUFFERS(test_false, 6);\n-  words test_true = test_false + num_current_words;\n-  words then_false = test_true + num_current_words;\n-  words then_true = then_false + num_current_words;\n-  words else_false = then_true + num_current_words;\n-  words else_true = else_false + num_current_words;\n-  start_current_locals = num_current_locals;\n-\n-  check_bool_init (test_exp, before, test_false, test_true);\n-  check_bool_init (then_exp, test_true, then_false, then_true);\n-  check_bool_init (else_exp, test_false, else_false, else_true);\n-  INTERSECT (when_false, then_false, else_false);\n-  INTERSECT (when_true, then_true, else_true);\n-  RELEASE_BUFFERS(test_false);\n-  start_current_locals = save_start_current_locals;\n-}\n-\n-/* Check a boolean binary form CODE (EXP0, EXP1),\n-   where CODE is one of EQ_EXPR, BIT_AND_EXPR, or BIT_IOR_EXPR.\n-   BEFORE, WHEN_FALSE, and WHEN_TRUE are as in check_bool_init. */\n-\n-static void\n-check_bool2_init (enum tree_code code, tree exp0, tree exp1,\n-\t\t  words before, words when_false, words when_true)\n-{\n-  word buf[2*4];\n-  words tmp = num_current_words <= 2 ? buf\n-    : ALLOC_WORDS (4 * num_current_words);\n-  words when_false_0 = tmp;\n-  words when_false_1 = tmp+num_current_words;\n-  words when_true_0 = tmp+2*num_current_words;\n-  words when_true_1 = tmp+3*num_current_words;\n-  check_bool_init (exp0, before, when_false_0, when_true_0);\n-  INTERSECT (before, when_false_0, when_true_0);\n-  check_bool_init (exp1, before, when_false_1, when_true_1);\n-\n-  INTERSECT (before, when_false_1, when_true_1);\n-\n-  if (code == EQ_EXPR)\n-    {\n-      /* Now set:\n-       * when_true = (when_false_1 INTERSECTION when_true_1)\n-       *   UNION (when_true_0 INTERSECTION when_false_1)\n-       *   UNION (when_false_0 INTERSECTION when_true_1);\n-       * using when_false and before as temporary working areas.  */\n-      INTERSECT (when_true, when_true_0, when_false_1);\n-      INTERSECT (when_false, when_true_0, when_false_1);\n-      UNION (when_true, when_true, when_false);\n-      UNION (when_true, when_true, before);\n-\n-      /* Now set:\n-       * when_false = (when_false_1 INTERSECTION when_true_1)\n-       *   UNION (when_true_0 INTERSECTION when_true_1)\n-       *   UNION (when_false_0 INTERSECTION when_false_1);\n-       * using before as a temporary working area.  */\n-      INTERSECT (when_false, when_true_0, when_true_1);\n-      UNION (when_false, when_false, before);\n-      INTERSECT (before, when_false_0, when_false_1);\n-      UNION (when_false, when_false, before);\n-    }\n-  else if (code == BIT_AND_EXPR || code == TRUTH_AND_EXPR)\n-    {\n-      UNION (when_true, when_true_0, when_true_1);\n-      INTERSECT (when_false, when_false_0, when_false_1);\n-      UNION (when_false, when_false, before);\n-    }\n-  else /* if (code == BIT_IOR_EXPR || code == TRUTH_OR_EXPR) */\n-    {\n-      UNION (when_false, when_false_0, when_false_1);\n-      INTERSECT (when_true, when_true_0, when_true_1);\n-      UNION (when_true, when_true, before);\n-    }\n-\n-  if (tmp != buf)\n-    FREE_WORDS (tmp);\n-}\n-\n-/* Check a boolean expression EXP for definite [un]assignment.\n-   BEFORE is the set of variables definitely [un]assigned before the\n-   conditional.  (This bitstring may be modified arbitrarily in this function.)\n-   On output, WHEN_FALSE is the set of variables [un]definitely assigned after\n-   the conditional when the conditional is false.\n-   On output, WHEN_TRUE is the set of variables definitely [un]assigned after\n-   the conditional when the conditional is true.\n-   (WHEN_FALSE and WHEN_TRUE are overwritten with initial values ignored.)\n-   (None of BEFORE, WHEN_FALSE, or WHEN_TRUE can overlap, as they may\n-   be used as temporary working areas. */\n-\n-static void\n-check_bool_init (tree exp, words before, words when_false, words when_true)\n-{\n-  switch (TREE_CODE (exp))\n-    {\n-    case COND_EXPR:\n-      check_cond_init (TREE_OPERAND (exp, 0), TREE_OPERAND (exp, 1),\n-\t\t       TREE_OPERAND (exp, 2),\n-\t\t       before, when_false, when_true);\n-      return;\n-\n-    case TRUTH_ANDIF_EXPR:\n-      check_cond_init (TREE_OPERAND (exp, 0),\n-\t\t       TREE_OPERAND (exp, 1), boolean_false_node,\n-\t\t       before, when_false, when_true);\n-      return;\n-    case TRUTH_ORIF_EXPR:\n-      check_cond_init (TREE_OPERAND (exp, 0),\n-\t\t       boolean_true_node, TREE_OPERAND (exp, 1),\n-\t\t       before, when_false, when_true);\n-      return;\n-    case TRUTH_NOT_EXPR:\n-      check_bool_init (TREE_OPERAND (exp, 0), before, when_true, when_false);\n-      return;\n-\n-    case BIT_AND_EXPR:\n-    case BIT_IOR_EXPR:\n-    case TRUTH_AND_EXPR:\n-    case TRUTH_OR_EXPR:\n-    case EQ_EXPR:\n-      check_bool2_init (TREE_CODE (exp),\n-\t\t\tTREE_OPERAND (exp, 0), TREE_OPERAND (exp, 1),\n-\t\t\tbefore, when_false, when_true);\n-      return;\n-\n-    case TRUTH_XOR_EXPR:\n-    case BIT_XOR_EXPR:\n-    case NE_EXPR:\n-      /* Just like EQ_EXPR, but switch when_true and when_false. */\n-      check_bool2_init (EQ_EXPR, TREE_OPERAND (exp, 0), TREE_OPERAND (exp, 1),\n-\t\t\tbefore, when_true, when_false);\n-\n-      return;\n-\n-    case INTEGER_CST:\n-      if (integer_zerop (exp))\n-\t{\n-\t  SET_ALL (when_true);\n-\t  COPY (when_false, before);\n-\t}\n-      else\n-\t{\n-\t  SET_ALL (when_false);\n-\t  COPY (when_true, before);\n-\t}\n-      break;\n-\n-    default:\n-      check_init (exp, before);\n-      COPY (when_false, before);\n-      COPY (when_true, before);\n-    }\n-}\n-\n-/* Used to keep track of control flow branches. */\n-\n-struct alternatives\n-{\n-  struct alternatives *outer;\n-\n-  /* The value of num_current_locals at the start of this compound. */\n-  int num_locals;\n-\n-  /* The value of the \"before\" set at the start of the control structure.\n-   Used for SWITCH_EXPR but not set for LABELED_BLOCK_EXPR. */\n-  words saved;\n-\n-  int save_start_current_locals;\n-\n-  /* If num_current_words==1, combined==&one_word, for efficiency. */\n-  word one_word;\n-\n-  /* The intersection of the \"after\" sets from previous branches. */\n-  words combined;\n-\n-  tree block;\n-};\n-\n-struct alternatives * alternatives = NULL;\n-\n-/* Begin handling a control flow branch.\n-   BEFORE is the state of [un]assigned variables on entry.\n-   CURRENT is a struct alt to manage the branch alternatives. */\n-\n-#define BEGIN_ALTERNATIVES(before, current) \\\n-{ \\\n-  current.saved = NULL; \\\n-  current.num_locals = num_current_locals; \\\n-  current.combined = num_current_words <= 1 ? &current.one_word \\\n-    : ALLOC_WORDS (num_current_words); \\\n-  SET_ALL (current.combined); \\\n-  current.outer = alternatives; \\\n-  alternatives = &current; \\\n-  current.save_start_current_locals = start_current_locals; \\\n-  start_current_locals = num_current_locals; \\\n-}\n-\n-/* We have finished with one branch of branching control flow.\n-   Store the [un]assigned state, merging (intersecting) it with the state\n-   of previous alternative branches. */\n-\n-static void\n-done_alternative (words after, struct alternatives *current)\n-{\n-  INTERSECTN (current->combined, current->combined, after,\n-\t      WORDS_NEEDED (2 * current->num_locals));\n-}\n-\n-/* Used when we done with a control flow branch and are all merged again.\n- * AFTER is the merged state of [un]assigned variables,\n-   CURRENT is a struct alt that was passed to BEGIN_ALTERNATIVES. */\n-\n-#define END_ALTERNATIVES(after, current) \\\n-{ \\\n-  alternatives = current.outer; \\\n-  COPY (after, current.combined); \\\n-  if (current.combined != &current.one_word) \\\n-    FREE_WORDS (current.combined); \\\n-  start_current_locals = current.save_start_current_locals; \\\n-}\n-\n-/* Check for (un)initialized local variables in EXP.  */\n-\n-static void\n-check_init (tree exp, words before)\n-{\n-  tree tmp;\n-  location_t save_location = input_location;\n- again:\n-  if (EXPR_HAS_LOCATION (exp))\n-    input_location = EXPR_LOCATION (exp);\n-  switch (TREE_CODE (exp))\n-    {\n-    case VAR_DECL:\n-    case PARM_DECL:\n-      if (! FIELD_STATIC (exp) && DECL_NAME (exp) != NULL_TREE\n-\t  && DECL_NAME (exp) != this_identifier_node)\n-\t{\n-\t  int index = DECL_BIT_INDEX (exp);\n-\t  /* We don't want to report and mark as non initialized class\n-\t     initialization flags. */\n-\t  if (! LOCAL_CLASS_INITIALIZATION_FLAG_P (exp)\n-\t      && index >= 0 && ! ASSIGNED_P (before, index))\n-\t    {\n-\t      error (\"variable %qD may not have been initialized\", exp);\n-\t      DECL_BIT_INDEX (exp) = -2;\n-\t    }\n-\t}\n-      break;\n-\n-    case COMPONENT_REF:\n-      check_init (TREE_OPERAND (exp, 0), before);\n-      if ((tmp = get_variable_decl (exp)) != NULL_TREE)\n-\t{\n-\t  int index = DECL_BIT_INDEX (tmp);\n-\t  if (index >= 0 && ! ASSIGNED_P (before, index))\n-\t    {\n-\t      error (\"variable %qD may not have been initialized\", tmp);\n-\t      /* Suppress further errors. */\n-\t      DECL_BIT_INDEX (tmp) = -2;\n-\t    }\n-\t}\n-      break;\n-      \n-    case MODIFY_EXPR:\n-      tmp = TREE_OPERAND (exp, 0);\n-      /* We're interested in variable declaration and parameter\n-         declaration when they're declared with the `final' modifier. */\n-      if ((tmp = get_variable_decl (tmp)) != NULL_TREE)\n-\t{\n-\t  int index;\n-\t  check_init (TREE_OPERAND (exp, 1), before);\n-\t  check_final_reassigned (tmp, before);\n-\t  index = DECL_BIT_INDEX (tmp);\n-\t  if (index >= 0)\n-\t    {\n-\t      SET_ASSIGNED (before, index);\n-\t      CLEAR_UNASSIGNED (before, index);\n-\t    }\n-\t  /* Minor optimization.  See comment for start_current_locals.\n-\t     If we're optimizing for class initialization, we keep\n-\t     this information to check whether the variable is\n-\t     definitely assigned when once we checked the whole\n-\t     function. */\n-\t  if (! STATIC_CLASS_INIT_OPT_P () /* FIXME */\n-\t      && ! DECL_FINAL (tmp)\n-\t      && index >= start_current_locals\n-\t      && index == num_current_locals - 1)\n-\t    {\n-\t      num_current_locals--;\n-\t      DECL_BIT_INDEX (tmp) = -1;\n-\t    }\n-\t break;\n-       }\n-      else if (TREE_CODE (tmp = TREE_OPERAND (exp, 0)) == COMPONENT_REF)\n-\t{\n-\t  tree decl;\n-\t  check_init (tmp, before);\n-\t  check_init (TREE_OPERAND (exp, 1), before);\n-\t  decl = TREE_OPERAND (tmp, 1);\n-\t  if (DECL_FINAL (decl))\n-\t    final_assign_error (DECL_NAME (decl));\n-\t  break;\n-\t}\n-      else if (TREE_CODE (tmp) == COMPONENT_REF && IS_ARRAY_LENGTH_ACCESS (tmp))\n-\t{\n-\t  /* We can't emit a more specific message here, because when\n-\t     compiling to bytecodes we don't get here. */\n-\t  final_assign_error (length_identifier_node);\n-\t}\n-     else\n-       goto binop;\n-    case BLOCK:\n-      if (BLOCK_EXPR_BODY (exp))\n-\t{\n-\t  tree decl = BLOCK_EXPR_DECLS (exp);\n-\t  int words_needed;\n-\t  word* tmp;\n-\t  int i;\n-\t  int save_start_current_locals = start_current_locals;\n-\t  int save_num_current_words = num_current_words;\n-\t  start_current_locals = num_current_locals;\n-\t  for (;  decl != NULL_TREE;  decl = TREE_CHAIN (decl))\n-\t    {\n-\t      DECL_BIT_INDEX (decl) = num_current_locals++;\n-\t    }\n-\t  words_needed = WORDS_NEEDED (2 * num_current_locals);\n-\t  if (words_needed > num_current_words)\n-\t    {\n-\t      tmp = ALLOC_WORDS (words_needed);\n-\t      COPY (tmp, before);\n-\t      num_current_words = words_needed;\n-\t    }\n-\t  else\n-\t    tmp = before;\n-\t  for (i = start_current_locals;  i < num_current_locals;  i++)\n-\t    {\n-\t      CLEAR_ASSIGNED (tmp, i);\n-\t      SET_UNASSIGNED (tmp, i);\n-\t    }\n-\t  check_init (BLOCK_EXPR_BODY (exp), tmp);\n-\n-\t  /* Re-set DECL_BIT_INDEX since it is also DECL_POINTER_ALIAS_SET. */\n-\t  for (decl = BLOCK_EXPR_DECLS (exp);\n-\t       decl != NULL_TREE;  decl = TREE_CHAIN (decl))\n-\t    {\n-\t      if (LOCAL_CLASS_INITIALIZATION_FLAG_P (decl))\n-\t\t{\n-\t\t  int index = DECL_BIT_INDEX (decl);\n-\t\t  tree fndecl = DECL_CONTEXT (decl);\n-\t\t  if (fndecl && METHOD_STATIC (fndecl)\n-\t\t      && (DECL_INITIAL (decl) == boolean_true_node\n-\t\t\t  || (index >= 0 && ASSIGNED_P (tmp, index))))\n-\t\t    *(htab_find_slot \n-\t\t      (DECL_FUNCTION_INITIALIZED_CLASS_TABLE (fndecl),\n-\t\t       DECL_FUNCTION_INIT_TEST_CLASS (decl), INSERT)) =\n-\t\t      DECL_FUNCTION_INIT_TEST_CLASS (decl);\n-\t\t}\n-\t      DECL_BIT_INDEX (decl) = -1;\n-\t    }\n-\n-\t  num_current_locals = start_current_locals;\n-\t  start_current_locals = save_start_current_locals;\n-\t  if (tmp != before)\n-\t    {\n-\t      num_current_words = save_num_current_words;\n-\t      COPY (before, tmp);\n-\t      FREE_WORDS (tmp);\n-\t    }\n-\t}\n-      break;\n-    case LOOP_EXPR:\n-      {\n-\t/* The JLS 2nd edition discusses a complication determining\n-\t   definite unassignment of loop statements.  They define a\n-\t   \"hypothetical\" analysis model.  We do something much\n-\t   simpler: We just disallow assignments inside loops to final\n-\t   variables declared outside the loop.  This means we may\n-\t   disallow some contrived assignments that the JLS, but I\n-\t   can't see how anything except a very contrived testcase (a\n-\t   do-while whose condition is false?) would care. */\n-\n-\tstruct alternatives alt;\n-\tint save_loop_current_locals = loop_current_locals;\n-\tint save_start_current_locals = start_current_locals;\n-\tloop_current_locals = num_current_locals;\n-\tstart_current_locals = num_current_locals;\n-\tBEGIN_ALTERNATIVES (before, alt);\n-\talt.block = exp;\n-\tcheck_init (TREE_OPERAND (exp, 0), before);\n-\tEND_ALTERNATIVES (before, alt);\n-\tloop_current_locals = save_loop_current_locals;\n-\tstart_current_locals = save_start_current_locals;\n-\tbreak;\n-      }\n-    case EXIT_EXPR:\n-      {\n-\tstruct alternatives *alt = alternatives;\n-\tDECLARE_BUFFERS(when_true, 2);\n-\twords when_false = when_true + num_current_words;\n-#ifdef ENABLE_JC1_CHECKING\n-\tgcc_assert (TREE_CODE (alt->block) == LOOP_EXPR);\n-#endif\n-\tcheck_bool_init (TREE_OPERAND (exp, 0), before, when_false, when_true);\n-\tdone_alternative (when_true, alt);\n-\tCOPY (before, when_false);\n-\tRELEASE_BUFFERS(when_true);\n-\tbreak;\n-      }\n-    case LABELED_BLOCK_EXPR:\n-      {\n-\tstruct alternatives alt;\n-\tBEGIN_ALTERNATIVES (before, alt);\n-\talt.block = exp;\n-\tif (LABELED_BLOCK_BODY (exp))\n-\t  check_init (LABELED_BLOCK_BODY (exp), before);\n-\tdone_alternative (before, &alt);\n-\tEND_ALTERNATIVES (before, alt);\n-\tbreak;\n-      }\n-    case EXIT_BLOCK_EXPR:\n-      {\n-\ttree block = TREE_OPERAND (exp, 0);\n-\tstruct alternatives *alt = alternatives;\n-\twhile (alt->block != block)\n-\t  alt = alt->outer;\n-\tdone_alternative (before, alt);\n-\tSET_ALL (before);\n-\tbreak;\n-      }\n-    case SWITCH_EXPR:\n-      {\n-\tstruct alternatives alt;\n-\tword buf[2];\n-\tcheck_init (TREE_OPERAND (exp, 0), before);\n-\tBEGIN_ALTERNATIVES (before, alt);\n-\talt.saved = ALLOC_BUFFER(buf, num_current_words);\n-\tCOPY (alt.saved, before);\n-\talt.block = exp;\n-\tcheck_init (TREE_OPERAND (exp, 1), before);\n-\tdone_alternative (before, &alt);\n-\tif (! SWITCH_HAS_DEFAULT (exp))\n-\t  done_alternative (alt.saved, &alt);\n-\tFREE_BUFFER(alt.saved, buf);\n-\tEND_ALTERNATIVES (before, alt);\n-\tbreak;\n-      }\n-    case CASE_EXPR:\n-    case DEFAULT_EXPR:\n-      {\n-\tint i;\n-\tstruct alternatives *alt = alternatives;\n-\twhile (TREE_CODE (alt->block) != SWITCH_EXPR)\n-\t  alt = alt->outer;\n-\tCOPYN (before, alt->saved, WORDS_NEEDED (2 * alt->num_locals));\n-\tfor (i = alt->num_locals;  i < num_current_locals;  i++)\n-\t  CLEAR_ASSIGNED (before, i);\n-\tbreak;\n-      }\n-\n-    case TRY_EXPR:\n-      {\n-\ttree try_clause = TREE_OPERAND (exp, 0);\n-\ttree clause = TREE_OPERAND (exp, 1);\n-\tword buf[2*2];\n-\twords tmp = (num_current_words <= 2 ? buf\n-\t\t    : ALLOC_WORDS (2 * num_current_words));\n-\twords save = tmp + num_current_words;\n-\tstruct alternatives alt;\n-\tBEGIN_ALTERNATIVES (before, alt);\n-\tCOPY (save, before);\n-\tCOPY (tmp, save);\n-\tcheck_init (try_clause, tmp);\n-\tdone_alternative (tmp, &alt);\n-\tfor ( ; clause != NULL_TREE;  clause = TREE_CHAIN (clause))\n-\t  {\n-\t    tree catch_clause = TREE_OPERAND (clause, 0);\n-\t    COPY (tmp, save);\n-\t    check_init (catch_clause, tmp);\n-\t    done_alternative (tmp, &alt);\n-\t  }\n-\tif (tmp != buf)\n-\t  {\n-\t    FREE_WORDS (tmp);\n-\t  }\n-\tEND_ALTERNATIVES (before, alt);\n-      }\n-    break;\n-\n-    case TRY_FINALLY_EXPR:\n-      {\n-\tDECLARE_BUFFERS(tmp, 1);\n-\tCOPY (tmp, before);\n-\tcheck_init (TREE_OPERAND (exp, 0), before);\n-\tcheck_init (TREE_OPERAND (exp, 1), tmp);\n-\tUNION (before, before, tmp);\n-\tRELEASE_BUFFERS(tmp);\n-      }\n-      break;\n-\n-    case RETURN_EXPR:\n-    case THROW_EXPR:\n-      if (TREE_OPERAND (exp, 0))\n-\tcheck_init (TREE_OPERAND (exp, 0), before);\n-      goto never_continues;\n-\n-    case ERROR_MARK:\n-    never_continues:\n-      SET_ALL (before);\n-      break;\n-      \n-    case COND_EXPR:\n-    case TRUTH_ANDIF_EXPR:\n-    case TRUTH_ORIF_EXPR:\n-      {\n-\tDECLARE_BUFFERS(when_true, 2);\n-\twords when_false = when_true + num_current_words;\n-\tcheck_bool_init (exp, before, when_false, when_true);\n-\tINTERSECT (before, when_false, when_true);\n-\tRELEASE_BUFFERS(when_true);\n-      }\n-      break;\n-\n-    case NOP_EXPR:\n-      if (IS_EMPTY_STMT (exp))\n-\tbreak;\n-      /* ... else fall through ... */\n-    case UNARY_PLUS_EXPR:\n-    case NEGATE_EXPR:\n-    case TRUTH_AND_EXPR:\n-    case TRUTH_OR_EXPR:\n-    case TRUTH_XOR_EXPR:\n-    case TRUTH_NOT_EXPR:\n-    case BIT_NOT_EXPR:\n-    case CONVERT_EXPR:\n-    case VIEW_CONVERT_EXPR:\n-    case BIT_FIELD_REF:\n-    case FLOAT_EXPR:\n-    case FIX_TRUNC_EXPR:\n-    case INDIRECT_REF:\n-    case ADDR_EXPR:\n-    case NON_LVALUE_EXPR:\n-    case INSTANCEOF_EXPR:\n-    case ABS_EXPR:\n-      /* Avoid needless recursion. */\n-      exp = TREE_OPERAND (exp, 0);\n-      goto again;\n-\n-    case PREDECREMENT_EXPR:\n-    case PREINCREMENT_EXPR:\n-    case POSTDECREMENT_EXPR:\n-    case POSTINCREMENT_EXPR:\n-      tmp = get_variable_decl (TREE_OPERAND (exp, 0));\n-      if (tmp != NULL_TREE && DECL_FINAL (tmp))\n-\tfinal_assign_error (DECL_NAME (tmp));\n-      else if (TREE_CODE (tmp = TREE_OPERAND (exp, 0)) == COMPONENT_REF)\n-        {\n-          /* Take care of array length accesses too.  */\n-          tree decl = TREE_OPERAND (tmp, 1);\n-          if (DECL_FINAL (decl))\n-            final_assign_error (DECL_NAME (decl));\n-        }\n-\n-      /* Avoid needless recursion.  */\n-      exp = TREE_OPERAND (exp, 0);\n-      goto again;\n-\n-    case SAVE_EXPR:\n-      if (IS_INIT_CHECKED (exp))\n-\tbreak;\n-      IS_INIT_CHECKED (exp) = 1;\n-      exp = TREE_OPERAND (exp, 0);\n-      goto again;\n-\n-    case COMPOUND_EXPR:\n-    case PLUS_EXPR:\n-    case MINUS_EXPR:\n-    case MULT_EXPR:\n-    case TRUNC_DIV_EXPR:\n-    case TRUNC_MOD_EXPR:\n-    case RDIV_EXPR:\n-    case LSHIFT_EXPR:\n-    case RSHIFT_EXPR:\n-    case URSHIFT_EXPR:\n-    case BIT_AND_EXPR:\n-    case BIT_XOR_EXPR:\n-    case BIT_IOR_EXPR:\n-    case EQ_EXPR: \n-    case NE_EXPR:\n-    case GT_EXPR:\n-    case GE_EXPR:\n-    case LT_EXPR:\n-    case LE_EXPR:\n-    case MAX_EXPR:\n-    case MIN_EXPR:\n-    case ARRAY_REF:\n-    case LROTATE_EXPR:\n-    case RROTATE_EXPR:\n-    case CEIL_DIV_EXPR:\n-    case FLOOR_DIV_EXPR:\n-    case ROUND_DIV_EXPR:\n-    case CEIL_MOD_EXPR:\n-    case FLOOR_MOD_EXPR:\n-    case ROUND_MOD_EXPR:\n-    case EXACT_DIV_EXPR:\n-    case UNLT_EXPR:\n-    case UNLE_EXPR:\n-    case UNGT_EXPR:\n-    case UNGE_EXPR:\n-    case UNEQ_EXPR:\n-    case LTGT_EXPR:\n-    binop:\n-      check_init (TREE_OPERAND (exp, 0), before);\n-      /* Avoid needless recursion, especially for COMPOUND_EXPR. */\n-      exp = TREE_OPERAND (exp, 1);\n-      goto again;\n-\n-    case RESULT_DECL:\n-    case FUNCTION_DECL:\n-    case INTEGER_CST:\n-    case REAL_CST:\n-    case STRING_CST:\n-    case DECL_EXPR:\n-    case JAVA_EXC_OBJ_EXPR:\n-      break;\n-\n-    case NEW_CLASS_EXPR:\n-    case CALL_EXPR:\n-      {\n-\ttree func = TREE_OPERAND (exp, 0);\n-\ttree x = TREE_OPERAND (exp, 1);\n-\tif (TREE_CODE (func) == ADDR_EXPR)\n-\t  func = TREE_OPERAND (func, 0);\n-\tcheck_init (func, before);\n-\n-\tfor ( ;  x != NULL_TREE;  x = TREE_CHAIN (x))\n-\t  check_init (TREE_VALUE (x), before);\n-\tif (func == throw_node)\n-\t  goto never_continues;\n-      }\n-      break;\n-\n-    case NEW_ARRAY_INIT:\n-      {\n-\ttree value;\n-\tunsigned HOST_WIDE_INT idx;\n-\tFOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (TREE_OPERAND (exp, 0)),\n-\t\t\t\t    idx, value)\n-\t  check_init (value, before);\n-      }\n-      break;\n-\n-    case EXPR_WITH_FILE_LOCATION:\n-      {\n-\tlocation_t saved_location = input_location;\n-\ttree body = EXPR_WFL_NODE (exp);\n-\tif (IS_EMPTY_STMT (body))\n-\t  break;\n-#ifdef USE_MAPPED_LOCATION\n-\tinput_location = EXPR_LOCATION (exp);\n-#else\n-\tinput_filename = EXPR_WFL_FILENAME (exp);\n-\tinput_line = EXPR_WFL_LINENO (exp);\n-#endif\n-\tcheck_init (body, before);\n-\tinput_location = saved_location;\n-      }\n-      break;\n-      \n-    default:\n-      internal_error\n-\t(\"internal error in check-init: tree code not implemented: %s\",\n-\t tree_code_name [(int) TREE_CODE (exp)]);\n-    }\n-  input_location = save_location;\n-}\n-\n-void\n-check_for_initialization (tree body, tree mdecl)\n-{\n-  tree decl;\n-  word buf[2];\n-  words before = buf;\n-  tree owner = DECL_CONTEXT (mdecl);\n-  int is_static_method = METHOD_STATIC (mdecl);\n-  /* We don't need to check final fields of <init> it it calls this(). */\n-  int is_finit_method = DECL_FINIT_P (mdecl) || DECL_INSTINIT_P (mdecl);\n-  int is_init_method\n-    = (is_finit_method || DECL_CLINIT_P (mdecl)\n-       || (DECL_INIT_P (mdecl) && ! DECL_INIT_CALLS_THIS (mdecl)));\n-\n-  start_current_locals = num_current_locals = 0;\n-  num_current_words = 2;\n-\n-  if (is_init_method)\n-    {\n-      int words_needed, i;\n-      for (decl = TYPE_FIELDS (owner);\n-\t   decl != NULL_TREE;  decl = TREE_CHAIN (decl))\n-\t{\n-\t  if (DECL_FINAL (decl) && FIELD_STATIC (decl) == is_static_method)\n-\t    {\n-\t      if (DECL_FIELD_FINAL_IUD (decl))\n-\t\tDECL_BIT_INDEX (decl) = -1;\n-\t      else\n-\t\tDECL_BIT_INDEX (decl) = num_current_locals++;\n-\t    }\n-\t}\n-      words_needed = WORDS_NEEDED (2 * num_current_locals);\n-      if (words_needed > 2)\n-\t{\n-\t  num_current_words = words_needed;\n-\t  before = ALLOC_WORDS(words_needed);\n-\t}\n-      i = 0;\n-      for (decl = TYPE_FIELDS (owner);\n-\t   decl != NULL_TREE;  decl = TREE_CHAIN (decl))\n-\t{\n-\t  if (FIELD_FINAL (decl) && FIELD_STATIC (decl) == is_static_method)\n-\t    {\n-\t      if (! DECL_FIELD_FINAL_IUD (decl))\n-\t\t{\n-\t\t  CLEAR_ASSIGNED (before, i);\n-\t\t  SET_UNASSIGNED (before, i);\n-\t\t  i++;\n-\t\t}\n-\t    }\n-\t}\n-\n-    }\n-\n-  check_init (body, before);\n-\n-  if (is_init_method)\n-    {\n-      for (decl = TYPE_FIELDS (owner);\n-\t   decl != NULL_TREE;  decl = TREE_CHAIN (decl))\n-\t{\n-\t  if (FIELD_FINAL (decl) && FIELD_STATIC (decl) == is_static_method)\n-\t    {\n-\t      int index = DECL_BIT_INDEX (decl);\n-\t      if (index >= 0 && ! ASSIGNED_P (before, index))\n-\t\t{\n-\t\t  if (! is_finit_method)\n-\t\t    error (\"%Jfinal field %qD may not have been initialized\",\n-                           decl, decl);\n-\t\t}\n-\t      else if (is_finit_method)\n-\t\tDECL_FIELD_FINAL_IUD (decl) = 1;\n-\n-\t      /* Re-set to initial state, since we later may use the\n-\t\t same bit for DECL_POINTER_ALIAS_SET. */\n-\t      DECL_BIT_INDEX (decl) = -1;\n-\t    }\n-\t}\n-    }\n-\n-  start_current_locals = num_current_locals = 0;\n-}"}, {"sha": "e9d8174e43d54aa7d18646f30100031d3b66cc26", "filename": "gcc/java/class.c", "status": "modified", "additions": 179, "deletions": 28, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Functions related to building classes and their related objects.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -46,6 +46,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n #include \"cgraph.h\"\n+#include \"vecprim.h\"\n \n /* DOS brain-damage */\n #ifndef O_BINARY\n@@ -68,6 +69,8 @@ static void register_class (void);\n \n struct obstack temporary_obstack;\n \n+static const char *cyclic_inheritance_report;\n+\n /* The compiler generates different code depending on whether or not\n    it can assume certain classes have been compiled down to native\n    code or not.  The compiler options -fassume-compiled= and\n@@ -497,6 +500,9 @@ set_class_decl_access_flags (int access_flags, tree class_decl)\n   if (access_flags & ACC_PRIVATE)   CLASS_PRIVATE (class_decl) = 1;\n   if (access_flags & ACC_PROTECTED) CLASS_PROTECTED (class_decl) = 1;\n   if (access_flags & ACC_STRICT)    CLASS_STRICTFP (class_decl) = 1;\n+  if (access_flags & ACC_ENUM)      CLASS_ENUM (class_decl) = 1;\n+  if (access_flags & ACC_SYNTHETIC) CLASS_SYNTHETIC (class_decl) = 1;\n+  if (access_flags & ACC_ANNOTATION) CLASS_ANNOTATION (class_decl) = 1;\n }\n \n /* Return length of inheritance chain of CLAS, where java.lang.Object is 0,\n@@ -719,9 +725,6 @@ add_method_1 (tree this_class, int access_flags, tree name, tree function_type)\n     DECL_FUNCTION_INITIALIZED_CLASS_TABLE (fndecl) =\n       htab_create_ggc (50, htab_hash_pointer, htab_eq_pointer, NULL);\n \n-  /* Initialize the static method invocation compound list */\n-  DECL_FUNCTION_STATIC_METHOD_INVOCATION_COMPOUND (fndecl) = NULL_TREE;\n-\n   TREE_CHAIN (fndecl) = TYPE_METHODS (this_class);\n   TYPE_METHODS (this_class) = fndecl;\n \n@@ -748,6 +751,9 @@ add_method_1 (tree this_class, int access_flags, tree name, tree function_type)\n   if (access_flags & ACC_SYNCHRONIZED) METHOD_SYNCHRONIZED (fndecl) = 1;\n   if (access_flags & ACC_ABSTRACT) METHOD_ABSTRACT (fndecl) = 1;\n   if (access_flags & ACC_STRICT) METHOD_STRICTFP (fndecl) = 1;\n+  if (access_flags & ACC_SYNTHETIC) DECL_ARTIFICIAL (fndecl) = 1;\n+  if (access_flags & ACC_BRIDGE) METHOD_BRIDGE (fndecl) = 1;\n+  if (access_flags & ACC_VARARGS) METHOD_VARARGS (fndecl) = 1;\n   return fndecl;\n }\n \n@@ -780,6 +786,7 @@ add_field (tree class, tree name, tree field_type, int flags)\n   TREE_CHAIN (field) = TYPE_FIELDS (class);\n   TYPE_FIELDS (class) = field;\n   DECL_CONTEXT (field) = class;\n+  MAYBE_CREATE_VAR_LANG_DECL_SPECIFIC (field);\n \n   if (flags & ACC_PUBLIC) FIELD_PUBLIC (field) = 1;\n   if (flags & ACC_PROTECTED) FIELD_PROTECTED (field) = 1;\n@@ -791,15 +798,17 @@ add_field (tree class, tree name, tree field_type, int flags)\n       TREE_THIS_VOLATILE (field) = 1;\n     }\n   if (flags & ACC_TRANSIENT) FIELD_TRANSIENT (field) = 1;\n+  if (flags & ACC_ENUM) FIELD_ENUM (field) = 1;\n+  if (flags & ACC_SYNTHETIC) FIELD_SYNTHETIC (field) = 1;\n   if (is_static)\n     {\n       FIELD_STATIC (field) = 1;\n       /* Always make field externally visible.  This is required so\n \t that native methods can always access the field.  */\n       TREE_PUBLIC (field) = 1;\n-      /* Considered external until we know what classes are being\n-\t compiled into this object file.  */\n-      DECL_EXTERNAL (field) = 1;\n+      /* Considered external unless we are compiling it into this\n+\t object file.  */\n+      DECL_EXTERNAL (field) = (is_compiled_class (class) != 2);\n     }\n \n   return field;\n@@ -1219,6 +1228,10 @@ get_access_flags_from_decl (tree decl)\n \taccess_flags |= ACC_VOLATILE;\n       if (FIELD_TRANSIENT (decl))\n \taccess_flags |= ACC_TRANSIENT;\n+      if (FIELD_ENUM (decl))\n+\taccess_flags |= ACC_ENUM;\n+      if (FIELD_SYNTHETIC (decl))\n+\taccess_flags |= ACC_SYNTHETIC;\n       return access_flags;\n     }\n   if (TREE_CODE (decl) == TYPE_DECL)\n@@ -1241,6 +1254,12 @@ get_access_flags_from_decl (tree decl)\n \taccess_flags |= ACC_PROTECTED;\n       if (CLASS_STRICTFP (decl))\n \taccess_flags |= ACC_STRICT;\n+      if (CLASS_ENUM (decl))\n+\taccess_flags |= ACC_ENUM;\n+      if (CLASS_SYNTHETIC (decl))\n+\taccess_flags |= ACC_SYNTHETIC;\n+      if (CLASS_ANNOTATION (decl))\n+\taccess_flags |= ACC_ANNOTATION;\n       return access_flags;\n     }\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n@@ -1265,6 +1284,12 @@ get_access_flags_from_decl (tree decl)\n \taccess_flags |= ACC_STRICT;\n       if (METHOD_INVISIBLE (decl))\n \taccess_flags |= ACC_INVISIBLE;\n+      if (DECL_ARTIFICIAL (decl))\n+\taccess_flags |= ACC_SYNTHETIC;\n+      if (METHOD_BRIDGE (decl))\n+\taccess_flags |= ACC_BRIDGE;\n+      if (METHOD_VARARGS (decl))\n+\taccess_flags |= ACC_VARARGS;\n       return access_flags;\n     }\n   gcc_unreachable ();\n@@ -1646,6 +1671,8 @@ make_class_data (tree type)\n       to where objects actually point at, following new g++ ABI. */\n   tree dtable_start_offset = build_int_cst (NULL_TREE,\n \t\t\t\t\t    2 * POINTER_SIZE / BITS_PER_UNIT);\n+  VEC(int, heap) *field_indexes;\n+  tree first_real_field;\n \n   this_class_addr = build_static_class_ref (type);\n   decl = TREE_OPERAND (this_class_addr, 0);\n@@ -1655,15 +1682,28 @@ make_class_data (tree type)\n     {\n       tree dtable = get_dispatch_table (type, this_class_addr);\n       uses_jv_markobj = uses_jv_markobj_p (dtable);\n-      dtable_decl = build_dtable_decl (type);\n-      DECL_INITIAL (dtable_decl) = dtable;\n-      TREE_STATIC (dtable_decl) = 1;\n-      DECL_ARTIFICIAL (dtable_decl) = 1;\n-      DECL_IGNORED_P (dtable_decl) = 1;\n+      if (type == class_type_node && class_dtable_decl != NULL_TREE)\n+\t{\n+\t  /* We've already created some other class, and consequently\n+\t     we made class_dtable_decl.  Now we just want to fill it\n+\t     in.  */\n+\t  dtable_decl = class_dtable_decl;\n+\t}\n+      else\n+\t{\n+\t  dtable_decl = build_dtable_decl (type);\n+\t  TREE_STATIC (dtable_decl) = 1;\n+\t  DECL_ARTIFICIAL (dtable_decl) = 1;\n+\t  DECL_IGNORED_P (dtable_decl) = 1;\n+\t}\n+\n       TREE_PUBLIC (dtable_decl) = 1;\n+      DECL_INITIAL (dtable_decl) = dtable;\n       if (! flag_indirect_classes)\n \trest_of_decl_compilation (dtable_decl, 1, 0);\n-      if (type == class_type_node)\n+      /* Maybe we're compiling Class as the first class.  If so, set\n+\t class_dtable_decl to the decl we just made.  */\n+      if (type == class_type_node && class_dtable_decl == NULL_TREE)\n \tclass_dtable_decl = dtable_decl;\n     }\n \n@@ -1673,7 +1713,54 @@ make_class_data (tree type)\n     field = TREE_CHAIN (field);  /* Skip dummy fields.  */\n   if (field && DECL_NAME (field) == NULL_TREE)\n     field = TREE_CHAIN (field);  /* Skip dummy field for inherited data. */\n-  for ( ;  field != NULL_TREE;  field = TREE_CHAIN (field))\n+  first_real_field = field;\n+\n+  /* First count static and instance fields.  */\n+  for ( ; field != NULL_TREE; field = TREE_CHAIN (field))\n+    {\n+      if (! DECL_ARTIFICIAL (field))\n+\t{\n+\t  if (FIELD_STATIC (field))\n+\t    static_field_count++;\n+\t  else if (uses_jv_markobj || !flag_reduced_reflection)\n+\t    instance_field_count++;\n+\t}\n+    }\n+  field_count = static_field_count + instance_field_count;\n+  field_indexes = VEC_alloc (int, heap, field_count);\n+  \n+  /* gcj sorts fields so that static fields come first, followed by\n+     instance fields.  Unfortunately, by the time this takes place we\n+     have already generated the reflection_data for this class, and\n+     that data contians indexes into the fields.  So, we generate a\n+     permutation that maps each original field index to its final\n+     position.  Then we pass this permutation to\n+     rewrite_reflection_indexes(), which fixes up the reflection\n+     data.  */\n+  {\n+    int i;\n+    int static_count = 0;\n+    int instance_count = static_field_count;\n+    int field_index;\n+\n+    for (i = 0, field = first_real_field; \n+\t field != NULL_TREE; \n+\t field = TREE_CHAIN (field), i++)\n+    {\n+      if (! DECL_ARTIFICIAL (field))\n+\t{\n+\t  field_index = 0;\n+\t  if (FIELD_STATIC (field))\n+\t    field_index = static_count++;\n+\t  else if (uses_jv_markobj || !flag_reduced_reflection)\n+\t    field_index = instance_count++;\n+\t  VEC_quick_push (int, field_indexes, field_index);\n+\t}\n+    }\n+  }\n+\n+  for (field = first_real_field; field != NULL_TREE; \n+       field = TREE_CHAIN (field))\n     {\n       if (! DECL_ARTIFICIAL (field))\n \t{\n@@ -1683,7 +1770,6 @@ make_class_data (tree type)\n                  as it is used in the creation of the field itself. */\n               tree init = make_field_value (field);\n \t      tree initial = DECL_INITIAL (field);\n-\t      static_field_count++;\n \t      static_fields = tree_cons (NULL_TREE, init, static_fields);\n \t      /* If the initial value is a string constant,\n \t\t prevent output_constant from trying to assemble the value. */\n@@ -1696,12 +1782,11 @@ make_class_data (tree type)\n \t  else if (uses_jv_markobj || !flag_reduced_reflection)\n \t    {\n               tree init = make_field_value (field);\n-\t      instance_field_count++;\n \t      instance_fields = tree_cons (NULL_TREE, init, instance_fields);\n \t    }\n \t}\n     }\n-  field_count = static_field_count + instance_field_count;\n+\n   if (field_count > 0)\n     {\n       static_fields = nreverse (static_fields);\n@@ -1781,8 +1866,10 @@ make_class_data (tree type)\n       DECL_ARTIFICIAL (class_dtable_decl) = 1;\n       DECL_IGNORED_P (class_dtable_decl) = 1;\n       if (is_compiled_class (class_type_node) != 2)\n-\tDECL_EXTERNAL (class_dtable_decl) = 1;\n-      rest_of_decl_compilation (class_dtable_decl, 1, 0);\n+\t{\n+\t  DECL_EXTERNAL (class_dtable_decl) = 1;\n+\t  rest_of_decl_compilation (class_dtable_decl, 1, 0);\n+\t}\n     }\n \n   super = CLASSTYPE_SUPER (type);\n@@ -2001,6 +2088,48 @@ make_class_data (tree type)\n   PUSH_FIELD_VALUE (cons, \"aux_info\", null_pointer_node);\n   PUSH_FIELD_VALUE (cons, \"engine\", null_pointer_node);\n \n+  if (TYPE_REFLECTION_DATA (current_class))\n+    {\n+      int i;\n+      int count = TYPE_REFLECTION_DATASIZE (current_class);\n+      VEC (constructor_elt, gc) *v\n+\t= VEC_alloc (constructor_elt, gc, count);\n+      unsigned char *data = TYPE_REFLECTION_DATA (current_class);\n+      tree max_index = build_int_cst (sizetype, count);\n+      tree index = build_index_type (max_index);\n+      tree type = build_array_type (unsigned_byte_type_node, index);\n+      char buf[64];\n+      tree array;\n+      static int reflection_data_count;\n+\n+      sprintf (buf, \"_reflection_data_%d\", reflection_data_count++);\n+      array = build_decl (VAR_DECL, get_identifier (buf), type);\n+\n+      rewrite_reflection_indexes (field_indexes);\n+\n+      for (i = 0; i < count; i++)\n+\t{\n+\t  constructor_elt *elt = VEC_quick_push (constructor_elt, v, NULL);\n+ \t  elt->index = build_int_cst (sizetype, i);\n+\t  elt->value = build_int_cstu (byte_type_node, data[i]);\n+\t}\n+\n+      DECL_INITIAL (array) = build_constructor (type, v);\n+      TREE_STATIC (array) = 1;\n+      DECL_ARTIFICIAL (array) = 1;\n+      DECL_IGNORED_P (array) = 1;\n+      TREE_READONLY (array) = 1;\n+      TREE_CONSTANT (DECL_INITIAL (array)) = 1;\n+      rest_of_decl_compilation (array, 1, 0);\n+      \n+      PUSH_FIELD_VALUE (cons, \"reflection_data\", build_address_of (array));\n+\n+      free (data);\n+      TYPE_REFLECTION_DATA (current_class) = NULL;\n+    }\n+  else\n+    PUSH_FIELD_VALUE (cons, \"reflection_data\", null_pointer_node);\n+\n   FINISH_RECORD_CONSTRUCTOR (cons);\n \n   DECL_INITIAL (decl) = cons;\n@@ -2066,11 +2195,13 @@ is_compiled_class (tree class)\n     return 1;\n   if (TYPE_ARRAY_P (class))\n     return 0;\n+  /* We have to check this explicitly to avoid trying to load a class\n+     that we're currently parsing.  */\n   if (class == current_class)\n     return 2;\n \n   seen_in_zip = (TYPE_JCF (class) && JCF_SEEN_IN_ZIP (TYPE_JCF (class)));\n-  if (CLASS_FROM_CURRENTLY_COMPILED_P (class) || seen_in_zip)\n+  if (CLASS_FROM_CURRENTLY_COMPILED_P (class))\n     {\n       /* The class was seen in the current ZIP file and will be\n \t available as a compiled class in the future but may not have\n@@ -2182,7 +2313,7 @@ push_super_field (tree this_class, tree super_class)\n /* Handle the different manners we may have to lay out a super class.  */\n \n static tree\n-maybe_layout_super_class (tree super_class, tree this_class)\n+maybe_layout_super_class (tree super_class, tree this_class ATTRIBUTE_UNUSED)\n {\n   if (!super_class)\n     return NULL_TREE;\n@@ -2201,6 +2332,7 @@ maybe_layout_super_class (tree super_class, tree this_class)\n \tsuper_class = TREE_TYPE (super_class);\n       else\n \t{\n+#if 0\n \t  /* do_resolve_class expects an EXPR_WITH_FILE_LOCATION, so\n \t     we give it one.  */\n \t  tree this_wrap = NULL_TREE;\n@@ -2226,6 +2358,8 @@ maybe_layout_super_class (tree super_class, tree this_class)\n \t  if (!super_class)\n \t    return NULL_TREE;\t/* FIXME, NULL_TREE not checked by caller. */\n \t  super_class = TREE_TYPE (super_class);\n+#endif\n+\t  gcc_unreachable ();\n \t}\n     }\n   if (!TYPE_SIZE (super_class))\n@@ -2234,6 +2368,22 @@ maybe_layout_super_class (tree super_class, tree this_class)\n   return super_class;\n }\n \n+/* safe_layout_class just makes sure that we can load a class without\n+   disrupting the current_class, input_file, input_line, etc, information\n+   about the class processed currently.  */\n+\n+void\n+safe_layout_class (tree class)\n+{\n+  tree save_current_class = current_class;\n+  location_t save_location = input_location;\n+\n+  layout_class (class);\n+\n+  current_class = save_current_class;\n+  input_location = save_location;\n+}\n+\n void\n layout_class (tree this_class)\n {\n@@ -2450,9 +2600,10 @@ layout_class_method (tree this_class, tree super_class,\n   tree method_name = DECL_NAME (method_decl);\n \n   TREE_PUBLIC (method_decl) = 1;\n-  /* Considered external until we know what classes are being\n-     compiled into this object file.  */\n-  DECL_EXTERNAL (method_decl) = 1;\n+  /* Considered external unless it is being compiled into this object\n+     file.  */\n+  DECL_EXTERNAL (method_decl) = ((is_compiled_class (this_class) != 2)\n+\t\t\t\t || METHOD_NATIVE (method_decl));\n \n   if (ID_INIT_P (method_name))\n     {\n@@ -2464,14 +2615,14 @@ layout_class_method (tree this_class, tree super_class,\n \t    p = ptr;\n \t}\n       DECL_CONSTRUCTOR_P (method_decl) = 1;\n-      build_java_argument_signature (TREE_TYPE (method_decl));\n+      build_java_signature (TREE_TYPE (method_decl));\n     }\n   else if (! METHOD_STATIC (method_decl))\n     {\n       tree method_sig =\n-\tbuild_java_argument_signature (TREE_TYPE (method_decl));\n+\tbuild_java_signature (TREE_TYPE (method_decl));\n       bool method_override = false;\n-      tree super_method = lookup_argument_method (super_class, method_name,\n+      tree super_method = lookup_java_method (super_class, method_name,\n \t\t\t\t\t\t  method_sig);\n       if (super_method != NULL_TREE\n \t  && ! METHOD_DUMMY (super_method))"}, {"sha": "17ecbc92e646dcc1b290b1ac11c494dac82331a0", "filename": "gcc/java/config-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconfig-lang.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n # Top level configure fragment for the GNU compiler for the Java(TM)\n # language.\n-#  Copyright (C) 1994, 1995, 2000, 2001, 2003 Free Software Foundation, Inc.\n+#  Copyright (C) 1994, 1995, 2000, 2001, 2003, 2007 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -34,9 +34,9 @@ language=\"java\"\n \n compilers=\"jc1\\$(exeext) jvgenmain\\$(exeext)\"\n \n-stagestuff=\"jc1\\$(exeext) gcj\\$(exeext) jvgenmain\\$(exeext) gcjh\\$(exeext) gjnih\\$(exeext) jv-scan\\$(exeext) jcf-dump\\$(exeext)\"\n+stagestuff=\"jc1\\$(exeext) gcj\\$(exeext) jvgenmain\\$(exeext) jcf-dump\\$(exeext)\"\n \n-gtfiles=\"\\$(srcdir)/java/java-tree.h \\$(srcdir)/java/jcf.h \\$(srcdir)/java/lex.h \\$(srcdir)/java/parse.h \\$(srcdir)/java/builtins.c \\$(srcdir)/java/class.c \\$(srcdir)/java/constants.c \\$(srcdir)/java/decl.c \\$(srcdir)/java/expr.c \\$(srcdir)/java/jcf-parse.c \\$(srcdir)/java/jcf-write.c \\$(srcdir)/java/lang.c \\$(srcdir)/java/mangle.c \\$(srcdir)/java/parse.y \\$(srcdir)/java/resource.c\"\n+gtfiles=\"\\$(srcdir)/java/java-tree.h \\$(srcdir)/java/jcf.h \\$(srcdir)/java/parse.h \\$(srcdir)/java/builtins.c \\$(srcdir)/java/class.c \\$(srcdir)/java/constants.c \\$(srcdir)/java/decl.c \\$(srcdir)/java/expr.c \\$(srcdir)/java/jcf-parse.c \\$(srcdir)/java/lang.c \\$(srcdir)/java/mangle.c \\$(srcdir)/java/resource.c\"\n \n target_libs=${libgcj_saved}\n lang_dirs=\"zlib fastjar\""}, {"sha": "70e5321de000fa44d3dc25d1396735b3efc7e568", "filename": "gcc/java/constants.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconstants.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -34,11 +34,9 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n static void set_constant_entry (CPool *, int, int, jword);\n static int find_tree_constant (CPool *, int, tree);\n-static int find_class_or_string_constant (CPool *, int, tree);\n static int find_name_and_type_constant (CPool *, tree, tree);\n static tree get_tag_node (int);\n static tree build_constant_data_ref (void);\n-static CPool *cpool_for_class (tree);\n \n /* Set the INDEX'th constant in CPOOL to have the given TAG and VALUE. */\n \n@@ -134,7 +132,7 @@ find_utf8_constant (CPool *cpool, tree name)\n   return find_tree_constant (cpool, CONSTANT_Utf8, name);\n }\n \n-static int\n+int\n find_class_or_string_constant (CPool *cpool, int tag, tree name)\n {\n   jword j = find_utf8_constant (cpool, name);\n@@ -322,14 +320,17 @@ get_tag_node (int tag)\n {\n   /* A Cache for build_int_cst (CONSTANT_XXX, 0). */\n \n+  if (tag >= 13)\n+    return build_int_cst (NULL_TREE, tag);\n+\n   if (tag_nodes[tag] == NULL_TREE)\n     tag_nodes[tag] = build_int_cst (NULL_TREE, tag);\n   return tag_nodes[tag];\n }\n \n /* Given a class, return its constant pool, creating one if necessary.  */\n \n-static CPool *\n+CPool *\n cpool_for_class (tree class)\n {\n   CPool *cpool = TYPE_CPOOL (class);\n@@ -495,11 +496,20 @@ build_constants_constructor (void)\n   tree tags_list = NULL_TREE;\n   tree data_list = NULL_TREE;\n   int i;\n+\n   for (i = outgoing_cpool->count;  --i > 0; )\n-    switch (outgoing_cpool->tags[i])\n+    switch (outgoing_cpool->tags[i] & ~CONSTANT_LazyFlag)\n       {\n+      case CONSTANT_None:  /* The second half of a Double or Long on a\n+\t\t\t      32-bit target.  */\n       case CONSTANT_Fieldref:\n       case CONSTANT_NameAndType:\n+      case CONSTANT_Float:\n+      case CONSTANT_Integer:\n+      case CONSTANT_Double:\n+      case CONSTANT_Long:\n+      case CONSTANT_Methodref:\n+      case CONSTANT_InterfaceMethodref:\n \t{\n \t  unsigned HOST_WIDE_INT temp = outgoing_cpool->data[i].w;\n \n@@ -512,8 +522,7 @@ build_constants_constructor (void)\n \t    temp <<= BITS_PER_WORD - 32;\n \n \t  tags_list\n-\t    = tree_cons (NULL_TREE, \n-\t\t\t build_int_cst (NULL_TREE, outgoing_cpool->tags[i]),\n+\t    = tree_cons (NULL_TREE, get_tag_node (outgoing_cpool->tags[i]),\n \t\t\t tags_list);\n \t  data_list\n \t    = tree_cons (NULL_TREE, \n@@ -522,14 +531,21 @@ build_constants_constructor (void)\n \t\t\t data_list);\n \t}\n \tbreak;\n-      default:\n+\n+      case CONSTANT_Class:\n+      case CONSTANT_String:\n+      case CONSTANT_Unicode:\n+      case CONSTANT_Utf8:\n \ttags_list\n \t  = tree_cons (NULL_TREE, get_tag_node (outgoing_cpool->tags[i]),\n \t\t       tags_list);\n \tdata_list\n \t  = tree_cons (NULL_TREE, build_utf8_ref (outgoing_cpool->data[i].t),\n \t\t       data_list);\n \tbreak;\n+\n+      default:\n+\tgcc_assert (false);\n       }\n   if (outgoing_cpool->count > 0)\n     {"}, {"sha": "f08c41322e6f998af9bc4c4ab7f73bae86a91337", "filename": "gcc/java/convert.h", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fconvert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fconvert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconvert.h?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,25 +0,0 @@\n-/* Definition of conversion functions.\n-   Copyright (C) 1993, 1998, 2000, 2003 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* Written by Jeffrey Hsu <hsu@cygnus.com> */\n-\n-extern tree convert_to_integer (tree type, tree expr);\n-extern tree convert_to_real (tree type, tree expr);\n-extern tree convert_to_pointer (tree type, tree expr);"}, {"sha": "346060999f562f5c5afe3d53275e8344a723de26", "filename": "gcc/java/decl.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,7 +1,7 @@\n /* Process declarations and variables for the GNU compiler for the\n    Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -75,9 +75,9 @@ static void parse_version (void);\n \t\t\t\t\t  loader.  */\n \n /* If an ABI change is made within a GCC release series, rendering current\n-   binaries incompatible with the old runtimes, this number can be set to\n+   binaries incompatible with the old runtimes, this number must be set to\n    enforce the compatibility rules. */\n-#define MINOR_BINARYCOMPAT_ABI_VERSION 0\n+#define MINOR_BINARYCOMPAT_ABI_VERSION 1\n \n /* The runtime may recognize a variety of BC ABIs (objects generated by \n    different version of gcj), but will probably always require strict \n@@ -755,15 +755,9 @@ java_init_decl_processing (void)\n   TYPE_identifier_node = get_identifier (\"TYPE\");\n   init_identifier_node = get_identifier (\"<init>\");\n   clinit_identifier_node = get_identifier (\"<clinit>\");\n-  finit_identifier_node = get_identifier (\"finit$\");\n-  instinit_identifier_node = get_identifier (\"instinit$\");\n   void_signature_node = get_identifier (\"()V\");\n-  length_identifier_node = get_identifier (\"length\");\n   finalize_identifier_node = get_identifier (\"finalize\");\n   this_identifier_node = get_identifier (\"this\");\n-  super_identifier_node = get_identifier (\"super\");\n-  continue_identifier_node = get_identifier (\"continue\");\n-  access0_identifier_node = get_identifier (\"access$0\");\n   classdollar_identifier_node = get_identifier (\"class$\");\n \n   java_lang_cloneable_identifier_node = get_identifier (\"java.lang.Cloneable\");\n@@ -854,6 +848,7 @@ java_init_decl_processing (void)\n   PUSH_FIELD (class_type_node, field, \"chain\", ptr_type_node);\n   PUSH_FIELD (class_type_node, field, \"aux_info\", ptr_type_node);\n   PUSH_FIELD (class_type_node, field, \"engine\", ptr_type_node);\n+  PUSH_FIELD (class_type_node, field, \"reflection_data\", ptr_type_node);\n   for (t = TYPE_FIELDS (class_type_node);  t != NULL_TREE;  t = TREE_CHAIN (t))\n     FIELD_PRIVATE (t) = 1;\n   push_super_field (class_type_node, object_type_node);\n@@ -1109,8 +1104,6 @@ java_init_decl_processing (void)\n \n   lang_eh_runtime_type = do_nothing;\n \n-  init_jcf_parse ();\n-    \n   initialize_builtins ();\n   soft_fmod_node = built_in_decls[BUILT_IN_FMOD];\n #if 0"}, {"sha": "b9d68b02a730bc0383b9d016915702a4cc53ca1f", "filename": "gcc/java/expr.c", "status": "modified", "additions": 75, "deletions": 12, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Process expressions for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -885,6 +885,7 @@ build_java_arrayaccess (tree array, tree type, tree index)\n   tree data_field;\n   tree ref;\n   tree array_type = TREE_TYPE (TREE_TYPE (array));\n+  tree size_exp = fold_convert (sizetype, size_in_bytes (type));\n \n   if (!is_array_type_p (TREE_TYPE (array)))\n     {\n@@ -919,16 +920,34 @@ build_java_arrayaccess (tree array, tree type, tree index)\n      to have the bounds check evaluated first. */\n   if (throw != NULL_TREE)\n     index = build2 (COMPOUND_EXPR, int_type_node, throw, index);\n- \n+\n   data_field = lookup_field (&array_type, get_identifier (\"data\"));\n \n   ref = build3 (COMPONENT_REF, TREE_TYPE (data_field),    \n \t\tbuild_java_indirect_ref (array_type, array, \n \t\t\t\t\t flag_check_references),\n \t\tdata_field, NULL_TREE);\n-  \n-  node = build4 (ARRAY_REF, type, ref, index, NULL_TREE, NULL_TREE);\n-  return node;\n+\n+  /* Take the address of the data field and convert it to a pointer to\n+     the element type.  */\n+  node = build1 (NOP_EXPR, build_pointer_type (type), build_address_of (ref));\n+\n+  /* Multiply the index by the size of an element to obtain a byte\n+     offset.  Convert the result to a pointer to the element type.  */\n+  index = fold_convert (TREE_TYPE (node),\n+\t\t\tbuild2 (MULT_EXPR, sizetype, \n+\t\t\t\tfold_convert (sizetype, index), \n+\t\t\t\tsize_exp));\n+\n+  /* Sum the byte offset and the address of the data field.  */\n+  node = fold_build2 (PLUS_EXPR, TREE_TYPE (node), node, index);\n+\n+  /* Finally, return\n+\n+    *((&array->data) + index*size_exp)\n+\n+  */\n+  return build1 (INDIRECT_REF, TREE_TYPE (TREE_TYPE (node)), node);\n }\n \n /* Generate code to throw an ArrayStoreException if OBJECT is not assignable\n@@ -1127,7 +1146,7 @@ expand_java_arraystore (tree rhs_type_node)\n \t\t\t\t && TYPE_PRECISION (rhs_type_node) <= 32) ? \n \t\t\t\t int_type_node : rhs_type_node);\n   tree index = pop_value (int_type_node);\n-  tree array_type, array;\n+  tree array_type, array, temp, access;\n \n   /* If we're processing an `aaload' we might as well just pick\n      `Object'.  */\n@@ -1149,14 +1168,31 @@ expand_java_arraystore (tree rhs_type_node)\n   index = save_expr (index);\n   array = save_expr (array);\n \n+  /* We want to perform the bounds check (done by\n+     build_java_arrayaccess) before the type check (done by\n+     build_java_arraystore_check).  So, we call build_java_arrayaccess\n+     -- which returns an ARRAY_REF lvalue -- and we then generate code\n+     to stash the address of that lvalue in a temp.  Then we call\n+     build_java_arraystore_check, and finally we generate a\n+     MODIFY_EXPR to set the array element.  */\n+\n+  access = build_java_arrayaccess (array, rhs_type_node, index);\n+  temp = build_decl (VAR_DECL, NULL_TREE, \n+\t\t     build_pointer_type (TREE_TYPE (access)));\n+  java_add_local_var (temp);\n+  java_add_stmt (build2 (MODIFY_EXPR, TREE_TYPE (temp),\n+\t\t\t temp, \n+\t\t\t build_fold_addr_expr (access)));\n+\n   if (TREE_CODE (rhs_type_node) == POINTER_TYPE)\n     {\n       tree check = build_java_arraystore_check (array, rhs_node);\n       java_add_stmt (check);\n     }\n   \n-  array = build_java_arrayaccess (array, rhs_type_node, index);\n-  java_add_stmt (build2 (MODIFY_EXPR, TREE_TYPE (array), array, rhs_node));  \n+  java_add_stmt (build2 (MODIFY_EXPR, TREE_TYPE (access), \n+\t\t\t build1 (INDIRECT_REF, TREE_TYPE (access), temp),\n+\t\t\t rhs_node));  \n }\n \n /* Expand the evaluation of ARRAY[INDEX]. build_java_check_indexed_type makes \n@@ -2048,13 +2084,32 @@ typedef struct\n   tree (*rewrite_arglist) (tree arglist);\n } rewrite_rule;\n \n+/* Add __builtin_return_address(0) to the end of an arglist.  */\n+\n+\n+static tree \n+rewrite_arglist_getcaller (tree arglist)\n+{\n+  tree retaddr \n+    = (build_function_call_expr \n+       (built_in_decls[BUILT_IN_RETURN_ADDRESS],\n+\tbuild_tree_list (NULL_TREE, integer_zero_node)));\n+  \n+  DECL_INLINE (current_function_decl) = 0;\n+\n+  return chainon (arglist, \n+\t\t  tree_cons (NULL_TREE, retaddr, \n+\t\t\t     NULL_TREE));\n+}\n+\n /* Add this.class to the end of an arglist.  */\n \n static tree \n rewrite_arglist_getclass (tree arglist)\n {\n   return chainon (arglist, \n-\t\t  tree_cons (NULL_TREE, build_class_ref (output_class), NULL_TREE));\n+\t\t  tree_cons (NULL_TREE, build_class_ref (output_class),\n+\t\t\t     NULL_TREE));\n }\n \n static rewrite_rule rules[] =\n@@ -2064,6 +2119,14 @@ static rewrite_rule rules[] =\n    {\"java.lang.Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\",\n     \"(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;\",\n     ACC_FINAL|ACC_PRIVATE|ACC_STATIC, rewrite_arglist_getclass},\n+   {\"gnu.classpath.VMStackWalker\", \"getCallingClass\", \"()Ljava/lang/Class;\",\n+    \"(Lgnu/gcj/RawData;)Ljava/lang/Class;\",\n+    ACC_FINAL|ACC_PRIVATE|ACC_STATIC, rewrite_arglist_getcaller},\n+   {\"gnu.classpath.VMStackWalker\", \"getCallingClassLoader\", \n+    \"()Ljava/lang/ClassLoader;\",\n+    \"(Lgnu/gcj/RawData;)Ljava/lang/ClassLoader;\",\n+    ACC_FINAL|ACC_PRIVATE|ACC_STATIC, rewrite_arglist_getcaller},\n+\n    {NULL, NULL, NULL, NULL, 0, NULL}};\n \n /* Scan the rules list for replacements for *METHOD_P and replace the\n@@ -2848,7 +2911,8 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n       tree context = DECL_CONTEXT (field_ref);\n       if (context != self_type && CLASS_INTERFACE (TYPE_NAME (context)))\n \tfield_ref = build_class_init (context, field_ref);\n-      field_ref = build_class_init (self_type, field_ref);\n+      else\n+\tfield_ref = build_class_init (self_type, field_ref);\n     }\n   if (is_putting)\n     {\n@@ -3645,7 +3709,6 @@ force_evaluation_order (tree node)\n   if (flag_syntax_only)\n     return node;\n   if (TREE_CODE (node) == CALL_EXPR\n-      || TREE_CODE (node) == NEW_CLASS_EXPR\n       || (TREE_CODE (node) == COMPOUND_EXPR\n \t  && TREE_CODE (TREE_OPERAND (node, 0)) == CALL_EXPR\n \t  && TREE_CODE (TREE_OPERAND (node, 1)) == SAVE_EXPR)) "}, {"sha": "07968679c196f4eb614f8973c7816b944b97cdc4", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 14, "deletions": 71, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -68,8 +68,6 @@ man page gfdl(7).\n                             Generate header files from Java class files\n * gjnih: (gcj)Invoking gjnih.\n                             Generate JNI header files from Java class files\n-* jv-scan: (gcj)Invoking jv-scan.\n-                            Print information about Java source files\n * jcf-dump: (gcj)Invoking jcf-dump.\n                             Print information about Java class files\n * gij: (gcj)Invoking gij.   GNU interpreter for Java bytecode\n@@ -121,7 +119,6 @@ files and object files, and it can read both Java source code and\n * Compatibility::\tCompatibility between gcj and other tools for Java\n * Invoking gcjh::       Generate header files from class files\n * Invoking gjnih::      Generate JNI header files from class files\n-* Invoking jv-scan::    Print information about source files\n * Invoking jcf-dump::   Print information about class files\n * Invoking gij::\tInterpreting Java bytecodes\n * Invoking gcj-dbtool:: Tool for manipulating class file databases.\n@@ -156,7 +153,7 @@ gcj [@option{-I}@var{dir}@dots{}] [@option{-d} @var{dir}@dots{}]\n     @var{sourcefile}@dots{}\n @c man end\n @c man begin SEEALSO gcj\n-gcc(1), gcjh(1), gjnih(1), gij(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+gcc(1), gcjh(1), gjnih(1), gij(1), jcf-dump(1), gfdl(7),\n and the Info entries for @file{gcj} and @file{gcc}.\n @c man end\n @end ignore\n@@ -305,6 +302,10 @@ behavior in this particular case.)\n This forces the compiler to always check for the special zero length\n attribute @code{gnu.gcj.gcj-compiled} in @code{java.lang.Object} and\n issue an error if it isn't found.\n+\n+@item -fsource=@var{VERSION}\n+This option is used to choose the source version accepted by\n+@command{gcj}.  The default is @samp{1.5}.\n @end table\n \n @node Encodings\n@@ -457,6 +458,11 @@ instance, it could be used in a call to @code{ResourceBundle.getBundle}.\n The actual file name to be compiled this way must be specified\n separately.\n \n+@item -ftarget=@var{VERSION}\n+This can be used with @option{-C} to choose the version of bytecode\n+emitted by @command{gcj}.  The default is @samp{1.5}.  When not\n+generating bytecode, this option has no effect.\n+\n @item -d @var{directory}\n When used with @code{-C}, this causes all generated @file{.class} files\n to be put in the appropriate subdirectory of @var{directory}.  By\n@@ -751,7 +757,7 @@ gcjh [@option{-stubs}] [@option{-jni}]\n     @var{classname}@dots{}\n @c man end\n @c man begin SEEALSO gcjh\n-gcc(1), gcj(1), gij(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+gcc(1), gcj(1), gij(1), jcf-dump(1), gfdl(7),\n and the Info entries for @file{gcj} and @file{gcc}.\n @c man end\n @end ignore\n@@ -865,7 +871,7 @@ gjnih [@option{-stubs}] [@option{-jni}]\n     @var{classname}@dots{}\n @c man end\n @c man begin SEEALSO gjnih\n-gcc(1), gcj(1), gcjh(1), gij(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+gcc(1), gcj(1), gcjh(1), gij(1), jcf-dump(1), gfdl(7),\n and the Info entries for @file{gcj} and @file{gcc}.\n @c man end\n @end ignore\n@@ -952,69 +958,6 @@ All remaining options are considered to be names of classes.\n \n @c man end\n \n-@node Invoking jv-scan\n-@chapter Invoking jv-scan\n-\n-@c man title jv-scan print information about Java source file\n-\n-@c man begin DESCRIPTION jv-scan\n-\n-The @code{jv-scan} program can be used to print information about a Java\n-source file (@file{.java} file).\n-\n-@c man end\n-\n-@ignore\n-@c man begin SYNOPSIS jv-scan\n-jv-scan [@option{--no-assert}] [@option{--complexity}] \n-    [@option{--encoding}=@var{name}] [@option{--print-main}] \n-    [@option{--list-class}] [@option{--list-filename}]\n-    [@option{--version}] [@option{--help}]\n-    [@option{-o} @var{file}] @var{inputfile}@dots{}\n-@c man end\n-@c man begin SEEALSO jv-scan\n-gcc(1), gcj(1), gcjh(1), gij(1), jcf-dump(1), gfdl(7),\n-and the Info entries for @file{gcj} and @file{gcc}.\n-@c man end\n-@end ignore\n-\n-@c man begin OPTIONS jv-scan\n-\n-@table @gcctabopt\n-@item --no-assert\n-Don't recognize the @code{assert} keyword, for backwards compatibility\n-with older versions of the language specification.\n-\n-@item --complexity\n-This prints a complexity measure, related to cyclomatic complexity, for\n-each input file.\n-\n-@item --encoding=@var{name}\n-This works like the corresponding @command{gcj} option.\n-\n-@item --print-main\n-This prints the name of the class in this file containing a @code{main}\n-method.\n-\n-@item --list-class\n-This lists the names of all classes defined in the input files.\n-\n-@item --list-filename\n-If @code{--list-class} is given, this option causes @code{jv-scan} to\n-also print the name of the file in which each class was found.\n-\n-@item -o @var{file}\n-Print output to the named file.\n-\n-@item --help\n-Print help, then exit.\n-\n-@item --version\n-Print version number, then exit.\n-@end table\n-\n-@c man end\n-\n @node Invoking jcf-dump\n @chapter Invoking jcf-dump\n \n@@ -1092,7 +1035,7 @@ gij [@option{-jar}] [@option{OPTION}] @dots{} @var{CLASS} [@var{ARGS}@dots{}]\n   [@option{--showversion}] [@option{--version}] [@option{--help}][@option{-?}]\n @c man end\n @c man begin SEEALSO gij\n-gcc(1), gcj(1), gcjh(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+gcc(1), gcj(1), gcjh(1), jcf-dump(1), gfdl(7),\n and the Info entries for @file{gcj} and @file{gcc}.\n @c man end\n @end ignore\n@@ -1219,7 +1162,7 @@ gcj-dbtool [@option{-0}] [@option{-}] [@option{-n}] [@option{-a}] [@option{-f}]\n \n @c man end\n @c man begin SEEALSO gij\n-gcc(1), gcj(1), gcjh(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+gcc(1), gcj(1), gcjh(1), jcf-dump(1), gfdl(7),\n and the Info entries for @file{gcj} and @file{gcc}.\n @c man end\n @end ignore"}, {"sha": "a2f22135b5ba5b7a85a767e977e75793257b06ca", "filename": "gcc/java/gen-table.pl", "status": "removed", "additions": 0, "deletions": 273, "changes": 273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fgen-table.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fgen-table.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgen-table.pl?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,273 +0,0 @@\n-#! /usr/bin/perl\n-\n-#    Copyright (C) 2000, 2001, 2003 Free Software Foundation\n-\n-#    This program is free software; you can redistribute it and/or modify\n-#    it under the terms of the GNU General Public License as published by\n-#    the Free Software Foundation; either version 2, or (at your option)\n-#    any later version.\n-\n-#    This program is distributed in the hope that it will be useful,\n-#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-#    GNU General Public License for more details.\n-\n-#    You should have received a copy of the GNU General Public License\n-#    along with this program; if not, write to the Free Software\n-#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-#    02110-1301, USA.\n-\n-# gen-table.pl - Generate tables for gcj from Unicode data.\n-# Usage: perl gen-table.pl DATA-FILE\n-#\n-# You can find the Unicode data file here:\n-#   ftp://www.unicode.org/Public/3.0-Update1/UnicodeData-3.0.1.txt\n-# Please update this URL when this program is used with a more\n-# recent version of the table.  Note that this table cannot be\n-# distributed with gcc.\n-# This program should not be re-run indiscriminately.  Care must be\n-# taken that what it generates is in sync with the Java specification.\n-\n-# Names of fields in Unicode data table.\n-$CODE = 0;\n-$NAME = 1;\n-$CATEGORY = 2;\n-$COMBINING_CLASSES = 3;\n-$BIDI_CATEGORY = 4;\n-$DECOMPOSITION = 5;\n-$DECIMAL_VALUE = 6;\n-$DIGIT_VALUE = 7;\n-$NUMERIC_VALUE = 8;\n-$MIRRORED = 9;\n-$OLD_NAME = 10;\n-$COMMENT = 11;\n-$UPPER = 12;\n-$LOWER = 13;\n-$TITLE = 14;\n-\n-# Start of special-cased gaps in Unicode data table.\n-%gaps = (\n-\t 0x4e00 => \"CJK\",\n-\t 0xac00 => \"Hangul\",\n-\t 0xd800 => \"Unassigned High Surrogate\",\n-\t 0xdb80 => \"Private Use High Surrogate\",\n-\t 0xdc00 => \"Low Surrogate\",\n-\t 0xe000 => \"Private Use\"\n-\t );\n-\n-# This lists control characters which are also considered whitespace.\n-# This is a somewhat odd list, taken from the JCL definition of\n-# Character.isIdentifierIgnorable.\n-%whitespace_controls =\n-    (\n-     0x0009 => 1,\n-     0x000a => 1,\n-     0x000b => 1,\n-     0x000c => 1,\n-     0x000d => 1,\n-     0x001c => 1,\n-     0x001d => 1,\n-     0x001e => 1,\n-     0x001f => 1\n-     );\n-\n-open (INPUT, \"< $ARGV[0]\") || exit 1;\n-\n-$last_code = -1;\n-while (<INPUT>)\n-{\n-    chop;\n-    @fields = split (';', $_, 30);\n-    if ($#fields != 14)\n-    {\n-\tprint STDERR \"Entry for $fields[$CODE] has wrong number of fields\\n\";\n-    }\n-\n-    $code = hex ($fields[$CODE]);\n-    last if $code > 0xffff;\n-    if ($code > $last_code + 1)\n-    {\n-\t# Found a gap.\n-\tif (defined $gaps{$code})\n-\t{\n-\t    # Fill the gap with the last character read.\n-\t    @gfields = @fields;\n-\t}\n-\telse\n-\t{\n-\t    # The gap represents undefined characters.  Only the type\n-\t    # matters.\n-\t    @gfields = ('', '', 'Cn', '0', '', '', '', '', '', '', '',\n-\t\t\t'', '', '', '');\n-\t}\n-\tfor (++$last_code; $last_code < $code; ++$last_code)\n-\t{\n-\t    $gfields{$CODE} = sprintf (\"%04x\", $last_code);\n-\t    &process_one ($last_code, @gfields);\n-\t}\n-    }\n-    &process_one ($code, @fields);\n-    $last_code = $code;\n-}\n-\n-close (INPUT);\n-\n-@gfields = ('', '', 'Cn', '0', '', '', '', '', '', '', '',\n-\t    '', '', '', '');\n-for (++$last_code; $last_code < 0x10000; ++$last_code)\n-{\n-    $gfields{$CODE} = sprintf (\"%04x\", $last_code);\n-    &process_one ($last_code, @gfields);\n-}\n---$last_code;\t\t\t# Want last to be 0xFFFF.\n-\n-&print_tables ($last_code);\n-\n-exit 0;\n-\n-# Process a single character.\n-sub process_one\n-{\n-    my ($code, @fields) = @_;\n-\n-    my @value = ();\n-    my $type = $fields[$CATEGORY];\n-\n-    # See if the character is a valid identifier start.\n-    if ($type =~ /L./\t\t# Letter\n-\t|| $type eq 'Pc'\t# Connecting punctuation\n-\t|| $type eq 'Sc')\t# Currency symbol\n-    {\n-\tpush (@value, 'LETTER_START');\n-    }\n-\n-    # See if the character is a valid identifier member.\n-    if ($type =~ /L./\t\t# Letter\n-\t|| $type eq 'Pc'\t# Connecting punctuation\n-\t|| $type eq 'Sc'\t# Currency symbol\n-\t|| $type =~ /N[dl]/\t# Number: decimal or letter\n-\t|| $type =~ /M[nc]/\t# Mark: non-spacing or combining\n-\t|| ($type eq 'Cc'\t# Certain controls\n-\t    && ! defined $whitespace_controls{$code})\n-\t|| ($code >= 0x200c\t# Join controls\n-\t    && $code <= 0x200f)\n-\t|| ($code >= 0x202a\t# Bidi controls -- note that there\n-\t\t\t\t# is a typo in the JCL where these are\n-\t\t\t\t# concerned.\n-\t    && $code <= 0x202e)\n-\t|| ($code >= 0x206a\t# Format controls\n-\t    && $code <= 0x206f)\n-\t|| $code == 0xfeff)\t# ZWNBSP\n-    {\n-\tpush (@value, 'LETTER_PART');\n-    }\n-\n-    if (($type =~ /Z./\n-\t # Java treats some values specially as non-spaces.\n-\t && $code != 0x00a0\n-\t && $code != 0x2007\n-\t && $code != 0x202f)\n-\t# And for our purposes there are some that should be specially\n-\t# treated as spaces.\n-\t|| $code == 0x000b\n-\t|| ($code >= 0x001c && $code <= 0x001f))\n-    {\n-\tpush (@value, 'LETTER_SPACE');\n-    }\n-\n-    if (! @value)\n-    {\n-\t$value = '0';\n-    }\n-    else\n-    {\n-\t$value = '(' . join (' | ', @value) . ')';\n-    }\n-\n-    $map[$code] = $value;\n-}\n-\n-sub print_tables\n-{\n-    my ($last) = @_;\n-\n-    local ($bytes_out) = 0;\n-\n-    open (OUT, \"> chartables.h\");\n-\n-    print OUT \"/* This file is automatically generated.  DO NOT EDIT!\\n\";\n-    print OUT \"   Instead, edit gen-table.pl and re-run.  */\\n\\n\";\n-\n-    print OUT \"#ifndef GCC_CHARTABLES_H\\n\";\n-    print OUT \"#define GCC_CHARTABLES_H\\n\\n\";\n-\n-    print OUT \"#define LETTER_START 1\\n\";\n-    print OUT \"#define LETTER_PART  2\\n\";\n-    print OUT \"#define LETTER_SPACE 4\\n\\n\";\n-    print OUT \"#define LETTER_MASK  7\\n\\n\";\n-\n-    for ($count = 0; $count <= $last; $count += 256)\n-    {\n-\t$row[$count / 256] = &print_row ($count, '(char *) ', 'const char', 1,\n-\t\t\t\t\t 'page');\n-    }\n-\n-    print OUT \"static const char *const type_table[256] = {\\n\";\n-    for ($count = 0; $count <= $last; $count += 256)\n-    {\n-\tprint OUT \",\\n\" if $count > 0;\n-\tprint OUT \"  \", $row[$count / 256];\n-\t$bytes_out += 4;\n-    }\n-    print OUT \"\\n};\\n\\n\";\n-\n-    print OUT \"#endif /* ! GCC_CHARTABLES_H */\\n\";\n-\n-    close (OUT);\n-\n-    printf \"Generated %d bytes\\n\", $bytes_out;\n-}\n-\n-# Print a single \"row\" of a two-level table.\n-sub print_row\n-{\n-    my ($start, $def_pfx, $typname, $typsize, $name) = @_;\n-\n-    my ($i);\n-    my (@values);\n-    my ($flag) = 1;\n-    my ($off);\n-    for ($off = 0; $off < 256; ++$off)\n-    {\n-\t$values[$off] = $map[$off + $start];\n-\tif ($values[$off] ne $values[0])\n-\t{\n-\t    $flag = 0;\n-\t}\n-    }\n-    if ($flag)\n-    {\n-\treturn $def_pfx . $values[0];\n-    }\n-\n-    printf OUT \"static %s %s%d[256] = {\\n  \", $typname, $name, $start / 256;\n-    my ($column) = 2;\n-    for ($i = $start; $i < $start + 256; ++$i)\n-    {\n-\tprint OUT \", \"\n-\t    if $i > $start;\n-\tmy ($text) = $values[$i - $start];\n-\tif (length ($text) + $column + 2 > 78)\n-\t{\n-\t    print OUT \"\\n  \";\n-\t    $column = 2;\n-\t}\n-\tprint OUT $text;\n-\t$column += length ($text) + 2;\n-    }\n-    print OUT \"\\n};\\n\\n\";\n-\n-    $bytes_out += 256 * $typsize;\n-\n-    return sprintf \"%s%d\", $name, $start / 256;\n-}"}, {"sha": "c79a0a918c7991b358682499125c4b9f66a5183c", "filename": "gcc/java/gjavah.c", "status": "removed", "additions": 0, "deletions": 2673, "changes": 2673, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,2673 +0,0 @@\n-/* Program to write C++-suitable header files from a Java(TM) .class\n-   file.  This is similar to SUN's javah.\n-\n-Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n-Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  \n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-/* Written by Per Bothner <bothner@cygnus.com>, February 1996. */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include <math.h>\n-\n-#include \"jcf.h\"\n-#include \"tree.h\"\n-#include \"version.h\"\n-#include \"javaop.h\"\n-#include \"java-tree.h\"\n-#include \"java-opcodes.h\"\n-#include \"ggc.h\"\n-#include \"hashtab.h\"\n-#include \"intl.h\"\n-\n-#include <getopt.h>\n-\n-\f\n-\n-/* The output file.  */\n-FILE *out = NULL;\n-\n-/* Nonzero on failure.  */\n-static int found_error = 0;\n-\n-#ifdef JNI_DEFAULT\n-#define TOOLNAME \"gjnih\"\n-\n-/* Nonzero if we're generating JNI output.  */\n-int flag_jni = 1;\n-#else\n-#define TOOLNAME \"gcjh\"\n-\n-int flag_jni = 0;\n-#endif\n-\n-/* When nonzero, warn when source file is newer than matching class\n-   file.  */\n-int flag_newer = 1;\n-\n-/* Directory to place resulting files in. Set by -d option. */\n-static const char *output_directory = \"\";\n-\n-/* Directory to place temporary file.  Set by -td option.  Currently unused. */\n-static const char *temp_directory = \"/tmp\";\n-\n-/* Number of friend functions we have to declare.  */\n-static int friend_count;\n-\n-/* A class can optionally have a `friend' function declared.  If\n-   non-NULL, this is that function.  */\n-static char **friend_specs = NULL;\n-\n-/* Number of lines we are prepending before the class.  */\n-static int prepend_count;\n-\n-/* We can prepend extra lines before the class's start. */\n-static char **prepend_specs = NULL;\n-\n-/* Number of lines we are appending at the end of the class.  */\n-static int add_count;\n-\n-/* We can append extra lines just before the class's end. */\n-static char **add_specs = NULL;\n-\n-/* Number of lines we are appending after the class.  */\n-static int append_count;\n-\n-/* We can append extra lines after the class's end. */\n-static char **append_specs = NULL;\n-\n-int verbose = 0;\n-\n-int stubs = 0;\n-\n-struct JCF *current_jcf;\n-\n-/* This holds access information for the last field we examined.  They\n-   let us generate \"private:\", \"public:\", and \"protected:\" properly.\n-   If 0 then we haven't previously examined any field.  */\n-static JCF_u2 last_access;\n-\n-/* Pass this macro the flags for a class and for a method.  It will\n-   return true if the method should be considered `final'.  */\n-#define METHOD_IS_FINAL(Class, Method) \\\n-   (((Class) & ACC_FINAL) || ((Method) & (ACC_FINAL | ACC_PRIVATE)))\n-\n-/* Pass this macro the flags for a method.  It will return true if the\n-   method is native.  */\n-#define METHOD_IS_NATIVE(Method) \\\n-   ((Method) & ACC_NATIVE)\n-\n-#define METHOD_IS_PRIVATE(Class, Method) \\\n-  (((Method) & ACC_PRIVATE) != 0)\n-\n-/* We keep a linked list of all method names we have seen.  This lets\n-   us determine if a method name and a field name are in conflict.  */\n-struct method_name\n-{\n-  unsigned char *name;\n-  int length;\n-  unsigned char *signature;\n-  int sig_length;\n-  int is_native;\n-  struct method_name *next;\n-};\n-\n-/* List of method names we've seen.  */\n-static struct method_name *method_name_list;\n-\n-static void print_field_info (FILE*, JCF*, int, int, JCF_u2);\n-static void print_mangled_classname (FILE*, JCF*, const char*, int);\n-static int  print_cxx_classname (FILE*, const char*, JCF*, int, int);\n-static void print_method_info (FILE*, JCF*, int, int, JCF_u2);\n-static void print_c_decl (FILE*, JCF*, int, int, int, const char *, int);\n-static void print_stub_or_jni (FILE*, JCF*, int, int, int, const char *, int);\n-static void print_full_cxx_name (FILE*, JCF*, int, int, int, const char *, int);\n-static void decompile_method (FILE*, JCF*, int) ATTRIBUTE_UNUSED;\n-static void add_class_decl (FILE*, JCF*, JCF_u2);\n-\n-static void print_name (FILE *, JCF *, int);\n-static void print_base_classname (FILE *, JCF *, int);\n-static int utf8_cmp (const unsigned char *, int, const char *);\n-static char *cxx_keyword_subst (const unsigned char *, int);\n-static void generate_access (FILE *, JCF_u2);\n-static int name_is_method_p (const unsigned char *, int);\n-static char *get_field_name (JCF *, int, JCF_u2);\n-static void print_field_name (FILE *, JCF *, int, JCF_u2);\n-static const unsigned char *super_class_name (JCF *, int *);\n-static void print_include (FILE *, const unsigned char *, int);\n-static int gcjh_streq (const void *p1, const void *p2);\n-static int throwable_p (const unsigned char *signature);\n-static const unsigned char *\n-  decode_signature_piece (FILE *, const unsigned char *,\n-\t\t\t  const unsigned char *, int *);\n-static void print_class_decls (FILE *, JCF *, int);\n-static void error (const char *gmsgid, ...) ATTRIBUTE_PRINTF_1;\n-static void usage (void) ATTRIBUTE_NORETURN;\n-static void help (void) ATTRIBUTE_NORETURN;\n-static void version (void) ATTRIBUTE_NORETURN;\n-static int overloaded_jni_method_exists_p (const unsigned char *, int,\n-\t\t\t\t\t   const char *, int);\n-static void jni_print_char (FILE *, int);\n-static void jni_print_float (FILE *, jfloat);\n-static void jni_print_double (FILE *, jdouble);\n-static void decompile_return_statement (FILE *, JCF *, int, int, int);\n-\n-static void handle_inner_classes (int);\n-\n-JCF_u2 current_field_name;\n-JCF_u2 current_field_value;\n-JCF_u2 current_field_signature;\n-JCF_u2 current_field_flags;\n-\n-#define HANDLE_START_FIELD(ACCESS_FLAGS, NAME, SIGNATURE, ATTRIBUTE_COUNT) \\\n-( current_field_name = (NAME), current_field_signature = (SIGNATURE), \\\n-  current_field_flags = (ACCESS_FLAGS), current_field_value = 0)\n-\n-/* We pass over fields twice.  The first time we just note the types\n-   of the fields and then the start of the methods.  Then we go back\n-   and parse the fields for real.  This is ugly.  */\n-static int field_pass;\n-/* Likewise we pass over methods twice.  The first time we generate\n-   class decl information; the second time we generate actual method\n-   decls.  */\n-static int method_pass;\n-\n-#define HANDLE_END_FIELD()\t\t\t\t\t\t      \\\n-  if (field_pass)\t\t\t\t\t\t\t      \\\n-    {\t\t\t\t\t\t\t\t\t      \\\n-      if (out && ! stubs)\t\t\t\t\t\t      \\\n-\tprint_field_info (out, jcf, current_field_name,\t\t\t      \\\n-\t\t\t  current_field_signature,\t\t\t      \\\n- \t\t\t  current_field_flags);\t\t\t\t      \\\n-    }\t\t\t\t\t\t\t\t\t      \\\n-  else if (! stubs && ! flag_jni)\t\t\t\t\t      \\\n-    add_class_decl (out, jcf, current_field_signature);\n-\n-#define HANDLE_CONSTANTVALUE(VALUEINDEX) current_field_value = (VALUEINDEX)\n-\n-static int method_declared = 0;\n-static int method_access = 0;\n-static int method_printed = 0;\n-static int method_synthetic = 0;\n-static int method_signature = 0;\n-\n-/* Set to 1 while the very first data member of a class is being handled.  */\n-static int is_first_data_member = 0;\n-\n-#define HANDLE_METHOD(ACCESS_FLAGS, NAME, SIGNATURE, ATTRIBUTE_COUNT)\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    method_synthetic = 0;\t\t\t\t\t\t\\\n-    method_printed = 0;\t\t\t\t\t\t\t\\\n-    decompiled = 0;\t\t\t\t\t\t\t\\\n-    method_signature = SIGNATURE;\t\t\t\t\t\\\n-    if (ATTRIBUTE_COUNT)\t\t\t\t\t\t\\\n-      method_synthetic = peek_attribute (jcf, ATTRIBUTE_COUNT,\t\t\\\n-\t\t\t\t  (const char *)\"Synthetic\", 9);\t\\\n-    /* If a synthetic methods have been declared, its attribute aren't\t\\\n-       worth reading (and triggering side-effects). We skip them an\t\\\n-       set ATTRIBUTE_COUNT to zero so that they'll be skipped in\t\\\n-       jcf_parse_one_method.  */\t\t\t\t\t\\\n-    if (method_synthetic)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tskip_attribute (jcf, ATTRIBUTE_COUNT);\t\t\t\t\\\n-\tATTRIBUTE_COUNT = 0;\t\t\t\t\t\t\\\n-      } \t\t\t\t\t\t\t\t\\\n-    if (method_pass && !method_synthetic)\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tif (out)\t\t\t\t\t\t\t\\\n-\t  print_method_info (out, jcf, NAME, SIGNATURE,\t\t\t\\\n-\t\t\t     ACCESS_FLAGS);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else if (!method_synthetic)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tprint_method_info (NULL, jcf, NAME, SIGNATURE,\t\t\t\\\n-\t\t\t   ACCESS_FLAGS);\t\t\t\t\\\n-\tif (! stubs && ! flag_jni)\t\t\t\t\t\\\n-\t  add_class_decl (out, jcf, SIGNATURE);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n-\n-/* Only include byte-code decompilation optimizations for ELF targets\n-   since the generated headers are only known to work with ELF weak\n-   symbol semantics. Specifically, these optimizations are known to\n-   not work on PE-COFF and possibly others.  */\n-#ifdef OBJECT_FORMAT_ELF\n-#define HANDLE_CODE_ATTRIBUTE(MAX_STACK, MAX_LOCALS, CODE_LENGTH)\t\\\n-  if (out && method_declared) decompile_method (out, jcf, CODE_LENGTH);\n-#endif\n-\n-static int decompiled = 0;\n-#define HANDLE_END_METHOD()\t\t\t\t\\\n-  if (out && method_printed && !method_synthetic) \t\\\n-    fputs (decompiled || stubs ? \"\\n\" : \";\\n\", out);\n-\n-#define HANDLE_INNERCLASSES_ATTRIBUTE(COUNT) handle_inner_classes (COUNT)\n-\n-/* We're going to need {peek,skip}_attribute, enable their definition.   */\n-#define NEED_PEEK_ATTRIBUTE\n-#define NEED_SKIP_ATTRIBUTE\n-\n-#include \"jcf-reader.c\"\n-\n-/* Print an error message and set found_error.\n-   Not really gcc-internal-format message, but as error elsewhere\n-   uses it, assume all users will use intersection between\n-   c-format and gcc-internal-format.  */\n-static void\n-error (const char *gmsgid, ...)\n-{\n-  va_list ap;\n-\n-  va_start (ap, gmsgid);\n-\n-  fprintf (stderr, TOOLNAME \": \");\n-  vfprintf (stderr, _(gmsgid), ap);\n-  va_end (ap);\n-  fprintf (stderr, \"\\n\");\n-  found_error = 1;\n-}\n-\n-/* Print a single-precision float, suitable for parsing by g++.  */\n-static void\n-jni_print_float (FILE *stream, jfloat f)\n-{\n-  /* It'd be nice to use __builtin_nan/__builtin_inf here but they don't\n-     work in data initializers.  FIXME.  */\n-  if (JFLOAT_FINITE (f))\n-    {\n-      if (flag_jni)\n-        {\n-          fputs (\" \", out);\n-          if (f.negative)\n-            putc ('-', stream);\n-          if (f.exponent)\n-            fprintf (stream, \"0x1.%.6xp%+df\",\n-                     ((unsigned int)f.mantissa) << 1,\n-                     f.exponent - JFLOAT_EXP_BIAS);\n-          else\n-            /* Exponent of 0x01 is -125; exponent of 0x00 is *also* -125,\n-               because the implicit leading 1 bit is no longer present.  */\n-            fprintf (stream, \"0x0.%.6xp%+df\",\n-                     ((unsigned int)f.mantissa) << 1,\n-                     f.exponent + 1 - JFLOAT_EXP_BIAS);\n-        }\n-    }\n-  if (! flag_jni)\n-    fputs (\";\\n\", stream);\n-}\n-\n-/* Print a double-precision float, suitable for parsing by g++.  */\n-static void\n-jni_print_double (FILE *stream, jdouble f)\n-{\n-  /* It'd be nice to use __builtin_nan/__builtin_inf here but they don't\n-     work in data initializers.  FIXME.  */\n-  if (JDOUBLE_FINITE (f))\n-    {\n-      if (flag_jni)\n-        {\n-          fputs (\" \", out);\n-          if (f.negative)\n-            putc ('-', stream);\n-          if (f.exponent)\n-            fprintf (stream, \"0x1.%.5x%.8xp%+d\",\n-                     f.mantissa0, f.mantissa1,\n-                     f.exponent - JDOUBLE_EXP_BIAS);\n-          else\n-            /* Exponent of 0x001 is -1022; exponent of 0x000 is *also* -1022,\n-               because the implicit leading 1 bit is no longer present.  */\n-            fprintf (stream, \"0x0.%.5x%.8xp%+d\",\n-                     f.mantissa0, f.mantissa1,\n-                     f.exponent + 1 - JDOUBLE_EXP_BIAS);\n-        }\n-    }\n-  fputs (flag_jni ? \"\\n\" : \";\\n\", stream);\n-}\n-\n-/* Print a character, appropriately mangled for JNI.  */\n-\n-static void\n-jni_print_char (FILE *stream, int ch)\n-{\n-  if (! flag_jni)\n-    jcf_print_char (stream, ch);\n-  else if (ch == '(' || ch == ')')\n-    {\n-      /* Ignore.  */\n-    }\n-  else if (ch == '_')\n-    fputs (\"_1\", stream);\n-  else if (ch == ';')\n-    fputs (\"_2\", stream);\n-  else if (ch == '[')\n-    fputs (\"_3\", stream);\n-  else if (ch == '/')\n-    fputs (\"_\", stream);\n-  else if (ISALNUM (ch))\n-    fputc (ch, stream);\n-  else\n-    {\n-      /* \"Unicode\" character.  */\n-      fprintf (stream, \"_0%04x\", ch);\n-    }\n-}\n-\n-/* Print a name from the class data.  If the index does not point to a\n-   string, an error results.  */\n-\n-static void\n-print_name (FILE* stream, JCF* jcf, int name_index)\n-{\n-  if (JPOOL_TAG (jcf, name_index) != CONSTANT_Utf8)\n-    {\n-      fprintf (stream, \"<not a UTF8 constant>\");\n-      found_error = 1;\n-    }\n-  else if (! flag_jni)\n-    jcf_print_utf8 (stream, JPOOL_UTF_DATA (jcf, name_index),\n-\t\t    JPOOL_UTF_LENGTH (jcf, name_index));\n-  else\n-    {\n-      /* For JNI we must correctly quote each character.  */\n-      const unsigned char *str = JPOOL_UTF_DATA (jcf, name_index);\n-      int length = JPOOL_UTF_LENGTH (jcf, name_index);\n-      const unsigned char *limit = str + length;\n-      while (str < limit)\n-\t{\n-\t  int ch = UTF8_GET (str, limit);\n-\t  if (ch < 0)\n-\t    {\n-\t      fprintf (stream, \"\\\\<invalid>\");\n-\t      return;\n-\t    }\n-\t  jni_print_char (stream, ch);\n-\t}\n-    }\n-}\n-\n-/* Print base name of class.  The base name is everything after the\n-   final separator.  */\n-\n-static void\n-print_base_classname (FILE *stream, JCF *jcf, int index)\n-{\n-  int name_index = JPOOL_USHORT1 (jcf, index);\n-  int len;\n-  const unsigned char *s, *p, *limit;\n-\n-  s = JPOOL_UTF_DATA (jcf, name_index);\n-  len = JPOOL_UTF_LENGTH (jcf, name_index);\n-  limit = s + len;\n-  p = s;\n-  while (s < limit)\n-    {\n-      int c = UTF8_GET (s, limit);\n-      if (c == '/')\n-\tp = s;\n-    }\n-\n-  while (p < limit)\n-    {\n-      int ch = UTF8_GET (p, limit);\n-      if (ch == '/')\n-\tfputs (\"::\", stream);\n-      else\n-\tjcf_print_char (stream, ch);\n-    }\n-}\n-\n-/* Return 0 if NAME is equal to STR, -1 if STR is \"less\" than NAME,\n-   and 1 if STR is \"greater\" than NAME.  */\n-\n-static int\n-utf8_cmp (const unsigned char *str, int length, const char *name)\n-{\n-  const unsigned char *limit = str + length;\n-  int i;\n-\n-  for (i = 0; name[i]; ++i)\n-    {\n-      int ch = UTF8_GET (str, limit);\n-      if (ch != name[i])\n-\treturn ch - name[i];\n-    }\n-\n-  return str == limit ? 0 : 1;\n-}\n-\n-/* This is a sorted list of all C++ keywords.  */\n-\n-static const char *const cxx_keywords[] =\n-{\n-  \"_Complex\",\n-  \"__alignof\",\n-  \"__alignof__\",\n-  \"__asm\",\n-  \"__asm__\",\n-  \"__attribute\",\n-  \"__attribute__\",\n-  \"__builtin_va_arg\",\n-  \"__complex\",\n-  \"__complex__\",\n-  \"__const\",\n-  \"__const__\",\n-  \"__extension__\",\n-  \"__imag\",\n-  \"__imag__\",\n-  \"__inline\",\n-  \"__inline__\",\n-  \"__label__\",\n-  \"__null\",\n-  \"__real\",\n-  \"__real__\",\n-  \"__restrict\",\n-  \"__restrict__\",\n-  \"__signed\",\n-  \"__signed__\",\n-  \"__typeof\",\n-  \"__typeof__\",\n-  \"__volatile\",\n-  \"__volatile__\",\n-  \"and\",\n-  \"and_eq\",\n-  \"asm\",\n-  \"auto\",\n-  \"bitand\",\n-  \"bitor\",\n-  \"bool\",\n-  \"break\",\n-  \"case\",\n-  \"catch\",\n-  \"char\",\n-  \"class\",\n-  \"compl\",\n-  \"const\",\n-  \"const_cast\",\n-  \"continue\",\n-  \"default\",\n-  \"delete\",\n-  \"do\",\n-  \"double\",\n-  \"dynamic_cast\",\n-  \"else\",\n-  \"enum\",\n-  \"explicit\",\n-  \"export\",\n-  \"extern\",\n-  \"false\",\n-  \"float\",\n-  \"for\",\n-  \"friend\",\n-  \"goto\",\n-  \"if\",\n-  \"inline\",\n-  \"int\",\n-  \"long\",\n-  \"mutable\",\n-  \"namespace\",\n-  \"new\",\n-  \"not\",\n-  \"not_eq\",\n-  \"operator\",\n-  \"or\",\n-  \"or_eq\",\n-  \"private\",\n-  \"protected\",\n-  \"public\",\n-  \"register\",\n-  \"reinterpret_cast\",\n-  \"return\",\n-  \"short\",\n-  \"signed\",\n-  \"sizeof\",\n-  \"static\",\n-  \"static_cast\",\n-  \"struct\",\n-  \"switch\",\n-  \"template\",\n-  \"this\",      \n-  \"throw\",\n-  \"true\",\n-  \"try\",\n-  \"typedef\",\n-  \"typeid\",\n-  \"typename\",\n-  \"typeof\",\n-  \"union\",\n-  \"unsigned\",\n-  \"using\",\n-  \"virtual\",\n-  \"void\",\n-  \"volatile\",\n-  \"wchar_t\",\n-  \"while\",\n-  \"xor\",\n-  \"xor_eq\"\n-};\n-\n-\n-/* If NAME is the name of a C++ keyword, then return an override name.\n-   This is a name that can be used in place of the keyword.\n-   Otherwise, return NULL.  The return value is malloc()d.  */\n-\n-static char *\n-cxx_keyword_subst (const unsigned char *str, int length)\n-{\n-  int last = ARRAY_SIZE (cxx_keywords);\n-  int first = 0;\n-  int mid = (last + first) / 2;\n-  int old = -1;\n-\n-  for (mid = (last + first) / 2;\n-       mid != old;\n-       old = mid, mid = (last + first) / 2)\n-    {\n-      int kwl = strlen (cxx_keywords[mid]);\n-      int min_length = kwl > length ? length : kwl;\n-      int r = utf8_cmp (str, min_length, cxx_keywords[mid]);\n-\n-      if (r == 0)\n-\t{\n-\t  int i;\n-\n-\t  /* Skip all trailing `$'.  */\n-\t  for (i = min_length; i < length && str[i] == '$'; ++i)\n-\t    ;\n-\t  /* We've only found a match if all the remaining characters\n-\t     are `$'.  */\n-\t  if (i == length)\n-\t    {\n-\t      char *dup = XNEWVEC (char, 2 + length - min_length + kwl);\n-\t      strcpy (dup, cxx_keywords[mid]);\n-\t      for (i = kwl; i < length + 1; ++i)\n-\t\tdup[i] = '$';\n-\t      dup[i] = '\\0';\n-\t      return dup;\n-\t    }\n-\t  r = 1;\n-\t}\n-\t\n-      if (r < 0)\n-\tlast = mid;\n-      else\n-\tfirst = mid;\n-    }\n-  return NULL;\n-}\n-\n-/* Generate an access control keyword based on FLAGS.  */\n-\n-static void\n-generate_access (FILE *stream, JCF_u2 flags)\n-{\n-  if ((flags & ACC_VISIBILITY) == last_access)\n-    return;\n-  last_access = (flags & ACC_VISIBILITY);\n-\n-  switch (last_access)\n-    {\n-    case 0:\n-      fputs (\"public: // actually package-private\\n\", stream);\n-      break;\n-    case ACC_PUBLIC:\n-      fputs (\"public:\\n\", stream);\n-      break;\n-    case ACC_PRIVATE:\n-      fputs (\"private:\\n\", stream);\n-      break;\n-    case ACC_PROTECTED:\n-      fputs (\"public:  // actually protected\\n\", stream);\n-      break;\n-    default:\n-      found_error = 1;\n-      fprintf (stream, \"#error unrecognized visibility %d\\n\",\n-\t       (flags & ACC_VISIBILITY));\n-      break;\n-    }\n-}\n-\n-/* See if NAME is already the name of a method.  */\n-static int\n-name_is_method_p (const unsigned char *name, int length)\n-{\n-  struct method_name *p;\n-\n-  for (p = method_name_list; p != NULL; p = p->next)\n-    {\n-      if (p->length == length && ! memcmp (p->name, name, length))\n-\treturn 1;\n-    }\n-  return 0;\n-}\n-\n-/* Free the method name list.  */\n-static void\n-free_method_name_list (void)\n-{\n-  struct method_name *p = method_name_list;\n-  while (p != NULL)\n-    {\n-      struct method_name *next = p->next;\n-      free (p->name);\n-      free (p->signature);\n-      free (p);\n-      p = next;\n-    }\n-  method_name_list = NULL;\n-}\n-\n-/* If there is already a native method named NAME, whose signature is not\n-   SIGNATURE, then return true.  Otherwise return false.  */\n-static int\n-overloaded_jni_method_exists_p (const unsigned char *name, int length,\n-\t\t\t\tconst char *signature, int sig_length)\n-{\n-  struct method_name *p;\n-\n-  for (p = method_name_list; p != NULL; p = p->next)\n-    {\n-      if (p->is_native\n-          && p->length == length\n-\t  && ! memcmp (p->name, name, length)\n-\t  && (p->sig_length != sig_length\n-\t      || memcmp (p->signature, signature, sig_length)))\n-\treturn 1;\n-    }\n-  return 0;\n-}\n-\n-/* Get name of a field.  This handles renamings due to C++ clash.  */\n-static char *\n-get_field_name (JCF *jcf, int name_index, JCF_u2 flags)\n-{\n-  unsigned char *name = JPOOL_UTF_DATA (jcf, name_index);\n-  int length = JPOOL_UTF_LENGTH (jcf, name_index);\n-  char *override;\n-\n-  if (name_is_method_p (name, length))\n-    {\n-      /* This field name matches a method.  So override the name with\n-\t a dummy name.  This is yucky, but it isn't clear what else to\n-\t do.  FIXME: if the field is static, then we'll be in real\n-\t trouble.  */\n-      if ((flags & ACC_STATIC))\n-\t{\n-\t  error (\"static field has same name as method\");\n-\t  return NULL;\n-\t}\n-\n-      override = XNEWVEC (char, length + 3);\n-      memcpy (override, name, length);\n-      strcpy (override + length, \"__\");\n-    }\n-  else if (flag_jni)\n-    override = NULL;\n-  else\n-    override = cxx_keyword_subst (name, length);\n-\n-  return override;\n-}\n-\n-/* Print a field name.  Convenience function for use with\n-   get_field_name.  */\n-static void\n-print_field_name (FILE *stream, JCF *jcf, int name_index, JCF_u2 flags)\n-{\n-  char *override = get_field_name (jcf, name_index, flags);\n-\n-  if (override)\n-    {\n-      fputs (override, stream);\n-      free (override);\n-    }\n-  else\n-    jcf_print_utf8 (stream, JPOOL_UTF_DATA (jcf, name_index),\n-\t\t    JPOOL_UTF_LENGTH (jcf, name_index));\n-}\n-\n-static void\n-print_field_info (FILE *stream, JCF* jcf, int name_index, int sig_index,\n-\t\t  JCF_u2 flags)\n-{\n-  char *override = NULL;\n-\n-  if (! flag_jni)\n-    generate_access (stream, flags);\n-  if (JPOOL_TAG (jcf, name_index) != CONSTANT_Utf8)\n-    {\n-      fprintf (stream, \"<not a UTF8 constant>\");\n-      found_error = 1;\n-      return;\n-    }\n-\n-  if (flag_jni)\n-    {\n-      /* For JNI we only want to print real constants.  */\n-      int val;\n-      if (! (flags & ACC_STATIC)\n-\t  || ! (flags & ACC_FINAL)\n-\t  || current_field_value <= 0)\n-\treturn;\n-      val = JPOOL_TAG (jcf, current_field_value);\n-      if (val != CONSTANT_Integer && val != CONSTANT_Long\n-\t  && val != CONSTANT_Float && val != CONSTANT_Double)\n-\treturn;\n-    }\n-  else\n-    {\n-      /* Initial indentation.  */\n-      fputs (\"  \", stream);\n-    }\n-\n-  if ((flags & ACC_STATIC))\n-    {\n-      if (flag_jni)\n-\t{\n-\t  print_cxx_classname (stream, \"#undef \", jcf, jcf->this_class, 1);\n-\t  fputs (\"_\", stream);\n-\t  print_field_name (stream, jcf, name_index, 0);\n-\t  fputs (\"\\n\", stream);\n-\t  print_cxx_classname (stream, \"#define \", jcf, jcf->this_class, 1);\n-\t  fputs (\"_\", stream);\n-\t}\n-      else\n-\tfputs (\"static \", stream);\n-\n-      if ((flags & ACC_FINAL) && current_field_value > 0)\n-\t{\n-\t  char buffer[25];\n-\t  int done = 1;\n-\n-\t  switch (JPOOL_TAG (jcf, current_field_value))\n-\t    {\n-\t    case CONSTANT_Integer:\n-\t      {\n-\t\tjint num;\n-\t\tint most_negative = 0;\n-\t\tif (! flag_jni)\n-\t\t  fputs (\"const jint \", stream);\n-\t\tprint_field_name (stream, jcf, name_index, 0);\n-\t\tfputs (flag_jni ? \" \" : \" = \", stream);\n-\t\tnum = JPOOL_INT (jcf, current_field_value);\n-\t\t/* We single out the most negative number to print\n-\t\t   specially.  This avoids later warnings from g++.  */\n-\t\tif (num == (jint) 0x80000000)\n-\t\t  {\n-\t\t    most_negative = 1;\n-\t\t    ++num;\n-\t\t  }\n-\t\tformat_int (buffer, (jlong) num, 10);\n-\t\tfprintf (stream, \"%sL%s%s\\n\", buffer,\n-\t\t\t most_negative ? \" - 1\" : \"\",\n-\t\t\t flag_jni ? \"\" : \";\");\n-\t      }\n-\t      break;\n-\t    case CONSTANT_Long:\n-\t      {\n-\t\tjlong num;\n-\t\tint most_negative = 0;\n-\t\tif (! flag_jni)\n-\t\t  fputs (\"const jlong \", stream);\n-\t\tprint_field_name (stream, jcf, name_index, 0);\n-\t\tfputs (flag_jni ? \" \" : \" = \", stream);\n-\t\tnum = JPOOL_LONG (jcf, current_field_value);\n-\t\t/* We single out the most negative number to print\n-                   specially..  This avoids later warnings from g++.  */\n-\t\tif (num == (jlong) 0x8000000000000000LL)\n-\t\t  {\n-\t\t    most_negative = 1;\n-\t\t    ++num;\n-\t\t  }\n-\t\tformat_int (buffer, num, 10);\n-\t\tfprintf (stream, \"%sLL%s%s\\n\", buffer,\n-\t\t\t most_negative ? \" - 1\" :\"\",\n-\t\t\t flag_jni ? \"\" : \";\");\n-\t      }\n-\t      break;\n-\t    case CONSTANT_Float:\n-\t      {\n-\t\tjfloat fnum = JPOOL_FLOAT (jcf, current_field_value);\n-\t\tif (! flag_jni)\n-\t\t  fputs (\"const jfloat \", stream);\n-\t\tprint_field_name (stream, jcf, name_index, 0);\n-\t\tjni_print_float (stream, fnum);\n-\t      }\n-\t      break;\n-\t    case CONSTANT_Double:\n-\t      {\n-\t\tjdouble dnum = JPOOL_DOUBLE (jcf, current_field_value);\n-\t\tif (! flag_jni)\n-\t\t  fputs (\"const jdouble \", stream);\n-\t\tprint_field_name (stream, jcf, name_index, 0);\n-\t\tjni_print_double (stream, dnum);\n-\t      }\n-\t      break;\n-\t    default:\n- \t      /* We can't print this as a constant, but we can still\n- \t\t print something sensible.  */\n- \t      done = 0;\n- \t      break;\n-\t    }\n-\n-\t  if (done)\n-\t    return;\n-\t}\n-    }\n-\n-  /* assert (! flag_jni);  */\n-  override = get_field_name (jcf, name_index, flags);\n-  print_c_decl (stream, jcf, name_index, sig_index, 0, override, flags);\n-  fputs (\";\\n\", stream);\n-\n-  if (override)\n-    free (override);\n-}\n-\n-\n-static void\n-print_method_info (FILE *stream, JCF* jcf, int name_index, int sig_index,\n-\t\t   JCF_u2 flags)\n-{\n-  const unsigned char *str;\n-  int length, is_init = 0;\n-  char *override = NULL;\n-\n-  method_declared = 0;\n-  method_access = flags;\n-  if (stream && JPOOL_TAG (jcf, name_index) != CONSTANT_Utf8)\n-    fprintf (stream, \"<not a UTF8 constant>\");\n-  str = JPOOL_UTF_DATA (jcf, name_index);\n-  length = JPOOL_UTF_LENGTH (jcf, name_index);\n-\n-  if (str[0] == '<')\n-    {\n-      /* Ignore the internally generated method <clinit>. However,\n-         treat <init> as a constructor.  */\n-      if (! utf8_cmp (str, length, \"<init>\"))\n-\tis_init = 1;\n-      else if (! METHOD_IS_FINAL (jcf->access_flags, flags)\n-\t       && ! (flags & ACC_STATIC))\n-\t{\n-\t  /* FIXME: i18n bug here.  Order of prints should not be\n-\t     fixed.  */\n-\t  fprintf (stderr, _(\"ignored method '\"));\n-\t  jcf_print_utf8 (stderr, str, length);\n-\t  fprintf (stderr, _(\"' marked virtual\\n\"));\n-\t  found_error = 1;\n-\t  return;\n-\t}\n-      else\n-\treturn;\n-    }\n-\n-  /* During the first method pass, build a list of method names. This will\n-  be used to determine if field names conflict with method names. */\n-  if (! stream)\n-    {\n-      struct method_name *nn;\n-\n-      nn = XNEW (struct method_name);\n-      nn->name = XNEWVEC (unsigned char, length);\n-      memcpy (nn->name, str, length);\n-      nn->length = length;\n-      nn->next = method_name_list;\n-      nn->sig_length = JPOOL_UTF_LENGTH (jcf, sig_index);\n-      nn->signature = XNEWVEC (unsigned char, nn->sig_length);\n-      nn->is_native = METHOD_IS_NATIVE (flags);\n-      memcpy (nn->signature, JPOOL_UTF_DATA (jcf, sig_index),\n-\t      nn->sig_length);\n-      method_name_list = nn;\n-      \n-      /* The rest of this function doesn't matter. */\n-      return;\n-    }\n-\n-  /* We don't worry about overrides in JNI mode.  */\n-  if (! flag_jni)\n-    {\n-      /* We can't generate a method whose name is a C++ reserved word.\n-\t We can't just ignore the function, because that will cause\n-\t incorrect code to be generated if the function is virtual\n-\t (not only for calls to this function for for other functions\n-\t after it in the vtbl).  So we give it a dummy name instead.  */\n-      override = cxx_keyword_subst (str, length);\n-    }\n-\n-  if (! stubs && ! flag_jni)\n-    {\n-      method_printed = 1;\n-\n-      generate_access (stream, flags);\n-      \n-      fputs (\"  \", out);\n-      if ((flags & ACC_STATIC))\n-\tfputs (\"static \", out);\n-      else if (! METHOD_IS_PRIVATE (jcf->access_flags, flags))\n-\t{\n-\t  /* Don't print `virtual' if we have a constructor.  */\n-\t  if (! is_init)\n-\t    fputs (\"virtual \", out);\n-\t}\n-      print_c_decl (out, jcf, name_index, sig_index, is_init, override, flags);\n-      \n-      if ((flags & ACC_ABSTRACT))\n-\tfputs (\" = 0\", out);\n-      else\n-\tmethod_declared = 1;\n-    }\n-  else\n-    {\n-      if (METHOD_IS_NATIVE (flags)) \n-\t{\n-\t  method_printed = 1;\n-\t  print_stub_or_jni (out, jcf, name_index, sig_index,\n-\t\t\t     is_init, override, flags);\n-\t}\n-    }\n-\n-  if (override)\n-    free (override);\n-}\n-\n-/* A helper for the decompiler which prints a `return' statement where\n-   the type is a reference type.  If METHODTYPE and OBJECTTYPE are not\n-   identical, we emit a cast.  We do this because the C++ compiler\n-   doesn't know that a reference can be cast to the type of an\n-   interface it implements.  METHODTYPE is the index of the method's\n-   signature.  NAMEINDEX is the index of the field name; -1 for\n-   `this'.  OBJECTTYPE is the index of the object's type.  */\n-static void\n-decompile_return_statement (FILE *out, JCF *jcf, int methodtype,\n-\t\t\t    int nameindex, int objecttype)\n-{\n-  int cast = 0;\n-  int obj_name_len, method_name_len;\n-  const unsigned char *obj_data, *method_data;\n-\n-  obj_name_len = JPOOL_UTF_LENGTH (jcf, objecttype);\n-  obj_data = JPOOL_UTF_DATA (jcf, objecttype);\n-\n-  method_name_len = JPOOL_UTF_LENGTH (jcf, methodtype);\n-  method_data = JPOOL_UTF_DATA (jcf, methodtype);\n-\n-  /* Skip forward to return type part of method.  */\n-  while (*method_data != ')')\n-    {\n-      ++method_data;\n-      --method_name_len;\n-    }\n-  /* Skip past `)'.  */\n-  ++method_data;\n-  --method_name_len;\n-\n-  /* If we see an `L', skip it and the trailing `;'.  */\n-  if (method_data[0] == 'L' && method_data[method_name_len - 1] == ';')\n-    {\n-      ++method_data;\n-      method_name_len -= 2;\n-    }\n-  if (obj_data[0] == 'L' && obj_data[obj_name_len - 1] == ';')\n-    {\n-      ++obj_data;\n-      obj_name_len -= 2;\n-    }\n-\n-  /* FIXME: if METHODTYPE is a superclass of OBJECTTYPE then we don't\n-     need a cast.  Right now there is no way to determine if this is\n-     the case.  */\n-  if (method_name_len != obj_name_len)\n-    cast = 1;\n-  else\n-    {\n-      int i;\n-      for (i = 0; i < method_name_len; ++i)\n-\t{\n-\t  if (method_data[i] != obj_data[i])\n-\t    {\n-\t      cast = 1;\n-\t      break;\n-\t    }\n-\t}\n-    }\n-\n-  fputs (\" { return \", out);\n-\n-  if (cast)\n-    {\n-      int array_depth = 0;\n-      const unsigned char *limit;\n-\n-      fputs (\"reinterpret_cast<\", out);\n-\n-      while (*method_data == '[')\n-\t{\n-\t  ++method_data;\n-\t  ++array_depth;\n-\t  --method_name_len;\n-\t  fputs (\"JArray<\", out);\n-\t}\n-\n-      /* Leading space to avoid C++ digraphs.  */\n-      fputs (\" ::\", out);\n-\n-      /* If we see an `L', skip it and the trailing `;'.  Only do this\n-\t if we've seen an array specification.  If we don't have an\n-\t array then the `L' was stripped earlier.  */\n-      if (array_depth && method_data[0] == 'L'\n-\t  && method_data[method_name_len - 1] == ';')\n-\t{\n-\t  ++method_data;\n-\t  method_name_len -= 2;\n-\t}\n-\n-      limit = method_data + method_name_len;\n-      while (method_data < limit)\n-\t{\n-\t  int ch = UTF8_GET (method_data, limit);\n-\t  if (ch == '/')\n-\t    fputs (\"::\", out);\n-\t  else\n-\t    jcf_print_char (out, ch);\n-\t}\n-      fputs (\" *\", out);\n-\n-      /* Close each array.  */\n-      while (array_depth > 0)\n-\t{\n-\t  fputs (\"> *\", out);\n-\t  --array_depth;\n-\t}\n-\n-      /* Close the cast.  */\n-      fputs (\"> (\", out);\n-    }\n-\n-  if (nameindex == -1)\n-    fputs (\"this\", out);\n-  else\n-    print_field_name (out, jcf, nameindex, 0);\n-\n-  if (cast)\n-    fputs (\")\", out);\n-\n-  fputs (\"; }\", out);\n-}\n-\n-\n-/* Try to decompile a method body.  Right now we just try to handle a\n-   simple case that we can do.  Expand as desired.  */\n-static void\n-decompile_method (FILE *out, JCF *jcf, int code_len)\n-{\n-  const unsigned char *codes = jcf->read_ptr;\n-  int index;\n-  uint16 name_and_type, name;\n-\n-  /* If the method is synchronized, don't touch it.  */\n-  if ((method_access & ACC_SYNCHRONIZED))\n-    return;\n-\n-  if (code_len == 5\n-      && codes[0] == OPCODE_aload_0\n-      && codes[1] == OPCODE_getfield\n-      && (codes[4] == OPCODE_areturn\n-\t  || codes[4] == OPCODE_dreturn\n-\t  || codes[4] == OPCODE_freturn\n-\t  || codes[4] == OPCODE_ireturn\n-\t  || codes[4] == OPCODE_lreturn))\n-    {\n-      /* Found code like `return FIELD'.  */\n-      index = (codes[2] << 8) | codes[3];\n-      /* FIXME: ensure that tag is CONSTANT_Fieldref.  */\n-      name_and_type = JPOOL_USHORT2 (jcf, index);\n-      /* FIXME: ensure that tag is CONSTANT_NameAndType.  */\n-      name = JPOOL_USHORT1 (jcf, name_and_type);\n-      if (codes[4] == OPCODE_areturn)\n-\tdecompile_return_statement (out, jcf, method_signature,\n-\t\t\t\t    name, JPOOL_USHORT2 (jcf, name_and_type));\n-      else\n-\t{\n-\t  fputs (\" { return \", out);\n-\t  /* FIXME: flags.  */\n-\t  print_field_name (out, jcf, name, 0);\n-\t  fputs (\"; }\", out);\n-\t}\n-      decompiled = 1;\n-    }\n-  else if (code_len == 2\n-\t   && codes[0] == OPCODE_aload_0\n-\t   && codes[1] == OPCODE_areturn\n-\t   /* We're going to generate `return this'.  This only makes\n-\t      sense for non-static methods.  */\n-\t   && ! (method_access & ACC_STATIC))\n-    {\n-      decompile_return_statement (out, jcf, method_signature, -1,\n-\t\t\t\t  JPOOL_USHORT1 (jcf, jcf->this_class));\n-      decompiled = 1;\n-    }\n-  else if (code_len == 1 && codes[0] == OPCODE_return)\n-    {\n-      /* Found plain `return'.  */\n-      fputs (\" { }\", out);\n-      decompiled = 1;\n-    }\n-  else if (code_len == 2\n-\t   && codes[0] == OPCODE_aconst_null\n-\t   && codes[1] == OPCODE_areturn)\n-    {\n-      /* Found `return null'.  We don't want to depend on NULL being\n-\t defined.  */\n-      fputs (\" { return 0; }\", out);\n-      decompiled = 1;\n-    }\n-}\n-\n-/* Like strcmp, but invert the return result for the hash table.  This\n-   should probably be in hashtab.c to complement the existing string\n-   hash function.  */\n-static int\n-gcjh_streq (const void *p1, const void *p2)\n-{\n-  return ! strcmp ((char *) p1, (char *) p2);\n-}\n-\n-/* Return 1 if the initial part of CLNAME names a subclass of throwable, \n-   or 0 if not.  CLNAME may be extracted from a signature, and can be \n-   terminated with either `;' or NULL.  */\n-static int\n-throwable_p (const unsigned char *clname)\n-{\n-  int length;\n-  unsigned char *current;\n-  int i;\n-  int result = 0;\n-\n-  /* We keep two hash tables of class names.  In one we list all the\n-     classes which are subclasses of Throwable.  In the other we will\n-     all other classes.  We keep two tables to make the code a bit\n-     simpler; we don't have to have a structure mapping class name to\n-     a `throwable?' bit.  */\n-  static htab_t throw_hash;\n-  static htab_t non_throw_hash;\n-  static int init_done = 0;\n-\n-  if (! init_done)\n-    {\n-      void **slot;\n-      unsigned char *str;\n-\n-      /* Self-initializing.  The cost of this really doesn't matter.\n-\t We also don't care about freeing these, either.  */\n-      throw_hash = htab_create (10, htab_hash_string, gcjh_streq,\n-\t\t\t\t(htab_del) free);\n-      non_throw_hash = htab_create (10, htab_hash_string, gcjh_streq,\n-\t\t\t\t    (htab_del) free);\n-\n-      /* Make sure the root classes show up in the tables.  */\n-      str = (unsigned char *) xstrdup (\"java.lang.Throwable\");\n-      slot = htab_find_slot (throw_hash, str, INSERT);\n-      *slot = str;\n-\n-      str = (unsigned char *) xstrdup (\"java.lang.Object\");\n-      slot = htab_find_slot (non_throw_hash, str, INSERT);\n-      *slot = str;\n-\n-      init_done = 1;\n-    }\n-\n-  for (length = 0; clname[length] != ';' && clname[length] != '\\0'; ++length)\n-    ;\n-  current = XNEWVEC (unsigned char, length + 1);\n-  for (i = 0; i < length; ++i)\n-    current[i] = clname[i] == '/' ? '.' : clname[i];\n-  current[length] = '\\0';\n-\n-  /* We don't compute the hash slot here because the table might be\n-     modified by the recursion.  In that case the slot could be\n-     invalidated.  */\n-  if (htab_find (throw_hash, current))\n-    result = 1;\n-  else if (htab_find (non_throw_hash, current))\n-    result = 0;\n-  else\n-    {\n-      JCF jcf;\n-      void **slot;\n-      unsigned char *super, *tmp;\n-      int super_length = -1;\n-      const char *classfile_name = find_class ((char *) current, strlen ((const char *) current),\n-\t\t\t\t\t       &jcf, 0);\n-\n-      if (! classfile_name)\n-\t{\n-\t  error (\"couldn't find class %s\", current);\n-\t  return 0;\n-\t}\n-      if (jcf_parse_preamble (&jcf) != 0\n-\t  || jcf_parse_constant_pool (&jcf) != 0\n-\t  || verify_constant_pool (&jcf) > 0)\n-\t{\n-\t  error (\"parse error while reading %s\", classfile_name);\n-\t  return 0;\n-\t}\n-      jcf_parse_class (&jcf);\n-\n-      tmp = (unsigned char *) super_class_name (&jcf, &super_length);\n-      super = XNEWVEC (unsigned char, super_length + 1);\n-      memcpy (super, tmp, super_length);      \n-      super[super_length] = '\\0';\n-\n-      result = throwable_p (super);\n-      slot = htab_find_slot (result ? throw_hash : non_throw_hash,\n-\t\t\t     current, INSERT);\n-      *slot = current;\n-      current = NULL;\n-\n-      JCF_FINISH (&jcf);\n-    }\n-\n-  return result;\n-}\n-\n-/* Print one piece of a signature.  Returns pointer to next parseable\n-   character on success, NULL on error.  */\n-static const unsigned char *\n-decode_signature_piece (FILE *stream, const unsigned char *signature,\n-\t\t\tconst unsigned char *limit, int *need_space)\n-{\n-  const char *ctype;\n-  int array_depth = 0;\n-\n-  switch (signature[0])\n-    {\n-    case '[':\n-      /* More spaghetti.  */\n-\n-    array_loop:\n-      for (signature++; (signature < limit\n-\t\t\t && ISDIGIT (*signature)); signature++)\n-\t;\n-      switch (*signature)\n-\t{\n-\tcase 'B':\n-\t  ctype = \"jbyteArray\";\n-\t  break;\n-\tcase 'C':\n-\t  ctype = \"jcharArray\";\n-\t  break;\n-\tcase 'D':\n-\t  ctype = \"jdoubleArray\";\n-\t  break;\n-\tcase 'F':\n-\t  ctype = \"jfloatArray\";\n-\t  break;\n-\tcase 'I':\n-\t  ctype = \"jintArray\";\n-\t  break;\n-\tcase 'S':\n-\t  ctype = \"jshortArray\";\n-\t  break;\n-\tcase 'J':\n-\t  ctype = \"jlongArray\";\n-\t  break;\n-\tcase 'Z':\n-\t  ctype = \"jbooleanArray\";\n-\t  break;\n-\tcase '[':\n-\t  /* We have a nested array.  */\n-\t  ++array_depth;\n-\t  if (! flag_jni)\n-\t    fputs (\"JArray<\", stream);\n-\t  goto array_loop;\n-\n-\tcase 'L':\n-\t  /* We have to generate a reference to JArray here, so that\n-\t     our output matches what the compiler does.  */\n-\t  ++signature;\n-\t  /* Space between `<' and `:' to avoid C++ digraphs.  */\n-\t  if (! flag_jni)\n-\t    fputs (\"JArray< ::\", stream);\n-\t  while (signature < limit && *signature != ';')\n-\t    {\n-\t      int ch = UTF8_GET (signature, limit);\n-\t      if (! flag_jni)\n-\t\t{\n-\t\t  if (ch == '/')\n-\t\t    fputs (\"::\", stream);\n-\t\t  else\n-\t\t    jcf_print_char (stream, ch);\n-\t\t}\n-\t    }\n-\t  if (! flag_jni)\n-\t    fputs (\" *> *\", stream);\n-\t  *need_space = 0;\n-\t  ctype = NULL;\n-\t  break;\n-\tdefault:\n-\t  /* Unparseable signature.  */\n-\t  return NULL;\n-\t}\n-\n-      /* If the previous iterations left us with something to print,\n-\t print it.  For JNI, we always print `jobjectArray' in the\n-\t nested cases.  */\n-      if (flag_jni && (ctype == NULL || array_depth > 0))\n-\t{\n-\t  ctype = \"jobjectArray\";\n-\t  *need_space = 1;\n-\t}\n-      /* The `printit' case will advance SIGNATURE for us.  If we\n-\t don't go there, we must advance past the `;' ourselves.  */\n-      if (ctype != NULL)\n-\tgoto printit;\n-      ++signature;\n-      break;\n-\n-    case '(':\n-    case ')':\n-      /* This shouldn't happen.  */\n-      return NULL;\n-\n-    case 'B': ctype = \"jbyte\";  goto printit;\n-    case 'C': ctype = \"jchar\";  goto printit;\n-    case 'D': ctype = \"jdouble\";  goto printit;\n-    case 'F': ctype = \"jfloat\";  goto printit;\n-    case 'I': ctype = \"jint\";  goto printit;\n-    case 'J': ctype = \"jlong\";  goto printit;\n-    case 'S': ctype = \"jshort\";  goto printit;\n-    case 'Z': ctype = \"jboolean\";  goto printit;\n-    case 'V': ctype = \"void\";  goto printit;\n-    case 'L':\n-      if (flag_jni)\n-\t{\n-\t  /* We know about certain types and special-case their names.  */\n-\t  if (! strncmp ((const char *) signature, \"Ljava/lang/String;\",\n-\t\t\t sizeof (\"Ljava/lang/String;\") -1))\n-\t    ctype = \"jstring\";\n-\t  else if (! strncmp ((const char *) signature, \"Ljava/lang/Class;\",\n-\t\t\t      sizeof (\"Ljava/lang/Class;\") - 1))\n-\t    ctype = \"jclass\";\n-\t  /* Skip leading 'L' for throwable_p call.  */\n-\t  else if (throwable_p (signature + 1))\n-\t    ctype = \"jthrowable\";\n-\t  else\n-\t    ctype = \"jobject\";\n-\n-\t  while (*signature && *signature != ';')\n-\t    ++signature;\n-\n-\t  goto printit;\n-\t}\n-      /* Print a leading \"::\" so we look in the right namespace.  */\n-      fputs (\"::\", stream);\n-      ++signature;\n-      while (*signature && *signature != ';')\n-\t{\n-\t  int ch = UTF8_GET (signature, limit);\n-\t  if (ch == '/')\n-\t    fputs (\"::\", stream);\n-\t  else\n-\t    jcf_print_char (stream, ch);\n-\t}\n-      fputs (\" *\", stream);\n-      if (*signature == ';')\n-\tsignature++;\n-      *need_space = 0;\n-      break;\n-    default:\n-      *need_space = 1;\n-      jni_print_char (stream, *signature++);\n-      break;\n-    printit:\n-      signature++;\n-      *need_space = 1;\n-      fputs (ctype, stream);\n-      break;\n-    }\n-\n-  if (! flag_jni)\n-    {\n-      while (array_depth-- > 0)\n-\tfputs (\"> *\", stream);\n-    }\n-\n-  return signature;\n-}\n-\n-static void\n-print_c_decl (FILE* stream, JCF* jcf, int name_index, int signature_index,\n-\t      int is_init, const char *name_override, int flags)\n-{\n-  if (JPOOL_TAG (jcf, signature_index) != CONSTANT_Utf8)\n-    {\n-      fprintf (stream, \"<not a UTF8 constant>\");\n-      found_error = 1;\n-    }\n-  else\n-    {\n-      int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n-      const unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n-      const unsigned char *str = str0;\n-      const unsigned char *limit = str + length;\n-      int need_space = 0;\n-      int is_method = str[0] == '(';\n-      const unsigned char *next;\n-\n-      /* If printing a method, skip to the return signature and print\n-\t that first.  However, there is no return value if this is a\n-\t constructor.  */\n-      if (is_method && ! is_init)\n-\t{\n-\t  while (str < limit)\n-\t    {\n-\t      int ch = *str++;\n-\t      if (ch == ')')\n-\t\tbreak;\n-\t    }\n-\t}\n-\n-      /* If printing a field or an ordinary method, then print the\n-\t \"return value\" now.  */\n-      if (! is_method || ! is_init)\n-\t{\n-\t  next = decode_signature_piece (stream, str, limit, &need_space);\n-\t  if (! next)\n-\t    {\n-\t      error (\"unparseable signature: '%s'\", str0);\n-\t      return;\n-\t    }\n-\t}\n-\n-      /* Force the alignment of the first data member.  This is\n-\t because the \"new\" C++ ABI changed the alignment of non-POD\n-\t classes.  gcj, however, still uses the \"old\" alignment.  */\n-      if (is_first_data_member && ! (flags & ACC_STATIC) && ! is_method)\n-\t{\n-\t  is_first_data_member = 0;\n-\t  print_cxx_classname (out, \" __attribute__((aligned(__alignof__( \",\n-\t\t\t       jcf, jcf->super_class, 1);\n-\t  fputs (\" )))) \", stream);\n-\t}\n-\n-      /* Now print the name of the thing.  */\n-      if (need_space)\n-\tfputs (\" \", stream);\n-      print_full_cxx_name (stream, jcf, name_index, \n-\t\t\t   signature_index, is_init, name_override,\n-\t\t\t   flags);\n-    }\n-}\n-\n-/* Print the unqualified method name followed by the signature. */\n-static void\n-print_full_cxx_name (FILE* stream, JCF* jcf, int name_index,\n-\t\t     int signature_index, int is_init,\n-\t\t     const char *name_override, int flags)\n-{\n-  int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n-  const unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n-  const unsigned char *str = str0;\n-  const unsigned char *limit = str + length;\n-  int need_space = 0;\n-  int is_method = str[0] == '(';\n-  const unsigned char *next;\n-\n-  if (name_override)\n-    fputs (name_override, stream);\n-  else if (name_index)\n-    {\n-      /* Declare constructors specially.  */\n-      if (is_init)\n-\tprint_base_classname (stream, jcf, jcf->this_class);\n-      else\n-\tprint_name (stream, jcf, name_index);\n-    }\n-\n-  if (flag_jni)\n-    {\n-      unsigned char *signature = JPOOL_UTF_DATA (jcf, signature_index);\n-      int sig_len = JPOOL_UTF_LENGTH (jcf, signature_index);\n-      if (overloaded_jni_method_exists_p (JPOOL_UTF_DATA (jcf, name_index),\n-\t\t\t\t\t  JPOOL_UTF_LENGTH (jcf, name_index),\n-\t\t\t\t\t  (const char *) signature, sig_len))\n-\t{\n-\t  /* If this method is overloaded by another native method,\n-\t     then include the argument information in the mangled\n-\t     name.  */\n-\t  unsigned char *limit = signature + sig_len;\n-\t  fputs (\"__\", stream);\n-\t  while (signature < limit)\n-\t    {\n-\t      int ch = UTF8_GET (signature, limit);\n-\t      jni_print_char (stream, ch);\n-\t      if (ch == ')')\n-\t\t{\n-\t\t  /* Done.  */\n-\t\t  break;\n-\t\t}\n-\t    }\n-\t}\n-    }\n-\n-  if (is_method)\n-    {\n-      /* Have a method or a constructor.  Print signature pieces\n-\t until done.  */\n-      fputs (\" (\", stream);\n-\n-      str = str0 + 1;\n-\n-      /* In JNI mode, add extra arguments.  */\n-      if (flag_jni)\n-\t{\n-\t  /* FIXME: it would be nice to know if we are printing a decl\n-\t     or a definition, and only print `env' for the latter.  */\n-\t  fputs (\"JNIEnv *env\", stream);\n-\n-\t  fputs ((flags & ACC_STATIC) ? \", jclass\" : \", jobject\", stream);\n-\n-\t  if (*str != ')')\n-\t    fputs (\", \", stream);\n-\t}\n-\n-      while (str < limit && *str != ')')\n-\t{\n-\t  next = decode_signature_piece (stream, str, limit, &need_space);\n-\t  if (! next)\n-\t    {\n-\t      error (\"unparseable signature: '%s'\", str0);\n-\t      return;\n-\t    }\n-\t  \n-\t  if (next < limit && *next != ')')\n-\t    fputs (\", \", stream);\n-\t  str = next;\n-\t}\n-      \n-      fputs (\")\", stream);\n-    }\n-}\n-\n-/* This is a helper for print_stub_or_jni.  */\n-static void\n-print_name_for_stub_or_jni (FILE *stream, JCF *jcf, int name_index,\n-\t\t\t    int signature_index, int is_init,\n-\t\t\t    const char *name_override, int flags)\n-{\n-  const char *const prefix = flag_jni ? \"Java_\" : \"\";\n-  print_cxx_classname (stream, prefix, jcf, jcf->this_class, 1);\n-  fputs (flag_jni ? \"_\" : \"::\", stream);\n-  print_full_cxx_name (stream, jcf, name_index, \n-\t\t       signature_index, is_init, name_override,\n-\t\t       flags);\n-}\n-\n-static void\n-print_stub_or_jni (FILE* stream, JCF* jcf, int name_index,\n-\t\t   int signature_index, int is_init,\n-\t\t   const char *name_override, int flags)\n-{\n-  if (JPOOL_TAG (jcf, signature_index) != CONSTANT_Utf8)\n-    {\n-      fprintf (stream, \"<not a UTF8 constant>\");\n-      found_error = 1;\n-    }\n-  else\n-    {\n-      int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n-      const unsigned char *str0 = JPOOL_UTF_DATA (jcf, signature_index);\n-      const unsigned char *str = str0;\n-      const unsigned char *limit = str + length;\n-      int need_space = 0;\n-      int is_method = str[0] == '(';\n-      const unsigned char *next;\n-\n-      /* Don't print fields in the JNI case.  */\n-      if (! is_method && flag_jni)\n-\treturn;\n-\n-      if (flag_jni && ! stubs)\n-\tfputs (\"JNIEXPORT \", stream);\n-\n-      /* If printing a method, skip to the return signature and print\n-\t that first.  However, there is no return value if this is a\n-\t constructor.  */\n-      if (is_method && ! is_init)\n-\t{\n-\t  while (str < limit)\n-\t    {\n-\t      int ch = *str++;\n-\t      if (ch == ')')\n-\t\tbreak;\n-\t    }\n-\t}\n-\n-      /* If printing a field or an ordinary method, then print the\n-\t \"return value\" now.  Note that a constructor can't be native,\n-\t so we don't bother checking this in the JNI case.  */\n-      if (! is_method || ! is_init)\n-\t{\n-\t  next = decode_signature_piece (stream, str, limit, &need_space);\n-\t  if (! next)\n-\t    {\n-\t      error (\"unparseable signature: '%s'\", str0);\n-\t      return;\n-\t    }\n-\t}\n-\n-      /* When printing a JNI header we need to respect the space.  In\n-\t other cases we're just going to insert a newline anyway.  */\n-      fputs (need_space && ! stubs ? \" \" : \"\\n\", stream);\n-\n-      if (flag_jni && ! stubs)\n-\tfputs (\"JNICALL \", stream);\n-      \n-      /* Now print the name of the thing.  */\n-      print_name_for_stub_or_jni (stream, jcf, name_index,\n-\t\t\t\t  signature_index, is_init, name_override,\n-\t\t\t\t  flags);\n-\n-      /* Print the body.  */\n-      if (stubs)\n-\t{\n-\t  if (flag_jni)\n-\t    fputs (\"\\n{\\n  (*env)->FatalError (env, \\\"\", stream);\n-\t  else\n-\t    fputs (\"\\n{\\n  throw new ::java::lang::UnsupportedOperationException (JvNewStringLatin1 (\\\"\", stream);\n-\t  print_name_for_stub_or_jni (stream, jcf, name_index,\n-\t\t\t\t      signature_index, is_init,\n-\t\t\t\t      name_override,\n-\t\t\t\t      flags);\n-\t  fprintf (stream, \" not implemented\\\")%s;\\n}\\n\\n\",\n-\t\t   flag_jni ? \"\" : \")\");\n-\t}\n-    }\n-}\n-\n-static void\n-print_mangled_classname (FILE *stream, JCF *jcf, const char *prefix, int index)\n-{\n-  int name_index = JPOOL_USHORT1 (jcf, index);\n-  fputs (prefix, stream);\n-  jcf_print_utf8_replace (out,\n-\t\t\t  JPOOL_UTF_DATA (jcf, name_index),\n-\t\t\t  JPOOL_UTF_LENGTH (jcf, name_index),\n-\t\t\t  '/', '_');\n-}\n-\n-/* Print PREFIX, then a class name in C++ format.  If the name refers\n-   to an array, ignore it and don't print PREFIX.  Returns 1 if\n-   something was printed, 0 otherwise.  */\n-static int\n-print_cxx_classname (FILE *stream, const char *prefix,\n-\t\t     JCF *jcf, int index, int add_scope)\n-{\n-  int name_index = JPOOL_USHORT1 (jcf, index);\n-  int len, c;\n-  const unsigned char *s, *p, *limit;\n-\n-  s = JPOOL_UTF_DATA (jcf, name_index);\n-  len = JPOOL_UTF_LENGTH (jcf, name_index);\n-  limit = s + len;\n-\n-  /* Explicitly omit arrays here.  */\n-  p = s;\n-  c = UTF8_GET (p, limit);\n-  if (c == '[')\n-    return 0;\n-\n-  fputs (prefix, stream);\n-\n-  /* Print a leading \"::\" so we look in the right namespace.  */\n-  if (! flag_jni && ! stubs && add_scope)\n-    fputs (\"::\", stream);\n-\n-  while (s < limit)\n-    {\n-      c = UTF8_GET (s, limit);\n-      if (c == '/')\n-\tfputs (flag_jni ? \"_\" : \"::\", stream);\n-      else\n-\tjni_print_char (stream, c);\n-    }\n-\n-  return 1;\n-}\n-\n-int written_class_count = 0;\n-\n-/* Return name of superclass.  If LEN is not NULL, fill it with length\n-   of name.  */\n-static const unsigned char *\n-super_class_name (JCF *derived_jcf, int *len)\n-{\n-  int supername_index = JPOOL_USHORT1 (derived_jcf, derived_jcf->super_class);\n-  int supername_length = JPOOL_UTF_LENGTH (derived_jcf, supername_index);\n-  const unsigned char *supername =\n-    JPOOL_UTF_DATA (derived_jcf, supername_index);\n-\n-  if (len)\n-    *len = supername_length;\n-\n-  return supername;\n-}\n-\n-static void\n-handle_inner_classes (int count)\n-{\n-  int i;\n-\n-  if (out && ! flag_jni && ! stubs && count > 0)\n-    fprintf (out, \"\\n\");\n-\n-  for (i = 0; i < count; ++i)\n-    {\n-      JCF_u2 inner_info_index = JCF_readu2 (current_jcf);\n-\n-      /* There are a few more values here, but we don't care about\n-\t them.  The (void) cast is apparently the only way to avoid a\n-\t warning here.  */\n-      (void) JCF_readu2 (current_jcf);\n-      (void) JCF_readu2 (current_jcf);\n-      (void) JCF_readu2 (current_jcf);\n-\n-      if (out && ! flag_jni && ! stubs)\n-\t{\n-\t  print_mangled_classname (out, current_jcf, \"  friend class \",\n-\t\t\t\t   inner_info_index);\n-\t  fprintf (out, \";\\n\");\n-\t}\n-    }\n-}\n-\n-\f\n-\n-/* We keep track of all the `#include's we generate, so we can avoid\n-   duplicates.  */\n-struct include\n-{\n-  char *name;\n-  struct include *next;\n-};\n-\n-/* List of all includes.  */\n-static struct include *all_includes = NULL;\n-\n-/* Generate a #include.  */\n-static void\n-print_include (FILE *out, const unsigned char *utf8, int len)\n-{\n-  struct include *incl;\n-\n-  if (! out)\n-    return;\n-\n-  if (len == -1)\n-    len = strlen ((const char *) utf8);\n-\n-  for (incl = all_includes; incl; incl = incl->next)\n-    {\n-      /* We check the length because we might have a proper prefix.  */\n-      if (len == (int) strlen (incl->name)\n-\t  && ! strncmp (incl->name, (const char *) utf8, len))\n-\treturn;\n-    }\n-\n-  incl = XNEW (struct include);\n-  incl->name = XNEWVEC (char, len + 1);\n-  strncpy (incl->name, (const char *) utf8, len);\n-  incl->name[len] = '\\0';\n-  incl->next = all_includes;\n-  all_includes = incl;\n-\n-  fputs (\"#include <\", out);\n-  jcf_print_utf8_replace (out, utf8, len,\n-\t\t\t  '/',\n-\t\t\t  flag_jni ? '_' : '/');\n-  fputs (\".h>\\n\", out);\n-}\n-\n-\f\n-\n-/* This is used to represent part of a package or class name.  */\n-struct namelet\n-{\n-  /* The text of this part of the name.  */\n-  char *name;\n-  /* True if this represents a class.  */\n-  int is_class;\n-  /* Linked list of all classes and packages inside this one.  */\n-  struct namelet *subnamelets;\n-  /* Pointer to next sibling.  */\n-  struct namelet *next;\n-};\n-\n-static void add_namelet (const unsigned char *, const unsigned char *,\n-\t\t\t struct namelet *);\n-static void print_namelet (FILE *, struct namelet *, int);\n-\n-/* The special root namelet.  */\n-static struct namelet root =\n-{\n-  NULL,\n-  0,\n-  NULL,\n-  NULL\n-};\n-\n-/* This extracts the next name segment from the full UTF-8 encoded\n-   package or class name and links it into the tree.  It does this\n-   recursively.  */\n-static void\n-add_namelet (const unsigned char *name, const unsigned char *name_limit,\n-\t     struct namelet *parent)\n-{\n-  const unsigned char *p;\n-  struct namelet *n = NULL, *np;\n-\n-  /* We want to skip the standard namespaces that we assume the\n-     runtime already knows about.  We only do this at the top level,\n-     though, hence the check for `root'.  */\n-  if (parent == &root)\n-    {\n-#define JAVALANG \"java/lang/\"\n-#define JAVAIO \"java/io/\"\n-#define JAVAUTIL \"java/util/\"\n-      if ((name_limit - name >= (int) sizeof (JAVALANG) - 1\n-\t   && ! strncmp ((const char *) name, JAVALANG, sizeof (JAVALANG) - 1))\n-\t  || (name_limit - name >= (int) sizeof (JAVAUTIL) - 1\n-\t      && ! strncmp ((const char *) name, JAVAUTIL, sizeof (JAVAUTIL) - 1))\n-\t  || (name_limit - name >= (int) sizeof (JAVAIO) - 1\n-\t      && ! strncmp ((const char *) name, JAVAIO, sizeof (JAVAIO) - 1)))\n-\treturn;\n-    }\n-\n-  for (p = name; p < name_limit && *p != '/'; ++p)\n-    ;\n-\n-  /* Search for this name beneath the PARENT node.  */\n-  for (np = parent->subnamelets; np != NULL; np = np->next)\n-    {\n-      /* We check the length because we might have a proper prefix.  */\n-      if ((int) strlen (np->name) == p - name &&\n-\t  ! strncmp ((const char *) name, np->name, p - name))\n-\t{\n-\t  n = np;\n-\t  break;\n-\t}\n-    }\n-\n-  if (n == NULL)\n-    {\n-      n = XNEW (struct namelet);\n-      n->name = XNEWVEC (char, p - name + 1);\n-      strncpy (n->name, (const char *) name, p - name);\n-      n->name[p - name] = '\\0';\n-      n->is_class = (p == name_limit);\n-      n->subnamelets = NULL;\n-      n->next = parent->subnamelets;\n-      parent->subnamelets = n;\n-    }\n-\n-  /* We recurse if there is more text, and if the trailing piece does\n-     not represent an inner class. */\n-  if (p < name_limit)\n-    add_namelet (p + 1, name_limit, n);\n-}\n-\n-/* Print a single namelet.  Destroys namelets while printing.  */\n-static void\n-print_namelet (FILE *out, struct namelet *name, int depth)\n-{\n-  int i, term = 0;\n-  struct namelet *c;\n-\n-  if (name->name)\n-    {\n-      for (i = 0; i < depth; ++i)\n-\tfputc (' ', out);\n-      fprintf (out, \"%s %s\", name->is_class ? \"class\" : \"namespace\",\n-\t       name->name);\n-      if (name->is_class && name->subnamelets == NULL)\n-\tfputs (\";\\n\", out);\n-      else\n-\t{\n-\t  term = 1;\n-\t  fputs (\"\\n\", out);\n-\t  for (i = 0; i < depth; ++i)\n-\t    fputc (' ', out);\n-\t  fputs (\"{\\n\", out);\n-\t}\n-    }\n-\n-  c = name->subnamelets;\n-  while (c != NULL)\n-    {\n-      struct namelet *next = c->next;\n-      print_namelet (out, c, depth + 2);\n-      c = next;\n-    }\n-  name->subnamelets = NULL;\n-\n-  if (name->name)\n-    {\n-      if (term)\n-\t{\n-\t  for (i = 0; i < depth; ++i)\n-\t    fputc (' ', out);\n-\t  fputs (\"}\\n\", out);\n-\t  /* Only print a `;' when printing a class.  C++ is evil.  */\n-\t  if (name->is_class)\n-\t    fputs (\";\", out);\n-\t}\n-\n-      free (name->name);\n-      free (name);\n-    }\n-}\n-\n-/* This is called to add some classes to the list of classes for which\n-   we need decls.  The signature argument can be a function\n-   signature.  */\n-static void\n-add_class_decl (FILE *out, JCF *jcf, JCF_u2 signature)\n-{\n-  const unsigned char *s = JPOOL_UTF_DATA (jcf, signature);\n-  int len = JPOOL_UTF_LENGTH (jcf, signature);\n-  int i;\n-\n-  for (i = 0; i < len; ++i)\n-    {\n-      int start;\n-\n-      /* If we see an array, then we include the array header.  */\n-      if (s[i] == '[')\n-\t{\n-\t  print_include (out, (const unsigned char *) \"gcj/array\", -1);\n-\t  continue;\n-\t}\n-\n-      /* We're looking for `L<stuff>;' -- everything else is\n-\t ignorable.  */\n-      if (s[i] != 'L')\n-\tcontinue;\n-\n-      for (start = ++i; i < len && s[i] != ';'; ++i)\n-\t;\n-\n-      add_namelet (&s[start], &s[i], &root);\n-    }\n-}\n-\n-/* Print declarations for all classes required by this class.  Any\n-   class or package in the `java' package is assumed to be handled\n-   statically in libjava; we don't generate declarations for these.\n-   This makes the generated headers a bit easier to read.  */\n-static void\n-print_class_decls (FILE *out, JCF *jcf, int self)\n-{\n-  /* Make sure to always add the current class to the list of things\n-     that should be declared.  */\n-  int name_index = JPOOL_USHORT1 (jcf, self);\n-  int len;\n-  const unsigned char *s;\n-\n-  s = JPOOL_UTF_DATA (jcf, name_index);\n-  len = JPOOL_UTF_LENGTH (jcf, name_index);\n-  add_namelet (s, s + len, &root);\n-\n-  if (root.subnamelets)\n-    {\n-      fputs (\"extern \\\"Java\\\"\\n{\\n\", out);\n-      /* We use an initial offset of 0 because the root namelet\n-\t doesn't cause anything to print.  */\n-      print_namelet (out, &root, 0);\n-      fputs (\"}\\n\\n\", out);\n-    }\n-}\n-\n-\f\n-\n-static void\n-process_file (JCF *jcf, FILE *out)\n-{\n-  int code, i;\n-  uint32 field_start, method_end, method_start;\n-\n-  current_jcf = jcf;\n-\n-  last_access = -1;\n-\n-  if (jcf_parse_preamble (jcf) != 0)\n-    {\n-      error (\"Not a valid Java .class file.\");\n-      return;\n-    }\n-\n-  /* Parse and possibly print constant pool */\n-  code = jcf_parse_constant_pool (jcf);\n-  if (code != 0)\n-    {\n-      error (\"error while parsing constant pool\");\n-      return;\n-    }\n-  code = verify_constant_pool (jcf);\n-  if (code > 0)\n-    {\n-      error (\"error in constant pool entry #%d\", code);\n-      return;\n-    }\n-\n-  jcf_parse_class (jcf);\n-\n-  if (written_class_count++ == 0 && out)\n-    {\n-      const char *cstart, *cstart2, *mode, *cend, *what, *jflag;\n-      if (flag_jni)\n-\t{\n-\t  cstart = \"/*\";\n-\t  cstart2 = \"  \";\n-\t  cend = \" */\";\n-\t  mode = \"\";\n-\t  what = \"JNI\";\n-\t  jflag = \" -jni\";\n-\t}\n-      else\n-\t{\n-\t  cstart = \"//\";\n-\t  cstart2 = \"//\";\n-\t  cend = \"\";\n-\t  mode = \" -*- c++ -*-\";\n-\t  what = \"CNI\";\n-\t  jflag = \"\";\n-\t}\n-\n-      if (! stubs)\n-\tfprintf (out, \"%s DO NOT EDIT THIS FILE - it is machine generated%s%s\\n\\n\",\n-\t\t cstart, mode, cend);\n-      else\n-\t{\n-\t  fprintf (out, \"%s This file was created by `\" TOOLNAME \" -stubs%s'.%s\\n\\\n-%s\\n\\\n-%s This file is intended to give you a head start on implementing native\\n\\\n-%s methods using %s.\\n\\\n-%s Be aware: running `\" TOOLNAME \" -stubs %s' once more for this class may\\n\\\n-%s overwrite any edits you have made to this file.%s\\n\\n\",\n-\t\t   cstart, jflag, mode,\n-\t\t   cstart2,\n-\t\t   cstart2,\n-\t\t   cstart2,\n-\t\t   what,\n-\t\t   cstart2,\n-\t\t   jflag,\n-\t\t   cstart2,\n-\t\t   cend);\n-\t}\n-    }\n-\n-  if (out)\n-    {\n-      if (! stubs)\n-\t{\n-\t  print_mangled_classname (out, jcf, \"#ifndef __\", jcf->this_class);\n-\t  fprintf (out, \"__\\n\");\n-\n-\t  print_mangled_classname (out, jcf, \"#define __\", jcf->this_class);\n-\t  fprintf (out, \"__\\n\\n\");\n-\n-\t  if (flag_jni)\n-\t    {\n-\t      fprintf (out, \"#include <jni.h>\\n\\n\");\n-\t      fprintf (out, \"#ifdef __cplusplus\\n\");\n-\t      fprintf (out, \"extern \\\"C\\\"\\n\");\n-\t      fprintf (out, \"{\\n\");\n-\t      fprintf (out, \"#endif\\n\");\n-\t    }\n-\t  else  \n-\t    {\n-\t      /* We do this to ensure that inline methods won't be\n-\t\t `outlined' by g++.  This works as long as method and\n-\t\t fields are not added by the user.  */\n-\t      fprintf (out, \"#pragma interface\\n\");\n-\n-\t      if (jcf->super_class)\n-\t\t{\n-\t\t  int super_length;\n-\t\t  const unsigned char *supername =\n-\t\t    super_class_name (jcf, &super_length);\n-\n-\t\t  fputs (\"\\n\", out);\n-\t\t  print_include (out, supername, super_length);\n-\t\t}\n-\t    }\n-\t}\n-      else\n-\t{\n-\t  /* Strip off the \".class\" portion of the name when printing\n-\t     the include file name.  */\n-\t  char *name;\n-\t  int i, len = strlen (jcf->classname);\n-\t  if (len > 6 && ! strcmp (&jcf->classname[len - 6], \".class\"))\n-\t    len -= 6;\n-\t  /* Turn the class name into a file name.  */\n-\t  name = XNEWVEC (char, len + 1);\n-\t  for (i = 0; i < len; ++i)\n-\t    name[i] = jcf->classname[i] == '.' ? '/' : jcf->classname[i];\n-\t  name[i] = '\\0';\n-\t  print_include (out, (const unsigned char *) name, len);\n-\t  free (name);\n-\n-\t  if (! flag_jni)\n-\t    {\n-\t      print_include (out, (const unsigned char *) \"gcj/cni\", -1);\n-\t      print_include (out, (const unsigned char *) \"java/lang/UnsupportedOperationException\",\n-\t\t\t     -1);\n-\t    }\n-\t}\n-    }\n-\n-  /* We want to parse the methods first.  But we need to find where\n-     they start.  So first we skip the fields, then parse the methods.\n-     Then we parse the fields and skip the methods.  This is ugly, but\n-     not too bad since we need two full passes to get class decl\n-     information anyway.  */\n-  field_pass = 0;\n-  field_start = JCF_TELL (jcf);\n-  jcf_parse_fields (jcf);\n-\n-  method_start = JCF_TELL (jcf);\n-  method_pass = 0;\n-  jcf_parse_methods (jcf);\n-\n-  if (out)\n-    fputs (\"\\n\", out);\n-\n-  if (out && ! flag_jni)\n-    {\n-      if (! stubs)\n-\tprint_class_decls (out, jcf, jcf->this_class);\n-\n-      for (i = 0; i < prepend_count; ++i)\n-\tfprintf (out, \"%s\\n\", prepend_specs[i]);\n-      if (prepend_count > 0)\n-\tfputc ('\\n', out);\n-\n-      if (! stubs)\n-\t{\n-\t  if (! print_cxx_classname (out, \"class \", jcf,\n-\t\t\t\t     jcf->this_class, 0))\n-\t    {\n-\t      error (\"class is of array type\\n\");\n-\t      return;\n-\t    }\n-\t  if (jcf->super_class)\n-\t    {\n-\t      if (! print_cxx_classname (out, \" : public \", \n-\t\t\t\t\t jcf, jcf->super_class, 1))\n-\t\t{\n-\t\t  error (\"base class is of array type\");\n-\t\t  return;\n-\t\t}\n-\t    }\n-\n-\t  fputs (\"\\n{\\n\", out);\n-\t}\n-    }\n-\n-  /* Now go back for second pass over methods and fields.  */\n-  is_first_data_member = 1;\n-\n-  JCF_SEEK (jcf, method_start);\n-  method_pass = 1;\n-  jcf_parse_methods (jcf);\n-  method_end = JCF_TELL (jcf);\n-\n-  field_pass = 1;\n-  JCF_SEEK (jcf, field_start);\n-  jcf_parse_fields (jcf);\n-  JCF_SEEK (jcf, method_end);\n-\n-  jcf_parse_final_attributes (jcf);\n-\n-  if (out && ! stubs)\n-    {\n-      if (flag_jni)\n-\t{\n-\t  fprintf (out, \"\\n#ifdef __cplusplus\\n\");\n-\t  fprintf (out, \"}\\n\");\n-\t  fprintf (out, \"#endif\\n\");\n-\t}\n-      else\n-\t{\n-\t  /* Generate friend decl if we still must.  */\n-\t  for (i = 0; i < friend_count; ++i)\n-\t    fprintf (out, \"  friend %s\\n\", friend_specs[i]);\n-\n-\t  /* Generate extra declarations.  */\n-\t  if (add_count > 0)\n-\t    fputc ('\\n', out);\n-\t  for (i = 0; i < add_count; ++i)\n-\t    fprintf (out, \"  %s\\n\", add_specs[i]);\n-\n-\t  /* Generate an entry for the class object.  */\n-\t  generate_access (out, ACC_PUBLIC);\n-\t  fprintf (out, \"\\n  static ::java::lang::Class class$;\\n\");\n-\n-\t  fputs (\"}\", out);\n-\t  \n-\t  if (jcf->access_flags & ACC_INTERFACE)\n-\t    fputs (\" __attribute__ ((java_interface))\", out);\n-\n-\t  fputs (\";\\n\", out);\n-\n-\t  if (append_count > 0)\n-\t    fputc ('\\n', out);\n-\t  for (i = 0; i < append_count; ++i)\n-\t    fprintf (out, \"%s\\n\", append_specs[i]);\n-\t}\n-\n-      print_mangled_classname (out, jcf, \n-\t\t\t       \"\\n#endif /* __\", jcf->this_class);\n-      fprintf (out, \"__ */\\n\");\n-    }\n-}\n-\n-\f\n-\n-/* This is used to mark options with no short value.  */\n-#define LONG_OPT(Num)  ((Num) + 128)\n-\n-#define OPT_classpath     LONG_OPT (0)\n-#define OPT_CLASSPATH     OPT_classpath\n-#define OPT_bootclasspath LONG_OPT (1)\n-#define OPT_extdirs       LONG_OPT (2)\n-#define OPT_HELP          LONG_OPT (3)\n-#define OPT_TEMP          LONG_OPT (4)\n-#define OPT_VERSION       LONG_OPT (5)\n-#define OPT_PREPEND       LONG_OPT (6)\n-#define OPT_FRIEND        LONG_OPT (7)\n-#define OPT_ADD           LONG_OPT (8)\n-#define OPT_APPEND        LONG_OPT (9)\n-#define OPT_M             LONG_OPT (10)\n-#define OPT_MM            LONG_OPT (11)\n-#define OPT_MG            LONG_OPT (12)\n-#define OPT_MD            LONG_OPT (13)\n-#define OPT_MMD           LONG_OPT (14)\n-#define OPT_FORCE         LONG_OPT (15)\n-#define OPT_OLD           LONG_OPT (16)\n-#define OPT_TRACE         LONG_OPT (17)\n-\n-static const struct option options[] =\n-{\n-  { \"classpath\",     required_argument, NULL, OPT_classpath },\n-  { \"bootclasspath\", required_argument, NULL, OPT_bootclasspath },\n-  { \"extdirs\",       required_argument, NULL, OPT_extdirs },\n-  { \"CLASSPATH\",     required_argument, NULL, OPT_CLASSPATH },\n-  { \"help\",          no_argument,       NULL, OPT_HELP },\n-  { \"stubs\",         no_argument,       &stubs, 1 },\n-  { \"td\",            required_argument, NULL, OPT_TEMP },\n-  { \"verbose\",       no_argument,       NULL, 'v' },\n-  { \"version\",       no_argument,       NULL, OPT_VERSION },\n-  { \"prepend\",       required_argument, NULL, OPT_PREPEND },\n-  { \"friend\",        required_argument, NULL, OPT_FRIEND },\n-  { \"add\",           required_argument, NULL, OPT_ADD },\n-  { \"append\",        required_argument, NULL, OPT_APPEND },\n-  { \"M\",             no_argument,       NULL, OPT_M   },\n-  { \"MM\",            no_argument,       NULL, OPT_MM  },\n-  { \"MG\",            no_argument,       NULL, OPT_MG  },\n-  { \"MD\",            no_argument,       NULL, OPT_MD  },\n-  { \"MMD\",           no_argument,       NULL, OPT_MMD },\n-  { \"jni\",           no_argument,       &flag_jni, 1 },\n-  { \"force\",         no_argument,       NULL, OPT_FORCE },\n-  /* If the output file should be named \"ld\" then a space is needed\n-     between -o and its argument, ld. */\n-  { \"old\",           no_argument,       NULL, OPT_OLD },\n-  { \"trace\",         no_argument,       NULL, OPT_TRACE },\n-  { NULL,            required_argument, NULL, 'J' },\n-  { NULL,            no_argument,       NULL, 0 }\n-};\n-\n-static void\n-usage (void)\n-{\n-  fprintf (stderr, _(\"Try '\" TOOLNAME \" --help' for more information.\\n\"));\n-  exit (1);\n-}\n-\n-static void\n-help (void)\n-{\n-  printf (_(\"Usage: \" TOOLNAME \" [OPTION]... CLASS...\\n\\n\"));\n-  printf (_(\"Generate C or C++ header files from .class files\\n\\n\"));\n-  printf (_(\"  -stubs                  Generate an implementation stub file\\n\"));\n-  printf (_(\"  -jni                    Generate a JNI header or stub\\n\"));\n-  printf (_(\"  -force                  Always overwrite output files\\n\"));\n-  printf (_(\"  -old                    Unused compatibility option\\n\"));\n-  printf (_(\"  -trace                  Unused compatibility option\\n\"));\n-  printf (_(\"  -J OPTION               Unused compatibility option\\n\"));\n-  printf (\"\\n\");\n-  printf (_(\"  -add TEXT               Insert TEXT into class body\\n\"));\n-  printf (_(\"  -append TEXT            Insert TEXT after class declaration\\n\"));\n-  printf (_(\"  -friend TEXT            Insert TEXT as 'friend' declaration\\n\"));\n-  printf (_(\"  -prepend TEXT           Insert TEXT before start of class\\n\"));\n-  printf (\"\\n\");\n-  printf (_(\"  --classpath PATH        Set path to find .class files\\n\"));\n-  printf (_(\"  -IDIR                   Append directory to class path\\n\"));\n-  printf (_(\"  --bootclasspath PATH    Override built-in class path\\n\"));\n-  printf (_(\"  --extdirs PATH          Set extensions directory path\\n\"));\n-  printf (_(\"  -d DIRECTORY            Set output directory name\\n\"));\n-  printf (_(\"  -o FILE                 Set output file name\\n\"));\n-  printf (_(\"  -td DIRECTORY           Set temporary directory name\\n\"));\n-  printf (\"\\n\");\n-  printf (_(\"  --help                  Print this help, then exit\\n\"));\n-  printf (_(\"  --version               Print version number, then exit\\n\"));\n-  printf (_(\"  -v, --verbose           Print extra information while running\\n\"));\n-  printf (\"\\n\");\n-  printf (_(\"  -M                      Print all dependencies to stdout;\\n\"\n-\t    \"                             suppress ordinary output\\n\"));\n-  printf (_(\"  -MM                     Print non-system dependencies to stdout;\\n\"\n-\t    \"                             suppress ordinary output\\n\"));\n-  printf (_(\"  -MD                     Print all dependencies to stdout\\n\"));\n-  printf (_(\"  -MMD                    Print non-system dependencies to stdout\\n\"));\n-  /* We omit -MG until it is implemented.  */\n-  printf (\"\\n\");\n-  printf (_(\"For bug reporting instructions, please see:\\n\"\n-\t    \"%s.\\n\"), bug_report_url);\n-  exit (0);\n-}\n-\n-static void\n-version (void)\n-{\n-  printf (TOOLNAME \" (GCC) %s\\n\\n\", version_string);\n-  printf (\"Copyright %s 2006 Free Software Foundation, Inc.\\n\", _(\"(C)\"));\n-  printf (_(\"This is free software; see the source for copying conditions.  There is NO\\n\"\n-\t    \"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"));\n-  exit (0);\n-}\n-\n-int\n-main (int argc, char** argv)\n-{\n-  JCF jcf;\n-  int argi;\n-  char *output_file = NULL;\n-  int emit_dependencies = 0, suppress_output = 0;\n-  int opt;\n-  int local_found_error;\n-\n-  /* Unlock the stdio streams.  */\n-  unlock_std_streams ();\n-\n-  gcc_init_libintl ();\n-\n-  if (argc <= 1)\n-    {\n-      error (\"no classes specified\");\n-      usage ();\n-    }\n-\n-  jcf_path_init ();\n-\n-  /* We use getopt_long_only to allow single `-' long options.  For\n-     some of our options this is more natural.  */\n-  while ((opt = getopt_long_only (argc, argv, \"J:I:d:o:v\", options, NULL)) != -1)\n-    {\n-      switch (opt)\n-\t{\n-\tcase 0:\n-\t  /* Already handled.  */\n-\t  break;\n-\n-\tcase 'o':\n-\t  output_file = optarg;\n-\t  break;\n-\n-\tcase 'd':\n-\t  output_directory = optarg;\n-\t  break;\n-\n-\tcase 'I':\n-\t  jcf_path_include_arg (optarg);\n-\t  break;\n-\n-\tcase 'v':\n-\t  verbose++;\n-\t  break;\n-\n-\tcase OPT_classpath:\n-\t  jcf_path_classpath_arg (optarg);\n-\t  break;\n-\n-\tcase OPT_bootclasspath:\n-\t  jcf_path_bootclasspath_arg (optarg);\n-\t  break;\n-\n-\tcase OPT_extdirs:\n-\t  jcf_path_extdirs_arg (optarg);\n-\t  break;\n-\n-\tcase OPT_HELP:\n-\t  help ();\n-\t  break;\n-\n-\tcase OPT_TEMP:\n-\t  temp_directory = optarg;\n-\t  break;\n-\n-\tcase OPT_VERSION:\n-\t  version ();\n-\t  break;\n-\n-\tcase OPT_PREPEND:\n-\t  if (prepend_count == 0)\n-\t    prepend_specs = XNEWVEC (char *, argc);\n-\t  prepend_specs[prepend_count++] = optarg;\n-\t  break;\n-\n-\tcase OPT_FRIEND:\n-\t  if (friend_count == 0)\n-\t    friend_specs = XNEWVEC (char *, argc);\n-\t  friend_specs[friend_count++] = optarg;\n-\t  break;\n-\n-\tcase OPT_ADD:\n-\t  if (add_count == 0)\n-\t    add_specs = XNEWVEC (char *, argc);\n-\t  add_specs[add_count++] = optarg;\n-\t  break;\n-\n-\tcase OPT_APPEND:\n-\t  if (append_count == 0)\n-\t    append_specs = XNEWVEC (char *, argc);\n-\t  append_specs[append_count++] = optarg;\n-\t  break;\n-\n-\tcase OPT_M:\n-\t  emit_dependencies = 1;\n-\t  suppress_output = 1;\n-\t  jcf_dependency_init (1);\n-\t  break;\n-\n-\tcase OPT_MM:\n-\t  emit_dependencies = 1;\n-\t  suppress_output = 1;\n-\t  jcf_dependency_init (0);\n-\t  break;\n-\n-\tcase OPT_MG:\n-\t  error (\"'-MG' option is unimplemented\");\n-\t  exit (1);\n-\n-\tcase OPT_MD:\n-\t  emit_dependencies = 1;\n-\t  jcf_dependency_init (1);\n-\t  break;\n-\n-\tcase OPT_MMD:\n-\t  emit_dependencies = 1;\n-\t  jcf_dependency_init (0);\n-\t  break;\n-\n-\tcase OPT_FORCE:\n-\t  break;\n-\n-\tcase OPT_OLD:\n-\t  break;\n-\n-\tcase OPT_TRACE:\n-\t  break;\n-\n-\tcase 'J':\n-          /* Ignore -J options. */\n-\t  break;\n-\n-\tdefault:\n-\t  usage ();\n-\t  break;\n-\t}\n-    }\n-\n-  if (optind == argc)\n-    {\n-      error (\"no classes specified\");\n-      usage ();\n-    }\n-\n-  jcf_path_seal (verbose);\n-\n-  if (output_file && emit_dependencies)\n-    {\n-      error (\"can't specify both -o and -MD\");\n-      exit (1);\n-    }\n-\n-  local_found_error = 0;\n-  for (argi = optind; argi < argc; argi++)\n-    {\n-      char *classname = argv[argi];\n-      char *current_output_file = NULL;\n-      const char *classfile_name;\n-\n-      /* We reset the error state here so that we can detect errors\n-\t that occur when processing this file, so the output can be\n-\t unlinked if need be.  */\n-      found_error = 0;\n-\n-      if (verbose)\n-\tprintf (_(\"Processing %s\\n\"), classname);\n-      if (! output_file)\n-\tjcf_dependency_reset ();\n-      classfile_name = find_class (classname, strlen (classname), &jcf, 0);\n-      if (classfile_name == NULL)\n-\t{\n-\t  error (\"%s: no such class\", classname);\n-\t  exit (1);\n-\t}\n-      if (verbose)\n-\tprintf (_(\"Found in %s\\n\"), classfile_name);\n-      if (output_file)\n-\t{\n-\t  if (strcmp (output_file, \"-\") == 0)\n-\t    out = stdout;\n-\t  else if (out == NULL)\n-\t    {\n-\t      out = fopen (output_file, \"w\");\n-\t    }\n-\t  if (out == NULL)\n-\t    {\n-\t      perror (output_file);\n-\t      exit (1);\n-\t    }\n-\t  current_output_file = output_file;\n-\t}\n-      else\n-\t{\n-\t  int dir_len = strlen (output_directory);\n-\t  int i, classname_length = strlen (classname);\n-\t  current_output_file = XNEWVEC (char, dir_len + classname_length + 5);\n-\t  strcpy (current_output_file, output_directory);\n-\t  if (dir_len > 0 && output_directory[dir_len-1] != '/')\n-\t    current_output_file[dir_len++] = '/';\n-\t  for (i = 0; classname[i] != '\\0'; i++)\n-\t    {\n-\t      char ch = classname[i];\n-\t      if (ch == '.')\n-\t\tch = '/';\n-\t      if (flag_jni && ch == '/')\n-\t\tch = '_';\n-\t      current_output_file[dir_len++] = ch;\n-\t    }\n-\t  if (emit_dependencies)\n-\t    {\n-\t      if (suppress_output)\n-\t\t{\n-\t\t  jcf_dependency_set_dep_file (\"-\");\n-\t\t  out = NULL;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  /* We use `.hd' and not `.d' to avoid clashes with\n-\t\t     dependency tracking from straight compilation.  */\n-\t\t  strcpy (current_output_file + dir_len, \".hd\");\n-\t\t  jcf_dependency_set_dep_file (current_output_file);\n-\t\t}\n-\t    }\n-\t  strcpy (current_output_file + dir_len, \n-\t\t  stubs ? (flag_jni ? \".c\" : \".cc\") : \".h\");\n-\t  jcf_dependency_set_target (current_output_file);\n-\t  if (! suppress_output)\n-\t    {\n-\t      out = fopen (current_output_file, \"w\");\n-\t      if (out == NULL)\n-\t\t{\n-\t\t  perror (current_output_file);\n-\t\t  exit (1);\n-\t\t}\n-\t    }\n-\t}\n-      free_method_name_list ();\n-      process_file (&jcf, out);\n-      JCF_FINISH (&jcf);\n-\n-      /* If we found an error and we're writing to a real file,\n-\t delete it.  */\n-      if (found_error && ! suppress_output && current_output_file != NULL\n-\t  && strcmp (current_output_file, \"-\"))\n-\tunlink (current_output_file);\n-\n-      if (current_output_file != output_file)\n-\tfree (current_output_file);\n-      jcf_dependency_write ();\n-\n-      local_found_error |= found_error;\n-    }\n-\n-  if (out != NULL && out != stdout)\n-    fclose (out);\n-\n-  return local_found_error;\n-}"}, {"sha": "f084154c86d4bc43023577e70cd0821dc5368e8f", "filename": "gcc/java/java-gimplify.c", "status": "modified", "additions": 1, "deletions": 88, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjava-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjava-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-gimplify.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,5 +1,5 @@\n /* Java(TM) language-specific gimplification routines.\n-   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -34,10 +34,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n static tree java_gimplify_labeled_block_expr (tree);\n static tree java_gimplify_exit_block_expr (tree);\n-static tree java_gimplify_case_expr (tree);\n-static tree java_gimplify_default_expr (tree);\n static tree java_gimplify_block (tree);\n-static tree java_gimplify_new_array_init (tree);\n static tree java_gimplify_try_expr (tree);\n static enum gimplify_status java_gimplify_modify_expr (tree*, tree*, tree *);\n static enum gimplify_status java_gimplify_component_ref (tree*, tree*, tree *);\n@@ -92,30 +89,10 @@ java_gimplify_expr (tree *expr_p, tree *pre_p ATTRIBUTE_UNUSED,\n       *expr_p = java_gimplify_exit_block_expr (*expr_p);\n       break;\n \n-    case CASE_EXPR:\n-      *expr_p = java_gimplify_case_expr (*expr_p);\n-      break;\n-\n-    case DEFAULT_EXPR:\n-      *expr_p = java_gimplify_default_expr (*expr_p);\n-      break;\n-\n-    case NEW_ARRAY_INIT:\n-      *expr_p = java_gimplify_new_array_init (*expr_p);\n-      break;\n-\n     case TRY_EXPR:\n       *expr_p = java_gimplify_try_expr (*expr_p);\n       break;\n \n-    case JAVA_CATCH_EXPR:\n-      *expr_p = TREE_OPERAND (*expr_p, 0);\n-      break;\n-\n-    case JAVA_EXC_OBJ_EXPR:\n-      *expr_p = build_exception_object_ref (TREE_TYPE (*expr_p));\n-      break;\n-\n     case VAR_DECL:\n       *expr_p = java_replace_reference (*expr_p, /* want_lvalue */ false);\n       return GS_UNHANDLED;\n@@ -147,15 +124,6 @@ java_gimplify_expr (tree *expr_p, tree *pre_p ATTRIBUTE_UNUSED,\n     case COMPARE_EXPR:\n     case COMPARE_L_EXPR:\n     case COMPARE_G_EXPR:\n-    case UNARY_PLUS_EXPR:\n-    case NEW_ARRAY_EXPR:\n-    case NEW_ANONYMOUS_ARRAY_EXPR:\n-    case NEW_CLASS_EXPR:\n-    case THIS_EXPR:\n-    case SYNCHRONIZED_EXPR:\n-    case CONDITIONAL_EXPR:\n-    case INSTANCEOF_EXPR:\n-    case CLASS_LITERAL:\n       gcc_unreachable ();\n \n     case COMPONENT_REF:\n@@ -360,21 +328,6 @@ java_gimplify_self_mod_expr (tree *expr_p, tree *pre_p ATTRIBUTE_UNUSED,\n }\n \n     \n-static tree\n-java_gimplify_case_expr (tree expr)\n-{\n-  tree label = create_artificial_label ();\n-  return build3 (CASE_LABEL_EXPR, void_type_node,\n-\t\t TREE_OPERAND (expr, 0), NULL_TREE, label);\n-}\n-\n-static tree\n-java_gimplify_default_expr (tree expr ATTRIBUTE_UNUSED)\n-{\n-  tree label = create_artificial_label ();\n-  return build3 (CASE_LABEL_EXPR, void_type_node, NULL_TREE, NULL_TREE, label);\n-}\n-\n /* Gimplify BLOCK into a BIND_EXPR.  */\n \n static tree\n@@ -411,46 +364,6 @@ java_gimplify_block (tree java_block)\n   return build3 (BIND_EXPR, TREE_TYPE (java_block), decls, body, block);\n }\n \n-/* Gimplify a NEW_ARRAY_INIT node into array/element assignments.  */\n-\n-static tree\n-java_gimplify_new_array_init (tree exp)\n-{\n-  tree array_type = TREE_TYPE (TREE_TYPE (exp));\n-  tree data_field = lookup_field (&array_type, get_identifier (\"data\"));\n-  tree element_type = TYPE_ARRAY_ELEMENT (array_type);\n-  HOST_WIDE_INT ilength = java_array_type_length (array_type);\n-  tree length = build_int_cst (NULL_TREE, ilength);\n-  tree init = TREE_OPERAND (exp, 0);\n-  tree value;\n-  unsigned HOST_WIDE_INT cnt;\n-\n-  tree array_ptr_type = build_pointer_type (array_type);\n-  tree tmp = create_tmp_var (array_ptr_type, \"array\");\n-  tree body = build2 (GIMPLE_MODIFY_STMT, array_ptr_type, tmp,\n-\t\t      build_new_array (element_type, length));\n-\n-  int index = 0;\n-\n-  /* FIXME: try to allocate array statically?  */\n-  FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (init), cnt, value)\n-    {\n-      /* FIXME: Should use build_java_arrayaccess here, but avoid\n-\t bounds checking.  */\n-      tree lhs = build3 (COMPONENT_REF, TREE_TYPE (data_field),    \n-\t\t\t build_java_indirect_ref (array_type, tmp, 0),\n-\t\t\t data_field, NULL_TREE);\n-      tree assignment = build2 (GIMPLE_MODIFY_STMT, element_type,\n-\t\t\t\tbuild4 (ARRAY_REF, element_type, lhs,\n-\t\t\t\t\tbuild_int_cst (NULL_TREE, index++),\n-\t\t\t\t\tNULL_TREE, NULL_TREE),\n-\t\t\t\tvalue);\n-      body = build2 (COMPOUND_EXPR, element_type, body, assignment);\n-    }\n-\n-  return build2 (COMPOUND_EXPR, array_ptr_type, body, tmp);\n-}\n-\n static tree\n java_gimplify_try_expr (tree try_expr)\n {"}, {"sha": "a93d413ab0d10c2a562dcd1ad7f6e3112da9d81b", "filename": "gcc/java/java-tree.def", "status": "modified", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjava-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjava-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.def?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -11,36 +11,6 @@ DEFTREECODE (COMPARE_L_EXPR, \"compare_l_expr\", tcc_binary, 2)\n /* Same as COMPARE_EXPR, but if either value is NaN, the result is 1. */\n DEFTREECODE (COMPARE_G_EXPR, \"compare_g_expr\", tcc_binary, 2)\n \n-/* Unary plus. Operand 0 is the expression the unary plus is applied\n-   to */\n-DEFTREECODE (UNARY_PLUS_EXPR, \"unary_plus_expr\", tcc_unary, 1)\n-\n-/* New array creation expression.\n-   Operand 0 is the array base type.\n-   Operand 1 is the list of dimension expressions. \n-   Operand 2 is the number of other dimensions of unspecified range.\n-   Once patched, the node will bear the type of the created array.  */\n-DEFTREECODE (NEW_ARRAY_EXPR, \"new_array_expr\", tcc_expression, 3)\n-\n-/* New anonymous array creation expression.\n-   Operand 0 is the base type of the anonymous array.\n-   Operand 1 is the signature of the dimensions this array contains.\n-   Operand 2 is the anonymous array initializer.\n-   Once patched, the node will bear the type of the created array.  */\n-DEFTREECODE (NEW_ANONYMOUS_ARRAY_EXPR, \"new_anonymous_array\",\n-\t     tcc_expression, 3)\n-\n-/* New class creation expression.\n-   Operand 0 is the name of the class to be created\n-   Operand 1 is the argument list used to select a constructor.\n-   There is no operand 2.  That slot is used for the\n-   CALL_EXPR_RTL macro (see preexpand_calls).\n-   The type should be the one of the created class.  */\n-DEFTREECODE (NEW_CLASS_EXPR, \"new_class_expr\", tcc_expression, 3)\n-\n-/* Defines `this' as an expression.  */\n-DEFTREECODE (THIS_EXPR, \"this\", tcc_expression, 0)\n-\n /* A labeled block. Operand 0 is the label that will be generated to\n    mark the end of the block.  Operand 1 is the labeled block body.  */\n DEFTREECODE (LABELED_BLOCK_EXPR, \"labeled_block_expr\", tcc_expression, 2)\n@@ -49,57 +19,11 @@ DEFTREECODE (LABELED_BLOCK_EXPR, \"labeled_block_expr\", tcc_expression, 2)\n    LABELED_BLOCK_EXPR to exit.  */\n DEFTREECODE (EXIT_BLOCK_EXPR, \"exit_block_expr\", tcc_statement, 1)\n \n-/* Case statement expression.\n-   Operand 1 is the case value.  */\n-DEFTREECODE (CASE_EXPR, \"case\", tcc_expression, 1)\n-\n-/* Default statement expression. */\n-DEFTREECODE (DEFAULT_EXPR, \"default\", tcc_expression, 0)\n-\n /* Try expression\n    Operand 0 is the tried block,\n    Operand 1 contains chained catch nodes. */\n DEFTREECODE (TRY_EXPR, \"try-catch\", tcc_expression, 2)\n \n-/* Catch clause.\n-   Operand 0 is the catch clause block, which contains the declaration of\n-   the catch clause parameter.  */\n-DEFTREECODE (JAVA_CATCH_EXPR, \"catch\", tcc_unary, 1)\n-\n-/* Synchronized statement.\n-   Operand 0 is the expression on which we wish to synchronize,\n-   Operand 1 is the synchronized expression block.  */\n-DEFTREECODE (SYNCHRONIZED_EXPR, \"synchronized\", tcc_expression, 2)\n-\n-/* Throw statement.\n-   Operand 0 is the throw expression.  */\n-DEFTREECODE (THROW_EXPR, \"throw\", tcc_unary, 1)\n-\n-/* Conditional operator.\n-   Operand 0 is the condition expression\n-   Operand 1 is the then-value\n-   Operand 2 is the else-value.  */\n-DEFTREECODE (CONDITIONAL_EXPR, \"?:\", tcc_expression, 3)\n-\n-/* instanceof operator.\n-   Operand 0 is the expression that is getting tested\n-   Operand 1 is the class used for the test.  */\n-DEFTREECODE (INSTANCEOF_EXPR, \"instanceof\", tcc_expression, 2)\n-\n-/* Array initializers.\n-   Operand 0 is the (sub) array target to initialize, left to NULL_TREE\n-   when the node is created.\n-   Operand 1 is a CONSTRUCTOR node.  */\n-DEFTREECODE (NEW_ARRAY_INIT, \"new_array_init\", tcc_unary, 1)\n-\n-/* Class literal.\n-   Operand 0 is the name of the class we're trying to build a\n-   reference from.  */\n-DEFTREECODE (CLASS_LITERAL, \"class_literal\", tcc_unary, 1)\n-\n-/* The Java object within the exception object from the runtime.  */\n-DEFTREECODE (JAVA_EXC_OBJ_EXPR, \"java_exc_obj_expr\", tcc_expression, 0)\n-\n /* Annotates a tree node (usually an expression) with source location\n    information: a file name (EXPR_WFL_FILENAME);  a line number\n    (EXPR_WFL_LINENO); and column number (EXPR_WFL_COLNO).  It is"}, {"sha": "3b0f0f6760d990471be5de43f39409e56959933b", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 67, "deletions": 237, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,7 +1,7 @@\n /* Definitions for parsing and type checking for the GNU compiler for\n    the Java(TM) language.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -43,37 +43,15 @@ enum java_tree_code {\n struct JCF;\n \n /* Usage of TREE_LANG_FLAG_?:\n-   0: IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P (in IDENTIFIER_NODE)\n-      FOR_LOOP_P (in LOOP_EXPR)\n-      SUPPRESS_UNREACHABLE_ERROR (for other _EXPR nodes)\n-      ANONYMOUS_CLASS_P (in RECORD_TYPE)\n-      ARG_FINAL_P (in TREE_LIST)\n-   1: IS_A_CLASSFILE_NAME (in IDENTIFIER_NODE)\n-      COMPOUND_ASSIGN_P (in EXPR (binop_*))\n-      LOCAL_CLASS_P (in RECORD_TYPE)\n-      BLOCK_IS_IMPLICIT (in BLOCK)\n    2: QUALIFIED_P (in IDENTIFIER_NODE)\n-      PRIMARY_P (in EXPR_WITH_FILE_LOCATION)\n-      MODIFY_EXPR_FROM_INITIALIZATION_P (in MODIFY_EXPR)\n-      CLASS_METHOD_CHECKED_P (in RECORD_TYPE) \n       CLASS_FILE_P (in a TRANSLATION_UNIT_DECL in current_file_list)\n-   3: IS_AN_IMPORT_ON_DEMAND_P (in IDENTIFIER_NODE)\n-      RESOLVE_PACKAGE_NAME_P (in EXPR_WITH_FILE_LOCATION)\n-      SWITCH_HAS_DEFAULT (in SWITCH_EXPR)\n-      HAS_FINALIZER (in RECORD_TYPE)\n+   3: HAS_FINALIZER (in RECORD_TYPE)\n    4: IS_A_COMMAND_LINE_FILENAME_P (in IDENTIFIER_NODE)\n-      RESOLVE_TYPE_NAME_P (in EXPR_WITH_FILE_LOCATION)\n-      CALL_USING_SUPER (in CALL_EXPR)\n       IS_ARRAY_LENGTH_ACCESS (in INDIRECT_REF)\n    5: HAS_BEEN_ALREADY_PARSED_P (in IDENTIFIER_NODE)\n-      IS_BREAK_STMT_P (in EXPR_WITH_FILE_LOCATION)\n-      IS_CRAFTED_STRING_BUFFER_P (in CALL_EXPR)\n-      IS_INIT_CHECKED (in SAVE_EXPR)\n    6: CAN_COMPLETE_NORMALLY (in statement nodes)\n-      NESTED_FIELD_ACCESS_IDENTIFIER_P (in IDENTIFIER_NODE)\n \n    Usage of TYPE_LANG_FLAG_?:\n-   0: CLASS_ACCESS0_GENERATED_P (in RECORD_TYPE)\n    1: TYPE_ARRAY_P (in RECORD_TYPE).\n    2: CLASS_PARSED_P (in RECORD_TYPE).\n    3: CLASS_FROM_SOURCE_P (in RECORD_TYPE).\n@@ -124,10 +102,6 @@ struct JCF;\n   ? BINFO_TYPE (BINFO_BASE_BINFO (TYPE_BINFO (TYPE), 0)) \\\n   : NULL_TREE)\n \n-/* True if the class we are compiling is a .java source file;\n-   false if it is a .class bytecode file. */\n-extern int compiling_from_source;\n-\n /* The class defined by the actual (main) file we are compiling. */\n #define main_class \\\n   java_global_trees[JTI_MAIN_CLASS]\n@@ -221,9 +195,6 @@ extern int flag_store_check;\n /* When nonzero, generate only a limited set of class meta-data. */\n extern int flag_reduced_reflection;\n \n-/* Encoding used for source files.  */\n-extern const char *current_encoding;\n-\n /* The Java .class file that provides main_class;  the main input file. */\n extern GTY(()) struct JCF * current_jcf;\n \n@@ -243,6 +214,11 @@ typedef struct CPool constant_pool;\n \n #define CONSTANT_ResolvedFlag 16\n \n+/* Don't eagerly resolve this entry.  When this flag is set, constant\n+   pool entries are resolved only at runtime when the entry is first\n+   referred to.  */\n+#define CONSTANT_LazyFlag 32\n+\n /* The cpool->data[i] for a ResolvedString points to a STRING_CST. */\n #define CONSTANT_ResolvedString    (CONSTANT_String+CONSTANT_ResolvedFlag)\n \n@@ -332,15 +308,9 @@ enum java_tree_index\n   JTI_TYPE_IDENTIFIER_NODE,      \n   JTI_INIT_IDENTIFIER_NODE,      \n   JTI_CLINIT_IDENTIFIER_NODE,      \n-  JTI_FINIT_IDENTIFIER_NODE,      \n-  JTI_INSTINIT_IDENTIFIER_NODE,\n   JTI_VOID_SIGNATURE_NODE,       \n-  JTI_LENGTH_IDENTIFIER_NODE,  \n   JTI_FINALIZE_IDENTIFIER_NODE,\n   JTI_THIS_IDENTIFIER_NODE,  \n-  JTI_SUPER_IDENTIFIER_NODE,  \n-  JTI_CONTINUE_IDENTIFIER_NODE,  \n-  JTI_ACCESS0_IDENTIFIER_NODE, \n   JTI_CLASSDOLLAR_IDENTIFIER_NODE,\n   JTI_ONE_ELT_ARRAY_DOMAIN_TYPE,\n \n@@ -418,8 +388,6 @@ enum java_tree_index\n \n   JTI_NATIVECODE_PTR_ARRAY_TYPE_NODE,\n \n-  JTI_WFL_OPERATOR,\n-\n   JTI_MAIN_CLASS,\n   JTI_CURRENT_CLASS,\n   JTI_OUTPUT_CLASS,\n@@ -532,25 +500,12 @@ extern GTY(()) tree java_global_trees[JTI_MAX];\n   java_global_trees[JTI_INIT_IDENTIFIER_NODE]      /* \"<init>\" */\n #define clinit_identifier_node \\\n   java_global_trees[JTI_CLINIT_IDENTIFIER_NODE]      /* \"<clinit>\" */\n-#define finit_identifier_node \\\n-  java_global_trees[JTI_FINIT_IDENTIFIER_NODE]      /* \"finit$\" */\n-/* FIXME \"instinit$\" and \"finit$\" should be merged  */\n-#define instinit_identifier_node \\\n-  java_global_trees[JTI_INSTINIT_IDENTIFIER_NODE]  /* \"instinit$\" */\n #define void_signature_node \\\n   java_global_trees[JTI_VOID_SIGNATURE_NODE]       /* \"()V\" */\n-#define length_identifier_node \\\n-  java_global_trees[JTI_LENGTH_IDENTIFIER_NODE]  /* \"length\" */\n #define finalize_identifier_node \\\n   java_global_trees[JTI_FINALIZE_IDENTIFIER_NODE]  /* \"finalize\" */\n #define this_identifier_node \\\n   java_global_trees[JTI_THIS_IDENTIFIER_NODE]  /* \"this\" */\n-#define super_identifier_node \\\n-  java_global_trees[JTI_SUPER_IDENTIFIER_NODE]  /* \"super\" */\n-#define continue_identifier_node \\\n-  java_global_trees[JTI_CONTINUE_IDENTIFIER_NODE]  /* \"continue\" */\n-#define access0_identifier_node \\\n-  java_global_trees[JTI_ACCESS0_IDENTIFIER_NODE] /* \"access$0\" */\n #define classdollar_identifier_node \\\n   java_global_trees[JTI_CLASSDOLLAR_IDENTIFIER_NODE] /* \"class$\" */\n #define one_elt_array_domain_type \\\n@@ -703,14 +658,9 @@ extern GTY(()) tree java_global_trees[JTI_MAX];\n \n #define nativecode_ptr_type_node ptr_type_node\n \n-#define wfl_operator \\\n-  java_global_trees[JTI_WFL_OPERATOR]\n-\n /* The decl for \"_Jv_ResolvePoolEntry\".  */\n extern GTY(()) tree soft_resolvepoolentry_node;\n \n-extern const char *cyclic_inheritance_report;\n-\n struct lang_identifier GTY(())\n {\n   struct tree_identifier ignore;\n@@ -824,20 +774,6 @@ union lang_tree_node\n    in DECL.  */\n #define DECL_FUNCTION_INITIALIZED_CLASS_TABLE(DECL) \\\n   (DECL_LANG_SPECIFIC(DECL)->u.f.ict)\n-/* A list of all the static method calls in the method DECL (if optimizing).\n-   Actually each TREE_VALUE points to a COMPONT_EXPR that wraps the\n-   invocation so we can later patch it.  */\n-#define DECL_FUNCTION_STATIC_METHOD_INVOCATION_COMPOUND(DECL) \\\n-  (DECL_LANG_SPECIFIC(DECL)->u.f.smic)\n-/* The Number of Artificial Parameters (NAP) DECL contains. this$<n>\n-   is excluded, because sometimes created as a parameter before the\n-   function decl exists. */\n-#define DECL_FUNCTION_NAP(DECL) (DECL_LANG_SPECIFIC(DECL)->u.f.nap)\n-/* True if DECL is a synthetic ctor.  */\n-#define DECL_FUNCTION_SYNTHETIC_CTOR(DECL) \\\n-  (DECL_LANG_SPECIFIC(DECL)->u.f.synthetic_ctor)\n-#define DECL_FIXED_CONSTRUCTOR_P(DECL) \\\n-  (DECL_LANG_SPECIFIC(DECL)->u.f.fixed_ctor)\n \n #define DECL_LOCAL_CNI_METHOD_P(NODE) \\\n     (DECL_LANG_SPECIFIC (NODE)->u.f.local_cni)\n@@ -902,6 +838,7 @@ union lang_tree_node\n /* True if NODE is a final field. */\n #define FINAL_VARIABLE_P(NODE) (FIELD_FINAL (NODE) && !FIELD_STATIC (NODE))\n /* True if NODE is a class final field. */\n+#define FIELD_ENUM(DECL)\t    (DECL_LANG_SPECIFIC (DECL)->u.v.field_enum)\n #define CLASS_FINAL_VARIABLE_P(NODE) \\\n   (FIELD_FINAL (NODE) && FIELD_STATIC (NODE))\n /* True if NODE is a class initialization flag. This macro accesses\n@@ -971,21 +908,19 @@ struct lang_decl_func GTY(())\n   /* Initialized (static) Class Table */\n   htab_t GTY ((param_is (union tree_node))) ict;\n \n-  tree smic;\t\t\t/* Static method invocation compound */\n   tree inner_access;\t\t/* The identifier of the access method\n \t\t\t\t   used for invocation from inner classes */\n-  int nap;\t\t\t/* Number of artificial parameters */\n   unsigned int native : 1;\t/* Nonzero if this is a native method  */\n-  unsigned int synthetic_ctor : 1; /* Nonzero if this is a synthetic ctor */\n   unsigned int init_final : 1;\t/* Nonzero all finals are initialized */\n-  unsigned int fixed_ctor : 1;\n   unsigned int init_calls_this : 1;\n   unsigned int strictfp : 1;\n   unsigned int invisible : 1;\t/* Set for methods we generate\n \t\t\t\t   internally but which shouldn't be\n \t\t\t\t   written to the .class file.  */\n   unsigned int dummy : 1;\n   unsigned int local_cni : 1;\t/* Decl needs mangle_local_cni_method.  */\n+  unsigned int bridge : 1;\t/* Bridge method.  */\n+  unsigned int varargs : 1;\t/* Varargs method.  */\n };\n \n struct treetreehash_entry GTY(())\n@@ -994,7 +929,7 @@ struct treetreehash_entry GTY(())\n   tree value;\n };\n \n-/* These represent the possible assertion_code's that can be emitted in the\n+/* These represent the possible assertion_codes that can be emitted in the\n    type assertion table.  */\n enum\n {\n@@ -1003,6 +938,28 @@ enum\n   JV_ASSERT_IS_INSTANTIABLE = 2   /* Operand A is an instantiable class.  */\n };\n \n+/* Annotation types used in the reflection_data.  See\n+   java.lang.Class.getDeclaredAnnotations() in the runtime library for\n+   an example of how these are used.  */\n+\n+typedef enum\n+{\n+  JV_CLASS_ATTR,\n+  JV_METHOD_ATTR,\n+  JV_FIELD_ATTR,\n+  JV_DONE_ATTR\n+} jv_attr_type;\n+\n+typedef enum\n+{\n+  JV_INNER_CLASSES_KIND,\n+  JV_ENCLOSING_METHOD_KIND,\n+  JV_SIGNATURE_KIND,\n+  JV_ANNOTATIONS_KIND,\n+  JV_PARAMETER_ANNOTATIONS_KIND,\n+  JV_ANNOTATION_DEFAULT_KIND\n+} jv_attr_kind;\n+\n typedef struct type_assertion GTY(())\n {\n   int assertion_code; /* 'opcode' for the type of this assertion. */\n@@ -1031,6 +988,7 @@ struct lang_decl_var GTY(())\n   unsigned int local_slot : 1;\t/* Decl is a temporary in the stack frame.  */\n   unsigned int class_field : 1; /* Decl needs mangle_class_field.  */\n   unsigned int vtable : 1;\t/* Decl needs mangle_vtable.  */\n+  unsigned int field_enum:1;\t/* Field is an enum.  */\n };\n \n /* This is what 'lang_decl' really points to.  */\n@@ -1058,22 +1016,20 @@ struct lang_decl GTY(())\n      TYPE_LANG_SPECIFIC ((T))\t\t\t\\\n      = ggc_alloc_cleared (sizeof (struct lang_type));\n \n-#define TYPE_FINIT_STMT_LIST(T)  (TYPE_LANG_SPECIFIC (T)->finit_stmt_list)\n-#define TYPE_CLINIT_STMT_LIST(T) (TYPE_LANG_SPECIFIC (T)->clinit_stmt_list)\n-#define TYPE_II_STMT_LIST(T)     (TYPE_LANG_SPECIFIC (T)->ii_block)\n-\n #define TYPE_DUMMY(T)\t\t(TYPE_LANG_SPECIFIC(T)->dummy_class)\n \n /* The decl of the synthetic method `class$' used to handle `.class'\n    for non primitive types when compiling to bytecode. */\n \n #define TYPE_DOT_CLASS(T)        (TYPE_LANG_SPECIFIC (T)->dot_class)\n #define TYPE_PACKAGE_LIST(T)     (TYPE_LANG_SPECIFIC (T)->package_list)\n-#define TYPE_IMPORT_LIST(T)      (TYPE_LANG_SPECIFIC (T)->import_list)\n-#define TYPE_IMPORT_DEMAND_LIST(T) (TYPE_LANG_SPECIFIC (T)->import_demand_list)\n #define TYPE_PRIVATE_INNER_CLASS(T) (TYPE_LANG_SPECIFIC (T)->pic)\n #define TYPE_PROTECTED_INNER_CLASS(T) (TYPE_LANG_SPECIFIC (T)->poic)\n #define TYPE_STRICTFP(T) (TYPE_LANG_SPECIFIC (T)->strictfp)\n+#define TYPE_ENUM(T) \t\t(TYPE_LANG_SPECIFIC (T)->enum_class)\n+#define TYPE_SYNTHETIC(T)\t(TYPE_LANG_SPECIFIC (T)->synthetic)\n+#define TYPE_ANNOTATION(T)\t(TYPE_LANG_SPECIFIC (T)->annotation)\n+\n #define TYPE_USES_ASSERTIONS(T) (TYPE_LANG_SPECIFIC (T)->assertions)\n \n #define TYPE_ATABLE_METHODS(T)   (TYPE_LANG_SPECIFIC (T)->atable_methods)\n@@ -1096,22 +1052,21 @@ struct lang_decl GTY(())\n #define TYPE_ASSERTIONS(T)   \t (TYPE_LANG_SPECIFIC (T)->type_assertions)\n #define TYPE_PACKAGE(T)     \t (TYPE_LANG_SPECIFIC (T)->package)\n \n+#define TYPE_REFLECTION_DATA(T)\t (TYPE_LANG_SPECIFIC (T)->reflection_data)\n+#define TYPE_REFLECTION_DATASIZE(T)\t\t\t\t\t\\\n+\t\t\t\t(TYPE_LANG_SPECIFIC (T)->reflection_datasize)\n+\n struct lang_type GTY(())\n {\n   tree signature;\n   struct JCF *jcf;\n   struct CPool *cpool;\n   tree cpool_data_ref;\t\t/* Cached */\n-  tree finit_stmt_list;\t\t/* List of statements finit$ will use */\n-  tree clinit_stmt_list;\t/* List of statements <clinit> will use  */\n-  tree ii_block;\t\t/* Instance initializer block */\n   tree dot_class;\t\t/* The decl of the `class$' function that\n \t\t\t\t   needs to be invoked and generated when\n \t\t\t\t   compiling to bytecode to implement\n \t\t\t\t   <non_primitive_type>.class */\n   tree package_list;\t\t/* List of package names, progressive */\n-  tree import_list;\t\t/* Imported types, in the CU of this class */\n-  tree import_demand_list;\t/* Imported types, in the CU of this class */\n \n   tree otable_methods;          /* List of static decls referred to by this\n \t\t\t\t   class.  */\n@@ -1146,11 +1101,20 @@ struct lang_type GTY(())\n   tree package;\t\t\t/* IDENTIFIER_NODE for package this class is\n   \t\t\t\t   a member of.  */\n \n+  unsigned char* GTY((skip)) reflection_data;\t/* The raw reflection\n+\t\t\t\t\t\t   data for this\n+\t\t\t\t\t\t   class.  */\n+  long reflection_datasize;\t/* The size of the raw reflection data\n+\t\t\t\t   for this class, in bytes.  */\n+\n   unsigned pic:1;\t\t/* Private Inner Class. */\n   unsigned poic:1;\t\t/* Protected Inner Class. */\n   unsigned strictfp:1;\t\t/* `strictfp' class.  */\n   unsigned assertions:1;\t/* Any method uses `assert'.  */\n-  unsigned dummy_class:1;\t\t/* Not a real class, just a placeholder.  */\n+  unsigned dummy_class:1;\t/* Not a real class, just a placeholder.  */\n+  unsigned enum_class:1;\t/* Class is an enum type.  */\n+  unsigned synthetic:1;\t\t/* Class is synthetic.  */\n+  unsigned annotation:1;\t/* Class is an annotation type.  */\n };\n \n #define JCF_u4 unsigned long\n@@ -1294,8 +1258,9 @@ extern void lang_init_source (int);\n extern void write_classfile (tree);\n extern char *print_int_node (tree);\n extern void finish_class (void);\n-extern void java_layout_seen_class_methods (void);\n extern void check_for_initialization (tree, tree);\n+extern struct CPool *cpool_for_class (tree);\n+extern int find_class_or_string_constant (struct CPool *, int, tree);\n \n extern tree pushdecl_top_level (tree);\n extern tree pushdecl_function_level (tree);\n@@ -1362,10 +1327,7 @@ extern tree get_boehm_type_descriptor (tree);\n extern bool uses_jv_markobj_p (tree);\n extern bool class_has_finalize_method (tree);\n extern void java_check_methods (tree);\n-extern void init_jcf_parse (void);\n-extern void init_src_parse (void);\n \n-extern int cxx_keyword_p (const char *, int);\n extern void java_mangle_decl (tree);\n extern tree java_mangle_class_field (struct obstack *, tree);\n extern tree java_mangle_vtable (struct obstack *, tree);\n@@ -1403,6 +1365,10 @@ extern void gen_indirect_dispatch_tables (tree type);\n extern int split_qualified_name (tree *left, tree *right, tree source);\n extern int in_same_package (tree, tree);\n \n+extern void java_read_sourcefilenames (const char *fsource_filename);\n+\n+extern void rewrite_reflection_indexes (void *);\n+\n #define DECL_FINAL(DECL) DECL_LANG_FLAG_3 (DECL)\n \n /* Access flags etc for a method (a FUNCTION_DECL): */\n@@ -1422,6 +1388,10 @@ extern int in_same_package (tree, tree);\n   (DECL_LANG_SPECIFIC (FUNCTION_DECL_CHECK (DECL))->u.f.strictfp)\n #define METHOD_INVISIBLE(DECL) \\\n   (DECL_LANG_SPECIFIC (FUNCTION_DECL_CHECK (DECL))->u.f.invisible)\n+#define METHOD_BRIDGE(DECL) \\\n+  (DECL_LANG_SPECIFIC (FUNCTION_DECL_CHECK (DECL))->u.f.bridge)\n+#define METHOD_VARARGS(DECL) \\\n+  (DECL_LANG_SPECIFIC (FUNCTION_DECL_CHECK (DECL))->u.f.varargs)\n \n #define CLASS_FILE_P(NODE) TREE_LANG_FLAG_3 (NODE)\n \n@@ -1430,17 +1400,13 @@ extern int in_same_package (tree, tree);\n #define DECL_CONSTRUCTOR_P(DECL) DECL_LANG_FLAG_7 (FUNCTION_DECL_CHECK (DECL))\n \n #define DECL_INIT_P(DECL)   (ID_INIT_P (DECL_NAME (DECL)))\n-#define DECL_FINIT_P(DECL)  (ID_FINIT_P (DECL_NAME (DECL)))\n #define DECL_CLINIT_P(DECL) (ID_CLINIT_P (DECL_NAME (DECL)))\n-#define DECL_INSTINIT_P(DECL) (ID_INSTINIT_P (DECL_NAME (DECL)))\n \n /* Predicates on method identifiers. Kept close to other macros using\n    them  */\n #define ID_INIT_P(ID)   ((ID) == init_identifier_node)\n-#define ID_FINIT_P(ID)  ((ID) == finit_identifier_node)\n #define ID_CLINIT_P(ID) ((ID) == clinit_identifier_node)\n #define ID_CLASSDOLLAR_P(ID) ((ID) == classdollar_identifier_node)\n-#define ID_INSTINIT_P(ID) ((ID) == instinit_identifier_node)\n \n /* Access flags etc for variable/field (FIELD_DECL, VAR_DECL, or PARM_DECL): */\n \n@@ -1463,7 +1429,10 @@ extern int in_same_package (tree, tree);\n #define CLASS_PRIVATE(DECL)\t(TYPE_PRIVATE_INNER_CLASS (TREE_TYPE (DECL)))\n #define CLASS_PROTECTED(DECL)\t(TYPE_PROTECTED_INNER_CLASS (TREE_TYPE (DECL)))\n #define CLASS_STRICTFP(DECL)\t(TYPE_STRICTFP (TREE_TYPE (DECL)))\n+#define CLASS_ENUM(DECL)\t(TYPE_ENUM (TREE_TYPE (DECL)))\n #define CLASS_USES_ASSERTIONS(DECL) (TYPE_USES_ASSERTIONS (TREE_TYPE (DECL)))\n+#define CLASS_SYNTHETIC(DECL)   (TYPE_SYNTHETIC (TREE_TYPE (DECL)))\n+#define CLASS_ANNOTATION(DECL)  (TYPE_ANNOTATION (TREE_TYPE (DECL)))\n \n /* @deprecated marker flag on methods, fields and classes */\n \n@@ -1527,16 +1496,6 @@ extern int linenumber_count;\n /* In a type map means the type the address subroutine return address. */\n #define TYPE_RETURN_ADDR return_address_type_node\n \n-/* In a subroutine's return type map, indicates that the slot was neither\n-   used nor set in the subroutine. */\n-#define TYPE_UNUSED error_mark_node\n-\n-/* When returned from pop_type_0, indicates stack underflow. */\n-#define TYPE_UNDERFLOW integer_zero_node\n-\n-/* When returned from pop_type_0, indicates a type mismatch. */\n-#define TYPE_UNEXPECTED NULL_TREE\n-\n /* A array mapping variable/stack slot index to the type current\n    in that variable/stack slot.\n    TYPE_UNKNOWN, TYPE_SECOND, and TYPE_NULL are special cases. */\n@@ -1549,9 +1508,6 @@ extern tree *type_map;\n #define TYPE_IS_WIDE(TYPE) \\\n   ((TYPE) == double_type_node || (TYPE) == long_type_node)\n \n-/* True iif CLASS has it's access$0 method generated.  */\n-#define CLASS_ACCESS0_GENERATED_P(CLASS) TYPE_LANG_FLAG_0 (CLASS)\n-\n /* True iff TYPE is a Java array type. */\n #define TYPE_ARRAY_P(TYPE) TYPE_LANG_FLAG_1 (TYPE)\n \n@@ -1588,119 +1544,32 @@ extern tree *type_map;\n    layout of a class.  */\n #define CLASS_BEING_LAIDOUT(TYPE) TYPE_LANG_FLAG_6 (TYPE)\n \n-/* True if class TYPE has a field initializer finit$ function */\n-#define CLASS_HAS_FINIT_P(TYPE) TYPE_FINIT_STMT_LIST (TYPE)\n-\n-/* True if identifier ID was seen while processing a single type import stmt */\n-#define IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P(ID) TREE_LANG_FLAG_0 (ID)\n-\n-/* True if identifier ID was seen while processing an import statement */\n-#define IS_A_CLASSFILE_NAME(ID) TREE_LANG_FLAG_1 (ID)\n-\n /* True if ID is a qualified named (contains . or /) */\n #define QUALIFIED_P(ID) TREE_LANG_FLAG_2 (ID)\n \n-/* True if ID is an already processed import on demand */\n-#define IS_AN_IMPORT_ON_DEMAND_P(ID) TREE_LANG_FLAG_3 (ID)\n-\n /* True if ID is a command-line specified filename */\n #define IS_A_COMMAND_LINE_FILENAME_P(ID) TREE_LANG_FLAG_4 (ID)\n \n /* True if filename ID has already been parsed */\n #define HAS_BEEN_ALREADY_PARSED_P(ID) TREE_LANG_FLAG_5 (ID)\n \n-/* True if EXPR is RHS sub-tree of a compound assign expression */\n-#define COMPOUND_ASSIGN_P(EXPR) TREE_LANG_FLAG_1 (EXPR)\n-\n-/* True if a SWITCH_EXPR has a DEFAULT_EXPR. */\n-#define SWITCH_HAS_DEFAULT(NODE) TREE_LANG_FLAG_3 (SWITCH_EXPR_CHECK (NODE))\n-\n-/* True if EXPR (a WFL in that case) was created after the\n-   reduction of PRIMARY . XXX */\n-#define PRIMARY_P(EXPR) TREE_LANG_FLAG_2 (EXPR_CHECK (EXPR))\n-\n-/* True if EXPR (a MODIFY_EXPR in that case) is the result of variable\n-   initialization during its declaration */\n-#define MODIFY_EXPR_FROM_INITIALIZATION_P(EXPR) \\\n-  TREE_LANG_FLAG_2 (MODIFY_EXPR_CHECK (EXPR))\n-\n-/* True if EXPR (a TREE_TYPE denoting a class type) has its methods\n-   already checked (for redefinitions, etc, see java_check_regular_methods.) */\n-#define CLASS_METHOD_CHECKED_P(EXPR) TREE_LANG_FLAG_2 (EXPR)\n-\n /* True if TYPE (a TREE_TYPE denoting a class type) was found to\n    feature a finalizer method. */\n #define HAS_FINALIZER_P(EXPR) TREE_LANG_FLAG_3 (EXPR)\n \n-/* True if EXPR (a LOOP_EXPR in that case) is part of a for statement */\n-#define FOR_LOOP_P(EXPR) TREE_LANG_FLAG_0 (EXPR_CHECK (EXPR))\n-\n-/* True if NODE (a RECORD_TYPE in that case) is an anonymous class.  */\n-#define ANONYMOUS_CLASS_P(NODE) TREE_LANG_FLAG_0 (RECORD_TYPE_CHECK (NODE))\n-\n-/* True if NODE (a RECORD_TYPE in that case) is a block local class.  */\n-#define LOCAL_CLASS_P(NODE) TREE_LANG_FLAG_1 (RECORD_TYPE_CHECK (NODE))\n-\n-/* True if NODE (a TREE_LIST) hold a pair of argument name/type\n-   declared with the final modifier */\n-#define ARG_FINAL_P(NODE) TREE_LANG_FLAG_0 (TREE_LIST_CHECK (NODE))\n-\n-/* True if NODE (some kind of EXPR, but not a WFL) should not give an\n-   error if it is found to be unreachable.  This can only be applied\n-   to those EXPRs which can be used as the update expression of a\n-   `for' loop.  In particular it can't be set on a LOOP_EXPR.  */\n-#define SUPPRESS_UNREACHABLE_ERROR(NODE) TREE_LANG_FLAG_0 (EXPR_CHECK (NODE))\n-\n-/* True if EXPR (a WFL in that case) resolves into a package name */\n-#define RESOLVE_PACKAGE_NAME_P(WFL) TREE_LANG_FLAG_3 (EXPR_CHECK (WFL))\n-\n-/* True if EXPR (a WFL in that case) resolves into a type name */\n-#define RESOLVE_TYPE_NAME_P(WFL) TREE_LANG_FLAG_4 (EXPR_CHECK (WFL))\n-\n-/* True if STMT (a WFL in that case) holds a BREAK statement */\n-#define IS_BREAK_STMT_P(WFL) TREE_LANG_FLAG_5 (WFL)\n-\n-/* True if EXPR (a CALL_EXPR in that case) is a crafted StringBuffer */\n-#define IS_CRAFTED_STRING_BUFFER_P(EXPR) TREE_LANG_FLAG_5 (EXPR)\n-\n-/* True if EXPR (a SAVE_EXPR in that case) had its content already\n-   checked for (un)initialized local variables.  */\n-#define IS_INIT_CHECKED(EXPR) TREE_LANG_FLAG_5 (SAVE_EXPR_CHECK (EXPR))\n-\n-/* If set in CALL_EXPR, the receiver is 'super'. */\n-#define CALL_USING_SUPER(EXPR) TREE_LANG_FLAG_4 (EXPR_CHECK (EXPR))\n-\n /* True if NODE (a statement) can complete normally. */\n #define CAN_COMPLETE_NORMALLY(NODE) TREE_LANG_FLAG_6 (NODE)\n \n-/* True if NODE (an IDENTIFIER) bears the name of an outer field from\n-   inner class (or vice versa) access function.  */\n-#define NESTED_FIELD_ACCESS_IDENTIFIER_P(NODE) \\\n-  TREE_LANG_FLAG_6 (IDENTIFIER_NODE_CHECK (NODE))\n-\n /* True if NODE belongs to an inner class TYPE_DECL node.\n    Verifies that NODE as the attributes of a decl.  */\n #define INNER_CLASS_DECL_P(NODE) (TYPE_NAME (TREE_TYPE (NODE)) == NODE\t\\\n \t\t\t\t  && DECL_CONTEXT (NODE))\n \n-/* True if NODE is a top level class TYPE_DECL node: NODE isn't\n-   an inner class or NODE is a static class.  */\n-#define TOPLEVEL_CLASS_DECL_P(NODE) (!INNER_CLASS_DECL_P (NODE) \t\\\n-\t\t\t\t     || CLASS_STATIC (NODE))\n-\n-/* True if the class decl NODE was declared in an inner scope and is\n-   not a toplevel class */\n-#define PURE_INNER_CLASS_DECL_P(NODE) \\\n-  (INNER_CLASS_DECL_P (NODE) && !CLASS_STATIC (NODE))\n-\n /* True if NODE belongs to an inner class RECORD_TYPE node. Checks\n    that TYPE_NAME bears a decl. An array type wouldn't.  */\n #define INNER_CLASS_TYPE_P(NODE) (TREE_CODE (TYPE_NAME (NODE)) == TYPE_DECL \\\n \t\t\t\t  && DECL_CONTEXT (TYPE_NAME (NODE)))\n \n-#define TOPLEVEL_CLASS_TYPE_P(NODE) (!INNER_CLASS_TYPE_P (NODE) \t\\\n-\t\t\t\t     || CLASS_STATIC (TYPE_NAME (NODE)))\n-\n /* True if the class type NODE was declared in an inner scope and is\n    not a toplevel class */\n #define PURE_INNER_CLASS_TYPE_P(NODE) \\\n@@ -1782,33 +1651,9 @@ extern tree *type_map;\n #define FINISH_RECORD_CONSTRUCTOR(CONS) \\\n   VEC_pop (constructor_elt, CONSTRUCTOR_ELTS (CONS))\n \n-/* Macros on constructors invocations.  */\n-#define CALL_CONSTRUCTOR_P(NODE)\t\t\\\n-  (TREE_CODE (NODE) == NEW_CLASS_EXPR || CALL_EXPLICIT_CONSTRUCTOR_P (NODE))\n-\n-#define CALL_EXPLICIT_CONSTRUCTOR_P(NODE)\t\t\t\t\\\n-  (CALL_THIS_CONSTRUCTOR_P (NODE) || CALL_SUPER_CONSTRUCTOR_P (NODE))\n-\n-#define CALL_THIS_CONSTRUCTOR_P(NODE)\t\t\t\t\t\\\n-  (TREE_CODE (NODE) == CALL_EXPR\t\t\t\t\t\\\n-   && EXPR_WFL_NODE (TREE_OPERAND (NODE, 0)) == this_identifier_node)\n-\n-#define CALL_SUPER_CONSTRUCTOR_P(NODE)\t\t\t\t\t\\\n-  (TREE_CODE (NODE) == CALL_EXPR\t\t\t\t\t\\\n-   && EXPR_WFL_NODE (TREE_OPERAND (NODE, 0)) == super_identifier_node)\n-\n-/* Using a FINALLY_EXPR node */\n-#define FINALLY_EXPR_LABEL(NODE) TREE_OPERAND (FINALLY_EXPR_CHECK (NODE), 0)\n-#define FINALLY_EXPR_BLOCK(NODE) TREE_OPERAND (FINALLY_EXPR_CHECK (NODE), 1)\n-\n #define BLOCK_EXPR_DECLS(NODE)  BLOCK_VARS(NODE)\n #define BLOCK_EXPR_BODY(NODE)   BLOCK_SUBBLOCKS(NODE)\n \n-/* True for an implicit block surrounding declaration not at start of {...}. */\n-#define BLOCK_IS_IMPLICIT(NODE) TREE_LANG_FLAG_1 (BLOCK_CHECK (NODE))\n-#define BLOCK_EMPTY_P(NODE) \\\n-  (TREE_CODE (NODE) == BLOCK && BLOCK_EXPR_BODY (NODE) == empty_stmt_node)\n-\n #define BUILD_MONITOR_ENTER(WHERE, ARG)\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n     (WHERE) = build3 (CALL_EXPR, int_type_node,\t\t\t\t\\\n@@ -1827,25 +1672,10 @@ extern tree *type_map;\n     TREE_SIDE_EFFECTS (WHERE) = 1;\t\t\t\t\\\n   }\n \n-/* Nonzero if TYPE is an unchecked exception */\n-#define IS_UNCHECKED_EXCEPTION_P(TYPE)\t\t\t\t\\\n-  (inherits_from_p ((TYPE), runtime_exception_type_node)\t\\\n-   || inherits_from_p ((TYPE), error_exception_type_node))\n-\n /* True when we can perform static class initialization optimization */\n #define STATIC_CLASS_INIT_OPT_P() \\\n   (flag_optimize_sci && (optimize >= 2) && ! flag_emit_class_files)\n \n-extern int java_error_count;\n-\n-/* Make the current function where this macro is invoked report error\n-   messages and and return, if any */\n-#define java_parse_abort_on_error()\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-     if (java_error_count > save_error_count)\t\t\t\t\\\n-       return;\t\t\t\t\t\t\t\t\\\n-   }\n-\n /* These are the possible values for the `state' field of the class\n    structure.  This must be kept in sync with libgcj.  */\n enum\n@@ -1913,6 +1743,6 @@ extern tree build_expr_wfl (tree, const char *, int, int);\n extern void java_genericize (tree);\n extern int java_gimplify_expr (tree *, tree *, tree *);\n \n-extern tree extract_field_decl (tree);\n+extern FILE *finput;\n \n #endif /* ! GCC_JAVA_TREE_H */"}, {"sha": "63c7d235c50d3d190e7f8abd82a6bb65396b234b", "filename": "gcc/java/jcf-depend.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-depend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-depend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-depend.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Functions for handling dependency tracking when reading .class files.\n \n-   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2006 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -100,7 +100,7 @@ jcf_dependency_set_dep_file (const char *name)\n }\n \n void\n-jcf_dependency_add_file (const char *filename, int system_p)\n+jcf_dependency_add_file (const char *filename ATTRIBUTE_UNUSED, int system_p)\n {\n   if (! dependencies)\n     return;\n@@ -109,7 +109,10 @@ jcf_dependency_add_file (const char *filename, int system_p)\n   if (system_p && ! system_files)\n     return;\n \n-  deps_add_dep (dependencies, filename);\n+\n+  /* FIXME: Don't emit any dependencies.  In many cases we'll just see\n+     temporary files emitted by ecj... */\n+  /* deps_add_dep (dependencies, filename); */\n }\n \n void"}, {"sha": "66c2515c3d5d5ae0a04e4eae43aff2a4a3072bbd", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 234, "deletions": 2, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -96,6 +96,7 @@ int flag_javap_compatible = 0;\n \n static void print_access_flags (FILE *, uint16, char);\n static void print_constant_terse (FILE*, JCF*, int, int);\n+static void print_constant_terse_with_index (FILE *, JCF *, int, int);\n static void print_constant (FILE *, JCF *, int, int);\n static void print_constant_ref (FILE *, JCF *, int);\n static void disassemble_method (JCF*, const unsigned char *, int);\n@@ -109,6 +110,11 @@ static void process_class (struct JCF *);\n static void print_constant_pool (struct JCF *);\n static void print_exception_table (struct JCF *, const unsigned char *entries,\n \t\t\t\t   int);\n+static void indent (FILE *, int);\n+static void print_element_value (FILE *, JCF *, int);\n+static void print_annotation (FILE *, JCF *, int);\n+static void print_annotations (FILE *, JCF *, int);\n+static void print_parameter_annotations (FILE *, JCF *, int);\n \n #define PRINT_SIGNATURE_RESULT_ONLY 1\n #define PRINT_SIGNATURE_ARGS_ONLY 2\n@@ -184,7 +190,7 @@ utf8_equal_string (JCF *jcf, int index, const char * value)\n     { fprintf (out, \"Field name:\"); \\\n       print_constant_terse (out, jcf, NAME, CONSTANT_Utf8); \\\n       print_access_flags (out, ACCESS_FLAGS, 'f'); \\\n-      fprintf (out, \" Signature: \"); \\\n+      fprintf (out, \" Descriptor: \"); \\\n       if (flag_print_constant_pool) \\\n         fprintf (out, \"%d=\", SIGNATURE); \\\n       print_signature (out, jcf, SIGNATURE, 0); \\\n@@ -227,7 +233,7 @@ utf8_equal_string (JCF *jcf, int index, const char * value)\n \t  fprintf (out, \"\\nMethod name:\"); \\\n \t  print_constant_terse (out, jcf, NAME, CONSTANT_Utf8); \\\n \t  print_access_flags (out, ACCESS_FLAGS, 'm'); \\\n-\t  fprintf (out, \" Signature: \"); \\\n+\t  fprintf (out, \" Descriptor: \"); \\\n \t  if (flag_print_constant_pool) \\\n \t    fprintf (out, \"%d=\", SIGNATURE); \\\n \t  print_signature (out, jcf, SIGNATURE, 0); \\\n@@ -295,6 +301,26 @@ utf8_equal_string (JCF *jcf, int index, const char * value)\n     print_signature (out, jcf, signature_index, 0); \\\n     fprintf (out, \" (pc: %d length: %d)\\n\", start_pc, length); }}\n \n+#define HANDLE_LOCALVARIABLETYPETABLE_ATTRIBUTE(COUNT)\t\t\t\\\n+{ int n = (COUNT); int i;\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(JCF, attribute_name, attribute_length);\t\\\n+  fprintf (out, \", count: %d\\n\", n);\t\t\t\t\t\\\n+  for (i = 0; i < n; i++) {\t\t\t\t\t\t\\\n+    int start_pc = JCF_readu2 (jcf);\t\t\t\t\t\\\n+    int length = JCF_readu2 (jcf);\t\t\t\t\t\\\n+    int name_index = JCF_readu2 (jcf);\t\t\t\t\t\\\n+    int signature_index = JCF_readu2 (jcf);\t\t\t\t\\\n+    int slot = JCF_readu2 (jcf);\t\t\t\t\t\\\n+    fprintf (out, \"  slot#%d: name: \", slot);\t\t\t\t\\\n+    if (flag_print_constant_pool)\t\t\t\t\t\\\n+      fprintf (out, \"%d=\", name_index);\t\t\t\t\t\\\n+    print_name (out, jcf, name_index);\t\t\t\t\t\\\n+    fprintf (out, \", type: \");\t\t\t\t\t\t\\\n+    if (flag_print_constant_pool)\t\t\t\t\t\\\n+      fprintf (out, \"%d=\", signature_index);\t\t\t\t\\\n+    print_signature (out, jcf, signature_index, 0);\t\t\t\\\n+    fprintf (out, \" (pc: %d length: %d)\\n\", start_pc, length); }}\n+\n #define HANDLE_LINENUMBERTABLE_ATTRIBUTE(COUNT) \\\n { int n = (COUNT); int i; \\\n   COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length); \\\n@@ -357,6 +383,60 @@ utf8_equal_string (JCF *jcf, int index, const char * value)\n   for (i = 0;  i < n;  i++) { c = JCF_readu(jcf); fputc(c, out); } \\\n   if (c != '\\r' && c != '\\n') fputc('\\n', out); }\n \n+#define HANDLE_ENCLOSINGMETHOD_ATTRIBUTE()\t\t\t\t\\\n+  { uint16 class_index, method_index;\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  class_index = JCF_readu2 (jcf);\t\t\t\t\t\\\n+  method_index = JCF_readu2 (jcf);\t\t\t\t\t\\\n+  fprintf (out, \"\\n  Class: \");\t\t\t\t\t\t\\\n+  print_constant_terse_with_index (out, jcf, class_index, CONSTANT_Class); \\\n+  fprintf (out, \"\\n  Method: \");\t\t\t\t\t\\\n+  print_constant_terse_with_index (out, jcf, method_index,\t\t\\\n+\t\t\t\t   CONSTANT_NameAndType);\t\t\\\n+  fputc ('\\n', out);\t\t\t\t\t\t\t\\\n+}\n+\n+#define HANDLE_SIGNATURE_ATTRIBUTE()\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  uint16 signature;\t\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  signature = JCF_readu2 (jcf);\t\t\t\t\t\t\\\n+  fprintf (out, \"\\n  Value: \");\t\t\t\t\t\t\\\n+  print_constant_terse_with_index (out, jcf, signature, CONSTANT_Utf8);\t\\\n+  fputc ('\\n', out);\t\t\t\t\t\t\t\\\n+}\n+\n+#define HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE()\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  print_annotations (out, jcf, 1);\t\t\t\t\t\\\n+}\n+\n+#define HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE()\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  print_annotations (out, jcf, 1);\t\t\t\t\t\\\n+}\n+\n+#define HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE()\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  print_parameter_annotations (out, jcf, 1);\t\t\t\t\\\n+}\n+\n+#define HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE()\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  print_parameter_annotations (out, jcf, 1);\t\t\t\t\\\n+}\n+\n+#define HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE()\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  COMMON_HANDLE_ATTRIBUTE(jcf, attribute_name, attribute_length);\t\\\n+  print_element_value (out, jcf, 1);\t\t\t\t\t\\\n+}\n+\n+\n #define PROCESS_OTHER_ATTRIBUTE(JCF, INDEX, LENGTH) \\\n { COMMON_HANDLE_ATTRIBUTE(JCF, INDEX, LENGTH); \\\n   fputc ('\\n', out); JCF_SKIP (JCF, LENGTH); }\n@@ -367,6 +447,158 @@ utf8_equal_string (JCF *jcf, int index, const char * value)\n \n #include \"javaop.h\"\n \n+\f\n+\n+static void\n+indent (FILE *stream, int level)\n+{\n+  int i;\n+  for (i = 0; i < level; ++i)\n+    fprintf (stream, \"  \");\n+}\n+\n+static void\n+print_element_value (FILE *stream, JCF *jcf, int level)\n+{\n+  uint8 tag = JCF_readu (jcf);\n+  indent (stream, level);\n+  switch (tag)\n+    {\n+    case 'B':\n+    case 'C':\n+    case 'S':\n+    case 'Z':\n+    case 'I':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tprint_constant_terse_with_index (stream, jcf, cindex,\n+\t\t\t\t\t CONSTANT_Integer);\n+      }\n+      break;\n+    case 'D':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tprint_constant_terse_with_index (stream, jcf, cindex,\n+\t\t\t\t\t CONSTANT_Double);\n+      }\n+      break;\n+    case 'F':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tprint_constant_terse_with_index (stream, jcf, cindex,\n+\t\t\t\t\t CONSTANT_Float);\n+      }\n+      break;\n+    case 'J':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tprint_constant_terse_with_index (stream, jcf, cindex,\n+\t\t\t\t\t CONSTANT_Long);\n+      }\n+      break;\n+    case 's':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\t/* Despite what the JVM spec says, compilers generate a Utf8\n+\t   constant here, not a String.  */\n+\tprint_constant_terse_with_index (stream, jcf, cindex,\n+\t\t\t\t\t CONSTANT_Utf8);\n+      }\n+      break;\n+\n+    case 'e':\n+      {\n+\tuint16 type_name_index = JCF_readu2 (jcf);\n+\tuint16 const_name_index = JCF_readu2 (jcf);\n+\tfprintf (stream, \"enum class: \");\n+\tprint_constant_terse_with_index (stream, jcf, type_name_index,\n+\t\t\t\t\t CONSTANT_Utf8);\n+\tfprintf (stream, \"\\n\");\n+\tindent (stream, level);\n+\tfprintf (stream, \"Field: \");\n+\tprint_constant_terse_with_index (stream, jcf, const_name_index,\n+\t\t\t\t\t CONSTANT_Utf8);\n+      }\n+      break;\n+    case 'c':\n+      {\n+\tuint16 class_info_index = JCF_readu2 (jcf);\n+\tprint_constant_terse_with_index (stream, jcf, class_info_index,\n+\t\t\t\t\t CONSTANT_Utf8);\n+      }\n+      break;\n+    case '@':\n+      {\n+\tfprintf (stream, \"Annotation:\\n\");\n+\tprint_annotation (stream, jcf, level + 1);\n+      }\n+      break;\n+    case '[':\n+      {\n+\tuint16 n_array_elts = JCF_readu2 (jcf);\n+\tfprintf (stream, \"array[%d]: [\\n\", (int) n_array_elts);\n+\twhile (n_array_elts--)\n+\t  print_element_value (stream, jcf, level + 1);\n+\tindent (stream, level);\n+\tfprintf (stream, \"]\");\n+      }\n+      break;\n+    default:\n+      fprintf (stream, \"Unexpected tag value: %d\", (int) tag);\n+      break;\n+    }\n+  fputc ('\\n', stream);\n+}\n+\n+static void\n+print_annotation (FILE *stream, JCF *jcf, int level)\n+{\n+  uint16 type_index = JCF_readu2 (jcf);\n+  uint16 npairs = JCF_readu2 (jcf);\n+  fprintf (stream, \"\\n\");\n+  indent (stream, level);\n+  fprintf (stream, \"Annotation name: \");\n+  print_constant_terse_with_index (stream, jcf, type_index,\n+\t\t\t\t   CONSTANT_Utf8);\n+  if (npairs)\n+    {\n+      fprintf (stream, \"\\n\");\n+      while (npairs--)\n+\t{\n+\t  uint16 name_index = JCF_readu2 (jcf);\n+\t  indent (stream, level + 1);\n+\t  fprintf (stream, \"Name: \");\n+\t  print_constant_terse_with_index (stream, jcf, name_index,\n+\t\t\t\t\t   CONSTANT_Utf8);\n+\t  fprintf (stream, \"\\n\");\n+\t  print_element_value (stream, jcf, level + 2);\n+\t}\n+    }\n+}\n+\n+static void\n+print_annotations (FILE *stream, JCF *jcf, int level)\n+{\n+  uint16 num = JCF_readu2 (jcf);\n+  while (num--)\n+    print_annotation (stream, jcf, level);\n+}\n+\n+static void\n+print_parameter_annotations (FILE *stream, JCF *jcf, int level)\n+{\n+  uint8 nparams = JCF_readu (jcf);\n+  uint8 i;\n+  for (i = 0; i < nparams; ++i)\n+    {\n+      indent (stream, level);\n+      fprintf (stream, \"Parameter annotations (%d):\\n\", (int) i);\n+      print_annotations (stream, jcf, level + 1);\n+    }\n+}\n+\n+\f\n+\n static void\n print_constant_ref (FILE *stream, JCF *jcf, int index)\n {"}, {"sha": "426b2532b128694a6f44e5053d06b38099264ef7", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,5 +1,5 @@\n /* Utility routines for finding and reading Java(TM) .class files.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -450,6 +450,9 @@ find_class (const char *classname, int classname_length, JCF *jcf,\n   char *buffer;\n   hashval_t hash;\n \n+  /* FIXME: ecj hack.  */\n+  source_ok = 0;\n+\n   /* Create the hash table, if it does not already exist.  */\n   if (!memoized_class_lookups)\n     memoized_class_lookups = htab_create (37, "}, {"sha": "079228e8954ebffbc7b1dd1667f7dbbc646df5f5", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 847, "deletions": 116, "changes": 963, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Parser for Java(TM) .class files.\n-   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -35,6 +35,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"flags.h\"\n #include \"java-except.h\"\n #include \"input.h\"\n+#include \"javaop.h\"\n #include \"java-tree.h\"\n #include \"toplev.h\"\n #include \"parse.h\"\n@@ -43,6 +44,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"assert.h\"\n #include \"tm_p.h\"\n #include \"cgraph.h\"\n+#include \"vecprim.h\"\n \n #ifdef HAVE_LOCALE_H\n #include <locale.h>\n@@ -89,23 +91,32 @@ static location_t file_start_location;\n /* The Java archive that provides main_class;  the main input file. */\n static GTY(()) struct JCF * main_jcf;\n \n+/* The number of source files passd to us by -fsource-filename and an\n+   array of pointers to each name.  Used by find_sourcefile().  */\n+static int num_files = 0;\n+static char **filenames;\n+\n static struct ZipFile *localToFile;\n \n+/* A map of byte offsets in the reflection data that are fields which\n+   need renumbering.  */\n+bitmap field_offsets;\n+bitmap_obstack bit_obstack;\n+\n /* Declarations of some functions used here.  */\n-static void handle_innerclass_attribute (int count, JCF *);\n+static void handle_innerclass_attribute (int count, JCF *, int len);\n static tree give_name_to_class (JCF *jcf, int index);\n static char *compute_class_name (struct ZipDirectory *zdir);\n static int classify_zip_file (struct ZipDirectory *zdir);\n static void parse_zip_file_entries (void);\n static void process_zip_dir (FILE *);\n-static void parse_source_file_1 (tree, const char *, FILE *);\n-static void parse_source_file_2 (void);\n-static void parse_source_file_3 (void);\n static void parse_class_file (void);\n static void handle_deprecated (void);\n static void set_source_filename (JCF *, int);\n static void jcf_parse (struct JCF*);\n static void load_inner_classes (tree);\n+static void handle_annotation (JCF *jcf, int level);\n+static void java_layout_seen_class_methods (void);\n \n /* Handle \"Deprecated\" attribute.  */\n static void\n@@ -124,6 +135,181 @@ handle_deprecated (void)\n     }\n }\n \n+\f\n+\n+/* Reverse a string.  */\n+static char *\n+reverse (const char *s)\n+{\n+  if (s == NULL)\n+    return NULL;\n+  else\n+    {\n+      int len = strlen (s);\n+      char *d = xmalloc (len + 1);\n+      const char *sp;\n+      char *dp;\n+      \n+      d[len] = 0;\n+      for (dp = &d[0], sp = &s[len-1]; sp >= s; dp++, sp--)\n+\t*dp = *sp;\n+\n+      return d;\n+    }\n+}\n+\n+/* Compare two strings for qsort().  */\n+static int\n+cmpstringp (const void *p1, const void *p2)\n+{\n+  /* The arguments to this function are \"pointers to\n+     pointers to char\", but strcmp() arguments are \"pointers\n+     to char\", hence the following cast plus dereference */\n+\n+  return strcmp(*(char **) p1, *(char **) p2);\n+}\n+\n+/* Create an array of strings, one for each source file that we've\n+   seen.  fsource_filename can either be the name of a single .java\n+   file or a file that contains a list of filenames separated by\n+   newlines.  */\n+void \n+java_read_sourcefilenames (const char *fsource_filename)\n+{\n+  if (fsource_filename \n+      && filenames == 0\n+      && strlen (fsource_filename) > strlen (\".java\")\n+      && strcmp ((fsource_filename \n+\t\t  + strlen (fsource_filename)\n+\t\t  - strlen (\".java\")),\n+\t\t \".java\") != 0)\n+    {\n+/*       fsource_filename isn't a .java file but a list of filenames\n+       separated by newlines */\n+      FILE *finput = fopen (fsource_filename, \"r\");\n+      int len = 0;\n+      int longest_line = 0;\n+\n+      gcc_assert (finput);\n+\n+      /* Find out how many files there are, and how long the filenames are.  */\n+      while (! feof (finput))\n+\t{\n+\t  int ch = getc (finput);\n+\t  if (ch == '\\n')\n+\t    {\n+\t      num_files++;\n+\t      if (len > longest_line)\n+\t\tlongest_line = len;\n+\t      len = 0;\n+\t      continue;\n+\t    }\n+\t  if (ch == EOF)\n+\t    break;\n+\t  len++;\n+\t}\n+\n+      rewind (finput);\n+\n+      /* Read the filenames.  Put a pointer to each filename into the\n+\t array FILENAMES.  */\n+      {\n+\tchar *linebuf = alloca (longest_line + 1);\n+\tint i = 0;\n+\tint charpos;\n+\n+\tfilenames = xmalloc (num_files * sizeof (char*));\n+\n+\tcharpos = 0;\n+\tfor (;;)\n+\t  {\n+\t    int ch = getc (finput);\n+\t    if (ch == EOF)\n+\t      break;\n+\t    if (ch == '\\n')\n+\t      {\n+\t\tlinebuf[charpos] = 0;\n+\t\tgcc_assert (i < num_files);\t\t\n+\t\t/* ???  Perhaps we should use lrealpath() here.  Doing\n+\t\t   so would tidy up things like /../ but the rest of\n+\t\t   gcc seems to assume relative pathnames, not\n+\t\t   absolute pathnames.  */\n+/* \t\trealname = lrealpath (linebuf); */\n+\t\tfilenames[i++] = reverse (linebuf);\n+\t\tcharpos = 0;\n+\t\tcontinue;\n+\t      }\n+\t    gcc_assert (charpos < longest_line);\n+\t    linebuf[charpos++] = ch;\n+\t  }\n+\n+\tif (num_files > 1)\n+\t  qsort (filenames, num_files, sizeof (char *), cmpstringp);\n+      }\n+      fclose (finput);\n+    }\n+  else\n+    {\n+      filenames = xmalloc (sizeof (char*));      \n+      filenames[0] = reverse (fsource_filename);\n+      num_files = 1;\n+    }\n+}\n+\n+/* Given a relative pathname such as foo/bar.java, attempt to find a\n+   longer pathname with the same suffix.  \n+\n+   This is a best guess heuristic; with some weird class hierarcies we\n+   may fail to pick the correct source file.  For example, if we have\n+   the filenames foo/bar.java and also foo/foo/bar.java, we do not\n+   have enough information to know which one is the right match for\n+   foo/bar.java.  */\n+\n+static const char *\n+find_sourcefile (const char *name)\n+{\n+  int i = 0, j = num_files-1;\n+  char *found = NULL;\n+  \n+  if (filenames)\n+    {\n+      char *revname = reverse (name);\n+\n+      do\n+\t{\n+\t  int k = (i+j) / 2;\n+\t  int cmp = strncmp (revname, filenames[k], strlen (revname));\n+\t  if (cmp == 0)\n+\t    {\n+\t      /*  OK, so we found one.  But is it a unique match?  */\n+\t      if ((k > i\n+\t\t   && strncmp (revname, filenames[k-1], strlen (revname)) == 0)\n+\t\t  || (k < j\n+\t\t      && (strncmp (revname, filenames[k+1], strlen (revname)) \n+\t\t\t  == 0)))\n+\t\t;\n+\t      else\n+\t\tfound = filenames[k];\n+\t      break;\n+\t    }\n+\t  if (cmp > 0)\n+\t    i = k+1;\n+\t  else\n+\t    j = k-1;\n+\t}\n+      while (i <= j);\n+\n+      free (revname);\n+    }\n+\n+  if (found && strlen (found) > strlen (name))\n+    return reverse (found);\n+  else\n+    return name;\n+}\n+\n+\f\n+\n /* Handle \"SourceFile\" attribute. */\n \n static void\n@@ -144,6 +330,7 @@ set_source_filename (JCF *jcf, int index)\n \t      || old_filename[old_len - new_len - 1] == '\\\\'))\n \t{\n #ifndef USE_MAPPED_LOCATION\n+\t  input_filename = find_sourcefile (input_filename);\n \t  DECL_SOURCE_LOCATION (TYPE_NAME (current_class)) = input_location;\n \t  file_start_location = input_location;\n #endif\n@@ -177,6 +364,7 @@ set_source_filename (JCF *jcf, int index)\n \t}\n     }\n       \n+  sfname = find_sourcefile (sfname);\n #ifdef USE_MAPPED_LOCATION\n   line_table.maps[line_table.used-1].to_file = sfname;\n #else\n@@ -187,6 +375,519 @@ set_source_filename (JCF *jcf, int index)\n   if (current_class == main_class) main_input_filename = sfname;\n }\n \n+\n+\f\n+\n+/* Annotation handling.  \n+\n+   The technique we use here is to copy the annotation data directly\n+   from the input class file into the ouput file.  We don't decode the\n+   data at all, merely rewriting constant indexes whenever we come\n+   across them: this is necessary becasue the constant pool in the\n+   output file isn't the same as the constant pool in in the input.\n+\n+   The main advantage of this technique is that the resulting\n+   annotation data is pointer-free, so it doesn't have to be relocated\n+   at startup time.  As a consequence of this, annotations have no\n+   peformance impact unless they are used.  Also, this representation\n+   is very dense.  */\n+\n+\n+/* Expand TYPE_REFLECTION_DATA by DELTA bytes.  Return the address of\n+   the start of the newly allocated region.  */\n+\n+static unsigned char*\n+annotation_grow (int delta)\n+{\n+  unsigned char **data = &TYPE_REFLECTION_DATA (current_class);\n+  long *datasize = &TYPE_REFLECTION_DATASIZE (current_class);\n+  long len = *datasize;\n+\n+  if (*data == NULL)\n+    {\n+      *data = xmalloc (delta);\n+    }\n+  else\n+    {\n+      int newlen = *datasize + delta;\n+      if (floor_log2 (newlen) != floor_log2 (*datasize))\n+\t*data = xrealloc (*data,  2 << (floor_log2 (newlen)));\n+    }\n+  *datasize += delta;\n+  return *data + len;\n+}\n+\n+/* annotation_rewrite_TYPE.  Rewrite various int types at p.  Use Java\n+   byte order (i.e. big endian.)  */\n+\n+static void\n+annotation_rewrite_byte (unsigned int n, unsigned char *p)\n+{\n+  p[0] = n;\n+}\n+\n+static void\n+annotation_rewrite_short (unsigned int n, unsigned char *p)\n+{\n+  p[0] = n>>8;\n+  p[1] = n;\n+}\n+\n+static void\n+annotation_rewrite_int (unsigned int n, unsigned char *p)\n+{\n+  p[0] = n>>24;\n+  p[1] = n>>16;\n+  p[2] = n>>8;\n+  p[3] = n;\n+}\n+\n+/* Read a 16-bit unsigned int in Java byte order (i.e. big\n+   endian.)  */\n+\n+static uint16\n+annotation_read_short (unsigned char *p)\n+{\n+  uint16 tmp = p[0];\n+  tmp = (tmp << 8) | p[1];\n+  return tmp;\n+}\n+\n+/* annotation_write_TYPE.  Rewrite various int types, appending them\n+   to TYPE_REFLECTION_DATA.  Use Java byte order (i.e. big\n+   endian.)  */\n+\n+static void\n+annotation_write_byte (unsigned int n)\n+{\n+  annotation_rewrite_byte (n, annotation_grow (1));\n+}\n+\n+static void\n+annotation_write_short (unsigned int n)\n+{\n+  annotation_rewrite_short (n, annotation_grow (2));\n+}\n+\n+static void\n+annotation_write_int (unsigned int n)\n+{\n+  annotation_rewrite_int (n, annotation_grow (4));\n+}\n+\n+/* Create a 64-bit constant in the constant pool.\n+\n+   This is used for both integer and floating-point types.  As a\n+   consequence, it will not work if the target floating-point format\n+   is anything other than IEEE-754.  While this is arguably a bug, the\n+   runtime library makes exactly the same assumption and it's unlikely\n+   that Java will ever run on a non-IEEE machine.  */\n+\n+static int \n+handle_long_constant (JCF *jcf, CPool *cpool, enum cpool_tag kind,\n+\t\t    int index, bool big_endian)\n+{\n+  /* If we're on a 64-bit platform we can fit a long or double\n+     into the same space as a jword.  */\n+  if (POINTER_SIZE >= 64)\n+    index = find_constant1 (cpool, kind, JPOOL_LONG (jcf, index));\n+\n+  /* In a compiled program the constant pool is in native word\n+     order.  How weird is that???  */\n+  else if (big_endian)\n+    index = find_constant2 (cpool, kind,\n+\t\t\t    JPOOL_INT (jcf, index), \n+\t\t\t    JPOOL_INT (jcf, index+1));\n+  else\n+    index = find_constant2 (cpool, kind,\n+\t\t\t    JPOOL_INT (jcf, index+1), \n+\t\t\t    JPOOL_INT (jcf, index));\n+  \n+  return index;\n+}\n+\n+/* Given a class file and an index into its constant pool, create an\n+   entry in the outgoing constant pool for the same item.  */\n+\n+static uint16\n+handle_constant (JCF *jcf, int index, enum cpool_tag purpose)\n+{\n+  enum cpool_tag kind;\n+  CPool *cpool = cpool_for_class (output_class);\n+  \n+  if (index == 0)\n+    return 0;\n+\n+  if (! CPOOL_INDEX_IN_RANGE (&jcf->cpool, index))\n+    error (\"<constant pool index %d not in range>\", index);\n+  \n+  kind = JPOOL_TAG (jcf, index);\n+\n+  if ((kind & ~CONSTANT_ResolvedFlag) != purpose)\n+    {\n+      if (purpose == CONSTANT_Class\n+\t  && kind == CONSTANT_Utf8)\n+\t;\n+      else\n+\terror (\"<constant pool index %d unexpected type\", index);\n+    }\n+\n+  switch (kind)\n+    {\n+    case CONSTANT_Class:\n+    case CONSTANT_ResolvedClass:\n+      {\n+\t/* For some reason I know not the what of, class names in\n+\t   annotations are UTF-8 strings in the constant pool but\n+\t   class names in EnclosingMethod attributes are real class\n+\t   references.  Set CONSTANT_LazyFlag here so that the VM\n+\t   doesn't attempt to resolve them at class initialization\n+\t   time.  */\n+\ttree resolved_class, class_name;\n+\tresolved_class = get_class_constant (jcf, index);\n+\tclass_name = build_internal_class_name (resolved_class);\n+\tindex = alloc_name_constant (CONSTANT_Class | CONSTANT_LazyFlag,\n+\t\t\t\t     (unmangle_classname \n+\t\t\t\t      (IDENTIFIER_POINTER(class_name),\n+\t\t\t\t       IDENTIFIER_LENGTH(class_name))));\n+\tbreak;\n+      }\n+    case CONSTANT_Utf8:\n+      {\n+\ttree utf8 = get_constant (jcf, index);\n+\tif (purpose == CONSTANT_Class)\n+\t  /* Create a constant pool entry for a type signature.  This\n+\t     one has '.' rather than '/' because it isn't going into a\n+\t     class file, it's going into a compiled object.\n+\t     \n+\t     This has to match the logic in\n+\t     _Jv_ClassReader::prepare_pool_entry().  */\n+\t  utf8 = unmangle_classname (IDENTIFIER_POINTER(utf8),\n+\t\t\t\t     IDENTIFIER_LENGTH(utf8));\n+\tindex = alloc_name_constant (kind, utf8);\n+      }\n+      break;\n+\n+    case CONSTANT_Long:\n+      index = handle_long_constant (jcf, cpool, kind, index, \n+\t\t\t\t    WORDS_BIG_ENDIAN);\n+      break;\n+      \n+    case CONSTANT_Double:\n+      index = handle_long_constant (jcf, cpool, kind, index, \n+\t\t\t\t    FLOAT_WORDS_BIG_ENDIAN);\n+      break;\n+\n+    case CONSTANT_Float:\n+    case CONSTANT_Integer:\n+      index = find_constant1 (cpool, kind, JPOOL_INT (jcf, index));\n+      break;\n+      \n+    case CONSTANT_NameAndType:\n+      {\n+\tuint16 name = JPOOL_USHORT1 (jcf, index);\n+\tuint16 sig = JPOOL_USHORT2 (jcf, index);\n+\tuint32 name_index = handle_constant (jcf, name, CONSTANT_Utf8);\n+\tuint32 sig_index = handle_constant (jcf, sig, CONSTANT_Class);\n+\tjword new_index = (name_index << 16) | sig_index;\n+\tindex = find_constant1 (cpool, kind, new_index);\n+      }\n+      break;\n+\n+    default:\n+      abort ();\n+    }\n+  \n+  return index;\n+}\n+\n+/* Read an element_value structure from an annotation in JCF.  Return\n+   the constant pool index for the resulting constant pool entry.  */\n+\n+static int\n+handle_element_value (JCF *jcf, int level)\n+{\n+  uint8 tag = JCF_readu (jcf);\n+  int index = 0;\n+\n+  annotation_write_byte (tag);\n+  switch (tag)\n+    {\n+    case 'B':\n+    case 'C':\n+    case 'S':\n+    case 'Z':\n+    case 'I':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tindex = handle_constant (jcf, cindex,\n+\t\t\t\t CONSTANT_Integer);\n+\tannotation_write_short (index);\n+      }\n+      break;\n+    case 'D':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tindex = handle_constant (jcf, cindex,\n+\t\t\t\t CONSTANT_Double);\n+\tannotation_write_short (index);\n+      }\n+      break;\n+    case 'F':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tindex = handle_constant (jcf, cindex,\n+\t\t\t\t CONSTANT_Float);\n+\tannotation_write_short (index);\n+      }\n+      break;\n+    case 'J':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\tindex = handle_constant (jcf, cindex,\n+\t\t\t\t CONSTANT_Long);\n+\tannotation_write_short (index);\n+      }\n+      break;\n+    case 's':\n+      {\n+\tuint16 cindex = JCF_readu2 (jcf);\n+\t/* Despite what the JVM spec says, compilers generate a Utf8\n+\t   constant here, not a String.  */\n+\tindex = handle_constant (jcf, cindex,\n+\t\t\t\t CONSTANT_Utf8);\n+\tannotation_write_short (index);\n+      }\n+      break;\n+\n+    case 'e':\n+      {\n+\tuint16 type_name_index = JCF_readu2 (jcf);\n+\tuint16 const_name_index = JCF_readu2 (jcf);\n+\tindex = handle_constant (jcf, type_name_index,\n+\t\t\t\t CONSTANT_Class);\n+\tannotation_write_short (index);\n+\tindex = handle_constant (jcf, const_name_index,\n+\t\t\t\t CONSTANT_Utf8);\n+\tannotation_write_short (index);\n+     }\n+      break;\n+    case 'c':\n+      {\n+\tuint16 class_info_index = JCF_readu2 (jcf);\n+\tindex = handle_constant (jcf, class_info_index,\n+\t\t\t\t CONSTANT_Class);\n+\tannotation_write_short (index);\n+      }\n+      break;\n+    case '@':\n+      {\n+\thandle_annotation (jcf, level + 1);\n+      }\n+      break;\n+    case '[':\n+      {\n+\tuint16 n_array_elts = JCF_readu2 (jcf);\n+\tannotation_write_short (n_array_elts);\n+\twhile (n_array_elts--)\n+\t  handle_element_value (jcf, level + 1);\n+      }\n+      break;\n+    default:\n+      abort();\n+      break;\n+    }\n+  return index;\n+}\n+\n+/* Read an annotation structure from JCF.  Write it to the\n+   reflection_data field of the outgoing class.  */\n+\n+static void\n+handle_annotation (JCF *jcf, int level)\n+{\n+  uint16 type_index = JCF_readu2 (jcf);\n+  uint16 npairs = JCF_readu2 (jcf);\n+  int index = handle_constant (jcf, type_index,\n+\t\t\t       CONSTANT_Class);\n+  annotation_write_short (index);\n+  annotation_write_short (npairs);\n+  while (npairs--)\n+    {\n+      uint16 name_index = JCF_readu2 (jcf);\n+      index = handle_constant (jcf, name_index,\n+\t\t\t       CONSTANT_Utf8);\n+      annotation_write_short (index);\n+      handle_element_value (jcf, level + 2);\n+    }\n+}\n+\n+/* Read an annotation count from JCF, and write the following\n+   annotatons to the reflection_data field of the outgoing class.  */\n+\n+static void\n+handle_annotations (JCF *jcf, int level)\n+{\n+  uint16 num = JCF_readu2 (jcf);\n+  annotation_write_short (num);\n+  while (num--)\n+    handle_annotation (jcf, level);\n+}\n+\n+/* As handle_annotations(), but perform a sanity check that we write\n+   the same number of bytes that we were expecting.  */\n+\n+static void\n+handle_annotation_attribute (int ATTRIBUTE_UNUSED index, JCF *jcf, \n+\t\t\t     long length)\n+{\n+  long old_datasize = TYPE_REFLECTION_DATASIZE (current_class);\n+\n+  handle_annotations (jcf, 0);\n+\n+  gcc_assert (old_datasize + length\n+\t      == TYPE_REFLECTION_DATASIZE (current_class));\n+}\n+\n+/* gcj permutes its fields array after generating annotation_data, so\n+   we have to fixup field indexes for fields that have moved.  Given\n+   ARG, a VEC_int, fixup the field indexes in the reflection_data of\n+   the outgoing class.  We use field_offsets to tell us where the\n+   fixups must go.  */\n+\n+void\n+rewrite_reflection_indexes (void *arg)\n+{\n+  bitmap_iterator bi;\n+  unsigned int offset;\n+  VEC(int, heap) *map = arg;\n+  unsigned char *data = TYPE_REFLECTION_DATA (current_class);\n+\n+  if (map)\n+    {\n+      EXECUTE_IF_SET_IN_BITMAP (field_offsets, 0, offset, bi)\n+\t{\n+\t  uint16 index = annotation_read_short (data + offset);\n+\t  annotation_rewrite_short \n+\t    (VEC_index (int, map, index), data + offset);\n+\t}\n+    }\n+}\n+\n+/* Read the RuntimeVisibleAnnotations from JCF and write them to the\n+   reflection_data of the outgoing class.  */\n+\n+static void\n+handle_member_annotations (int member_index, JCF *jcf, \n+\t\t\t   const unsigned char *name ATTRIBUTE_UNUSED, \n+\t\t\t   long len, jv_attr_type member_type)\n+{\n+  int new_len = len + 1;\n+  annotation_write_byte (member_type);\n+  if (member_type != JV_CLASS_ATTR)\n+    new_len += 2;\n+  annotation_write_int (new_len);\n+  annotation_write_byte (JV_ANNOTATIONS_KIND);\n+  if (member_type == JV_FIELD_ATTR)\n+    bitmap_set_bit (field_offsets, TYPE_REFLECTION_DATASIZE (current_class));\n+  if (member_type != JV_CLASS_ATTR)\n+    annotation_write_short (member_index);\n+  handle_annotation_attribute (member_index, jcf, len);\n+}\n+\n+/* Read the RuntimeVisibleParameterAnnotations from JCF and write them\n+   to the reflection_data of the outgoing class.  */\n+\n+static void\n+handle_parameter_annotations (int member_index, JCF *jcf, \n+\t\t\t      const unsigned char *name ATTRIBUTE_UNUSED, \n+\t\t\t      long len, jv_attr_type member_type)\n+{\n+  int new_len = len + 1;\n+  uint8 num;\n+  annotation_write_byte (member_type);\n+  if (member_type != JV_CLASS_ATTR)\n+    new_len += 2;\n+  annotation_write_int (new_len);\n+  annotation_write_byte (JV_PARAMETER_ANNOTATIONS_KIND);\n+  if (member_type != JV_CLASS_ATTR)\n+    annotation_write_short (member_index);\n+  num = JCF_readu (jcf);\n+  annotation_write_byte (num);\n+  while (num--)\n+    handle_annotations (jcf, 0);\n+}\n+\n+\n+/* Read the AnnotationDefault data from JCF and write them to the\n+   reflection_data of the outgoing class.  */\n+\n+static void\n+handle_default_annotation (int member_index, JCF *jcf, \n+\t\t\t   const unsigned char *name ATTRIBUTE_UNUSED, \n+\t\t\t   long len, jv_attr_type member_type)\n+{\n+  int new_len = len + 1;\n+  annotation_write_byte (member_type);\n+  if (member_type != JV_CLASS_ATTR)\n+    new_len += 2;\n+  annotation_write_int (new_len);\n+  annotation_write_byte (JV_ANNOTATION_DEFAULT_KIND);\n+  if (member_type != JV_CLASS_ATTR)\n+    annotation_write_short (member_index);\n+  handle_element_value (jcf, 0);\n+}\n+\n+/* As above, for the EnclosingMethod attribute.  */\n+\n+static void\n+handle_enclosingmethod_attribute (int member_index, JCF *jcf, \n+\t\t\t   const unsigned char *name ATTRIBUTE_UNUSED, \n+\t\t\t   long len, jv_attr_type member_type)\n+{\n+  int new_len = len + 1;\n+  uint16 index;\n+  annotation_write_byte (member_type);\n+  if (member_type != JV_CLASS_ATTR)\n+    new_len += 2;\n+  annotation_write_int (new_len);\n+  annotation_write_byte (JV_ENCLOSING_METHOD_KIND);\n+  if (member_type != JV_CLASS_ATTR)\n+    annotation_write_short (member_index);\n+\n+  index = JCF_readu2 (jcf);\n+  index = handle_constant (jcf, index, CONSTANT_Class);\n+  annotation_write_short (index);\n+\n+  index = JCF_readu2 (jcf);\n+  index = handle_constant (jcf, index, CONSTANT_NameAndType);\n+  annotation_write_short (index);\n+}\n+\n+/* As above, for the Signature attribute.  */\n+\n+static void\n+handle_signature_attribute (int member_index, JCF *jcf, \n+\t\t\t   const unsigned char *name ATTRIBUTE_UNUSED, \n+\t\t\t   long len, jv_attr_type member_type)\n+{\n+  int new_len = len + 1;\n+  uint16 index;\n+  annotation_write_byte (member_type);\n+  if (member_type != JV_CLASS_ATTR)\n+    new_len += 2;\n+  annotation_write_int (new_len);\n+  annotation_write_byte (JV_SIGNATURE_KIND);\n+  if (member_type != JV_CLASS_ATTR)\n+    annotation_write_short (member_index);\n+\n+  index = JCF_readu2 (jcf);\n+  index = handle_constant (jcf, index, CONSTANT_Utf8);\n+  annotation_write_short (index);\n+}\n+  \n+\f\n+\n #define HANDLE_SOURCEFILE(INDEX) set_source_filename (jcf, INDEX)\n \n #define HANDLE_CLASS_INFO(ACCESS_FLAGS, THIS, SUPER, INTERFACES_COUNT) \\\n@@ -262,16 +963,19 @@ set_source_filename (JCF *jcf, int index)\n /* Link seen inner classes to their outer context and register the\n    inner class to its outer context. They will be later loaded.  */\n #define HANDLE_INNERCLASSES_ATTRIBUTE(COUNT) \\\n-  handle_innerclass_attribute (COUNT, jcf)\n+  handle_innerclass_attribute (COUNT, jcf, attribute_length)\n \n #define HANDLE_SYNTHETIC_ATTRIBUTE()\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   /* Irrelevant decls should have been nullified by the END macros.\t\\\n-     We only handle the `Synthetic' attribute on method DECLs.\t\t\\\n      DECL_ARTIFICIAL on fields is used for something else (See\t\t\\\n      PUSH_FIELD in java-tree.h) */\t\t\t\t\t\\\n   if (current_method)\t\t\t\t\t\t\t\\\n     DECL_ARTIFICIAL (current_method) = 1;\t\t\t\t\\\n+  else if (current_field)\t\t\t\t\t\t\\\n+    FIELD_SYNTHETIC (current_field) = 1;\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    CLASS_SYNTHETIC (current_class) = 1;\t\t\t\t\\\n }\n \n #define HANDLE_GCJCOMPILED_ATTRIBUTE()\t\t\\\n@@ -280,6 +984,43 @@ set_source_filename (JCF *jcf, int index)\n     jcf->right_zip = 1;\t\t\t\t\\\n }\n \n+#define HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE()\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  handle_member_annotations (index, jcf, name_data, attribute_length, attr_type); \\\n+}\n+\n+#define HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE()\t\\\n+{\t\t\t\t\t\t\t\\\n+  JCF_SKIP(jcf, attribute_length);\t\t\t\\\n+}\n+\n+#define HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE()\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  handle_parameter_annotations (index, jcf, name_data, attribute_length, attr_type); \\\n+}\n+\n+#define HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE()\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  JCF_SKIP(jcf, attribute_length);\t\t\t\t\\\n+}\n+\n+#define HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE()\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  handle_default_annotation (index, jcf, name_data, attribute_length, attr_type); \\\n+}\n+\n+#define HANDLE_ENCLOSINGMETHOD_ATTRIBUTE()\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  handle_enclosingmethod_attribute (index, jcf, name_data,\t\t\\\n+\t\t\t\t    attribute_length, attr_type);\t\\\n+}\n+\n+#define HANDLE_SIGNATURE_ATTRIBUTE()\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  handle_signature_attribute (index, jcf, name_data,\t\t\\\n+\t\t\t      attribute_length, attr_type);\t\\\n+}\n+\n #include \"jcf-reader.c\"\n \n tree\n@@ -403,9 +1144,15 @@ get_name_constant (JCF *jcf, int index)\n    the outer context with the newly resolved innerclass.  */\n \n static void\n-handle_innerclass_attribute (int count, JCF *jcf)\n+handle_innerclass_attribute (int count, JCF *jcf, int attribute_length)\n {\n-  int c = (count);\n+  int c = count;\n+\n+  annotation_write_byte (JV_CLASS_ATTR);\n+  annotation_write_int (attribute_length+1);\n+  annotation_write_byte (JV_INNER_CLASSES_KIND);\n+  annotation_write_short (count);\n+\n   while (c--)\n     {\n       /* Read inner_class_info_index. This may be 0 */\n@@ -418,6 +1165,12 @@ handle_innerclass_attribute (int count, JCF *jcf)\n       int ini = JCF_readu2 (jcf);\n       /* Read the access flag. */\n       int acc = JCF_readu2 (jcf);\n+\n+      annotation_write_short (handle_constant (jcf, icii, CONSTANT_Class));\n+      annotation_write_short (handle_constant (jcf, ocii, CONSTANT_Class));\n+      annotation_write_short (handle_constant (jcf, ini, CONSTANT_Utf8));\n+      annotation_write_short (acc);\n+\n       /* If icii is 0, don't try to read the class. */\n       if (icii >= 0)\n \t{\n@@ -553,6 +1306,8 @@ read_class (tree name)\n \n   if (current_jcf->java_source)\n     {\n+      gcc_unreachable ();\n+#if 0\n       const char *filename = current_jcf->filename;\n       char *real_path;\n       tree given_file, real_file;\n@@ -590,15 +1345,16 @@ read_class (tree name)\n       JCF_FINISH (current_jcf);\n       java_pop_parser_context (generate);\n       java_parser_context_restore_global ();\n+#endif\n     }\n   else\n     {\n       if (class == NULL_TREE || ! CLASS_PARSED_P (class))\n \t{\n-\t  java_parser_context_save_global ();\n-\t  java_push_parser_context ();\n+/* \t  java_parser_context_save_global (); */\n+/* \t  java_push_parser_context (); */\n \t  output_class = current_class = class;\n-\t  ctxp->save_location = input_location;\n+/* \t  ctxp->save_location = input_location; */\n \t  if (JCF_SEEN_IN_ZIP (current_jcf))\n \t    read_zip_member(current_jcf,\n \t\t\t    current_jcf->zipd, current_jcf->zipd->zipf);\n@@ -608,8 +1364,8 @@ read_class (tree name)\n \t  if (current_class != class && icv != NULL_TREE)\n \t    TREE_TYPE (icv) = current_class;\n \t  class = current_class;\n-\t  java_pop_parser_context (0);\n-\t  java_parser_context_restore_global ();\n+/* \t  java_pop_parser_context (0); */\n+/* \t  java_parser_context_restore_global (); */\n \t}\n       layout_class (class);\n       load_inner_classes (class);\n@@ -789,6 +1545,10 @@ jcf_parse (JCF* jcf)\n   code = jcf_parse_final_attributes (jcf);\n   if (code != 0)\n     fatal_error (\"error while parsing final attributes\");\n+\n+  if (TYPE_REFLECTION_DATA (current_class))\n+    annotation_write_byte (JV_DONE_ATTR);\n+\n #ifdef USE_MAPPED_LOCATION\n   linemap_add (&line_table, LC_LEAVE, false, NULL, 0);\n #endif\n@@ -803,9 +1563,12 @@ jcf_parse (JCF* jcf)\n       /* If we don't have the right archive, emit a verbose warning.\n \t If we're generating bytecode, emit the warning only if\n \t -fforce-classes-archive-check was specified. */\n+#if 0\n+      /* ECJ HACK: ignore this.  */\n       if (!jcf->right_zip\n \t  && (!flag_emit_class_files || flag_force_classes_archive_check))\n \tfatal_error (\"the %<java.lang.Object%> that was found in %qs didn't have the special zero-length %<gnu.gcj.gcj-compiled%> attribute.  This generally means that your classpath is incorrectly set.  Use %<info gcj \\\"Input Options\\\"%> to see the info page describing how to set the classpath\", jcf->filename);\n+#endif\n     }\n   else\n     all_class_list = tree_cons (NULL_TREE,\n@@ -842,6 +1605,42 @@ duplicate_class_warning (const char *filename)\n   warning (0, \"%Hduplicate class will only be compiled once\", &warn_loc);\n }\n \n+static void\n+java_layout_seen_class_methods (void)\n+{\n+  tree previous_list = all_class_list;\n+  tree end = NULL_TREE;\n+  tree current;\n+\n+  while (1)\n+    {\n+      for (current = previous_list;\n+\t   current != end; current = TREE_CHAIN (current))\n+        {\n+\t  tree decl = TREE_VALUE (current);\n+          tree cls = TREE_TYPE (decl);\n+\n+\t  input_location = DECL_SOURCE_LOCATION (decl);\n+\n+          if (! CLASS_LOADED_P (cls))\n+            load_class (cls, 0);\n+\n+          layout_class_methods (cls);\n+        }\n+\n+      /* Note that new classes might have been added while laying out\n+         methods, changing the value of all_class_list.  */\n+\n+      if (previous_list != all_class_list)\n+\t{\n+\t  end = previous_list;\n+\t  previous_list = all_class_list;\n+\t}\n+      else\n+\tbreak;\n+    }\n+}\n+\n static void\n parse_class_file (void)\n {\n@@ -856,8 +1655,6 @@ parse_class_file (void)\n \n   gen_indirect_dispatch_tables (current_class);\n \n-  java_mark_class_local (current_class);\n-\n   for (method = TYPE_METHODS (current_class);\n        method != NULL_TREE; method = TREE_CHAIN (method))\n     {\n@@ -956,80 +1753,12 @@ parse_class_file (void)\n       end_java_method ();\n     }\n \n-  if (flag_emit_class_files)\n-    write_classfile (current_class);\n-\n   finish_class ();\n \n   (*debug_hooks->end_source_file) (LOCATION_LINE (save_location));\n   input_location = save_location;\n }\n \n-/* Parse a source file, as pointed by the current value of INPUT_FILENAME. */\n-\n-static void\n-parse_source_file_1 (tree real_file, const char *filename, FILE *finput)\n-{\n-  int save_error_count = java_error_count;\n-\n-  /* Mark the file as parsed.  */\n-  HAS_BEEN_ALREADY_PARSED_P (real_file) = 1;\n-\n-  lang_init_source (1);\t\t    /* Error msgs have no method prototypes */\n-\n-  /* There's no point in trying to find the current encoding unless we\n-     are going to do something intelligent with it -- hence the test\n-     for iconv.  */\n-#if defined (HAVE_LOCALE_H) && defined (HAVE_ICONV) && defined (HAVE_LANGINFO_CODESET)\n-  setlocale (LC_CTYPE, \"\");\n-  if (current_encoding == NULL)\n-    current_encoding = nl_langinfo (CODESET);\n-#endif \n-  if (current_encoding == NULL || *current_encoding == '\\0')\n-    current_encoding = DEFAULT_ENCODING;\n-\n-#ifdef USE_MAPPED_LOCATION\n-  linemap_add (&line_table, LC_ENTER, false, filename, 0);\n-  input_location = linemap_line_start (&line_table, 0, 125);\n-#else\n-  input_filename = filename;\n-  input_line = 0;\n-#endif\n-  ctxp->file_start_location = input_location;\n-  ctxp->filename = filename;\n-\n-  jcf_dependency_add_file (input_filename, 0);\n-\n-  /* Initialize the parser */\n-  java_init_lex (finput, current_encoding);\n-  java_parse_abort_on_error ();\n-\n-  java_parse ();\t\t    /* Parse and build partial tree nodes. */\n-  java_parse_abort_on_error ();\n-}\n-\n-/* Process a parsed source file, resolving names etc. */\n-\n-static void\n-parse_source_file_2 (void)\n-{\n-  int save_error_count = java_error_count;\n-  flag_verify_invocations = true;\n-  java_complete_class ();\t    /* Parse unsatisfied class decl. */\n-  java_parse_abort_on_error ();\n-}\n-\n-static void\n-parse_source_file_3 (void)\n-{\n-  int save_error_count = java_error_count;\n-  java_check_circular_reference (); /* Check on circular references */\n-  java_parse_abort_on_error ();\n-  java_fix_constructors ();\t    /* Fix the constructors */\n-  java_parse_abort_on_error ();\n-  java_reorder_fields ();\t    /* Reorder the fields */\n-}\n-\n void\n add_predefined_file (tree name)\n {\n@@ -1074,6 +1803,9 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n   FILE *finput = NULL;\n   int in_quotes = 0;\n  \n+  bitmap_obstack_initialize (&bit_obstack);\n+  field_offsets = BITMAP_ALLOC (&bit_obstack);\n+\n   if (flag_filelist_file)\n     {\n       int avail = 2000;\n@@ -1150,7 +1882,12 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n \t  next++;\n \t}\n \n-      if (list[0]) \n+      /* Exclude .java files.  */\n+      if (strlen (list) > 5 && ! strcmp (list + strlen (list) - 5, \".java\"))\n+\t{\n+\t  /* Nothing. */\n+\t}\n+      else if (list[0]) \n \t{\n \t  node = get_identifier (list);\n \n@@ -1268,6 +2005,8 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n \t}\n       else\n \t{\n+\t  gcc_unreachable ();\n+#if 0\n \t  java_push_parser_context ();\n \t  java_parser_context_save_global ();\n \n@@ -1276,20 +2015,16 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n \t  java_pop_parser_context (1);\n #ifdef USE_MAPPED_LOCATION\n \t  linemap_add (&line_table, LC_LEAVE, false, NULL, 0);\n+#endif\n #endif\n \t}\n     }\n \n-  for (ctxp = ctxp_for_generation;  ctxp;  ctxp = ctxp->next)\n-    {\n-      input_location = ctxp->file_start_location;\n-      parse_source_file_2 ();\n-    }\n-\n-  for (ctxp = ctxp_for_generation; ctxp; ctxp = ctxp->next)\n+  /* Do this before lowering any code.  */\n+  for (node = current_file_list; node; node = TREE_CHAIN (node))\n     {\n-      input_location = ctxp->file_start_location;\n-      parse_source_file_3 ();\n+      if (CLASS_FILE_P (node))\n+\tjava_mark_class_local (TREE_TYPE (node));\n     }\n \n   for (node = current_file_list; node; node = TREE_CHAIN (node))\n@@ -1312,12 +2047,14 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n     }\n   input_location = save_location;\n \n-  java_expand_classes ();\n-  if (java_report_errors () || flag_syntax_only)\n-    return;\n+  bitmap_obstack_release (&bit_obstack);\n+\n+/*   java_expand_classes (); */\n+/*   if (java_report_errors () || flag_syntax_only) */\n+/*     return; */\n     \n   /* Expand all classes compiled from source.  */\n-  java_finish_classes ();\n+/*   java_finish_classes (); */\n \n  finish:\n   /* Arrange for any necessary initialization to happen.  */\n@@ -1408,15 +2145,6 @@ parse_zip_file_entries (void)\n \t    current_jcf = TYPE_JCF (class);\n \t    output_class = current_class = class;\n \n-\t    if (CLASS_FROM_CURRENTLY_COMPILED_P (current_class))\n-\t      {\n-\t        /* We've already compiled this class.  */\n-\t\tduplicate_class_warning (current_jcf->filename);\n-\t\tbreak;\n-\t      }\n-\t    \n-\t    CLASS_FROM_CURRENTLY_COMPILED_P (current_class) = 1;\n-\n \t    /* This is a dummy class, and now we're compiling it for\n \t       real.  */\n \t    gcc_assert (! TYPE_DUMMY (class));\n@@ -1531,6 +2259,16 @@ process_zip_dir (FILE *finput)\n \n       class = lookup_class (get_identifier (class_name));\n \n+      if (CLASS_FROM_CURRENTLY_COMPILED_P (class))\n+\t{\n+\t  /* We've already compiled this class.  */\n+\t  duplicate_class_warning (file_name);\n+\t  continue;\n+\t}\n+      /* This function is only called when processing a zip file seen\n+\t on the command line.  */\n+      CLASS_FROM_CURRENTLY_COMPILED_P (class) = 1;\n+\n       jcf->read_state  = finput;\n       jcf->filbuf      = jcf_filbuf_from_stdio;\n       jcf->java_source = 0;\n@@ -1542,12 +2280,5 @@ process_zip_dir (FILE *finput)\n     }\n }\n \n-/* Initialization.  */\n-\n-void\n-init_jcf_parse (void)\n-{\n-  init_src_parse ();\n-}\n-\n #include \"gt-java-jcf-parse.h\"\n+#include \"gtype-java.h\""}, {"sha": "7baef2e35e926613c259814512dc2adc0008f3b8", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,5 +1,5 @@\n /* Handle CLASSPATH, -classpath, and path searching.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -457,6 +457,38 @@ jcf_path_next (void *x)\n   return (void *) ent->next;\n }\n \n+static const char\n+PATH_SEPARATOR_STR[] = {PATH_SEPARATOR, '\\0'};\n+\n+char *\n+jcf_path_compute (const char *prefix)\n+{\n+  struct entry *iter;\n+  char *result;\n+  int length = strlen (prefix) + 1;\n+  int first;\n+\n+  for (iter = sealed; iter != NULL; iter = iter->next)\n+    length += strlen (iter->name) + 1;\n+\n+  result = (char *) xmalloc (length);\n+  strcpy (result, prefix);\n+  first = 1;\n+  for (iter = sealed; iter != NULL; iter = iter->next)\n+    {\n+      if (! first)\n+\tstrcat (result, PATH_SEPARATOR_STR);\n+      first = 0;\n+      strcat (result, iter->name);\n+      /* Ugly: we want to strip the '/' from zip entries when\n+\t computing a string classpath.  */\n+      if ((iter->flags & FLAG_ZIP) != 0)\n+\tresult[strlen (result) - 1] = '\\0';\n+    }\n+\n+  return result;\n+}\n+\n /* We guarantee that the return path will either be a zip file, or it\n    will end with a directory separator.  */\n char *"}, {"sha": "2ac3124a2a37cfaee067e5dc3ced4f7478c0221f", "filename": "gcc/java/jcf-reader.c", "status": "modified", "additions": 68, "deletions": 10, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-reader.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf-reader.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-reader.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,7 +1,7 @@\n /* This file read a Java(TM) .class file.\n    It is not stand-alone:  It depends on tons of macros, and the\n    intent is you #include this file after you've defined the macros.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2006\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -28,12 +28,12 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"jcf.h\"\n #include \"zipfile.h\"\n \n-static int get_attribute (JCF *);\n+static int get_attribute (JCF *, int, jv_attr_type);\n static int jcf_parse_preamble (JCF *);\n static int jcf_parse_constant_pool (JCF *);\n static void jcf_parse_class (JCF *);\n static int jcf_parse_fields (JCF *);\n-static int jcf_parse_one_method (JCF *);\n+static int jcf_parse_one_method (JCF *, int);\n static int jcf_parse_methods (JCF *);\n static int jcf_parse_final_attributes (JCF *);\n #ifdef NEED_PEEK_ATTRIBUTE\n@@ -103,7 +103,8 @@ skip_attribute (JCF *jcf, int number_of_attribute)\n #endif\n \n static int\n-get_attribute (JCF *jcf)\n+get_attribute (JCF *jcf, int index, \n+\t       jv_attr_type attr_type ATTRIBUTE_UNUSED)\n {\n   uint16 attribute_name = (JCF_FILL (jcf, 6), JCF_readu2 (jcf));\n   uint32 attribute_length = JCF_readu4 (jcf);\n@@ -168,7 +169,7 @@ get_attribute (JCF *jcf)\n       attributes_count = JCF_readu2 (jcf);\n       for (j = 0; j < attributes_count; j++)\n \t{\n-\t  int code = get_attribute (jcf);\n+\t  int code = get_attribute (jcf, index, JV_METHOD_ATTR);\n \t  if (code != 0)\n \t    return code;\n \t}\n@@ -199,6 +200,14 @@ get_attribute (JCF *jcf)\n     }\n   else\n #endif\n+#ifdef HANDLE_LOCALVARIABLETYPETABLE_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"LocalVariableTypeTable\"))\n+    {\n+      uint16 count = JCF_readu2 (jcf);\n+      HANDLE_LOCALVARIABLETYPETABLE_ATTRIBUTE (count);\n+    }\n+  else\n+#endif\n #ifdef HANDLE_INNERCLASSES_ATTRIBUTE\n   if (MATCH_ATTRIBUTE (\"InnerClasses\"))\n     {\n@@ -234,6 +243,55 @@ get_attribute (JCF *jcf)\n       HANDLE_SOURCEDEBUGEXTENSION_ATTRIBUTE (attribute_length);\n     }\n   else\n+#endif\n+#ifdef HANDLE_ENCLOSINGMETHOD_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"EnclosingMethod\"))\n+    {\n+      HANDLE_ENCLOSINGMETHOD_ATTRIBUTE ();\n+    }\n+  else\n+#endif\n+#ifdef HANDLE_SIGNATURE_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"Signature\"))\n+    {\n+      HANDLE_SIGNATURE_ATTRIBUTE ();\n+    }\n+  else\n+#endif\n+#ifdef HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"RuntimeVisibleAnnotations\"))\n+    {\n+      HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE ();\n+    }\n+  else\n+#endif\n+#ifdef HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"RuntimeInvisibleAnnotations\"))\n+    {\n+      HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE ();\n+    }\n+  else\n+#endif\n+#ifdef HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"RuntimeVisibleParameterAnnotations\"))\n+    {\n+      HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE ();\n+    }\n+  else\n+#endif\n+#ifdef HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"RuntimeInvisibleParameterAnnotations\"))\n+    {\n+      HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE ();\n+    }\n+  else\n+#endif\n+#ifdef HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE\n+  if (MATCH_ATTRIBUTE (\"AnnotationDefault\"))\n+    {\n+      HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE ();\n+    }\n+  else\n #endif\n     {\n #ifdef PROCESS_OTHER_ATTRIBUTE\n@@ -384,7 +442,7 @@ jcf_parse_fields (JCF* jcf)\n #endif\n       for (j = 0; j < attribute_count; j++)\n \t{\n-\t  int code = get_attribute (jcf);\n+\t  int code = get_attribute (jcf, i, JV_FIELD_ATTR);\n \t  if (code != 0)\n \t    return code;\n \t}\n@@ -401,7 +459,7 @@ jcf_parse_fields (JCF* jcf)\n /* Read methods. */\n \n static int\n-jcf_parse_one_method (JCF* jcf)\n+jcf_parse_one_method (JCF* jcf, int index)\n {\n   int i;\n   uint16 access_flags = (JCF_FILL (jcf, 8), JCF_readu2 (jcf));\n@@ -413,7 +471,7 @@ jcf_parse_one_method (JCF* jcf)\n #endif\n   for (i = 0; i < attribute_count; i++)\n     {\n-      int code = get_attribute (jcf);\n+      int code = get_attribute (jcf, index, JV_METHOD_ATTR);\n       if (code != 0)\n \treturn code;\n     }\n@@ -435,7 +493,7 @@ jcf_parse_methods (JCF* jcf)\n #endif\n   for (i = 0; i < methods_count; i++)\n     {\n-      int code = jcf_parse_one_method (jcf);\n+      int code = jcf_parse_one_method (jcf, i);\n       if (code != 0)\n \treturn code;\n     }\n@@ -456,7 +514,7 @@ jcf_parse_final_attributes (JCF *jcf)\n #endif\n   for (i = 0; i < attributes_count; i++)\n     {\n-      int code = get_attribute (jcf);\n+      int code = get_attribute (jcf, i, JV_CLASS_ATTR);\n       if (code != 0)\n \treturn code;\n     }"}, {"sha": "b68ec25022916595c22edf753dd1e6e768c301af", "filename": "gcc/java/jcf-write.c", "status": "removed", "additions": 0, "deletions": 3569, "changes": 3569, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369"}, {"sha": "866dc4164ea4624b4165fa0283f7985bfec14e6e", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -241,18 +241,22 @@ typedef struct JCF GTY(()) {\n \n #define ACC_VISIBILITY (ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED)\n \n-#define CONSTANT_Class 7\n-#define CONSTANT_Fieldref 9\n-#define CONSTANT_Methodref 10\n-#define CONSTANT_InterfaceMethodref 11\n-#define CONSTANT_String 8\n-#define CONSTANT_Integer 3\n-#define CONSTANT_Float 4\n-#define CONSTANT_Long 5\n-#define CONSTANT_Double 6\n-#define CONSTANT_NameAndType 12\n-#define CONSTANT_Utf8 1\n-#define CONSTANT_Unicode 2\n+enum cpool_tag\n+{\n+  CONSTANT_Class = 7,\n+  CONSTANT_Fieldref = 9,\n+  CONSTANT_Methodref = 10,\n+  CONSTANT_InterfaceMethodref = 11,\n+  CONSTANT_String = 8,\n+  CONSTANT_Integer = 3,\n+  CONSTANT_Float = 4,\n+  CONSTANT_Long = 5,\n+  CONSTANT_Double = 6,\n+  CONSTANT_NameAndType = 12,\n+  CONSTANT_Utf8 = 1,\n+  CONSTANT_Unicode = 2,\n+  CONSTANT_None = 0\n+};\n \n #define DEFAULT_CLASS_PATH \".\"\n \n@@ -309,6 +313,7 @@ extern void jcf_path_seal (int);\n extern void *jcf_path_start (void);\n extern void *jcf_path_next (void *);\n extern char *jcf_path_name (void *);\n+extern char *jcf_path_compute (const char *);\n extern int jcf_path_is_zipfile (void *);\n extern int jcf_path_is_system (void *);\n extern int jcf_path_max_len (void);"}, {"sha": "cb2baceba4a97860f5024b7ccfa7af7ef6ffb224", "filename": "gcc/java/jv-scan.c", "status": "removed", "additions": 0, "deletions": 290, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,290 +0,0 @@\n-/* Main for jv-scan\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n-   Free Software Foundation, Inc.\n-   Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"intl.h\"\n-\n-#include \"obstack.h\"\t\t/* We use obstacks in lex.c */\n-\n-#include \"version.h\"\n-\n-#ifdef HAVE_LOCALE_H\n-#include <locale.h>\n-#endif\n-\n-#ifdef HAVE_LANGINFO_CODESET\n-#include <langinfo.h>\n-#endif\n-\n-#include <getopt.h>\n-\n-extern void fatal_error (const char *gmsgid, ...)\n-     ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n-void warning (int opt, const char *gmsgid, ...) ATTRIBUTE_PRINTF_2;\n-void warning0 (const char *gmsgid, ...) ATTRIBUTE_PRINTF_1;\n-void report (void);\n-\n-static void usage (void) ATTRIBUTE_NORETURN;\n-static void help (void) ATTRIBUTE_NORETURN;\n-static void version (void) ATTRIBUTE_NORETURN;\n-\n-#define JC1_LITE\n-#include \"jcf.h\"\n-#include \"parse.h\"\n-\n-/* Current input file and output file IO streams.  */\n-FILE *finput, *out;\n-\n-/* Executable name.  */\n-char *exec_name;\n-\n-struct line_maps line_table;\n-\n-/* Flags matching command line options.  */\n-int flag_find_main = 0;\n-int flag_dump_class = 0;\n-int flag_list_filename = 0;\n-int flag_complexity = 0;\n-int flag_assert = 1;\n-\n-int pedantic = 0;\n-\n-\f\n-\n-/* This is used to mark options with no short value.  */\n-#define LONG_OPT(Num)  ((Num) + 128)\n-\n-#define OPT_HELP      LONG_OPT (0)\n-#define OPT_VERSION   LONG_OPT (1)\n-#define OPT_ENCODING  LONG_OPT (2)\n-\n-static const struct option options[] =\n-{\n-  { \"help\",      no_argument,       NULL, OPT_HELP },\n-  { \"version\",   no_argument,       NULL, OPT_VERSION },\n-  { \"print-main\", no_argument,      &flag_find_main, 1 },\n-  { \"list-filename\", no_argument,   &flag_list_filename, 1 },\n-  { \"list-class\", no_argument,      &flag_dump_class, 1 },\n-  { \"encoding\",  required_argument, NULL, OPT_ENCODING },\n-  { \"complexity\", no_argument,\t    &flag_complexity, 1 },\n-  { \"no-assert\", no_argument,       &flag_assert, 0 },\n-  { \"assert\",    no_argument,       &flag_assert, 1 },\n-  { NULL,        no_argument,       NULL, 0 }\n-};\n-\n-static void\n-usage (void)\n-{\n-  fprintf (stderr, _(\"Try 'jv-scan --help' for more information.\\n\"));\n-  exit (1);\n-}\n-\n-static void\n-help (void)\n-{\n-  printf (_(\"Usage: jv-scan [OPTION]... FILE...\\n\\n\"));\n-  printf (_(\"Print useful information read from Java source files.\\n\\n\"));\n-  printf (_(\"  --no-assert             Don't recognize the assert keyword\\n\"));\n-  printf (_(\"  --complexity            Print cyclomatic complexity of input file\\n\"));\n-  printf (_(\"  --encoding NAME         Specify encoding of input file\\n\"));\n-  printf (_(\"  --print-main            Print name of class containing 'main'\\n\"));\n-  printf (_(\"  --list-class            List all classes defined in file\\n\"));\n-  printf (_(\"  --list-filename         Print input filename when listing class names\\n\"));\n-  printf (_(\"  -o FILE                 Set output file name\\n\"));\n-  printf (\"\\n\");\n-  printf (_(\"  --help                  Print this help, then exit\\n\"));\n-  printf (_(\"  --version               Print version number, then exit\\n\"));\n-  printf (\"\\n\");\n-  printf (_(\"For bug reporting instructions, please see:\\n\"\n-\t    \"%s.\\n\"), bug_report_url);\n-  exit (0);\n-}\n-\n-static void\n-version (void)\n-{\n-  printf (\"jv-scan (GCC) %s\\n\\n\", version_string);\n-  printf (\"Copyright %s 2006 Free Software Foundation, Inc.\\n\", _(\"(C)\"));\n-  printf (_(\"This is free software; see the source for copying conditions.  There is NO\\n\"\n-\t    \"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"));\n-  exit (0);\n-}\n-\n-/* jc1-lite main entry point */\n-int\n-main (int argc, char **argv)\n-{\n-  int i = 1;\n-  const char *output_file = NULL;\n-  const char *encoding = NULL;\n-  long ft;\n-  int opt;\n-\n-  exec_name = argv[0];\n-\n-  /* Default for output */\n-  out = stdout;\n-\n-  /* Unlock the stdio streams.  */\n-  unlock_std_streams ();\n-\n-  gcc_init_libintl ();\n-\n-  /* Process options first.  We use getopt_long and not\n-     getopt_long_only because we only support `--' long options here.  */\n-  while ((opt = getopt_long (argc, argv, \"o:\", options, NULL)) != -1)\n-    {\n-      switch (opt)\n-\t{\n-\tcase 0:\n-\t  /* Already handled.  */\n-\t  break;\n-\n-\tcase 'o':\n-\t  output_file = optarg;\n-\t  break;\n-\n-\tcase OPT_HELP:\n-\t  help ();\n-\t  break;\n-\n-\tcase OPT_VERSION:\n-\t  version ();\n-\t  break;\n-\n-\tcase OPT_ENCODING:\n-\t  encoding = optarg;\n-\t  break;\n-\n-\tdefault:\n-\t  usage ();\n-\t  break;\n-\t}\n-    }\n-\n-  /* No flags? Do nothing */\n-  if (! flag_find_main && ! flag_dump_class && ! flag_complexity)\n-    return 0;\n-\n-  /* Check on bad usage */\n-  if (flag_find_main + flag_dump_class + flag_complexity > 1)\n-    fatal_error\n-      (\"only one of '--print-main', '--list-class', and '--complexity' allowed\");\n-\n-  if (output_file && !(out = fopen (output_file, \"w\")))\n-    fatal_error (\"can't open output file '%s'\", output_file);\n-\n-  ft = ftell (out);\n-\n-  gcc_obstack_init (&temporary_obstack);\n-  java_push_parser_context ();\n-\n-  for ( i = optind; i < argc; i++ )\n-    if (argv [i])\n-      {\n-\tchar *filename = argv[i];\n-\tif ( (finput = fopen (filename, \"r\")) )\n-\t  {\n-\t    /* There's no point in trying to find the current encoding\n-\t       unless we are going to do something intelligent with it\n-\t       -- hence the test for iconv.  */\n-#if defined (HAVE_LOCALE_H) && defined (HAVE_ICONV) && defined (HAVE_LANGINFO_CODESET)\n-\t    setlocale (LC_CTYPE, \"\");\n-\t    if (encoding == NULL)\n-\t      encoding = nl_langinfo (CODESET);\n-#endif  \n-\t    if (encoding == NULL || *encoding == '\\0')\n-\t      encoding = DEFAULT_ENCODING;\n-\n-            main_input_filename = filename;\n-\t    java_init_lex (finput, encoding);\n-\t    ctxp->filename = filename;\n-\t    yyparse ();\n-\t    report ();\n-\t    if (ftell (out) != ft)\n-\t      fputc ('\\n', out);\n-\t    ft = ftell (out);\n-\t    fclose (finput);\n-\t    reset_report ();\n-\t  }\n-\telse\n-\t  fatal_error (\"file not found '%s'\", argv [i]);\n-      }\n-\n-  /* Flush and close */\n-  if (ftell (out) != ft)\n-    fputc ('\\n', out);\n-  if (!output_file)\n-    fclose (out);\n-\n-  return 0;\n-}\n-\n-\f\n-\n-/* Error report, memory, obstack initialization and other utility\n-   functions.  Use actually c-format msgid, but as functions with\n-   the same name elsewhere use gcc-internal-format, assume all users\n-   here use intersection between c-format and gcc-internal-format.  */\n-\n-void\n-fatal_error (const char *gmsgid, ...)\n-{\n-  va_list ap;\n-  va_start (ap, gmsgid);\n-  fprintf (stderr, _(\"%s: error: \"), exec_name);\n-  vfprintf (stderr, _(gmsgid), ap);\n-  fputc ('\\n', stderr);\n-  va_end (ap);\n-  exit (1);\n-}\n-\n-void\n-warning (int opt ATTRIBUTE_UNUSED, const char *gmsgid, ...)\n-{\n-  va_list ap;\n-  va_start (ap, gmsgid);\n-  fprintf (stderr, _(\"%s: warning: \"), exec_name);\n-  vfprintf (stderr, _(gmsgid), ap);\n-  fputc ('\\n', stderr);\n-  va_end (ap);\n-}\n-\n-void\n-warning0 (const char *gmsgid, ...)\n-{\n-  va_list ap;\n-  va_start (ap, gmsgid);\n-  fprintf (stderr, _(\"%s: warning: \"), exec_name);\n-  vfprintf (stderr, _(gmsgid), ap);\n-  fputc ('\\n', stderr);\n-  va_end (ap);\n-}\n-\n-void\n-fancy_abort (const char *file, int line, const char *func)\n-{\n-  fatal_error (\"abort in %s, at %s:%d\", func, file, line);\n-}"}, {"sha": "f4fb0ba38ab6b3ff5570263fc00e1fefa7591e83", "filename": "gcc/java/jvgenmain.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjvgenmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjvgenmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvgenmain.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,5 +1,5 @@\n /* Program to generate \"main\" a Java(TM) class containing a main method.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -57,14 +57,23 @@ main (int argc, char **argv)\n   FILE *stream;\n   const char *mangled_classname;\n   int i, last_arg;\n+  int indirect = 0;\n+  char *prog_name = argv[0];\n \n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();\n \n   gcc_init_libintl ();\n \n+  if (argc > 1 && ! strcmp (argv[1], \"-findirect-dispatch\"))\n+    {\n+      indirect = 1;\n+      ++argv;\n+      --argc;\n+    }\n+\n   if (argc < 2)\n-    usage (argv[0]);\n+    usage (prog_name);\n \n   for (i = 1; i < argc; ++i)\n     {\n@@ -77,15 +86,15 @@ main (int argc, char **argv)\n     }\n \n   if (i < argc - 2 || i == argc)\n-    usage (argv[0]);\n+    usage (prog_name);\n   last_arg = i;\n \n   classname = argv[i];\n \n   /* gcj always appends `main' to classname.  We need to strip this here.  */\n   p = strrchr (classname, 'm');\n   if (p == NULL || p == classname || strcmp (p, \"main\") != 0)\n-    usage (argv[0]);\n+    usage (prog_name);\n   else\n     *p = '\\0';\n \n@@ -99,7 +108,7 @@ main (int argc, char **argv)\n       if (stream == NULL)\n \t{\n \t  fprintf (stderr, _(\"%s: Cannot open output file: %s\\n\"),\n-\t\t   argv[0], outfile);\n+\t\t   prog_name, outfile);\n \t  exit (1);\n \t}\n     }\n@@ -130,13 +139,18 @@ main (int argc, char **argv)\n   fprintf (stream, \"int main (int argc, const char **argv)\\n\");\n   fprintf (stream, \"{\\n\");\n   fprintf (stream, \"   _Jv_Compiler_Properties = props;\\n\");\n-  fprintf (stream, \"   extern void *%s;\\n\", mangled_classname);\n-  fprintf (stream, \"   JvRunMain (%s, argc, argv);\\n\", mangled_classname);\n+  if (indirect)\n+    fprintf (stream, \"   JvRunMainName (\\\"%s\\\", argc, argv);\\n\", classname);\n+  else\n+    {\n+      fprintf (stream, \"   extern void *%s;\\n\", mangled_classname);\n+      fprintf (stream, \"   JvRunMain (%s, argc, argv);\\n\", mangled_classname);\n+    }\n   fprintf (stream, \"}\\n\");\n   if (stream != stdout && fclose (stream) != 0)\n     {\n       fprintf (stderr, _(\"%s: Failed to close output file %s\\n\"),\n-\t       argv[0], argv[2]);\n+\t       prog_name, argv[2]);\n       exit (1);\n     }\n   return 0;"}, {"sha": "a26f4f68567ba6cd2c20ac91e791e720d50589e2", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 68, "deletions": 35, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,7 +1,7 @@\n /* Specific flags and argument handling of the front-end of the \n    GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -29,6 +29,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"gcc.h\"\n+#include \"jcf.h\"\n \n /* Name of spec file.  */\n #define SPEC_FILE \"libgcj.spec\"\n@@ -58,7 +59,7 @@ int lang_specific_extra_outfiles = 0;\n int shared_libgcc = 1;\n \n static const char jvgenmain_spec[] =\n-  \"jvgenmain %{D*} %b %m.i |\\n\\\n+  \"jvgenmain %{findirect-dispatch} %{D*} %b %m.i |\\n\\\n    cc1 %m.i %1 \\\n \t\t   %{!Q:-quiet} -dumpbase %b.c %{d*} %{m*} %{a*}\\\n \t\t   %{g*} %{O*} \\\n@@ -74,7 +75,7 @@ static const char jvgenmain_spec[] =\n \t\t   %<fextdirs*\\\n \t\t   %<fuse-divide-subroutine %<fno-use-divide-subroutine\\\n \t\t   %<fcheck-references %<fno-check-references\\\n-\t\t   %<ffilelist-file\\\n+\t\t   %<ffilelist-file %<fsaw-java-file %<fsource* %<ftarget*\\\n \t\t   %{f*} -fdollars-in-identifiers\\\n \t\t   %{aux-info*}\\\n \t\t   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n@@ -103,7 +104,6 @@ find_spec_file (const char *dir)\n   return NULL;\n }\n \n-/* FIXME: these should come from lex.h.  */\n #define JAVA_START_CHAR_P(c) (c < 128 && (ISIDST (c) || c == '$'))\n #define JAVA_PART_CHAR_P(c) (c < 128\t\t\t\t\t      \\\n \t\t\t     && (ISIDNUM (c)\t\t\t\t      \\\n@@ -189,23 +189,6 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n      already gave a language for the file.  */\n   int saw_speclang = 0;\n \n-#if 0\n-  /* \"-lm\" or \"-lmath\" if it appears on the command line.  */\n-  const char *saw_math ATTRIBUTE_UNUSED = 0;\n-\n-  /* \"-lc\" if it appears on the command line.  */\n-  const char *saw_libc ATTRIBUTE_UNUSED = 0;\n-\n-  /* \"-lgcjgc\" if it appears on the command line.  */\n-  const char *saw_gc ATTRIBUTE_UNUSED = 0;\n-\n-  /* Saw `-l' option for the thread library.  */\n-  const char *saw_threadlib ATTRIBUTE_UNUSED = 0;\n-\n-  /* Saw `-lgcj' on command line.  */\n-  int saw_libgcj ATTRIBUTE_UNUSED = 0;\n-#endif\n-\n   /* Saw --resource, -C or -o options, respectively. */\n   int saw_resource = 0;\n   int saw_C = 0;\n@@ -231,6 +214,10 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   /* The number of libraries added in.  */\n   int added_libraries;\n \n+  /* The total number of arguments having to do with classpath\n+     setting.  */\n+  int classpath_args = 0;\n+\n   /* The total number of arguments with the new stuff.  */\n   int num_args = 1;\n \n@@ -467,14 +454,6 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n       num_args -= java_files_count + class_files_count + zip_files_count;\n       num_args += 3;  /* for the combined arg \"-xjava\", and \"-xnone\" */\n     }\n-  /* If we know we don't have to do anything, bail now.  */\n-#if 0\n-  if (! added && ! library && main_class_name == NULL && ! saw_C)\n-    {\n-      free (args);\n-      return;\n-    }\n-#endif\n \n   if (main_class_name)\n     {\n@@ -483,6 +462,8 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   if (saw_g + saw_O == 0)\n     num_args++;\n   num_args++;\n+  /* An additional entry for the classpath.  */\n+  num_args++;\n \n   if (combine_inputs || indirect_files_count > 0)\n     num_args += 1; /* for \"-ffilelist-file\" */\n@@ -495,6 +476,9 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   shared_libgcc = 0;\n #endif  \n   \n+  if (java_files_count > 0)\n+    ++num_args;\n+\n   num_args += shared_libgcc;\n \n   num_args += link_for_bc_abi;\n@@ -514,6 +498,10 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n       arglist[j++] = \"-xnone\";\n     }\n \n+  if (java_files_count > 0)\n+    arglist[j++] = \"-fsaw-java-file\";\n+\n+  jcf_path_init ();\n   for (i = 1; i < argc; i++, j++)\n     {\n       arglist[j] = argv[i];\n@@ -528,11 +516,51 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n \t  arglist[j] = \"-xnone\";\n \t}\n \n-      if (strcmp (argv[i], \"-classpath\") == 0\n-\t  || strcmp (argv[i], \"-bootclasspath\") == 0\n-\t  || strcmp (argv[i], \"-CLASSPATH\") == 0\n-\t  || strcmp (argv[i], \"-encoding\") == 0\n-\t  || strcmp (argv[i], \"-extdirs\") == 0)\n+      if (argv[i][1] == 'I')\n+\t{\n+\t  jcf_path_include_arg (&argv[i][2]);\n+\t  --j;\n+\t  continue;\n+\t}\n+      if (! strcmp (argv[i], \"-classpath\")\n+\t  || ! strcmp (argv[i], \"-CLASSPATH\"))\n+\t{\n+\t  jcf_path_classpath_arg (argv[i + 1]);\n+\t  ++i;\n+\t  --j;\n+\t  continue;\n+\t}\n+      if (! strcmp (argv[i], \"-bootclasspath\"))\n+\t{\n+\t  jcf_path_bootclasspath_arg (argv[i + 1]);\n+\t  ++i;\n+\t  --j;\n+\t  continue;\n+\t}\n+      if (! strncmp (argv[i], \"-fCLASSPATH=\", 12)\n+\t  || ! strncmp (argv[i], \"-fclasspath=\", 12))\n+\t{\n+\t  char *p = strchr (argv[i], '=');\n+\t  jcf_path_classpath_arg (p + 1);\n+\t  --j;\n+\t  continue;\n+\t}\n+      if (! strncmp (argv[i], \"-fbootclasspath=\", 16))\n+\t{\n+\t  char *p = strchr (argv[i], '=');\n+\t  jcf_path_bootclasspath_arg (p + 1);\n+\t  --j;\n+\t  continue;\n+\t}\n+      if (! strcmp (argv[i], \"-extdirs\"))\n+\t{\n+\t  jcf_path_extdirs_arg (argv[i + 1]);\n+\t  ++i;\n+\t  --j;\n+\t  continue;\n+\t}\n+\n+      if (strcmp (argv[i], \"-encoding\") == 0)\n \t{\n \t  arglist[j] = concat (\"-f\", argv[i]+1, \"=\", argv[i+1], NULL);\n \t  i++;\n@@ -580,6 +608,11 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n \t}\n   }\n \n+  /* Handle classpath setting.  We specify the bootclasspath since\n+     that requires the fewest changes to our existing code...  */\n+  jcf_path_seal (0);\n+  arglist[j++] = jcf_path_compute (\"-fbootclasspath=\");\n+\n   if (combine_inputs)\n     {\n       if (fclose (filelist_file))"}, {"sha": "922c987145c36cf49bbf13099baf1cbe413d458a", "filename": "gcc/java/keyword.gperf", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fkeyword.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fkeyword.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.gperf?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,91 +0,0 @@\n-%{\n-/* Keyword definition for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1997, 1998, 2001, 2002, 2003\n-   Free Software Foundation, Inc.\n-   Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.\n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-%}\n-struct java_keyword { const char *const name; const int token; };\n-#ifdef __GNUC__\n-__inline\n-#endif\n-static unsigned int hash (const char *, unsigned int);\n-#ifdef __GNUC__\n-__inline\n-#endif\n-const struct java_keyword *java_keyword (const char *, unsigned int);\n-%%\n-abstract, ABSTRACT_TK\n-default, DEFAULT_TK\n-if, IF_TK\n-private, PRIVATE_TK\n-throw, THROW_TK\n-boolean, BOOLEAN_TK\n-do, DO_TK\n-implements, IMPLEMENTS_TK\n-protected, PROTECTED_TK\n-throws, THROWS_TK\n-break, BREAK_TK\n-double, DOUBLE_TK\n-import, IMPORT_TK\n-public, PUBLIC_TK\n-transient, TRANSIENT_TK\n-byte, BYTE_TK\n-else, ELSE_TK\n-instanceof, INSTANCEOF_TK\n-return, RETURN_TK\n-try, TRY_TK\n-case, CASE_TK\n-extends, EXTENDS_TK\n-int, INT_TK\n-short, SHORT_TK\n-void, VOID_TK\n-catch, CATCH_TK\n-final, FINAL_TK\n-interface, INTERFACE_TK\n-static, STATIC_TK\n-volatile, VOLATILE_TK\n-char, CHAR_TK\n-finally, FINALLY_TK\n-long, LONG_TK\n-super, SUPER_TK\n-while, WHILE_TK\n-class, CLASS_TK\n-float, FLOAT_TK\n-native, NATIVE_TK\n-switch, SWITCH_TK\n-const, CONST_TK\n-for, FOR_TK\n-new, NEW_TK\n-synchronized, SYNCHRONIZED_TK\n-continue, CONTINUE_TK\n-goto, GOTO_TK\n-package, PACKAGE_TK\n-this, THIS_TK\n-strictfp, STRICT_TK\n-# true, false and null aren't keyword. But we match them easily this way\n-true, TRUE_TK\n-false, FALSE_TK\n-null, NULL_TK\n-assert, ASSERT_TK"}, {"sha": "a6faf741b978b029779f04d7c6e54db329446a97", "filename": "gcc/java/keyword.h", "status": "removed", "additions": 0, "deletions": 189, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fkeyword.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fkeyword.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.h?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,189 +0,0 @@\n-/* ANSI-C code produced by gperf version 2.7.2 */\n-/* Command-line: gperf -L ANSI-C -C -F ', 0' -p -t -j1 -i 1 -g -o -N java_keyword -k'1,4,$' keyword.gperf  */\n-/* Keyword definition for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1997, 1998, 2001, 2002, 2003\n-   Free Software Foundation, Inc.\n-   Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.\n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-struct java_keyword { const char *const name; const int token; };\n-#ifdef __GNUC__\n-__inline\n-#endif\n-static unsigned int hash (const char *, unsigned int);\n-#ifdef __GNUC__\n-__inline\n-#endif\n-const struct java_keyword *java_keyword (const char *, unsigned int);\n-\n-#define TOTAL_KEYWORDS 52\n-#define MIN_WORD_LENGTH 2\n-#define MAX_WORD_LENGTH 12\n-#define MIN_HASH_VALUE 7\n-#define MAX_HASH_VALUE 85\n-/* maximum key range = 79, duplicates = 0 */\n-\n-#ifdef __GNUC__\n-__inline\n-#else\n-#ifdef __cplusplus\n-inline\n-#endif\n-#endif\n-static unsigned int\n-hash (const char *str, unsigned int len)\n-{\n-  static const unsigned char asso_values[] =\n-    {\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86,  1, 34,  3,\n-       1,  1, 18,  7, 21, 28, 86, 14,  1, 86,\n-      18, 20, 37, 86, 15,  6,  2,  5, 40, 36,\n-      86, 36, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86, 86, 86, 86, 86,\n-      86, 86, 86, 86, 86, 86\n-    };\n-  int hval = len;\n-\n-  switch (hval)\n-    {\n-      default:\n-      case 4:\n-        hval += asso_values[(unsigned char)str[3]];\n-      case 3:\n-      case 2:\n-      case 1:\n-        hval += asso_values[(unsigned char)str[0]];\n-        break;\n-    }\n-  return hval + asso_values[(unsigned char)str[len - 1]];\n-}\n-\n-#ifdef __GNUC__\n-__inline\n-#endif\n-const struct java_keyword *\n-java_keyword (const char *str, unsigned int len)\n-{\n-  static const struct java_keyword wordlist[] =\n-    {\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"\", 0},\n-      {\"else\", ELSE_TK},\n-      {\"true\", TRUE_TK},\n-      {\"case\", CASE_TK},\n-      {\"assert\", ASSERT_TK},\n-      {\"default\", DEFAULT_TK},\n-      {\"\", 0},\n-      {\"abstract\", ABSTRACT_TK},\n-      {\"continue\", CONTINUE_TK},\n-      {\"extends\", EXTENDS_TK},\n-      {\"const\", CONST_TK},\n-      {\"static\", STATIC_TK},\n-      {\"this\", THIS_TK},\n-      {\"long\", LONG_TK},\n-      {\"class\", CLASS_TK},\n-      {\"\", 0},\n-      {\"synchronized\", SYNCHRONIZED_TK},\n-      {\"do\", DO_TK},\n-      {\"null\", NULL_TK},\n-      {\"final\", FINAL_TK},\n-      {\"float\", FLOAT_TK},\n-      {\"super\", SUPER_TK},\n-      {\"short\", SHORT_TK},\n-      {\"\", 0},\n-      {\"false\", FALSE_TK},\n-      {\"transient\", TRANSIENT_TK},\n-      {\"catch\", CATCH_TK},\n-      {\"int\", INT_TK},\n-      {\"throws\", THROWS_TK},\n-      {\"switch\", SWITCH_TK},\n-      {\"for\", FOR_TK},\n-      {\"char\", CHAR_TK},\n-      {\"\", 0},\n-      {\"interface\", INTERFACE_TK},\n-      {\"byte\", BYTE_TK},\n-      {\"try\", TRY_TK},\n-      {\"double\", DOUBLE_TK},\n-      {\"while\", WHILE_TK},\n-      {\"return\", RETURN_TK},\n-      {\"implements\", IMPLEMENTS_TK},\n-      {\"void\", VOID_TK},\n-      {\"public\", PUBLIC_TK},\n-      {\"if\", IF_TK},\n-      {\"protected\", PROTECTED_TK},\n-      {\"volatile\", VOLATILE_TK},\n-      {\"goto\", GOTO_TK},\n-      {\"\", 0},\n-      {\"native\", NATIVE_TK},\n-      {\"break\", BREAK_TK},\n-      {\"\", 0},\n-      {\"import\", IMPORT_TK},\n-      {\"new\", NEW_TK},\n-      {\"instanceof\", INSTANCEOF_TK},\n-      {\"package\", PACKAGE_TK},\n-      {\"boolean\", BOOLEAN_TK},\n-      {\"\", 0},\n-      {\"finally\", FINALLY_TK},\n-      {\"throw\", THROW_TK},\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"strictfp\", STRICT_TK},\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"private\", PRIVATE_TK}\n-    };\n-\n-  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)\n-    {\n-      int key = hash (str, len);\n-\n-      if (key <= MAX_HASH_VALUE && key >= 0)\n-        {\n-          const char *s = wordlist[key].name;\n-\n-          if (*str == *s && !strcmp (str + 1, s + 1))\n-            return &wordlist[key];\n-        }\n-    }\n-  return 0;\n-}"}, {"sha": "be439d42c2c22e95d1a37932483db1fd2c4ab158", "filename": "gcc/java/lang-specs.h", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-specs.h?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for specs for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2003, 2004\n+   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2003, 2004, 2006\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -35,7 +35,30 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n     %{fjni:%{femit-class-file:%e-fjni and -femit-class-file are incompatible}}\\\n     %{femit-class-file:%{!fsyntax-only:%e-femit-class-file should used along with -fsyntax-only}}\\\n     %{femit-class-files:%{!fsyntax-only:%e-femit-class-file should used along with -fsyntax-only}}\\\n-    %{!E:jc1 %i %(jc1) %(cc1_options) %{+e*} %{I*}\\\n-             %{MD:-MD_} %{MMD:-MMD_} %{M} %{MM} %{MA} %{MT*} %{MF*}\\\n-             %{!fsyntax-only:%(invoke_as)}}\", 0, 0, 0},\n+    %{E:%{e-E is not valid for gcj}}\\\n+    %{.java|fsaw-java-file:ecj1 %i %{W*} %{w} %{g*}\t\t\t\\\n+      %{fbootclasspath*}\t\t\t\t\t\t\\\n+      %{fenable-assertions*}\t\t\t\t\t\t\\\n+      %{fdisable-assertions*}\t\t\t\t\t\t\\\n+      %{fencoding*} %{ffilelist-file}\t\t\t\t\t\\\n+      %{foutput-class-dir*} %{g*}\t\t\t\t\t\\\n+      %{fsource*} %{!fsource*:-fsource=1.5}\t\t\t\t\\\n+      %{ftarget*} %{!femit-class-files|!ftarget*:-ftarget=1.5}\t\t\\\n+      %{!findirect-dispatch:-fzip-dependency %U.zip}\t\t\t\\\n+      %{!fsyntax-only:-fzip-target %U.jar}}\\n\t\t\t\t\\\n+    %{.class|.zip|.jar|!fsyntax-only:jc1\t\t\t\t\\\n+      %{.java|fsaw-java-file:%U.jar -fsource-filename=%i %<ffilelist-file} \\\n+      %{.class|.zip|.jar|ffilelist-file|fcompile-resource*:%i}\t\t\\\n+      %(jc1) %(cc1_options) %{I*} %{!findirect-dispatch:-faux-classpath %U.zip} \\\n+      %{MD:-MD_} %{MMD:-MMD_} %{M} %{MM} %{MA} %{MT*} %{MF*}\\\n+      %(invoke_as)}\",\n+      0, 0, 0},\n \n+  /*\n+    FIXME: we don't use %|, even though we could, because we need the\n+    dependency zip to be ready early enough.  We could work around\n+    this by not having a dependency zip and instead teaching jc1 to\n+    read a special manifest file included in the sole zip, this\n+    manifest would say which files are to be compiled and which are\n+    not.\n+   */"}, {"sha": "51a59d218a835b36c2f1f37c8ee516c16ad07a0f", "filename": "gcc/java/lang.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Java(TM) language-specific utility routines.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -120,16 +120,11 @@ const struct attribute_spec java_attribute_table[] =\n    prototypes.  Starts out false.  */\n static bool inhibit_error_function_printing;\n \n-int compiling_from_source;\n-\n const char *resource_name;\n \n /* When nonzero, -Wall was turned on.  */\n int flag_wall = 0;\n \n-/* The encoding of the source file.  */\n-const char *current_encoding = NULL;\n-\n /* When nonzero, report use of deprecated classes, methods, or fields.  */\n int flag_deprecated = 1;\n \n@@ -313,6 +308,7 @@ java_handle_option (size_t scode, const char *arg, int value)\n       jcf_path_bootclasspath_arg (arg);\n       break;\n \n+    case OPT_faux_classpath:\n     case OPT_fclasspath_:\n     case OPT_fCLASSPATH_:\n       jcf_path_classpath_arg (arg);\n@@ -328,21 +324,25 @@ java_handle_option (size_t scode, const char *arg, int value)\n       break;\n \n     case OPT_fencoding_:\n-      current_encoding = arg;\n+      /* Nothing.  */\n       break;\n \n     case OPT_fextdirs_:\n       jcf_path_extdirs_arg (arg);\n       break;\n \n     case OPT_foutput_class_dir_:\n-      jcf_write_base_directory = arg;\n+      /* FIXME: remove; this is handled by ecj1 now.  */\n       break;\n \n     case OPT_version:\n       v_flag = 1;\n       break;\n       \n+    case OPT_fsource_filename_:\n+      java_read_sourcefilenames (arg);\n+      break;\n+      \n     default:\n       if (cl_options[code].flags & CL_Java)\n \tbreak;\n@@ -994,7 +994,8 @@ java_dump_tree (void *dump_info, tree t)\n static bool\n java_decl_ok_for_sibcall (tree decl)\n {\n-  return decl != NULL && DECL_CONTEXT (decl) == output_class;\n+  return (decl != NULL && DECL_CONTEXT (decl) == output_class\n+\t  && DECL_INLINE (decl));\n }\n \n /* Given a call_expr, try to figure out what its target might be.  In"}, {"sha": "67852eeb3fab890cccde07f2297316619b6093fa", "filename": "gcc/java/lang.opt", "status": "modified", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.opt?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -81,6 +81,9 @@ fCLASSPATH=\n Java JoinedOrMissing RejectNegative\n --CLASSPATH\tDeprecated; use --classpath instead\n \n+faux-classpath\n+Java Separate RejectNegative Undocumented\n+\n fassert\n Java Var(flag_assert) Init(1)\n Permit the use of the assert keyword\n@@ -134,10 +137,16 @@ fextdirs=\n Java Joined RejectNegative\n --extdirs=<path>\tSet the extension directory path\n \n+fsource-filename=\n+Java Joined Undocumented \n+\n ffilelist-file\n Java Var(flag_filelist_file)\n Input file is a file with a list of filenames to compile\n \n+fsaw-java-file\n+Java Undocumented RejectNegative\n+\n fforce-classes-archive-check\n Java Var(flag_force_classes_archive_check)\n Always check for non gcj generated classes archives\n@@ -188,5 +197,175 @@ fbootstrap-classes\n Java Var(flag_bootstrap_classes)\n Generated should be loaded by bootstrap loader\n \n+fsource=\n+Java Joined\n+Set the source language version\n+\n+ftarget=\n+Java Joined\n+Set the target VM version\n+\n version\n Java\n+\n+;\n+; Warnings handled by ecj.\n+; FIXME: document them\n+;\n+\n+Wconstructor-name\n+Java\n+\n+Wpkg-default-method\n+Java\n+\n+Wmasked-catch-block\n+Java\n+\n+Wall-deprecation\n+Java\n+\n+Wunused-local\n+Java\n+\n+Wunused-argument\n+Java\n+\n+Wunused-import\n+Java\n+\n+Wunused-private\n+Java\n+\n+Wunused-label\n+Java\n+\n+Wlocal-hiding\n+Java\n+\n+Wfield-hiding\n+Java\n+\n+Wspecial-param-hiding\n+Java\n+\n+Wcondition-assign\n+Java\n+\n+Wsynthetic-access\n+Java\n+\n+Wnls\n+Java\n+\n+Wstatic-receiver\n+Java\n+\n+Windirect-static\n+Java\n+\n+Wno-effect-assign\n+Java\n+\n+Wintf-non-inherited\n+Java\n+\n+Wchar-concat\n+Java\n+\n+Wserial\n+Java\n+\n+Wempty-block\n+Java\n+\n+Wuseless-type-check\n+Java\n+\n+Wuncheck\n+Java\n+\n+Wraw\n+Java\n+\n+Wfinal-bound\n+Java\n+\n+Wsuppress\n+Java\n+\n+Wwarning-token\n+Java\n+\n+Wunnecessary-else\n+Java\n+\n+Wjavadoc\n+Java\n+\n+Wall-javadoc\n+Java\n+\n+Wtasks\n+Java\n+\n+Wassert-identifier\n+Java\n+\n+Wenum-identifier\n+Java\n+\n+Wfinally\n+Java\n+\n+Wunused-thrown\n+Java\n+\n+Wunqualified-field\n+Java\n+\n+Wtype-hiding\n+Java\n+\n+Wvarargs-cast\n+Java\n+\n+Wnull\n+Java\n+\n+Wboxing\n+Java\n+\n+Wover-ann\n+Java\n+\n+Wdep-ann\n+Java\n+\n+Wintf-annotation\n+Java\n+\n+Wenum-switch\n+Java\n+\n+Whiding\n+Java\n+\n+Wstatic-access\n+Java\n+\n+Wunused\n+Java\n+\n+Wparam-assign\n+Java\n+\n+Wdiscouraged\n+Java\n+\n+Wforbidden\n+Java\n+\n+Wfallthrough\n+Java\n+"}, {"sha": "730c1447fbd8fb47d0e0e7fdb09a6549a05e76c6", "filename": "gcc/java/lex.c", "status": "removed", "additions": 0, "deletions": 2073, "changes": 2073, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,2073 +0,0 @@\n-/* Language lexer for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n-   Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA. \n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-/* It defines java_lex (yylex) that reads a Java ASCII source file\n-   possibly containing Unicode escape sequence or utf8 encoded\n-   characters and returns a token for everything found but comments,\n-   white spaces and line terminators. When necessary, it also fills\n-   the java_lval (yylval) union. It's implemented to be called by a\n-   re-entrant parser generated by Bison.\n-\n-   The lexical analysis conforms to the Java grammar described in \"The\n-   Java(TM) Language Specification. J. Gosling, B. Joy, G. Steele.\n-   Addison Wesley 1996\" (http://java.sun.com/docs/books/jls/html/3.doc.html) */\n-\n-#include \"keyword.h\"\n-#include \"flags.h\"\n-#include \"chartables.h\"\n-#ifndef JC1_LITE\n-#include \"timevar.h\"\n-#endif\n-\n-/* Function declarations.  */\n-static char *java_sprint_unicode (int);\n-static void java_unicode_2_utf8 (unicode_t);\n-static void java_lex_error (const char *, int);\n-#ifndef JC1_LITE\n-static int do_java_lex (YYSTYPE *);\n-static int java_lex (YYSTYPE *);\n-static int java_is_eol (FILE *, int);\n-static tree build_wfl_node (tree);\n-#endif\n-static int java_parse_escape_sequence (void);\n-static int java_start_char_p (unicode_t);\n-static int java_part_char_p (unicode_t);\n-static int java_space_char_p (unicode_t);\n-static void java_parse_doc_section (int);\n-static void java_parse_end_comment (int);\n-static int java_read_char (java_lexer *);\n-static int java_get_unicode (void);\n-static int java_peek_unicode (void);\n-static void java_next_unicode (void);\n-static int java_read_unicode (java_lexer *, int *);\n-#ifndef JC1_LITE\n-static int utf8_cmp (const unsigned char *, int, const char *);\n-#endif\n-\n-java_lexer *java_new_lexer (FILE *, const char *);\n-#ifndef JC1_LITE\n-static void error_if_numeric_overflow (tree);\n-#endif\n-\n-#ifdef HAVE_ICONV\n-/* This is nonzero if we have initialized `need_byteswap'.  */\n-static int byteswap_init = 0;\n-\n-/* Some versions of iconv() (e.g., glibc 2.1.3) will return UCS-2 in\n-   big-endian order -- not native endian order.  We handle this by\n-   doing a conversion once at startup and seeing what happens.  This\n-   flag holds the results of this determination.  */\n-static int need_byteswap = 0;\n-#endif\n-\n-void\n-java_init_lex (FILE *finput, const char *encoding)\n-{\n-#ifndef JC1_LITE\n-  int java_lang_imported = 0;\n-\n-  if (!java_lang_id)\n-    java_lang_id = get_identifier (\"java.lang\");\n-  if (!inst_id)\n-    inst_id = get_identifier (\"inst$\");\n-  if (!wpv_id)\n-    wpv_id = get_identifier (\"write_parm_value$\");\n-\n-  if (!java_lang_imported)\n-    {\n-      tree node = build_tree_list (build_unknown_wfl (java_lang_id),\n-\t\t\t\t   NULL_TREE);\n-      read_import_dir (TREE_PURPOSE (node));\n-      TREE_CHAIN (node) = ctxp->import_demand_list;\n-      ctxp->import_demand_list = node;\n-      java_lang_imported = 1;\n-    }\n-\n-  if (!wfl_operator)\n-    {\n-#ifndef JC1_LITE\n-#ifdef USE_MAPPED_LOCATION\n-      wfl_operator = build_expr_wfl (NULL_TREE, input_location);\n-#else\n-      wfl_operator = build_expr_wfl (NULL_TREE, ctxp->filename, 0, 0);\n-#endif\n-#endif\n-    }\n-  if (!label_id)\n-    label_id = get_identifier (\"$L\");\n-  if (!wfl_append) \n-    wfl_append = build_unknown_wfl (get_identifier (\"append\"));\n-  if (!wfl_string_buffer)\n-    wfl_string_buffer = \n-      build_unknown_wfl (get_identifier (flag_emit_class_files\n-\t\t\t\t      ? \"java.lang.StringBuffer\"\n-\t\t\t\t\t : \"gnu.gcj.runtime.StringBuffer\"));\n-  if (!wfl_to_string)\n-    wfl_to_string = build_unknown_wfl (get_identifier (\"toString\"));\n-\n-  CPC_INITIALIZER_LIST (ctxp) = CPC_STATIC_INITIALIZER_LIST (ctxp) =\n-    CPC_INSTANCE_INITIALIZER_LIST (ctxp) = NULL_TREE;\n-\n-  memset (ctxp->modifier_ctx, 0, sizeof (ctxp->modifier_ctx));\n-  ctxp->current_parsed_class = NULL;\n-  ctxp->package = NULL_TREE;\n-#endif\n-\n-#ifndef JC1_LITE\n-  ctxp->save_location = input_location;\n-#endif\n-  ctxp->java_error_flag = 0;\n-  ctxp->lexer = java_new_lexer (finput, encoding);\n-}\n-\n-static char *\n-java_sprint_unicode (int c)\n-{\n-  static char buffer [10];\n-  if (c < ' ' || c >= 127)\n-    sprintf (buffer, \"\\\\u%04x\", c);\n-  else\n-    {\n-      buffer [0] = c;\n-      buffer [1] = '\\0';\n-    }\n-  return buffer;\n-}\n-\n-/* Create a new lexer object.  */\n-\n-java_lexer *\n-java_new_lexer (FILE *finput, const char *encoding)\n-{\n-  java_lexer *lex = XNEW (java_lexer);\n-  int enc_error = 0;\n-\n-  lex->finput = finput;\n-  lex->bs_count = 0;\n-  lex->unget_value = 0;\n-  lex->next_unicode = 0;\n-  lex->avail_unicode = 0;\n-  lex->next_columns = 1;\n-  lex->encoding = encoding;\n-  lex->position.line = 1;\n-  lex->position.col = 1;\n-#ifndef JC1_LITE\n-#ifdef USE_MAPPED_LOCATION\n-      input_location\n-\t= linemap_line_start (&line_table, 1, 120);\n-#else\n-      input_line = 1;\n-#endif\n-#endif\n-\n-#ifdef HAVE_ICONV\n-  lex->handle = iconv_open (\"UCS-2\", encoding);\n-  if (lex->handle != (iconv_t) -1)\n-    {\n-      lex->first = -1;\n-      lex->last = -1;\n-      lex->out_first = -1;\n-      lex->out_last = -1;\n-      lex->read_anything = 0;\n-      lex->use_fallback = 0;\n-\n-      /* Work around broken iconv() implementations by doing checking at\n-\t runtime.  We assume that if the UTF-8 => UCS-2 encoder is broken,\n-\t then all UCS-2 encoders will be broken.  Perhaps not a valid\n-\t assumption.  */\n-      if (! byteswap_init)\n-\t{\n-\t  iconv_t handle;\n-\n-\t  byteswap_init = 1;\n-\n-\t  handle = iconv_open (\"UCS-2\", \"UTF-8\");\n-\t  if (handle != (iconv_t) -1)\n-\t    {\n-\t      unicode_t result;\n-\t      unsigned char in[3];\n-\t      char *inp, *outp;\n-\t      size_t inc, outc, r;\n-\n-\t      /* This is the UTF-8 encoding of \\ufeff.  */\n-\t      in[0] = 0xef;\n-\t      in[1] = 0xbb;\n-\t      in[2] = 0xbf;\n-\n-\t      inp = (char *) in;\n-\t      inc = 3;\n-\t      outp = (char *) &result;\n-\t      outc = 2;\n-\n-\t      r = iconv (handle, (ICONV_CONST char **) &inp, &inc,\n-\t\t\t &outp, &outc);\n-\t      iconv_close (handle);\n-\t      /* Conversion must be complete for us to use the result.  */\n-\t      if (r != (size_t) -1 && inc == 0 && outc == 0)\n-\t\tneed_byteswap = (result != 0xfeff);\n-\t    }\n-\t}\n-\n-      lex->byte_swap = need_byteswap;\n-    }\n-  else\n-#endif /* HAVE_ICONV */\n-    {\n-      /* If iconv failed, use the internal decoder if the default\n-\t encoding was requested.  This code is used on platforms where\n-\t iconv exists but is insufficient for our needs.  For\n-\t instance, on Solaris 2.5 iconv cannot handle UTF-8 or UCS-2.\n-\n-\t On Solaris the default encoding, as returned by nl_langinfo(),\n-\t is `646' (aka ASCII), but the Solaris iconv_open() doesn't\n-\t understand that.  We work around that by pretending\n-\t `646' to be the same as UTF-8.   */\n-      if (strcmp (encoding, DEFAULT_ENCODING) && strcmp (encoding, \"646\"))\n-\tenc_error = 1;\n-#ifdef HAVE_ICONV\n-      else\n-        {\n-\t  lex->use_fallback = 1;\n-\t  lex->encoding = \"UTF-8\";\n-\t}\n-#endif /* HAVE_ICONV */\n-    }\n-\n-  if (enc_error)\n-    fatal_error (\"unknown encoding: %qs\\nThis might mean that your locale's encoding is not supported\\nby your system's iconv(3) implementation.  If you aren't trying\\nto use a particular encoding for your input file, try the\\n%<--encoding=UTF-8%> option\", encoding);\n-\n-  return lex;\n-}\n-\n-void\n-java_destroy_lexer (java_lexer *lex)\n-{\n-#ifdef HAVE_ICONV\n-  if (! lex->use_fallback)\n-    iconv_close (lex->handle);\n-#endif\n-  free (lex);\n-}\n-\n-static int\n-java_read_char (java_lexer *lex)\n-{\n-#ifdef HAVE_ICONV\n-  if (! lex->use_fallback)\n-    {\n-      size_t ir, inbytesleft, in_save, out_count, out_save;\n-      char *inp, *outp;\n-      unicode_t result;\n-\n-      /* If there is data which has already been converted, use it.  */\n-      if (lex->out_first == -1 || lex->out_first >= lex->out_last)\n-\t{\n-\t  lex->out_first = 0;\n-\t  lex->out_last = 0;\n-\n-\t  while (1)\n-\t    {\n-\t      /* See if we need to read more data.  If FIRST == 0 then\n-\t\t the previous conversion attempt ended in the middle of\n-\t\t a character at the end of the buffer.  Otherwise we\n-\t\t only have to read if the buffer is empty.  */\n-\t      if (lex->first == 0 || lex->first >= lex->last)\n-\t\t{\n-\t\t  int r;\n-\n-\t\t  if (lex->first >= lex->last)\n-\t\t    {\n-\t\t      lex->first = 0;\n-\t\t      lex->last = 0;\n-\t\t    }\n-\t\t  if (feof (lex->finput))\n-\t\t    return UEOF;\n-\t\t  r = fread (&lex->buffer[lex->last], 1,\n-\t\t\t     sizeof (lex->buffer) - lex->last,\n-\t\t\t     lex->finput);\n-\t\t  lex->last += r;\n-\t\t}\n-\n-\t      inbytesleft = lex->last - lex->first;\n-\t      out_count = sizeof (lex->out_buffer) - lex->out_last;\n-\n-\t      if (inbytesleft == 0)\n-\t\t{\n-\t\t  /* We've tried to read and there is nothing left.  */\n-\t\t  return UEOF;\n-\t\t}\n-\n-\t      in_save = inbytesleft;\n-\t      out_save = out_count;\n-\t      inp = &lex->buffer[lex->first];\n-\t      outp = (char *) &lex->out_buffer[lex->out_last];\n-\t      ir = iconv (lex->handle, (ICONV_CONST char **) &inp,\n-\t\t\t  &inbytesleft, &outp, &out_count);\n-\n-\t      /* If we haven't read any bytes, then look to see if we\n-\t\t have read a BOM.  */\n-\t      if (! lex->read_anything && out_save - out_count >= 2)\n-\t\t{\n-\t\t  unicode_t uc = * (unicode_t *) &lex->out_buffer[0];\n-\t\t  if (uc == 0xfeff)\n-\t\t    {\n-\t\t      lex->byte_swap = 0;\n-\t\t      lex->out_first += 2;\n-\t\t    }\n-\t\t  else if (uc == 0xfffe)\n-\t\t    {\n-\t\t      lex->byte_swap = 1;\n-\t\t      lex->out_first += 2;\n-\t\t    }\n-\t\t  lex->read_anything = 1;\n-\t\t}\n-\n-\t      if (lex->byte_swap)\n-\t\t{\n-\t\t  unsigned int i;\n-\t\t  for (i = 0; i < out_save - out_count; i += 2)\n-\t\t    {\n-\t\t      char t = lex->out_buffer[lex->out_last + i];\n-\t\t      lex->out_buffer[lex->out_last + i]\n-\t\t\t= lex->out_buffer[lex->out_last + i + 1];\n-\t\t      lex->out_buffer[lex->out_last + i + 1] = t;\n-\t\t    }\n-\t\t}\n-\n-\t      lex->first += in_save - inbytesleft;\n-\t      lex->out_last += out_save - out_count;\n-\n-\t      /* If we converted anything at all, move along.  */\n-\t      if (out_count != out_save)\n-\t\tbreak;\n-\n-\t      if (ir == (size_t) -1)\n-\t\t{\n-\t\t  if (errno == EINVAL)\n-\t\t    {\n-\t\t      /* This is ok.  This means that the end of our buffer\n-\t\t\t is in the middle of a character sequence.  We just\n-\t\t\t move the valid part of the buffer to the beginning\n-\t\t\t to force a read.  */\n-\t\t      memmove (&lex->buffer[0], &lex->buffer[lex->first],\n-\t\t\t       lex->last - lex->first);\n-\t\t      lex->last -= lex->first;\n-\t\t      lex->first = 0;\n-\t\t    }\n-\t\t  else\n-\t\t    {\n-\t\t      /* A more serious error.  */\n-\t\t      char buffer[128];\n-\t\t      sprintf (buffer,\n-\t\t\t       \"Unrecognized character for encoding '%s'\", \n-\t\t               lex->encoding);\n-\t\t      java_lex_error (buffer, 0);\n-\t\t      return UEOF;\n-\t\t    }\n-\t\t}\n-\t    }\n-\t}\n-\n-      if (lex->out_first == -1 || lex->out_first >= lex->out_last)\n-\t{\n-\t  /* Don't have any data.  */\n-\t  return UEOF;\n-\t}\n-\n-      /* Success.  */\n-      result = * ((unicode_t *) &lex->out_buffer[lex->out_first]);\n-      lex->out_first += 2;\n-      return result;\n-    }\n-  else\n-#endif /* HAVE_ICONV */\n-    {\n-      int c, c1, c2;\n-      c = getc (lex->finput);\n-\n-      if (c == EOF)\n-\treturn UEOF;\n-      if (c < 128)\n-\treturn (unicode_t) c;\n-      else\n-\t{\n-\t  if ((c & 0xe0) == 0xc0)\n-\t    {\n-\t      c1 = getc (lex->finput);\n-\t      if ((c1 & 0xc0) == 0x80)\n-\t\t{\n-\t\t  unicode_t r = (unicode_t)(((c & 0x1f) << 6) + (c1 & 0x3f));\n-\t\t  /* Check for valid 2-byte characters.  We explicitly\n-\t\t     allow \\0 because this encoding is common in the\n-\t\t     Java world.  */\n-\t\t  if (r == 0 || (r >= 0x80 && r <= 0x7ff))\n-\t\t    return r;\n-\t\t}\n-\t    }\n-\t  else if ((c & 0xf0) == 0xe0)\n-\t    {\n-\t      c1 = getc (lex->finput);\n-\t      if ((c1 & 0xc0) == 0x80)\n-\t\t{\n-\t\t  c2 = getc (lex->finput);\n-\t\t  if ((c2 & 0xc0) == 0x80)\n-\t\t    {\n-\t\t      unicode_t r =  (unicode_t)(((c & 0xf) << 12) + \n-\t\t\t\t\t\t (( c1 & 0x3f) << 6)\n-\t\t\t\t\t\t + (c2 & 0x3f));\n-\t\t      /* Check for valid 3-byte characters.\n-\t\t\t Don't allow surrogate, \\ufffe or \\uffff.  */\n-\t\t      if (IN_RANGE (r, 0x800, 0xffff)\n-\t\t\t  && ! IN_RANGE (r, 0xd800, 0xdfff)\n-\t\t\t  && r != 0xfffe && r != 0xffff)\n-\t\t\treturn r;\n-\t\t    }\n-\t\t}\n-\t    }\n-\n-\t  /* We simply don't support invalid characters.  We also\n-\t     don't support 4-, 5-, or 6-byte UTF-8 sequences, as these\n-\t     cannot be valid Java characters.  */\n-\t  java_lex_error (\"malformed UTF-8 character\", 0);\n-\t}\n-    }\n-\n-  /* We only get here on error.  */\n-  return UEOF;\n-}\n-\n-static int\n-java_read_unicode (java_lexer *lex, int *unicode_escape_p)\n-{\n-  int c;\n-\n-  if (lex->unget_value)\n-    {\n-      c = lex->unget_value;\n-      lex->unget_value = 0;\n-    }\n-  else\n-    c = java_read_char (lex);\n-\n-  *unicode_escape_p = 0;\n-\n-  if (c != '\\\\')\n-    {\n-      lex->bs_count = 0;\n-      return c;\n-    }\n-\n-  ++lex->bs_count;\n-  if ((lex->bs_count) % 2 == 1)\n-    {\n-      /* Odd number of \\ seen.  */\n-      c = java_read_char (lex);\n-      if (c == 'u')\n-        {\n-\t  unicode_t unicode = 0;\n-\t  int shift = 12;\n-\n-\t  /* Recognize any number of `u's in \\u.  */\n-\t  while ((c = java_read_char (lex)) == 'u')\n-\t    ;\n-\n-\t  shift = 12;\n-\t  do\n-\t    {\n-\t      if (c == UEOF)\n-\t\t{\n-\t\t  java_lex_error (\"prematurely terminated \\\\u sequence\", 0);\n-\t\t  return UEOF;\n-\t\t}\n-\n-\t      if (hex_p (c))\n-\t\tunicode |= (unicode_t)(hex_value (c) << shift);\n-\t      else\n-\t\t{\n-\t\t  java_lex_error (\"non-hex digit in \\\\u sequence\", 0);\n-\t\t  break;\n-\t\t}\n-\n-\t      c = java_read_char (lex);\n-\t      shift -= 4;\n-\t    }\n-\t  while (shift >= 0);\n-\n-\t  if (c != UEOF)\n-\t    lex->unget_value = c;\n-\n-\t  lex->bs_count = 0;\n-\t  *unicode_escape_p = 1;\n-\t  return unicode;\n-\t}\n-      lex->unget_value = c;\n-    }\n-  return (unicode_t) '\\\\';\n-}\n-\n-/* Get the next Unicode character (post-Unicode-escape-handling).\n-   Move the current position to just after returned character. */\n-\n-static int\n-java_get_unicode (void)\n-{\n-  int next = java_peek_unicode ();\n-  java_next_unicode ();\n-  return next;\n-}\n-\n-/* Return the next Unicode character (post-Unicode-escape-handling).\n-   Do not move the current position, which remains just before\n-   the returned character. */\n-\n-static int\n-java_peek_unicode (void)\n-{\n-  int unicode_escape_p;\n-  java_lexer *lex = ctxp->lexer;\n-  int next;\n-\n-  if (lex->avail_unicode)\n-    return lex->next_unicode;\n-\n-  next = java_read_unicode (lex, &unicode_escape_p);\n-\n-  if (next == '\\r')\n-    {\n-      /* We have to read ahead to see if we got \\r\\n.\n-\t In that case we return a single line terminator.  */\n-      int dummy;\n-      next = java_read_unicode (lex, &dummy);\n-      if (next != '\\n' && next != UEOF)\n-\tlex->unget_value = next;\n-      /* In either case we must return a newline.  */\n-      next = '\\n';\n-    }\n-\n-  lex->next_unicode = next;\n-  lex->avail_unicode = 1;\n-\n-  if (next == UEOF)\n-    {\n-      lex->next_columns = 0;\n-      return next;\n-    }\n-\n-  if (next == '\\n')\n-    {\n-      lex->next_columns = 1 - lex->position.col;\n-    }\n-  else if (next == '\\t')\n-    {\n-      int cur_col = lex->position.col;\n-      lex->next_columns = ((cur_col + 7) & ~7) + 1 - cur_col;\n-      \n-    }\n-  else\n-    {\n-      lex->next_columns = 1;\n-    }\n-  if (unicode_escape_p)\n-    lex->next_columns = 6;\n-  return next;\n-}\n-\n-/* Move forward one Unicode character (post-Unicode-escape-handling).\n-   Only allowed after java_peek_unicode.  The combination java_peek_unicode\n-   followed by java_next_unicode is equivalent to java_get_unicode.  */\n-\n-static void java_next_unicode (void)\n-{\n-  struct java_lexer *lex = ctxp->lexer;\n-  lex->position.col += lex->next_columns;\n-  if (lex->next_unicode == '\\n')\n-    {\n-      lex->position.line++; \n-#ifndef JC1_LITE\n-#ifdef USE_MAPPED_LOCATION\n-      input_location\n-\t= linemap_line_start (&line_table, lex->position.line, 120);\n-#else\n-      input_line = lex->position.line;\n-#endif\n-#endif\n-    }\n-  lex->avail_unicode = 0;\n-}\n-\n-#if 0\n-/* The inverse of java_next_unicode.\n-   Not currently used, but could be if it would be cleaner or faster.\n-   java_peek_unicode == java_get_unicode + java_unget_unicode.\n-   java_get_unicode == java_peek_unicode + java_next_unicode.\n-*/\n-static void java_unget_unicode ()\n-{\n-  struct java_lexer *lex = ctxp->lexer;\n-  if (lex->avail_unicode)\n-    fatal_error (\"internal error - bad unget\");\n-  lex->avail_unicode = 1;\n-  lex->position.col -= lex->next_columns;\n-}\n-#endif\n-\n-/* Parse the end of a C style comment.\n- * C is the first character following the '/' and '*'.  */\n-static void\n-java_parse_end_comment (int c)\n-{\n-  for ( ;; c = java_get_unicode ())\n-    {\n-      switch (c)\n-\t{\n-\tcase UEOF:\n-\t  java_lex_error (\"Comment not terminated at end of input\", 0);\n-\t  return;\n-\tcase '*':\n-\t  switch (c = java_peek_unicode ())\n-\t    {\n-\t    case UEOF:\n-\t      java_lex_error (\"Comment not terminated at end of input\", 0);\n-\t      return;\n-\t    case '/':\n-\t      java_next_unicode ();\n-\t      return;\n-\t    case '*':\t/* Reparse only '*'.  */\n-\t      ;\n-\t    }\n-\t}\n-    }\n-}\n-\n-/* Parse the documentation section. Keywords must be at the beginning\n-   of a documentation comment line (ignoring white space and any `*'\n-   character). Parsed keyword(s): @DEPRECATED.  */\n-\n-static void\n-java_parse_doc_section (int c)\n-{\n-  int last_was_star;\n-\n-  /* We reset this here, because only the most recent doc comment\n-     applies to the following declaration.  */\n-  ctxp->deprecated = 0;\n-\n-  /* We loop over all the lines of the comment.  We'll eventually exit\n-     if we hit EOF prematurely, or when we see the comment\n-     terminator.  */\n-  while (1)\n-    {\n-      /* These first steps need only be done if we're still looking\n-\t for the deprecated tag.  If we've already seen it, we might\n-\t as well skip looking for it again.  */\n-      if (! ctxp->deprecated)\n-\t{\n-\t  /* Skip whitespace and '*'s.  We must also check for the end\n-\t     of the comment here.  */\n-\t  while (JAVA_WHITE_SPACE_P (c) || c == '*')\n-\t    {\n-\t      last_was_star = (c == '*');\n-\t      c = java_get_unicode ();\n-\t      if (last_was_star && c == '/')\n-\t\t{\n-\t\t  /* We just saw the comment terminator.  */\n-\t\t  return;\n-\t\t}\n-\t    }\n-\n-\t  if (c == UEOF)\n-\t    goto eof;\n-\n-\t  if (c == '@')\n-\t    {\n-\t      const char *deprecated = \"@deprecated\";\n-\t      int i;\n-\n-\t      for (i = 0; deprecated[i]; ++i)\n-\t\t{\n-\t\t  if (c != deprecated[i])\n-\t\t    break;\n-\t\t  /* We write the code in this way, with the\n-\t\t     update at the end, so that after the loop\n-\t\t     we're left with the next character in C.  */\n-\t\t  c = java_get_unicode ();\n-\t\t}\n-\n-\t      if (c == UEOF)\n-\t\tgoto eof;\n-\n-\t      /* @deprecated must be followed by a space or newline.\n-\t\t We also allow a '*' in case it appears just before\n-\t\t the end of a comment.  In this position only we also\n-\t\t must allow any Unicode space character.  */\n-\t      if (c == ' ' || c == '\\n' || c == '*' || java_space_char_p (c))\n-\t\t{\n-\t\t  if (! deprecated[i])\n-\t\t    ctxp->deprecated = 1;\n-\t\t}\n-\t    }\n-\t}\n-\n-      /* We've examined the relevant content from this line.  Now we\n-\t skip the remaining characters and start over with the next\n-\t line.  We also check for end of comment here.  */\n-      while (c != '\\n' && c != UEOF)\n-\t{\n-\t  last_was_star = (c == '*');\n-\t  c = java_get_unicode ();\n-\t  if (last_was_star && c == '/')\n-\t    return;\n-\t}\n-\n-      if (c == UEOF)\n-\tgoto eof;\n-      /* We have to advance past the \\n.  */\n-      c = java_get_unicode ();\n-      if (c == UEOF)\n-\tgoto eof;\n-    }\n-\n- eof:\n-  java_lex_error (\"Comment not terminated at end of input\", 0);\n-}\n-\n-/* Return true if C is a valid start character for a Java identifier.\n-   This is only called if C >= 128 -- smaller values are handled\n-   inline.  However, this function handles all values anyway.  */\n-static int\n-java_start_char_p (unicode_t c)\n-{\n-  unsigned int hi = c / 256;\n-  const char *const page = type_table[hi];\n-  unsigned long val = (unsigned long) page;\n-  int flags;\n-\n-  if ((val & ~ LETTER_MASK) != 0)\n-    flags = page[c & 255];\n-  else\n-    flags = val;\n-\n-  return flags & LETTER_START;\n-}\n-\n-/* Return true if C is a valid part character for a Java identifier.\n-   This is only called if C >= 128 -- smaller values are handled\n-   inline.  However, this function handles all values anyway.  */\n-static int\n-java_part_char_p (unicode_t c)\n-{\n-  unsigned int hi = c / 256;\n-  const char *const page = type_table[hi];\n-  unsigned long val = (unsigned long) page;\n-  int flags;\n-\n-  if ((val & ~ LETTER_MASK) != 0)\n-    flags = page[c & 255];\n-  else\n-    flags = val;\n-\n-  return flags & LETTER_PART;\n-}\n-\n-/* Return true if C is whitespace.  */\n-static int\n-java_space_char_p (unicode_t c)\n-{\n-  unsigned int hi = c / 256;\n-  const char *const page = type_table[hi];\n-  unsigned long val = (unsigned long) page;\n-  int flags;\n-\n-  if ((val & ~ LETTER_MASK) != 0)\n-    flags = page[c & 255];\n-  else\n-    flags = val;\n-\n-  return flags & LETTER_SPACE;\n-}\n-\n-static int\n-java_parse_escape_sequence (void)\n-{\n-  int c;\n-\n-  switch (c = java_get_unicode ())\n-    {\n-    case 'b':\n-      return (unicode_t)0x8;\n-    case 't':\n-      return (unicode_t)0x9;\n-    case 'n':\n-      return (unicode_t)0xa;\n-    case 'f':\n-      return (unicode_t)0xc;\n-    case 'r':\n-      return (unicode_t)0xd;\n-    case '\"':\n-      return (unicode_t)0x22;\n-    case '\\'':\n-      return (unicode_t)0x27;\n-    case '\\\\':\n-      return (unicode_t)0x5c;\n-    case '0': case '1': case '2': case '3': case '4':\n-    case '5': case '6': case '7':\n-      {\n-\tint more = 3;\n-\tunicode_t char_lit = 0;\n-\n-\tif (c > '3')\n-\t  {\n-\t    /* According to the grammar, `\\477' has a well-defined\n-\t       meaning -- it is `\\47' followed by `7'.  */\n-\t    --more;\n-\t  }\n-\tchar_lit = 0;\n-\tfor (;;)\n-\t  {\n-\t    char_lit = 8 * char_lit + c - '0';\n-\t    if (--more == 0)\n-\t      break;\n-\t    c = java_peek_unicode ();\n-\t    if (! RANGE (c, '0', '7'))\n-\t      break;\n-\t    java_next_unicode ();\n-\t  }\n-\n-\treturn char_lit;\n-      }\n-    default:\n-      java_lex_error (\"Invalid character in escape sequence\", -1);\n-      return JAVA_CHAR_ERROR;\n-    }\n-}\n-\n-#ifndef JC1_LITE\n-#define IS_ZERO(X) REAL_VALUES_EQUAL (X, dconst0)\n-\n-/* Subroutine of java_lex: converts floating-point literals to tree\n-   nodes.  LITERAL_TOKEN is the input literal, JAVA_LVAL is where to\n-   store the result.  FFLAG indicates whether the literal was tagged\n-   with an 'f', indicating it is of type 'float'; NUMBER_BEGINNING\n-   is the line number on which to report any error.  */\n-\n-static void java_perform_atof (YYSTYPE *, char *, int, int);\n-\n-static void\n-java_perform_atof (YYSTYPE *java_lval, char *literal_token, int fflag,\n-\t\t   int number_beginning)\n-{\n-  REAL_VALUE_TYPE value;\n-  tree type = (fflag ? FLOAT_TYPE_NODE : DOUBLE_TYPE_NODE);\n-\n-  SET_REAL_VALUE_ATOF (value,\n-\t\t       REAL_VALUE_ATOF (literal_token, TYPE_MODE (type)));\n-\n-  if (REAL_VALUE_ISINF (value) || REAL_VALUE_ISNAN (value))\n-    {\n-      JAVA_FLOAT_RANGE_ERROR (fflag ? \"float\" : \"double\");\n-      value = DCONST0;\n-    }\n-  else if (IS_ZERO (value))\n-    {\n-      /* We check to see if the value is really 0 or if we've found an\n-\t underflow.  We do this in the most primitive imaginable way.  */\n-      int really_zero = 1;\n-      char *p = literal_token;\n-      if (*p == '-')\n-\t++p;\n-      while (*p && *p != 'e' && *p != 'E')\n-\t{\n-\t  if (*p != '0' && *p != '.')\n-\t    {\n-\t      really_zero = 0;\n-\t      break;\n-\t    }\n-\t  ++p;\n-\t}\n-      if (! really_zero)\n-\t{\n-\t  int save_col = ctxp->lexer->position.col;\n-\t  ctxp->lexer->position.col = number_beginning;\n-\t  java_lex_error (\"Floating point literal underflow\", 0);\n-\t  ctxp->lexer->position.col = save_col;\n-\t}\n-    }\n-\n-  SET_LVAL_NODE (build_real (type, value));\n-}\n-#endif\n-\n-static int yylex (YYSTYPE *);\n-\n-static int\n-#ifdef JC1_LITE\n-yylex (YYSTYPE *java_lval)\n-#else\n-do_java_lex (YYSTYPE *java_lval)\n-#endif\n-{\n-  int c;\n-  char *string;\n-\n-  /* Translation of the Unicode escape in the raw stream of Unicode\n-     characters. Takes care of line terminator.  */\n- step1:\n-  /* Skip white spaces: SP, TAB and FF or ULT.  */ \n-  for (;;)\n-    {\n-      c = java_peek_unicode ();\n-      if (c != '\\n' && ! JAVA_WHITE_SPACE_P (c))\n-\tbreak;\n-      java_next_unicode ();\n-    }\n-\n-  /* Handle EOF here.  */\n-  if (c == UEOF)\t/* Should probably do something here...  */\n-    return 0;\n-\n-#ifndef JC1_LITE\n-#ifdef USE_MAPPED_LOCATION\n-  LINEMAP_POSITION_FOR_COLUMN (input_location, &line_table,\n-\t\t\t       ctxp->lexer->position.col);\n-#else\n-  ctxp->lexer->token_start = ctxp->lexer->position;\n-#endif\n-#endif\n-\n-  /* Numeric literals.  */\n-  if (JAVA_ASCII_DIGIT (c) || (c == '.'))\n-    {\n-      /* This section of code is borrowed from gcc/c-lex.c.  */\n-#define TOTAL_PARTS ((HOST_BITS_PER_WIDE_INT / HOST_BITS_PER_CHAR) * 2 + 2)\n-      int parts[TOTAL_PARTS];\n-      HOST_WIDE_INT high, low;\n-      /* End borrowed section.  */\n-\n-#define MAX_TOKEN_LEN 256\n-      char literal_token [MAX_TOKEN_LEN + 1];\n-      int  literal_index = 0, radix = 10, long_suffix = 0, overflow = 0, bytes;\n-      int  found_hex_digits = 0, found_non_octal_digits = -1;\n-      int  i;\n-#ifndef JC1_LITE\n-      int  number_beginning = ctxp->lexer->position.col;\n-      tree value;\n-#endif\n-     \n-      for (i = 0; i < TOTAL_PARTS; i++)\n-\tparts [i] = 0;\n-\n-      if (c == '0')\n-\t{\n-\t  java_next_unicode ();\n-\t  c = java_peek_unicode ();\n-\t  if (c == 'x' || c == 'X')\n-\t    {\n-\t      radix = 16;\n-\t      java_next_unicode ();\n-\t      c = java_peek_unicode ();\n-\t    }\n-\t  else if (JAVA_ASCII_DIGIT (c))\n-\t    {\n-\t      literal_token [literal_index++] = '0';\n-\t      radix = 8;\n-\t    }\n-\t  else if (c == '.' || c == 'e' || c =='E')\n-\t    {\n-\t      literal_token [literal_index++] = '0';\n-\t      /* Handle C during floating-point parsing.  */\n-\t    }\n-\t  else\n-\t    {\n-\t      /* We have a zero literal: 0, 0{l,L}, 0{f,F}, 0{d,D}.  */\n-              switch (c)\n-\t\t{\t\t\n-\t\tcase 'L': case 'l':\n-\t\t  java_next_unicode ();\n-\t\t  SET_LVAL_NODE (long_zero_node);\n-\t\t  return (INT_LIT_TK);\n-\t\tcase 'f': case 'F':\n-\t\t  java_next_unicode ();\n-\t\t  SET_LVAL_NODE (float_zero_node);\n-\t\t  return (FP_LIT_TK);\n-\t\tcase 'd': case 'D':\n-\t\t  java_next_unicode ();\n-\t\t  SET_LVAL_NODE (double_zero_node);\n-\t\t  return (FP_LIT_TK);\n-\t\tdefault:\n-\t\t  SET_LVAL_NODE (integer_zero_node);\n-\t\t  return (INT_LIT_TK);\n-\t\t}\n-\t    }\n-\t}\n-\n-      /* Terminate LITERAL_TOKEN in case we bail out on large tokens.  */\n-      literal_token [MAX_TOKEN_LEN] = '\\0';\n-\n-      /* Parse the first part of the literal, until we find something\n-\t which is not a number.  */\n-      while ((radix == 16 ? JAVA_ASCII_HEXDIGIT (c) : JAVA_ASCII_DIGIT (c))\n-             && literal_index < MAX_TOKEN_LEN)\n-\t{\n-\t  /* We store in a string (in case it turns out to be a FP) and in\n-\t     PARTS if we have to process a integer literal.  */\n-\t  int numeric = hex_value (c);\n-\t  int count;\n-\n-\t  /* Remember when we find a valid hexadecimal digit.  */\n-\t  if (radix == 16)\n-\t    found_hex_digits = 1;\n-          /* Remember when we find an invalid octal digit.  */\n-          else if (radix == 8 && numeric >= 8 && found_non_octal_digits < 0)\n-\t    found_non_octal_digits = literal_index;\n-\n-\t  literal_token [literal_index++] = c;\n-\t  /* This section of code if borrowed from gcc/c-lex.c.  */\n-\t  for (count = 0; count < TOTAL_PARTS; count++)\n-\t    {\n-\t      parts[count] *= radix;\n-\t      if (count)\n-\t\t{\n-\t\t  parts[count]   += (parts[count-1] >> HOST_BITS_PER_CHAR);\n-\t\t  parts[count-1] &= (1 << HOST_BITS_PER_CHAR) - 1;\n-\t\t}\n-\t      else\n-\t\tparts[0] += numeric;\n-\t    }\n-\t  if (parts [TOTAL_PARTS-1] != 0)\n-\t    overflow = 1;\n-\t  /* End borrowed section.  */\n-\t  java_next_unicode ();\n-\t  c = java_peek_unicode ();\n-\t}\n-\n-      /* If we have something from the FP char set but not a digit, parse\n-\t a FP literal.  */\n-      if (JAVA_ASCII_FPCHAR (c) && !JAVA_ASCII_DIGIT (c))\n-\t{\n-\t  /* stage==0: seen digits only\n-\t   * stage==1: seen '.'\n-\t   * stage==2: seen 'e' or 'E'.\n-\t   * stage==3: seen '+' or '-' after 'e' or 'E'.\n-\t   * stage==4: seen type suffix ('f'/'F'/'d'/'D')\n-\t   */\n-\t  int stage = 0;\n-\t  int seen_digit = (literal_index ? 1 : 0);\n-\t  int seen_exponent = 0;\n-\t  int fflag = 0;\t/* 1 for {f,F}, 0 for {d,D}. FP literal are\n-\t\t\t\t   double unless specified.  */\n-\n-\t  /* It is ok if the radix is 8 because this just means we've\n-\t     seen a leading `0'.  However, radix==16 is invalid.  */\n-\t  if (radix == 16)\n-\t    java_lex_error (\"Can't express non-decimal FP literal\", 0);\n-\t  radix = 10;\n-\n-\t  for (; literal_index < MAX_TOKEN_LEN;)\n-\t    {\n-\t      if (c == '.')\n-\t\t{\n-\t\t  if (stage < 1)\n-\t\t    {\n-\t\t      stage = 1;\n-\t\t      literal_token [literal_index++ ] = c;\n-\t\t      java_next_unicode ();\n-\t\t      c = java_peek_unicode ();\n-\t\t      if (literal_index == 1 && !JAVA_ASCII_DIGIT (c))\n-\t\t\tBUILD_OPERATOR (DOT_TK);\n-\t\t    }\n-\t\t  else\n-\t\t    java_lex_error (\"Invalid character in FP literal\", 0);\n-\t\t}\n-\n-\t      if ((c == 'e' || c == 'E') && literal_index < MAX_TOKEN_LEN)\n-\t\t{\n-\t\t  if (stage < 2)\n-\t\t    {\n-\t\t      /* {E,e} must have seen at least a digit.  */\n-\t\t      if (!seen_digit)\n-\t\t\tjava_lex_error\n-                          (\"Invalid FP literal, mantissa must have digit\", 0);\n-\t\t      seen_digit = 0;\n-\t\t      seen_exponent = 1;\n-\t\t      stage = 2;\n-\t\t      literal_token [literal_index++] = c;\n-\t\t      java_next_unicode ();\n-\t\t      c = java_peek_unicode ();\n-\t\t    }\n-\t\t  else\n-\t\t    java_lex_error (\"Invalid character in FP literal\", 0);\n-\t\t}\n-\t      if ( c == 'f' || c == 'F' || c == 'd' || c == 'D')\n-\t\t{\n-\t\t  fflag = ((c == 'd') || (c == 'D')) ? 0 : 1;\n-\t\t  stage = 4;\t/* So we fall through.  */\n-\t\t}\n-\n-\t      if ((c=='-' || c =='+') && stage == 2\n-                  && literal_index < MAX_TOKEN_LEN)\n-\t\t{\n-\t\t  stage = 3;\n-\t\t  literal_token [literal_index++] = c;\n-\t\t  java_next_unicode ();\n-\t\t  c = java_peek_unicode ();\n-\t\t}\n-\n-              if (((stage == 0 && JAVA_ASCII_FPCHAR (c))\n-                   || (stage == 1 && JAVA_ASCII_FPCHAR (c) && !(c == '.'))\n-                   || (stage == 2 && (JAVA_ASCII_DIGIT (c) || JAVA_FP_PM (c)))\n-                   || (stage == 3 && JAVA_ASCII_DIGIT (c)))\n-                  && literal_index < MAX_TOKEN_LEN)\n-\t\t{\n-\t\t  if (JAVA_ASCII_DIGIT (c))\n-\t\t    seen_digit = 1;\n-                  if (stage == 2)\n-                    stage = 3;\n-\t\t  literal_token [literal_index++ ] = c;\n-\t\t  java_next_unicode ();\n-\t\t  c = java_peek_unicode ();\n-\t\t}\n-\t      else if (literal_index < MAX_TOKEN_LEN)\n-\t\t{\n-\t\t  if (stage == 4) /* Don't push back fF/dD.  */\n-\t\t    java_next_unicode ();\n-\t\t  \n-\t\t  /* An exponent (if any) must have seen a digit.  */\n-\t\t  if (seen_exponent && !seen_digit)\n-\t\t    java_lex_error\n-                      (\"Invalid FP literal, exponent must have digit\", 0);\n-\n-\t\t  literal_token [literal_index] = '\\0';\n-\n-#ifndef JC1_LITE\n-\t\t  java_perform_atof (java_lval, literal_token,\n-\t\t\t\t     fflag, number_beginning);\n-#endif\n-\t\t  return FP_LIT_TK;\n-\t\t}\n-\t    }\n-\t} /* JAVA_ASCII_FPCHAR (c) */\n-\n-      /* Here we get back to converting the integral literal.  */\n-      if (radix == 16 && ! found_hex_digits)\n-\tjava_lex_error\n-\t  (\"0x must be followed by at least one hexadecimal digit\", 0);\n-      else if (radix == 8 && found_non_octal_digits >= 0)\n-\t{\n-\t  int back = literal_index - found_non_octal_digits;\n-\t  ctxp->lexer->position.col -= back;\n-\t  java_lex_error (\"Octal literal contains digit out of range\", 0);\n-\t  ctxp->lexer->position.col += back;\n-\t}\n-      else if (c == 'L' || c == 'l')\n-\t{\n-\t  java_next_unicode ();\n-\t  long_suffix = 1;\n-\t}\n-\n-      /* This section of code is borrowed from gcc/c-lex.c.  */\n-      if (!overflow)\n-\t{\n-\t  bytes = GET_TYPE_PRECISION (long_type_node);\n-\t  for (i = bytes; i < TOTAL_PARTS; i++)\n-\t    if (parts [i])\n-\t      {\n-\t        overflow = 1;\n-\t\tbreak;\n-\t      }\n-\t}\n-      high = low = 0;\n-      for (i = 0; i < HOST_BITS_PER_WIDE_INT / HOST_BITS_PER_CHAR; i++)\n-\t{\n-\t  high |= ((HOST_WIDE_INT) parts[i + (HOST_BITS_PER_WIDE_INT\n-\t\t\t\t\t      / HOST_BITS_PER_CHAR)]\n-\t\t   << (i * HOST_BITS_PER_CHAR));\n-\t  low |= (HOST_WIDE_INT) parts[i] << (i * HOST_BITS_PER_CHAR);\n-\t}\n-      /* End borrowed section.  */\n-\n-#ifndef JC1_LITE\n-      /* Range checking.  */\n-      /* Temporarily set type to unsigned.  */\n-      value = build_int_cst_wide (long_suffix\n-\t\t\t\t  ? unsigned_long_type_node\n-\t\t\t\t  : unsigned_int_type_node, low, high);\n-      SET_LVAL_NODE (value);\n-\n-      /* For base 10 numbers, only values up to the highest value\n-\t (plus one) can be written.  For instance, only ints up to\n-\t 2147483648 can be written.  The special case of the largest\n-\t negative value is handled elsewhere.  For other bases, any\n-\t number can be represented.  */\n-      if (overflow || (radix == 10\n-\t\t       && tree_int_cst_lt (long_suffix\n-\t\t\t\t\t   ? decimal_long_max\n-\t\t\t\t\t   : decimal_int_max,\n-\t\t\t\t\t   value)))\n-\t{\n-\t  if (long_suffix)\n-\t    JAVA_RANGE_ERROR (\"Numeric overflow for 'long' literal\");\n-\t  else\n-\t    JAVA_RANGE_ERROR (\"Numeric overflow for 'int' literal\");\n-\t}\n-\n-      /* Sign extend the value.  */\n-      value = build_int_cst_wide_type (long_suffix ? long_type_node\n-\t\t\t\t       : int_type_node, low, high);\n-\n-      if (radix != 10)\n-\t{\n-\t  value = copy_node (value);\n-\t  JAVA_NOT_RADIX10_FLAG (value) = 1;\n-\t}\n-      \n-      SET_LVAL_NODE (value);\n-#endif\n-      return INT_LIT_TK;\n-    }\n-\n-  /* We may have an ID here.  */\n-  if (JAVA_START_CHAR_P (c))\n-    {\n-      int ascii_index = 0, all_ascii = 1;\n-\n-      /* Keyword, boolean literal or null literal.  */\n-      while (c != UEOF && JAVA_PART_CHAR_P (c))\n-\t{\n-\t  java_unicode_2_utf8 (c);\n-\t  if (c >= 128)\n-\t    all_ascii = 0;\n-\t  java_next_unicode ();\n-\t  ascii_index++;\n-\t  c = java_peek_unicode ();\n-\t}\n-\n-      obstack_1grow (&temporary_obstack, '\\0');\n-      string = obstack_finish (&temporary_obstack);\n-\n-      /* If we have something all ascii, we consider a keyword, a boolean\n-\t literal, a null literal or an all ASCII identifier.  Otherwise,\n-\t this is an identifier (possibly not respecting formation rule).  */\n-      if (all_ascii)\n-\t{\n-\t  const struct java_keyword *kw;\n-\t  if ((kw=java_keyword (string, ascii_index)))\n-\t    {\n-\t      switch (kw->token)\n-\t\t{\n-\t\tcase PUBLIC_TK:       case PROTECTED_TK: case STATIC_TK:\n-\t\tcase ABSTRACT_TK:     case FINAL_TK:     case NATIVE_TK:\n-\t\tcase SYNCHRONIZED_TK: case TRANSIENT_TK: case VOLATILE_TK:\n-\t\tcase PRIVATE_TK:      case STRICT_TK:\n-\t\t  SET_MODIFIER_CTX (kw->token);\n-\t\t  return MODIFIER_TK;\n-\t\tcase FLOAT_TK:\n-\t\t  SET_LVAL_NODE (float_type_node);\n-\t\t  return FP_TK;\n-\t\tcase DOUBLE_TK:\n-\t\t  SET_LVAL_NODE (double_type_node);\n-\t\t  return FP_TK;\n-\t\tcase BOOLEAN_TK:\n-\t\t  SET_LVAL_NODE (boolean_type_node);\n-\t\t  return BOOLEAN_TK;\n-\t\tcase BYTE_TK:\n-\t\t  SET_LVAL_NODE (byte_type_node);\n-\t\t  return INTEGRAL_TK;\n-\t\tcase SHORT_TK:\n-\t\t  SET_LVAL_NODE (short_type_node);\n-\t\t  return INTEGRAL_TK;\n-\t\tcase INT_TK:\n-\t\t  SET_LVAL_NODE (int_type_node);\n-\t\t  return INTEGRAL_TK;\n-\t\tcase LONG_TK:\n-\t\t  SET_LVAL_NODE (long_type_node);\n-\t\t  return INTEGRAL_TK;\n-\t\tcase CHAR_TK:\n-\t\t  SET_LVAL_NODE (char_type_node);\n-\t\t  return INTEGRAL_TK;\n-\n-\t\t  /* Keyword based literals.  */\n-\t\tcase TRUE_TK:\n-\t\tcase FALSE_TK:\n-\t\t  SET_LVAL_NODE ((kw->token == TRUE_TK ? \n-\t\t\t\t  boolean_true_node : boolean_false_node));\n-\t\t  return BOOL_LIT_TK;\n-\t\tcase NULL_TK:\n-\t\t  SET_LVAL_NODE (null_pointer_node);\n-\t\t  return NULL_TK;\n-\n-\t\tcase ASSERT_TK:\n-\t\t  if (flag_assert)\n-\t\t    {\n-\t\t      BUILD_OPERATOR (kw->token);\n-\t\t      return kw->token;\n-\t\t    }\n-\t\t  else\n-\t\t    break;\n-\n-\t\t  /* Some keyword we want to retain information on the location\n-\t\t     they where found.  */\n-\t\tcase CASE_TK:\n-\t\tcase DEFAULT_TK:\n-\t\tcase SUPER_TK:\n-\t\tcase THIS_TK:\n-\t\tcase RETURN_TK:\n-\t\tcase BREAK_TK:\n-\t\tcase CONTINUE_TK:\n-\t\tcase TRY_TK:\n-\t\tcase CATCH_TK:\n-\t\tcase THROW_TK:\n-\t\tcase INSTANCEOF_TK:\n-\t\t  BUILD_OPERATOR (kw->token);\n-\n-\t\tdefault:\n-\t\t  return kw->token;\n-\t\t}\n-\t    }\n-\t}\n-\n-      java_lval->node = BUILD_ID_WFL (GET_IDENTIFIER (string));\n-      return ID_TK;\n-    }\n-\n-  java_next_unicode ();\n-\n-  /* Character literals.  */\n-  if (c == '\\'')\n-    {\n-      int char_lit;\n-      \n-      if ((c = java_get_unicode ()) == '\\\\')\n-\tchar_lit = java_parse_escape_sequence ();\n-      else\n-\t{\n-\t  if (c == '\\n' || c == '\\'')\n-\t    java_lex_error (\"Invalid character literal\", 0);\n-\t  char_lit = c;\n-\t}\n-\n-      c = java_get_unicode ();\n-\n-      if ((c == '\\n') || (c == UEOF))\n-\tjava_lex_error (\"Character literal not terminated at end of line\", 0);\n-      if (c != '\\'')\n-\tjava_lex_error (\"Syntax error in character literal\", 0);\n-\n-      if (char_lit == JAVA_CHAR_ERROR)\n-        char_lit = 0;\t\t/* We silently convert it to zero.  */\n-\n-      SET_LVAL_NODE (build_int_cst (char_type_node, char_lit));\n-      return CHAR_LIT_TK;\n-    }\n-\n-  /* String literals.  */\n-  if (c == '\"')\n-    {\n-      int no_error = 1;\n-      char *string;\n-\n-      for (;;)\n-\t{\n-\t  c = java_peek_unicode ();\n-\t  if (c == '\\n' || c == UEOF) /* ULT.  */\n-\t    {\n-\t      java_lex_error (\"String not terminated at end of line\", 0);\n-\t      break;\n-\t    }\n-\t  java_next_unicode ();\n-\t  if (c == '\"')\n-\t    break;\n-\t  if (c == '\\\\')\n-\t    c = java_parse_escape_sequence ();\n-\t  if (c == JAVA_CHAR_ERROR)\n-\t    {\n-\t      no_error = 0;\n-\t      c = 0;\t\t/* We silently convert it to zero.  */\n-\t    }\n-\t  java_unicode_2_utf8 (c);\n-\t}\n-\n-      obstack_1grow (&temporary_obstack, '\\0');\n-      string = obstack_finish (&temporary_obstack);\n-#ifndef JC1_LITE\n-      if (!no_error || (c != '\"'))\n-\tjava_lval->node = error_mark_node; /* FIXME: Requires further\n-                                              testing.  */\n-      else\n-\tjava_lval->node = build_string (strlen (string), string);\n-#endif\n-      obstack_free (&temporary_obstack, string);\n-      return STRING_LIT_TK;\n-    }\n-\n-  switch (c)\n-    {\n-    case '/':\n-      /* Check for comment.  */\n-      switch (c = java_peek_unicode ())\n-\t{\n-\tcase '/':\n-\t  java_next_unicode ();\n-\t  for (;;)\n-\t    {\n-\t      c = java_get_unicode ();\n-\t      if (c == UEOF)\n-\t\t{\n-\t\t  /* It is ok to end a `//' comment with EOF, unless\n-\t\t     we're being pedantic.  */\n-\t\t  if (pedantic)\n-\t\t    java_lex_error (\"Comment not terminated at end of input\",\n-\t\t\t\t    0);\n-\t\t  return 0;\n-\t\t}\n-\t      if (c == '\\n')\t/* ULT */\n-\t\tgoto step1;\n-\t    }\n-\t  break;\n-\n-\tcase '*':\n-\t  java_next_unicode ();\n-\t  if ((c = java_get_unicode ()) == '*')\n-\t    {\n-\t      c = java_get_unicode ();\n-\t      if (c == '/')\n-\t\t{\n-\t\t  /* Empty documentation comment.  We have to reset\n-\t\t     the deprecation marker as only the most recent\n-\t\t     doc comment applies.  */\n-\t\t  ctxp->deprecated = 0;\n-\t\t}\n-\t      else\n-\t\tjava_parse_doc_section (c);\n-\t    }\n-\t  else\n-\t    java_parse_end_comment ((c = java_get_unicode ()));\n-\t  goto step1;\n-\t  break;\n-\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (DIV_ASSIGN_TK);\n-\n-\tdefault:\n-\t  BUILD_OPERATOR (DIV_TK);\n-\t}\n-\n-    case '(':\n-      BUILD_OPERATOR (OP_TK);\n-    case ')':\n-      return CP_TK;\n-    case '{':\n-#ifndef JC1_LITE\n-      java_lval->operator.token = OCB_TK;\n-      java_lval->operator.location = BUILD_LOCATION();\n-#ifdef USE_MAPPED_LOCATION\n-      if (ctxp->ccb_indent == 1)\n-\tctxp->first_ccb_indent1 = input_location;\n-#else\n-      if (ctxp->ccb_indent == 1)\n-\tctxp->first_ccb_indent1 = input_line;\n-#endif\n-#endif\n-      ctxp->ccb_indent++;\n-      return OCB_TK;\n-    case '}':\n-      ctxp->ccb_indent--;\n-#ifndef JC1_LITE\n-      java_lval->operator.token = CCB_TK;\n-      java_lval->operator.location = BUILD_LOCATION();\n-#ifdef USE_MAPPED_LOCATION\n-      if (ctxp->ccb_indent == 1)\n-        ctxp->last_ccb_indent1 = input_location;\n-#else\n-      if (ctxp->ccb_indent == 1)\n-        ctxp->last_ccb_indent1 = input_line;\n-#endif\n-#endif\n-      return CCB_TK;\n-    case '[':\n-      BUILD_OPERATOR (OSB_TK);\n-    case ']':\n-      return CSB_TK;\n-    case ';':\n-      return SC_TK;\n-    case ',':\n-      return C_TK;\n-    case '.':\n-      BUILD_OPERATOR (DOT_TK);\n-\n-      /* Operators.  */\n-    case '=':\n-      c = java_peek_unicode ();\n-      if (c == '=')\n-\t{\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (EQ_TK);\n-\t}\n-      else\n-\t{\n-\t  /* Equals is used in two different locations. In the \n-\t     variable_declarator: rule, it has to be seen as '=' as opposed\n-\t     to being seen as an ordinary assignment operator in\n-\t     assignment_operators: rule.  */\n-\t  BUILD_OPERATOR (ASSIGN_TK);\n-\t}\n-      \n-    case '>':\n-      switch ((c = java_peek_unicode ()))\n-\t{\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (GTE_TK);\n-\tcase '>':\n-\t  java_next_unicode ();\n-\t  switch ((c = java_peek_unicode ()))\n-\t    {\n-\t    case '>':\n-\t      java_next_unicode ();\n-\t      c = java_peek_unicode ();\n-\t      if (c == '=')\n-\t\t{\n-\t\t  java_next_unicode ();\n-\t\t  BUILD_OPERATOR2 (ZRS_ASSIGN_TK);\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  BUILD_OPERATOR (ZRS_TK);\n-\t\t}\n-\t    case '=':\n-\t      java_next_unicode ();\n-\t      BUILD_OPERATOR2 (SRS_ASSIGN_TK);\n-\t    default:\n-\t      BUILD_OPERATOR (SRS_TK);\n-\t    }\n-\tdefault:\n-\t  BUILD_OPERATOR (GT_TK);\n-\t}\n-\t\n-    case '<':\n-      switch ((c = java_peek_unicode ()))\n-\t{\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (LTE_TK);\n-\tcase '<':\n-\t  java_next_unicode ();\n-\t  if ((c = java_peek_unicode ()) == '=')\n-\t    {\n-\t      java_next_unicode ();\n-\t      BUILD_OPERATOR2 (LS_ASSIGN_TK);\n-\t    }\n-\t  else\n-\t    {\n-\t      BUILD_OPERATOR (LS_TK);\n-\t    }\n-\tdefault:\n-\t  BUILD_OPERATOR (LT_TK);\n-\t}\n-\n-    case '&':\n-      switch ((c = java_peek_unicode ()))\n-\t{\n-\tcase '&':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (BOOL_AND_TK);\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (AND_ASSIGN_TK);\n-\tdefault:\n-\t  BUILD_OPERATOR (AND_TK);\n-\t}\n-\n-    case '|':\n-      switch ((c = java_peek_unicode ()))\n-\t{\n-\tcase '|':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (BOOL_OR_TK);\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (OR_ASSIGN_TK);\n-\tdefault:\n-\t  BUILD_OPERATOR (OR_TK);\n-\t}\n-\n-    case '+':\n-      switch ((c = java_peek_unicode ()))\n-\t{\n-\tcase '+':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (INCR_TK);\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (PLUS_ASSIGN_TK);\n-\tdefault:\n-\t  BUILD_OPERATOR (PLUS_TK);\n-\t}\n-\n-    case '-':\n-      switch ((c = java_peek_unicode ()))\n-\t{\n-\tcase '-':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (DECR_TK);\n-\tcase '=':\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (MINUS_ASSIGN_TK);\n-\tdefault:\n-\t  BUILD_OPERATOR (MINUS_TK);\n-\t}\n-\n-    case '*':\n-      if ((c = java_peek_unicode ()) == '=')\n-\t{\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (MULT_ASSIGN_TK);\n-\t}\n-      else\n-\t{\n-\t  BUILD_OPERATOR (MULT_TK);\n-\t}\n-\n-    case '^':\n-      if ((c = java_peek_unicode ()) == '=')\n-\t{\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (XOR_ASSIGN_TK);\n-\t}\n-      else\n-\t{\n-\t  BUILD_OPERATOR (XOR_TK);\n-\t}\n-\n-    case '%':\n-      if ((c = java_peek_unicode ()) == '=')\n-\t{\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR2 (REM_ASSIGN_TK);\n-\t}\n-      else\n-\t{\n-\t  BUILD_OPERATOR (REM_TK);\n-\t}\n-\n-    case '!':\n-      if ((c = java_peek_unicode()) == '=')\n-\t{\n-\t  java_next_unicode ();\n-\t  BUILD_OPERATOR (NEQ_TK);\n-\t}\n-      else\n-\t{\n-\t  BUILD_OPERATOR (NEG_TK);\n-\t}\n-\t  \n-    case '?':\n-      BUILD_OPERATOR (REL_QM_TK);\n-    case ':':\n-      BUILD_OPERATOR (REL_CL_TK);\n-    case '~':\n-      BUILD_OPERATOR (NOT_TK);\n-    }\n-  \n-  if (c == 0x1a)\t\t/* CTRL-Z.  */\n-    {\n-      if ((c = java_peek_unicode ()) == UEOF)\n-\treturn 0;\t\t/* Ok here.  */\n-    }\n-\n-  /* Everything else is an invalid character in the input.  */\n-  {\n-    char lex_error_buffer [128];\n-    sprintf (lex_error_buffer, \"Invalid character '%s' in input\", \n-\t     java_sprint_unicode (c));\n-    java_lex_error (lex_error_buffer, -1);\n-  }\n-  return 0;\n-}\n-\n-#ifndef JC1_LITE\n-\n-/* The exported interface to the lexer.  */\n-static int\n-java_lex (YYSTYPE *java_lval)\n-{\n-  int r;\n-\n-  timevar_push (TV_LEX);\n-  r = do_java_lex (java_lval);\n-  timevar_pop (TV_LEX);\n-  return r;\n-}\n-\n-/* This is called by the parser to see if an error should be generated\n-   due to numeric overflow.  This function only handles the particular\n-   case of the largest negative value, and is only called in the case\n-   where this value is not preceded by `-'.  */\n-static void\n-error_if_numeric_overflow (tree value)\n-{\n-  if (TREE_CODE (value) == INTEGER_CST\n-      && !JAVA_NOT_RADIX10_FLAG (value)\n-      && tree_int_cst_sgn (value) < 0)\n-    {\n-      if (TREE_TYPE (value) == long_type_node)\n-\tjava_lex_error (\"Numeric overflow for 'long' literal\", 0);\n-      else\n-\tjava_lex_error (\"Numeric overflow for 'int' literal\", 0);\n-    }\n-}\n-\n-#endif /* JC1_LITE */\n-\n-static void\n-java_unicode_2_utf8 (unicode_t unicode)\n-{\n-  if (RANGE (unicode, 0x01, 0x7f))\n-    obstack_1grow (&temporary_obstack, (char)unicode);\n-  else if (RANGE (unicode, 0x80, 0x7ff) || unicode == 0)\n-    {\n-      obstack_1grow (&temporary_obstack,\n-\t\t     (unsigned char)(0xc0 | ((0x7c0 & unicode) >> 6)));\n-      obstack_1grow (&temporary_obstack,\n-\t\t     (unsigned char)(0x80 | (unicode & 0x3f)));\n-    }\n-  else\t\t\t\t/* Range 0x800-0xffff.  */\n-    {\n-      obstack_1grow (&temporary_obstack,\n-\t\t     (unsigned char)(0xe0 | (unicode & 0xf000) >> 12));\n-      obstack_1grow (&temporary_obstack,\n-\t\t     (unsigned char)(0x80 | (unicode & 0x0fc0) >> 6));\n-      obstack_1grow (&temporary_obstack,\n-\t\t     (unsigned char)(0x80 | (unicode & 0x003f)));\n-    }\n-}\n-\n-#ifndef JC1_LITE\n-static tree\n-build_wfl_node (tree node)\n-{\n-#ifdef USE_MAPPED_LOCATION\n-  node = build_expr_wfl (node, input_location);\n-#else\n-  node = build_expr_wfl (node, ctxp->filename,\n-\t\t\t ctxp->lexer->token_start.line,\n-\t\t\t ctxp->lexer->token_start.col);\n-#endif\n-  /* Prevent java_complete_lhs from short-circuiting node (if constant).  */\n-  TREE_TYPE (node) = NULL_TREE;\n-  return node;\n-}\n-#endif\n-\n-static void\n-java_lex_error (const char *msg ATTRIBUTE_UNUSED, int forward ATTRIBUTE_UNUSED)\n-{\n-#ifndef JC1_LITE\n-  int col = (ctxp->lexer->position.col\n-\t     + forward * ctxp->lexer->next_columns);\n-#if USE_MAPPED_LOCATION\n-  source_location save_location = input_location;\n-  LINEMAP_POSITION_FOR_COLUMN (input_location, &line_table, col);\n-  \n-  /* Might be caught in the middle of some error report.  */\n-  ctxp->java_error_flag = 0;\n-  java_error (NULL);\n-  java_error (msg);\n-  input_location = save_location;\n-#else\n-  java_lc save = ctxp->lexer->token_start;\n-  ctxp->lexer->token_start.line = ctxp->lexer->position.line;\n-  ctxp->lexer->token_start.col = col;\n-\n-  /* Might be caught in the middle of some error report.  */\n-  ctxp->java_error_flag = 0;\n-  java_error (NULL);\n-  java_error (msg);\n-  ctxp->lexer->token_start = save;\n-#endif\n-#endif\n-}\n-\n-#ifndef JC1_LITE\n-static int\n-java_is_eol (FILE *fp, int c)\n-{\n-  int next;\n-  switch (c)\n-    {\n-    case '\\r':\n-      next = getc (fp);\n-      if (next != '\\n' && next != EOF)\n-\tungetc (next, fp);\n-      return 1;\n-    case '\\n':\n-      return 1;\n-    default:\n-      return 0;\n-    }  \n-}\n-#endif\n-\n-char *\n-java_get_line_col (const char *filename ATTRIBUTE_UNUSED,\n-\t\t   int line ATTRIBUTE_UNUSED, int col ATTRIBUTE_UNUSED)\n-{\n-#ifdef JC1_LITE\n-  return 0;\n-#else\n-  /* Dumb implementation. Doesn't try to cache or optimize things.  */\n-  /* First line of the file is line 1, first column is 1.  */\n-\n-  /* COL == -1 means, at the CR/LF in LINE.  */\n-  /* COL == -2 means, at the first non space char in LINE.  */\n-\n-  FILE *fp;\n-  int c, ccol, cline = 1;\n-  int current_line_col = 0;\n-  int first_non_space = 0;\n-  char *base;\n-\n-  if (!(fp = fopen (filename, \"r\")))\n-    fatal_error (\"can't open %s: %m\", filename);\n-\n-  while (cline != line)\n-    {\n-      c = getc (fp);\n-      if (c == EOF)\n-\t{\n-\t  static const char msg[] = \"<<file too short - unexpected EOF>>\";\n-\t  obstack_grow (&temporary_obstack, msg, sizeof(msg)-1);\n-\t  goto have_line;\n-\t}\n-      if (java_is_eol (fp, c))\n-\tcline++;\n-    }\n-\n-  /* Gather the chars of the current line in a buffer.  */\n-  for (;;)\n-    {\n-      c = getc (fp);\n-      if (c < 0 || java_is_eol (fp, c))\n-\tbreak;\n-      if (!first_non_space && !JAVA_WHITE_SPACE_P (c))\n-\tfirst_non_space = current_line_col;\n-      obstack_1grow (&temporary_obstack, c);\n-      current_line_col++;\n-    }\n- have_line:\n-\n-  obstack_1grow (&temporary_obstack, '\\n');\n-\n-  if (col == -1)\n-    {\n-      col = current_line_col;\n-      first_non_space = 0;\n-    }\n-  else if (col == -2)\n-    col = first_non_space;\n-  else\n-    first_non_space = 0;\n-\n-  /* Place the '^' a the right position.  */\n-  base = obstack_base (&temporary_obstack);\n-  for (col += 2, ccol = 0; ccol < col; ccol++)\n-    {\n-      /* Compute \\t when reaching first_non_space.  */\n-      char c = (first_non_space ?\n-\t\t(base [ccol] == '\\t' ? '\\t' : ' ') : ' ');\n-      obstack_1grow (&temporary_obstack, c);\n-    }\n-  obstack_grow0 (&temporary_obstack, \"^\", 1);\n-\n-  fclose (fp);\n-  return obstack_finish (&temporary_obstack);\n-#endif\n-}\n-\n-#ifndef JC1_LITE\n-static int\n-utf8_cmp (const unsigned char *str, int length, const char *name)\n-{\n-  const unsigned char *limit = str + length;\n-  int i;\n-\n-  for (i = 0; name[i]; ++i)\n-    {\n-      int ch = UTF8_GET (str, limit);\n-      if (ch != name[i])\n-\treturn ch - name[i];\n-    }\n-\n-  return str == limit ? 0 : 1;\n-}\n-\n-/* A sorted list of all C++ keywords.  */\n-\n-static const char *const cxx_keywords[] =\n-{\n-  \"_Complex\",\n-  \"__alignof\",\n-  \"__alignof__\",\n-  \"__asm\",\n-  \"__asm__\",\n-  \"__attribute\",\n-  \"__attribute__\",\n-  \"__builtin_va_arg\",\n-  \"__complex\",\n-  \"__complex__\",\n-  \"__const\",\n-  \"__const__\",\n-  \"__extension__\",\n-  \"__imag\",\n-  \"__imag__\",\n-  \"__inline\",\n-  \"__inline__\",\n-  \"__label__\",\n-  \"__null\",\n-  \"__real\",\n-  \"__real__\",\n-  \"__restrict\",\n-  \"__restrict__\",\n-  \"__signed\",\n-  \"__signed__\",\n-  \"__typeof\",\n-  \"__typeof__\",\n-  \"__volatile\",\n-  \"__volatile__\",\n-  \"and\",\n-  \"and_eq\",\n-  \"asm\",\n-  \"auto\",\n-  \"bitand\",\n-  \"bitor\",\n-  \"bool\",\n-  \"break\",\n-  \"case\",\n-  \"catch\",\n-  \"char\",\n-  \"class\",\n-  \"compl\",\n-  \"const\",\n-  \"const_cast\",\n-  \"continue\",\n-  \"default\",\n-  \"delete\",\n-  \"do\",\n-  \"double\",\n-  \"dynamic_cast\",\n-  \"else\",\n-  \"enum\",\n-  \"explicit\",\n-  \"export\",\n-  \"extern\",\n-  \"false\",\n-  \"float\",\n-  \"for\",\n-  \"friend\",\n-  \"goto\",\n-  \"if\",\n-  \"inline\",\n-  \"int\",\n-  \"long\",\n-  \"mutable\",\n-  \"namespace\",\n-  \"new\",\n-  \"not\",\n-  \"not_eq\",\n-  \"operator\",\n-  \"or\",\n-  \"or_eq\",\n-  \"private\",\n-  \"protected\",\n-  \"public\",\n-  \"register\",\n-  \"reinterpret_cast\",\n-  \"return\",\n-  \"short\",\n-  \"signed\",\n-  \"sizeof\",\n-  \"static\",\n-  \"static_cast\",\n-  \"struct\",\n-  \"switch\",\n-  \"template\",\n-  \"this\",      \n-  \"throw\",\n-  \"true\",\n-  \"try\",\n-  \"typedef\",\n-  \"typeid\",\n-  \"typename\",\n-  \"typeof\",\n-  \"union\",\n-  \"unsigned\",\n-  \"using\",\n-  \"virtual\",\n-  \"void\",\n-  \"volatile\",\n-  \"wchar_t\",\n-  \"while\",\n-  \"xor\",\n-  \"xor_eq\"\n-};\n-\n-/* Return true if NAME is a C++ keyword.  */\n-\n-int\n-cxx_keyword_p (const char *name, int length)\n-{\n-  int last = ARRAY_SIZE (cxx_keywords);\n-  int first = 0;\n-  int mid = (last + first) / 2;\n-  int old = -1;\n-\n-  for (mid = (last + first) / 2;\n-       mid != old;\n-       old = mid, mid = (last + first) / 2)\n-    {\n-      int kwl = strlen (cxx_keywords[mid]);\n-      int min_length = kwl > length ? length : kwl;\n-      int r = utf8_cmp ((const unsigned char *) name, min_length, cxx_keywords[mid]);\n-\n-      if (r == 0)\n-\t{\n-\t  int i;\n-\t  /* We've found a match if all the remaining characters are `$'.  */\n-\t  for (i = min_length; i < length && name[i] == '$'; ++i)\n-\t    ;\n-\t  if (i == length)\n-\t    return 1;\n-\t  r = 1;\n-\t}\n-\n-      if (r < 0)\n-\tlast = mid;\n-      else\n-\tfirst = mid;\n-    }\n-  return 0;\n-}\n-#endif /* JC1_LITE */"}, {"sha": "20f7680b0fd95420c3d3fbffabe32bdffc9b7418", "filename": "gcc/java/lex.h", "status": "removed", "additions": 0, "deletions": 247, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,247 +0,0 @@\n-/* Language lexer definitions for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n-   Free Software Foundation, Inc.\n-   Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.\n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-#ifndef GCC_JAVA_LEX_H\n-#define GCC_JAVA_LEX_H\n-\n-#include \"input.h\"\n-\n-/* Extern global variables declarations  */\n-extern FILE *finput;\n-\n-/* A Unicode character, as read from the input file  */\n-typedef unsigned short unicode_t;\n-\n-#ifndef HAVE_ICONV_H\n-#undef HAVE_ICONV\n-#endif\n-\n-#if defined HAVE_ICONV\n-#include <iconv.h>\n-#endif /* HAVE_ICONV */\n-\n-/* Default encoding to use if no encoding is specified.  */\n-#define DEFAULT_ENCODING \"UTF-8\"\n-\n-typedef struct java_lc_s GTY(()) {\n-  int line;\t\t/* line number (1-based) */\n-  int col;\t\t/* column number number (1-based) */\n-} java_lc;\n-\n-struct java_lexer\n-{\n-  /* The file from which we're reading.  */\n-  FILE *finput;\n-\n-  /* Number of consecutive backslashes we've read.  */\n-  int bs_count;\n-\n-  /* Next available Unicode character.\n-   * This is post-Unicode-escape-processing. -1 if EOF. */\n-  int next_unicode;\n-\n-  /* True if next_unicode is next available character, or EOF. */\n-  bool avail_unicode;\n-\n-  /* Number of source columns of the previous Unicode character (next_unicode).\n-     If next_unicode==-2, then this is the number of columns of the previous\n-     Unicode character (most recent result of java_{get,peek}_unicode). */\n-  int next_columns;\n-\n-  /* If nonzero, a value that was pushed back.  This is a unicode character,\n-     but (unlike next_unicode) is pre-'\\uXXXX'-processing.  It is also used\n-     when a '\\r' is *not* followed by a '\\n'. */\n-  unicode_t unget_value;\n-\n-  /* Name of the character encoding we're using.  */\n-  const char *encoding;\n-\n-  /* Current source position. */\n-  java_lc position;\n-\n-#ifndef USE_MAPPED_LOCATION\n-  java_lc token_start;\t\t     /* Error's line column info */\n-#endif\n-\n-#ifdef HAVE_ICONV\n-  /* Nonzero if we've read any bytes.  We only recognize the\n-     byte-order-marker (BOM) as the first word.  */\n-  unsigned int read_anything : 1;\n-\n-  /* Nonzero if we have to byte swap.  */\n-  unsigned int byte_swap : 1;\n-\n-  /* Nonzero if we're using the fallback decoder.  */\n-  unsigned int use_fallback : 1;\n-\n-  /* The handle for the iconv converter we're using.  */\n-  iconv_t handle;\n-\n-  /* Bytes we've read from the file but have not sent to iconv.  */\n-  char buffer[1024];\n-\n-  /* Index of first valid character in buffer, -1 if no valid\n-     characters.  */\n-  int first;\n-\n-  /* Index of last valid character in buffer, plus one.  -1 if no\n-     valid characters in buffer.  */\n-  int last;\n-\n-  /* This is a buffer of characters already converted by iconv.  We\n-     use `char' here because we're assuming that iconv() converts to\n-     UCS-2, and then we convert it ourselves.  */\n-  unsigned char out_buffer[1024];\n-\n-  /* Index of first valid output character.  -1 if no valid\n-     characters.  */\n-  int out_first;\n-\n-  /* Index of last valid output character, plus one.  -1 if no valid\n-     characters.  */\n-  int out_last;\n-\n-#endif /* HAVE_ICONV */\n-};\n-typedef struct java_lexer java_lexer;\n-\n-/* Destroy a lexer object.  */\n-extern void java_destroy_lexer (java_lexer *);\n-\n-#define JAVA_LINE_MAX 80\n-\n-/* Build a location compound integer */\n-#ifdef USE_MAPPED_LOCATION\n-#define BUILD_LOCATION() input_location\n-#else\n-#define BUILD_LOCATION() ((ctxp->lexer->token_start.line << 12) \\\n-\t\t\t  | (ctxp->lexer->token_start.col & 0xfff))\n-#endif\n-\n-/* Those macros are defined differently if we compile jc1-lite\n-   (JC1_LITE defined) or jc1.  */\n-#ifdef JC1_LITE\n-\n-#define DCONST0 0\n-#define REAL_VALUE_TYPE int\n-#define GET_IDENTIFIER(S) xstrdup ((S))\n-#define REAL_VALUE_ATOF(LIT,MODE) 0\n-#define REAL_VALUE_ISINF(VALUE)   0\n-#define REAL_VALUE_ISNAN(VALUE)   0\n-#define SET_REAL_VALUE_ATOF(TARGET,SOURCE)\n-#define FLOAT_TYPE_NODE 0\n-#define DOUBLE_TYPE_NODE 0\n-#define SET_MODIFIER_CTX(TOKEN) java_lval->value = (TOKEN)\n-#define GET_TYPE_PRECISION(NODE) 4\n-#define BUILD_OPERATOR(TOKEN)\treturn TOKEN\n-#define BUILD_OPERATOR2(TOKEN)\treturn ASSIGN_ANY_TK\n-#define SET_LVAL_NODE(NODE)\n-#define BUILD_ID_WFL(EXP) (EXP)\n-#define JAVA_FLOAT_RANGE_ERROR(S) {}\n-#define JAVA_RANGE_ERROR(S) do { } while (0)\n-\n-#else\n-\n-#define DCONST0 dconst0\n-#define GET_IDENTIFIER(S) get_identifier ((S))\n-#define SET_REAL_VALUE_ATOF(TARGET,SOURCE) (TARGET) = (SOURCE)\n-#define FLOAT_TYPE_NODE float_type_node\n-#define DOUBLE_TYPE_NODE double_type_node\n-/* Set modifier_ctx according to TOKEN */\n-#define SET_MODIFIER_CTX(TOKEN)\t\t\t\t\t\t   \\\n-  {\t\t\t\t\t\t\t\t\t   \\\n-    ctxp->modifier_ctx [(TOKEN)-PUBLIC_TK] = build_wfl_node (NULL_TREE); \\\n-    java_lval->value = (TOKEN)-PUBLIC_TK;\t\t\t\t   \\\n-  }\n-/* Type precision for long */\n-#define GET_TYPE_PRECISION(NODE) TYPE_PRECISION (long_type_node) / 8;\n-/* Build an operator tree node and return TOKEN */\n-#define BUILD_OPERATOR(TOKEN)\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\\\n-    java_lval->operator.token = (TOKEN);\t\t\\\n-    java_lval->operator.location = BUILD_LOCATION();\t\\\n-    return (TOKEN);\t\t\t\t\t\\\n-  }\n-\n-/* Build an operator tree node but return ASSIGN_ANY_TK */\n-#define BUILD_OPERATOR2(TOKEN)\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\\\n-    java_lval->operator.token = (TOKEN);\t\t\\\n-    java_lval->operator.location = BUILD_LOCATION();\t\\\n-    return ASSIGN_ANY_TK;\t\t\t\t\\\n-  }\n-/* Set java_lval->node and TREE_TYPE(java_lval->node) in macros */\n-#define SET_LVAL_NODE(NODE) java_lval->node = (NODE)\n-/* Wrap identifier around a wfl */\n-#define BUILD_ID_WFL(EXP) build_wfl_node ((EXP))\n-/* Special ways to report error on numeric literals  */\n-#define JAVA_FLOAT_RANGE_ERROR(m)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    char *msg = XNEWVEC (char, 100 + strlen (m));\t\t\t\\\n-    sprintf (msg, \"Floating point literal exceeds range of `%s'\", (m));\t\\\n-    JAVA_RANGE_ERROR(msg);\t\t\t\t\t\t\\\n-    free (msg);\t\t\t\t\t\t\t\t\\\n-  }\n-#define JAVA_RANGE_ERROR(msg)\t\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    int save_col = ctxp->lexer->position.col;\t\t\t\t\\\n-    ctxp->lexer->position.col = number_beginning;\t\t\t\\\n-    java_lex_error (msg, 0);\t\t\t\t\t\t\\\n-    ctxp->lexer->position.col = save_col;\t\t\t\t\\\n-  } while (0)\n-\n-#endif /* Definitions for jc1 compilation only */\n-\n-/* Macros to decode character ranges */\n-#define RANGE(c, l, h)           (((c) >= l && (c) <= h))\n-#define JAVA_WHITE_SPACE_P(c) (c == ' ' || c == '\\t' || c == '\\f')\n-#define JAVA_START_CHAR_P(c) ((c < 128\t\t\t\t\t      \\\n-\t\t\t       && (ISIDST (c) || c == '$'))\t\t      \\\n-                              || (c >= 128 && java_start_char_p (c)))\n-#define JAVA_PART_CHAR_P(c) ((c < 128\t\t\t\t\t      \\\n-\t\t\t       && (ISIDNUM (c)\t\t\t\t      \\\n-\t\t\t\t   || c == '$'\t\t\t\t      \\\n-\t\t\t\t   || c == 0x0000\t\t\t      \\\n-\t\t\t\t   || RANGE (c, 0x01, 0x08)\t\t      \\\n-\t\t\t\t   || RANGE (c, 0x0e, 0x1b)\t\t      \\\n-\t\t\t\t   || c == 0x7f))\t\t\t      \\\n-                              || (c >= 128 && java_part_char_p (c)))\n-#define JAVA_ASCII_DIGIT(c)    ISDIGIT (c)\n-#define JAVA_ASCII_OCTDIGIT(c) RANGE (c, '0', '7')\n-#define JAVA_ASCII_HEXDIGIT(c) ISXDIGIT (c)\n-#define JAVA_ASCII_FPCHAR(c)   (RANGE (c, 'd', 'f') || RANGE (c, 'D', 'F') || \\\n-\t\t\t\tc == '.' || JAVA_ASCII_DIGIT (c))\n-#define JAVA_FP_SUFFIX(c)      (c == 'D' || c == 'd' || c == 'f' || c == 'F')\n-#define JAVA_FP_EXP(c)         (c == 'E' || c == 'F')\n-#define JAVA_FP_PM(c)          (c == '-' || c == '+')\n-#define JAVA_ASCII_LETTER(c)   ISALPHA (c)\n-\n-/* Constants  */\n-#define JAVA_READ_BUFFER 256\n-#define JAVA_CHAR_ERROR -2\n-#define UEOF -1\n-\n-#endif /* ! GCC_JAVA_LEX_H */"}, {"sha": "69a0898f8ad7e5815a1e0699ee00be01120df6ca", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 162, "deletions": 1, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Functions related to mangling class names for the GNU compiler\n    for the Java(TM) language.\n-   Copyright (C) 1998, 1999, 2001, 2002, 2003\n+   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2006, 2007\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -73,6 +73,167 @@ struct obstack *mangle_obstack;\n /* atms: array template mangled string. */\n static GTY(()) tree atms;\n \n+static int\n+utf8_cmp (const unsigned char *str, int length, const char *name)\n+{\n+  const unsigned char *limit = str + length;\n+  int i;\n+\n+  for (i = 0; name[i]; ++i)\n+    {\n+      int ch = UTF8_GET (str, limit);\n+      if (ch != name[i])\n+\treturn ch - name[i];\n+    }\n+\n+  return str == limit ? 0 : 1;\n+}\n+\n+/* A sorted list of all C++ keywords.  */\n+static const char *const cxx_keywords[] =\n+{\n+  \"_Complex\",\n+  \"__alignof\",\n+  \"__alignof__\",\n+  \"__asm\",\n+  \"__asm__\",\n+  \"__attribute\",\n+  \"__attribute__\",\n+  \"__builtin_va_arg\",\n+  \"__complex\",\n+  \"__complex__\",\n+  \"__const\",\n+  \"__const__\",\n+  \"__extension__\",\n+  \"__imag\",\n+  \"__imag__\",\n+  \"__inline\",\n+  \"__inline__\",\n+  \"__label__\",\n+  \"__null\",\n+  \"__real\",\n+  \"__real__\",\n+  \"__restrict\",\n+  \"__restrict__\",\n+  \"__signed\",\n+  \"__signed__\",\n+  \"__typeof\",\n+  \"__typeof__\",\n+  \"__volatile\",\n+  \"__volatile__\",\n+  \"and\",\n+  \"and_eq\",\n+  \"asm\",\n+  \"auto\",\n+  \"bitand\",\n+  \"bitor\",\n+  \"bool\",\n+  \"break\",\n+  \"case\",\n+  \"catch\",\n+  \"char\",\n+  \"class\",\n+  \"compl\",\n+  \"const\",\n+  \"const_cast\",\n+  \"continue\",\n+  \"default\",\n+  \"delete\",\n+  \"do\",\n+  \"double\",\n+  \"dynamic_cast\",\n+  \"else\",\n+  \"enum\",\n+  \"explicit\",\n+  \"export\",\n+  \"extern\",\n+  \"false\",\n+  \"float\",\n+  \"for\",\n+  \"friend\",\n+  \"goto\",\n+  \"if\",\n+  \"inline\",\n+  \"int\",\n+  \"long\",\n+  \"mutable\",\n+  \"namespace\",\n+  \"new\",\n+  \"not\",\n+  \"not_eq\",\n+  \"operator\",\n+  \"or\",\n+  \"or_eq\",\n+  \"private\",\n+  \"protected\",\n+  \"public\",\n+  \"register\",\n+  \"reinterpret_cast\",\n+  \"return\",\n+  \"short\",\n+  \"signed\",\n+  \"sizeof\",\n+  \"static\",\n+  \"static_cast\",\n+  \"struct\",\n+  \"switch\",\n+  \"template\",\n+  \"this\",      \n+  \"throw\",\n+  \"true\",\n+  \"try\",\n+  \"typedef\",\n+  \"typeid\",\n+  \"typename\",\n+  \"typeof\",\n+  \"union\",\n+  \"unsigned\",\n+  \"using\",\n+  \"virtual\",\n+  \"void\",\n+  \"volatile\",\n+  \"wchar_t\",\n+  \"while\",\n+  \"xor\",\n+  \"xor_eq\"\n+};\n+\n+/* Return true if NAME is a C++ keyword.  */\n+static int\n+cxx_keyword_p (const char *name, int length)\n+{\n+  int last = ARRAY_SIZE (cxx_keywords);\n+  int first = 0;\n+  int mid = (last + first) / 2;\n+  int old = -1;\n+\n+  for (mid = (last + first) / 2;\n+       mid != old;\n+       old = mid, mid = (last + first) / 2)\n+    {\n+      int kwl = strlen (cxx_keywords[mid]);\n+      int min_length = kwl > length ? length : kwl;\n+      int r = utf8_cmp ((const unsigned char *) name, min_length, cxx_keywords[mid]);\n+\n+      if (r == 0)\n+\t{\n+\t  int i;\n+\t  /* We've found a match if all the remaining characters are `$'.  */\n+\t  for (i = min_length; i < length && name[i] == '$'; ++i)\n+\t    ;\n+\t  if (i == length)\n+\t    return 1;\n+\t  r = 1;\n+\t}\n+\n+      if (r < 0)\n+\tlast = mid;\n+      else\n+\tfirst = mid;\n+    }\n+  return 0;\n+}\n+\n /* This is the mangling interface: a decl, a class field (.class) and\n    the vtable. */\n "}, {"sha": "cedba9eb8e3a9c308cf1e95d66d5719eb69f0c07", "filename": "gcc/java/parse-scan.y", "status": "removed", "additions": 0, "deletions": 1377, "changes": 1377, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369", "patch": "@@ -1,1377 +0,0 @@\n-/* Parser grammar for quick source code scan of Java(TM) language programs.\n-   Copyright (C) 1998, 1999, 2000, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n-   Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.\n-\n-Java and all Java-based marks are trademarks or registered trademarks\n-of Sun Microsystems, Inc. in the United States and other countries.\n-The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n-\n-/* This file parses Java source code. Action can be further completed\n-to achieve a desired behavior. This file isn't part of the Java\n-language gcc front end.\n-\n-The grammar conforms to the Java grammar described in \"The Java(TM)\n-Language Specification. J. Gosling, B. Joy, G. Steele. Addison Wesley\n-1996, ISBN 0-201-63451-1\"\n-\n-Some rules have been modified to support JDK1.1 inner classes\n-definitions and other extensions.  */\n-\n-%{\n-#define JC1_LITE\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"obstack.h\"\n-#include \"toplev.h\"\n-\n-extern FILE *finput, *out;\n- \n- const char *main_input_filename;\n-\n-/* Obstack for the lexer.  */\n-struct obstack temporary_obstack;\n-\n-/* The current parser context.  */\n-struct parser_ctxt *ctxp;\n-\n-/* Error and warning counts, because they're used elsewhere  */\n-int java_error_count;\n-int java_warning_count;\n-\n-/* Tweak default rules when necessary.  */\n-static int absorber;\n-#define USE_ABSORBER absorber = 0\n-\n-/* Keep track of the current package name.  */\n-static const char *package_name;\n-\n-/* Keep track of whether things have be listed before.  */\n-static int previous_output;\n-\n-/* Record modifier uses  */\n-static int modifier_value;\n-\n-/* Record (almost) cyclomatic complexity.  */\n-static int complexity; \n-\n-/* Keeps track of number of bracket pairs after a variable declarator\n-   id.  */\n-static int bracket_count; \n-\n-/* Numbers anonymous classes */\n-static int anonymous_count;\n-\n-/* This is used to record the current class context.  */\n-struct class_context\n-{\n-  char *name;\n-  struct class_context *next;\n-};\n-\n-/* The global class context.  */\n-static struct class_context *current_class_context;\n-\n-/* A special constant used to represent an anonymous context.  */\n-static const char *anonymous_context = \"ANONYMOUS\";\n-\n-/* Count of method depth.  */\n-static int method_depth; \n-\n-/* Record a method declaration  */\n-struct method_declarator {\n-  const char *method_name;\n-  const char *args;\n-};\n-#define NEW_METHOD_DECLARATOR(D,N,A)\t\t\t\t\t     \\\n-{\t\t\t\t\t\t\t\t\t     \\\n-  (D) = XNEW (struct method_declarator);\t\t\t\t     \\\n-  (D)->method_name = (N);\t\t\t\t\t\t     \\\n-  (D)->args = (A);\t\t\t\t\t\t\t     \\\n-}\n-\n-/* Two actions for this grammar */\n-static int make_class_name_recursive (struct obstack *stack,\n-\t\t\t\t      struct class_context *ctx);\n-static char *get_class_name (void);\n-static void report_class_declaration (const char *);\n-static void report_main_declaration (struct method_declarator *);\n-static void push_class_context (const char *);\n-static void pop_class_context (void);\n-\n-void report (void); \n-\n-#include \"lex.h\"\n-#include \"parse.h\"\n-%}\n-\n-%union {\n-  char *node;\n-  struct method_declarator *declarator;\n-  int value;\t\t\t/* For modifiers */\n-}\n-\n-%{\n-extern int flag_assert;\n-\n-#include \"lex.c\"\n-%}\n-\n-%pure_parser\n-\n-/* Things defined here have to match the order of what's in the\n-   binop_lookup table.  */\n-\n-%token   PLUS_TK         MINUS_TK        MULT_TK         DIV_TK    REM_TK\n-%token   LS_TK           SRS_TK          ZRS_TK\n-%token   AND_TK          XOR_TK          OR_TK\n-%token   BOOL_AND_TK BOOL_OR_TK \n-%token   EQ_TK NEQ_TK GT_TK GTE_TK LT_TK LTE_TK\n-\n-/* This maps to the same binop_lookup entry than the token above */\n-\n-%token   PLUS_ASSIGN_TK  MINUS_ASSIGN_TK MULT_ASSIGN_TK DIV_ASSIGN_TK\n-%token   REM_ASSIGN_TK   \n-%token   LS_ASSIGN_TK    SRS_ASSIGN_TK   ZRS_ASSIGN_TK\n-%token   AND_ASSIGN_TK   XOR_ASSIGN_TK   OR_ASSIGN_TK\n-\n-\n-/* Modifier TOKEN have to be kept in this order. Don't scramble it */\n-\n-%token   PUBLIC_TK       PRIVATE_TK         PROTECTED_TK\n-%token   STATIC_TK       FINAL_TK           SYNCHRONIZED_TK\n-%token   VOLATILE_TK     TRANSIENT_TK       NATIVE_TK\n-%token   PAD_TK          ABSTRACT_TK        MODIFIER_TK\n-%token   STRICT_TK\n-\n-/* Keep those two in order, too */\n-%token   DECR_TK INCR_TK\n-\n-/* From now one, things can be in any order */\n-\n-%token   DEFAULT_TK      IF_TK              THROW_TK\n-%token   BOOLEAN_TK      DO_TK              IMPLEMENTS_TK\n-%token   THROWS_TK       BREAK_TK           IMPORT_TK       \n-%token   ELSE_TK         INSTANCEOF_TK      RETURN_TK\n-%token   VOID_TK         CATCH_TK           INTERFACE_TK\n-%token   CASE_TK         EXTENDS_TK         FINALLY_TK\n-%token   SUPER_TK        WHILE_TK           CLASS_TK\n-%token   SWITCH_TK       CONST_TK           TRY_TK\n-%token   FOR_TK          NEW_TK             CONTINUE_TK\n-%token   GOTO_TK         PACKAGE_TK         THIS_TK\n-%token   ASSERT_TK\n-\n-%token   BYTE_TK         SHORT_TK           INT_TK            LONG_TK\n-%token   CHAR_TK         INTEGRAL_TK\n-\n-%token   FLOAT_TK        DOUBLE_TK          FP_TK\n-\n-%token   ID_TK\n-\n-%token   REL_QM_TK         REL_CL_TK NOT_TK  NEG_TK\n-\n-%token   ASSIGN_ANY_TK   ASSIGN_TK\n-%token   OP_TK  CP_TK  OCB_TK  CCB_TK  OSB_TK  CSB_TK  SC_TK  C_TK DOT_TK\n-\n-%token   STRING_LIT_TK   CHAR_LIT_TK        INT_LIT_TK        FP_LIT_TK\n-%token   TRUE_TK         FALSE_TK           BOOL_LIT_TK       NULL_TK\n-\n-%type <node> ID_TK identifier name simple_name qualified_name type\n- \t     primitive_type reference_type array_type formal_parameter_list\n-\t     formal_parameter class_or_interface_type class_type interface_type\n-%type <declarator> method_declarator\n-%type <value>      MODIFIER_TK\n-\n-%%\n-/* 19.2 Production from 2.3: The Syntactic Grammar  */\n-goal:\n-\tcompilation_unit\n-;\n-\n-/* 19.3 Productions from 3: Lexical structure  */\n-literal:\n-\tINT_LIT_TK\n-|\tFP_LIT_TK\n-|\tBOOL_LIT_TK\n-|\tCHAR_LIT_TK\n-|       STRING_LIT_TK\n-|       NULL_TK\n-;\n-\n-/* 19.4 Productions from 4: Types, Values and Variables  */\n-type:\n-\tprimitive_type\n-|\treference_type\n-;\n-\n-primitive_type:\n-\tINTEGRAL_TK\n-\t\t{\n-\t\t  /* use preset global here. FIXME */\n-\t\t  $$ = xstrdup (\"int\");\n-\t\t}\n-|\tFP_TK\n-\t\t{\n-\t\t  /* use preset global here. FIXME */\n-\t\t  $$ = xstrdup (\"double\");\n-\t\t}\n-|\tBOOLEAN_TK\n-\t\t{\n-\t\t  /* use preset global here. FIXME */\n-\t\t  $$ = xstrdup (\"boolean\");\n-\t\t}\n-;\n-\n-reference_type:\n-\tclass_or_interface_type\n-|\tarray_type\n-;\n-\n-class_or_interface_type:\n-\tname\n-;\n-\n-class_type:\n-\tclass_or_interface_type\t/* Default rule */\n-;\n-\n-interface_type:\n-\t class_or_interface_type\n-;\n-\n-array_type:\n-\tprimitive_type dims\n-\t\t{\n-\t          while (bracket_count-- > 0) \n-\t\t    $$ = concat (\"[\", $1, NULL);\n-\t\t}\n-|\tname dims\n-\t\t{\n-\t          while (bracket_count-- > 0) \n-\t\t    $$ = concat (\"[\", $1, NULL);\n-\t\t}\n-;\n-\n-/* 19.5 Productions from 6: Names  */\n-name:\n-\tsimple_name\t\t/* Default rule */\n-|\tqualified_name\t\t/* Default rule */\n-;\n-\n-simple_name:\n-\tidentifier\t\t/* Default rule */\n-;\n-\n-qualified_name:\n-\tname DOT_TK identifier\n-\t\t{ \n-\t\t  $$ = concat ($1, \".\", $3, NULL);\n-\t\t}\n-;\n-\n-identifier:\n-\tID_TK\n-;\n-\n-/* 19.6: Production from 7: Packages  */\n-compilation_unit:\n-|\tpackage_declaration\n-|\timport_declarations\n-|\ttype_declarations\n-|       package_declaration import_declarations\n-|       package_declaration type_declarations\n-|       import_declarations type_declarations\n-|       package_declaration import_declarations type_declarations\n-;\n-\n-import_declarations:\n-\timport_declaration\n-|\timport_declarations import_declaration\n-;\n-\n-type_declarations:\n-\ttype_declaration\n-| \ttype_declarations type_declaration\n-;\n-\n-package_declaration:\n-\tPACKAGE_TK name SC_TK\n-\t\t{ package_name = $2; }\n-;\n-\n-import_declaration:\n-\tsingle_type_import_declaration\n-|\ttype_import_on_demand_declaration\n-;\n-\n-single_type_import_declaration:\n-\tIMPORT_TK name SC_TK\n-;\n-\n-type_import_on_demand_declaration:\n-\tIMPORT_TK name DOT_TK MULT_TK SC_TK\n-;\n-\n-type_declaration:\n-\tclass_declaration\n-|\tinterface_declaration\n-|\tempty_statement\n-;\n-\n-/* 19.7 Shortened from the original:\n-   modifiers: modifier | modifiers modifier\n-   modifier: any of public...  */\n-modifiers:\n-\tMODIFIER_TK\n-\t\t{ \n-\t\t  if ($1 == PUBLIC_TK)\n-\t\t    modifier_value++;\n-                  if ($1 == STATIC_TK)\n-                    modifier_value++;\n-\t          USE_ABSORBER;\n-\t\t}\t\n-|\tmodifiers MODIFIER_TK\n-\t\t{ \n-\t\t  if ($2 == PUBLIC_TK)\n-\t\t    modifier_value++;\n-                  if ($2 == STATIC_TK)\n-                    modifier_value++;\n-\t\t  USE_ABSORBER;\n-\t\t}\t\n-;\n-\n-/* 19.8.1 Production from $8.1: Class Declaration */\n-class_declaration:\n-\tmodifiers CLASS_TK identifier super interfaces \n-\t\t{ \n-\t\t  report_class_declaration($3);\n-\t\t  modifier_value = 0;\n-                }\n-\tclass_body\n-|\tCLASS_TK identifier super interfaces \n-\t\t{ report_class_declaration($2); }\n-\tclass_body\n-;\n-\n-super:\n-|\tEXTENDS_TK class_type\n-;\n-\n-interfaces:\n-|\tIMPLEMENTS_TK interface_type_list\n-;\n-\n-interface_type_list:\n-\tinterface_type\n-\t\t{ USE_ABSORBER; }\n-|\tinterface_type_list C_TK interface_type\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-class_body:\n-\tOCB_TK CCB_TK\n-\t\t{ pop_class_context (); }\n-|\tOCB_TK class_body_declarations CCB_TK\n-\t\t{ pop_class_context (); }\n-;\n-\n-class_body_declarations:\n-\tclass_body_declaration\n-|\tclass_body_declarations class_body_declaration\n-;\n-\n-class_body_declaration:\n-\tclass_member_declaration\n-|\tstatic_initializer\n-|\tconstructor_declaration\n-|\tblock\t\t\t/* Added, JDK1.1, instance initializer */\n-;\n-\n-class_member_declaration:\n-\tfield_declaration\n-|\tmethod_declaration\n-|\tclass_declaration\t/* Added, JDK1.1 inner classes */\n-|\tinterface_declaration\t/* Added, JDK1.1 inner classes */\n-|\tempty_statement\n-;\n-\n-/* 19.8.2 Productions from 8.3: Field Declarations  */\n-field_declaration:\n-\ttype variable_declarators SC_TK\n-\t\t{ USE_ABSORBER; }\n-|\tmodifiers type variable_declarators SC_TK\n-\t\t{ modifier_value = 0; }\n-;\n-\n-variable_declarators:\n-\t/* Should we use build_decl_list () instead ? FIXME */\n-\tvariable_declarator\t/* Default rule */\n-|\tvariable_declarators C_TK variable_declarator\n-;\n-\n-variable_declarator:\n-\tvariable_declarator_id\n-|\tvariable_declarator_id ASSIGN_TK variable_initializer\n-;\n-\n-variable_declarator_id:\n-\tidentifier\n-\t\t{ bracket_count = 0; USE_ABSORBER; }\n-|\tvariable_declarator_id OSB_TK CSB_TK\n-\t\t{ ++bracket_count; }\n-;\n-\n-variable_initializer:\n-\texpression\n-|\tarray_initializer\n-;\n-\n-/* 19.8.3 Productions from 8.4: Method Declarations  */\n-method_declaration:\n-\tmethod_header\n-\t\t{ ++method_depth; }\n-\tmethod_body\n-\t\t{ --method_depth; }\n-;\n-\n-method_header:\t\n-\ttype method_declarator throws\n-\t\t{ USE_ABSORBER; }\n-|\tVOID_TK method_declarator throws\n-|\tmodifiers type method_declarator throws\n-\t\t{ modifier_value = 0; }\n-|\tmodifiers VOID_TK method_declarator throws\n-\t\t{ \n-                  report_main_declaration ($3);\n-\t\t  modifier_value = 0;\n-\t\t}\n-;\n-\n-method_declarator:\n-\tidentifier OP_TK CP_TK\n-\t\t{ \n-\t\t  struct method_declarator *d;\n-\t\t  NEW_METHOD_DECLARATOR (d, $1, NULL);\n-\t\t  $$ = d;\n-\t\t}\n-|\tidentifier OP_TK formal_parameter_list CP_TK\n-\t\t{ \n-\t\t  struct method_declarator *d;\n-\t\t  NEW_METHOD_DECLARATOR (d, $1, $3);\n-\t\t  $$ = d;\n-\t\t}\n-|\tmethod_declarator OSB_TK CSB_TK\n-;\n-\n-formal_parameter_list:\n-\tformal_parameter\n-|\tformal_parameter_list C_TK formal_parameter\n-\t\t{\n-\t\t  $$ = concat ($1, \",\", $3, NULL);\n-\t\t}\n-;\n-\n-formal_parameter:\n-\ttype variable_declarator_id\n-\t\t{ \n-\t\t  USE_ABSORBER;\n-\t\t  if (bracket_count)\n-\t\t    {\n-\t\t      int i;\n-\t\t      char *n = XNEWVEC (char, bracket_count + 1 + strlen ($$));\n-\t\t      for (i = 0; i < bracket_count; ++i)\n-\t\t\tn[i] = '[';\n-\t\t      strcpy (n + bracket_count, $$);\n-\t\t      $$ = n;\n-\t\t    }\n-\t\t  else\n-\t\t    $$ = $1;\n-\t\t}\n-|\tmodifiers type variable_declarator_id /* Added, JDK1.1 final locals */\n-\t\t{\n-\t\t  if (bracket_count)\n-\t\t    {\n-\t\t      int i;\n-\t\t      char *n = XNEWVEC (char, bracket_count + 1 + strlen ($2));\n-\t\t      for (i = 0; i < bracket_count; ++i)\n-\t\t\tn[i] = '[';\n-\t\t      strcpy (n + bracket_count, $2);\n-\t\t      $$ = n;\n-\t\t    }\n-\t\t  else\n-\t\t    $$ = $2;\n-\t\t}\n-;\n-\n-throws:\n-|\tTHROWS_TK class_type_list\n-;\n-\n-class_type_list:\n-\tclass_type\n-\t\t{ USE_ABSORBER; }\n-|\tclass_type_list C_TK class_type\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-method_body:\n-\tblock\n-|\tSC_TK\n-;\n-\n-/* 19.8.4 Productions from 8.5: Static Initializers  */\n-static_initializer:\n-\tstatic block\n-;\n-\n-static:\t\t\t\t/* Test lval.sub_token here */\n-\tMODIFIER_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-/* 19.8.5 Productions from 8.6: Constructor Declarations  */\n-/* NOTE FOR FURTHER WORK ON CONSTRUCTORS:\n-   - If a forbidden modifier is found, the error is either the use of\n-     a forbidden modifier for a constructor OR bogus attempt to declare a\n-     method without having specified the return type. FIXME */\n-constructor_declaration:\n-\tconstructor_declarator throws constructor_body\n-|\tmodifiers constructor_declarator throws constructor_body\n-\t\t{ modifier_value = 0; }\n-/* extra SC_TK, FIXME */\n-|\tconstructor_declarator throws constructor_body SC_TK\n-/* extra SC_TK, FIXME */\n-|\tmodifiers constructor_declarator throws constructor_body SC_TK\n-\t\t{ modifier_value = 0; }\n-/* I'm not happy with the SC_TK addition. It isn't in the grammar and should\n-   probably be matched by and empty statement. But it doesn't work. FIXME */\n-;\n-\n-constructor_declarator:\n-\tsimple_name OP_TK CP_TK\n-\t\t{ USE_ABSORBER; }\n-|\tsimple_name OP_TK formal_parameter_list CP_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-constructor_body:\n-\tOCB_TK CCB_TK\n-|\tOCB_TK explicit_constructor_invocation CCB_TK\n-|\tOCB_TK block_statements CCB_TK\n-|       OCB_TK explicit_constructor_invocation block_statements CCB_TK\n-;\n-\n-/* Error recovery for that rule moved down expression_statement: rule.  */\n-explicit_constructor_invocation:\n-\tthis_or_super OP_TK CP_TK SC_TK\n-|\tthis_or_super OP_TK argument_list CP_TK SC_TK\n-        /* Added, JDK1.1 inner classes. Modified because the rule\n-\t   'primary' couldn't work.  */\n-|\tname DOT_TK SUPER_TK OP_TK argument_list CP_TK SC_TK\n-\t\t{ USE_ABSORBER; }\n-|\tname DOT_TK SUPER_TK OP_TK CP_TK SC_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-this_or_super:\t\t\t/* Added, simplifies error diagnostics */\n-\tTHIS_TK\n-|\tSUPER_TK\n-;\n-\n-/* 19.9 Productions from 9: Interfaces  */\n-/* 19.9.1 Productions from 9.1: Interfaces Declarations  */\n-interface_declaration:\n-\tINTERFACE_TK identifier\n-\t\t{ report_class_declaration ($2); modifier_value = 0; }\n-\tinterface_body\n-|\tmodifiers INTERFACE_TK identifier\n-\t\t{ report_class_declaration ($3); modifier_value = 0; }\n-\tinterface_body\n-|\tINTERFACE_TK identifier extends_interfaces\n-\t\t{ report_class_declaration ($2); modifier_value = 0; }\n-\tinterface_body\n-|\tmodifiers INTERFACE_TK identifier extends_interfaces\n-\t\t{ report_class_declaration ($3); modifier_value = 0; }\n-\tinterface_body\n-;\n-\n-extends_interfaces:\n-\tEXTENDS_TK interface_type\n-|\textends_interfaces C_TK interface_type\n-;\n-\n-interface_body:\n-\tOCB_TK CCB_TK\n-\t\t{ pop_class_context (); }\n-|\tOCB_TK interface_member_declarations CCB_TK\n-\t\t{ pop_class_context (); }\n-;\n-\n-interface_member_declarations:\n-\tinterface_member_declaration\n-|\tinterface_member_declarations interface_member_declaration\n-;\n-\n-interface_member_declaration:\n-\tconstant_declaration\n-|\tabstract_method_declaration\n-|\tclass_declaration\t/* Added, JDK1.1 inner classes */\n-|\tinterface_declaration\t/* Added, JDK1.1 inner classes */\n-|\tempty_statement\n-;\n-\n-constant_declaration:\n-\tfield_declaration\n-;\n-\n-abstract_method_declaration:\n-\tmethod_header SC_TK\n-;\n-\n-/* 19.10 Productions from 10: Arrays  */\n-array_initializer:\n-\tOCB_TK CCB_TK\n-|\tOCB_TK variable_initializers CCB_TK\n-|\tOCB_TK C_TK CCB_TK\n-|\tOCB_TK variable_initializers C_TK CCB_TK\n-;\n-\n-variable_initializers:\n-\tvariable_initializer\n-|\tvariable_initializers C_TK variable_initializer\n-;\n-\n-/* 19.11 Production from 14: Blocks and Statements  */\n-block:\n-\tOCB_TK CCB_TK\n-|\tOCB_TK block_statements CCB_TK\n-;\n-\n-block_statements:\n-\tblock_statement\n-|\tblock_statements block_statement\n-;\n-\n-block_statement:\n-\tlocal_variable_declaration_statement\n-|\tstatement\n-|\tclass_declaration\t/* Added, JDK1.1 inner classes */\n-;\n-\n-local_variable_declaration_statement:\n-\tlocal_variable_declaration SC_TK /* Can't catch missing ';' here */\n-;\n-\n-local_variable_declaration:\n-\ttype variable_declarators\n-\t\t{ USE_ABSORBER; }\n-|\tmodifiers type variable_declarators /* Added, JDK1.1 final locals */\n-\t\t{ modifier_value = 0; }\n-;\n-\n-statement:\n-\tstatement_without_trailing_substatement\n-|\tlabeled_statement\n-|\tif_then_statement\n-|\tif_then_else_statement\n-|\twhile_statement\n-|\tfor_statement\n-;\n-\n-statement_nsi:\n-\tstatement_without_trailing_substatement\n-|\tlabeled_statement_nsi\n-|\tif_then_else_statement_nsi\n-|\twhile_statement_nsi\n-|\tfor_statement_nsi\n-;\n-\n-statement_without_trailing_substatement:\n-\tblock\n-|\tempty_statement\n-|\texpression_statement\n-|\tswitch_statement\n-|\tdo_statement\n-|\tbreak_statement\n-|\tcontinue_statement\n-|\treturn_statement\n-|\tsynchronized_statement\n-|\tthrow_statement\n-|\ttry_statement\n-|\tassert_statement\n-;\n-\n-empty_statement:\n-\tSC_TK\n-;\n-\n-label_decl:\n-\tidentifier REL_CL_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-labeled_statement:\n-\tlabel_decl statement\n-;\n-\n-labeled_statement_nsi:\n-\tlabel_decl statement_nsi\n-;\n-\n-/* We concentrate here a bunch of error handling rules that we couldn't write\n-   earlier, because expression_statement catches a missing ';'.  */\n-expression_statement:\n-\tstatement_expression SC_TK\n-;\n-\n-statement_expression: \n-\tassignment\n-|\tpre_increment_expression\n-|\tpre_decrement_expression\n-|\tpost_increment_expression\n-|\tpost_decrement_expression\n-|\tmethod_invocation\n-|\tclass_instance_creation_expression\n-;\n-\n-if_then_statement:\n-\tIF_TK OP_TK expression CP_TK statement { ++complexity; }\n-;\n-\n-if_then_else_statement:\n-\tIF_TK OP_TK expression CP_TK statement_nsi ELSE_TK statement\n-\t{ ++complexity; }\n-;\n-\n-if_then_else_statement_nsi:\n-\tIF_TK OP_TK expression CP_TK statement_nsi ELSE_TK statement_nsi\n-\t{ ++complexity; }\n-;\n-\n-switch_statement:\n-\tSWITCH_TK OP_TK expression CP_TK switch_block\n-;\n-\n-switch_block:\n-\tOCB_TK CCB_TK\n-|\tOCB_TK switch_labels CCB_TK\n-|\tOCB_TK switch_block_statement_groups CCB_TK\n-|\tOCB_TK switch_block_statement_groups switch_labels CCB_TK\n-;\n-\n-switch_block_statement_groups: \n-\tswitch_block_statement_group\n-|\tswitch_block_statement_groups switch_block_statement_group\n-;\n-\n-switch_block_statement_group:\n-\tswitch_labels block_statements { ++complexity; }\n-;\n-\n-\n-switch_labels:\n-\tswitch_label\n-|\tswitch_labels switch_label\n-;\n-\n-switch_label:\n-\tCASE_TK constant_expression REL_CL_TK\n-|\tDEFAULT_TK REL_CL_TK\n-;\n-\n-while_expression:\n-\tWHILE_TK OP_TK expression CP_TK { ++complexity; }\n-;\n-\n-while_statement:\n-\twhile_expression statement\n-;\n-\n-while_statement_nsi:\n-\twhile_expression statement_nsi\n-;\n-\n-do_statement_begin:\n-\tDO_TK\n-;\n-\n-do_statement: \n-\tdo_statement_begin statement WHILE_TK OP_TK expression CP_TK SC_TK\n-\t{ ++complexity; }\n-;\n-\n-for_statement:\n-\tfor_begin SC_TK expression SC_TK for_update CP_TK statement\n-|\tfor_begin SC_TK SC_TK for_update CP_TK statement\n-;\n-\n-for_statement_nsi:\n-\tfor_begin SC_TK expression SC_TK for_update CP_TK statement_nsi\n-|\tfor_begin SC_TK SC_TK for_update CP_TK statement_nsi\n-;\n-\n-for_header:\n-\tFOR_TK OP_TK\n-;\n-\n-for_begin:\n-\tfor_header for_init { ++complexity; }\n-;\n-for_init:\t\t\t/* Can be empty */\n-|\tstatement_expression_list\n-|\tlocal_variable_declaration\n-;\n-\n-for_update:\t\t\t/* Can be empty */\n-|\tstatement_expression_list\n-;\n-\n-statement_expression_list:\n-\tstatement_expression\n-|\tstatement_expression_list C_TK statement_expression\n-;\n-\n-break_statement:\n-\tBREAK_TK SC_TK\n-|\tBREAK_TK identifier SC_TK\n-;\n-\n-/* `continue' with a label is considered for complexity but ordinary\n-   continue is not.  */\n-continue_statement:\n-\tCONTINUE_TK SC_TK\n-\t|       CONTINUE_TK identifier SC_TK { ++complexity; }\n-;\n-\n-return_statement:\n-\tRETURN_TK SC_TK\n-|\tRETURN_TK expression SC_TK\n-;\n-\n-throw_statement:\n-\tTHROW_TK expression SC_TK { ++complexity; }\n-;\n-\n-assert_statement:\n-\tASSERT_TK expression REL_CL_TK expression SC_TK\n-|\tASSERT_TK expression SC_TK\n-|\tASSERT_TK error\n-\t\t{yyerror (\"Missing term\"); RECOVER;}\n-|\tASSERT_TK expression error\n-\t\t{yyerror (\"';' expected\"); RECOVER;}\n-;\n-synchronized_statement:\n-\tsynchronized OP_TK expression CP_TK block\n-|\tsynchronized OP_TK expression CP_TK error\n-;\n-\n-synchronized:\t\t\t/* Test lval.sub_token here */\n-\tMODIFIER_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-try_statement:\n-\tTRY_TK block catches\n-|\tTRY_TK block finally\n-|\tTRY_TK block catches finally\n-;\n-\n-catches:\n-\tcatch_clause\n-|\tcatches catch_clause\n-;\n-\n-catch_clause:\n-\tCATCH_TK OP_TK formal_parameter CP_TK block { ++complexity; }\n-;\n-\n-finally:\n-\tFINALLY_TK block { ++complexity; }\n-;\n-\n-/* 19.12 Production from 15: Expressions  */\n-primary:\n-\tprimary_no_new_array\n-|\tarray_creation_expression\n-;\n-\n-primary_no_new_array:\n-\tliteral\n-|\tTHIS_TK\n-|\tOP_TK expression CP_TK\n-|\tclass_instance_creation_expression\n-|\tfield_access\n-|\tmethod_invocation\n-|\tarray_access\n-|\ttype_literals\n-        /* Added, JDK1.1 inner classes. Documentation is wrong\n-           referring to a 'ClassName' (class_name) rule that doesn't\n-           exist. Used name instead.  */\n-|\tname DOT_TK THIS_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-type_literals:\n-\tname DOT_TK CLASS_TK\n-\t\t{ USE_ABSORBER; }\n-|\tarray_type DOT_TK CLASS_TK\n-\t\t{ USE_ABSORBER; }\n-|\tprimitive_type DOT_TK CLASS_TK\n-\t\t{ USE_ABSORBER; }\n-|\tVOID_TK DOT_TK CLASS_TK\n-\t\t{ USE_ABSORBER; }\n-;\n-\n-class_instance_creation_expression:\n-\tNEW_TK class_type OP_TK argument_list CP_TK\n-|\tNEW_TK class_type OP_TK CP_TK\n-|\tanonymous_class_creation\n-|\tsomething_dot_new identifier OP_TK CP_TK\n-|\tsomething_dot_new identifier OP_TK CP_TK class_body\n-|\tsomething_dot_new identifier OP_TK argument_list CP_TK\n-|\tsomething_dot_new identifier OP_TK argument_list CP_TK class_body\n-;\n-\n-anonymous_class_creation:\n-\tNEW_TK class_type OP_TK CP_TK\n-\t\t{ report_class_declaration (anonymous_context); }\n-\tclass_body         \n-|\tNEW_TK class_type OP_TK argument_list CP_TK\n-\t\t{ report_class_declaration (anonymous_context); }\n-\tclass_body\n-;\n-\n-something_dot_new:\t\t/* Added, not part of the specs. */\n-\tname DOT_TK NEW_TK\n-\t\t{ USE_ABSORBER; }\n-|\tprimary DOT_TK NEW_TK\n-;\n-\n-argument_list:\n-\texpression\n-|\targument_list C_TK expression\n-|\targument_list C_TK error\n-;\n-\n-array_creation_expression:\n-\tNEW_TK primitive_type dim_exprs\n-|\tNEW_TK class_or_interface_type dim_exprs\n-|\tNEW_TK primitive_type dim_exprs dims\n-|\tNEW_TK class_or_interface_type dim_exprs dims\n-        /* Added, JDK1.1 anonymous array. Initial documentation rule\n-           modified */\n-|\tNEW_TK class_or_interface_type dims array_initializer\n-|\tNEW_TK primitive_type dims array_initializer\n-;\n-\n-dim_exprs:\n-\tdim_expr\n-|\tdim_exprs dim_expr\n-;\n-\n-dim_expr:\n-\tOSB_TK expression CSB_TK\n-;\n-\n-dims:\t\t\t\t\n-\tOSB_TK CSB_TK\n-\t\t{ bracket_count = 1; }\n-|\tdims OSB_TK CSB_TK\n-\t\t{ bracket_count++; }\n-;\n-\n-field_access:\n-\tprimary DOT_TK identifier\n-|\tSUPER_TK DOT_TK identifier\n-;\n-\n-/* We include method invocation in the complexity measure on the\n-   theory that most method calls are virtual and therefore involve a\n-   decision point.  */\n-method_invocation:\n-\tname OP_TK CP_TK\n-\t\t{ USE_ABSORBER; ++complexity; }\n-|\tname OP_TK argument_list CP_TK\n-\t\t{ USE_ABSORBER; ++complexity; }\n-|\tprimary DOT_TK identifier OP_TK CP_TK { ++complexity; }\n-|\tprimary DOT_TK identifier OP_TK argument_list CP_TK { ++complexity; }\n-|\tSUPER_TK DOT_TK identifier OP_TK CP_TK { ++complexity; }\n-|\tSUPER_TK DOT_TK identifier OP_TK argument_list CP_TK { ++complexity; }\n-;\n-\n-array_access:\n-\tname OSB_TK expression CSB_TK\n-\t\t{ USE_ABSORBER; }\n-|\tprimary_no_new_array OSB_TK expression CSB_TK\n-;\n-\n-postfix_expression:\n-\tprimary\n-|\tname\n-\t\t{ USE_ABSORBER; }\n-|\tpost_increment_expression\n-|\tpost_decrement_expression\n-;\n-\n-post_increment_expression:\n-\tpostfix_expression INCR_TK\n-;\n-\n-post_decrement_expression:\n-\tpostfix_expression DECR_TK\n-;\n-\n-unary_expression:\n-\tpre_increment_expression\n-|\tpre_decrement_expression\n-|\tPLUS_TK unary_expression\n-|\tMINUS_TK unary_expression\n-|\tunary_expression_not_plus_minus\n-;\n-\n-pre_increment_expression:\n-\tINCR_TK unary_expression\n-;\n-\n-pre_decrement_expression:\n-\tDECR_TK unary_expression\n-;\n-\n-unary_expression_not_plus_minus:\n-\tpostfix_expression\n-|\tNOT_TK unary_expression\n-|\tNEG_TK unary_expression\n-|\tcast_expression\n-;\n-\n-cast_expression:\t\t/* Error handling here is potentially weak */\n-\tOP_TK primitive_type dims CP_TK unary_expression\n-|\tOP_TK primitive_type CP_TK unary_expression\n-|\tOP_TK expression CP_TK unary_expression_not_plus_minus\n-|\tOP_TK name dims CP_TK unary_expression_not_plus_minus\n-;\n-\n-multiplicative_expression:\n-\tunary_expression\n-|\tmultiplicative_expression MULT_TK unary_expression\n-|\tmultiplicative_expression DIV_TK unary_expression\n-|\tmultiplicative_expression REM_TK unary_expression\n-;\n-\n-additive_expression:\n-\tmultiplicative_expression\n-|\tadditive_expression PLUS_TK multiplicative_expression\n-|\tadditive_expression MINUS_TK multiplicative_expression\n-;\n-\n-shift_expression:\n-\tadditive_expression\n-|\tshift_expression LS_TK additive_expression\n-|\tshift_expression SRS_TK additive_expression\n-|\tshift_expression ZRS_TK additive_expression\n-;\n-\n-relational_expression:\n-\tshift_expression\n-|\trelational_expression LT_TK shift_expression\n-|\trelational_expression GT_TK shift_expression\n-|\trelational_expression LTE_TK shift_expression\n-|\trelational_expression GTE_TK shift_expression\n-|\trelational_expression INSTANCEOF_TK reference_type\n-;\n-\n-equality_expression:\n-\trelational_expression\n-|\tequality_expression EQ_TK relational_expression\n-|\tequality_expression NEQ_TK relational_expression\n-;\n-\n-and_expression:\n-\tequality_expression\n-|\tand_expression AND_TK equality_expression\n-;\n-\n-exclusive_or_expression:\n-\tand_expression\n-|\texclusive_or_expression XOR_TK and_expression\n-;\n-\n-inclusive_or_expression:\n-\texclusive_or_expression\n-|\tinclusive_or_expression OR_TK exclusive_or_expression\n-;\n-\n-conditional_and_expression:\n-\tinclusive_or_expression\n-|\tconditional_and_expression BOOL_AND_TK inclusive_or_expression\n-\t{ ++complexity; }\n-;\n-\n-conditional_or_expression:\n-\tconditional_and_expression\n-|\tconditional_or_expression BOOL_OR_TK conditional_and_expression\n-\t{ ++complexity; }\n-;\n-\n-conditional_expression:\t\t/* Error handling here is weak */\n-\tconditional_or_expression\n-|\tconditional_or_expression REL_QM_TK expression REL_CL_TK conditional_expression\n-\t{ ++complexity; }\n-;\n-\n-assignment_expression:\n-\tconditional_expression\n-|\tassignment\n-;\n-\n-assignment:\n-\tleft_hand_side assignment_operator assignment_expression\n-;\n-\n-left_hand_side:\n-\tname\n-\t\t{ USE_ABSORBER; }\n-|\tfield_access\n-|\tarray_access\n-;\n-\n-assignment_operator:\n-\tASSIGN_ANY_TK\n-|\tASSIGN_TK\n-;\n-\n-expression:\n-\tassignment_expression\n-;\n-\n-constant_expression:\n-\texpression\n-;\n-\n-%%\n-\f\n-/* Create a new parser context */\n-\n-void\n-java_push_parser_context (void)\n-{\n-  struct parser_ctxt *tmp = XCNEW (struct parser_ctxt);\n-\n-  tmp->next = ctxp;\n-  ctxp = tmp;\n-}  \n-\n-static void\n-push_class_context (const char *name)\n-{\n-  struct class_context *ctx;\n-\n-  ctx = XNEW (struct class_context);\n-  ctx->name = (char *) name;\n-  ctx->next = current_class_context;\n-  current_class_context = ctx;\n-}\n-\n-static void\n-pop_class_context (void)\n-{\n-  struct class_context *ctx;\n-\n-  if (current_class_context == NULL)\n-    return;\n-\n-  ctx = current_class_context->next;\n-  if (current_class_context->name != anonymous_context)\n-    free (current_class_context->name);\n-  free (current_class_context);\n-\n-  current_class_context = ctx;\n-  if (current_class_context == NULL)\n-    anonymous_count = 0;\n-}\n-\n-/* Recursively construct the class name.  This is just a helper\n-   function for get_class_name().  */\n-static int\n-make_class_name_recursive (struct obstack *stack, struct class_context *ctx)\n-{\n-  if (! ctx)\n-    return 0;\n-\n-  make_class_name_recursive (stack, ctx->next);\n-\n-  /* Replace an anonymous context with the appropriate counter value.  */\n-  if (ctx->name == anonymous_context)\n-    {\n-      char buf[50];\n-      ++anonymous_count;\n-      sprintf (buf, \"%d\", anonymous_count);\n-      ctx->name = xstrdup (buf);\n-    }\n-\n-  obstack_grow (stack, ctx->name, strlen (ctx->name));\n-  obstack_1grow (stack, '$');\n-\n-  return ISDIGIT (ctx->name[0]);\n-}\n-\n-/* Return a newly allocated string holding the name of the class.  */\n-static char *\n-get_class_name (void)\n-{\n-  char *result;\n-  int last_was_digit;\n-  struct obstack name_stack;\n-\n-  obstack_init (&name_stack);\n-\n-  /* Duplicate the logic of parse.y:maybe_make_nested_class_name().  */\n-  last_was_digit = make_class_name_recursive (&name_stack,\n-\t\t\t\t\t      current_class_context->next);\n-\n-  if (! last_was_digit\n-      && method_depth\n-      && current_class_context->name != anonymous_context)\n-    {\n-      char buf[50];\n-      ++anonymous_count;\n-      sprintf (buf, \"%d\", anonymous_count);\n-      obstack_grow (&name_stack, buf, strlen (buf));\n-      obstack_1grow (&name_stack, '$');\n-    }\n-\n-  if (current_class_context->name == anonymous_context)\n-    {\n-      char buf[50];\n-      ++anonymous_count;\n-      sprintf (buf, \"%d\", anonymous_count);\n-      current_class_context->name = xstrdup (buf);\n-      obstack_grow0 (&name_stack, buf, strlen (buf));\n-    }\n-  else\n-    obstack_grow0 (&name_stack, current_class_context->name,\n-\t\t   strlen (current_class_context->name));\n-\n-  result = xstrdup (obstack_finish (&name_stack));\n-  obstack_free (&name_stack, NULL);\n-\n-  return result;\n-}\n-\n-/* Actions defined here */\n-\n-static void\n-report_class_declaration (const char * name)\n-{\n-  extern int flag_dump_class, flag_list_filename;\n-\n-  push_class_context (name);\n-  if (flag_dump_class)\n-    {\n-      char *name = get_class_name ();\n-\n-      if (!previous_output)\n-\t{\n-\t  if (flag_list_filename)\n-\t    fprintf (out, \"%s: \", main_input_filename);\n-\t  previous_output = 1;\n-\t}\n-\n-      if (package_name)\n-\tfprintf (out, \"%s.%s \", package_name, name);\n-      else\n-\tfprintf (out, \"%s \", name);\n-\n-      free (name);\n-    }\n-}\n-\n-static void\n-report_main_declaration (struct method_declarator *declarator)\n-{\n-  extern int flag_find_main;\n-\n-  if (flag_find_main\n-      && modifier_value == 2\n-      && !strcmp (declarator->method_name, \"main\") \n-      && declarator->args \n-      && declarator->args [0] == '[' \n-      && (! strcmp (declarator->args+1, \"String\")\n-\t  || ! strcmp (declarator->args + 1, \"java.lang.String\"))\n-      && current_class_context)\n-    {\n-      if (!previous_output)\n-\t{\n-\t  char *name = get_class_name ();\n-\t  if (package_name)\n-\t    fprintf (out, \"%s.%s \", package_name, name);\n-\t  else\n-\t    fprintf (out, \"%s\", name);\n-\t  free (name);\n-\t  previous_output = 1;\n-\t}\n-    }\n-}\n-\n-void\n-report (void)\n-{\n-  extern int flag_complexity;\n-  if (flag_complexity)\n-    fprintf (out, \"%s %d\\n\", main_input_filename, complexity);\n-}\n-\n-/* Reset global status used by the report functions.  */\n-\n-void\n-reset_report (void)\n-{\n-  previous_output = 0;\n-  package_name = NULL;\n-  current_class_context = NULL;\n-  complexity = 0;\n-}\n-\n-void\n-yyerror (const char *msg ATTRIBUTE_UNUSED)\n-{\n-  fprintf (stderr, \"%s: %s\\n\", main_input_filename, msg);\n-  exit (1);\n-}\n-\n-#ifdef __XGETTEXT__\n-/* Depending on the version of Bison used to compile this grammar,\n-   it may issue generic diagnostics spelled \"syntax error\" or\n-   \"parse error\".  To prevent this from changing the translation\n-   template randomly, we list all the variants of this particular\n-   diagnostic here.  Translators: there is no fine distinction\n-   between diagnostics with \"syntax error\" in them, and diagnostics\n-   with \"parse error\" in them.  It's okay to give them both the same\n-   translation.  */\n-const char d1[] = N_(\"syntax error\");\n-const char d2[] = N_(\"parse error\");\n-const char d3[] = N_(\"syntax error; also virtual memory exhausted\");\n-const char d4[] = N_(\"parse error; also virtual memory exhausted\");\n-const char d5[] = N_(\"syntax error: cannot back up\");\n-const char d6[] = N_(\"parse error: cannot back up\");\n-#endif"}, {"sha": "74831714ddcfab10c01e0061131f349595a08db4", "filename": "gcc/java/parse.h", "status": "modified", "additions": 2, "deletions": 897, "changes": 899, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,6 +1,6 @@\n /* Language parser definitions for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+   2005, 2006, 2007 Free Software Foundation, Inc.\n    Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n \n This file is part of GCC.\n@@ -27,26 +27,10 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #ifndef GCC_JAVA_PARSE_H\n #define GCC_JAVA_PARSE_H\n \n-#include \"lex.h\"\n-\n /* Extern global variable declarations */\n-extern int java_error_count;\n extern struct obstack temporary_obstack;\n extern int quiet_flag;\n \n-#ifndef JC1_LITE\n-/* Function extern to java/ */\n-extern int int_fits_type_p (tree, tree);\n-extern tree stabilize_reference (tree);\n-#endif\n-\n-/* Macros for verbose debug info  */\n-#ifdef  VERBOSE_SKELETON\n-#define RULE( rule ) printf ( \"jv_yacc:%d: rule %s\\n\", lineno, rule )\n-#else\n-#define RULE( rule )\n-#endif\n-\n #ifdef VERBOSE_SKELETON\n #undef SOURCE_FRONTEND_DEBUG\n #define SOURCE_FRONTEND_DEBUG(X)\t\t\t\t\\\n@@ -55,144 +39,6 @@ extern tree stabilize_reference (tree);\n #define SOURCE_FRONTEND_DEBUG(X)\n #endif\n \n-/* Macro for error recovering  */\n-#ifdef YYDEBUG\n-#define RECOVERED     \t\t\t\t\t\\\n-  { if (!quiet_flag) {printf (\"** Recovered\\n\");} }\n-#define DRECOVERED(s) \t\t\t\t\t\t\\\n-  { if (!quiet_flag) {printf (\"** Recovered (%s)\\n\", #s);}}\n-#else\n-#define RECOVERED\n-#define DRECOVERED(s)\n-#endif\n-\n-#define DRECOVER(s) {yyerrok; DRECOVERED(s);}\n-#define RECOVER     {yyerrok; RECOVERED;}\n-\n-#define YYERROR_NOW ctxp->java_error_flag = 1\n-#define YYNOT_TWICE if (ctxp->prevent_ese != input_line)\n-\n-/* Accepted modifiers */\n-#define CLASS_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT|ACC_FINAL|ACC_STRICT\n-#define FIELD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_FINAL| \\\n-                        ACC_STATIC|ACC_TRANSIENT|ACC_VOLATILE\n-#define METHOD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_ABSTRACT| \\\n-\t\t\t ACC_STATIC|ACC_FINAL|ACC_SYNCHRONIZED|ACC_NATIVE| \\\n-\t\t\t ACC_STRICT\n-#define INTERFACE_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT|ACC_STRICT\n-#define INTERFACE_INNER_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_ABSTRACT| \\\n-\t\t\t\t  ACC_STATIC|ACC_PRIVATE\n-#define INTERFACE_METHOD_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT\n-#define INTERFACE_FIELD_MODIFIERS ACC_PUBLIC|ACC_STATIC|ACC_FINAL\n-\n-/* Getting a modifier WFL */\n-#define MODIFIER_WFL(M)   (ctxp->modifier_ctx [(M) - PUBLIC_TK])\n-\n-/* Check on modifiers */\n-#ifdef USE_MAPPED_LOCATION\n-#define THIS_MODIFIER_ONLY(f, m, v, count, l)\t\t\t\t\\\n-  if ((f) & (m))\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      tree node = MODIFIER_WFL (v);\t\t\t\t\t\\\n-      if (!l)\t\t\t\t\t\t\t\t\\\n-        l = node;\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  expanded_location lloc = expand_location (EXPR_LOCATION (l));\t\\\n-\t  expanded_location nloc = expand_location (EXPR_LOCATION (node)); \\\n-\t  if (nloc.column > lloc.column || nloc.line > lloc.line)\t\\\n-\t    l = node;\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      count++;\t\t\t\t\t\t\t\t\\\n-    }\n-#else\n-#define THIS_MODIFIER_ONLY(f, m, v, count, l)\t\t\t\t\\\n-  if ((f) & (m))\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      tree node = MODIFIER_WFL (v);\t\t\t\t\t\\\n-      if ((l)\t\t\t\t\t\t\t\t\\\n-\t  && ((EXPR_WFL_COLNO (node) > EXPR_WFL_COLNO (l))\t\t\\\n-\t      || (EXPR_WFL_LINENO (node) > EXPR_WFL_LINENO (l))))\t\\\n-        l = node;\t\t\t\t\t\t\t\\\n-      else if (!(l))\t\t\t\t\t\t\t\\\n-        l = node;\t\t\t\t\t\t\t\\\n-      count++;\t\t\t\t\t\t\t\t\\\n-    }\n-#endif\n-\n-#ifdef ATTRIBUTE_GCC_DIAG\n-extern void parse_error_context (tree cl, const char *gmsgid, ...) ATTRIBUTE_GCC_DIAG(2,3);\n-#endif\n-\n-#define ABSTRACT_CHECK(FLAG, V, CL, S)\t\t\t\t\\\n-  if ((FLAG) & (V))\t\t\t\t\t\t\\\n-    parse_error_context ((CL), \"%s method can't be abstract\", (S));\n-\n-#define JCONSTRUCTOR_CHECK(FLAG, V, CL, S)\t\t\t\\\n-  if ((FLAG) & (V))\t\t\t\t\t\t\\\n-    parse_error_context ((CL), \"Constructor can't be %s\", (S));\t\\\n-      \n-/* Misc. */\n-#define exit_java_complete_class()\t\t\\\n-  {\t\t\t\t\t\t\\\n-    return;\t\t\t\t\t\\\n-  }\n-\n-#define CLASS_OR_INTERFACE(decl, s1, s2)\t\t\t\\\n-   (decl ?\t\t\t\t\t\t\t\\\n-    ((get_access_flags_from_decl (TYPE_NAME (TREE_TYPE (decl)))\t\\\n-      & ACC_INTERFACE) ?\t\t\t\t\t\\\n-     s2 : s1) : ((s1 [0]=='S'|| s1 [0]=='s') ?\t\t\t\\\n-\t\t (s1 [0]=='S' ? \"Supertype\" : \"supertype\") :\t\\\n-\t\t (s1 [0] > 'A' ? \"Type\" : \"type\")))\n-\n-#define GET_REAL_TYPE(TYPE) \t\t\t\t\t\\\n-  (TREE_CODE (TYPE) == TREE_LIST ? TREE_PURPOSE (TYPE) : TYPE)\n-\n-/* Get TYPE name string, regardless whether TYPE is a class or an\n-   array. */\n-#define GET_TYPE_NAME(TYPE)\t\t\t\t\\\n-  (TREE_CODE (TYPE_NAME (TYPE)) == IDENTIFIER_NODE ?\t\\\n-   IDENTIFIER_POINTER (TYPE_NAME (TYPE)) :\t\t\\\n-   IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (TYPE))))\n-\n-/* Pedantic warning on obsolete modifiers. Note: when cl is NULL,\n-   flags was set artificially, such as for an interface method.  */\n-#define OBSOLETE_MODIFIER_WARNING(cl, flags, __modifier, arg)                \\\n-  {                                                                          \\\n-    if (flag_redundant && (cl) && ((flags) & (__modifier)))\t\t     \\\n-      parse_warning_context (cl,                                             \\\n-     \"Discouraged redundant use of %qs modifier in declaration of %s\",      \\\n-\t\t\t     java_accstring_lookup (__modifier), arg);       \\\n-  }\n-#define OBSOLETE_MODIFIER_WARNING2(cl, flags, __modifier, arg1, arg2)        \\\n-  {                                                                          \\\n-    if (flag_redundant && (cl) && ((flags) & (__modifier)))\t\t     \\\n-      parse_warning_context (cl,                                             \\\n-     \"Discouraged redundant use of %qs modifier in declaration of %s %qs\", \\\n-\t\t\t     java_accstring_lookup (__modifier), arg1, arg2);\\\n-  }\n-\n-/* Quickly build a temporary pointer on hypothetical type NAME. */\n-#define BUILD_PTR_FROM_NAME(ptr, name)\t\t\\\n-  do {\t\t\t\t\t\t\\\n-    ptr = make_node (POINTER_TYPE);\t\t\\\n-    TYPE_NAME (ptr) = name;\t\t\t\\\n-  } while (0)\n-\n-#define INCOMPLETE_TYPE_P(NODE)\t\t\t\t\\\n-  ((TREE_CODE (NODE) == POINTER_TYPE)\t\t\t\\\n-   && !TREE_TYPE (NODE) \t\t\t\t\\\n-   && TREE_CODE (TYPE_NAME (NODE)) == IDENTIFIER_NODE)\n-\n-#ifndef USE_MAPPED_LOCATION\n-/* Set the EMIT_LINE_NOTE flag of a EXPR_WLF to 1 if debug information\n-   are requested. Works in the context of a parser rule. */\n-#define JAVA_MAYBE_GENERATE_DEBUG_INFO(node)\t\t\\\n-  do {if (debug_info_level != DINFO_LEVEL_NONE)\t\\\n-      EXPR_WFL_EMIT_LINE_NOTE (node) = 1; } while (0)\n-#endif\n-\n /* Types classification, according to the JLS, section 4.2 */\n #define JFLOAT_TYPE_P(TYPE)      (TYPE && TREE_CODE ((TYPE)) == REAL_TYPE)\n #define JINTEGRAL_TYPE_P(TYPE)   ((TYPE) \t\t\t\t   \\\n@@ -204,765 +50,24 @@ extern void parse_error_context (tree cl, const char *gmsgid, ...) ATTRIBUTE_GCC\n \t\t\t\t  && (JNUMERIC_TYPE_P ((TYPE))\t\t  \\\n \t\t\t\t  || TREE_CODE ((TYPE)) == BOOLEAN_TYPE))\n \n-#define JBSC_TYPE_P(TYPE) ((TYPE) && (((TYPE) == byte_type_node)\t\\\n-\t\t\t\t      || ((TYPE) == short_type_node)\t\\\n-\t\t\t\t      || ((TYPE) == char_type_node)))\n-\n /* Not defined in the LRM */\n #define JSTRING_TYPE_P(TYPE) ((TYPE) \t\t\t\t\t   \\\n \t\t\t      && ((TYPE) == string_type_node ||\t\t   \\\n \t\t\t\t  (TREE_CODE (TYPE) == POINTER_TYPE &&\t   \\\n \t\t\t\t   TREE_TYPE (TYPE) == string_type_node)))\n-#define JSTRING_P(NODE) ((NODE)\t\t\t\t\t\t\\\n-\t\t\t && (TREE_CODE (NODE) == STRING_CST\t\t\\\n-\t\t\t     || IS_CRAFTED_STRING_BUFFER_P (NODE)\t\\\n-\t\t\t     || JSTRING_TYPE_P (TREE_TYPE (NODE))))\n-\n #define JREFERENCE_TYPE_P(TYPE) ((TYPE)\t\t\t\t\t      \\\n \t\t\t\t && (TREE_CODE (TYPE) == RECORD_TYPE \t      \\\n \t\t\t\t     ||\t(TREE_CODE (TYPE) == POINTER_TYPE     \\\n \t\t\t\t\t &&  TREE_CODE (TREE_TYPE (TYPE)) ==  \\\n \t\t\t\t\t RECORD_TYPE)))\n-#define JNULLP_TYPE_P(TYPE) ((TYPE) && (TREE_CODE (TYPE) == POINTER_TYPE) \\\n-\t\t\t     && (TYPE) == TREE_TYPE (null_pointer_node))\n-\n-/* Other predicates */\n-#define JDECL_P(NODE) (NODE && (TREE_CODE (NODE) == PARM_DECL\t\t\\\n-\t\t\t\t|| TREE_CODE (NODE) == VAR_DECL\t\t\\\n-\t\t\t\t|| TREE_CODE (NODE) == FIELD_DECL))\n-\n-#define TYPE_INTERFACE_P(TYPE) \t\t\t\t\t\\\n-  (CLASS_P (TYPE) && CLASS_INTERFACE (TYPE_NAME (TYPE)))\n-\n-#define TYPE_CLASS_P(TYPE) (CLASS_P (TYPE) \t\t\t\t\\\n-\t\t\t    && !CLASS_INTERFACE (TYPE_NAME (TYPE)))\n-\n-/* Identifier business related to 1.1 language extensions.  */\n-\n-#define IDENTIFIER_INNER_CLASS_OUTER_FIELD_ACCESS(NODE)\t\\\n-  (TREE_CODE (NODE) == IDENTIFIER_NODE &&\t\t\\\n-   IDENTIFIER_LENGTH (NODE) >= 8 &&\t\t\t\\\n-   IDENTIFIER_POINTER (NODE)[7] != '0')\n-\n-/* Build the string val$<O> and store it into N. The is used to\n-   construct the name of inner class hidden fields used to alias outer\n-   scope local variables.  */\n-#define MANGLE_OUTER_LOCAL_VARIABLE_NAME(N, O)\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    char *mangled_name;\t\t\t\t\t\t\t\\\n-    obstack_grow (&temporary_obstack, \"val$\", 4);\t\t\t\\\n-    obstack_grow (&temporary_obstack,\t\t\t\t\t\\\n-\t\t  IDENTIFIER_POINTER ((O)), IDENTIFIER_LENGTH ((O)));\t\\\n-    obstack_1grow (&temporary_obstack, '\\0');\t\t\t\t\\\n-    mangled_name = obstack_finish (&temporary_obstack);\t\t\t\\\n-    (N) = get_identifier (mangled_name);\t\t\t\t\\\n-    obstack_free (&temporary_obstack, mangled_name);\t\t\t\\\n-  }\n-\n-/* Build the string parm$<O> and store in into the identifier N. This\n-   is used to construct the name of hidden parameters used to\n-   initialize outer scope aliases.  */\n-#define MANGLE_ALIAS_INITIALIZER_PARAMETER_NAME_ID(N, O)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    char *mangled_name;\t\t\t\t\t\t\t\\\n-    obstack_grow (&temporary_obstack, \"parm$\", 5);\t\t\t\\\n-    obstack_grow (&temporary_obstack, \t\t\t\t\t\\\n-\t\t  IDENTIFIER_POINTER ((O)), IDENTIFIER_LENGTH ((O)));\t\\\n-    obstack_1grow (&temporary_obstack, '\\0');\t\t\t\t\\\n-    mangled_name = obstack_finish (&temporary_obstack);\t\t\t\\\n-    (N) = get_identifier (mangled_name);\t\t\t\t\\\n-    obstack_free (&temporary_obstack, mangled_name);\t\t\t\\\n-  }\n-\n-#define MANGLE_ALIAS_INITIALIZER_PARAMETER_NAME_STR(N, S)\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    char *mangled_name;\t\t\t\t\t\t\t\\\n-    obstack_grow (&temporary_obstack, \"parm$\", 5);\t\t\\\n-    obstack_grow (&temporary_obstack, (S), strlen ((S)));\t\\\n-    obstack_1grow (&temporary_obstack, '\\0');\t\t\t\\\n-    mangled_name = obstack_finish (&temporary_obstack);\t\t\t\\\n-    (N) = get_identifier (mangled_name);\t\t\t\t\\\n-    obstack_free (&temporary_obstack, mangled_name);\t\t\t\\\n-  }\n-\n-/* Skip THIS and artificial parameters found in function decl M and\n-   assign the result to C. We don't do that for $finit$, since it's\n-   knowingly called with artificial parms.  */\n-#define SKIP_THIS_AND_ARTIFICIAL_PARMS(C,M)\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    int i;\t\t\t\t\t\t\t\\\n-    (C) = TYPE_ARG_TYPES (TREE_TYPE ((M)));\t\t\t\\\n-    if (!METHOD_STATIC ((M)))\t\t\t\t\t\\\n-      (C) = TREE_CHAIN (C);\t\t\t\t\t\\\n-    if (DECL_CONSTRUCTOR_P ((M))\t\t\t\t\\\n-        && PURE_INNER_CLASS_TYPE_P (DECL_CONTEXT ((M))))\t\\\n-      (C) = TREE_CHAIN (C);\t\t\t\t\t\\\n-    if (!DECL_FINIT_P ((M)))\t\t\t\t\t\\\n-      for (i = DECL_FUNCTION_NAP ((M)); i; i--)\t\t\t\\\n-       (C) = TREE_CHAIN (C);\t\t\t\t\t\\\n-  }\n-\n-/* Mark final parameters in method M, by comparison of the argument\n-   list L. This macro is used to set the flag once the method has been\n-   build.  */\n-#define MARK_FINAL_PARMS(M, L)\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    tree current = TYPE_ARG_TYPES (TREE_TYPE ((M)));\t\t\t\\\n-    tree list = (L);\t\t\t\t\t\t\t\\\n-    if (!METHOD_STATIC ((M)))\t\t\t\t\t\t\\\n-      current = TREE_CHAIN (current);\t\t\t\t\t\\\n-    for (; current !=  end_params_node;\t\t\t\t\t\\\n-\t current = TREE_CHAIN (current), list = TREE_CHAIN (list))\t\\\n-      ARG_FINAL_P (current) = ARG_FINAL_P (list);\t\t\t\\\n-    if (current != list)\t\t\t\t\t\t\\\n-      abort ();\t\t\t\t\t\t\t\t\\\n-  }\n-\n-/* Reset the ARG_FINAL_P that might have been set in method M args.  */\n-#define UNMARK_FINAL_PARMS(M)\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    tree current;\t\t\t\t\t\t\t\\\n-    for (current = TYPE_ARG_TYPES (TREE_TYPE ((M))); \t\t\t\\\n-\t current != end_params_node; current = TREE_CHAIN (current))\t\\\n-      ARG_FINAL_P (current) = 0;\t\t\t\t\t\\\n-  }\n-\n-/* Reverse a crafted parameter list as required.  */\n-#define CRAFTED_PARAM_LIST_FIXUP(P)\t\t\\\n-  {\t\t\t\t\t\t\\\n-    if ((P))\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-\ttree last = (P);\t\t\t\\\n-\t(P) = nreverse (P);\t\t\t\\\n-\tTREE_CHAIN (last) = end_params_node;\t\\\n-      }\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\\\n-      (P) = end_params_node;\t\t\t\\\n-  }\n-\n-/* Modes governing the creation of a alias initializer parameter\n-   lists. AIPL stands for Alias Initializer Parameter List.  */\n-enum {\n-  AIPL_FUNCTION_CREATION,\t  /* Suitable for artificial method creation */\n-  AIPL_FUNCTION_DECLARATION,\t  /* Suitable for declared methods */\n-  AIPL_FUNCTION_CTOR_INVOCATION,  /* Invocation of constructors */\n-  AIPL_FUNCTION_FINIT_INVOCATION  /* Invocation of $finit$ */\n-};\n-\n-/* Standard error messages */\n-#define ERROR_CANT_CONVERT_TO_BOOLEAN(OPERATOR, NODE, TYPE)\t\t\\\n-  parse_error_context ((OPERATOR),\t\t\t\t\t\\\n-    \"Incompatible type for %qs. Can't convert %qs to boolean\",\t\\\n-    operator_string ((NODE)), lang_printable_name ((TYPE),0))\n-\n-#define ERROR_CANT_CONVERT_TO_NUMERIC(OPERATOR, NODE, TYPE)\t\t\\\n-  parse_error_context ((OPERATOR),\t\t\t\t\t\\\n-      \"Incompatible type for %qs. Can't convert %qs to numeric type\",\t\\\n-      operator_string ((NODE)), lang_printable_name ((TYPE), 0))\n-\n-#define ERROR_CAST_NEEDED_TO_INTEGRAL(OPERATOR, NODE, TYPE)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  tree _operator = (OPERATOR), _node = (NODE), _type = (TYPE);\t\t\\\n-  if (JPRIMITIVE_TYPE_P (_type))\t\t\t\t\t\\\n-    parse_error_context (_operator,\t\t\t\t\t\\\n-\"Incompatible type for %qs. Explicit cast needed to convert %qs to integral\",\\\n-\t\t\t operator_string(_node),\t\t\t\\\n-\t\t\t lang_printable_name (_type, 0));\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    parse_error_context (_operator,\t\t\t\t\t\\\n-      \"Incompatible type for %qs. Can't convert %qs to integral\",\t\\\n-\t\t\t operator_string(_node),\t\t\t\\\n-\t\t\t lang_printable_name (_type, 0));\t\t\\\n-} while (0)\n-\n-#define ERROR_VARIABLE_NOT_INITIALIZED(WFL, V)\t\t\t\\\n-  parse_error_context\t\t\t\t\t\t\\\n-    ((WFL), \"Variable %qs may not have been initialized\",\t\\\n-     IDENTIFIER_POINTER (V))\n-\n-/* Definition for loop handling. This is Java's own definition of a\n-   loop body. See parse.y for documentation. It's valid once you hold\n-   a loop's body (LOOP_EXPR_BODY) */\n-\n-/* The loop main block is the one hold the condition and the loop body */\n-#define LOOP_EXPR_BODY_MAIN_BLOCK(NODE) TREE_OPERAND (NODE, 0)\n-/* And then there is the loop update block */\n-#define LOOP_EXPR_BODY_UPDATE_BLOCK(NODE) TREE_OPERAND (NODE, 1)\n-\n-/* Inside the loop main block, there is the loop condition and the\n-   loop body. They may be reversed if the loop being described is a\n-   do-while loop. NOTE: if you use a WFL around the EXIT_EXPR so you\n-   can issue debug info for it, the EXIT_EXPR will be one operand\n-   further. */\n-#define LOOP_EXPR_BODY_CONDITION_EXPR(NODE, R) \t\t\t\\\n-  TREE_OPERAND (LOOP_EXPR_BODY_MAIN_BLOCK (NODE), (R ? 1 : 0))\n-\n-/* Here is the labeled block the loop real body is encapsulated in */\n-#define LOOP_EXPR_BODY_LABELED_BODY(NODE, R)\t\t\t\\\n-  TREE_OPERAND (LOOP_EXPR_BODY_MAIN_BLOCK (NODE), (R ? 0 : 1))\n-/* And here is the loop's real body */\n-#define LOOP_EXPR_BODY_BODY_EXPR(NODE, R)\t\t\t\\\n-  LABELED_BLOCK_BODY (LOOP_EXPR_BODY_LABELED_BODY(NODE, R))\n-\n-#define PUSH_LABELED_BLOCK(B)\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\\\n-    TREE_CHAIN (B) = ctxp->current_labeled_block;\t\\\n-    ctxp->current_labeled_block = (B);\t\t\t\\\n-  }\n-#define POP_LABELED_BLOCK() \t\t\t\t\t\t\\\n-  ctxp->current_labeled_block = TREE_CHAIN (ctxp->current_labeled_block)\n-\n-#define PUSH_LOOP(L)\t\t\t\t\\\n-  {\t\t\t\t\t\t\\\n-    TREE_CHAIN (L) = ctxp->current_loop;\t\\\n-    ctxp->current_loop = (L);\t\t\t\\\n-  }\n-#define POP_LOOP() ctxp->current_loop = TREE_CHAIN (ctxp->current_loop)\n-\n-#define PUSH_EXCEPTIONS(E)\t\t\t\t\t\\\n-  currently_caught_type_list =\t\t\t\t\t\\\n-    tree_cons (NULL_TREE, (E), currently_caught_type_list);\n-\n-#define POP_EXCEPTIONS()\t\t\t\t\t\t\\\n-  currently_caught_type_list = TREE_CHAIN (currently_caught_type_list)\n-\n-/* Check that we're inside a try block.  */\n-#define IN_TRY_BLOCK_P()\t\t\t\t\\\n-  (currently_caught_type_list \t\t\t\t\\\n-   && ((TREE_VALUE (currently_caught_type_list) !=\t\\\n-\tDECL_FUNCTION_THROWS (current_function_decl))\t\\\n-       || TREE_CHAIN (currently_caught_type_list)))\n-\n-/* Check that we have exceptions in E.  */\n-#define EXCEPTIONS_P(E) ((E) ? TREE_VALUE (E) : NULL_TREE)\n-\n-/* Anonymous array access */\n-#define ANONYMOUS_ARRAY_BASE_TYPE(N)   TREE_OPERAND ((N), 0)\n-#define ANONYMOUS_ARRAY_DIMS_SIG(N)    TREE_OPERAND ((N), 1)\n-#define ANONYMOUS_ARRAY_INITIALIZER(N) TREE_OPERAND ((N), 2)\n-\n-/* Invocation modes, as returned by invocation_mode (). */\n-enum {\n-  INVOKE_STATIC,\n-  INVOKE_NONVIRTUAL,\n-  INVOKE_SUPER,\n-  INVOKE_INTERFACE,\n-  INVOKE_VIRTUAL\n-};\n-\n-/* Unresolved type identifiers handling. When we process the source\n-   code, we blindly accept an unknown type identifier and try to\n-   resolve it later. When an unknown type identifier is encountered\n-   and used, we record in a struct jdep element what the incomplete\n-   type is and what it should patch. Later, java_complete_class will\n-   process all classes known to have unresolved type\n-   dependencies. Within each of these classes, this routine will\n-   process unresolved type dependencies (JDEP_TO_RESOLVE), patch what\n-   needs to be patched in the dependent tree node (JDEP_GET_PATCH,\n-   JDEP_APPLY_PATCH) and perform other actions dictated by the context\n-   of the patch (JDEP_KIND). The ideas are: we patch only what needs\n-   to be patched, and with java_complete_class called at the right\n-   time, we will start processing incomplete function bodies tree\n-   nodes with everything external to function's bodies already\n-   completed, it makes things much simpler. */\n-\n-enum jdep_code {\n-  JDEP_NO_PATCH,\t\t/* Must be first */\n-  JDEP_SUPER,\t\t\t/* Patch the type of one type\n-\t\t\t\t   supertype. Requires some check\n-\t\t\t\t   before it's done */\n-  JDEP_FIELD,\t\t\t/* Patch the type of a class field */\n-\n-  /* JDEP_{METHOD,METHOD_RETURN,METHOD_END} to be kept in order */\n-  JDEP_METHOD,\t\t\t/* Mark the beginning of the patching\n-\t\t\t\t   of a method declaration, including\n-\t\t\t\t   it's arguments */\n-  JDEP_METHOD_RETURN,\t\t/* Mark the beginning of the patching\n-\t\t\t\t   of a method declaration. Arguments\n-\t\t\t\t   aren't patched, only the returned\n-\t\t\t\t   type is */\n-  JDEP_METHOD_END,\t\t/* Mark the end of the patching of a\n-\t\t\t\t   method declaration. It indicates\n-\t\t\t\t   that it's time to compute and\n-\t\t\t\t   install a new signature */\n-\n-  JDEP_INTERFACE,\t\t/* Patch the type of a Class/interface\n-\t\t\t\t   extension */\n-  JDEP_VARIABLE,\t\t/* Patch the type of a variable declaration */\n-  JDEP_PARM,\t\t\t/* Patch the type of a parm declaration */\n-  JDEP_TYPE,\t\t\t/* Patch a random tree node type,\n-                                   without the need for any specific\n-                                   actions */\n-  JDEP_EXCEPTION,\t\t/* Patch exceptions specified by `throws' */\n-  JDEP_ANONYMOUS\t\t/* Patch anonymous classes\n-\t\t\t\t   (implementation or extension.) */\n-\n-};\n-\n-typedef struct _jdep {\n-  ENUM_BITFIELD(jdep_code) kind : 8; /* Type of patch */\n \n-  unsigned int  flag0 : 1;\t/* Some flags */\n-  tree decl;\t\t\t/* Tied decl/or WFL */\n-  tree solv;\t\t\t/* What to solve */\n-  tree wfl;\t\t\t/* Where thing to resolve where found */\n-  tree misc;\t\t\t/* Miscellaneous info (optional). */\n-  tree enclosing;\t\t/* The enclosing (current) class */\n-  tree *patch;\t\t\t/* Address of a location to patch */\n-  struct _jdep *next;\t\t/* Linked list */\n-} jdep;\n-\n-\n-#define JDEP_DECL(J)          ((J)->decl)\n-#define JDEP_DECL_WFL(J)      ((J)->decl)\n-#define JDEP_KIND(J)          ((J)->kind)\n-#define JDEP_WFL(J)           ((J)->wfl)\n-#define JDEP_MISC(J)          ((J)->misc)\n-#define JDEP_ENCLOSING(J)     ((J)->enclosing)\n-#define JDEP_CLASS(J)         ((J)->class)\n-#define JDEP_APPLY_PATCH(J,P) (*(J)->patch = (P))\n-#define JDEP_GET_PATCH(J)     ((J)->patch)\n-#define JDEP_CHAIN(J)         ((J)->next)\n-#define JDEP_TO_RESOLVE(J)    ((J)->solv)\n-#define JDEP_RESOLVED_DECL(J) ((J)->solv)\n-#define JDEP_RESOLVED(J, D)   ((J)->solv = D)\n-#define JDEP_RESOLVED_P(J)    \\\n-\t(!(J)->solv || TREE_CODE ((J)->solv) != POINTER_TYPE)\n-\n-struct jdeplist_s {\n-  jdep *first;\n-  jdep *last;\n-  struct jdeplist_s *next;\n-};\n-typedef struct jdeplist_s jdeplist;\n-\n-#define CLASSD_FIRST(CD) ((CD)->first)\n-#define CLASSD_LAST(CD)  ((CD)->last)\n-#define CLASSD_CHAIN(CD) ((CD)->next)\n-\n-#define JDEP_INSERT(L,J)\t\t\t\\\n-  {\t\t\t\t\t\t\\\n-    if (!(L)->first)\t\t\t\t\\\n-      (L)->last = (L)->first = (J);\t\t\\\n-    else\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-\tJDEP_CHAIN ((L)->last) = (J);\t\t\\\n-\t(L)->last = (J);\t\t\t\\\n-      }\t\t\t\t\t\t\\\n-  }\n-\n-/* if TYPE can't be resolved, obtain something suitable for its\n-   resolution (TYPE is saved in SAVE before being changed). and set\n-   CHAIN to 1. Otherwise, type is set to something usable. CHAIN is\n-   usually used to determine that a new DEP must be installed on TYPE.\n-   Note that when compiling java.lang.Object, references to Object are\n-   java.lang.Object.  */\n-#define SET_TYPE_FOR_RESOLUTION(TYPE, SAVE, CHAIN)\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    tree _returned_type;\t\t\t\t\t\t\\\n-    (CHAIN) = 0;\t\t\t\t\t\t\t\\\n-    if (TREE_TYPE (GET_CPC ()) == object_type_node\t\t\t\\\n-\t&& TREE_CODE (TYPE) == EXPR_WITH_FILE_LOCATION\t\t\t\\\n-\t&& EXPR_WFL_NODE (TYPE) == unqualified_object_id_node)\t\t\\\n-      (TYPE) = object_type_node;\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tif (unresolved_type_p (type, &_returned_type))\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    if (_returned_type)\t\t\t\t\t\t\\\n-\t      (TYPE) = _returned_type;\t\t\t\t\t\\\n-\t    else\t\t\t\t\t\t\t\\\n-\t      {\t\t\t\t\t\t\t\t\\\n-\t        tree _type;\t\t\t\t\t\t\\\n-                WFL_STRIP_BRACKET (_type, TYPE);\t\t\t\\\n-\t\t(SAVE) = (_type);\t\t\t\t\t\\\n-\t\t(TYPE) = obtain_incomplete_type (TYPE);\t\t\t\\\n-\t\tCHAIN = 1;\t\t\t\t\t\t\\\n-\t      }\t\t\t\t\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n-\n-#define WFL_STRIP_BRACKET(TARGET, TYPE)\t\t\t\t\t  \\\n-{\t\t\t\t\t\t\t\t\t  \\\n-  tree __type = (TYPE);\t\t\t\t\t\t\t  \\\n-  if (TYPE && TREE_CODE (TYPE) == EXPR_WITH_FILE_LOCATION)\t\t  \\\n-    {\t\t\t\t\t\t\t\t\t  \\\n-      tree _node;\t\t\t\t\t\t\t  \\\n-      if (build_type_name_from_array_name (EXPR_WFL_NODE (TYPE), &_node)) \\\n-        {\t\t\t\t\t\t\t\t  \\\n-          tree _new = copy_node (TYPE);\t\t\t\t\t  \\\n-          EXPR_WFL_NODE (_new) = _node;\t\t\t\t  \t  \\\n-          __type = _new;\t\t\t\t\t\t  \\\n-        }\t\t\t\t\t\t\t\t  \\\n-    }\t\t\t\t\t\t\t\t\t  \\\n-  (TARGET) = __type;\t\t\t\t\t\t\t  \\\n-}\n-\n-/* If NAME contains one or more trailing []s, NAMELEN will be the\n-   adjusted to be the index of the last non bracket character in\n-   NAME. ARRAY_DIMS will contain the number of []s found.  */\n-\n-#define STRING_STRIP_BRACKETS(NAME, NAMELEN, ARRAY_DIMS)                  \\\n-{\t\t\t\t\t\t\t\t\t  \\\n-  ARRAY_DIMS = 0;\t\t\t\t\t\t\t  \\\n-  while (NAMELEN >= 2 && (NAME)[NAMELEN - 1] == ']')\t\t\t  \\\n-    {\t\t\t\t\t\t\t\t\t  \\\n-      NAMELEN -= 2;\t\t\t\t\t\t\t  \\\n-      (ARRAY_DIMS)++;\t\t\t\t\t\t\t  \\\n-    }\t\t\t\t\t\t\t\t\t  \\\n-}\n-\n-/* Promote a type if it won't be registered as a patch */\n-#define PROMOTE_RECORD_IF_COMPLETE(TYPE, IS_INCOMPLETE)\t\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    if (!(IS_INCOMPLETE) && TREE_CODE (TYPE) == RECORD_TYPE)\t\\\n-      (TYPE) = promote_type (TYPE);\t\t\t\t\\\n-  }\n-\n-/* Insert a DECL in the current block */\n-#define BLOCK_CHAIN_DECL(NODE)\t\t\t\t\t\t    \\\n-  {\t\t \t\t\t\t\t\t\t    \\\n-    TREE_CHAIN ((NODE)) = \t\t\t\t\t\t    \\\n-      BLOCK_EXPR_DECLS (GET_CURRENT_BLOCK (current_function_decl));         \\\n-    BLOCK_EXPR_DECLS (GET_CURRENT_BLOCK (current_function_decl)) = (NODE);  \\\n-  }\n-\n-/* Return the current block, either found in the body of the currently\n-   declared function or in the current static block being defined. */\n-#define GET_CURRENT_BLOCK(F) ((F) ? DECL_FUNCTION_BODY ((F)) :\t\\\n-\t\t\t     current_static_block)\n-\n-#ifndef USE_MAPPED_LOCATION\n-/* Retrieve line/column from a WFL. */\n-#define EXPR_WFL_GET_LINECOL(V,LINE,COL)\t\\\n-  {\t\t\t\t\t\t\\\n-     (LINE) = (V) >> 12;\t\t\t\\\n-     (COL) = (V) & 0xfff;\t\t\t\\\n-   }\n-#endif\n-\n-#define EXPR_WFL_QUALIFICATION(WFL) TREE_OPERAND ((WFL), 1)\n-#define QUAL_WFL(NODE) TREE_PURPOSE (NODE)\n-#define QUAL_RESOLUTION(NODE) TREE_VALUE (NODE)\n-#define QUAL_DECL_TYPE(NODE) GET_SKIP_TYPE (NODE)\n-\n-#define GET_SKIP_TYPE(NODE)\t\t\t\t\\\n-  (TREE_CODE (TREE_TYPE (NODE)) == POINTER_TYPE ?\t\\\n-   TREE_TYPE (TREE_TYPE (NODE)): TREE_TYPE (NODE))\n-\n-/* Handy macros for the walk operation */\n-#define COMPLETE_CHECK_OP(NODE, N)\t\t\t\\\n-{\t\t\t\t\t\t\t\\\n-  TREE_OPERAND ((NODE), (N)) = \t\t\t\t\\\n-    java_complete_tree (TREE_OPERAND ((NODE), (N)));\t\\\n-  if (TREE_OPERAND ((NODE), (N)) == error_mark_node)\t\\\n-    return error_mark_node;\t\t\t\t\\\n-}\n-#define COMPLETE_CHECK_OP_0(NODE) COMPLETE_CHECK_OP(NODE, 0)\n-#define COMPLETE_CHECK_OP_1(NODE) COMPLETE_CHECK_OP(NODE, 1)\n-#define COMPLETE_CHECK_OP_2(NODE) COMPLETE_CHECK_OP(NODE, 2)\n-\n-/* Building invocations: append(ARG) and StringBuffer(ARG) */\n-#define BUILD_APPEND(ARG)\t\t\t\t\t\t      \\\n-  ((JSTRING_TYPE_P (TREE_TYPE (ARG)) || JPRIMITIVE_TYPE_P (TREE_TYPE (ARG)))  \\\n-   ? build_method_invocation (wfl_append,                                     \\\n-\t\t\t      ARG ? build_tree_list (NULL, (ARG)) : NULL_TREE)\\\n-   : build_method_invocation (wfl_append,                                     \\\n-\t\t\t      ARG ? build_tree_list (NULL,                    \\\n-\t\t\t\t\t\t     build1 (CONVERT_EXPR,    \\\n-\t\t\t\t\t\t\t     object_type_node,\\\n-\t\t\t\t\t\t\t     (ARG)))          \\\n-\t\t\t      : NULL_TREE))\n-#define BUILD_STRING_BUFFER(ARG)\t\t\t\t\t      \\\n-  build_new_invocation (wfl_string_buffer, \t\t\t\t      \\\n-\t\t\t(ARG ? build_tree_list (NULL, (ARG)) : NULL_TREE))\n-\n-#define BUILD_THROW(WHERE, WHAT)\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    (WHERE) = \t\t\t\t\t\t\t\\\n-      build3 (CALL_EXPR, void_type_node,\t\t\t\\\n-\t      build_address_of (throw_node),\t\t\t\\\n-\t      build_tree_list (NULL_TREE, (WHAT)), NULL_TREE);\t\\\n-    TREE_SIDE_EFFECTS ((WHERE)) = 1;\t\t\t\t\\\n-  }\n-\n-/* Set wfl_operator for the most accurate error location */\n-#ifdef USE_MAPPED_LOCATION\n-#define SET_WFL_OPERATOR(WHICH, NODE, WFL)\t\t\\\n-  SET_EXPR_LOCATION (WHICH,\t\t\t\t\\\n-    (TREE_CODE (WFL) == EXPR_WITH_FILE_LOCATION ?\t\\\n-     EXPR_LOCATION (WFL) : EXPR_LOCATION (NODE)))\n-#else\n-#define SET_WFL_OPERATOR(WHICH, NODE, WFL)\t\t\\\n-  EXPR_WFL_LINECOL (WHICH) =\t\t\t\t\\\n-    (TREE_CODE (WFL) == EXPR_WITH_FILE_LOCATION ?\t\\\n-     EXPR_WFL_LINECOL (WFL) : EXPR_WFL_LINECOL (NODE))\n-#endif\n-\n-#define PATCH_METHOD_RETURN_ERROR()\t\t\\\n-  {\t\t\t\t\t\t\\\n-    if (ret_decl)\t\t\t\t\\\n-      *ret_decl = NULL_TREE;\t\t\t\\\n-    return error_mark_node;\t\t\t\\\n-  }\n-\n-/* Convenient macro to check. Assumes that CLASS is a CLASS_DECL.  */\n-#define CHECK_METHODS(CLASS)\t\t\t\\\n-  {\t\t\t\t\t\t\\\n-    if (CLASS_INTERFACE ((CLASS)))\t\t\\\n-      java_check_abstract_methods ((CLASS));\t\\\n-    else\t\t\t\t\t\\\n-      java_check_regular_methods ((CLASS));\t\\\n-  }\n-\n-#define CLEAR_DEPRECATED  ctxp->deprecated = 0\n-\n-#define CHECK_DEPRECATED_NO_RESET(DECL)\t\t\\\n-  {\t\t\t\t\t\t\\\n-    if (ctxp->deprecated)\t\t\t\\\n-      DECL_DEPRECATED (DECL) = 1;\t\t\\\n-  }\n-\n-/* Using and reseting the @deprecated tag flag */\n-#define CHECK_DEPRECATED(DECL)\t\t\t\\\n-  {\t\t\t\t\t\t\\\n-    if (ctxp->deprecated)\t\t\t\\\n-      DECL_DEPRECATED (DECL) = 1;\t\t\\\n-    ctxp->deprecated = 0;\t\t\t\\\n-  }\n-\n-/* Register an import */\n-#define REGISTER_IMPORT(WHOLE, NAME)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P ((NAME)) = 1;\t\t\t\\\n-  ctxp->import_list = tree_cons ((WHOLE), (NAME), ctxp->import_list);\t\\\n-}\n-\n-/* Macro to access the osb (opening square bracket) count */\n-#define CURRENT_OSB(C) (C)->osb_number [(C)->osb_depth]\n-\n-/* Parser context data structure. */\n-struct parser_ctxt GTY(()) {\n-  const char *filename;\t\t     /* Current filename */\n-  location_t file_start_location;\n-  location_t save_location;\n-  struct parser_ctxt *next;\n-\n-  java_lexer * GTY((skip)) lexer; /* Current lexer state */\n-  char marker_begining;\t\t     /* Marker. Should be a sub-struct */\n-  int ccb_indent;\t\t     /* Number of unmatched { seen. */\n-  /* The next two fields are only source_location if USE_MAPPED_LOCATION.\n-     Otherwise, they are integer line number, but we can't have #ifdefs\n-     in GTY structures. */\n-  source_location first_ccb_indent1; /* First { at ident level 1 */\n-  source_location last_ccb_indent1;  /* Last } at ident level 1 */\n-  int parser_ccb_indent;\t     /* Keep track of {} indent, parser */\n-  int osb_depth;\t\t     /* Current depth of [ in an expression */\n-  int osb_limit;\t\t     /* Limit of this depth */\n-  int * GTY ((skip)) osb_number; /* Keep track of ['s */\n-  char marker_end;\t\t     /* End marker. Should be a sub-struct */\n-\n-  /* The flags section */\n-\n-  /* Indicates a context used for saving the parser status. The\n-     context must be popped when the status is restored. */\n-  unsigned saved_data_ctx:1;\t\n-  /* Indicates that a context already contains saved data and that the\n-     next save operation will require a new context to be created. */\n-  unsigned saved_data:1;\n-  /* Report error when true */\n-  unsigned java_error_flag:1;\n-  /* @deprecated tag seen */\n-  unsigned deprecated:1;\n-  /* Flag to report certain errors (fix this documentation. FIXME) */\n-  unsigned class_err:1;\n-\n-  /* This section is used only if we compile jc1 */\n-  tree modifier_ctx [12];\t    /* WFL of modifiers */\n-  tree class_type;\t\t    /* Current class */\n-  tree function_decl;\t            /* Current function decl, save/restore */\n-\n-  int prevent_ese;\t            /* Prevent expression statement error */\n-\n-  int formal_parameter_number;\t    /* Number of parameters found */\n-  int interface_number;\t\t    /* # itfs declared to extend an itf def */\n-\n-  tree package;\t\t\t    /* Defined package ID */\n-\n-  /* These two lists won't survive file traversal */\n-  tree  class_list;\t\t    /* List of classes in a CU */\n-  jdeplist * GTY((skip)) classd_list; /* Classe dependencies in a CU */\n-  \n-  tree  current_parsed_class;\t    /* Class currently parsed */\n-  tree  current_parsed_class_un;    /* Curr. parsed class unqualified name */\n-\n-  tree non_static_initialized;\t    /* List of non static initialized fields */\n-  tree static_initialized;\t    /* List of static non final initialized */\n-  tree instance_initializers;\t    /* List of instance initializers stmts */\n-\n-  tree import_list;\t\t    /* List of import */\n-  tree import_demand_list;\t    /* List of import on demand */\n-\n-  tree current_loop;\t\t    /* List of the currently nested \n-\t\t\t\t       loops/switches */\n-  tree current_labeled_block;\t    /* List of currently nested\n-\t\t\t\t       labeled blocks. */\n-\n-  int pending_block;\t\t    /* Pending block to close */\n-\n-  int explicit_constructor_p;\t    /* >0 when processing an explicit\n-\t\t\t\t       constructor. This flag is used to trap\n-\t\t\t\t       illegal argument usage during an\n-\t\t\t\t       explicit constructor invocation. */\n-};\n-\n-/* A set of macros to push/pop/access the currently parsed class.  */\n-#define GET_CPC_LIST()     ctxp->current_parsed_class\n-\n-/* Currently class being parsed is an inner class if an enclosing\n-   class has been already pushed. This truth value is only valid prior\n-   an inner class is pushed. After, use FIXME. */\n-#define CPC_INNER_P() GET_CPC_LIST ()\n-\n-/* The TYPE_DECL node of the class currently being parsed.  */\n-#define GET_CPC() TREE_VALUE (GET_CPC_LIST ())\n-\n-/* Get the currently parsed class unqualified IDENTIFIER_NODE.  */\n-#define GET_CPC_UN() TREE_PURPOSE (GET_CPC_LIST ())\n-\n-/* Get a parsed class unqualified IDENTIFIER_NODE from its CPC node.  */\n-#define GET_CPC_UN_NODE(N) TREE_PURPOSE (N)\n-\n-/* Get the currently parsed class DECL_TYPE from its CPC node.  */\n-#define GET_CPC_DECL_NODE(N) TREE_VALUE (N)\n-\n-/* The currently parsed enclosing currently parsed TREE_LIST node.  */\n-#define GET_ENCLOSING_CPC() TREE_CHAIN (GET_CPC_LIST ())\n-\n-/* Get the next enclosing context.  */\n-#define GET_NEXT_ENCLOSING_CPC(C) TREE_CHAIN (C)\n-\n-/* The DECL_TYPE node of the enclosing currently parsed\n-   class. NULL_TREE if the currently parsed class isn't an inner\n-   class.  */\n-#define GET_ENCLOSING_CPC_CONTEXT() (GET_ENCLOSING_CPC () ?\t\t      \\\n-                                     TREE_VALUE (GET_ENCLOSING_CPC ()) :      \\\n-\t\t\t\t     NULL_TREE)\n-\n-/* Make sure that innerclass T sits in an appropriate enclosing\n-   context.  */\n-#define INNER_ENCLOSING_SCOPE_CHECK(T)\t\t\t\t\t      \\\n-  (INNER_CLASS_TYPE_P ((T)) && !ANONYMOUS_CLASS_P ((T))\t\t\t      \\\n-   && ((current_this\t\t\t\t\t\t\t      \\\n-\t/* We have a this and it's not the right one */\t\t\t      \\\n-\t&& (DECL_CONTEXT (TYPE_NAME ((T)))\t\t\t\t      \\\n-\t    != TYPE_NAME (TREE_TYPE (TREE_TYPE (current_this))))\t      \\\n-\t&& !inherits_from_p (TREE_TYPE (TREE_TYPE (current_this)),\t      \\\n-\t\t\t     TREE_TYPE (DECL_CONTEXT (TYPE_NAME (T))))\t      \\\n-        && !common_enclosing_instance_p (TREE_TYPE (TREE_TYPE (current_this)),\\\n-\t\t\t\t\t(T))                                  \\\n-\t&& INNER_CLASS_TYPE_P (TREE_TYPE (TREE_TYPE (current_this)))          \\\n-\t&& !inherits_from_p                                                   \\\n-\t      (TREE_TYPE (DECL_CONTEXT                                        \\\n-\t\t\t  (TYPE_NAME (TREE_TYPE (TREE_TYPE (current_this))))),\\\n-\t       TREE_TYPE (DECL_CONTEXT (TYPE_NAME (T)))))                     \\\n-       /* We don't have a this, which is OK if the current function is        \\\n-\t  static. */                                                          \\\n-       || (!current_this\t\t\t\t\t\t      \\\n-\t   && current_function_decl                                           \\\n-           && ! METHOD_STATIC (current_function_decl))))\n-\n-/* Push macro. First argument to PUSH_CPC is a DECL_TYPE, second\n-   argument is the unqualified currently parsed class name.  */\n-#define PUSH_CPC(C,R) { \t\t\t\t\t\\\n-                        ctxp->current_parsed_class =\t\t\\\n-\t\t        tree_cons ((R), (C), GET_CPC_LIST ()); \t\\\n-\t\t      }\n-\n-/* In case of an error, push an error.  */\n-#define PUSH_ERROR() PUSH_CPC (error_mark_node, error_mark_node)\n-\n-/* Pop macro. Before we pop, we link the current inner class decl (if any)\n-   to its enclosing class.  */\n-#define POP_CPC() {\t\t\t\t\t\\\n-\t\t    link_nested_class_to_enclosing ();\t\\\n-\t\t    ctxp->current_parsed_class =\t\\\n-\t\t      TREE_CHAIN (GET_CPC_LIST ());\t\\\n-\t\t  }\n-\n-#define DEBUG_CPC()\t\t\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      tree tmp =  ctxp->current_parsed_class;\t\t\t\\\n-      while (tmp)\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  fprintf (stderr, \"%s \",\t\t\t\t\\\n-\t\t   IDENTIFIER_POINTER (TREE_PURPOSE (tmp)));\t\\\n-\t  tmp = TREE_CHAIN (tmp);\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-    } \t\t\t\t\t\t\t\t\\\n-  while (0);\n-\n-/* Access to the various initializer statement lists */\n-#define CPC_INITIALIZER_LIST(C)          ((C)->non_static_initialized)\n-#define CPC_STATIC_INITIALIZER_LIST(C)   ((C)->static_initialized)\n-#define CPC_INSTANCE_INITIALIZER_LIST(C) ((C)->instance_initializers)\n-\n-/* Access to the various initializer statements */\n-#define CPC_INITIALIZER_STMT(C) (TREE_PURPOSE (CPC_INITIALIZER_LIST (C)))\n-#define CPC_STATIC_INITIALIZER_STMT(C) \\\n-  (TREE_PURPOSE (CPC_STATIC_INITIALIZER_LIST (C)))\n-#define CPC_INSTANCE_INITIALIZER_STMT(C) \\\n-  (TREE_PURPOSE (CPC_INSTANCE_INITIALIZER_LIST (C)))\n-\n-/* Set various initializer statements */\n-#define SET_CPC_INITIALIZER_STMT(C,S)\t\t\t\\\n-  if (CPC_INITIALIZER_LIST (C))\t\t\t\t\\\n-    TREE_PURPOSE (CPC_INITIALIZER_LIST (C)) = (S);\n-#define SET_CPC_STATIC_INITIALIZER_STMT(C,S)\t\t\t\\\n-  if (CPC_STATIC_INITIALIZER_LIST (C))\t\t\t\t\\\n-    TREE_PURPOSE (CPC_STATIC_INITIALIZER_LIST (C)) = (S);\n-#define SET_CPC_INSTANCE_INITIALIZER_STMT(C,S)\t\t\t\\\n-  if (CPC_INSTANCE_INITIALIZER_LIST(C))\t\t\t\t\\\n-    TREE_PURPOSE (CPC_INSTANCE_INITIALIZER_LIST (C)) = (S);\n-\n-/* This is used by the lexer to communicate with the parser.  It is\n-   set on an integer constant if the radix is NOT 10, so that the parser\n-   can correctly diagnose a numeric overflow.  */\n-#define JAVA_NOT_RADIX10_FLAG(NODE) TREE_LANG_FLAG_0(NODE)\n-\n-#ifndef JC1_LITE\n-void java_complete_class (void);\n-void java_check_circular_reference (void);\n-void java_fix_constructors (void);\n-void java_layout_classes (void);\n-void java_reorder_fields (void);\n-tree java_method_add_stmt (tree, tree);\n int java_report_errors (void);\n extern tree do_resolve_class (tree, tree, tree, tree, tree);\n-#endif\n-char *java_get_line_col (const char *, int, int);\n-extern void reset_report (void);\n \n /* Always in use, no matter what you compile */\n void java_push_parser_context (void);\n void java_pop_parser_context (int);\n-void java_init_lex (FILE *, const char *);\n extern void java_parser_context_save_global (void);\n extern void java_parser_context_restore_global (void);\n-int yyparse (void);\n-extern int java_parse (void);\n-extern void yyerror (const char *)\n-#ifdef JC1_LITE\n-ATTRIBUTE_NORETURN\n-#endif\n-;\n-extern void java_expand_classes (void);\n-extern void java_finish_classes (void);\n-\n-extern GTY(()) struct parser_ctxt *ctxp;\n-extern GTY(()) struct parser_ctxt *ctxp_for_generation;\n-extern GTY(()) struct parser_ctxt *ctxp_for_generation_last;\n \n #endif /* ! GCC_JAVA_PARSE_H */"}, {"sha": "4b6521ca2434ac715b608756545984b47b46d16d", "filename": "gcc/java/parse.y", "status": "removed", "additions": 0, "deletions": 16552, "changes": 16552, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369"}, {"sha": "26c0031355fcb5fafbdccc77107d7d5bb0af5ae2", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -356,7 +356,7 @@ tree\n build_java_array_type (tree element_type, HOST_WIDE_INT length)\n {\n   tree sig, t, fld, atype, arfld;\n-  char buf[23]; /* 20 for the digits of a 64 bit number + \"[]\" + \\0 */\n+  char buf[23];\n   tree elsig = build_java_signature (element_type);\n   tree el_name = element_type;\n   buf[0] = '[';"}, {"sha": "2e972548e945df3da4c2a3aecd934a6db115b772", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1231, "deletions": 0, "changes": 1231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1,3 +1,1234 @@\n+2007-01-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.loader/loader.exp (gcj_loader_run): Find\n+\tdummy.class in srcdir.\n+\n+2007-01-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_compile_cxx_to_o): Add -I\n+\tfor srcdir.\n+\n+2007-01-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/*: Added many .jar and .h files.\n+\t* testsuite/libjava.special/special.exp\n+\t(gcj_special_try_compiler): New proc.\n+\t* testsuite/libjava.loader/loader.exp (gcj_loader_run): Don't\n+\tbytecompile source.  Search for .jar files.\n+\t(gcj_loader_test_one): Don't look for MyLoader.java.\n+\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_test_one): Don't\n+\tbytecompile sources or build headers.\n+\t(gcj_jvmti_run): Look for .jar files.\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_run): Compile .jar\n+\tfiles.\n+\t(gcj_jni_test_one): Don't bytecompile sources or build headers.\n+\tSet classpath when invoking gij.\n+\t(gcj_jni_invocation_test_one): Likewise.\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_test_one): Don't build\n+\theaders or bytecompile sources.\n+\t(gcj_cni_run): Use .jar files, not .java files.\n+\t* testsuite/libjava.lang/lang.exp: Compile .jar files.\n+\n+2007-01-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac: Check for gjar.\n+\n+2007-01-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jacks/jacks.exp: Removed.\n+\t* testsuite/libjava.jacks/jacks.xfail: Removed.\n+\n+2006-12-22  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* java/io/natObjectInputStream.cc (allocateObject): Now method on\n+\tVMObjectStream.\n+\t(currentLoader): Removed.\n+\t* java/io/ObjectInputStream.java: Removed.\n+\t* java/io/VMObjectInputStream.java: New file.\n+\t* scripts/classes.pl (scan): Ignore .svn directories.\n+\t* gcj/javaprims.h: Updated.\n+\n+2006-12-22  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jni/register2.c: Include jni.h, not\n+\tregister2.h.\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_build_headers):\n+\tSpecial-case shortfield.\n+\n+2006-12-20  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClass.cc (getDeclaredAnnotations): Call\n+\tClassLoader.getDeclaredAnnotations and\n+\tClassLoader.putDeclaredAnnotations.\n+\t* java/lang/ClassLoader.java (AnnotationsKey): New class.\n+\t(getDeclaredAnnotations, putDeclaredAnnotations): New.\n+\n+2006-12-19  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClassLoader.cc (_Jv_CheckABIVersion): Move here\n+\tfrom include/jvm.h.\n+\tAdd BC ABI Version 1.\n+\tThrow a ClassFormatError if we're not ABI-compatible.\n+\t(_Jv_RegisterClasses): Throw a ClassFormatError if we're not\n+\tABI-compatible.\n+\t(_Jv_RegisterClasses_Counted): Likewise.\n+\t(_Jv_NewClassFromInitializer): Likewise.\n+\tCall Class::initializerSize to get size of initializer struct.\n+\t* include/jvm.h (_Jv_CheckABIVersion): Move to natClassLoader.cc.\n+\t* java/lang/Class.h (Class::initializerSize): New function.\n+\n+2006-12-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_build_headers):\n+\tDon't use jv-scan.\n+\n+2006-12-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* HACKING: Updated.\n+\t* gnu/classpath/Configuration.java (CLASSPATH_VERSION): Now 0.93.\n+\n+2006-12-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* Makefile.am (gcjh.stamp): Use JAVA_MAINTAINER_MODE.\n+\t* configure.ac: Added --enable-java-maintainer-mode.\n+\n+2006-12-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.compile: Removed.\n+\n+2006-12-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am (AM_MAKEFLAGS): Pass JAR to sub-make.\n+\t(libgcj_tools_la_GCJFLAGS): Pass -fsource-filename to gcj.\n+\n+2006-12-14  Gary Benson  <gbenson@redhat.com>\n+\n+\t* include/java-stack.h (stackwalker_nnl_trace_fn,\n+\tGetStackWalkerFirstNonNullLoader): Declare.\n+\t* stacktrace.cc (stackwalker_nnl_trace_fn,\n+\tGetStackWalkerFirstNonNullLoader): New methods.\n+\t* gnu/classpath/natVMStackWalker.cc\n+\t(firstNonNullClassLoader): New method.\n+\t* gnu/classpath/VMStackWalker.java\n+\t(firstNonNullClassLoader): Replace with native method.\n+\n+2006-12-13  Gary Benson  <gbenson@redhat.com>\n+\n+\t* stacktrace.cc (stackwalker_trace_fn,\n+\tGetStackWalkerCallingClass): Be less strict about caller.\n+\t* gnu/classpath/natVMStackWalker.cc\n+\t(getCallingClassLoader): New method.\n+\t* gnu/classpath/VMStackWalker.java\n+\t(getCallingClassLoader): Replace with native method.\n+\n+2006-12-12  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* gnu/java/rmi/rmic/CompilerProcess.java: Removed.\n+\t* gnu/java/rmi/rmic/RMICException.java: Removed.\n+\t* gnu/java/rmi/rmic/Compiler.java: Removed.\n+\t* gnu/java/rmi/rmic/Compile_gcj.java: Removed.\n+\t* gnu/java/rmi/rmic/Compile_jikes.java: Removed.\n+\t* gnu/java/rmi/rmic/TabbedWriter.java: Removed.\n+\t* gnu/java/rmi/rmic/Compile_kjc.java: Removed.\n+\t* gnu/java/rmi/rmic/RMIC.java: Removed.\n+\t* Makefile.am (toolexeclib_LTLIBRARIES): Uncomment\n+\tlibgcj-tools.la.\n+\t(jar_DATA): Uncomment libgcj-tools jar.\n+\t(libgcj_tools_la_SOURCES): Uncomment.\n+\t(libgcj_tools_la_GCJFLAGS): Likewise.\n+\t(libgcj_tools_la_LDFLAGS): Likewise.\n+\t(libgcj_tools_la_DEPENDENCIES): Likewise.\n+\t(libgcj_tools_la_LINK): Likewise.\n+\t(libgcj-tools-$(gcc_version).jar): Uncomment.\n+\t(bin_PROGRAMS): Add gappletviewer, gjarsigner, gkeytool, gjar,\n+\tgjavah, gnative2ascii, gorbd, grmid, gserialver, gtnameserv.\n+\t(gjar_SOURCES): New variable.\n+\t(gjar_LDFLAGS): Likewise.\n+\t(gjar_LINK): Likewise.\n+\t(gjar_LDADD): Likewise.\n+\t(gjar_DEPENDENCIES): Likewise.\n+\t(gjavah_SOURCES): Likewise.\n+\t(gjavah_LDFLAGS): Likewise.\n+\t(gjavah_LINK): Likewise.\n+\t(gjavah_LDADD): Likewise.\n+\t(gjavah_DEPENDENCIES): Likewise.\n+\t(gnative2ascii_SOURCES): Likewise.\n+\t(gnative2ascii_LDFLAGS): Likewise.\n+\t(gnative2ascii_LINK): Likewise.\n+\t(gnative2ascii_LDADD): Likewise.\n+\t(gnative2ascii_DEPENDENCIES): Likewise.\n+\t(gorbd_SOURCES): Likewise.\n+\t(gorbd_LDFLAGS): Likewise.\n+\t(gorbd_LINK): Likewise.\n+\t(gorbd_LDADD): Likewise.\n+\t(gorbd_DEPENDENCIES): Likewise.\n+\t(grmid_SOURCES): Likewise.\n+\t(grmid_LDFLAGS): Likewise.\n+\t(grmid_LINK): Likewise.\n+\t(grmid_LDADD): Likewise.\n+\t(grmid_DEPENDENCIES): Likewise.\n+\t(gserialver_SOURCES): Likewise.\n+\t(gserialver_LDFLAGS): Likewise.\n+\t(gserialver_LINK): Likewise.\n+\t(gserialver_LDADD): Likewise.\n+\t(gserialver_DEPENDENCIES): Likewise.\n+\t(gtnameserv_SOURCES): Likewise.\n+\t(gtnameserv_LDFLAGS): Likewise.\n+\t(gtnameserv_LINK): Likewise.\n+\t(gtnameserv_LDADD): Likewise.\n+\t(gtnameserv_DEPENDENCIES): Likewise.\n+\t(grmic_LDADD): Link against tools library.\n+\t(grmic_LDFLAGS): Changed --main.\n+\t(grmiregistry_LDADD): Link against tools library.\n+\t(grmiregistry_LDFLAGS): Changed --main.\n+\t(grmic_DEPENDENCIES): Updated.\n+\t(grmiregistry_DEPENDENCIES): Likewise.\n+\n+2006-12-12  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* gnu/java/nio/FileLockImpl.java: New override.\n+\t* gnu/java/nio/SelectorProviderImpl.java: New override.\n+\t* gnu/java/nio/PipeImpl.java: New override.\n+\t* gnu/java/nio/SocketChannelSelectionKeyImpl.java: New override.\n+\t* gnu/java/nio/NIOSocket.java: New override.\n+\t* gnu/java/nio/SocketChannelSelectionKey.java: New override.\n+\t* java/io/FileDescriptor.java: New override.\n+\t* java/io/RandomAccessFile.java: New override.\n+\t* java/io/FileInputStream.java: New override.\n+\t* java/io/FileOutputStream.java: New override.\n+\t* configure.ac: Pass --disable-Werror, --disable-tool-wrappers to\n+\tClasspath configure.\n+\t* java/io/ObjectInputStream.java (readClassDescriptor): Don't pass\n+\tclass loader to ObjectStreamField.\n+\t* java/net/DatagramSocket.java: New override.\n+\t* java/net/Socket.java: New override.\n+\t* java/net/MulticastSocket.java: New override.\n+\t* gnu/classpath/VMStackWalker.java (firstNonNullClassLoader): New\n+\tmethod from Classpath.\n+\t* java/lang/Class.java (newInstance): Fixed return type.\n+\t(forName): Likewise.\n+\t(getClasses): Likewise.\n+\t(getComponentType): Likewise.\n+\t(getConstructors): Likewise.\n+\t(getDeclaredClasses): Likewise.\n+\t(getDeclaredConstructors): Likewise.\n+\t(getDeclaringClass): Likewise.\n+\t(getInterfaces): Likewise.\n+\t(getSuperclass): Likewise.\n+\t(internalGetClasses): Genericized.\n+\t(getMethod): Likewise.\n+\t(isAssignableFrom): Likewise.\n+\t* java/util/zip/natDeflater.cc (getBytesWritten): Renamed.\n+\t(getBytesRead): Likewise.\n+\t* java/util/zip/Deflater.java (getBytesRead, getBytesWritten): New\n+\tmethods.\n+\t(getTotalIn, getTotalOut): Rewrote.\n+\t* java/net/NetworkInterface.java: New override.\n+\t* java/lang/ClassLoader.java (defineClass): New overload from\n+\tClasspath.\n+\n+2006-12-11  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gcj/Makefile.in: Rebuilt.\n+\n+2006-12-11  Gary Benson  <gbenson@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* include/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n+2006-12-08  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* configure.ac: (GCJ_FOR_ECJX) New substitution.\n+\t(host_exeext): Likewise.\n+\t(ENABLE_SHARED): New conditional,\n+\t* Makefile.am: Added GCJ_FOR_ECJX and GCJ_FOR_ECJX_LINK.\n+\t(install-exec-hook): Correctly rename ecjx to ecj1.\n+\t(ecjx_LINK, ecjx_LDFLAGS, ecjx_LDADD, ecjx_DEPENDENCIES): Define\n+\tas a function of whether we're doing a native and/or shared build.\n+\n+2006-12-08  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* posix-threads.cc (_Jv_ThreadUnpark): Removed.\n+\t(ParkHelper::unpark): Ported from _Jv_ThreadUnpark.\n+\t(ParkHelper::deactivate): Implemented.\n+\t(_Jv_ThreadPark): Removed.\n+\t(ParkHelper::park): Ported from _Jv_ThreadPark; moved\n+\tmutex locking and unlocking to inside if statement.\n+\t* win32-threads.cc (compare_and_exchange): New helper function.\n+\t(_Jv_ThreadUnpark, _Jv_ThreadPark): Removed.\n+\t(ParkHelper::init): Implemented.\n+\t(ParkHelper::init_event): Implemented.\n+\t(ParkHelper::deactivate): Implemented.\n+\t(ParkHelper::destroy): Implemented.\n+\t(ParkHelper::unpark): Implemented.\n+\t(ParkHelper::park): Implemented.\n+\t* java/lang/natThread.cc (initialize_native): Use ParkHelper\n+\tinstead of POSIX synchronization constructs.\n+\t(finalize_native):  Likewise.\n+\t(interrupt): Use ParkHelper method instead of _Jv_ThreadUnpark().\n+\t(finish_): Use ParkHelper::deactivate().\n+\t* include/jvm.h (struct natThread): Use ParkHelper instead of POSIX\n+\tsynchronization constructs.\n+\t* include/posix-threads.h: Include sysdep/locks.h\n+\t(_Jv_ThreadUnpark, _Jv_ThreadPark): Removed.\n+\t(ParkHelper): New struct.\n+\t(ParkHelper::init): Implemented.\n+\t(ParkHelper::destroy): Implemented.\n+\t* include/win32-threads.h (ParkHelper): New struct.\n+\t(TEXT): undefined this macro.\n+\t* sun/misc/natUnsafe.cc (unpark): Use ParkHelper instead of\n+\t_Jv_ThreadUnpark.\n+\t(park):  Use ParkHelper instead of _Jv_ThreadPark.\n+\n+2006-12-08  Ben Konrath  <bkonrath@redhat.com>\n+\n+\tPR libgcj/30110:\n+\t* Makefile.am: Add contents of classpath/external to src.zip.\n+\t* Makefile.in: Regenerate.\n+\n+2006-12-07  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/30076:\n+\t* defineclass.cc (read_fields): Sort fields here.\n+\t(handleFieldsEnd): Removed.\n+\t(handleField): Added field map argument.\n+\t(struct _Jv_ClassReader): Updated.\n+\t(handleParameterAnnotations): Use writeInt for the length.\n+\n+2006-12-07  Gary Benson  <gbenson@redhat.com>\n+\n+\t* include/java-stack.h (stackwalker_trace_fn,\n+\tGetStackWalkerCallingClass): Declare.\n+\t* stacktrace.cc (stackwalker_trace_fn,\n+\tGetStackWalkerCallingClass): New methods.\n+\t* gnu/classpath/natVMStackWalker.cc\n+\t(getCallingClass): Use the above.\n+\t* gnu/classpath/VMStackWalker.java\n+\t(getCallingClass): Replace with native method.\n+\n+2006-12-06  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/24938:\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* gnu/CORBA/DynAn/gnuDynValue.java: Removed.\n+\t* gnu/CORBA/DynAn/RecordAny.java: Removed.\n+\t* gnu/CORBA/DynAn/RecordAny.h: Rebuilt.\n+\n+2006-12-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* gcj/javaprims.h (_Jv_is_proxy): Declare.\n+\t* java/lang/reflect/natVMProxy.cc (_Jv_is_proxy): Define\n+\t(run_proxy): Register this proxy invocation with a _Jv_InterpFrame.\n+\t* include/java-stack.h (struct _Jv_StackFrame): Add proxyClass and\n+\tproxyMethod.\n+\t* stacktrace.cc (UnwindTraceFn): Add frame_proxy handling.\n+\t(getLineNumberForFrame): Likewise.\n+\t(FillInFrameInfo): Likewise.\n+\n+2006-12-05  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am: Add java/lang/reflect/natVMProxy.cc.\n+\t* java/lang/reflect/Method.java (exception_types, parameter_types,\n+\treturn_type): Make package private.\n+\t* include/jvm.h (_Jv_makeUtf8Const(const char *s)): New function.\n+\t(_Jv_Linker::layout_vtable_methods): Given\n+\tpublic linkage.\n+\t(_Jv_Linker::search_method_in_class): Likewise.\n+\t* interpret.cc (_Jv_init_cif): Renamed from init_cif.  Given\n+\tpublic linkage.\n+\t* include/java-interp.h (_Jv_init_cif): Likewise.\n+\t* java/lang/reflect/natVMProxy.cc: New file.\n+\t* java/lang/VMCompiler.java (precompiles): New method.\n+\t(compileClass): Use it.\n+\t* java/lang/reflect/VMProxy.java\n+\t(HAVE_NATIVE_GENERATE_PROXY_CLASS): true.\n+\t(generateProxyClass): Native.\n+\t\n+2006-12-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (libexecsubdir): New variable.\n+\t(install-exec-hook): Install ecj1 in libexecsubdir.\n+\t(libexecsub_PROGRAMS): Renamed.\n+\n+2006-12-05  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/29495:\n+\t* testsuite/libjava.lang/PR29495.out: New file.\n+\t* testsuite/libjava.lang/PR29495.java: New file.\n+\n+2006-12-05  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc: Comment fixes.\n+\n+2006-12-05  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc (getCallingClass): Unwind\n+\tthe stack when the caller is a compiled frame and the caller\n+\tof the caller is an interpreted frame.\n+\n+2006-12-04  Adam Megacz <megacz@cs.berkeley.edu>\n+\n+\t* gnu/gcj/runtime/natSharedLibLoader.cc (init): add \"::\" to fix\n+\tsyntax error\n+\n+2006-12-04  Adam Megacz <megacz@cs.berkeley.edu>\n+\n+\t* include/win32.h (_Jv_platform_process): change to Win32Process\n+\t\n+2006-12-04  Gary Benson  <gbenson@redhat.com>\n+\n+\t* stacktrace.cc (GetClassContext): Remove.\n+\t* include/java-stack.h (GetClassContext): Likewise.\n+\n+2006-12-04  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/lang/SecurityManager.java: Removed.\n+\t* java/lang/VMSecurityManager.java: Likewise.\n+\t* java/lang/natVMSecurityManager.cc: Likewise.\n+\t* javax/naming/spi/NamingManager.java: Likewise.\n+\t* gnu/CORBA/ObjectCreator.java: Likewise.\n+\t* sun/reflect/Reflection.java: Replaced with reference.\n+\t* sun/reflect/natReflection.cc: Removed.\n+\t* gcj/javaprims.h: Removed reference to VMSecurityManager.\n+\t* Makefile.am (nat_source_files): Removed natReflection.cc\n+\tand natVMSecurityManager.cc.\n+\t* sources.am, Makefile.in: Rebuilt.\t\n+\t\n+2006-12-01  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/net/URLClassLoader.java\n+\t(findClass): Inhibit calling this.toString() further into VM\n+\tinitialization.\n+\t(runtimeInitialized): Removed.\n+\t* java/net/natURLClassLoader.cc: Removed.\n+\t* Makefile.am: Reflect the above.\n+\t* Makefile.in: Rebuilt.\t\n+\n+2006-11-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Class.java (getAnnotations): Don't recurse.\n+\n+2006-11-30  Gary Benson  <gbenson@redhat.com>\n+\n+\t* include/java-stack.h (GetStackWalkerStack): Declare.\n+\t* stacktrace.cc (GetStackWalkerStack): New method.\n+\t* gnu/classpath/natVMStackWalker.cc (getClassContext): Likewise.\n+\t* gnu/classpath/VMStackWalker.java\n+\t(getClassContext): Replace stub with native method declaration.\n+\t(getCallingClass): Remove \"throws NotImplementedException\".\n+\t(getCallingClassLoader): Likewise.\n+\n+2006-11-30  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/lang/ClassLoader.java: Merged javadoc.\n+\t(getParent, getSystemClassLoader): Use VMStackWalker.\n+\n+2006-11-30  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/lang/Thread.java: Merged javadoc.\n+\t(getContextClassLoader): Use VMStackWalker.\n+\n+2006-11-29  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/lang/Package.java: Removed.\n+\t* java/security/Security.java: Likewise.\n+\t* java/util/ResourceBundle.java: Likewise.\n+\t* java/util/natResourceBundle.cc: Likewise.\n+\t* Makefile.am (nat_source_files): Removed natResourceBundle.cc.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\n+2006-11-29  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/classpath/VMStackWalker.java: Added javadoc.\n+\n+2006-11-27  Andrew Haley  <aph@redhat.com>\n+\n+\t* sun/reflect/misc/ReflectUtil.java (checkPackageAccess):\n+\tImplement.\n+\n+2006-11-23  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClassLoader.cc (_Jv_RegisterClasses): Abort if we\n+\tare ABI-incompatible.\n+\n+2006-11-23  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am (nat_source_files): Add gnu/classpath/natVMStackWalker.cc.\n+\t* sources.am: Rebuild.\n+\t* gnu/classpath/natVMStackWalker.cc: New file.\n+\t* gnu/classpath/VMStackWalker.java: New file.\n+\t* headers.txt: prepend \n+\t_Jv_Thread_t* _Jv_ThreadGetData(java::lang::Thread* thread)\n+\t* include/java-stack.h: Add VMStackWalker namespace.\n+\tAdd friend class gnu::classpath::VMStackWalker.\n+\n+2006-11-23  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/security/Security.java: Merge with classpath.\n+\t* java/lang/Package.java: Likewise.\n+\n+2006-11-21  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/Class.h: (isEnum, isSynthetic, isAnnotation): Move\n+\tto native code. \n+\t* java/lang/Class.java (isEnum, isSynthetic, isAnnotation):\n+\tLikewise.\n+\n+2006-11-17  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/net/natVMURLConnection.cc: Check for HAVE_MAGIC_OPEN.\n+\t* configure.ac: Add HAVE_MAGIC_OPEN.\n+\t* include/config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\t\n+2006-11-07  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/VMCompiler.java (compileClass): Revert mistaken\n+\tchange.\n+\n+\t* java/lang/natVMClassLoader.cc (defineClass): Register the new\n+\tclass with the initiating loader.\n+\n+2006-11-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* defineclass.cc (prepare_pool_entry): Be careful about which\n+\tconstant pool entries have their '/' characters stripped.\n+\t(handleGenericSignature): Likewise.\n+\t(handleAnnotationElement): Likewise.\n+\t(handleAnnotation): Likewise.\n+\t(read_one_class_attribute): Likewise.\n+\t(handleMethod): Likewise.\n+\n+\t* include/java-cpool.h (JV_CONSTANT_LazyFlag): New.\n+\t* java/lang/natClass.cc (check_constant): Likewise.\n+\t* link.cc (resolve_pool_entry): Mask JV_CONSTANT_LazyFlag.\n+\n+2006-11-01  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClass.cc (parseAnnotationElement): Set result from\n+\tanno_class.\n+\n+2006-10-21  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.lang/PR260.out: Rewrote for 1.5.\n+\t* testsuite/libjava.lang/pr179.out: Rewrote for 1.5.\n+\t* testsuite/libjava.lang/pr179.java: Updated comments.\n+\t* testsuite/libjava.compile/inner_1.xfail: Removed.\n+\n+2006-10-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_build_headers): Don't use\n+\tjv-scan.\n+\t* testsuite/lib/libjava.exp (test_libjava_from_javac): Removed.\n+\t(find_jvscan): Removed.\n+\n+2006-10-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_build_header): Use\n+\t-force.\n+\t* testsuite/lib/libjava.exp (find_gcjh): Find 'gjavah' instead.\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_build_headers): Pass -cni\n+\tand -force to gcjh.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (MYGCJH): Use gjavah.\n+\n+2006-10-18  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR classpath/28203:\n+\t* java/lang/Class.java (getAnnotations): Rewrote.\n+\t* java/lang/reflect/Method.java (METHOD_MODIFIERS): Now\n+\tpackage-private.\n+\t* java/lang/reflect/Field.java (FIELD_MODIFIERS): Now\n+\tpackage-private.\n+\t* gcj/field.h (_Jv_FIELD_CONSTANT_VALUE): Removed.\n+\t* defineclass.cc (handleConstantValueAttribute): Added found_value\n+\targument.  Don't use _Jv_FIELD_CONSTANT_VALUE.\n+\t(read_one_field_attribute): Updated.\n+\t(read_fields): Likewise.\n+\t(handleField): Mask with FIELD_MODIFIERS, not ALL_FLAGS.\n+\t(handleMethod): Mask with METHOD_MODIFIERS, not ALL_FLAGS.\n+\n+2006-10-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* defineclass.cc (handleMemberAnnotations): Write member index\n+\tafter 'kind'.\n+\t(handleAnnotation): Call prepare_pool_entry.\n+\t* java/lang/reflect/natMethod.cc (getDeclaredAnnotationsInternal):\n+\tRemoved unused variable.\n+\t(getParameterAnnotationsInternal): Likewise.\n+\t* java/lang/reflect/natField.cc (getDeclaredAnnotationsInternal):\n+\tRemoved unused variable.\n+\t* java/lang/reflect/natConstructor.cc\n+\t(getDeclaredAnnotationsInternal): Removed unused variable.\n+\t(getParameterAnnotationsInternal): Likewise.\n+\t* java/lang/natClass.cc (parseAnnotation): Create annotation.\n+\t(parseAnnotationElement): Handle 'c' and 'e' cases more\n+\tcorrectly.\n+\t(getMethodDefaultValue): Fixed variable names.\n+\t(parseAnnotationElement): Create String for 's' entry.\n+\t* java/lang/reflect/Constructor.java (getAnnotation): New method.\n+\t* java/lang/reflect/Field.java (getAnnotation): New method.\n+\t* java/lang/reflect/Method.java (getAnnotation): New method.\n+\n+2006-10-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natClass.cc (parseAnnotationElement): Expect a utf8\n+\tconstant in the \"string\" case.\n+\t* defineclass.cc (handleAnnotationElement): Expect a utf8 constant\n+\tin the \"string\" case.\n+\n+2006-10-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* Makefile.am (install-exec-hook): Now unconditional.  Rename ecjx\n+\tif needed.\n+\t(jar_DATA): Add ecj jar when needed.\n+\t(toolexec_PROGRAMS): New variable.\n+\t(ecjx_SOURCES, ecjx_LDFLAGS, ecjx_LDADD, ecjx_DEPENDENCIES):\n+\tLikewise.\n+\t* prims.cc (JvRunMainName): New function.\n+\t* include/jvm.h (JvRunMainName): Declare.\n+\t* configure.ac: Added --with-ecj-jar.\n+\t(ECJ_JAR): New subst.\n+\t(ECJ_BUILD_JAR): Likewise.\n+\t(INSTALL_ECJ_JAR): New conditional.\n+\t(BUILD_ECJ1): Likewise.\n+\n+2006-10-13  Tom Tromey  <tromey@redhat.com>\n+\n+\t* HACKING: Updated.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* scripts/makemake.tcl (emit_bc_rule): Updated for class files in\n+\tsrcdir.\n+\t(emit_package_rule): Likewise.\n+\t(emit_process_package_rule): Likewise.\n+\t* Makefile.am (gcjh.stamp): Conditional on MAINTAINER_MODE.  Put\n+\theaders in srcdir.\n+\t(libgcj-$(gcc_version).jar): Updated to find classes in source\n+\ttree.\n+\t(BOOTCLASSPATH): Likewise.\n+\t(install-data-local): Likewise.\n+\tAdded all the .class and CNI .h files.\n+\n+2006-10-12  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natThreadLocal.cc: New file.\n+\t* java/lang/ThreadLocal.java: Rewrite to use native TLS.\n+\t* Makefile.am: Add java/lang/natThreadLocal.cc.\n+\t* sources.am: Move classpath/java/lang/ThreadLocal.java to\n+\tjava/lang/ThreadLocal.java.\n+\n+2006-10-11  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in, include/config.h.in, configure:\n+\tRebuilt.\n+\t* Makefile.am (nat_source_files): Added natConfiguration.cc.\n+\t* gnu/classpath/natConfiguration.cc: New file.\n+\t* configure.ac (AWT_TOOLKIT): New define.\n+\t(LIBGCJ_PREFIX): Likewise.\n+\t* gnu/classpath/Configuration.java: New file.\n+\t* sources.am: Rebuilt.\n+\t* scripts/makemake.tcl: Don't special case Configuration.java.\n+\n+2006-10-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcj/javaprims.h: Updated.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* standard.omit.in: Removed process source files.\n+\t* scripts/makemake.tcl: Removed ConcreteProcess special case.\n+\t(emit_package_rule): Also special-case Process.\n+\t(emit_process_package_rule): New proc.\n+\t* Makefile.am (inner_nat_headers): Removed\n+\tPLATFORM_INNER_NAT_HDRS.\n+\t* configure: Rebuilt.\n+\t* configure.ac (PLATFORM_INNER_NAT_HDRS): Removed subst.\n+\tDon't create ConcreteProcess.java link.\n+\t(PLATFORM): New subst.\n+\t* java/lang/natWin32Process.cc: Updated.\n+\t* java/lang/natPosixProcess.cc: Updated.\n+\t* java/lang/natEcosProcess.cc: Updated.\n+\t* java/lang/Win32Process.java (Win32Process): Renamed from\n+\tConcreteProcess.\n+\t* java/lang/EcosProcess.java (EcosProcess): Renamed from\n+\tConcreteProcess.\n+\t* java/lang/PosixProcess.java (PosixProcess): Renamed from\n+\tConcreteProcess.\n+\t* include/win32.h (_Jv_platform_process): New define.\n+\t* java/lang/natRuntime.cc (execInternal): Use\n+\t_Jv_platform_process.\n+\t* include/posix.h (_Jv_platform_process): New define.\n+\n+2006-10-09  Andrew Haley  <aph@redhat.com>\n+\n+\t* win32-threads.cc (_Jv_ThreadUnpark, _Jv_ThreadPark): New\n+\tfunctions.\n+\n+2006-10-06  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/29278:\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am ($(generic_header_files)): Depend on gcjh.stamp.\n+\t(gcjh.stamp): New target.\n+\n+2006-10-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* posix-threads.cc (_Jv_ThreadUnpark, _Jv_ThreadPark): Moved here\n+\tfrom sun/misc/natUnsafe.cc.\n+\t* sun/misc/natUnsafe.cc (class spinlock): New class.\n+\t(compareAndSwap): New methods.\n+\t(compareAndSwapInt, compareAndSwapLong, compareAndSwapObject) \n+\t(putOrderedLong, putLongVolatile, putObjectVolatile, putLong) \n+\t(getIntVolatile, getObjectVolatile, getLong, getLongVolatile):\n+\tRewrite to use gcj's own atomic functions rather than gcc\n+\tbuiltins.\n+\t(unpark): Moved to posix-threads.cc\n+\t(park): Likewise.\n+\t* include/jvm.h (struct natThread::alive_flag): Moved here from\n+\tThread.java.\n+\t(struct natThread): Likewise.\n+\t* include/posix-threads.h: (_Jv_ThreadUnpark, _Jv_ThreadPark):\n+\tmoved here from sun/misc/natUnsafe.cc.\n+\t* java/lang/natThread.cc (initialize_native): Set alive_flag here.\n+\t(isAlive): Moved here from Thread.java.\n+\t(interrupt): alive_flag is now in the natThread structure.\n+\t(interrupt): Call _Jv_ThreadUnpark().\n+\t(finish_): parkPermit and alive_flag are now in the natThread\n+\tstructure.\n+\t(start): LIkewise.\n+\t(_Jv_AttachCurrentThread): Likewise.\n+\t* java/lang/Thread.java (alive_flag): Remove.\n+\t(parkPermit): Likewise.\n+\t(Thread): Don't set alive_flag.\n+\t(isAlive): Make native.\n+\t\n+2006-09-13  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am: Add sun/reflect/natReflection.cc.\n+\t* Makefile.in: Rebuild.\n+\t* sun/reflect/natReflection.cc: New file.\n+\t* sun/reflect/Reflection.java (getCallerClass): Now native.\n+\t* stacktrace.cc (GetClassContext): Don't check the class if\n+\tcheckClass is NULL.\n+\t\n+2006-09-12  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/Thread.java (alive_flag): Make it a byte.\n+\t(THREAD_DEAD, THREAD_ALIVE, THREAD_SIGNALED): new constants.\n+\t(parkPermit): New variable.\n+\t(data): Now package private.\n+\t(Thread): Set alive_flag to THREAD_DEAD, not false.\n+\t(isAlive): Test against THREAD_DEAD.\n+\t* java/lang/natThread.cc (initialize_native): Initialize\n+\tpark_mutex and park_cond.\n+\t(finish_): Set parkPermit THREAD_PARK_DEAD.\n+\t(interrupt): Rewrite.  Use an atomic update rather than a mutex to\n+\taccess alive_flag.\n+\tIf the thread is parked, unpark it.\n+\t(start): Set alive_flag to THREAD_ALIVE, not true.\n+\t(finalize_native): Destroy park_mutex and park_cond.\n+\t* sun/misc/natUnsafe.cc (unpark): New method.\n+\t(park): New method.\n+\t* include/jvm.h (struct natThread): Moved here.\n+\n+2006-06-07  Andrew Haley  <aph@redhat.com>\n+ \n+\t* include/jvm.h (_Jv_Linker::maybe_adjust_signature): New.\n+\t(_Jv_Linker::uaddr): New.\n+\t* link.cc (resolve_pool_entry): Call search_method_in_superclasses\n+\tinstead of an open-coded loop around search_method_in_class.\n+\t(search_method_in_class): Add a new arg, check_perms.\n+\t(search_method_in_superclasses): New.\n+\t(link_symbol_table): Call maybe_adjust_signature() to extract the\n+\tleast significnt bit of the signature pointer.\tDo this three\n+\ttimes, for instace method calls, static methods, and interfaces.\n+\tCall search_method_in_superclasses() instead of\n+\t_Jv_LookupDeclaredMethod.\n+\t(typedef uaddr): Delete.\n+ \n+2006-09-11  Andrew Haley  <aph@redhat.com>\n+\n+\t* gij.cc (main): Remove bogus code that sets LTDL_SHLIBPATH_VAR\n+\tand forks.\n+\n+2006-06-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClassLoader.cc (_Jv_NewClassFromInitializer): Don't\n+\tcopy the whole Class instance from the initializer: instead, copy\n+\teverything but the first word (the vtable pointer).\n+\tChange prototype to (const char* class_initializer).\n+\t(_Jv_RegisterNewClasses): Change prototype to (const char**).\n+\t* java/lang/Class.h (_Jv_RegisterNewClasses): Change prototype to\n+\t(const char**).\n+\n+2006-08-31  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/28698:\n+\t* libgcj_bc.c (DECLARE_PRIM_TYPE): New macro.  Declare primitive\n+\tclasses.\n+\n+2006-08-21  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* java/lang/natThread.cc (_Jv_AttachCurrentThread): Attach thread\n+\tto GC.\n+\t(_Jv_DetachCurrentThread): Detach thread from GC.\n+\t* include/boehm-gc.h (_Jv_GCAttachThread, _Jv_GCDetachThread):\n+\tDeclare.\n+\t* boehm.cc (_Jv_GCAttachThread): New function.\n+\t(_Jv_GCDetachThread): Likewise.\n+\n+2006-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* Makefile.am (toolexeclib_LTLIBRARIES): Add libgcj_bc.la.\n+\t(libgcj_bc_la_SOURCES): New variable.\n+\t(libgcj_bc_la_LDFLAGS): Likewise.\n+\t(libgcj_bc_la_LIBADD): Likewise.\n+\t(libgcj_bc_la_DEPENDENCIES): Likewise.\n+\t(libgcj_bc_la_LINK): Likewise.\n+\t(libgcj_bc_dummy_LINK): Likewise.\n+\t(libgcj_bc.la): New target.\n+\t(install-exec-hook): Likewise.\n+\t* libgcj.spec.in (*lib): Use LIBGCJ_SPEC.\n+\t* libgcj_bc.c: New file.\n+\t* configure.ac (LIBGCJ_SPEC): New subst.\n+\t* configure.host (use_libgcj_bc): New variable.\n+\n+2006-08-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* link.cc:\n+\tIncrement loaded classes when printing verbose output.\n+\t* gnu/java/lang/management/natVMMemoryMXBeanImpl.cc:\n+\tAdded comments.\n+\t* gnu/java/lang/management/natVMMemoryPoolMXBeanImpl.cc:\n+\t(getMemoryManagerNames(jstring)): Implemented.\n+\t(isValid(jstring)): Implemented.\n+\t* gnu/java/lang/management/natVMClassLoadingMXBeanImpl.cc:\n+\t(getLoadedClassCount()): Implemented.\n+\t(getUnloadedClassCount()): Likewise.\n+\t(isVerbose()): Likewise.\n+\t(setVerbose(jboolean)): Likewise.\n+\t* java/lang/management/natVMManagementFactory.cc:\n+\t(getMemoryPoolNames()): Implemented.\n+\t(getMemoryManagerNames()): Likewise.\n+\t(getGarbageCollectorNames()): Likewise.\n+\t* include/jvm.h:\n+\tAdd loaded and unloaded class counts.\n+\t* defineclasses.c:\n+\tIncrement loaded classes count.\n+\t* prims.cc:\n+\tAdd loaded and unloaded class counts.\n+\t\n+2006-08-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* include/posix-threads.h (_Jv_MutexLock): No longer inline.\n+\t* posix-threads.cc (_Jv_CondWait): Set thread's state.\n+\t* include/jvm.h (class JvSetThreadState): New class.\n+\t(JvThreadState): New enum.\n+\t* java/lang/Thread.java (state): New field.\n+\t* java/lang/natThread.cc (_Jv_ThreadRun): Use\n+\tgetUncaughtExceptionHandler.\n+\t(start): Set state.\n+\t(_Jv_AttachCurrentThread): Likewise.\n+\t(finish_): Likewise.\n+\t(getState): Wrote.\n+\n+2006-08-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/gcj/runtime/natSharedLibLoader.cc (init): Added missing\n+\t'::'.\n+\t* gnu/gcj/convert/natIconv.cc (init): Added missing '::'.\n+\t(read): Likewise.\n+\t* gnu/gcj/natCore.cc (create): Added missing '::'.\n+\t* gnu/classpath/natSystemProperties.cc (insertSystemProperties):\n+\tAdded missing '::'\n+\n+2006-08-14  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (libgcj_la_LIBADD): Add LIBMAGIC.\n+\t* java/net/natVMURLConnection.cc: Wrote, based on Classpath.\n+\t* configure, config.h.in: Rebuilt.\n+\t* configure.ac: Check for magic.h and -lmagic.\n+\n+2006-08-14  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natThread.cc (getId): Removed.\n+\t* java/lang/Thread.java (threadId): New field.\n+\t(totalThreadsCreated): Likewise.\n+\t(Thread): Set threadId.\n+\t(getId): No longer native.\n+\n+2006-08-14  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* Makefile.am (nat_source_files): Added new .cc files.\n+\t(libgcj-$(gcc_version).jar): Include 'sun'.\n+\t(src.zip): Likewise.\n+\t* java/lang/natThread.cc (getId): New stub.\n+\t(getState): Likewise.\n+\t* scripts/makemake.tcl (emit_source_var): Use -decreasing when\n+\tsorting.\n+\t* gnu/java/lang/management/natVMMemoryMXBeanImpl.cc: New file.\n+\t* gnu/java/lang/management/natVMCompilationMXBeanImpl.cc: New file.\n+\t* gnu/java/lang/management/natVMGarbageCollectorMXBeanImpl.cc: New\n+\tfile.\n+\t* gnu/java/lang/management/natVMMemoryPoolMXBeanImpl.cc: New file.\n+\t* gnu/java/lang/management/natVMMemoryManagerMXBeanImpl.cc: New file.\n+\t* gnu/java/lang/management/natVMClassLoadingMXBeanImpl.cc: New file.\n+\t* gnu/java/lang/management/natVMThreadMXBeanImpl.cc: New file.\n+\t* gnu/java/nio/natVMChannel.cc: New file.\n+\t* gcj/javaprims.h: Updated.\n+\t* sources.am: Likewise.\n+\t* java/lang/management/natVMManagementFactory.cc: New file.\n+\t* java/net/natVMURLConnection.cc: New file.\n+\t* java/util/concurrent/atomic/natAtomicLong.cc: New file.\n+\t* sun/misc/natUnsafe.cc: New file.\n+\n+2006-08-07  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* libjava/Makefile.in,\n+\t* libjava/sources.am:\n+\tRegenerated.\n+\t* libjava/scripts/makemake.tcl:\n+\tAdded gconf and dnd peers as BC.\n+\n+2006-08-07  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* libjava/Makefile.in,\n+\t* libjava/sources.am:\n+\tRegenerated.\n+\t* libjava/scripts/makemake.tcl:\n+\tAdded external/jsr166.\n+\t\n+2006-08-07  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* libjava/configure,\n+\t* libjava/Makefile.in:\n+\tRegenerated.\n+\t* libjava/scripts/makemake.tcl:\n+\tHandle the Escher peers as we handle Qt.\n+\t* libjava/gcj/Makefile.in:\n+\tRegenerated.\n+\t* libjava/configure.ac:\n+\tHandle Escher peers and disable plugin when Gtk+ is not used.\n+\t* libjava/sources.am:\n+\tRegenerated.\n+\t* libjava/classpath/gnu/java/awt/peer/x/fonts.properties:\n+\tRemoved (as recently on generics branch of Classpath).\n+\t* libjava/include/Makefile.in,\n+\t* libjava/testsuite/Makefile.in:\n+\tRegenerated.\n+\t\n+2006-07-23  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* libjava/Makefile.in:\n+\tRegenerated.\n+\t* libjava/scripts/classes.pl:\n+\tIgnore .svn directories.\n+\t* libjava/scripts/makemake.tcl:\n+\tInclude sun directory.\n+\t* libjava/gnu/java/lang/management/VMGarbageCollectorMXBeanImpl.java,\n+\t* libjava/gnu/java/lang/management/VMMemoryPoolMXBeanImpl.java,\n+\t* libjava/gnu/java/lang/management/VMClassLoadingMXBeanImpl.java,\n+\t* libjava/gnu/java/lang/management/VMMemoryManagerMXBeanImpl.java,\n+\t* libjava/gnu/java/lang/management/VMThreadMXBeanImpl.java,\n+\t* libjava/gnu/java/lang/management/VMMemoryMXBeanImpl.java,\n+\t* libjava/gnu/java/lang/management/VMCompilationMXBeanImpl.java,\n+\t* libjava/gnu/java/nio/VMChannel.java:\n+\tCopied over from classpath/vm/reference.\n+\t* libjava/gnu/java/nio/channels/FileChannelImpl.java:\n+\t(getNativeFD()): Implemented.\n+\t* libjava/gcj/javaprims.h:\n+\tUpdated for generics merge from 20060709.\n+\t* libjava/javax/naming/spi/NamingManager.java:\n+\tCopied over from classpath/vm/reference.\n+\t* libjava/sources.am:\n+\tRegenerated.\n+\t* libjava/java/lang/Thread.java:\n+\t(getId()): Implemented.\n+\t(getState()): Likewise.\n+\t(getAllStackTraces()): Likewise.\n+\t(getStackTrace()): Likewise.\n+\t* libjava/java/lang/management/VMManagementFactory.java,\n+\t* libjava/java/net/VMURLConnection.java:\n+\tCopied over from classpath/vm/reference.\t\n+\t* libjava/classpath/vm/reference/java/lang/management/VMThreadInfo.java:\n+\tRemoved.\n+\t* libjava/classpath/native/fdlibm/namespace.h:\n+\tChanged back to GCJ LOCAL version.\n+\t* libjava/sun/reflect/Reflection.java,\n+\t* libjava/sun/reflect/misc/ReflectUtil.java,\n+\t* libjava/sun/misc/Unsafe.java:\n+\tCopied over from classpath/vm/reference.\n+\n+2006-07-07  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* gnu/java/lang/management/VMRuntimeMXBeanImpl.java,\n+\t* gnu/java/lang/management/natVMRuntimeMXBeanImpl.cc:\n+\tNew files.\n+\t* include/jvm.h:\n+\tAdd new variables used in prims.cc.\n+\t* Makefile.am:\n+\tAdd natVMRuntimeMXBeanImpl.cc.\n+\t* prims.cc:\n+\t(_Jv_CreateJavaVM): Retain start time and input\n+\targuments.\n+\n+2006-07-21  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/4105:\n+\t* java/lang/natClass.cc (findInnerClassAttribute): New method.\n+\t(findDeclaredClasses): Likewise.\n+\t(getDeclaredClasses): Implemented.\n+\t(getDeclaringClass): Likewise.\n+\t(isAnonymousClass): Likewise.\n+\t(isMemberClass): Likewise.\n+\t(check_constant): Pass message in exception.  Allow resolved\n+\tconstants.\n+\t(resolve_class_constant): New function.\n+\t* defineclass.cc (read_one_class_attribute): Handle InnerClasses.\n+\t* java/lang/Class.h (isAnonymousClass, isLocalClass,\n+\tisMemberClass): Declare.\n+\t* java/lang/Class.java (getSimpleName): Implemented.\n+\t(isAnonymousClass, isLocalClass, isMemberClass): New methods.\n+\n+2006-07-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac (JV_API_VERSION, JV_VERSION): Claim 1.5.\n+\n+2006-07-12  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am (java/lang/Object.lo): Add -fsource-filename.\n+\t(java/lang/Class.lo): Likewise.\n+\t* Makefile.in: Regenerate.\n+\n+2006-07-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* defineclass.cc (input_data, input_offset): New fields.\n+\t(reflection_data, data_stream): Likewise.\n+\t(get_reflection_stream): New method.\n+\t(_Jv_ClassReader): Initialize new fields.\n+\t(parse): Call finish_reflection_data.\n+\t(finish_reflection_data): New method.\n+\t(handleEnclosingMethod): Likewise.\n+\t(handleGenericSignature): Likewise.\n+\t(handleAnnotationElement): Likewise.\n+\t(handleAnnotation): Likewise.\n+\t(handleAnnotations): Likewise.\n+\t(handleMemberAnnotations): Likewise.\n+\t(handleAnnotationDefault): Likewise.\n+\t(handleParameterAnnotations): Likewise.\n+\t(read_one_field_attribute): Handle new attributes.\n+\t(read_one_method_attribute): Likewise.\n+\t(read_one_class_attribute): Likewise.\n+\t* include/jvm.h (resolve_method_entry): New method.\n+\t* java/lang/Class.h (jv_attr_type, jv_attr_kind): New enums.\n+\t(Class): Updated for new methods.  Field, Method, Constructor now\n+\tfriends.\n+\t(reflection_data): New field.\n+\t* java/lang/Class.java (asSubclass, cast): New methods.\n+\t(getEnclosingClass, getEnclosingConstructor): Now native.\n+\t(getEnclosingMethod): Likewise.\n+\t(getClassSignature): New method.\n+\t(getGenericInterfaces, getGenericSuperclass, getTypeParameters):\n+\tLikewise.\n+\t(Class): Implements AnnotatedElement.\n+\t(getAnnotation, isAnnotationPresent, getAnnotations): New methods.\n+\t(getDeclaredAnnotations): New method.\n+\t(getDeclaredAnnotationsInternal): Likewise.\n+\t* java/lang/reflect/natConstructor.cc (anno_a_t, anno_aa_t): New\n+\ttypedefs.\n+\t(getSignature): New method.\n+\t(getDeclaredAnnotationsInternal): Likewise.\n+\t(getParameterAnnotationsInternal): Likewise.\n+\t* java/lang/reflect/natField.cc (anno_a_t): New typedef.\n+\t(getSignature): New method.\n+\t(getDeclaredAnnotationsInternal): Likewise.\n+\t* java/lang/reflect/natMethod.cc (anno_a_t, anno_aa_t): New\n+\ttypedefs.\n+\t(getSignature): New method.\n+\t(getDefaultValue): Likewise.\n+\t(getDeclaredAnnotationsInternal): Likewise.\n+\t(getParameterAnnotationsInternal): Likewise.\n+\t* java/lang/reflect/Constructor.java (addTypeParameters):\n+\tGenericized.\n+\t(getSignature): Now native.\n+\t(getDeclaredAnnotations, getDeclaredAnnotationsInternal,\n+\tgetParameterAnnotations, getParameterAnnotationsInternal): New\n+\tmethods.\n+\t* java/lang/reflect/Field.java (getDeclaringClass, getType):\n+\tGenericized.\n+\t(getSignature): Now native.\n+\t(getDeclaredAnnotations, getDeclaredAnnotationsInternal): New\n+\tmethods.\n+\t* java/lang/reflect/Method.java (getReturnType): Genericized.\n+\t(getParameterTypes, getExceptionTypes, getTypeParameters):\n+\tLikewise.\n+\t(getSignature): Now native.\n+\t(getDefaultValue, getDeclaredAnnotations,\n+\tgetParameterAnnotations, getDeclaredAnnotationsInternal,\n+\tgetParameterAnnotationsInternal): New methods.\n+\t* java/lang/natClass.cc (read_u1): New functions.\n+\t(read_u2): Likewise.\n+\t(read_4): New function.\n+\t(getReflectionSignature): New methods.\n+\t(getClassSignature): New method.\n+\t(getEnclosingMethodData): Likewise.\n+\t(getEnclosingClass): Likewise.\n+\t(getEnclosingMethod): Likewise.\n+\t(getEnclosingConstructor): Likewise.\n+\t(check_constant): New function.\n+\t(parseAnnotationElement): Likewise.\n+\t(parseAnnotation): Likewise.\n+\t(parseAnnotations): Likewise.\n+\t(parseParameterAnnotations): Likewise.\n+\t(getMethodDefaultValue): New method.\n+\t(getDeclaredAnnotations): New methods.\n+\t(getDeclaredAnnotationsInternal): New method.\n+\t* boehm.cc (_Jv_MarkObj): Mark 'reflection_data' field.\n+\t* link.cc (resolve_method_entry): New method.\n+\t(resolve_pool_entry): Use it.\n+\n+2006-07-07  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am: Use -fsource-filename when compiling libgcj.\n+\t* Makefile.in: Regenerate.\n+\n+2006-06-23  Tom Tromey  <tromey@redhat.com>\n+\n+\tMerged in classpath-generics.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* Makefile.am (generic_header_files): Don't filter out omitted\n+\theaders.\n+\t(generic_header_files): Rewrote.\n+\t(MYGCJH): New variable.\n+\tRemoved all .h rules.\n+\t* headers.txt: New file.\n+\t* java/io/PrintStream.java (PrintStream): Implement Appendable.\n+\t* java/lang/Class.java: Genericized.\n+\t(getEnumConstants): New method.\n+\t(isEnum): Likewise.\n+\t(isSynthetic): Likewise.\n+\t(isAnnotation): Likewise.\n+\t* java/lang/reflect/Constructor.java (getDeclaringClass,\n+\tgetTypeParameters, declaringClass): Genericized.\n+\t* java/lang/reflect/Method.java (invoke): Now varargs.\n+\t* java/lang/ref/Reference.java (Reference): Imported genericized\n+\tversion from Classpath.\n+\t(get): Now native.\n+\t* java/lang/ref/natReference.cc (get): New method.\n+\t* java/lang/ProcessBuilder.java: New file.\n+\t* java/lang/System.java (environmentMap): New field.\n+\t(clearProperty): New method.\n+\t(getenv): Likewise.\n+\t(EnvironmentCollection): New class.\n+\t(EnvironmentMap): Likewise.\n+\t(EnvironmentSet): Likewise.\n+\t* java/lang/StringBuilder.java (StringBuilder): Implements\n+\tAppendable.\n+\t* gnu/classpath/SystemProperties.java (remove): New method.\n+\n+2006-06-23  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.loader/TestLeak.java: Don't use wildcard\n+\timport for java.lang.reflect.\n+\n+2006-06-21  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/classpath/natSystemProperties.cc (insertSystemProperties):\n+\tSet java.class.version to 49.\n+\n+2006-06-21  Tom Tromey  <tromey@redhat.com>\n+\n+\t* link.cc (resolve_pool_entry): Initialize field's declaring\n+\tclass, not its qualifying class.\n+\n+2006-06-21  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jacks/jacks.xfail: Updated for ecj.\n+\n+2006-06-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.compile/Where.xfail: Now 'no-link'.\n+\n+2006-06-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/java/lang/natMainThread.cc (call_main): Link main class.\n+\n+2006-06-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/lib/libjava.exp (test_libjava): Don't compile via\n+\tbytecode.  Run BC compilations from source.\n+\n+2006-06-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.lang/TestProxy.java: Don't use wildcard\n+\timports for java.lang.reflect.\n+\n+2006-06-13  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.lang/stringconst.xfail: Removed.\n+\t* testsuite/libjava.lang/ArrayStore2.xfail: Removed.\n+\n+2006-06-08  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* Makefile.am (libgcj_la_LIBADD): Add Object.lo and Class.lo.\n+\t(java/lang/Object.lo): New target.\n+\t(java/lang/Class.lo): Likewise.\n+\t* scripts/makemake.tcl (emit_package_rule): Add special case for\n+\tObject and Class.\n+\n+2006-06-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (gcj_dbtool_DEPENDENCIES): Add gcj_dbtool.lo.\n+\n+2006-06-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (nat_headers): Don't list Main.h.\n+\t(generic_header_files): Likewise.\n+\n+2006-06-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.loader/TestLeak.java (MyLoader): Now static.\n+\t* testsuite/libjava.jacks/jacks.exp (gcj_jacks_write): Use -w.\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Add -w.\n+\t* testsuite/libjava.compile/G19990210_2.java: Removed.\n+\t* testsuite/libjava.compile/PR208.java: Removed.\n+\t* testsuite/libjava.compile/PR208.xfail: Removed.\n+\t* testsuite/libjava.compile/support/Case.java: Removed.\n+\t* testsuite/libjava.compile/Case.java: Removed.\n+\n+2006-06-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* Makefile.am (gcj_dbtool_LDADD): Add\n+\tgnu-gcj-tools-gcj_dbtool.lo.\n+\t(gcj_dbtool_SOURCES): Updated.\n+\t(EXTRA_libgcj_la_SOURCES): New macro.\n+\t* scripts/makemake.tcl (emit_package_rule): Compile class files\n+\tfrom the package.\n+\t(gcj_dbtool/Main.java, Class.java, Object.java): Removed\n+\tpackage_map settings.\n+\t(emit_package_rule): Special case gnu.gcj.tools.gcj_dbtool.\n+\n+2006-06-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Class.java (getClassLoaderInternal): Now native.\n+\n 2006-12-20  Adam Megacz <megacz@cs.berkeley.edu>\n \n        * configure.ac: add $built_gcc_dir to $GCJH and $GCJ when"}, {"sha": "3c07e5ab4d99c39c205db69f68406c3d23884159", "filename": "libjava/HACKING", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FHACKING", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FHACKING", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FHACKING?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -62,9 +62,14 @@ To import a new release:\n   scripts/makemake.tcl > sources.am\n   automake\n - Build, fix, till everything works.\n+  Be sure to update gnu/classpath/Configuration.java to reflect\n+    the new version\n   Possibly update the gcj/javaprims.h file with scripts/classes.pl\n   (See below, it can only be done after the first source->bytecode\n    pass has finished.)\n+  You will need to configure with --enable-maintainer-mode and you\n+  will need to update the .class files and generated CNI header files in\n+  your working tree\n \n Over time we plan to remove as many of the remaining divergences as\n possible."}, {"sha": "9f11234e04e5d4b37c2d3bec6efc809fa0f7cd45", "filename": "libjava/Makefile.am", "status": "modified", "additions": 239, "deletions": 208, "changes": 447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -29,6 +29,8 @@ target_noncanonical = @target_noncanonical@\n # This is required by TL_AC_GXX_INCLUDE_DIR.\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)\n \n+libexecsubdir = $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n+\n ##\n ## What gets installed, and where.\n ##\n@@ -50,6 +52,9 @@ pkgconfigdir = $(libdir)/pkgconfig\n \n jardir = $(datadir)/java\n jar_DATA = libgcj-$(gcc_version).jar libgcj-tools-$(gcc_version).jar\n+if INSTALL_ECJ_JAR\n+jar_DATA += $(ECJ_BUILD_JAR)\n+endif\n \n if JAVA_HOME_SET\n JAVA_HOME_DIR = $(JAVA_HOME)\n@@ -67,7 +72,8 @@ db_pathtail = gcj-$(gcc_version)/$(db_name)\n ## For now, only on native systems.  FIXME.\n if NATIVE\n bin_PROGRAMS = jv-convert gij grmic grmiregistry gcj-dbtool \\\n-\tgappletviewer gjarsigner gkeytool\n+\tgappletviewer gjarsigner gkeytool gjar gjavah gnative2ascii \\\n+\tgorbd grmid gserialver gtnameserv\n \n ## It is convenient to actually build and install the default database\n ## when gcj-dbtool is available.\n@@ -76,6 +82,13 @@ endif\n \n bin_SCRIPTS = addr2name.awk\n \n+if BUILD_ECJ1\n+## We build ecjx and not ecj1 because in one mode, ecjx will not work\n+## until after 'make install', and we don't want it to be picked up in\n+## the build tree by gcj via a -B option.\n+libexecsub_PROGRAMS = ecjx\n+endif\n+\n ## ################################################################\n \n ##\n@@ -94,6 +107,8 @@ extra_ldflags_libjava = @extra_ldflags_libjava@\n \n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n           $(LDFLAGS) -o $@\n+GCJ_FOR_ECJX = @GCJ_FOR_ECJX@\n+GCJ_FOR_ECJX_LINK = $(GCJ_FOR_ECJX) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) \\\n           $(LDFLAGS) $(extra_ldflags_libjava) -o $@\n \n@@ -154,7 +169,7 @@ AM_CPPFLAGS = -I$(top_srcdir) \\\n \t$(GCINCS) $(THREADINCS) $(INCLTDL) \\\n \t$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS)\n \n-BOOTCLASSPATH = $(here)/classpath/lib\n+BOOTCLASSPATH = $(srcdir)/classpath/lib\n \n ## ################################################################\n \n@@ -172,7 +187,6 @@ libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n \n libgcj_la_SOURCES = prims.cc jni.cc jvmti.cc exception.cc stacktrace.cc \\\n \tlink.cc defineclass.cc interpret.cc verify.cc \\\n-\tjava/lang/Class.java java/lang/Object.java \\\n \t$(nat_source_files)\n \n if USING_BOEHMGC\n@@ -219,17 +233,28 @@ libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(THREADLIBS) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n libgcj_la_LIBADD = \\\n \tclasspath/native/fdlibm/libfdlibm.la \\\n+\tjava/lang/Object.lo \\\n+\tjava/lang/Class.lo \\\n+\tjava/process-$(PLATFORM).lo \\\n \t$(all_packages_source_files:.list=.lo) \\\n \t$(bc_objects) \\\n \t$(propertyo_files) \\\n-\t$(LIBFFI) $(ZLIBS) $(GCLIBS)\n+\t$(LIBMAGIC) $(LIBFFI) $(ZLIBS) $(GCLIBS)\n libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n+\tjava/lang/Object.lo \\\n+\tjava/lang/Class.lo \\\n+\tjava/process-$(PLATFORM).lo \\\n \t$(all_packages_source_files:.list=.lo) \\\n \t$(LIBLTDL) $(libgcj_la_LIBADD)\n libgcj_la_LINK = $(LIBLINK)\n \n-libgcj_tools_la_SOURCES = classpath/tools/tools.jar\n-libgcj_tools_la_GCJFLAGS = $(AM_GCJFLAGS) -findirect-dispatch -fno-indirect-classes\n+## A hack to make sure the various gcj-related macros, like\n+## LTGCJCOMPILE, are defined by automake.  This is never actually\n+## compiled.\n+EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n+\n+libgcj_tools_la_SOURCES = classpath/tools/tools.zip\n+libgcj_tools_la_GCJFLAGS = $(AM_GCJFLAGS) -findirect-dispatch -fno-indirect-classes  -fsource-filename=$(here)/classpath/tools/all-classes.lst\n libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec\n@@ -303,10 +328,12 @@ $(propertyo_files): %.lo: classpath/resource/%\n \t$(LTGCJCOMPILE) -o $@ -c $< -Wc,--resource,$(@:.lo=)\n \n libgcj-$(gcc_version).jar: classpath/lib/compile-classes\n-\tcd classpath/lib; $(JAR) -cfM \\\n-\t    ../../libgcj-$(gcc_version).jar gnu java javax org\n+## Note that this now omits the property files.\n+## It doesn't matter since we don't use the jar at runtime.\n+\there=`pwd`; cd $(srcdir)/classpath/lib; $(JAR) -cfM \\\n+\t    $$here/libgcj-$(gcc_version).jar gnu java javax org sun\n \n-libgcj-tools-$(gcc_version).jar: classpath/tools/tools.jar\n+libgcj-tools-$(gcc_version).jar: classpath/tools/tools.zip\n \tcp $< $@\n \n CLEANFILES = libgcj-$(gcc_version).jar libgcj-tools-$(gcc_version).jar\n@@ -339,7 +366,13 @@ lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPEND\n ## Compiling a list of java sources to a single .o.\n \n %.lo: %.list\n-\t$(LTGCJCOMPILE) -c -o $@ -MT $@ -MD -MP -MF $(basename $@).deps @$<\n+\t$(LTGCJCOMPILE) -c -o $@ -fsource-filename=$(here)/classpath/lib/classes -MT $@ -MD -MP -MF $(basename $@).deps @$<\n+\n+java/lang/Object.lo: classpath/lib/java/lang/Object.class\n+\t$(LTGCJCOMPILE) -c -o $@ -fsource-filename=$(srcdir)/$(basename $@).java $<\n+\n+java/lang/Class.lo: classpath/lib/java/lang/Class.class\n+\t$(LTGCJCOMPILE) -c -o $@  -fsource-filename=$(srcdir)/$(basename $@).java $<\n \n ## ################################################################\n \n@@ -358,13 +391,18 @@ omitted_headers = java/lang/ClassLoader.h java/lang/Thread.h \\\n \tjava/lang/reflect/Field.h java/lang/reflect/Method.h \\\n \tjava/lang/reflect/Proxy.h gnu/gcj/runtime/ExtensionClassLoader.h\n \n-generic_header_files = $(filter-out $(omitted_headers),$(ordinary_header_files) $(xlib_nat_headers)) \\\n-\tgnu/gcj/tools/gcj_dbtool/Main.h\n+generic_header_files = $(ordinary_header_files) $(xlib_nat_headers)\n+\n+MYGCJH = gjavah\n+\n+$(generic_header_files): gcjh.stamp\n \n-$(generic_header_files): %.h: classpath/lib/%.class\n-\tname=`echo $< | sed -e 's/\\.class$$//' -e 's,classpath/lib/,,'`; \\\n-\t$(mkinstalldirs) `dirname $$name`; \\\n-\t$(GCJH) -d . -classpath '' -bootclasspath classpath/lib $$name\n+gcjh.stamp: classpath/lib/compile-classes\n+if JAVA_MAINTAINER_MODE\n+\t$(MYGCJH) --cni --all $(srcdir)/classpath/lib \\\n+\t    --cmdfile=$(srcdir)/headers.txt -d $(srcdir) --force\n+endif\n+\techo > gcjh.stamp\n \n inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tjava/io/ObjectInputStream$$GetField.h \\\n@@ -376,170 +414,42 @@ inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tgnu/java/net/PlainSocketImpl$$SocketInputStream.h \\\n \tgnu/java/net/PlainSocketImpl$$SocketOutputStream.h \\\n \tgnu/java/nio/PipeImpl$$SinkChannelImpl.h \\\n-\tgnu/java/nio/PipeImpl$$SourceChannelImpl.h \\\n-\t$(PLATFORM_INNER_NAT_HDRS)\n+\tgnu/java/nio/PipeImpl$$SourceChannelImpl.h\n \n-nat_headers = $(ordinary_header_files) $(inner_nat_headers) \\\n-\tgnu/gcj/tools/gcj_dbtool/Main.h\n+nat_headers = $(ordinary_header_files) $(inner_nat_headers)\n nat_headers_install = $(ordinary_header_files)\n \n xlib_nat_headers = $(gnu_awt_xlib_header_files) $(gnu_gcj_xlib_header_files)\n \n-java/lang/ClassLoader.h: classpath/lib/java/lang/ClassLoader.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t\t-prepend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n-\t\t-prepend 'void _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);' \\\n-\t\t-friend 'jclass (::_Jv_FindClass) (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n-\t\t-friend 'void ::_Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);' \\\n-\t\tjava/lang/ClassLoader\n-\n-java/lang/Thread.h: classpath/lib/java/lang/Thread.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t\t-prepend 'class _Jv_JNIEnv;' \\\n-\t\t-prepend 'class _Jv_Thread_t;' \\\n-\t\t-prepend '#define _JV_NOT_OWNER 1' \\\n-\t\t-prepend '#define _JV_INTERRUPTED 2' \\\n-\t\t-prepend '_Jv_JNIEnv * _Jv_GetCurrentJNIEnv ();' \\\n-\t\t-prepend 'void _Jv_SetCurrentJNIEnv (_Jv_JNIEnv *env);' \\\n-\t\t-prepend 'void _Jv_ThreadRun (java::lang::Thread* thread);' \\\n-\t\t-prepend 'jint _Jv_AttachCurrentThread(java::lang::Thread* thread);' \\\n-\t\t-prepend 'java::lang::Thread* _Jv_AttachCurrentThread (jstring name, java::lang::ThreadGroup* group);' \\\n-\t\t-prepend 'java::lang::Thread* _Jv_AttachCurrentThreadAsDaemon (jstring name, java::lang::ThreadGroup* group);' \\\n-\t\t-prepend 'jint _Jv_DetachCurrentThread ();' \\\n-\t        -prepend '_Jv_Thread_t* _Jv_ThreadGetData (java::lang::Thread* thread);' \\\n-\t\t-friend '_Jv_JNIEnv * ::_Jv_GetCurrentJNIEnv ();' \\\n-\t\t-friend 'void ::_Jv_SetCurrentJNIEnv (_Jv_JNIEnv *env);' \\\n-\t\t-friend 'void ::_Jv_ThreadRun (java::lang::Thread* thread);' \\\n-\t\t-friend 'jint (::_Jv_AttachCurrentThread) (java::lang::Thread* thread);' \\\n-\t\t-friend 'java::lang::Thread* ::_Jv_AttachCurrentThread (jstring name, java::lang::ThreadGroup* group);' \\\n-\t\t-friend 'java::lang::Thread* ::_Jv_AttachCurrentThreadAsDaemon (jstring name, java::lang::ThreadGroup* group);' \\\n-\t\t-friend 'jint (::_Jv_DetachCurrentThread) ();' \\\n-\t        -friend '_Jv_Thread_t* ::_Jv_ThreadGetData (java::lang::Thread* thread);' \\\n-\t\tjava/lang/Thread\n-\n-java/lang/String.h: classpath/lib/java/lang/String.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t    -prepend 'jchar* _Jv_GetStringChars (jstring str);' \\\n-\t    -prepend 'jstring* _Jv_StringFindSlot (jchar*, jint, jint);' \\\n-\t    -prepend 'jstring* _Jv_StringGetSlot (jstring);' \\\n-\t    -prepend 'jstring _Jv_NewStringUtf8Const (_Jv_Utf8Const* str);' \\\n-\t    -prepend 'jstring _Jv_NewStringLatin1 (const char*, jsize);' \\\n-\t    -prepend 'jstring _Jv_AllocString (jsize);' \\\n-\t    -friend 'jchar* ::_Jv_GetStringChars (jstring str);' \\\n-\t    -friend 'jstring* ::_Jv_StringFindSlot (jchar*, jint, jint);' \\\n-\t    -friend 'jstring* ::_Jv_StringGetSlot (jstring);' \\\n-\t    -friend 'jstring (::_Jv_NewStringUtf8Const) (_Jv_Utf8Const* str);' \\\n-\t    -friend 'jstring (::_Jv_NewStringLatin1) (const char*, jsize);' \\\n-\t    -friend 'jstring (::_Jv_AllocString) (jsize);' \\\n-\t    java/lang/String\n-\n-java/lang/reflect/Constructor.h: classpath/lib/java/lang/reflect/Constructor.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t    -prepend 'jmethodID _Jv_FromReflectedConstructor (java::lang::reflect::Constructor *);' \\\n-\t    -prepend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n-\t    -friend 'jmethodID (::_Jv_FromReflectedConstructor) (java::lang::reflect::Constructor *);' \\\n-\t    -friend 'jobject (::_Jv_JNI_ToReflectedMethod) (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n-\t    -friend 'class java::lang::Class;' \\\n-\t    java/lang/reflect/Constructor\n-\n-java/lang/reflect/Field.h: classpath/lib/java/lang/reflect/Field.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t    -prepend 'jfieldID _Jv_FromReflectedField (java::lang::reflect::Field *);' \\\n-\t    -prepend 'jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv*, jclass, jfieldID, jboolean);' \\\n-\t    -friend 'jfieldID (::_Jv_FromReflectedField) (java::lang::reflect::Field *);' \\\n-\t    -friend 'jobject (::_Jv_JNI_ToReflectedField) (_Jv_JNIEnv*, jclass, jfieldID, jboolean);' \\\n-\t    -friend 'class java::lang::Class;' \\\n-\t    java/lang/reflect/Field\n-\n-java/lang/reflect/Method.h: classpath/lib/java/lang/reflect/Method.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t    -prepend 'jmethodID _Jv_FromReflectedMethod (java::lang::reflect::Method *);' \\\n-\t    -prepend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n-\t    -friend 'jmethodID (::_Jv_FromReflectedMethod) (java::lang::reflect::Method *);' \\\n-\t    -friend 'jobject (::_Jv_JNI_ToReflectedMethod) (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n-\t    -friend 'class java::lang::Class;' \\\n-\t    -friend 'class java::io::ObjectInputStream;' \\\n-\t    java/lang/reflect/Method\n-\n-java/lang/reflect/Proxy.h: classpath/lib/java/lang/reflect/Proxy.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t    java/lang/reflect/Proxy\n-\n-java/lang/reflect/Proxy$$ProxyData.h: classpath/lib/java/lang/reflect/Proxy.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/lang/reflect/Proxy$$ProxyData'\n-\n-java/lang/reflect/Proxy$$ProxyType.h: classpath/lib/java/lang/reflect/Proxy.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/lang/reflect/Proxy$$ProxyType'\n-\n-gnu/gcj/runtime/ExtensionClassLoader.h: classpath/lib/gnu/gcj/runtime/ExtensionClassLoader.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t    -friend 'class ::java::lang::ClassLoader;' \\\n-\t    gnu/gcj/runtime/ExtensionClassLoader\n-\n-java/io/ObjectInputStream$$GetField.h: classpath/lib/java/io/ObjectInputStream.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/io/ObjectInputStream$$GetField'\n-\n-java/io/ObjectOutputStream$$PutField.h: classpath/lib/java/io/ObjectOutputStream.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/io/ObjectOutputStream$$PutField'\n-\n-java/nio/DirectByteBufferImpl$$ReadWrite.h: classpath/lib/java/nio/DirectByteBufferImpl.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/nio/DirectByteBufferImpl$$ReadWrite'\n-\n-java/nio/channels/Pipe$$SinkChannel.h: classpath/lib/java/nio/channels/Pipe.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/nio/channels/Pipe$$SinkChannel'\n-\n-java/nio/channels/Pipe$$SourceChannel.h: classpath/lib/java/nio/channels/Pipe.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/nio/channels/Pipe$$SourceChannel'\n-\n-gnu/java/net/PlainSocketImpl$$SocketInputStream.h: classpath/lib/gnu/java/net/PlainSocketImpl.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'gnu/java/net/PlainSocketImpl$$SocketInputStream'\n-\n-gnu/java/net/PlainSocketImpl$$SocketOutputStream.h: classpath/lib/gnu/java/net/PlainSocketImpl.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'gnu/java/net/PlainSocketImpl$$SocketOutputStream'\n-\n-gnu/java/nio/PipeImpl$$SinkChannelImpl.h: classpath/lib/gnu/java/nio/PipeImpl.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'gnu/java/nio/PipeImpl$$SinkChannelImpl'\n-\n-gnu/java/nio/PipeImpl$$SourceChannelImpl.h: classpath/lib/gnu/java/nio/PipeImpl.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'gnu/java/nio/PipeImpl$$SourceChannelImpl'\n-\n-## Only used by PosixProcess.java\n-java/lang/ConcreteProcess$$ProcessManager.h: classpath/lib/java/lang/ConcreteProcess.class\n-\t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n-\t'java/lang/ConcreteProcess$$ProcessManager'\n-\n ## Headers we maintain by hand and which we want to install.\n extra_headers = java/lang/Object.h java/lang/Class.h\n \n $(extra_headers) $(srcdir)/java/lang/Object.h $(srcdir)/java/lang/Class.h:\n \t@:\n \n+install-exec-hook: install-toolexeclibLTLIBRARIES install-libexecsubPROGRAMS\n ## Support for libgcj_bc: dummy shared library used only at link-time.\n if USE_LIBGCJ_BC\n ## Install libgcj_bc dummy lib in the target directory. We also need to delete\n ## libtool's .la file, this prevents libtool resetting the lib again \n ## later.\n-install-exec-hook: install-toolexeclibLTLIBRARIES\n \t@echo Installing dummy lib libgcj_bc.so.1.0.0; \\\n-\trm $(DESTDIR)$(toolexeclibdir)/libgcj_bc.so; \\\n-\tmv $(DESTDIR)$(toolexeclibdir)/libgcj_bc.so.1.0.0 $(DESTDIR)$(toolexeclibdir)/libgcj_bc.so; \\\n+\trm $(toolexeclibdir)/libgcj_bc.so; \\\n+\tmv $(toolexeclibdir)/libgcj_bc.so.1.0.0 $(toolexeclibdir)/libgcj_bc.so; \\\n \t$(libgcj_bc_dummy_LINK) -xc /dev/null -Wl,-soname,libgcj_bc.so.1 \\\n-\t-o $(DESTDIR)$(toolexeclibdir)/libgcj_bc.so.1.0.0 -lgcj || exit; \\\n-\trm $(DESTDIR)$(toolexeclibdir)/libgcj_bc.so.1; \\\n-\t$(LN_S) libgcj_bc.so.1.0.0 $(DESTDIR)$(toolexeclibdir)/libgcj_bc.so.1; \\\n-\trm $(DESTDIR)$(toolexeclibdir)/libgcj_bc.la;\n+\t-o $(toolexeclibdir)/libgcj_bc.so.1.0.0 -lgcj || exit; \\\n+\trm $(toolexeclibdir)/libgcj_bc.so.1; \\\n+\t$(LN_S) libgcj_bc.so.1.0.0 $(toolexeclibdir)/libgcj_bc.so.1; \\\n+\trm $(toolexeclibdir)/libgcj_bc.la;\n endif\n+if BUILD_ECJ1\n+if NATIVE\n+\tmv $(DESTDIR)$(libexecsubdir)/ecjx$(EXEEXT) $(DESTDIR)$(libexecsubdir)/ecj1$(host_exeext)\n+else !NATIVE\n+## Undo the prepending of the target prefix\n+\tmv $(DESTDIR)$(libexecsubdir)/$(target_noncanonical)-ecjx$(EXEEXT) $(DESTDIR)$(libexecsubdir)/ecj1$(host_exeext)\n+endif !NATIVE\n+endif BUILD_ECJ1\n \n ## Install the headers.  It is fairly ugly that we have to do this by\n ## hand.\n@@ -564,16 +474,16 @@ install-data-local:\n \tdone\n \t-@rm -f tmp-ilist\n ## Install inner class headers.\n-\t$(INSTALL_DATA) 'java/io/ObjectOutputStream$$PutField.h' $(DESTDIR)$(gxx_include_dir)/java/io/\n-\t$(INSTALL_DATA) 'java/io/ObjectInputStream$$GetField.h' $(DESTDIR)$(gxx_include_dir)/java/io/\n-\t$(INSTALL_DATA) 'java/nio/channels/Pipe$$SinkChannel.h' $(DESTDIR)$(gxx_include_dir)/java/nio/channels/\n-\t$(INSTALL_DATA) 'java/nio/channels/Pipe$$SourceChannel.h' $(DESTDIR)$(gxx_include_dir)/java/nio/channels/\n-\t$(INSTALL_DATA) 'java/lang/reflect/Proxy$$ProxyData.h' $(DESTDIR)$(gxx_include_dir)/java/lang/reflect/\n-\t$(INSTALL_DATA) 'java/lang/reflect/Proxy$$ProxyType.h' $(DESTDIR)$(gxx_include_dir)/java/lang/reflect/\n-\t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketInputStream.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/net/\n-\t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketOutputStream.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/net/\n-\t$(INSTALL_DATA) 'gnu/java/nio/PipeImpl$$SinkChannelImpl.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/nio/\n-\t$(INSTALL_DATA) 'gnu/java/nio/PipeImpl$$SourceChannelImpl.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/nio/\n+\t$(INSTALL_DATA) $(srcdir)/'java/io/ObjectOutputStream$$PutField.h' $(DESTDIR)$(gxx_include_dir)/java/io/\n+\t$(INSTALL_DATA) $(srcdir)/'java/io/ObjectInputStream$$GetField.h' $(DESTDIR)$(gxx_include_dir)/java/io/\n+\t$(INSTALL_DATA) $(srcdir)/'java/nio/channels/Pipe$$SinkChannel.h' $(DESTDIR)$(gxx_include_dir)/java/nio/channels/\n+\t$(INSTALL_DATA) $(srcdir)/'java/nio/channels/Pipe$$SourceChannel.h' $(DESTDIR)$(gxx_include_dir)/java/nio/channels/\n+\t$(INSTALL_DATA) $(srcdir)/'java/lang/reflect/Proxy$$ProxyData.h' $(DESTDIR)$(gxx_include_dir)/java/lang/reflect/\n+\t$(INSTALL_DATA) $(srcdir)/'java/lang/reflect/Proxy$$ProxyType.h' $(DESTDIR)$(gxx_include_dir)/java/lang/reflect/\n+\t$(INSTALL_DATA) $(srcdir)/'gnu/java/net/PlainSocketImpl$$SocketInputStream.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/net/\n+\t$(INSTALL_DATA) $(srcdir)/'gnu/java/net/PlainSocketImpl$$SocketOutputStream.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/net/\n+\t$(INSTALL_DATA) $(srcdir)/'gnu/java/nio/PipeImpl$$SinkChannelImpl.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/nio/\n+\t$(INSTALL_DATA) $(srcdir)/'gnu/java/nio/PipeImpl$$SourceChannelImpl.h' $(DESTDIR)$(gxx_include_dir)/gnu/java/nio/\n ## Don't install java/nio/DirectByteBufferImpl$$ReadWrite.h here. It's for internal use only.\n \n \n@@ -709,7 +619,6 @@ jv_convert_LDADD = -L$(here)/.libs libgcj.la\n jv_convert_DEPENDENCIES = libgcj.la libgcj.spec\n \n gcj_dbtool_SOURCES = \\\n-gnu/gcj/tools/gcj_dbtool/Main.java \\\n gnu/gcj/tools/gcj_dbtool/natMain.cc\n \n ## We need -nodefaultlibs because we want to avoid gcj's `-lgcj'.  We\n@@ -725,10 +634,10 @@ gcj_dbtool_LINK = $(GCJLINK)\n ## searched before the build-tree ones, and we'd get errors because of\n ## different libraries with the same SONAME from picky linkers such as\n ## Solaris'.  FIXME: should be _libs on some systems.\n-gcj_dbtool_LDADD = -L$(here)/.libs libgcj.la\n+gcj_dbtool_LDADD = gnu/gcj/tools/gcj_dbtool.lo -L$(here)/.libs libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n-gcj_dbtool_DEPENDENCIES = libgcj.la libgcj.spec\n+gcj_dbtool_DEPENDENCIES = gnu/gcj/tools/gcj_dbtool.lo libgcj.la libgcj.spec\n \n gij_SOURCES = \n ## We need -nodefaultlibs because we want to avoid gcj's `-lgcj'.  We\n@@ -743,27 +652,38 @@ gij_LDADD = -L$(here)/.libs libgij.la\n ## linking this program.\n gij_DEPENDENCIES = libgij.la\n \n-## This is a dummy definition.\n-grmic_SOURCES =\n-grmic_LDFLAGS = --main=gnu.java.rmi.rmic.RMIC \\\n-\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n-grmic_LINK = $(GCJLINK)\n-## See jv_convert_LDADD.\n-grmic_LDADD = -L$(here)/.libs libgcj.la\n-## Depend on the spec file to make sure it is up to date before\n-## linking this program.\n-grmic_DEPENDENCIES = libgcj.la libgcj.spec\n+## Build an ecjx from a .jar.\n+ecjx_SOURCES =\n+## We use the BC ABI here so that we don't need to compile ecj.jar.\n+## Hopefully the user has compiled it into his system .db.\n+## However, even if not it will run reasonably quickly.\n \n-## This is a dummy definition.\n-grmiregistry_SOURCES =\n-grmiregistry_LDFLAGS = --main=gnu.java.rmi.registry.RegistryImpl \\\n-\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n-grmiregistry_LINK = $(GCJLINK)\n-## See jv_convert_LDADD.\n-grmiregistry_LDADD = -L$(here)/.libs libgcj.la\n-## Depend on the spec file to make sure it is up to date before\n-## linking this program.\n-grmiregistry_DEPENDENCIES = libgcj.la libgcj.spec\n+ECJX_BASE_FLAGS = -findirect-dispatch \\\n+\t--main=org.eclipse.jdt.internal.compiler.batch.GCCMain\n+\n+if NATIVE\n+\n+ecjx_LINK = $(GCJLINK)\n+\n+if ENABLE_SHARED\n+## Use ecj.jar at runtime.\n+ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) -Djava.class.path=$(ECJ_JAR)\n+else !ENABLE_SHARED\n+## Use ecj.jar at compile time.\n+ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n+endif !ENABLE_SHARED\n+\n+ecjx_LDADD = -L$(here)/.libs libgcj.la\n+ecjx_DEPENDENCIES = libgcj.la libgcj.spec\n+\n+else !NATIVE\n+\n+ecjx_LINK = $(GCJ_FOR_ECJX_LINK)\n+ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n+ecjx_LDADD = \n+ecjx_DEPENDENCIES = \n+\n+endif !NATIVE\n \n ## This is a dummy definition.\n gappletviewer_SOURCES =\n@@ -772,8 +692,6 @@ gappletviewer_LDFLAGS = --main=gnu.classpath.tools.appletviewer.Main \\\n gappletviewer_LINK = $(GCJLINK)\n ## See jv_convert_LDADD.\n gappletviewer_LDADD = -L$(here)/.libs libgcj-tools.la\n-## Depend on the spec file to make sure it is up to date before\n-## linking this program.\n gappletviewer_DEPENDENCIES = libgcj-tools.la\n \n ## This is a dummy definition.\n@@ -783,8 +701,6 @@ gjarsigner_LDFLAGS = --main=gnu.classpath.tools.jarsigner.Main \\\n gjarsigner_LINK = $(GCJLINK)\n ## See jv_convert_LDADD.\n gjarsigner_LDADD = -L$(here)/.libs libgcj-tools.la\n-## Depend on the spec file to make sure it is up to date before\n-## linking this program.\n gjarsigner_DEPENDENCIES = libgcj-tools.la\n \n ## This is a dummy definition.\n@@ -794,18 +710,99 @@ gkeytool_LDFLAGS = --main=gnu.classpath.tools.keytool.Main \\\n gkeytool_LINK = $(GCJLINK)\n ## See jv_convert_LDADD.\n gkeytool_LDADD = -L$(here)/.libs libgcj-tools.la\n-## Depend on the spec file to make sure it is up to date before\n-## linking this program.\n gkeytool_DEPENDENCIES = libgcj-tools.la\n \n+## This is a dummy definition.\n+gjar_SOURCES =\n+gjar_LDFLAGS = --main=gnu.classpath.tools.jar.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+gjar_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gjar_LDADD = -L$(here)/.libs libgcj-tools.la\n+gjar_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+gjavah_SOURCES =\n+gjavah_LDFLAGS = --main=gnu.classpath.tools.javah.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+gjavah_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gjavah_LDADD = -L$(here)/.libs libgcj-tools.la\n+gjavah_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+gnative2ascii_SOURCES =\n+gnative2ascii_LDFLAGS = --main=gnu.classpath.tools.native2ascii.Native2ASCII \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+gnative2ascii_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gnative2ascii_LDADD = -L$(here)/.libs libgcj-tools.la\n+gnative2ascii_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+gorbd_SOURCES =\n+gorbd_LDFLAGS = --main=gnu.classpath.tools.orbd.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+gorbd_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gorbd_LDADD = -L$(here)/.libs libgcj-tools.la\n+gorbd_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+grmid_SOURCES =\n+grmid_LDFLAGS = --main=gnu.classpath.tools.rmid.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+grmid_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+grmid_LDADD = -L$(here)/.libs libgcj-tools.la\n+grmid_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+gserialver_SOURCES =\n+gserialver_LDFLAGS = --main=gnu.classpath.tools.serialver.SerialVer \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+gserialver_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gserialver_LDADD = -L$(here)/.libs libgcj-tools.la\n+gserialver_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+gtnameserv_SOURCES =\n+gtnameserv_LDFLAGS = --main=gnu.classpath.tools.tnameserv.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+gtnameserv_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gtnameserv_LDADD = -L$(here)/.libs libgcj-tools.la\n+gtnameserv_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+grmic_SOURCES =\n+grmic_LDFLAGS = --main=gnu.classpath.tools.rmic.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+grmic_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+grmic_LDADD = -L$(here)/.libs libgcj-tools.la\n+grmic_DEPENDENCIES = libgcj-tools.la\n+\n+## This is a dummy definition.\n+grmiregistry_SOURCES =\n+grmiregistry_LDFLAGS = --main=gnu.classpath.tools.rmiregistry.Main \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS)\n+grmiregistry_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+grmiregistry_LDADD = -L$(here)/.libs libgcj-tools.la\n+grmiregistry_DEPENDENCIES = libgcj-tools.la\n+\n ## ################################################################\n \n ## This lists all the C++ source files in subdirectories.\n nat_source_files = \\\n-gnu/classpath/natSystemProperties.cc \\\n gnu/classpath/jdwp/natVMFrame.cc \\\n gnu/classpath/jdwp/natVMMethod.cc \\\n gnu/classpath/jdwp/natVMVirtualMachine.cc \\\n+gnu/classpath/natConfiguration.cc \\\n+gnu/classpath/natSystemProperties.cc \\\n+gnu/classpath/natVMStackWalker.cc \\\n gnu/gcj/natCore.cc \\\n gnu/gcj/convert/JIS0208_to_Unicode.cc \\\n gnu/gcj/convert/JIS0212_to_Unicode.cc \\\n@@ -824,16 +821,26 @@ gnu/gcj/runtime/natSystemClassLoader.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n gnu/gcj/util/natDebug.cc \\\n gnu/java/lang/natMainThread.cc \\\n+gnu/java/lang/management/natVMClassLoadingMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMCompilationMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMGarbageCollectorMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMMemoryMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMMemoryManagerMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMMemoryPoolMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMRuntimeMXBeanImpl.cc \\\n+gnu/java/lang/management/natVMThreadMXBeanImpl.cc \\\n gnu/java/net/natPlainDatagramSocketImpl.cc \\\n gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/net/protocol/core/natCoreInputStream.cc \\\n gnu/java/nio/natPipeImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n gnu/java/nio/natNIOServerSocket.cc \\\n+gnu/java/nio/natVMChannel.cc \\\n gnu/java/nio/channels/natFileChannelImpl.cc \\\n java/io/natFile.cc \\\n java/io/natObjectInputStream.cc \\\n java/io/natVMObjectStreamClass.cc \\\n+java/lang/management/natVMManagementFactory.cc \\\n java/lang/natCharacter.cc \\\n java/lang/natClass.cc \\\n java/lang/natClassLoader.cc \\\n@@ -848,27 +855,29 @@ java/lang/natStringBuffer.cc \\\n java/lang/natStringBuilder.cc \\\n java/lang/natSystem.cc \\\n java/lang/natThread.cc \\\n+java/lang/natThreadLocal.cc \\\n java/lang/natVMClassLoader.cc \\\n-java/lang/natVMSecurityManager.cc \\\n java/lang/natVMThrowable.cc \\\n java/lang/ref/natReference.cc \\\n java/lang/reflect/natArray.cc \\\n java/lang/reflect/natConstructor.cc \\\n java/lang/reflect/natField.cc \\\n java/lang/reflect/natMethod.cc \\\n-java/net/natVMNetworkInterface.cc \\\n+java/lang/reflect/natVMProxy.cc \\\n java/net/natVMInetAddress.cc \\\n-java/net/natURLClassLoader.cc \\\n+java/net/natVMNetworkInterface.cc \\\n+java/net/natVMURLConnection.cc \\\n java/nio/channels/natVMChannels.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/security/natVMAccessController.cc \\\n java/security/natVMAccessControlState.cc \\\n java/text/natCollator.cc \\\n-java/util/natResourceBundle.cc \\\n java/util/natVMTimeZone.cc \\\n+java/util/concurrent/atomic/natAtomicLong.cc \\\n java/util/logging/natLogger.cc \\\n java/util/zip/natDeflater.cc \\\n-java/util/zip/natInflater.cc\n+java/util/zip/natInflater.cc \\\n+sun/misc/natUnsafe.cc\n \n xlib_nat_source_files = \\\n gnu/gcj/xlib/natClip.cc \\\n@@ -905,14 +914,35 @@ src.zip:\n \there=`pwd`; \\\n \t( \\\n \t  ( cd $(srcdir)/classpath; \\\n-\t  find java gnu javax org -name '*.java' -print | \\\n+\t  find java gnu javax org sun -name '*.java' -print | \\\n \t  while read file; do \\\n ## Ugly code to avoid \"echo -C\".  Must separate each entry by a newline\n ## Gross but easy.\n \t    echo \"x-C\" | sed -e 's/^.//'; \\\n \t    echo $(srcdir)/classpath; \\\n \t    echo $$file; \\\n \t  done ); \\\n+\t  ( cd $(srcdir)/classpath/external/sax; \\\n+\t  find org -name '*.java' -print | \\\n+\t  while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir)/classpath/external/sax; \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t  ( cd $(srcdir)/classpath/external/relaxngDatatype; \\\n+\t  find org -name '*.java' -print | \\\n+\t  while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir)/classpath/external/relaxngDatatype; \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t  ( cd $(srcdir)/classpath/external/w3c_dom; \\\n+\t  find org -name '*.java' -print | \\\n+\t  while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir)/classpath/external/w3c_dom; \\\n+\t    echo $$file; \\\n+\t  done ); \\\n ## Now the build tree.\n \t  ( cd classpath; \\\n \t    find gnu java -name '*.java' -print | \\\n@@ -1026,7 +1056,8 @@ AM_MAKEFLAGS = \\\n \t\"NM=$(NM)\" \\\n \t\"PICFLAG=$(PICFLAG)\" \\\n \t\"RANLIB=$(RANLIB)\" \\\n-\t\"DESTDIR=$(DESTDIR)\"\n+\t\"DESTDIR=$(DESTDIR)\" \\\n+\t\"JAR=$(JAR)\"\n \n # Subdir rules rely on $(FLAGS_TO_PASS)\n FLAGS_TO_PASS = $(AM_MAKEFLAGS)"}, {"sha": "e79f3c2638fb0a13df1dd30f3916d3256ac42c1b", "filename": "libjava/Makefile.in", "status": "modified", "additions": 1428, "deletions": 1662, "changes": 3090, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "19d7e53133efa2df663adce19bcd0296be66eaf1", "filename": "libjava/boehm.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -168,6 +168,9 @@ _Jv_MarkObj (void *addr, void *msp, void *msl, void *env)\n       p = (GC_PTR) c->aux_info;\n       MAYBE_MARK (p, mark_stack_ptr, mark_stack_limit, c);\n \n+      p = (GC_PTR) c->reflection_data;\n+      MAYBE_MARK (p, mark_stack_ptr, mark_stack_limit, c);\n+\n       // The class chain must be marked for runtime-allocated Classes\n       // loaded by the bootstrap ClassLoader.\n       p = (GC_PTR) c->next_or_version;"}, {"sha": "2ec939f28d9a20a2b4bf217b936e46aa3990cc47", "filename": "libjava/classpath/.cdtproject", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.cdtproject", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.cdtproject", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.cdtproject?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,3 @@\n+<?xml version='1.0'?>\n+<?eclipse-cdt version=\"2.0\"?>\n+<cdtproject/>\n\\ No newline at end of file"}, {"sha": "ec7cfd1755f556c4beb6ae7fbe2351e098e7638e", "filename": "libjava/classpath/.classpath", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.classpath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.classpath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.classpath?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry excluding=\".externalToolBuilders/|.settings/|ChangeLog*|Makefile*|autom4te.cache/|compat/|config*|doc/|examples/|external/|external/relaxngDatatype/|include/|install/|lib/|m4/|native/|resource/|scripts/|test/|testsuite/|tools/|vm/reference/|tools/external/asm/|gnu/java/awt/peer/x/\" kind=\"src\" path=\"\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile|Makefile.am|Makefile.in|README.txt\" kind=\"src\" path=\"external/relaxngDatatype\"/>\n+\t<classpathentry kind=\"src\" path=\"external/jsr166\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile|Makefile.am|Makefile.in|README|gnu/classpath/tools/javah/|external/asm/\" kind=\"src\" path=\"tools\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile|Makefile.am|Makefile.in\" kind=\"src\" path=\"resource\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile.am\" kind=\"src\" path=\"vm/reference\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile|Makefile.am|Makefile.in|README\" kind=\"src\" path=\"external/sax\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile|Makefile.am|Makefile.in|README\" kind=\"src\" path=\"external/w3c_dom\"/>\n+\t<classpathentry excluding=\".cvsignore|Makefile|Makefile.am|Makefile.in|Makefile.jawt|Makefile.jawt.in|README\" kind=\"src\" path=\"examples\"/>\n+\t<classpathentry kind=\"src\" path=\"tools/external/asm\"/>\n+\t<classpathentry kind=\"output\" path=\"install/share/classpath\"/>\n+</classpath>"}, {"sha": "422f3b45527e78115057ea9cea546719d8c0eecb", "filename": "libjava/classpath/.cvsignore", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,18 @@\n+aclocal.m4\n+compile\n+configure\n+config.guess\n+config.log\n+config.cache\n+config.status\n+config.sub\n+config.h.in\n+config.h\n+libtool\n+ltmain.sh\n+Makefile\n+Makefile.in\n+stamp-h\n+stamp-h.in\n+autom4te*.cache\n+install"}, {"sha": "a6051b111c31b0f07ac981c0e1c084892934bbfa", "filename": "libjava/classpath/.externalToolBuilders/Autogen.launch", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FAutogen.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FAutogen.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FAutogen.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,2 @@\n+<?xml version='1.0'?>\n+<launchConfiguration type='org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType'><stringAttribute key='org.eclipse.debug.core.ATTR_REFRESH_SCOPE' value='${project}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS' value='full,incremental,auto,'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE' value='${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;workingSet&quot; editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/external/sax/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/external/w3c_dom/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/test/java.net/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/test/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/java-nio/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/midi-dssi/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/vmi/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/test/java.util/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/target/generic/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/lib/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/fdlibm/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/target/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/target/Linux/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/examples/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jawt/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/gtk-peer/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/classpath/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/midi-alsa/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/test/java.lang.reflect/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/test/java.io/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/external/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/xmlj/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/compat/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/qt-peer/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/vm/reference/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/java-util/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/test/gnu.java.lang.reflect/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/configure.ac&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/compat/java.net/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/include/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/java-lang/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/java-io/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/doc/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/gnu/test/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/doc/api/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/testsuite/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/java-net/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/vm/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native/jni/Makefile.am&quot; type=&quot;1&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_LOCATION' value='/bin/sh'/><booleanAttribute key='org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED' value='true'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY' value='${build_project}'/><booleanAttribute key='org.eclipse.ui.externaltools.ATTR_BUILDER_ENABLED' value='true'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS' value='./autogen.sh'/><booleanAttribute key='org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND' value='false'/><booleanAttribute key='org.eclipse.debug.core.appendEnvironmentVariables' value='true'/></launchConfiguration>\n\\ No newline at end of file"}, {"sha": "0c8481719eb0cd4acb1881b57daf601f0b9799dd", "filename": "libjava/classpath/.externalToolBuilders/ClasspathHeaders.launch", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FClasspathHeaders.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FClasspathHeaders.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FClasspathHeaders.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,2 @@\n+<?xml version='1.0'?>\n+<launchConfiguration type='org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType'><stringAttribute key='org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS' value='full,incremental,auto,'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE' value='${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;workingSet&quot; editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/include/Makefile&quot; type=&quot;1&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_LOCATION' value='${system_path:make}'/><booleanAttribute key='org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED' value='true'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY' value='${build_project}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS' value='-C ${build_project}/include CLASSDIR=install/share/classpath USER_CLASSLIB=../install/share/classpath all install'/><booleanAttribute key='org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND' value='false'/><booleanAttribute key='org.eclipse.debug.core.appendEnvironmentVariables' value='true'/></launchConfiguration>\n\\ No newline at end of file"}, {"sha": "269e62c0e63a286f36342ecb5917d9da37ae82cd", "filename": "libjava/classpath/.externalToolBuilders/ClasspathJar.launch", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FClasspathJar.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FClasspathJar.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FClasspathJar.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<launchConfiguration type=\"org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType\">\n+<booleanAttribute key=\"org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND\" value=\"true\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;workingSet&quot; name=&quot;workingSet&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/install/share/classpath&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS\" value=\"-cf glibj.zip META-INF java gnu org javax vm sun\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS\" value=\"full,incremental,auto,\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${build_project:install/share/classpath}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${system_path:jar}\"/>\n+<booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.debug.core.appendEnvironmentVariables\" value=\"true\"/>\n+</launchConfiguration>"}, {"sha": "c6a6b9f06a950822d2a9d3715c8f6f8a4e8dacd8", "filename": "libjava/classpath/.externalToolBuilders/CompileNative.launch", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FCompileNative.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FCompileNative.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FCompileNative.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,2 @@\n+<?xml version='1.0'?>\n+<launchConfiguration type='org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType'><stringAttribute key='org.eclipse.debug.core.ATTR_REFRESH_SCOPE' value='${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;working set&quot; editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS' value='full,incremental,auto,'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE' value='${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;workingSet&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/native&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_LOCATION' value='${system_path:make}'/><booleanAttribute key='org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED' value='true'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY' value='${build_project}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS' value='-C ${build_project}/native all install'/><booleanAttribute key='org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND' value='false'/><booleanAttribute key='org.eclipse.debug.core.appendEnvironmentVariables' value='true'/></launchConfiguration>\n\\ No newline at end of file"}, {"sha": "d2347ae8428db34b6ba3a5cfffa9279b5e3fc2fa", "filename": "libjava/classpath/.externalToolBuilders/Configure.launch", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FConfigure.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FConfigure.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FConfigure.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<launchConfiguration type=\"org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType\">\n+<booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_BUILDER_ENABLED\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND\" value=\"false\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;workingSet&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/Makefile.in&quot; type=&quot;1&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS\" value=\"--prefix=${build_project}/install --enable-regen-headers --with-ecj\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS\" value=\"full,incremental,auto,\"/>\n+<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${project}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${build_project}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${build_project}/configure\"/>\n+<booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.debug.core.appendEnvironmentVariables\" value=\"true\"/>\n+</launchConfiguration>"}, {"sha": "0610d24a5618879cfc7965762f1a82974b748ff0", "filename": "libjava/classpath/.externalToolBuilders/CreateLocaleData.launch", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FCreateLocaleData.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.externalToolBuilders%2FCreateLocaleData.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FCreateLocaleData.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<launchConfiguration type=\"org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType\">\n+<booleanAttribute key=\"org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND\" value=\"false\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;workingSet&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/resource/gnu/java/locale&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/scripts/generate-locale-list.sh&quot; type=&quot;1&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS\" value=\"-C ${build_project}/lib ../gnu/java/locale/LocaleData.java\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS\" value=\"full,incremental,\"/>\n+<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/classpath/gnu/java/locale&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${build_project}\"/>\n+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${system_path:make}\"/>\n+<booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.debug.core.appendEnvironmentVariables\" value=\"true\"/>\n+</launchConfiguration>"}, {"sha": "ebc689daf2fecf922afbd9f9595c321a33e12c18", "filename": "libjava/classpath/.project", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.project", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.project", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.project?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>classpath</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>auto,full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/Autogen.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>auto,full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/Configure.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/CreateLocaleData.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>auto,full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/ClasspathHeaders.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>auto,full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/CompileNative.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>auto,full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/ClasspathJar.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t</natures>\n+</projectDescription>"}, {"sha": "812e62a8400cf3a7812d0a4886b695ba3c53a1a0", "filename": "libjava/classpath/.settings/org.eclipse.jdt.core.prefs", "status": "added", "additions": 243, "deletions": 0, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,243 @@\n+#Tue Feb 07 05:21:36 EST 2006\n+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=next_line\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert\n+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false\n+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert\n+org.eclipse.jdt.core.compiler.compliance=1.5\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert\n+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert\n+org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted\n+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert\n+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert\n+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=next_line\n+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=18\n+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert\n+org.eclipse.jdt.core.formatter.blank_lines_before_method=1\n+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert\n+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1\n+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5\n+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=insert\n+org.eclipse.jdt.core.compiler.debug.localVariable=generate\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=0\n+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert\n+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert\n+org.eclipse.jdt.core.formatter.tabulation.size=2\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert\n+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true\n+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert\n+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled\n+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert\n+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false\n+org.eclipse.jdt.core.formatter.tabulation.char=space\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert\n+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=18\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=17\n+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16\n+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=17\n+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert\n+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=next_line\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert\n+org.eclipse.jdt.core.formatter.brace_position_for_block=next_line_shifted\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1\n+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert\n+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert\n+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16\n+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1\n+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert\n+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line\n+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true\n+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_before_field=1\n+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert\n+org.eclipse.jdt.core.compiler.debug.sourceFile=generate\n+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert\n+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=true\n+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert\n+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true\n+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=next_line\n+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0\n+org.eclipse.jdt.core.formatter.lineSplit=80\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert\n+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert\n+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16\n+org.eclipse.jdt.core.compiler.debug.lineNumber=generate\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=18\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=18\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_before_package=2\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert\n+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=next_line\n+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert\n+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=next_line\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert\n+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert\n+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false\n+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert\n+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1\n+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert\n+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=next_line\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert\n+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert\n+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert\n+eclipse.preferences.version=1\n+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert\n+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert\n+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert\n+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error\n+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1\n+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=82\n+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0\n+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=next_line\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=18\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=18\n+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert\n+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert\n+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert\n+org.eclipse.jdt.core.formatter.blank_lines_after_package=1\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert\n+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=18\n+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=18\n+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert\n+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16\n+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert\n+org.eclipse.jdt.core.formatter.compact_else_if=true\n+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert\n+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert\n+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert\n+org.eclipse.jdt.core.compiler.source=1.5\n+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=insert\n+org.eclipse.jdt.core.formatter.continuation_indentation=2\n+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert\n+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true\n+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert\n+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert\n+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=insert\n+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false"}, {"sha": "e03780f20c3967ebe2ea606e57e9eb4e3cd0da8c", "filename": "libjava/classpath/.settings/org.eclipse.jdt.ui.prefs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.ui.prefs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.ui.prefs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.ui.prefs?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -0,0 +1,12 @@\n+#Tue Jan 11 17:36:31 MST 2005\n+comment_format_source_code=true\n+comment_new_line_for_parameter=true\n+comment_format_html=true\n+comment_line_length=80\n+comment_format_header=false\n+eclipse.preferences.version=1\n+comment_indent_parameter_description=true\n+comment_format_comments=true\n+comment_separate_root_tags=true\n+comment_clear_blank_lines=true\n+comment_indent_root_tags=true"}, {"sha": "4efc086df61a28e558da0cf3e2998a1f0c5931e2", "filename": "libjava/classpath/AUTHORS", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FAUTHORS?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -9,6 +9,7 @@ Anthony Balkissoon (abalkiss@redhat.com)\n Stuart Ballard (stuart.a.ballard@gmail.com)\n Mark Benvenuto (mcb54@columbia.edu)\n Gary Benson (gbenson@redhat.com)\n+Tania Bento (tbento@redhat.com)\n Geoff Berry (gcb@gnu.org)\n James E. Blair (corvus@gnu.org)\n Eric Blake (ebb9@email.byu.edu)\n@@ -17,16 +18,19 @@ Chris Burdess (dog@gnu.org)\n David Daney (ddaney@avtrex.com)\n Nic Ferrier (nferrier@tapsellferrier.co.uk)\n Paul Fisher (rao@gnu.org)\n+Thomas Fitzsimmons (fitzsim@redhat.com)\n+Jeroen Frijters (jeroen@frijters.net)\n David Gilbert (david.gilbert@object-refinery.com)\n Anthony Green (green@redhat.com)\n Jochen Hoenicke (Jochen.Hoenicke@Informatik.Uni-Oldenburg.de)\n-Kazumitsu Ito (kaz@maczuka.gcd.org)\n Andrew John Hughes (gnu_andrew@member.fsf.org)\n+Kazumitsu Ito (kaz@maczuka.gcd.org)\n Olivier Jolly (olivier.jolly@pcedev.com)\n Brian Jones (cbj@gnu.org)\n-Roman Kennke (roman@kennke.org) \n-Michael Koch (konqueror@gmx.de)\n John Keiser (jkeiser@iname.com)\n+Roman Kennke (roman@kennke.org)\n+Michael Koch (konqueror@gmx.de)\n+Francis Kung (fkung@redhat.com)\n John Leuner (jewel@debian.org)\n Warren Levy (warrenl@cygnus.com)\n Sven de Marothy (sven@physto.se)\n@@ -37,6 +41,9 @@ Raif S. Naffah (raif@swiftdsl.com.au)\n Aaron M. Renn (arenn@urbanophile.com)\n Andrew Selkirk (aselkirk@sympatico.ca)\n Christian Thalinger (twisti@complang.tuwien.ac.at)\n+Andreas Tobler (a.tobler@schweiz.org)\n+Mario Torre (neugens@limasoftware.net)\n+Dalibor Topic (robilad@kaffe.org)\n Tom Tromey (tromey@cygnus.com)\n Ronald Veldema (rveldema@cs.vu.nl)\n Mark Wielaard (mark@klomp.org)"}, {"sha": "83de49090b6a2144c996eb0feba1a01a3c652558", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 11074, "deletions": 1501, "changes": 12575, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "58e8d1e0459681bff3b415916452d42e173d5330", "filename": "libjava/classpath/ChangeLog-2004", "status": "modified", "additions": 739, "deletions": 329, "changes": 1068, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog-2004?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357", "patch": "@@ -1598,6 +1598,14 @@\n \t* javax/swing/plaf/basic/BasicComboBoxUI.java:\n \t(paintCurrentValue): renders \"\" if no item is selected\n \n+2004-12-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/String.java (String(StringBuilder)): Rewrote.\n+\t* java/lang/StringBuilder.java (shared): Removed.\n+\t(ensureCapacity): Updated.\n+\t(substrinng): Likewise.\n+\t(toString): Likewise.\n+\n 2004-12-17  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/locale/LocaleInformation_de.java,\n@@ -2608,47 +2616,47 @@\n \tchange event.\n \n 2004-11-28  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: Fix typo.\n-\n+  \n 2004-11-27  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n-\tReformatted.\n-\t(drawRaster): Added FIXME.\n-\t(drawRaster): Changed to work with packed-sample models.\n-\n+        Reformatted.\n+        (drawRaster): Added FIXME.\n+        (drawRaster): Changed to work with packed-sample models.\n+  \n 2004-11-26  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* javax/swing/JList.java, javax/swing/JTree.java:\n \tAdded much new methods and fixed much methods setting bound properties.\n-\n+  \n 2004-11-26  Sven de Marothy  <sven@physto.se>\n-\n-\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n-\t(drawRaster): Set alpha component to opaque if image has no alpha\n+  \n+        * gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+        (drawRaster): Set alpha component to opaque if image has no alpha\n \t\n 2004-11-26  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* java/io/File.java\n \t(canWrite): Moved directory write test to VMFile.\n \t* vm/reference/java/io/VMFile.java\n \t(canWriteDirectory): New method.\n-\n+  \n 2004-11-25  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* java/awt/image/MultiPixelPackedSampleModel.java\n \t(MultiPixelPackedSampleModel): Corrected parameters, order of bit \n \tshifts and masks, stride length off by one.\t\t\n-\t\n+  \t\n 2004-11-25  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* java/awt/image/IndexColorModel.java\n \t(IndexColorModel): Add FIXME with respect to alpha handling.\n \t(getAlpha): Default to returning opaque pixels.\n-\n+  \n 2004-11-25  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* doc/vmintegration.texinfo: Fix link to Japhar.\n \t* doc/www.gnu.org/stories.wml: Likewise.\n \t* doc/www.gnu.org/announce/19990206.wml: Likewise.\n@@ -2668,91 +2676,91 @@\n \tgetAccessibleContext): Implement.\n \t(TextComponent): Extends Accessible.\n \t(getIndexAtPoint, getCharacterBounds): New methods.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Button.java\n \t(AccessibleAWTButton.getAccessibleActionDescription): Explain the\n \tsource of 'click'.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Checkbox.java: Remove stub comments.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Button.java\n \t(AccessibleAWTButton.getAccessibleActionDescription): Return\n \t'click'.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Checkbox.java (AccessibleAWTCheckBox): Remove todo\n \tcomments.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Checkbox.java (itemStateChanged): Implement function.\n \t(getAccessibleContext): Add AccessibleAWTCheckBox to item listeners.\n \t\n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/TextArea.java (AccessibleAWTTextArea,\n \tgetAccessibleContext): Implement.\n \t* java/awt/TextField.java (AccessibleAWTTextField,\n \tgetAccessibleContext): Implement.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Checkbox.java (AccessibleAWTCheckBox): Implement.\n \t(getAccessibleContext): Implement.\n \t\n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/MenuItem.java (AccessibleAWTMenuItem): Implement.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/Choice.java (AccessibleAWTChoice): Implement.\n-\n+  \n 2004-11-23 Jerry Quinn <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/MenuItem.java (AccessibleAWTMenuItem): Implement.\n-\n+  \n 2004-11-23  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* javax/swing/DefaultSingleSelectionModel.java,\n \tjavax/swing/JPasswordField.java,\n \tjavax/swing/tree/AbstractLayoutCache.java:\n \tReformatted and javadocs cleaned up.\n-\n+  \n 2004-11-23  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/nio/channels/spi/AbstractSelectableChannel.java\n \t(register): Only reuse valid selection keys.\n-\n+  \n 2004-11-23  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/nio/NIOServerSocket.java\n \t(getPlainSocketImpl): Removed debug code.\n-\n+  \n 2004-11-23  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/Component.java:\n \tFixed argument names to match javadocs.\n \t(setFont): Rewritten set property first and then fire event.\n \t(setLocale): Likewise.\n \t* javax/swing/text/JTextComponent.java\n \t(setEditable): Likewise.\n-\n+  \n 2004-11-23  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/util/zip/InflaterInputStream.java\n \t(onebytebuffer): Little reformatting to match libgcj's version.\n \t(read): Likewise.\n-\n+  \n 2004-11-23  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/nio/NIOServerSocket.java\n \t(getPlainSocketImpl): Implemented in java with reflection.\n \t* include/gnu_java_nio_NIOServerSocket.h,\n@@ -2761,20 +2769,20 @@\n \tDon't generate include/gnu_java_nio_NIOServerSocket.h.\n \t* native/jni/java-nio/Makefile.am:\n \tDon't build native/jni/java-nio/gnu_java_nio_NIOServerSocket.c.\n-\n+  \n 2004-11-22  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/nio/SocketChannelImpl.java\n \t(read): Made check for blocking un-ambiguous.\n \tRemoved wrong check for data array length.\n-\n+  \n 2004-11-22  Patrik Reali  <reali@acm.org>\n-\n+  \n \t* doc/www.gnu.org/newsitems.txt doc/www.gnu.org/announce/20041115.wml\n \tdoc/www.gnu.org/downloads/downloads.wml: classpath 0.12 announcement\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/nio/SocketChannelImpl.java\n \t(read): Only return 0 when no bytes for reading available in\n \tnon-blocking mode.\n@@ -2787,9 +2795,9 @@\n \t(propertyChangeSupportSerializedDataVersion): Made static.\n \t* java/beans/VetoableChangeSupport.java\n \t(propertyChangeSupportSerializedDataVersion): Likewise.\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/CardLayout.java:\n \tMade some constants static.\n \t(serialVersionUID): Made private.\n@@ -2798,20 +2806,20 @@\n \t(getModifiersEx): Added missing @param tag.\n \t* java/awt/image/RGBImageFilter.java\n \t(filterRGBPixels): Reformatted, removed wrong @param tag.\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/net/URLConnection.java\n \t(getContent): Added missing @return tag.\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* javax/swing/text/FieldView.java,\n \tjavax/swing/text/JTextComponent.java:\n \tRemoved debug code.\n-\n+  \n 2004-11-21  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* java/nio/DirectByteBufferImpl.java\n \t(ReadOnly): New inner subclass.\n \t(ReadWrite): New inner subclass.\n@@ -2828,27 +2836,27 @@\n \t* java/nio/MappedByteBufferImpl.java\n \t(slice, duplicate): Modified to instantiate appropriate\n \tDirectByteBufferImpl subclass.\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* javax/swing/BorderFactory.java\n \t(BorderFactory): Added private constructor.\n \t* javax/swing/SwingUtilities.java\n \t(SwingUtilities): Likewise.\n \t(computeStringWidth): New method.\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/color/ICC_Profile.java\n \t(icSigNamedColorTag): Removed.\n \t* java/awt/datatransfer/DataFlavor.java\n \t(isMimeTypeEqual): Made final.\n \t* java/awt/image/AffineTransformOp.java:\n \tReworked javadocs.\n \t(TYPE_BICUBIC): Added @since tag.\n-\n+  \n 2004-11-21  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/classpath/RawData.java: Made abstract.\n \t* gnu/classpath/RawData32.java,\n \tgnu/classpath/RawData64.java: New files.\n@@ -2869,14 +2877,14 @@\n \t* native/jni/java-nio/java_nio_VMDirectByteBuffer.c,\n \t* vm/reference/java/nio/VMDirectByteBuffer.java:\n \tNew files.\n-\n+  \n 2004-11-20  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* java/util/ResourceBundle.java (tryBundle): Use\n \tClass.isAssignableFrom rather than catching ClassCastException.\n-\n+  \n 2004-11-20  Bryce McKinlay  <mckinlay@redhat.com>\n-\n+  \n \t* java/util/ResourceBundle.java (bundleCache): Renamed from\n \tresourceBundleCache. Update comments.\n \t(getObject): Don't catch MissingResourceException.\n@@ -2892,9 +2900,9 @@\n \tname using given classloader.\n \t(tryBundle(String, Locale, ClassLoader, boolean): New. Qualify \n \tbaseName for given Locale and attempt to load bundle.\n-\n+  \n 2004-11-18  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* gnu/java/io/decode/DecoderUTF8.java\n \t(charsInByteArray, convertToChars, read): Added surrogate pair\n \tsupport.\n@@ -2935,96 +2943,96 @@\n \t(OutputStreamWriter): Removed call to Encoder.setBadCharValue().\n \t* java/lang/String.java: Removed try/catch block around\n \tEncoder/Decoder calls that no longer throw CharConversionException.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/print/PrinterJob.java: Reformatted.\n-\n+  \n 2004-11-17  Jerry Quinn  <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/print/PrinterJob.java (lookupPrintServices,\n \tgetPrintService, setPrintService): Implement.\n \t(lookupStreamPrintServices): Add commented out implementation.\n \t(printer): New field.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/net/Socket.java (getPort): Return 0 in error case.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t*  java/nio/DirectByteBufferImpl.java\n \t(owner): Updated comment.\n \t(allocate): New method.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/net/URL.java (URL): Handle case when argument is null.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/beans/Beans.java,\n \tjava/beans/PropertyChangeEvent.java,\n \tjava/beans/PropertyEditorSupport.java:\n \tFixed javadocs.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/util/Timer.java (DEFAULT_SIZE): Made static.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/image/AffineTransformOp.java,\n \tjava/awt/image/ColorConvertOp.java,\n \tjava/awt/image/LookupOp.java,\n \tjava/awt/image/RescaleOp.java:\n \tAdded final keywords where they belong.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/CardLayout.java,\n \tjava/awt/Component.java,\n \tjava/awt/Font.java,\n \tjava/awt/image/SinglePixelPackedSampleModel.java:\n \tFixed javadocs and argument names all over.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/image/DataBufferShort.java: Fixed file header.\n \t* java/awt/image/DataBufferUShort.java: Likewise.\n \t(DataBufferUShort): Throw NullPointerException if dataArray is null.\n-\n+  \n 2004-11-17  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/net/InetAddress.java (getCanonicalHostName):\n \tSupport IPv6 addresses.\n-\n+  \n 2004-11-17  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* java/awt/geom/Arc2D.java,\n \t(setAngleStart): Corrected (wrong sign on atan2 y parameter)\n \t(setAngles): Likewise\n \t(containsAngle): Return false on zero extent, don't include final angle\n \t(contains): Treat OPEN-type arcs like CHORD ones, not as PIE ones.\n-\n+  \n 2004-11-16  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* java/awt/geom/AffineTransform.java,\n \t(inverseTransform): Fixed bug and simplified code.\n \t(createTransformedShape): Return null on null parameter.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/util/Collections.java (synchronizedSortedMap):\n \tRemoved some cruft in javadoc.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/locale/LocaleInformation_de.java:\n \tAdded some new locale informations to the contents object.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/io/BufferedReader.java,\n \tjava/io/FileInputStream.java,\n \tjava/io/FileOutputStream.java,\n@@ -3045,9 +3053,9 @@\n \tjava/nio/ByteOrder.java,\n \tjava/nio/channels/Channel.java:\n \tFixed javadocs all over.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/color/ICC_ColorSpace.java,\n \tjava/awt/color/ICC_Profile.java,\n \tjava/awt/color/ICC_ProfileGray.java,\n@@ -3059,22 +3067,22 @@\n \t(EPSILON): Made static.\n \t(RS_EPSILON): Likewise.\n \t(PE_EPSILON): Likewide.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/locale/LocaleInformation_de.java:\n \tFix compile error.\n-\n+  \n 2004-11-16  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* javax/swing/SwingUtilities.java:\n \t(computeDifference): Implemented\n \t(computeIntersection): Likewise\n \t(computeUnion): Likewise\n \t(isRectangleContainingRectangle): Likewise\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* java/awt/BasicStroke.java,\n \tjava/awt/Button.java,\n \tjava/awt/Canvas.java,\n@@ -3108,50 +3116,50 @@\n \tjava/awt/image/ShortLookupTable.java,\n \tjava/awt/print/Book.java:\n \tFixed javadocs and method argument names all over.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/locale/LocaleInformation_de.java: Reordered entries in\n \tcontents array, added support for ap/pm and territorial names.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/locale/LocaleInformation_de.java: Reformatted. Replaced\n \tsome definitions with their generated counterparts.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/locale/LocaleInformation_de.java: Removed some comments to\n \tmake it easier to merge this with the new generated classes.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* configure.ac: Added scripts/Makefile to output files.\n \t* Makefile.am (SUBDIRS): Add scripts\n \t* scripts/Makefile.am: New file.\n-\n+  \n 2004-11-16  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n \t(buildString): Optimise String building.\n-\n+  \n 2004-11-15  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* native/jni/Makefile.am: Add checking of JNI methods.\n \t* scripts/check_jni_methods.sh: New file.\n-\n+  \n 2004-11-15  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \t* acinclude.m4 (CLASSPATH_WITH_GLIBJ): Added support to not build the\n \tclass files/glibj.zip. Handle --disable-examples argument.\n \t* Makefile.am: Build examples subdir conditionally.\n-\n+  \n 2004-11-15  Craig Black  <craig.black@aonix.com>\n-\n+  \n \t* gnu/java/beans/BeanInfoEmbryo.java: Use TreeMap for proper sorting.\n-\n+  \n 2004-11-15  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* java/lang/StackTraceElement.java: Made final.\n \t* java/nio/channels/Channels.java: Added private constructor.\n \t* java/rmi/Naming.java: Added private constructor.\n@@ -3195,42 +3203,42 @@\n \t(SynchronizedPrintRequestAttributeSet): Made private.\n \t(SynchronizedPrintServiceAttributeSet): Made private.\n \t* javax/security/auth/PrivateCredentialPermission.java: Made final.\n-\n+  \n 2004-11-14  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* configure.ac: Set version to 0.12+cvs.\n-\n+  \n 2004-11-14  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* configure.ac: Set version to 0.12.\n \t* NEWS: Add new items for this release.\n-\n+  \n 2004-11-14  Mattias Rehnberg  <Mattias.Rehnberg@home.se>\n-\n+  \n \t* java/net/Inet6Address.java (getHostAddress): Fix textual\n \trepresentation of IPv6 address with embedded zeroes \n \tto conform to RFC 2373.\n-\n+  \n 2004-11-14  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* configure.ac (--disable-Werror): Make no the default.\n-\n+  \n 2004-11-14  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* javax/swing/ToolTipManager.java (mouseMoved): Set currentComponent\n \twhen not yet set.\n-\n+  \n 2004-11-13  Robert Schuster <thebohemian@gmx.net>\n-\n+  \n \tComplete 1.4 support\n \t* java/beans/PropertyDescriptor.java:\n \t(setReadMethod): New method\n \t(setWriteMethod): New method\n \t(equals): Implemented (1.4)\n \t(checkMethods): operates on arguments now (private)\n-\n+  \n 2004-11-12  Steven Augart  <augart@watson.ibm.com>\n-\n+  \n \t* gnu/classpath/Configuration.java.in: Added\n \tJAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION. \n \t* configure.ac: Added\n@@ -3239,29 +3247,29 @@\n \tJAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION. \n \t\n 2004-11-12  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* java/awt/Polygon.java (contains): Reimplemented.\n-\n+  \n 2004-11-11  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: Indentation fixups.\n \t* gnu/java/awt/peer/gtk/GtkToolkit.java: Likewise.\n-\n+  \n 2004-11-11  Paul Jenner  <psj.home@ntlworld.com>\n-\n+  \n \t* java/awt/image/Raster.java\n \t(createPackedRaster): Implemented.\n-\n+  \n 2004-11-11  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* javax/swing/plaf/basic/BasicTableHeaderUI.java: Indentation fixups.\n \t* javax/swing/plaf/basic/BasicViewportUI.java: Likewise.\n \t* javax/swing/text/PlainDocument.java: Likewise.\n \t* javax/swing/text/SimpleAttributeSet.java: Likewise.\n \t* javax/swing/text/Utilities.java: Likewise.\n-\n+  \n 2004-11-11  Graydon Hoare  <graydon@redhat.com>\n-\n+  \n \t* javax/swing/plaf/basic/BasicTextUI.java:\n \tListen to focus events, indicate focus via caret.\n \t* javax/swing/text/GapContent.java (getString): Return substring.\n@@ -3271,14 +3279,14 @@\n \t(removeUpdate): Likewise.\n \t* javax/swing/text/Utilities.java (drawTabbedText): Always advance\n \ton tab and newline, even if no painting happens.\n-\n+  \n 2004-11-11  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n+  \n \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c (setFont):\n \tSet pango context's description and language.\n-\n+  \n 2004-11-11  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* include/gnu_java_awt_peer_gtk_GdkFontMetrics.h: Regenerated.\n \t* include/gnu_java_awt_peer_gtk_GdkGraphics.h: Likewise.\n \t* include/gnu_java_awt_peer_gtk_GtkClipboard.h: Likewise.\n@@ -3288,9 +3296,9 @@\n \t* include/java_lang_Math.h: Likewise.\n \t* include/java_lang_VMProcess.h: Likewise.\n \t* include/java_net_InetAddress.h: Likewise.\n-\n+  \n 2004-11-11  Graydon Hoare  <graydon@redhat.com>\n-\n+  \n \t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n \t(GdkGraphics2D): Set clip after transform.\n \t(drawImage): Protect against null image.\n@@ -3406,14 +3414,14 @@\n \t(capitalize): added documentation\n \t(DoubleKey): [class] added documentation\n \t(isReachable): new method, refactoring of a large expression\n-\n+  \n 2004-11-08  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* java/net/URLStreamHandler.java\n \t(parseURL): Fixed file path canonicalisation.\n-\n+  \n 2004-11-08  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* java/io/File.java:\n \t(createTempFile): Use VMFile.IS_DOS_8_3 instead of separatorChar\n \tto determine file system naming restrictions.\n@@ -3512,9 +3520,9 @@\n \t* gnu/java/security/pkcs/PKCS7SignedData.java,\n \t* gnu/java/security/pkcs/SignerInfo.java:\n \tnew files.\n-\n+  \n 2004-11-07  Casey Marshall  <csm@gnu.org>\n-\n+  \n \t* gnu/java/security/provider/Gnu.java\n \t(<init>): add entries in a priviliged action.\n \tAdd new algorithms.\n@@ -3567,29 +3575,29 @@\n \t* gnu/java/security/x509/ext/SubjectAlternativeNames.java,\n \t* gnu/java/security/x509/ext/SubjectKeyIdentifier.java:\n \tnew files.\n-\n+  \n 2004-11-07  Sven de Marothy  <sven@physto.se>\n-\n+  \n \t* java/awt/geom/GeneralPath.java (evaluateCrossings):\n \tFixed epsilon value, should always be nonzero.\n-\n+  \n 2004-11-07  Jerry Quinn  <jlquinn@optonline.net>\n-\n+  \n \t* java/awt/image/BandedSampleModel.java (scanlineStride): Remove\n \tfield hiding ComponentSampleModel.scanlineStride.\n-\n+  \n 2004-11-06  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n+  \n \t* java/awt/DefaultKeyboardFocusManager.java (dispatchEvent):\n \tTrack Window focus owner on FOCUS_GAINED events.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* doc/hacking.texinfo (Source Code Style Guide): Fixed\n \tgrammatical error.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* gnu/java/rmi/server/UnicastConnectionManager.java (clients): Now\n \tpackage-private.\n \t(connections): Likewise.\n@@ -3601,16 +3609,16 @@\n \t(ptr): Likewise.\n \t* gnu/java/security/PolicyFile.java (debug): Now package-private.\n \t* gnu/classpath/ServiceFactory.java (log): Now package-private.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* javax/naming/directory/BasicAttributes.java (attributes): Now\n \tpackage-private.\n \t* javax/imageio/spi/ServiceRegistry.java (categories): Now\n \tpackage-private.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* java/net/URLClassLoader.java (URLClassLoader): Now\n \tpackage-private.\n \t* java/nio/charset/CoderResult.java (CoderResult): Now\n@@ -3620,27 +3628,27 @@\n \t* java/rmi/server/RMIClassLoader.java (MyClassLoader): Now\n \tpackage-private.\n \t* java/util/TimeZone.java (timezones): Now package-private.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* java/security/Permissions.java (perms): Now package-private.\n \t* java/security/UnresolvedPermission.java (permissions): Now\n \tpackage-private.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* java/io/FilePermission.java: Reindented.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* java/io/ObjectOutputStream.java (currentObjectStreamClass): Now\n \tpackage-private.\n \t(setBlockDataMode): Likewise.\n \t* java/io/DeleteFileHelper.java (DeleteFileHelper): Now\n \tpackage-private.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* gnu/java/nio/charset/ISO_8859_1.java (Decoder): Now\n \tpackage-private.\n \t(Encoder): Likewise.\n@@ -3649,9 +3657,9 @@\n \t* gnu/java/nio/charset/US_ASCII.java (Decoder): Now\n \tpackage-private.\n \t(Encoder): Likewise.\n-\n+  \n 2004-11-06  Robert Schuster  <theBohemian@gmx.net>\n-\n+  \n \tFixes bug #10908\n \t* gnu/java/beans/IntrospectionIncubator.java:\n \t(addMethod): static methods are discarded now, too.\n@@ -3678,126 +3686,176 @@\n \t* java/awt/image/BandCombineOp.java,\n \tjava/awt/image/LookupOp.java,\n \tjava/awt/image/ConvolveOp.java: New classes.\n-\n+  \n 2004-11-06  Andrew Haley  <aph@redhat.com>\n-\n+  \n \t* java/io/ObjectInputStream.java\n \t(readObject): ENDBLOCKDATA is generated if the class has a write\n \tmethod, not if it has a read method.\n-\n+  \n 2004-11-06  Mark Wielaard  <mark@klomp.org>\n-\n+  \n \t* java/util/Vector.java (readObject): Removed.\n-\n+  \n 2004-11-06  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* gnu/java/net/protocol/http/Connection.java (sendRequest): Fix\n \ttypo.\n-\n+  \n 2004-11-06  Michael Koch  <konqueror@gmx.de>\n-\n+  \n \tPR libjava/14009\n \t* gnu/java/net/protocol/http/Connection.java\n \t(sendRequest): Handle case when url.getFile() returns an empty string.\n-\n+  \n 2004-11-06  Patrik Reali  <reali@acm.org>\n-\n+  \n \t* doc/www.gnu.org/newsitems.txt: JDK 1.0 compatibility news\n+  \n+2004-11-06  Tom Tromey  <tromey@redhat.com>\n \n-2004-11-05  Noa Resare  <noa@resare.com>\n+\t* java/lang/Void.java (TYPE): Added cast to initializer.\n+\t* java/lang/Short.java (TYPE): Added cast to initializer.\n+\t* java/lang/Long.java (TYPE): Added cast to initializer.\n+\t* java/lang/Integer.java (TYPE): Added cast to initializer.\n+\t* java/lang/Float.java (TYPE): Added cast to initializer.\n+\t* java/lang/Double.java (TYPE): Added cast to initializer.\n+\t* java/lang/Character.java (TYPE): Added cast to initializer.\n+\t* java/lang/Byte.java (TYPE): Added cast to initializer.\n+\t* java/lang/Boolean.java (TYPE): Added cast to initializer.\n+\t* java/util/Hashtable.java (elements): Fixed return type.\n \n+2004-11-05  Noa Resare  <noa@resare.com>\n+  \n \t* java/net/Socket.java(getPort): Return 0 instead of -1 on\n \tunconnected sockets.\n-\n+  \n 2004-11-05  Sven de Marothy <sven@physto.se>\n \t\n \t* gnu/java/awt/peer/gtk/GtkComponentPeer.java\n \t(createImage): Created bitmap should be filled with bg color\n-\n+  \n 2004-11-04  Torsten Rupp  <rupp@aicas.com>\n-\n+  \n \t* native/jni/java-net/gnu_java_net_PlainDatagramSocketImpl.c:\n \tReplaced 'this' arguments by 'obj' to make source compatible with\n \tC++ compilers.\n-\n+  \n 2004-11-04  Torsten Rupp  <rupp@aicas.com>\n-\n+  \n \t* native/jni/java-net/gnu_java_net_PlainDatagramSocketImpl.c:\n \tAdd dummy return values for WITHOUT_NETWORK code path.\n \t(Java_gnu_java_net_PlainDatagramSocketImpl_receive0): Check fid not\n \tNULL for maxlen field id.\n-\n+  \n 2004-11-04  Torsten Rupp  <rupp@aicas.com>\n-\n+  \n \t* native/jni/java-net/gnu_java_net_PlainSocketImpl.c: Added missing\n \treturn values for WITHOUT_NETWORK code path.\n-\n+  \n 2004-11-03  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* Makefile.am (EXTRA_DIST): Added ChangeLog-2003.\n-\n+  \n 2004-11-03  Tom Tromey  <tromey@redhat.com>\n-\n+  \n \t* include/jni.h (struct JNINativeInterface) <NewObjectArray>: Now\n \treturns jobjectArray.\n \t(_Jv_JNIEnv::NewObjectArray): Likewise.\n+  \n+2004-11-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/Collection.java (iterator): Fixed return type.\n+\n+\t* java/util/AbstractSet.java (removeAll): Fixed iterator\n+\tdeclaration.\n+\t* java/util/AbstractList.java (RandomAccessSubList): RandomAccess\n+\tis not generic.\n \n 2004-11-02  Mattias Rehnberg  <Mattias.Rehnberg@home.se>\n \n \t* java/io/Vector.java\n \t(readObject, writeObject): New function to match Sun's\n \tserialized output for Vector.\n-\n-\t* java/io/ObjectOutputStream.java\n+  \n+  \t* java/io/ObjectOutputStream.java\n \t(writeObject): Move the assignment of the class handle to after\n \tthe assignment of class descriptor handle.\n-\n+  \n 2004-11-02  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n+  \n \t* java/awt/Font.java (name): New field.\n \t(size): Likewise.\n \t(style): Likewise.\n-\n+  \n 2004-11-01  Andrew John Hughes <gnu_andrew@member.fsf.org>\n-\n+  \n \t* java/util/GregorianCalendar.java:\n \tAdded/amended documentation.\n \t\n 2004-11-01  Jeroen Frijters  <jeroen@frijters.net>\n-\n+  \n \t* java/lang/ClassLoader.java:\n \t(addFileURL): New method.\n \t(getSystemClassLoaderUrls): Fixed to treat lone separators as\n \tcurrent directory.\n+  \n+2004-11-01  Tom Tromey  <tromey@redhat.com>\n \n-2004-10-31  Robert Schuster <thebohemian@gmx.net>\n+\t* java/util/AbstractMap.java: Removed old FIXME comment.\n \n+\t* java/lang/Long.java (rotateRight): Fixed return type.\n+\t* java/lang/Integer.java (reverse): Use correct name for\n+\tvariable.\n+\t* java/lang/Character.java (valueOf): Use MIN_VALUE, not\n+\tMIN_CACHE.\n+\t* java/lang/Byte.java (valueOf): Use MIN_VALUE, not MIN_CACHE.\n+\n+\t* gnu/java/util/DoubleEnumeration.java: Genericized.\n+\n+\t* java/lang/Appendable.java (append): Throws IOException.\n+\n+\t* java/util/Hashtable.java: Genericized.\n+\n+\t* java/util/HashMap.java (putAll): Use correct type for iterator.\n+\t(putAllInternal): Likewise.\n+\t* java/lang/Class.java (cast): Call VMClass.cast.\n+\t* java/util/Collections.java (UnmodifiableMap.remove): Corrected\n+\treturn type.\n+\t(entrySet): Likewise.\n+\t(entries): Corrected type.\n+\n+\t* vm/reference/java/lang/reflect/Constructor.java\n+\t(getTypeParameters): Stubbed.\n+\n+2004-10-31  Robert Schuster <thebohemian@gmx.net>\n+  \n \tFixes documentation and indentation\n \t* java/beans/PropertyEditorSupport.java:\n \t reworked initial API doc\n \t(value): changed name from val\n-\n+  \n 2004-10-31  Robert Schuster <thebohemian@gmx.net>\n-\n+  \n \tUpdates to 1.5\n \t* java/beans/PropertyEditorSupport.java\n \t(PropertyEditorSupport()): Changed modifier to public\n \t(PropertyEditorSupport(Object): Changed modifier to public\n \t(setSource): New method\n \t(getSource): New method\n-\n+  \n 2004-10-31  Robert Schuster <thebohemian@gmx.net>\n-\n+  \n \tFixes bug #10799\n \t* java/beans/PropertyEditorSupport.java\n \t(setValue): Fire property change event\n-\n+  \n 2004-10-31  Noa Resare  <noa@resare.com>\n-\n+  \n \t* java/util/Calendar.java (explicitDSTOffset): New instance field.\n \t(set(int,int)): Set and use new field.\n \t(set(int,int,int)): Check new field.\n-\n+  \n 2004-10-29  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* java/awt/image/ColorConvertOp.java: New class.\n@@ -3956,36 +4014,36 @@\n \n 2004-10-26  Andreas Tobler  <a.tobler@schweiz.ch>\n \n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n-\t(Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create): Use the\n-\tGTK_TEXT_VIEW macro.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n-\t(connect_awt_hook_cb): Mark unused variable unused.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c\n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c\n+ \t(Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create): Use the\n+ \tGTK_TEXT_VIEW macro.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+ \t(connect_awt_hook_cb): Mark unused variable unused.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c\n \t(selection_get): Do the cast right.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n-\t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_create): According to\n-\tthe gtk API gtk_combo_box_new_text actually returns a GtkWidget.\n-\tRemove unused var menu.\n-\t(selection_changed): Remove unused value.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n-\t(Java_gnu_java_awt_peer_gtk_GtkButtonPeer_setNativeBounds): Fix pointer\n-\twarning with using an intermediate variable.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n-\t(area_updated): Fix unused var warning for BE archs.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n-\t(Java_gnu_java_awt_peer_gtk_GdkGraphics_connectSignals): Remove unused\n-\tvar.\n-\t(realize_cb): Mark unused variable unused.\n-\n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n-\t(seek_glyphstring_idx): Fix a C90 warning.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n+ \t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_create): According to\n+ \tthe gtk API gtk_combo_box_new_text actually returns a GtkWidget.\n+ \tRemove unused var menu.\n+ \t(selection_changed): Remove unused value.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n+ \t(Java_gnu_java_awt_peer_gtk_GtkButtonPeer_setNativeBounds): Fix pointer\n+ \twarning with using an intermediate variable.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n+ \t(area_updated): Fix unused var warning for BE archs.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n+ \t(Java_gnu_java_awt_peer_gtk_GdkGraphics_connectSignals): Remove unused\n+ \tvar.\n+ \t(realize_cb): Mark unused variable unused.\n+ \n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n+ \t(seek_glyphstring_idx): Fix a C90 warning.\n \n 2004-10-26  Andreas Tobler  <a.tobler@schweiz.ch>\n \n@@ -4749,7 +4807,7 @@\n \n 2004-10-20  Andrew John Hughes <gnu_andrew@member.fsf.org>\n \n-\t* java/util/Currency.java:\n+\t* java/util/Currency.java\n \tDocumented variables and methods more fully.\n \tCaches the currency instances, so that a request\n \tfor a locale, l, only ever returns the same\n@@ -4758,11 +4816,11 @@\n \t\n 2004-10-20  Andrew John Hughes <gnu_andrew@member.fsf.org>\n \n-\t* java/util/Collections.java:\n+\t* java/util/Collections.java\n \tAdded documentation.\n-\t* java/util/SortedMap.java:\n+\t* java/util/SortedMap.java\n \tClarified some method examples.\n-\t* java/util/SortedSet.java:\n+\t* java/util/SortedSet.java\n \tClarified some method examples.\n \t\n 2004-10-20  Michael Koch  <konqueror@gmx.de>\n@@ -5167,6 +5225,13 @@\n \t* autogen.sh: Replaced with a GNOME-like script that aborts when the\n \tversions of autoconf, automake or libtool are not sufficient.\n \n+\n+2004-10-14  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/StringBuilder.java (append): Typo fix; indentation\n+\tfix.\n+\t* java/beans/BeanDescriptor.java (BeanDescriptor): Typo fix.\n+\n 2004-10-13  Michael Koch  <konqueror@gmx.de>\n \n \t* java/awt/image/ByteLookupTable.java\n@@ -5378,10 +5443,10 @@\n \n 2004-10-10  Sven de Marothy  <sven@physto.se>\n \n-\t* native/jni/java-lang/java_lang_Double.c\n-\t(parseDouble): Add handling of NaN/Infinity (bug #10491)\n-\t* java/nio/ByteBufferHelper.java\n-\t(putDouble): Use Double.toRawLongBits instead (bug #9106)\n+        * native/jni/java-lang/java_lang_Double.c\n+        (parseDouble): Add handling of NaN/Infinity (bug #10491)\n+        * java/nio/ByteBufferHelper.java\n+        (putDouble): Use Double.toRawLongBits instead (bug #9106)\n \n 2004-10-10  Andreas Tobler  <a.tobler@schweiz.ch>\n \n@@ -5434,6 +5499,107 @@\n \n \t* javax/swing/JList.java (init): Revert accidental commit.\n \n+2004-10-09  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/beans/EventHandler.java (create): Now generic methods.\n+\t* java/beans/Beans.java (getInstanceOf): Updated argument type.\n+\t(isInstanceOf): Likewise.\n+\t* java/beans/BeanDescriptor.java (beanClass, customizerClass):\n+\tUpdated type.\n+\t(BeanDescriptor): Updated argument types.\n+\t(getBeanClass, getCustomizerClass): Updated return types.\n+\n+\t* java/lang/reflect/Proxy.java (getProxyClass): Updated argument\n+\tand return types.\n+\t(isProxyClass): Likewise.\n+\t(newProxyInstance): Likewise.\n+\n+\t* java/applet/AppletContext.java (getApplets): Updated return\n+\ttype.\n+\t(getStreamKeys): Likewise.\n+\n+\t* java/lang/String.java: Implement Comparable<String>.\n+\n+\t* java/util/Properties.java: Extend Hashtable<Object, Object>.\n+\t(save): Mark as @Deprecated.\n+\t* java/lang/System.java (clearProperty): New method.\n+\t(setProperty): Check for empty key.\n+\t(getProperty): Likewise.\n+\n+\t* java/lang/SecurityManager.java (currentLoadedClass): Updated\n+\treturn type.\n+\n+\t* java/lang/Float.java: Updated status.\n+\t* java/lang/Void.java: Updated status.\n+\t* java/lang/Double.java: Updated status.\n+\t* java/lang/Long.java: Updated status.\n+\t* java/lang/Character.java: Updated status.\n+\t* java/lang/Integer.java: Updated status.\n+\t* java/lang/Short.java: Updated status.\n+\t* java/lang/Byte.java: Updated status.\n+\t* java/lang/Boolean.java: Updated status.\n+\n+\t* java/lang/ClassLoader.java (defineClass): New method.\n+\t(findClass): Updated return type.\n+\t(findLoadedClass): Likewise.\n+\t(findSystemClass): Likewise.\n+\t(findResources): Likewise.\n+\t(getSystemResources): Likewise.\n+\t(loadClass): Likewise.\n+\t(resolveClass): Updated argument type.\n+\t(setSigners): Likewise.\n+\t(loadedClasses, definedPackages): Updated types.\n+\t(packageAssertionStatus): Likewise.\n+\t(systemClassAssertionStatus): Likewise.\n+\t(classAssertionStatus): Likewise.\n+\t(defineClass): Updated return type.\n+\t(getResource): Likewise.\n+\t(clearAssertionStatus): Clear packageAssertionStatus and\n+\tclassAssertionStatus.\n+\n+\t* java/lang/Void.java (TYPE): Changed type.\n+\t* java/lang/Character.java: Implement Comparable<Character>.\n+\t(TYPE): Changed type.\n+\t(SIZE): New field.\n+\t(MAX_CACHE, charCache): New fields.\n+\t(valueOf): New method.\n+\t(reverseBytes): Likewise.\n+\t* java/lang/Double.java: Implement Comparable<Double>.\n+\t(TYPE): Changed type.\n+\t(SIZE): New field.\n+\t(valueOf): New method.\n+\t* java/lang/Float.java: Implement Comparable<Float>\n+\t(TYPE): Changed type.\n+\t(SIZE): New field.\n+\t(valueOf): New method.\n+\t* java/lang/Short.java: Implement Comparable<Short>.\n+\t(TYPE): Changed type.\n+\t(MIN_CACHE, MAX_CACHE, shortCache): New fields.\n+\t(valueOf): New method.\n+\t(reverseBytes): Likewise.\n+\t* java/lang/Byte.java: Implement Comparable<Byte>.\n+\t(TYPE): Changed type.\n+\t(SIZE): New field.\n+\t(byteCache): Likewise.\n+\t(valueOf): New method.\n+\t* java/lang/Boolean.java (TYPE): Changed type.\n+\t* java/lang/Long.java (TYPE): Changed type.\n+\t(SIZE): New field.\n+\t(valueOf): New method.\n+\t(bitCount, rotateLeft, rotateRight, highestOneBit,\n+\tnumberOfLeadingZeros, lowestOneBit, numberOfTrailingZeros,\n+\tsignum, reverseBytes, reverse): New methods.\n+\tImplement Comparable<Long>.\n+\t* java/lang/Integer.java: Implement Comparable<Integer>.\n+\t(SIZE): New field.\n+\t(intCache): Likewise.\n+\t(MIN_CACHE, MAX_CACHE): Likewise.\n+\t(valueOf): New method.\n+\t(bitCount, rotateLeft, rotateRight, highestOneBit,\n+\tnumberOfLeadingZeros, lowestOneBit, numberOfTrailingZeros,\n+\tsignum, reverseBytes, reverse): New methods.\n+\t(TYPE): Changed type.\n+\n 2004-10-08  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/util/Calendar.java (set): Invalidate DST_OFFSET\n@@ -6001,22 +6167,22 @@\n \tjava/awt/GridBagConstraints.java,\n \tjava/awt/GridBagLayout.java,\n \tjava/awt/GridLayout.java,\n-\tjava/awt/Image.java,\n+ \tjava/awt/Image.java,\n \tjava/awt/KeyboardFocusManager.java,\n-\tjava/awt/Label.java,\n-\tjava/awt/List.java,\n+ \tjava/awt/Label.java,\n+ \tjava/awt/List.java,\n \tjava/awt/MediaTracker.java,\n-\tjava/awt/Menu.java,\n-\tjava/awt/MenuBar.java,\n-\tjava/awt/MenuComponent.java,\n-\tjava/awt/Panel.java,\n-\tjava/awt/PopupMenu.java,\n+ \tjava/awt/Menu.java,\n+ \tjava/awt/MenuBar.java,\n+ \tjava/awt/MenuComponent.java,\n+ \tjava/awt/Panel.java,\n+ \tjava/awt/PopupMenu.java,\n \tjava/awt/ScrollPane.java,\n-\tjava/awt/Scrollbar.java,\n-\tjava/awt/SystemColor.java,\n-\tjava/awt/TextArea.java,\n-\tjava/awt/TextField.java,\n-\tjava/awt/Toolkit.java,\n+ \tjava/awt/Scrollbar.java,\n+ \tjava/awt/SystemColor.java,\n+ \tjava/awt/TextArea.java,\n+ \tjava/awt/TextField.java,\n+ \tjava/awt/Toolkit.java,\n \tjava/awt/Window.java,\n \tjava/awt/color/ICC_Profile.java,\n \tjava/awt/datatransfer/DataFlavor.java,\n@@ -6027,7 +6193,7 @@\n \tjava/awt/dnd/DropTargetContext.java,\n \tjava/awt/dnd/DropTargetDragEvent.java,\n \tjava/awt/dnd/peer/DropTargetContextPeer.java,\n-\tjava/awt/event/AdjustmentEvent.java,\n+ \tjava/awt/event/AdjustmentEvent.java,\n \tjava/awt/event/InputEvent.java,\n \tjava/awt/event/InvocationEvent.java,\n \tjava/awt/event/KeyEvent.java,\n@@ -6068,7 +6234,7 @@\n \tefficient.\n \n 2004-09-27  Bryce McKinlay  <mckinlay@redhat.com>\n-\n+ \n \t* java.util.Calendar.java (cache): New private static field. Cached\n \tmappings of locales->calendar classes.\n \t(ctorArgTypes): New private static field. Singleton argument for\n@@ -6119,7 +6285,7 @@\n \t(getLineOfOffset): Likewise.\n \t(getRowHeight): Likewise.\n \t(replaceRange): Likewise.\n-\t(insert): Reformatted.\n+ \t(insert): Reformatted.\n \n 2004-09-27  Michael Koch  <konqueror@gmx.de>\n \n@@ -6132,6 +6298,10 @@\n \t(getModel): Likewise.\n \t(setModel): Likewise.\n \n+2004-09-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Deprecated.java: Fixed retention.\n+\n 2004-09-26  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/JTextField.java\n@@ -6335,6 +6505,23 @@\n \t* javax/swing/UIDefaults.java\n \t(removePropertyChangeListener): Made public.\n \n+2004-09-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/lang/Appendable.java\n+\tDocumented this class.\n+\t(append(CharSequence, int, int)): added.\n+\n+2004-09-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/lang/Comparable.java\n+\tUpdated status to be 1.5.\n+\t* java/lang/Iterable.java\n+\tAdded missing documentation.\n+\t* java/lang/Readable.java\n+\tAdded documentation.\n+\t* java/lang/Thread.java\n+\t(UncaughtExceptionHandler): documented.\n+\t\n 2004-09-25  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/JApplet.java:\n@@ -6352,7 +6539,7 @@\n \t(setUI): New method.\n \n 2004-09-25  Shashank Bapat  <shashankbapat@yahoo.com>\n-\t    Mark Wielaard  <mark@klomp.org>\n+           Mark Wielaard  <mark@klomp.org>\n \n \t* gnu/regexp/RE.java (initialize): Add RETokenLookAhead support.\n \t* gnu/regexp/RETokenLookAhead.java: New file.\n@@ -6941,6 +7128,12 @@\n \n \t* configure.ac: Set version to 0.11+cvs.\n \n+2004-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/annotation/Retention.java: Documented.\n+\t* java/lang/annotation/RetentionPolicy.java: Documented.\n+\t* java/lang/StringBuilder.java: Updated documentation.\n+\n 2004-09-17  Tom Tromey  <tromey@redhat.com>\n \n \t* vm/reference/java/lang/VMProcess.java (ProcessThread): Added\n@@ -7167,6 +7360,17 @@\n \t(getDefaultTimeZone): Fixed test to distinguish between hours and\n \tminutes in specified timezone.\n \n+2004-09-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/SuppressWarnings.java: Document.\n+\n+\t* java/lang/StringBuilder.java: New file.\n+\t* java/lang/String.java (String(StringBuilder)): New constructor.\n+\t* java/lang/StringBuffer.java: Added comment.\n+\n+\t* java/lang/Override.java: Documented.\n+\t* java/lang/Deprecated.java: Documented.\n+\n 2004-09-06  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* java/awt/Canvas.java\n@@ -7247,7 +7451,7 @@\n \n 2004-09-05  Mark Wielaard  <mark@klomp.org>\n \n-\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n+ \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n \t(setChars): Only call pango_itemize() when vec->glyphitems != NULL.\n \tOnly call pango_shape() when gi->glyphs->num_glyphs > 0.\n \n@@ -7567,7 +7771,7 @@\n \t(modelToView): New method.\n \t* javax/swing/text/PlainView.java\n \t(modelToView): Made public.\n-\n+ \n 2004-09-04  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/text/AbstractDocument.java\n@@ -7790,6 +7994,13 @@\n \t* examples/gnu/classpath/examples/swing/Demo.java:\n \tAdded demo for JTextField.\n \n+\n+2004-09-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/SuppressWarnings.java: Added imports.\n+\t* java/lang/Override.java: Added imports.\n+\t* java/lang/Deprecated.java: Added imports.\n+\n 2004-09-03  Mark Wielaard  <mark@klomp.org>\n \n \t* Makefile.am (SUBDIRS): Remove external.\n@@ -7800,6 +8011,12 @@\n \t* external/*: Removed.\n \t* NEWS: Mention GNU JAXP.\n \n+2004-09-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/EnumMap.java: New file.\n+\t* java/util/EnumSet.java: New file.\n+\t* java/util/BitSet.java (containsAll): New method.\n+\n 2004-08-31  Mark Wielaard  <mark@klomp.org>\n \n \t* NEWS: Add new news.\n@@ -7835,6 +8052,7 @@\n \t* vm/reference/java/io/VMFile.java:\n \tReindented.\n \n+\n 2004-08-29  Mark Wielaard  <mark@klomp.org>\n \n \t* resource/org/.cvsignore: New file.\n@@ -7901,9 +8119,41 @@\n \n 2004-08-27  Sven de Marothy  <sven@physto.se>\n \n-\t* java/awt/geom/Area.java\n+ \t* java/awt/geom/Area.java\n \tImplemented.\n \n+2004-08-26  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/reflect/AnnotatedElement.java: New file.\n+\t* vm/reference/java/lang/reflect/Constructor.java (Constructor):\n+\tNow generic.  Implements GenericDeclaration.\n+\t(clazz): Now generic.\n+\t(getDeclaringClass): Likewise.\n+\t(getExceptionTypes): Likewise.\n+\t(getParameterTypes): Likewise.\n+\t(newInstance): Likewise.\n+\t(constructNative): Likewise.\n+\t* java/lang/reflect/GenericDeclaration.java: New file.\n+\t* java/lang/reflect/GenericSignatureFormatError.java: New file.\n+\t* java/lang/reflect/WildcardType.java: New file.\n+\t* java/lang/reflect/TypeVariable.java: New file.\n+\t* java/lang/reflect/ParameterizedType.java: New file.\n+\t* java/lang/MalformedParameterizedTypeException.java: New file.\n+\t* java/lang/TypeNotPresentException.java: New file.\n+\t* java/lang/reflect/GenericArrayType.java: New file.\n+\t* java/lang/reflect/Type.java: New file.\n+\n+\t* java/io/Writer.java (Writer): Implements Closeable, Flushable,\n+\tAppendable.\n+\t(append): New methods.\n+\t* java/io/OutputStream.java (OutputStream): Implements Closeable,\n+\tFlushable.\n+\t* java/io/Reader.java (Reader): Implements Closeable.\n+\t* java/io/InputStream.java (InputStream): Implements Closeable.\n+\t* java/nio/channels/Channel.java (Channel): Extends Closeable.\n+\t* java/io/Flushable.java: New file.\n+\t* java/io/Closeable.java: New file.\n+\n 2004-08-25  Mark Wielaard  <mark@klomp.org>\n \n \t* java/awt/geom/Arc2D.java (ArcIterator): Make package private.\n@@ -7912,7 +8162,7 @@\n \n \t* java/awt/geom/Arc2D.java\n \tReformatted.\n-\tsetArc(): Correct documentation to say 'upper left corner'.\n+\t(setArc()): Correct documentation to say 'upper left corner'.\n \t(setArcByTangent,contains,intersects): Implemented.\n \t(containsAngle): Corrected to handle negative extents.\n \tArcIterator: Set to private.\n@@ -7933,7 +8183,7 @@\n \n \t* java/awt/KeyboardFocusManager.java\n \tAdded missing documentation.\n-\n+ \n 2004-08-22  Patrik Reali  <reali@acm.org>\n \n \t* doc/www.gnu.org/newsitems.txt: news on JSpinner and java crypto\n@@ -7963,7 +8213,7 @@\n \t(getContext): set `inGetContext' as early as possible.\n \tInclude the call just prior to `doPrivileged' too.\n \tHandle new form of `contexts' stack.\n-\n+ \n 2004-08-20  Casey Marshall  <csm@gnu.org>\n \n \t* java/security/cert/X509CRLSelector.java: new file.\n@@ -7978,16 +8228,16 @@\n \t* javax/swing/JTextArea.java\n \tImplemented insert() method and added additional\n \tdocumentation.\n-\n+ \n 2004-08-18  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n-\n+ \n \t* javax/swing/SpinnerListModel.java, javax/swing/SpinnerModel.java\n \tImplemented SpinnerListModel.  Added documentation to\n \tSpinnerModel.\n-\n+ \n 2004-08-18  Bryce McKinlay  <mckinlay@redhat.com>\n-\n-\tPR libgcj/17081\n+ \n+ \tPR libgcj/17081\n \t* java/net/URI.java (string): New field. Make all other fields\n \ttransient.\n \t(readObject): Implemented.\n@@ -8013,24 +8263,24 @@\n \t* java/util/AbstractCollection.java, java/util/AbstractList.java,\n \tjava/util/AbstractMap.java, java/util/AbstractSequentialList.java,\n \tjava/util/ArrayList.java, java/util/Arrays.java,\n-\tjava/util/BitSet.java, java/util/Calendar.java,\n-\tjava/util/Collection.java, java/util/ListIterator.java,\n-\tjava/util/Map.java, java/util/SortedSet.java:\n-\tAdded additional exceptions to documentation, along\n-\twith some additions and corrections.\n-\n+ \tjava/util/BitSet.java, java/util/Calendar.java,\n+ \tjava/util/Collection.java, java/util/ListIterator.java,\n+ \tjava/util/Map.java, java/util/SortedSet.java:\n+ \tAdded additional exceptions to documentation, along\n+ \twith some additions and corrections.\n+ \n 2004-08-16  Tom Tromey  <tromey@redhat.com>\n \n \t* .classpath: Updated.\n \n 2004-08-16  Tom Tromey  <tromey@redhat.com>\n \n-\tBug 9596.\n+ \tBug 9596.\n \t* java/lang/Class.java (getName): Fixed javadoc.\n-\n+ \n 2004-08-16  Tom Tromey  <tromey@redhat.com>\n \n-\tBug 9949.\n+        Bug 9949.\n \t* java/text/AttributedString.java (AttributedString): Use\n \tArrayList to build array of attribute ranges.  Don't use\n \t`attribs' before it is set.\n@@ -8065,6 +8315,12 @@\n \t* java/io/File.java File(String,String): Fixed handling of empty\n \tpath.\n \n+2004-08-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/AbstractQueue.java (addAll): Return a result.\n+\t(element): Fixed typo.\n+\t* java/util/PriorityQueue.java: New file.\n+\n 2004-08-15  Casey Marshall  <csm@gnu.org>\n \n \t* java/security/DummyKeyPairGenerator.java (clone): removed\n@@ -8079,40 +8335,82 @@\n \t* java/security/SignatureSpi.java (clone): likewise.\n \t* javax/crypto/MacSpi.java (clone): likewise.\n \n+2004-08-15  Matthias Pfisterer  <Matthias.Pfisterer@web.de>\n+\t    Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/HashMap.java (HashMap): Fixed parameterization in\n+\t`new'.\n+\t(putAll): Fixed parameterization.\n+\t(containsValue): Likewise.\n+\t(clone): Likewise.\n+\t(getEntry): Likewise.\n+\t* java/util/Dictionary.java (remove): Fixed parameterization.\n+\t* java/util/Collections.java (shuffle): Fixed indentation and\n+\ttype of iterator.\n+\t(copy): Fixed argument types.\n+\t(SingletonSet.containsAll): Fixed type parameterizations.\n+\t(SingletonList.containsAll): Likewise.\n+\t(EmptyMap.get): Likewise.\n+\t(isSequential): Likewise.\n+\t(EmptySet): Genericized.\n+\t(EmptyList): Likewise.\n+\t(EmptyMap): Likewise.\n+\t(compare): Likewise.\n+\t(SynchronizedCollection.containsAll): Fixed type\n+\tparameterization.\n+\t(SynchronizedCollection.iterator): Likewise.\n+\t(SynchronizedList.listIterator): Likewise.\n+\t(SynchronizedList.subList): Likewise.\n+\t(SynchronizedMap.keySet): Likewise.\n+\t(SynchronizedMap.values): Likewise.\n+\t(synchronizedSortedSet): Likewise.\n+\t(UnmodifiableCollection.containsAll): Likewise.\n+\t(UnmodifiableList.listIterator): Likewise.\n+\t* java/util/Calendar.java: Implement Comparable<Calendar>.\n+\t(compareTo): New method.\n+\t* java/util/Arrays.java (sort): Declare type variable.\n+\t(asList): Corrected argument type.\n+\t(ArrayList): Genericized.\n+\t* java/util/ArrayList.java: Genericized.\n+\t* java/util/AbstractSet.java (removeAll): Fix type errors in\n+\titerator declarations.\n+\t* java/util/AbstractSequentialList.java (addAll): Genericize\n+\titerator `i'.\n+\n 2004-08-14  Ka-Hing Cheung  <kahing@javabsp.org>\n \n \t* javax/swing/AbstractSpinnerModel.java,\n-\tjavax/swing/JSpinner.java,\n+ \tjavax/swing/JSpinner.java,\n \tjavax/swing/SpinnerNumberModel.java,\n-\tjavax/swing/plaf/basic/BasicSpinnerUI.java:\n-\tNew files.\n+ \tjavax/swing/plaf/basic/BasicSpinnerUI.java:\n+ \tNew files.\n \t* javax/swing/plaf/basic/BasicLookAndFeel.java\n-\t(initClassDefaults): Added defaults for BasicSpinnerUI.\n-\n+ \t(initClassDefaults): Added defaults for BasicSpinnerUI.\n+ \n 2004-08-14  Mark Wielaard  <mark@klomp.org>\n-\n+ \n \t* examples/gnu/classpath/examples/swing/Demo.java (mkSpinner):\n-\tNew method.\n-\t(mkButtonBar): Add Spinner.\n+ \tNew method.\n+ \t(mkButtonBar): Add Spinner.\n \n 2004-08-14  Casey Marshall <csm@gnu.org>\n-\n+ \n \tThe Big Crypto Merge of 2004.\n-\n+ \n \t* configure.ac: generate jgss resource Makefiles.\n \n \t* lib/Makefile.am: updated for jgss resources.\n-\n+ \n \t* lib/gen-classlist.sh.in: updated for classes in org/.\n \n \t* javax/security/auth/x500/X500Principal.java: replaced with GNU\n-\tCrypto's version.\n-\n+ \tCrypto's version.\n+ \n \t* resource/org/Makefile.am,\n \t* resource/org/ietf/Makefile.am,\n \t* resource/org/ietf/jgss/Makefile.am:\n \tnew files.\n-\n+ \n \tFiles imported from GNU Crypto.\n \t* javax/crypto/BadPaddingException.java\n \t* javax/crypto/Cipher.java\n@@ -8266,7 +8564,7 @@\n \t(toIso88591, toUtf16Be, toUtf8): new methods.\n \t* gnu/java/security/der/DERValue.java: formatting changes only.\n \t* gnu/java/security/der/DER.java: likewise.\n-\n+ \n 2004-08-14  Mark Wielaard  <mark@klomp.org>\n \n \t* configure.ac: Add --enable-gtk-cairo checking (cairo, pangoft2).\n@@ -8297,7 +8595,7 @@\n \n \t* java/lang/Rectangle.java (intersects): Check r.width and r.height\n \tfirst.\n-\n+ \n 2004-08-13  Tom Tromey  <tromey@redhat.com>\n \n \t* java/nio/CharBuffer.java (put): Fix typo.\n@@ -8307,13 +8605,9 @@\n \t* java/nio/LongBuffer.java (put): Fix typo.\n \t* java/nio/ShortBuffer.java (put): Fix typo.\n \n-2004-08-09  Florian Weimer  <fw@deneb.enyo.de>\n-\n-\t* java/nio/ByteBuffer.java (put): Fix typo.\n-\n 2004-08-12  Guilhem Lavaux  <guilhem@kaffe.org>\n \n-\t* java/net/URL.java (URL): Delete whitespaces in the protocol string.\n+ \t* java/net/URL.java (URL): Delete whitespaces in the protocol string.\n \n 2004-08-12  Tom Tromey  <tromey@redhat.com>\n \n@@ -8324,15 +8618,19 @@\n \n \t* doc/www.gnu.org/newsitems.txt: added newitem about generics branch \n \n+2004-08-09  Florian Weimer  <fw@deneb.enyo.de>\n+\n+\t* java/nio/ByteBuffer.java (put): Fix typo.\n+\n 2004-08-09  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n-\tPR AWT/16121\n+PR AWT/16121\n \t* native/jni/gtk-peer/gthread-jni.c: Include stdio.h.  Eliminate\n \ttype-punning compiler warnings using unions.\n \t(throw): Replace bzero with memset.\n-\n+ \n 2004-08-09  Andreas Tobler  <a.tobler@schweiz.ch>\n-\t    Thomas Fitzsimmons  <fitzsim@redhat.com>\n+          Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c: Move\n \tNSA_PB macros to gtkpeer.h.  Include gtkpeer.h.\n@@ -8414,12 +8712,12 @@\n \t(nativeSetIconImage): Rename to nativeSetIconImageFromDecoder.\n \t(free_pixbuf_data): New helper function.\n \t(nativeSetIconImageFromData): New function.\n-\n+ \n 2004-08-08  Kim Ho  <kho@redhat.com>\n \n \t* java/awt/Component.java:\n \t(processMouseEvent): Consume event after\n-\tlistene\trs process it.\n+\tlisteners process it.\n \t(processMouseMotionEvent): ditto.\n \t(processMouseWheelEvent): ditto.\n \t* java/awt/Container.java:\n@@ -8442,12 +8740,113 @@\n \t(createRigidArea): Likewise.\n \t(createVerticalBox): Likewise.\n \n+2004-08-08  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Enum.java: Added package declaration.\n+\n+\t* java/util/Collections.java (reverseOrder): Syntax fix.\n+\n+\t* external/jaxp/source/gnu/xml/aelfred2/XmlParser.java: Don't use\n+\t`enum' keyword.\n+\n+\t* java/lang/Class.java, java/lang/Enum.java,\n+\tjava/lang/InheritableThreadLocal.java,\n+\tjava/util/AbstractCollection.java, java/util/Arrays.java,\n+\tjava/util/Collections.java, java/util/LinkedList.java,\n+\tjava/util/TreeSet.java, java/util/Vector.java: Fixed minor syntax\n+\terrors.\n+\n+2004-08-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/AbstractQueue.java: New file.\n+\t* java/util/LinkedList.java (element): New method.\n+\t(offer): Likewise.\n+\t(peek): Likewise.\n+\t(poll): Likewise.\n+\t(remove): Likewise.\n+\t(LinkedList): Implement Queue.\n+\t* java/util/Queue.java: New file.\n+\n+\t* java/lang/Enum.java: New file.\n+\t* java/lang/Object.java (getClass): Now generic.\n+\n+\t* java/lang/StringBuffer.java (StringBuffer(CharSequence)): New\n+\tconstructor.\n+\t(append(CharSequence)): New method\n+\t(append(CharSequence,int,int)): Likewise.\n+\t(StringBuffer): Implements Appendable.\n+\n+\t* java/lang/ref/WeakReference.java: Now generic.\n+\t* java/lang/ref/SoftReference.java: Now generic.\n+\t* java/lang/ref/ReferenceQueue.java: Now generic.\n+\t* java/lang/ref/Reference.java: Now generic.\n+\t* java/lang/ref/PhantomReference.java: Now generic.\n+\n+\t* java/lang/annotation/AnnotationFormatError.java: New file.\n+\t* java/lang/annotation/IncompleteAnnotationException.java: New\n+\tfile.\n+\t* java/lang/annotation/AnnotationTypeMismatchException.java: New\n+\tfile.\n+\t* java/lang/annotation/RetentionPolicy.java: New file.\n+\t* java/lang/annotation/ElementType.java: New file.\n+\t* java/lang/annotation/Target.java: New file.\n+\t* java/lang/annotation/Retention.java: New file.\n+\t* java/lang/annotation/Inherited.java: New file.\n+\t* java/lang/annotation/Documented.java: New file.\n+\t* java/lang/annotation/Annotation.java: New file.\n+\t* java/lang/Override.java: Fixed formatting.\n+\t* java/lang/Deprecated.java: Now Documented.\n+\n 2004-08-06  Tom Tromey  <tromey@redhat.com>\n \n \t* java/net/DatagramSocket.java: Fixed typo.\n \n \t* java/awt/image/Kernel.java (clone): Use super.clone().\n \n+2004-08-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Class.java (asSubClass): Cast `this', not argument.\n+\n+\t* vm/reference/java/lang/VMClass.java (cast): Declare.\n+\t* java/io/SequenceInputStream.java (SequenceInputStream):\n+\tConstructor now generic.\n+\t(e): Updated.\n+\t(getNextStream): Likewise.\n+\t* java/lang/Thread.java (UncaughtExceptionHandler): New\n+\tinterface.\n+\t(State): New enum.\n+\t* java/lang/Readable.java: New file.\n+\t* java/lang/Appendable.java: New file.\n+\t* java/lang/Iterable.java: Documented.\n+\t* java/lang/Class.java (asSubClass): New method.\n+\t(Class): Now generic.\n+\t* java/lang/Boolean.java (parseBoolean): New methods.\n+\t(compareTo): Likewise.\n+\t(Boolean): Now implements Comparable.\n+\t* java/lang/ThreadLocal.java: Now generic.\n+\t* java/lang/InheritableThreadLocal.java: Now generic.\n+\t* java/lang/Deprecated.java: New file.\n+\t* java/lang/Override.java: New file.\n+\t* java/lang/SuppressWarnings.java: New file.\n+\n+2004-08-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Iterable.java: New file.\n+\t* java/lang/Comparable.java, java/util/AbstractCollection.java,\n+\tjava/util/AbstractList.java, java/util/AbstractMap.java,\n+\tjava/util/AbstractSequentialList.java, java/util/AbstractSet.java,\n+\tjava/util/Arrays.java, java/util/Collection.java,\n+\tjava/util/Collections.java, java/util/Comparator.java,\n+\tjava/util/Dictionary.java, java/util/Enumeration.java,\n+\tjava/util/HashMap.java, java/util/HashSet.java,\n+\tjava/util/Iterator.java, java/util/LinkedHashSet.java,\n+\tjava/util/LinkedList.java, java/util/List.java,\n+\tjava/util/ListIterator.java, java/util/Map.java,\n+\tjava/util/Set.java, java/util/SortedMap.java,\n+\tjava/util/SortedSet.java, java/util/Stack.java,\n+\tjava/util/TreeSet.java, java/util/Vector.java: Updated to use\n+\tgenerics.\n+\n 2004-08-04  Patrik Reali  <reali@acm.org>\n \n \t* doc/www.gnu.org/newsitems.txt: latest AWT+SWING screenshots\n@@ -8476,6 +8875,17 @@\n \tfloat[] coords.\n \t* java/awt/geom/RoundRectangle2D.java: Several bugfixes (Bug #6007).\n \n+2004-08-01  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/CubicCurve2.java: Reindent.\n+\t(contains): Implemented.\n+\t(intersects): Implemented.\n+\t* java/awt/geom/QuadCurve2D.java: Likewise.\n+\t* java/awt/geom/GeneralPath.java: Reindent and document.\n+\tFully (re)implemented using separate xpoints and ypoints\n+\tfloat[] coords.\n+\t* java/awt/geom/RoundRectangle2D.java: Several bugfixes (Bug #6007).\n+\n 2004-08-01  Mark Wielaard  <mark@klomp.org>\n \n \t* NEWS: Mention new examples."}, {"sha": "ed9dca268d31a7dc84ee1b08b874e423b5c67d7b", "filename": "libjava/classpath/ChangeLog-2005", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog-2005?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c6b5d5432cab2d3e7985989d5fb31d583e382ede", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 49, "deletions": 151, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c0d43db6e04e88fd54db250ad0e0afd083208bf7", "filename": "libjava/classpath/ChangeLog.usermap", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog.usermap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FChangeLog.usermap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.usermap?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "27bb7c0d225c8cec170416b1eff299e33ee17c53", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "44620dcef0cccefebb9a9883117dcbcc78093c50", "filename": "libjava/classpath/LICENSE", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FLICENSE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FLICENSE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FLICENSE?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "649ffa5729afdc2fe5f5ae0fcb66a8b769785dc8", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0ebecf396a0cb90a1c6fd75bbc332c3bf908b80c", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "70d0475ff96a4e01ec0c2b07f9c7786a308df189", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "1b1d232169586b87050f08c303ffcc44676da397", "filename": "libjava/classpath/compile", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fcompile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fcompile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fcompile?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2fc3acce2ea194699db402e89d32d5b10b0369a3", "filename": "libjava/classpath/config.guess", "status": "modified", "additions": 289, "deletions": 375, "changes": 664, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.guess?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6b2ff9f6a7a89034532915972c4a1034fddf5bce", "filename": "libjava/classpath/config.sub", "status": "modified", "additions": 55, "deletions": 163, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.sub?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7ef4d4d214e3478953ecbb83f02346169a6208f1", "filename": "libjava/classpath/configure", "status": "modified", "additions": 2959, "deletions": 2065, "changes": 5024, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "83bab19d0a665d6403aa569f07386ede3346b9fa", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 106, "deletions": 48, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "1c4ea81e2c8f7f15769b02f793f457fffd3cb835", "filename": "libjava/classpath/doc/.cvsignore", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "56bd79eaf56f77b9e2049a7a6aaa4be761db5d2f", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "282522db0342d8750454b3dc162493b5fc709cc8", "filename": "libjava/classpath/doc/api/.cvsignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fapi%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fapi%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b63b31f34444ba1d86d54f9e7a4e50502977ffeb", "filename": "libjava/classpath/doc/api/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "231a47a31f957c5ccc6ea187e93871ea979f1068", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6d59b5d8fb4cc1caf3422737101afef0a6bfe8ee", "filename": "libjava/classpath/doc/vmintegration.texinfo", "status": "modified", "additions": 91, "deletions": 39, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d79d635e81a5db6e3f56dacb5de9e6bc4882ae5a", "filename": "libjava/classpath/examples/.cvsignore", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6940bdf25993dfd0ce281497b9b120bfc9781bf6", "filename": "libjava/classpath/examples/Makefile.am", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.am?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6e929df647e839a3e875175ddae4ea233cdeef66", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "38c4ecb987aa6d39b71ae7171777f32e9be10179", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/NamingService/Demo.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FNamingService%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FNamingService%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FNamingService%2FDemo.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "dcf39654b9fee3b0669cdaff063c113d7127b288", "filename": "libjava/classpath/examples/gnu/classpath/examples/awt/aicas.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2Faicas.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2Faicas.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2Faicas.png?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "69479465594683e530af4a1be115a1ae4d5cce14", "filename": "libjava/classpath/examples/gnu/classpath/examples/awt/palme.gif", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2Fpalme.gif", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2Fpalme.gif", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2Fpalme.gif?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d320f26c65fcb350e5dd31541d098675b55f224d", "filename": "libjava/classpath/examples/gnu/classpath/examples/icons/back.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Ficons%2Fback.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Ficons%2Fback.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Ficons%2Fback.png?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "04c57500211a95f5879793cc47ac82a8e45ad176", "filename": "libjava/classpath/examples/gnu/classpath/examples/icons/reload.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Ficons%2Freload.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Ficons%2Freload.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Ficons%2Freload.png?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "dcf39654b9fee3b0669cdaff063c113d7127b288", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/aicas.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Faicas.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Faicas.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Faicas.png?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "69479465594683e530af4a1be115a1ae4d5cce14", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/palme.gif", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fpalme.gif", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fpalme.gif", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2Fpalme.gif?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f61275e57661b56191011eae4dd48f8a0f5e8da8", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/BrowserEditorKit.java", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FBrowserEditorKit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FBrowserEditorKit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FBrowserEditorKit.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7d041a0b0e7fe675c0b3fdbf24b0061a99d1eb41", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ClasspathSwingActivityBoard.launch", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FClasspathSwingActivityBoard.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FClasspathSwingActivityBoard.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FClasspathSwingActivityBoard.launch?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "3c7f0b887ef6e391d455be69cb9fb6c6d3e332c9", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/Demo.java", "status": "modified", "additions": 7, "deletions": 89, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "1a24ae2760e27b243b96c8754628b3333791cfe1", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/HtmlDemo.java", "status": "modified", "additions": 237, "deletions": 155, "changes": 392, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FHtmlDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FHtmlDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FHtmlDemo.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "bd0e6bf15b6849324e24d54607ca45b479a01d24", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TabbedPaneDemo.java", "status": "modified", "additions": 128, "deletions": 17, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTabbedPaneDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTabbedPaneDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTabbedPaneDemo.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8da37507152b4f76290dc624be1ff2ea8f7e9fbd", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TreeDemo.java", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTreeDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTreeDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTreeDemo.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "010a94c936069c349b8d5d4dd0fb1e539598475b", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/forms.html", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fforms.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fforms.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fforms.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b9150592fa7ece820286bbf4797efbbca851b7f2", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/frame1.html", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe1.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe1.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe1.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "9dbf33c5a0bba5843de7d782d62de77bf4dc868c", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/frame2.html", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe2.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe2.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe2.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e677bd6a10095554faf792ee70661008a5e553fb", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/frame3.html", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe3.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe3.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe3.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "1da53b1017bdcb5ba0605aa26f7e94684c69d352", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/frame4.html", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe4.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe4.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframe4.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e7e2bf87c9507eb5e73019e16393aa5b8b5e57d0", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/frames.html", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframes.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframes.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fframes.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "af908e1ab23f3b29e1a7b602c7e92997694de80d", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/tables.html", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Ftables.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Ftables.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Ftables.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "786e18b77b8344cd3c35a8eb0f37071d48c2687b", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/textstyles.html", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Ftextstyles.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Ftextstyles.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Ftextstyles.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8bc987494c15f54f32acee9ed592e6593e8b92d2", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/welcome.html", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fwelcome.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fwelcome.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2Fwelcome.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "282522db0342d8750454b3dc162493b5fc709cc8", "filename": "libjava/classpath/external/.cvsignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2eeef805ad39c970208d60123f1f499de72ced4a", "filename": "libjava/classpath/external/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.am?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4cf0f43bc8f0cdad9cc54b4430599ab8b7491981", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "70845e08eb0b807b1022dc47cd27e67f726d4a0f", "filename": "libjava/classpath/external/jsr166/.cvsignore", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "30bf3f47450f41ca76d15901e7e8724d37f48962", "filename": "libjava/classpath/external/jsr166/IMPORTING", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FIMPORTING", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FIMPORTING", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FIMPORTING?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "fa2db2ebfd3801634a38d7fe928242424b4350e2", "filename": "libjava/classpath/external/jsr166/Makefile.am", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.am?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "ccfca8788e5f440ecab19430bd603ac3580c0d9f", "filename": "libjava/classpath/external/jsr166/Makefile.in", "status": "added", "additions": 522, "deletions": 0, "changes": 522, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "644df6c491d5d6264cb71f6b06c2a23b3792c2cd", "filename": "libjava/classpath/external/jsr166/java/util/AbstractQueue.java", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FAbstractQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FAbstractQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FAbstractQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c0ee16ea7b387157ea11796aa096ede5b5989ff4", "filename": "libjava/classpath/external/jsr166/java/util/ArrayDeque.java", "status": "added", "additions": 839, "deletions": 0, "changes": 839, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FArrayDeque.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FArrayDeque.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FArrayDeque.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "a769561dc0ab661338ce30f55c41a05cd66fee71", "filename": "libjava/classpath/external/jsr166/java/util/Deque.java", "status": "added", "additions": 547, "deletions": 0, "changes": 547, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FDeque.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FDeque.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FDeque.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "a55f84bddd870abe56470b41159240080ac1ca73", "filename": "libjava/classpath/external/jsr166/java/util/NavigableMap.java", "status": "added", "additions": 395, "deletions": 0, "changes": 395, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FNavigableMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FNavigableMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FNavigableMap.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e14fe347d71e6f64c9a0d8e4450fbe7620143c43", "filename": "libjava/classpath/external/jsr166/java/util/NavigableSet.java", "status": "added", "additions": 290, "deletions": 0, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FNavigableSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FNavigableSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FNavigableSet.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5711545b07b2c5d6d8184b71682779e30f30f784", "filename": "libjava/classpath/external/jsr166/java/util/Queue.java", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2FQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "ac15c501083d80d93fbb3f7261265808f2111539", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/AbstractExecutorService.java", "status": "added", "additions": 270, "deletions": 0, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FAbstractExecutorService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FAbstractExecutorService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FAbstractExecutorService.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "bdf34d28a208d11fa7f949cb5a01b7a6f948a7a7", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ArrayBlockingQueue.java", "status": "added", "additions": 778, "deletions": 0, "changes": 778, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FArrayBlockingQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FArrayBlockingQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FArrayBlockingQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d77a96555ad75ba721980cf549b5f6abda33a54d", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/BlockingDeque.java", "status": "added", "additions": 613, "deletions": 0, "changes": 613, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBlockingDeque.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBlockingDeque.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBlockingDeque.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b47cc98427352c47e559a67b4ed56b5a021b055f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/BlockingQueue.java", "status": "added", "additions": 344, "deletions": 0, "changes": 344, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBlockingQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBlockingQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBlockingQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "3f93fbb9dc421aa122f7cffc4098ebff7e709eb0", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/BrokenBarrierException.java", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBrokenBarrierException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBrokenBarrierException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FBrokenBarrierException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "abc4d04075a2e1e10b9d4c33fd6e67a6fe99ce9f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Callable.java", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCallable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCallable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCallable.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2c29544a0ea0e47a0e802fcf2698c7378d45242a", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/CancellationException.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCancellationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCancellationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCancellationException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "df9f719c49db07447fc01db88a1a3987d038660c", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/CompletionService.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCompletionService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCompletionService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCompletionService.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7f6d4493c069ed16f9b8b3124aeb603876a45cfa", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ConcurrentHashMap.java", "status": "added", "additions": 1277, "deletions": 0, "changes": 1277, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentHashMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentHashMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentHashMap.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "000f4a4c93a8540dfd9d47a4bd4fc4928cd6c280", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ConcurrentLinkedQueue.java", "status": "added", "additions": 480, "deletions": 0, "changes": 480, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentLinkedQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentLinkedQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentLinkedQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6e5bd073880a4e9303042460d7d8f44128f00fa5", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ConcurrentMap.java", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentMap.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7d86afb7034d169b172ad7e84c94631748aa64ee", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ConcurrentNavigableMap.java", "status": "added", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentNavigableMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentNavigableMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentNavigableMap.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "52cd17a52d338cd54f8833c65734f9ee73f57d4c", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ConcurrentSkipListMap.java", "status": "added", "additions": 3114, "deletions": 0, "changes": 3114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7da50d593aea1216bc8c2a10033a51e0d3c5f916", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ConcurrentSkipListSet.java", "status": "added", "additions": 456, "deletions": 0, "changes": 456, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListSet.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "39c0e5868de66e8453eb763fb2d075fc5b142413", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/CopyOnWriteArraySet.java", "status": "added", "additions": 364, "deletions": 0, "changes": 364, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCopyOnWriteArraySet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCopyOnWriteArraySet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCopyOnWriteArraySet.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "016c1a7a55cbbe5f5bdad0561a99f966f00a14f2", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/CountDownLatch.java", "status": "added", "additions": 290, "deletions": 0, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCountDownLatch.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCountDownLatch.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCountDownLatch.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e72577537d4c5fdd4499d30c6785fd0f868f5582", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/CyclicBarrier.java", "status": "added", "additions": 454, "deletions": 0, "changes": 454, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCyclicBarrier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCyclicBarrier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FCyclicBarrier.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8b839878c3a00bd19039a59041e2c623ede5ec61", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/DelayQueue.java", "status": "added", "additions": 487, "deletions": 0, "changes": 487, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FDelayQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FDelayQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FDelayQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b1ff4eee5552d9bc9d709139962ce69ea8fe214e", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Delayed.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FDelayed.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FDelayed.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FDelayed.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "fb917f4321eabccea6e806145a90cb3ff8833919", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Exchanger.java", "status": "added", "additions": 656, "deletions": 0, "changes": 656, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExchanger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExchanger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExchanger.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "bc561e58ebb9380d713d4d93764ece39082efb29", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ExecutionException.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutionException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutionException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutionException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "a61e9215291277cb2212da01f99f6d22cc72a16f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Executor.java", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutor.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "9b7a0e027a02155760dcf26754484864e4d3f343", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ExecutorCompletionService.java", "status": "added", "additions": 174, "deletions": 0, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutorCompletionService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutorCompletionService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutorCompletionService.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "77731926562e6e133d239e06a682157ef1d8e2bf", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ExecutorService.java", "status": "added", "additions": 306, "deletions": 0, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutorService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutorService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutorService.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f44e66160f70495b740107c75828843a961de080", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Executors.java", "status": "added", "additions": 666, "deletions": 0, "changes": 666, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutors.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutors.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FExecutors.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0459ee453f0ec8ff7880c09ad1bdaafe92f2ba2f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Future.java", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FFuture.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FFuture.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FFuture.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "bbe49d7aed0e41776a7758e80f0b62ac0f254b80", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/FutureTask.java", "status": "added", "additions": 325, "deletions": 0, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FFutureTask.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FFutureTask.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FFutureTask.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "91acccfbe8c316dbaf530b72eba3e059134fd34e", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/LinkedBlockingDeque.java", "status": "added", "additions": 1021, "deletions": 0, "changes": 1021, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FLinkedBlockingDeque.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FLinkedBlockingDeque.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FLinkedBlockingDeque.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "3dedee56da0687bd1247698d161a760f6c079af7", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/LinkedBlockingQueue.java", "status": "added", "additions": 807, "deletions": 0, "changes": 807, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FLinkedBlockingQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FLinkedBlockingQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FLinkedBlockingQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "91ae61b631ff100154566894861e99b03c8d0f8e", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/PriorityBlockingQueue.java", "status": "added", "additions": 563, "deletions": 0, "changes": 563, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FPriorityBlockingQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FPriorityBlockingQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FPriorityBlockingQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "30b043d6627649eb2b79c90b1bc67b35792e046e", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/RejectedExecutionException.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRejectedExecutionException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRejectedExecutionException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRejectedExecutionException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4b4bbeab1bb8da84d57d8c6d2cc1c7b3f70f4444", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/RejectedExecutionHandler.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRejectedExecutionHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRejectedExecutionHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRejectedExecutionHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d74211d130ba05173118fa23122de29fa3c8212f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/RunnableFuture.java", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRunnableFuture.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRunnableFuture.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRunnableFuture.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0e8cc328c1e56ba8d0c36e27a89eefac69180692", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/RunnableScheduledFuture.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRunnableScheduledFuture.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRunnableScheduledFuture.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FRunnableScheduledFuture.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "976537ef5d61057b95fb2904e5c2715654b2ec9e", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ScheduledExecutorService.java", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledExecutorService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledExecutorService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledExecutorService.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "239d681f6d9f16e4b5aa1efc3a0881ee9f6e1192", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ScheduledFuture.java", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledFuture.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledFuture.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledFuture.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d4da334c6e006b2748079c524143e5c1f5c0bd04", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ScheduledThreadPoolExecutor.java", "status": "added", "additions": 626, "deletions": 0, "changes": 626, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "94e9746ae852cee5dc1a69bcf4f2f1614a7264ed", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/Semaphore.java", "status": "added", "additions": 681, "deletions": 0, "changes": 681, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FSemaphore.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FSemaphore.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FSemaphore.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e47e0401cfe4a5cc2accb2776abaa5cd8c77f4b8", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/SynchronousQueue.java", "status": "added", "additions": 1127, "deletions": 0, "changes": 1127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FSynchronousQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FSynchronousQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FSynchronousQueue.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "eca8dceb0e9c4e08cd126a258c7aa88a46eace9c", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ThreadFactory.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FThreadFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FThreadFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FThreadFactory.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "ea89a2c082f49215aafa9588b819909a8a28c34f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/ThreadPoolExecutor.java", "status": "added", "additions": 1605, "deletions": 0, "changes": 1605, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FThreadPoolExecutor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FThreadPoolExecutor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FThreadPoolExecutor.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2cd3d06aba1f703d79d5fec71bb9df98432e9388", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/TimeUnit.java", "status": "added", "additions": 331, "deletions": 0, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FTimeUnit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FTimeUnit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FTimeUnit.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8b84f28e55d10d9a9069710cad278cdfd4ec999f", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/TimeoutException.java", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FTimeoutException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FTimeoutException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2FTimeoutException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "bd823bd2c232a297741ca46964eb7699d9aa7c50", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicBoolean.java", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicBoolean.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicBoolean.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicBoolean.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "dc4d470c32a3981e8324862cef613cd86606bef2", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicInteger.java", "status": "added", "additions": 234, "deletions": 0, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicInteger.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2ad754fda2b2a834345178da238090f8a1f7a7d7", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicIntegerArray.java", "status": "added", "additions": 255, "deletions": 0, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicIntegerArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicIntegerArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicIntegerArray.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "102c2a7c9bd58c6efa39817b73a940b4f9408748", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.java", "status": "added", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicIntegerFieldUpdater.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicIntegerFieldUpdater.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicIntegerFieldUpdater.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "136dc60fb7d844f0a5c34d22f9666c9be259e71b", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicLong.java", "status": "added", "additions": 248, "deletions": 0, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLong.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLong.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLong.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c582cba547ad7c4bcc8f2ba622435fca73a25fa0", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicLongArray.java", "status": "added", "additions": 255, "deletions": 0, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLongArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLongArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLongArray.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "dafd089236e2dc8492106766fce17e51fbac952c", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicLongFieldUpdater.java", "status": "added", "additions": 406, "deletions": 0, "changes": 406, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLongFieldUpdater.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLongFieldUpdater.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicLongFieldUpdater.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "85335b737e5e6f35d2dae0ede87c260c487573ed", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicMarkableReference.java", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicMarkableReference.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicMarkableReference.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicMarkableReference.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e7c989c2b7e629f24fcc91ac8766bbce24c85f23", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicReference.java", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReference.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReference.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReference.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "91b601ed96e2511b267d499a3c9af7a67499cbcb", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicReferenceArray.java", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReferenceArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReferenceArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReferenceArray.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5c18eca33cf6b7d5ce9dbbe7faab01c6b7848f61", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.java", "status": "added", "additions": 275, "deletions": 0, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReferenceFieldUpdater.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReferenceFieldUpdater.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicReferenceFieldUpdater.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "558808216aba5412670384a442bf946dd36c15a0", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/AtomicStampedReference.java", "status": "added", "additions": 165, "deletions": 0, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicStampedReference.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicStampedReference.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2FAtomicStampedReference.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6bc191ddf01511d13a1f95007cc33cd141e93cfd", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/atomic/package.html", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fatomic%2Fpackage.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f3780e5a6928c2e6c8b2c0c1454be4b8a67ce59a", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/AbstractOwnableSynchronizer.java", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractOwnableSynchronizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractOwnableSynchronizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractOwnableSynchronizer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "88a4354bc714ab162312ca50a42d1869260dc896", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/AbstractQueuedLongSynchronizer.java", "status": "added", "additions": 1934, "deletions": 0, "changes": 1934, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractQueuedLongSynchronizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractQueuedLongSynchronizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractQueuedLongSynchronizer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "a3abb2cf553403ca872984e4a1498bba0762a3e8", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/AbstractQueuedSynchronizer.java", "status": "added", "additions": 2159, "deletions": 0, "changes": 2159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractQueuedSynchronizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractQueuedSynchronizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FAbstractQueuedSynchronizer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5d24128e1729ed836541c97d11fb0f6d83b1f37c", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/Condition.java", "status": "added", "additions": 435, "deletions": 0, "changes": 435, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FCondition.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FCondition.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FCondition.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4b9abd66543604c886ddaa1b462c6576a2850a31", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/Lock.java", "status": "added", "additions": 327, "deletions": 0, "changes": 327, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FLock.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "28728ae2bba1eef541e4dedc31dd94279ef5c791", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/LockSupport.java", "status": "added", "additions": 352, "deletions": 0, "changes": 352, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FLockSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FLockSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FLockSupport.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "484f68d1502a20ac551d13a3c3831acca76289ac", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/ReadWriteLock.java", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReadWriteLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReadWriteLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReadWriteLock.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4a2fc175c17235d6ab517d4171330d2b4477ad6c", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/ReentrantLock.java", "status": "added", "additions": 740, "deletions": 0, "changes": 740, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantLock.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "df18a7c0884a9fb328835342937f14e5e04952e0", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/ReentrantReadWriteLock.java", "status": "added", "additions": 1346, "deletions": 0, "changes": 1346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4b945258b8d9c7dd23c5f0ce26b9c746089b4f4a", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/locks/package.html", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Flocks%2Fpackage.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "20227e1fece24be0a800f25f2deacb6d86603331", "filename": "libjava/classpath/external/jsr166/java/util/concurrent/package.html", "status": "added", "additions": 222, "deletions": 0, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Fjava%2Futil%2Fconcurrent%2Fpackage.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "eef3c9169969c8fb65a769b95859077119cdb721", "filename": "libjava/classpath/external/jsr166/readme", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Freadme", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Freadme", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2Freadme?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "282522db0342d8750454b3dc162493b5fc709cc8", "filename": "libjava/classpath/external/relaxngDatatype/.cvsignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0d40cf484b3903310d8b054d7bb1b70e33b957e4", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "282522db0342d8750454b3dc162493b5fc709cc8", "filename": "libjava/classpath/external/sax/.cvsignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0f0077129b166f244d9c06c85bb9cb3ccb53b8dc", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7d8e9beec37c97f5f1ffbcf4c5bdcfb59d519df2", "filename": "libjava/classpath/external/sax/org/xml/sax/AttributeList.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FAttributeList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FAttributeList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FAttributeList.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "517359089362520d944060bde2cbf042c0b5bac6", "filename": "libjava/classpath/external/sax/org/xml/sax/Attributes.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FAttributes.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c0df614108d16bcec89d119f031631aebce8ffb5", "filename": "libjava/classpath/external/sax/org/xml/sax/ContentHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FContentHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FContentHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FContentHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f894298cdedfbdbdc17b9ece29b48c6edf2c60d8", "filename": "libjava/classpath/external/sax/org/xml/sax/DTDHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FDTDHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FDTDHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FDTDHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "08429b6bcf4da2622079594db86eca8a72e0f5b4", "filename": "libjava/classpath/external/sax/org/xml/sax/DocumentHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FDocumentHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FDocumentHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FDocumentHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e240ba14b48b423817f0a1b191073f035dbb2e8c", "filename": "libjava/classpath/external/sax/org/xml/sax/EntityResolver.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FEntityResolver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FEntityResolver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FEntityResolver.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5ebe3926321635089111221d15cb9e6f1aea8f40", "filename": "libjava/classpath/external/sax/org/xml/sax/ErrorHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FErrorHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FErrorHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FErrorHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "7d6ce73616ae959ad7d44e52581483bd14b0efc4", "filename": "libjava/classpath/external/sax/org/xml/sax/HandlerBase.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FHandlerBase.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FHandlerBase.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FHandlerBase.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "3737b63712d6463bc0e13ae03fe5d1a12265097e", "filename": "libjava/classpath/external/sax/org/xml/sax/InputSource.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FInputSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FInputSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FInputSource.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "63947df7ac75af3ba7dc522c07ed2e620fc3c783", "filename": "libjava/classpath/external/sax/org/xml/sax/Locator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FLocator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FLocator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FLocator.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5866eb09ce1b9f1591b7f669515396ef6c708152", "filename": "libjava/classpath/external/sax/org/xml/sax/Parser.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FParser.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b3c23e9aedbc6328cd874960c9c7d3c1a0b88f7e", "filename": "libjava/classpath/external/sax/org/xml/sax/SAXException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "dc411b105ce7a0e41d1028f0b91b80025d350aaa", "filename": "libjava/classpath/external/sax/org/xml/sax/SAXNotRecognizedException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXNotRecognizedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXNotRecognizedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXNotRecognizedException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "232ce8026debb8bd6de02f045ba9b00b530cec9d", "filename": "libjava/classpath/external/sax/org/xml/sax/SAXNotSupportedException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXNotSupportedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXNotSupportedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXNotSupportedException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c49ff095be38253bad3447213b23c7acf8df41c2", "filename": "libjava/classpath/external/sax/org/xml/sax/SAXParseException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXParseException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXParseException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FSAXParseException.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "363328e2d559e57779795fc32732bead737642ef", "filename": "libjava/classpath/external/sax/org/xml/sax/XMLFilter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FXMLFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FXMLFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FXMLFilter.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "92d0a94e3d199a0894c2480d1584bfe796f89178", "filename": "libjava/classpath/external/sax/org/xml/sax/XMLReader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FXMLReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FXMLReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2FXMLReader.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5c839bd1acfd49adbc0cfd2bca547ab4d8d9de05", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/Attributes2.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FAttributes2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FAttributes2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FAttributes2.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "485a5d6ac44633891f987ef5a8c37e2f780b6332", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/Attributes2Impl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FAttributes2Impl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FAttributes2Impl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FAttributes2Impl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "1bb4dea4a4196dafed8ad15096ea41dd7dd2713d", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/DeclHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FDeclHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FDeclHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FDeclHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2b792e9df2496db9c4d8d7b96f3a1c5a0ee0f86a", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/DefaultHandler2.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FDefaultHandler2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FDefaultHandler2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FDefaultHandler2.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "1936f7e042180cf46f931a1e4f8d57e7c614b230", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/EntityResolver2.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FEntityResolver2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FEntityResolver2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FEntityResolver2.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "076bdf857c20a2e7139536436a9a1a0143be7023", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/LexicalHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLexicalHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLexicalHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLexicalHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5fe3ba7706a37f642cba65db872b07874e890b3f", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/Locator2.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f0b35459dbac0818a1265567fcea7a2a22f7d4b1", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/Locator2Impl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2Impl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2Impl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2FLocator2Impl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0b7448001080158bc2bc5c9034454b8ee8711690", "filename": "libjava/classpath/external/sax/org/xml/sax/ext/package.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fext%2Fpackage.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "ca859fb1450b3b2b24e7d2cc30500504fd7655ba", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/AttributeListImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributeListImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributeListImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributeListImpl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8753968ba0a3cd956f3d312edd7bab0aa155d6ed", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/AttributesImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributesImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributesImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FAttributesImpl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "e01c3be403def4e901a75f181ee8d869f5553d58", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/DefaultHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FDefaultHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FDefaultHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FDefaultHandler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6fa4857277c0027a6f3d28159c4231c902f442b5", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/LocatorImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FLocatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FLocatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FLocatorImpl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "01e11faf83e9b6d186ab1752f259d2600523cf19", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/NamespaceSupport.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FNamespaceSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FNamespaceSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FNamespaceSupport.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "70c043eb42fa4a6b19a296c2040dba86ccf410bb", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/NewInstance.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FNewInstance.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FNewInstance.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FNewInstance.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "748ad1c8499c94350aebcafb57a0f02b767b3530", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/ParserAdapter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserAdapter.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "23139981088be5c37526806b531a675195d759ea", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/ParserFactory.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FParserFactory.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "64ff0a4cf88e072db0139178b2c15cfd4501c466", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/XMLFilterImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLFilterImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLFilterImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLFilterImpl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d2214747d74e7e926154de859335efc58d40e1cb", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/XMLReaderAdapter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderAdapter.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0516ff24e7156f56dcfc14d94972ffd86d17821d", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/XMLReaderFactory.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2FXMLReaderFactory.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "06d4a30a63c4d5ce8de369e27bc3082519002aba", "filename": "libjava/classpath/external/sax/org/xml/sax/helpers/package.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fhelpers%2Fpackage.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b71f67fdda7174e912ae8069f079d17e13342478", "filename": "libjava/classpath/external/sax/org/xml/sax/package.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2Forg%2Fxml%2Fsax%2Fpackage.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "282522db0342d8750454b3dc162493b5fc709cc8", "filename": "libjava/classpath/external/w3c_dom/.cvsignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c7e0e497a5fba1eb160ad27ad044841b5ddf0dc4", "filename": "libjava/classpath/external/w3c_dom/COPYRIGHT.html", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FCOPYRIGHT.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FCOPYRIGHT.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FCOPYRIGHT.html?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "6bf5ded7628daa4caa0aca1898af9c5dc127007f", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "28f1c5672f6dee371be6a60df78610779a0c6c27", "filename": "libjava/classpath/gnu/CORBA/CDR/Vio.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "fc1e513efece7294bc81ad47185303a87e3fb574", "filename": "libjava/classpath/gnu/CORBA/CollocatedOrbs.java", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCollocatedOrbs.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCollocatedOrbs.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCollocatedOrbs.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "53ef2dd17d98c18e2aedd15a91377ee4e1f1bc5b", "filename": "libjava/classpath/gnu/CORBA/Connected_objects.java", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "108ca270d215eb42fc294dffff024c8910a5a68e", "filename": "libjava/classpath/gnu/CORBA/NamingService/Binding_iterator_impl.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FBinding_iterator_impl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FBinding_iterator_impl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FBinding_iterator_impl.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d339cb194e609ffe95bf764151df93669efb9d3c", "filename": "libjava/classpath/gnu/CORBA/NamingService/Ext.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FExt.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FExt.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FExt.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "aa922b96a54ef6021f3e64a0338dd20362c30f84", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameParser.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d717b9d40118ae5352f92a98b52d975dd754444f", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameTransformer.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "a8cd0b313b3ae878de77f4f202ba2dbad7732d48", "filename": "libjava/classpath/gnu/CORBA/NamingService/NamingServiceTransient.java", "status": "modified", "additions": 12, "deletions": 30, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "cec87931e288ceb324a6c54d55f25bdee6c5ce40", "filename": "libjava/classpath/gnu/CORBA/NamingService/TransientContext.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FTransientContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FTransientContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FTransientContext.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "bfb5e3d86c19f118a25b35ae19ae175946236de9", "filename": "libjava/classpath/gnu/CORBA/OrbFunctional.java", "status": "modified", "additions": 69, "deletions": 53, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4a9ef8d9044d1ec1a2756adef3e34f9101c04518", "filename": "libjava/classpath/gnu/CORBA/Poa/LocalRequest.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalRequest.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "4fc51ff154b26961dd83ba69e9ea837d81c5e29a", "filename": "libjava/classpath/gnu/CORBA/Poa/ORB_1_4.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FORB_1_4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FORB_1_4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FORB_1_4.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8ceec23d781b33bc8c8057354ee90448d6208ddb", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuPOA.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "77b0ff46792afbda5bd14aed1d657080552fc1bf", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuServantObject.java", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f3efb6677f04abb6b17676f51680669559934a28", "filename": "libjava/classpath/gnu/CORBA/SafeForDirectCalls.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSafeForDirectCalls.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSafeForDirectCalls.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSafeForDirectCalls.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "cb0a7d6034d3c63b1589bc5d46f699fa48af5bc2", "filename": "libjava/classpath/gnu/CORBA/SimpleDelegate.java", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimpleDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimpleDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimpleDelegate.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "11f6639ebbd02fa7972e2ea6da3dd4d69938d20b", "filename": "libjava/classpath/gnu/classpath/.cvsignore", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2F.cvsignore?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "284fa02f1921be1d53e81db93ae60386f22a1364", "filename": "libjava/classpath/gnu/classpath/ListenerData.java", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FListenerData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FListenerData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FListenerData.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d091f1ed0c071f429d1f9a4f4fa716c711ebf9cb", "filename": "libjava/classpath/gnu/classpath/SystemProperties.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FSystemProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FSystemProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FSystemProperties.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "dce257502a73c30bd10c55c1273d2848e13b3d3b", "filename": "libjava/classpath/gnu/classpath/debug/Component.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8919e80c78562ade83ed701f4a64ed57b9acf061", "filename": "libjava/classpath/gnu/classpath/debug/SystemLogger.java", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSystemLogger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSystemLogger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSystemLogger.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8f15c8519331f87cfbeb2942362d25e88c505165", "filename": "libjava/classpath/gnu/java/awt/ComponentReshapeEvent.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FComponentReshapeEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FComponentReshapeEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FComponentReshapeEvent.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c1558f6ff58bc605918f737d77960f3398507e91", "filename": "libjava/classpath/gnu/java/awt/LowPriorityEvent.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FLowPriorityEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FLowPriorityEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FLowPriorityEvent.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "77ea28a3e92992c8bc9f6fcce1552dbc674f2312", "filename": "libjava/classpath/gnu/java/awt/color/PyccConverter.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fcolor%2FPyccConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fcolor%2FPyccConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fcolor%2FPyccConverter.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b68fa105803eb83ef4636d87a0287c2c0001a1ef", "filename": "libjava/classpath/gnu/java/awt/dnd/peer/gtk/GtkDragSourceContextPeer.java", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDragSourceContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDragSourceContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDragSourceContextPeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f24b3f39bcb6b18bae1f17d671d306b6776a517e", "filename": "libjava/classpath/gnu/java/awt/dnd/peer/gtk/GtkDropTargetContextPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fdnd%2Fpeer%2Fgtk%2FGtkDropTargetContextPeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b2c9912342bafeb6850ce909bdc504f16172632b", "filename": "libjava/classpath/gnu/java/awt/font/autofit/AxisHints.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FAxisHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FAxisHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FAxisHints.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "cb3992825ab97c1f43f0da5836f241a59d43217b", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Constants.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FConstants.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "ad73a04a69b4341040f2cd505d4f66ed3461dc27", "filename": "libjava/classpath/gnu/java/awt/font/autofit/GlyphHints.java", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FGlyphHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FGlyphHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FGlyphHints.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "0352b41a45a50fdbae68f844bb6a1f43d922351a", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Latin.java", "status": "added", "additions": 177, "deletions": 0, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatin.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatin.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatin.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8ca1e6d9ed2bc0d43d03cf56616417aa988eed15", "filename": "libjava/classpath/gnu/java/awt/font/autofit/LatinAxis.java", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinAxis.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinAxis.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinAxis.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "cd955348b3798cc7315fd5faad44f3b0a82d0200", "filename": "libjava/classpath/gnu/java/awt/font/autofit/LatinMetrics.java", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinMetrics.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "10518512578d034d1749f647656a9ce0a1bf19b9", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Scaler.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScaler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScaler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScaler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "3b353010f2db6124f7c2331e2977d64c907f34a4", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Script.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScript.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScript.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScript.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "77c815ae59df7146faf84eee7908c21b65b1d327", "filename": "libjava/classpath/gnu/java/awt/font/autofit/ScriptMetrics.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScriptMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScriptMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FScriptMetrics.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "32032a48fccb8f9389c87f80c3f1fc7f706407f2", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Segment.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FSegment.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d4d540069ee896f5d043f5b6298f3de274997bc6", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Width.java", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FWidth.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FWidth.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FWidth.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "184075094b66cb4abda9e5122518ab6016a41ff0", "filename": "libjava/classpath/gnu/java/awt/font/opentype/CharGlyphMap.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FCharGlyphMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FCharGlyphMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FCharGlyphMap.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "efc30811f7b389972c59617465dc320655da0de8", "filename": "libjava/classpath/gnu/java/awt/font/opentype/OpenTypeFont.java", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FOpenTypeFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FOpenTypeFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FOpenTypeFont.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "83a31c576c7cc4da4fbd02fbf7d3e6b273745529", "filename": "libjava/classpath/gnu/java/awt/font/opentype/Scaler.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FScaler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FScaler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FScaler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "3733afe92d83bf2a98d814ac20c9ba9eb1a6c766", "filename": "libjava/classpath/gnu/java/awt/font/opentype/truetype/GlyphLoader.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FGlyphLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FGlyphLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FGlyphLoader.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8dfdeff0790018874bafecb987ae4ed2e80b739f", "filename": "libjava/classpath/gnu/java/awt/font/opentype/truetype/TrueTypeScaler.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FTrueTypeScaler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FTrueTypeScaler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FTrueTypeScaler.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "ff5bb631619e70ce2e93526732a5c4a2cb409b11", "filename": "libjava/classpath/gnu/java/awt/font/opentype/truetype/Zone.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FZone.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "da21253980fcb2c6669fbe8a2b5f221e72d2585c", "filename": "libjava/classpath/gnu/java/awt/java2d/AbstractGraphics2D.java", "status": "modified", "additions": 135, "deletions": 46, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "97a5372f6bd608bc77c62546a5d1067300ab8a02", "filename": "libjava/classpath/gnu/java/awt/java2d/QuadSegment.java", "status": "modified", "additions": 50, "deletions": 19, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FQuadSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FQuadSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FQuadSegment.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "034b53cadd3c822a088bf1f3a2dda627cd1b9b49", "filename": "libjava/classpath/gnu/java/awt/java2d/ShapeCache.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FShapeCache.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FShapeCache.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FShapeCache.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "db0a2e65804e684d424f092ea22002eac6dd30fc", "filename": "libjava/classpath/gnu/java/awt/java2d/TexturePaintContext.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FTexturePaintContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FTexturePaintContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FTexturePaintContext.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "2176f34a5f195ddcba66c9f301cff34d5aae434a", "filename": "libjava/classpath/gnu/java/awt/peer/ClasspathFontPeer.java", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f9a7bac8ee62eb866c710691d359a92b717137af", "filename": "libjava/classpath/gnu/java/awt/peer/GLightweightPeer.java", "status": "modified", "additions": 167, "deletions": 80, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "962ecd9904ef2a4dd8efdb40f50e6c689bd3b449", "filename": "libjava/classpath/gnu/java/awt/peer/NativeEventLoopRunningEvent.java", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FNativeEventLoopRunningEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FNativeEventLoopRunningEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FNativeEventLoopRunningEvent.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5238bfe7410f4fe689d0daa94596bc8cf18dc6c5", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/AsyncImage.java", "status": "added", "additions": 283, "deletions": 0, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FAsyncImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FAsyncImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FAsyncImage.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "c792645d3e845bd61e797765c048364af30f1215", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/BufferedImageGraphics.java", "status": "modified", "additions": 352, "deletions": 53, "changes": 405, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FBufferedImageGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FBufferedImageGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FBufferedImageGraphics.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "348801800d266bc7d24b75751a43569efdb90029", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoGraphics2D.java", "status": "modified", "additions": 378, "deletions": 131, "changes": 509, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "5b63e62e7ed03dadf54e8271849515d1b468311a", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoSurface.java", "status": "modified", "additions": 78, "deletions": 52, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "36743b9c2da32848e0d47917298a9938c3c89c41", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoSurfaceGraphics.java", "status": "modified", "additions": 215, "deletions": 1, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurfaceGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurfaceGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurfaceGraphics.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "763ad7dfddd318eddb62635568e0500ee7ede7ca", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/ComponentGraphics.java", "status": "modified", "additions": 220, "deletions": 63, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "131a964488fe00999bc5f62e2a206970a9939ea7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/FreetypeGlyphVector.java", "status": "modified", "additions": 83, "deletions": 66, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FFreetypeGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FFreetypeGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FFreetypeGlyphVector.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b2ffed10ea6ebe1c6da6a3e4fce569ff89f578b4", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkFontMetrics.java", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c648dedbde727ca3f883bb5fd773aa4af70d3369/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c648dedbde727ca3f883bb5fd773aa4af70d3369/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java?ref=c648dedbde727ca3f883bb5fd773aa4af70d3369"}, {"sha": "5f5126ac5904d2cd6910759ebb30a3857ddd1642", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "modified", "additions": 179, "deletions": 50, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "db725b697dff9b05d99a11a48308d420127366ac", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d866cefd33cdf28d8ba086b9fcdea3924aa215c7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "b1ef09d6e1b0ee4cf1342bc358aa270a4f52c0db", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 59, "deletions": 14, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "d113e92f5b4dcefb68b7ae0203113d40f8813d99", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "53e97bb1a8a693b7c40dc613ad63816700d7e57f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkImageConsumer.java", "status": "modified", "additions": 30, "deletions": 13, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "a4e280fe45ff9cf8e58a0faba3a79c4cdc4380d0", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMainThread.java", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "f746a47479f0a263d0295840ed10e74d50afa8cf", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 68, "deletions": 44, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}, {"sha": "8660ced8ec1bb5741ef13595e2ff9522f3452d7f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkVolatileImage.java", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkVolatileImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b8365cafc3a344a22d3980b8ed885f5c6d8357/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkVolatileImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkVolatileImage.java?ref=97b8365cafc3a344a22d3980b8ed885f5c6d8357"}]}