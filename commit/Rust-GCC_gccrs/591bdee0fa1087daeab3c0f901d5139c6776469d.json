{"sha": "591bdee0fa1087daeab3c0f901d5139c6776469d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkxYmRlZTBmYTEwODdkYWVhYjNjMGY5MDFkNTEzOWM2Nzc2NDY5ZA==", "commit": {"author": {"name": "Philippe Gil", "email": "gil@adacore.com", "date": "2020-02-03T13:56:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:00Z"}, "message": "[Ada] Add gnatname use for multiple units files support\n\n2020-06-08  Philippe Gil  <gil@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_ugn/the_gnat_compilation_model.rst: in \"Handling\n\tFiles with Multiple Units\" part documents gnatname use for\n\tunmodified files handling and gnatchop use for files\n\trefactoring.\n\t* gnat_ugn.texi: Regenerate.", "tree": {"sha": "8ae1f5be8a2a80dcd57e7cdb80dad3ba4b2ed601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae1f5be8a2a80dcd57e7cdb80dad3ba4b2ed601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/591bdee0fa1087daeab3c0f901d5139c6776469d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591bdee0fa1087daeab3c0f901d5139c6776469d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/591bdee0fa1087daeab3c0f901d5139c6776469d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591bdee0fa1087daeab3c0f901d5139c6776469d/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fccf77d504b72a749b6aba877454b9d846c0b568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccf77d504b72a749b6aba877454b9d846c0b568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccf77d504b72a749b6aba877454b9d846c0b568"}], "stats": {"total": 54, "additions": 22, "deletions": 32}, "files": [{"sha": "69fc95db15df4ca774dc72455611955d2b3dd787", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/591bdee0fa1087daeab3c0f901d5139c6776469d/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/591bdee0fa1087daeab3c0f901d5139c6776469d/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=591bdee0fa1087daeab3c0f901d5139c6776469d", "patch": "@@ -1067,23 +1067,18 @@ The basic compilation model of GNAT requires that a file submitted to the\n compiler have only one unit and there be a strict correspondence\n between the file name and the unit name.\n \n-The ``gnatchop`` utility allows both of these rules to be relaxed,\n-allowing GNAT to process files which contain multiple compilation units\n-and files with arbitrary file names. ``gnatchop``\n-reads the specified file and generates one or more output files,\n-containing one unit per file. The unit and the file name correspond,\n-as required by GNAT.\n-\n-If you want to permanently restructure a set of 'foreign' files so that\n-they match the GNAT rules, and do the remaining development using the\n-GNAT structure, you can simply use ``gnatchop`` once, generate the\n-new set of files and work with them from that point on.\n+If you want to keep your files with multiple units,\n+perhaps to maintain compatibility with some other Ada compilation system,\n+you can use ``gnatname`` to generate or update your project files.\n+Generated or modified project files can be processed by GNAT.\n+\n+See :ref:`Handling_Arbitrary_File_Naming_Conventions_with_gnatname`\n+for more details on how to use `gnatname`.\n \n-Alternatively, if you want to keep your files in the 'foreign' format,\n-perhaps to maintain compatibility with some other Ada compilation\n-system, you can set up a procedure where you use ``gnatchop`` each\n-time you compile, regarding the source files that it writes as temporary\n-files that you throw away.\n+Alternatively, if you want to permanently restructure a set of 'foreign'\n+files so that they match the GNAT rules, and do the remaining development\n+using the GNAT structure, you can simply use ``gnatchop`` once, generate the\n+new set of files and work with them from that point on.\n \n Note that if your file containing multiple units starts with a byte order\n mark (BOM) specifying UTF-8 encoding, then the files generated by gnatchop"}, {"sha": "1cbaf2f0a6a43e0e461c2855b96271230dfc1f1d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/591bdee0fa1087daeab3c0f901d5139c6776469d/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/591bdee0fa1087daeab3c0f901d5139c6776469d/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=591bdee0fa1087daeab3c0f901d5139c6776469d", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , May 04, 2020\n+GNAT User's Guide for Native Platforms , May 05, 2020\n \n AdaCore\n \n@@ -2632,23 +2632,18 @@ The basic compilation model of GNAT requires that a file submitted to the\n compiler have only one unit and there be a strict correspondence\n between the file name and the unit name.\n \n-The @code{gnatchop} utility allows both of these rules to be relaxed,\n-allowing GNAT to process files which contain multiple compilation units\n-and files with arbitrary file names. @code{gnatchop}\n-reads the specified file and generates one or more output files,\n-containing one unit per file. The unit and the file name correspond,\n-as required by GNAT.\n+If you want to keep your files with multiple units,\n+perhaps to maintain compatibility with some other Ada compilation system,\n+you can use @code{gnatname} to generate or update your project files.\n+Generated or modified project files can be processed by GNAT.\n \n-If you want to permanently restructure a set of 'foreign' files so that\n-they match the GNAT rules, and do the remaining development using the\n-GNAT structure, you can simply use @code{gnatchop} once, generate the\n-new set of files and work with them from that point on.\n+See @ref{59,,Handling Arbitrary File Naming Conventions with gnatname}\n+for more details on how to use @cite{gnatname}.\n \n-Alternatively, if you want to keep your files in the 'foreign' format,\n-perhaps to maintain compatibility with some other Ada compilation\n-system, you can set up a procedure where you use @code{gnatchop} each\n-time you compile, regarding the source files that it writes as temporary\n-files that you throw away.\n+Alternatively, if you want to permanently restructure a set of 'foreign'\n+files so that they match the GNAT rules, and do the remaining development\n+using the GNAT structure, you can simply use @code{gnatchop} once, generate the\n+new set of files and work with them from that point on.\n \n Note that if your file containing multiple units starts with a byte order\n mark (BOM) specifying UTF-8 encoding, then the files generated by gnatchop"}]}