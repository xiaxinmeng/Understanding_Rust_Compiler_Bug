{"sha": "0104d6c71a694c717617dfc4c847641825ca094c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEwNGQ2YzcxYTY5NGM3MTc2MTdkZmM0Yzg0NzY0MTgyNWNhMDk0Yw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-11-09T19:23:43Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-11-09T19:23:43Z"}, "message": "re PR tree-optimization/46036 (verify_ssa failed: definition in block 3 follows the use)\n\nFix PR46036.\n\n2010-11-09  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/46036\n\t* tree-if-conv.c (predicate_bbs): Call unshare_expr before\n\tadd_to_dst_predicate_list.\n\n\t* gfortran.dg/lto/pr46036_0.f90: New.\n\nFrom-SVN: r166508", "tree": {"sha": "3d7e9821162a3ea039aaa73e75b610839ad30c8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d7e9821162a3ea039aaa73e75b610839ad30c8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0104d6c71a694c717617dfc4c847641825ca094c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0104d6c71a694c717617dfc4c847641825ca094c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0104d6c71a694c717617dfc4c847641825ca094c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0104d6c71a694c717617dfc4c847641825ca094c/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd99dfdffb204765440234841e78437f59aeb264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd99dfdffb204765440234841e78437f59aeb264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd99dfdffb204765440234841e78437f59aeb264"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "dbf4ef6ab1da8a5998c968226fc5a25c4bee191d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0104d6c71a694c717617dfc4c847641825ca094c", "patch": "@@ -1,3 +1,9 @@\n+2010-11-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/46036\n+\t* tree-if-conv.c (predicate_bbs): Call unshare_expr before\n+\tadd_to_dst_predicate_list.\n+\n 2010-11-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/46171"}, {"sha": "5517521f6711594d4c7f3da2354a4ae5a8dfe74f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0104d6c71a694c717617dfc4c847641825ca094c", "patch": "@@ -1,3 +1,8 @@\n+2010-11-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/46036\n+\t* gfortran.dg/lto/pr46036_0.f90: New.\n+\n 2010-10-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/45663"}, {"sha": "558c7edc2440d2effcf44de1b77b93a8874adf2d", "filename": "gcc/testsuite/gfortran.dg/lto/pr46036_0.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46036_0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46036_0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46036_0.f90?ref=0104d6c71a694c717617dfc4c847641825ca094c", "patch": "@@ -0,0 +1,14 @@\n+! { dg-lto-do link }\n+! { dg-lto-options {{ -O -flto -ftree-vectorize }} }\n+\n+function no_of_edges(self) result(res)\n+  integer(kind=kind(1)) :: edge_bit_string\n+  integer(kind=kind(1)) :: res\n+  integer(kind=kind(1)) :: e\n+  do e = 0, 11\n+     if (.not. btest(edge_bit_string,e)) cycle\n+     res = res + 1\n+  end do\n+end function no_of_edges\n+\n+end program"}, {"sha": "17b66721e5d25b3227643037fb1290c1af9f509c", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0104d6c71a694c717617dfc4c847641825ca094c/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=0104d6c71a694c717617dfc4c847641825ca094c", "patch": "@@ -928,7 +928,7 @@ predicate_bbs (loop_p loop)\n \t\t\t\t\t\t     &true_edge, &false_edge);\n \n \t\t/* If C is true, then TRUE_EDGE is taken.  */\n-\t\tadd_to_dst_predicate_list (loop, true_edge, cond, c);\n+\t\tadd_to_dst_predicate_list (loop, true_edge, cond, unshare_expr (c));\n \n \t\t/* If C is false, then FALSE_EDGE is taken.  */\n \t\tc2 = invert_truthvalue_loc (loc, unshare_expr (c));"}]}