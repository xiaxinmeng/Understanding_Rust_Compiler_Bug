{"sha": "9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2OGFhM2NjNTI5NTZlYTk5YmI3MjZjM2MyOWNlMDU4MWI5ZjdlNw==", "commit": {"author": {"name": "Mike Crowe", "email": "mac@mcrowe.com", "date": "2018-08-01T15:39:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-08-01T15:39:57Z"}, "message": "Use steady_clock to implement condition_variable::wait_for\n\nThe C++ standard says that std::condition_variable::wait_for should be\nimplemented to be equivalent to:\n\n  return wait_until(lock, chrono::steady_clock::now() + rel_time);\n\nBut the existing implementation uses chrono::system_clock. Now that\nwait_until has potentially-different behaviour for chrono::steady_clock,\nlet's at least try to wait using the correct clock.\n\n2018-08-01  Mike Crowe  <mac@mcrowe.com>\n\n\t* include/std/condition_variable (wait_for): Use steady_clock.\n\nFrom-SVN: r263225", "tree": {"sha": "823a9f37c46670bcc8fb5298f87b86f0029d25d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/823a9f37c46670bcc8fb5298f87b86f0029d25d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7/comments", "author": {"login": "mikecrowe", "id": 93615, "node_id": "MDQ6VXNlcjkzNjE1", "avatar_url": "https://avatars.githubusercontent.com/u/93615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikecrowe", "html_url": "https://github.com/mikecrowe", "followers_url": "https://api.github.com/users/mikecrowe/followers", "following_url": "https://api.github.com/users/mikecrowe/following{/other_user}", "gists_url": "https://api.github.com/users/mikecrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikecrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikecrowe/subscriptions", "organizations_url": "https://api.github.com/users/mikecrowe/orgs", "repos_url": "https://api.github.com/users/mikecrowe/repos", "events_url": "https://api.github.com/users/mikecrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/mikecrowe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f5934326542b3f303db91cc4cd432cd488f0258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f5934326542b3f303db91cc4cd432cd488f0258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f5934326542b3f303db91cc4cd432cd488f0258"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "71c01f94997a49ed8c09cab1bd866025cf771e45", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7", "patch": "@@ -1,3 +1,7 @@\n+2018-08-01  Mike Crowe  <mac@mcrowe.com>\n+\n+\t* include/std/condition_variable (wait_for): Use steady_clock.\n+\n 2018-08-01  Mike Crowe  <mac@mcrowe.com>\n \n \t* include/std/condition_variable (wait_until): Only report timeout"}, {"sha": "1f84ea324ebb9a5febdf1e867312b51c50a83b60", "filename": "libstdc++-v3/include/std/condition_variable", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable?ref=9e68aa3cc52956ea99bb726c3c29ce0581b9f7e7", "patch": "@@ -66,6 +66,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class condition_variable\n   {\n     typedef chrono::system_clock\t__clock_t;\n+    typedef chrono::steady_clock\t__steady_clock_t;\n     typedef __gthread_cond_t\t\t__native_type;\n \n #ifdef __GTHREAD_COND_INIT\n@@ -144,11 +145,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       wait_for(unique_lock<mutex>& __lock,\n \t       const chrono::duration<_Rep, _Period>& __rtime)\n       {\n-\tusing __dur = typename __clock_t::duration;\n+\tusing __dur = typename __steady_clock_t::duration;\n \tauto __reltime = chrono::duration_cast<__dur>(__rtime);\n \tif (__reltime < __rtime)\n \t  ++__reltime;\n-\treturn wait_until(__lock, __clock_t::now() + __reltime);\n+\treturn wait_until(__lock, __steady_clock_t::now() + __reltime);\n       }\n \n     template<typename _Rep, typename _Period, typename _Predicate>"}]}