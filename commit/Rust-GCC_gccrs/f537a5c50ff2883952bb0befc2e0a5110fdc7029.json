{"sha": "f537a5c50ff2883952bb0befc2e0a5110fdc7029", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzN2E1YzUwZmYyODgzOTUyYmIwYmVmYzJlMGE1MTEwZmRjNzAyOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-22T06:07:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-22T06:07:19Z"}, "message": "(grokdeclarator):  Avoid the use of macros for ..._TYPE\nnodes in cases where a parameter's type is error_mark_node.\n\nFrom-SVN: r4708", "tree": {"sha": "e4ff6e9b47f334567dc6211dfb3a623479465ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ff6e9b47f334567dc6211dfb3a623479465ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f537a5c50ff2883952bb0befc2e0a5110fdc7029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f537a5c50ff2883952bb0befc2e0a5110fdc7029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f537a5c50ff2883952bb0befc2e0a5110fdc7029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f537a5c50ff2883952bb0befc2e0a5110fdc7029/comments", "author": null, "committer": null, "parents": [{"sha": "a0466a68245dbef92227b1e88891b1c771772bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0466a68245dbef92227b1e88891b1c771772bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0466a68245dbef92227b1e88891b1c771772bf2"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "08f003e1f0e5098559f9890d330336789e3f0390", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f537a5c50ff2883952bb0befc2e0a5110fdc7029/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f537a5c50ff2883952bb0befc2e0a5110fdc7029/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=f537a5c50ff2883952bb0befc2e0a5110fdc7029", "patch": "@@ -4457,13 +4457,16 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t   When there is a prototype, this is overridden later.  */\n \n \tDECL_ARG_TYPE (decl) = type;\n-\tmain_type = TYPE_MAIN_VARIANT (type);\n+\tmain_type = (type == error_mark_node\n+\t\t     ? error_mark_node\n+\t\t     : TYPE_MAIN_VARIANT (type));\n \tif (main_type == float_type_node)\n \t  DECL_ARG_TYPE (decl) = double_type_node;\n \t/* Don't use TYPE_PRECISION to decide whether to promote,\n \t   because we should convert short if it's the same size as int,\n \t   but we should not convert long if it's the same size as int.  */\n-\telse if (C_PROMOTING_INTEGER_TYPE_P (main_type))\n+\telse if (TREE_CODE (main_type) != ERROR_MARK\n+\t\t && C_PROMOTING_INTEGER_TYPE_P (main_type))\n \t  {\n \t    if (TYPE_PRECISION (type) == TYPE_PRECISION (integer_type_node)\n \t\t&& TREE_UNSIGNED (type))"}]}