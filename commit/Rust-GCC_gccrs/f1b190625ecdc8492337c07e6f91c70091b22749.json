{"sha": "f1b190625ecdc8492337c07e6f91c70091b22749", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiMTkwNjI1ZWNkYzg0OTIzMzdjMDdlNmY5MWM3MDA5MWIyMjc0OQ==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-03-14T15:23:43Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-03-14T15:23:43Z"}, "message": "tree-cfg.c (find_taken_edge_cond_expr): Use zero_p instead of integer_zerop.\n\n\t* tree-cfg.c (find_taken_edge_cond_expr): Use zero_p instead of\n\tinteger_zerop.\n\t* tree-gimple.c (is_gimple_min_invariant): Consider overflowed\n\tconstants invariant.\n\n\t* fortran/trans-intrinsic.c (gfc_conv_intrinsic_ishft): Convert\n\tthe argument of the shift to the unsigned type.\n\nFrom-SVN: r96435", "tree": {"sha": "600d2dc039f460c88e992c819e19ca7b7b947cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600d2dc039f460c88e992c819e19ca7b7b947cb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1b190625ecdc8492337c07e6f91c70091b22749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b190625ecdc8492337c07e6f91c70091b22749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b190625ecdc8492337c07e6f91c70091b22749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b190625ecdc8492337c07e6f91c70091b22749/comments", "author": null, "committer": null, "parents": [{"sha": "9e32d2be984b4cdebf289aaa70fb08a4704b7b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e32d2be984b4cdebf289aaa70fb08a4704b7b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e32d2be984b4cdebf289aaa70fb08a4704b7b2b"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "1b8f35215d726e02761096ed5bf769804d4b9760", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1b190625ecdc8492337c07e6f91c70091b22749", "patch": "@@ -1,3 +1,10 @@\n+2005-03-14  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* tree-cfg.c (find_taken_edge_cond_expr): Use zero_p instead of\n+\tinteger_zerop.\n+\t* tree-gimple.c (is_gimple_min_invariant): Consider overflowed\n+\tconstants invariant.\n+\n 2005-03-14  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* basic-block.h (BB_VISITED): Removed."}, {"sha": "63172cb573b452a174bb4b89835824c19cb15608", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f1b190625ecdc8492337c07e6f91c70091b22749", "patch": "@@ -1,3 +1,8 @@\n+2005-03-14  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* fortran/trans-intrinsic.c (gfc_conv_intrinsic_ishft): Convert\n+\tthe argument of the shift to the unsigned type.\n+\n 2005-03-13  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/16907"}, {"sha": "f24db5fe7f9cfd1667377e41b385748bec83751a", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=f1b190625ecdc8492337c07e6f91c70091b22749", "patch": "@@ -1793,7 +1793,7 @@ gfc_conv_intrinsic_ishft (gfc_se * se, gfc_expr * expr)\n      numbers, and we try to be compatible with other compilers, most\n      notably g77, here.  */\n   rshift = fold_convert (type, build2 (RSHIFT_EXPR, utype, \n-\t\t\t\t       convert (type, arg), width));\n+\t\t\t\t       convert (utype, arg), width));\n \n   tmp = fold (build2 (GE_EXPR, boolean_type_node, arg2,\n \t\t      build_int_cst (TREE_TYPE (arg2), 0)));"}, {"sha": "32dc2bc579c952cf952ff7b232aaf3217ecb138f", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=f1b190625ecdc8492337c07e6f91c70091b22749", "patch": "@@ -2376,20 +2376,11 @@ find_taken_edge_cond_expr (basic_block bb, tree val)\n   edge true_edge, false_edge;\n \n   extract_true_false_edges_from_block (bb, &true_edge, &false_edge);\n-\n-  /* Otherwise, try to determine which branch of the if() will be taken.\n-     If VAL is a constant but it can't be reduced to a 0 or a 1, then\n-     we don't really know which edge will be taken at runtime.  This\n-     may happen when comparing addresses (e.g., if (&var1 == 4)).  */\n-  if (integer_nonzerop (val))\n-    return true_edge;\n-  else if (integer_zerop (val))\n-    return false_edge;\n-\n-  gcc_unreachable ();\n+  \n+  gcc_assert (TREE_CODE (val) == INTEGER_CST);\n+  return (zero_p (val) ? false_edge : true_edge);\n }\n \n-\n /* Given an INTEGER_CST VAL and the entry block BB to a SWITCH_EXPR\n    statement, determine which edge will be taken out of the block.  Return\n    NULL if any edge may be taken.  */"}, {"sha": "f69d95ef8aacfcb42e008442b24f167d44b692ae", "filename": "gcc/tree-gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ftree-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b190625ecdc8492337c07e6f91c70091b22749/gcc%2Ftree-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-gimple.c?ref=f1b190625ecdc8492337c07e6f91c70091b22749", "patch": "@@ -180,7 +180,7 @@ is_gimple_min_invariant (tree t)\n     case STRING_CST:\n     case COMPLEX_CST:\n     case VECTOR_CST:\n-      return !TREE_OVERFLOW (t);\n+      return true;\n \n     default:\n       return false;"}]}