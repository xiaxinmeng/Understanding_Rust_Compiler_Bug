{"sha": "21cfe724cbdc30612bf1ef59b26f19ada2210832", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjZmU3MjRjYmRjMzA2MTJiZjFlZjU5YjI2ZjE5YWRhMjIxMDgzMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-08-12T16:09:57Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-08-12T16:09:57Z"}, "message": "Fortran: Add support for OpenMP's nontemporal clause\n\ngcc/fortran/ChangeLog:\n\n\t* gfortran.h: Add OMP_LIST_NONTEMPORAL.\n\t* dump-parse-tree.c (show_omp_clauses): Dump it\n\t* openmp.c (enum omp_mask1): Add OMP_CLAUSE_NOTEMPORAL.\n\t(OMP_SIMD_CLAUSES): Add it.\n\t(gfc_match_omp_clauses): Match nontemporal clause.\n\t* trans-openmp.c (gfc_trans_omp_clauses): Process\n\tnontemporal clause.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/nontemporal-1.f90: New test.\n\t* gfortran.dg/gomp/nontemporal-2.f90: New test.", "tree": {"sha": "8a7b1d52ea1fd089883e1536a4f4431b87b2cf95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a7b1d52ea1fd089883e1536a4f4431b87b2cf95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21cfe724cbdc30612bf1ef59b26f19ada2210832", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cfe724cbdc30612bf1ef59b26f19ada2210832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21cfe724cbdc30612bf1ef59b26f19ada2210832", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cfe724cbdc30612bf1ef59b26f19ada2210832/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe9458c280dbd6e8b892db4ca3b64185049c376b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe9458c280dbd6e8b892db4ca3b64185049c376b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe9458c280dbd6e8b892db4ca3b64185049c376b"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "6e265f4520d4da75c526b29967c85f5c87f63c00", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=21cfe724cbdc30612bf1ef59b26f19ada2210832", "patch": "@@ -1595,6 +1595,7 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n \t  case OMP_LIST_IS_DEVICE_PTR: type = \"IS_DEVICE_PTR\"; break;\n \t  case OMP_LIST_USE_DEVICE_PTR: type = \"USE_DEVICE_PTR\"; break;\n \t  case OMP_LIST_USE_DEVICE_ADDR: type = \"USE_DEVICE_ADDR\"; break;\n+\t  case OMP_LIST_NONTEMPORAL: type = \"NONTEMPORAL\"; break;\n \t  default:\n \t    gcc_unreachable ();\n \t  }"}, {"sha": "559d3c6b8b833d25bf91e8107ffec408e40145b8", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=21cfe724cbdc30612bf1ef59b26f19ada2210832", "patch": "@@ -1276,6 +1276,7 @@ enum\n   OMP_LIST_IS_DEVICE_PTR,\n   OMP_LIST_USE_DEVICE_PTR,\n   OMP_LIST_USE_DEVICE_ADDR,\n+  OMP_LIST_NONTEMPORAL,\n   OMP_LIST_NUM\n };\n "}, {"sha": "c44a2530b881a89ae8526c26c105f403f133440c", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=21cfe724cbdc30612bf1ef59b26f19ada2210832", "patch": "@@ -794,6 +794,7 @@ enum omp_mask1\n   OMP_CLAUSE_IS_DEVICE_PTR,\n   OMP_CLAUSE_LINK,\n   OMP_CLAUSE_NOGROUP,\n+  OMP_CLAUSE_NOTEMPORAL,\n   OMP_CLAUSE_NUM_TASKS,\n   OMP_CLAUSE_PRIORITY,\n   OMP_CLAUSE_SIMD,\n@@ -1510,6 +1511,11 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t      c->nogroup = needs_space = true;\n \t      continue;\n \t    }\n+\t  if ((mask & OMP_CLAUSE_NOTEMPORAL)\n+\t      && gfc_match_omp_variable_list (\"nontemporal (\",\n+\t\t\t\t\t      &c->lists[OMP_LIST_NONTEMPORAL],\n+\t\t\t\t\t      true) == MATCH_YES)\n+\t    continue;\n \t  if ((mask & OMP_CLAUSE_NOTINBRANCH)\n \t      && !c->notinbranch\n \t      && !c->inbranch\n@@ -2591,7 +2597,7 @@ gfc_match_oacc_routine (void)\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_LASTPRIVATE\t\t\\\n    | OMP_CLAUSE_REDUCTION | OMP_CLAUSE_COLLAPSE | OMP_CLAUSE_SAFELEN\t\\\n    | OMP_CLAUSE_LINEAR | OMP_CLAUSE_ALIGNED | OMP_CLAUSE_SIMDLEN\t\\\n-   | OMP_CLAUSE_IF | OMP_CLAUSE_ORDER)\n+   | OMP_CLAUSE_IF | OMP_CLAUSE_ORDER | OMP_CLAUSE_NOTEMPORAL)\n #define OMP_TASK_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n    | OMP_CLAUSE_SHARED | OMP_CLAUSE_IF | OMP_CLAUSE_DEFAULT\t\t\\"}, {"sha": "063d4c145e20f0ad022eb17f5ce771d4c3cf20f9", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=21cfe724cbdc30612bf1ef59b26f19ada2210832", "patch": "@@ -2290,6 +2290,9 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \tcase OMP_LIST_IS_DEVICE_PTR:\n \t  clause_code = OMP_CLAUSE_IS_DEVICE_PTR;\n \t  goto add_clause;\n+\tcase OMP_LIST_NONTEMPORAL:\n+\t  clause_code = OMP_CLAUSE_NONTEMPORAL;\n+\t  goto add_clause;\n \n \tadd_clause:\n \t  omp_clauses"}, {"sha": "21a94db0ba80ba1b95c4e2b72396cb9f82b17282", "filename": "gcc/testsuite/gfortran.dg/gomp/nontemporal-1.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnontemporal-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnontemporal-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnontemporal-1.f90?ref=21cfe724cbdc30612bf1ef59b26f19ada2210832", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-O2 -fdump-tree-original\" }\n+\n+module m\n+  integer :: a(:), b(1024), c(1024), d(1024)\n+  allocatable :: a\n+end module m\n+\n+subroutine foo\n+  use m\n+  implicit none\n+  integer :: i\n+  !$omp simd nontemporal (a, b)\n+  do i = 1, 1024\n+    a(i) = b(i) + c(i)\n+  end do\n+\n+  !$omp simd nontemporal (d)\n+  do i = 1, 1024\n+    d(i) = 2 * c(i)\n+  end do\n+end subroutine foo\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(i:1\\\\) nontemporal\\\\(a\\\\) nontemporal\\\\(b\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(i:1\\\\) nontemporal\\\\(d\\\\)\" 1 \"original\" } }"}, {"sha": "c880bedb1e23d520a5960672a50a3d0a2d249171", "filename": "gcc/testsuite/gfortran.dg/gomp/nontemporal-2.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnontemporal-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21cfe724cbdc30612bf1ef59b26f19ada2210832/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnontemporal-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnontemporal-2.f90?ref=21cfe724cbdc30612bf1ef59b26f19ada2210832", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+\n+module m\n+ integer, allocatable :: a(:), b(:), c(:), d(:)\n+end module m\n+\n+subroutine foo\n+  use m\n+  implicit none\n+  integer :: i\n+\n+  !$omp simd nontemporal (a, b) aligned (a, b, c)\n+  do i = 1, ubound(a, dim=1)\n+    a(i) = b(i) + c(i)\n+  end do\n+\n+  !$omp simd nontemporal (d) nontemporal (d)\t! { dg-error \"'d' present on multiple clauses\" }\n+  do i = 1, ubound(d, dim=1)\n+    d(i) = 2 * c(i)\n+  end do\n+\n+  !$omp simd nontemporal (a, b, b)\t\t! { dg-error \"'b' present on multiple clauses\" }\n+  do i = 1, ubound(a, dim=1)\n+    a(i) = a(i) + b(i) + c(i)\n+  end do\n+end subroutine foo"}]}