{"sha": "08defd9c4e4f8dc428f2f490705ab816af81a03d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkZWZkOWM0ZTRmOGRjNDI4ZjJmNDkwNzA1YWI4MTZhZjgxYTAzZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-05T08:55:19Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-18T18:51:48Z"}, "message": "Darwin, jit: Fix build [PR100613].\n\nThe generic unix build is not completely suitable for Darwin\nplatforms:\n\n * It is a convention to encode the library versioning in the\n   binary and to have only one level of symlink for the installed\n   files. This needs to be applied to the installation too.\n * The library needs to be built with its correct install name\n   so that two-level library naming works.\n * The extension for shared libraries should be .dylib\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nPR jit/100613 - libgccjit should produce dylib on macOS\n\n\tPR jit/100613\n\ngcc/jit/ChangeLog:\n\n\t* Make-lang.in: Provide clauses for Darwin hosts.", "tree": {"sha": "6baa419e31f9f6240be99964b507e48e1d97ef14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6baa419e31f9f6240be99964b507e48e1d97ef14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08defd9c4e4f8dc428f2f490705ab816af81a03d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08defd9c4e4f8dc428f2f490705ab816af81a03d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08defd9c4e4f8dc428f2f490705ab816af81a03d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08defd9c4e4f8dc428f2f490705ab816af81a03d/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d39367fa82d95b646f0587a442156069100ee245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39367fa82d95b646f0587a442156069100ee245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39367fa82d95b646f0587a442156069100ee245"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "2a774d7feb1bb0c9988c35f23b66951815f2193e", "filename": "gcc/jit/Make-lang.in", "status": "modified", "additions": 62, "deletions": 1, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08defd9c4e4f8dc428f2f490705ab816af81a03d/gcc%2Fjit%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08defd9c4e4f8dc428f2f490705ab816af81a03d/gcc%2Fjit%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FMake-lang.in?ref=08defd9c4e4f8dc428f2f490705ab816af81a03d", "patch": "@@ -53,8 +53,40 @@ jit: $(LIBGCCJIT_FILENAME) \\\n \n else\n \n-LIBGCCJIT_LINKER_NAME = libgccjit.so\n+ifneq (,$(findstring darwin,$(host)))\n+\n+LIBGCCJIT_AGE = 1\n+LIBGCCJIT_BASENAME = libgccjit\n+\n+LIBGCCJIT_SONAME = \\\n+  ${libdir}/$(LIBGCCJIT_BASENAME).$(LIBGCCJIT_VERSION_NUM).dylib\n+LIBGCCJIT_FILENAME = $(LIBGCCJIT_BASENAME).$(LIBGCCJIT_VERSION_NUM).dylib\n+LIBGCCJIT_LINKER_NAME = $(LIBGCCJIT_BASENAME).dylib\n+\n+# Conditionalize the use of the LD_VERSION_SCRIPT_OPTION and\n+# LD_SONAME_OPTION depending if configure found them, using $(if)\n+# We have to define a COMMA here, otherwise the commas in the \"true\"\n+# result are treated as separators by the $(if).\n+COMMA := ,\n+LIBGCCJIT_VERSION_SCRIPT_OPTION = \\\n+\t$(if $(LD_VERSION_SCRIPT_OPTION),\\\n+\t  -Wl$(COMMA)$(LD_VERSION_SCRIPT_OPTION)$(COMMA)$(srcdir)/jit/libgccjit.map)\n+\n+LIBGCCJIT_SONAME_OPTION = \\\n+\t$(if $(LD_SONAME_OPTION), \\\n+\t     -Wl$(COMMA)$(LD_SONAME_OPTION)$(COMMA)$(LIBGCCJIT_SONAME))\n+\n+LIBGCCJIT_SONAME_SYMLINK = $(LIBGCCJIT_FILENAME)\n+LIBGCCJIT_LINKER_NAME_SYMLINK = $(LIBGCCJIT_LINKER_NAME)\n+\n+jit: $(LIBGCCJIT_FILENAME) \\\n+\t$(LIBGCCJIT_SYMLINK) \\\n+\t$(LIBGCCJIT_LINKER_NAME_SYMLINK) \\\n+\t$(FULL_DRIVER_NAME)\n \n+else\n+\n+LIBGCCJIT_LINKER_NAME = libgccjit.so\n LIBGCCJIT_SONAME = $(LIBGCCJIT_LINKER_NAME).$(LIBGCCJIT_VERSION_NUM)\n LIBGCCJIT_FILENAME = \\\n   $(LIBGCCJIT_SONAME).$(LIBGCCJIT_MINOR_NUM).$(LIBGCCJIT_RELEASE_NUM)\n@@ -79,6 +111,8 @@ jit: $(LIBGCCJIT_FILENAME) \\\n \t$(LIBGCCJIT_SYMLINK) \\\n \t$(LIBGCCJIT_LINKER_NAME_SYMLINK) \\\n \t$(FULL_DRIVER_NAME)\n+\n+endif\n endif\n \n jit.serial = $(LIBGCCJIT_FILENAME)\n@@ -109,9 +143,19 @@ ifneq (,$(findstring mingw,$(target)))\n # Create import library\n LIBGCCJIT_EXTRA_OPTS = -Wl,--out-implib,$(LIBGCCJIT_IMPORT_LIB)\n else\n+\n+ifneq (,$(findstring darwin,$(host)))\n+# TODO : Construct a Darwin-style symbol export file.\n+LIBGCCJIT_EXTRA_OPTS = -Wl,-compatibility_version,$(LIBGCCJIT_VERSION_NUM) \\\n+\t-Wl,-current_version,$(LIBGCCJIT_VERSION_NUM).$(LIBGCCJIT_MINOR_NUM).$(LIBGCCJIT_AGE) \\\n+\t$(LIBGCCJIT_VERSION_SCRIPT_OPTION) \\\n+\t$(LIBGCCJIT_SONAME_OPTION)\n+else\n+\n LIBGCCJIT_EXTRA_OPTS = $(LIBGCCJIT_VERSION_SCRIPT_OPTION) \\\n \t$(LIBGCCJIT_SONAME_OPTION)\n endif\n+endif\n \n # We avoid using $(BACKEND) from Makefile.in in order to avoid pulling\n # in main.o\n@@ -130,8 +174,12 @@ $(LIBGCCJIT_FILENAME): $(jit_OBJS) \\\n \n # Create symlinks when not building for Windows\n ifeq (,$(findstring mingw,$(target)))\n+\n+ifeq (,$(findstring darwin,$(host)))\n+# but only one level for Darwin, version info is embedded.\n $(LIBGCCJIT_SONAME_SYMLINK): $(LIBGCCJIT_FILENAME)\n \tln -sf $(LIBGCCJIT_FILENAME) $(LIBGCCJIT_SONAME_SYMLINK)\n+endif\n \n $(LIBGCCJIT_LINKER_NAME_SYMLINK): $(LIBGCCJIT_SONAME_SYMLINK)\n \tln -sf $(LIBGCCJIT_SONAME_SYMLINK) $(LIBGCCJIT_LINKER_NAME_SYMLINK)\n@@ -319,6 +367,18 @@ jit.install-common: installdirs jit.install-headers\n # Install DLL file\n \t$(INSTALL_PROGRAM) $(LIBGCCJIT_FILENAME) \\\n \t  $(DESTDIR)$(bindir)/$(LIBGCCJIT_FILENAME)\n+\n+else\n+ifneq (,$(findstring darwin,$(host)))\n+# but only one level for Darwin\n+\n+jit.install-common: installdirs jit.install-headers\n+\t$(INSTALL_PROGRAM) $(LIBGCCJIT_FILENAME) \\\n+\t  $(DESTDIR)$(libdir)/$(LIBGCCJIT_FILENAME)\n+\tln -sf \\\n+\t  $(LIBGCCJIT_SONAME_SYMLINK)\\\n+\t  $(DESTDIR)$(libdir)/$(LIBGCCJIT_LINKER_NAME_SYMLINK)\n+\n else\n jit.install-common: installdirs jit.install-headers\n \t$(INSTALL_PROGRAM) $(LIBGCCJIT_FILENAME) \\\n@@ -330,6 +390,7 @@ jit.install-common: installdirs jit.install-headers\n \t  $(LIBGCCJIT_SONAME_SYMLINK)\\\n \t  $(DESTDIR)$(libdir)/$(LIBGCCJIT_LINKER_NAME_SYMLINK)\n endif\n+endif\n \n jit.install-man:\n "}]}