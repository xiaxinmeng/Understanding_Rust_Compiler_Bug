{"sha": "96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZiMmZmZTFhMTdjOGQxYjZkMGI5NDU5MGQ0NGFlYTM5ODc3ZTJiMQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2012-08-02T19:37:00Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2012-08-02T19:37:00Z"}, "message": "trans-array.c (set_loop_bounds): Remove useless dimension check.\n\n\t* trans-array.c (set_loop_bounds): Remove useless dimension check.\n\tDon't update loopspec if it would loose the wanted stride criterion.\n\nFrom-SVN: r190096", "tree": {"sha": "1b2dc55f54222f956396043f3e3051853ddcdf26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b2dc55f54222f956396043f3e3051853ddcdf26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1/comments", "author": null, "committer": null, "parents": [{"sha": "17aa6ab611c5e5ea4d7696aae0866b628fedb4b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17aa6ab611c5e5ea4d7696aae0866b628fedb4b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17aa6ab611c5e5ea4d7696aae0866b628fedb4b9"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5f3038a97975d375cc268348368de2289915fdd1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1", "patch": "@@ -1,3 +1,8 @@\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (set_loop_bounds): Remove useless dimension check.\n+\tDon't update loopspec if it would loose the wanted stride criterion.\n+\n 2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.h (gfc_conv_descriptor_rank): New prototype."}, {"sha": "feb35df9c3ffe294924407765509033f53f65543", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=96b2ffe1a17c8d1b6d0b94590d44aea39877e2b1", "patch": "@@ -4469,8 +4469,7 @@ set_loop_bounds (gfc_loopinfo *loop)\n \t     known lower bound\n \t     known upper bound\n \t   */\n-\t  else if ((loopspec[n]->info->type == GFC_SS_CONSTRUCTOR && dynamic[n])\n-\t\t   || n >= loop->dimen)\n+\t  else if (loopspec[n]->info->type == GFC_SS_CONSTRUCTOR && dynamic[n])\n \t    loopspec[n] = ss;\n \t  else if (integer_onep (info->stride[dim])\n \t\t   && !integer_onep (specinfo->stride[spec_dim]))\n@@ -4479,7 +4478,11 @@ set_loop_bounds (gfc_loopinfo *loop)\n \t\t   && !INTEGER_CST_P (specinfo->stride[spec_dim]))\n \t    loopspec[n] = ss;\n \t  else if (INTEGER_CST_P (info->start[dim])\n-\t\t   && !INTEGER_CST_P (specinfo->start[spec_dim]))\n+\t\t   && !INTEGER_CST_P (specinfo->start[spec_dim])\n+\t\t   && integer_onep (info->stride[dim])\n+\t\t      == integer_onep (specinfo->stride[dim])\n+\t\t   && INTEGER_CST_P (info->stride[dim])\n+\t\t      == INTEGER_CST_P (specinfo->stride[dim]))\n \t    loopspec[n] = ss;\n \t  /* We don't work out the upper bound.\n \t     else if (INTEGER_CST_P (info->finish[n])"}]}