{"sha": "29173496a0453f740b280bcc1f1ddbebc2726ced", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkxNzM0OTZhMDQ1M2Y3NDBiMjgwYmNjMWYxZGRiZWJjMjcyNmNlZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-04-26T07:22:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-04-26T07:22:14Z"}, "message": "200x-xx-xx Richard Sandiford <richard@codesourcery.com> Mark Mitchell <mark@codesourcery.com>\n\ngcc/\n200x-xx-xx  Richard Sandiford  <richard@codesourcery.com>\n\t    Mark Mitchell  <mark@codesourcery.com>\n\n\t* config/i386/i386-protos.h (ix86_sol10_return_in_memory): Declare.\n\t* config/i386/i386.c (ix86_sol10_return_in_memory): New function.\n\t* config/i386/sol2-10.h (RETURN_IN_MEMORY): Use it.\n\nCo-Authored-By: Mark Mitchell <mark@codesourcery.com>\n\nFrom-SVN: r124176", "tree": {"sha": "25874e5824405772f821da236adc7c4f1e697677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25874e5824405772f821da236adc7c4f1e697677"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29173496a0453f740b280bcc1f1ddbebc2726ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29173496a0453f740b280bcc1f1ddbebc2726ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29173496a0453f740b280bcc1f1ddbebc2726ced", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29173496a0453f740b280bcc1f1ddbebc2726ced/comments", "author": null, "committer": null, "parents": [{"sha": "a0f8745469c6a00a25ad20aaac0d56aff2767776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f8745469c6a00a25ad20aaac0d56aff2767776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f8745469c6a00a25ad20aaac0d56aff2767776"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "ad1928a2784e2e81cfdce42a8728db6d2667f09c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29173496a0453f740b280bcc1f1ddbebc2726ced", "patch": "@@ -1,3 +1,10 @@\n+2007-04-26  Richard Sandiford  <richard@codesourcery.com>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/i386/i386-protos.h (ix86_sol10_return_in_memory): Declare.\n+\t* config/i386/i386.c (ix86_sol10_return_in_memory): New function.\n+\t* config/i386/sol2-10.h (RETURN_IN_MEMORY): Use it.\n+\n 2007-04-26  Richard Sandiford  <richard@codesourcery.com>\n \n \tPR driver/31107"}, {"sha": "3dca7c587a6d712e1517e37072be38fedffad5de", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=29173496a0453f740b280bcc1f1ddbebc2726ced", "patch": "@@ -134,6 +134,7 @@ extern bool ix86_function_value_regno_p (int);\n extern bool ix86_function_arg_regno_p (int);\n extern int ix86_function_arg_boundary (enum machine_mode, tree);\n extern int ix86_return_in_memory (tree);\n+extern int ix86_sol10_return_in_memory (tree);\n extern void ix86_va_start (tree, rtx);\n extern rtx ix86_va_arg (tree, tree);\n "}, {"sha": "adc2be7d0b35e8d51f190dad421728abf0f5230e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=29173496a0453f740b280bcc1f1ddbebc2726ced", "patch": "@@ -4372,6 +4372,43 @@ ix86_return_in_memory (tree type)\n     return return_in_memory_32 (type, mode);\n }\n \n+/* Return false iff TYPE is returned in memory.  This version is used\n+   on Solaris 10.  It is similar to the generic ix86_return_in_memory,\n+   but differs notably in that when MMX is available, 8-byte vectors\n+   are returned in memory, rather than in MMX registers.  */\n+\n+int \n+ix86_sol10_return_in_memory (tree type)\n+{\n+  int needed_intregs, needed_sseregs, size;\n+  enum machine_mode mode = type_natural_mode (type);\n+\n+  if (TARGET_64BIT)\n+    return return_in_memory_64 (type, mode);\n+\n+  if (mode == BLKmode)\n+    return 1;\n+\n+  size = int_size_in_bytes (type);\n+\n+  if (VECTOR_MODE_P (mode))\n+    {\n+      /* Return in memory only if MMX registers *are* available.  This\n+\t seems backwards, but it is consistent with the existing\n+\t Solaris x86 ABI.  */\n+      if (size == 8)\n+\treturn TARGET_MMX;\n+      if (size == 16)\n+\treturn !TARGET_SSE;\n+    }\n+  else if (mode == TImode)\n+    return !TARGET_SSE;\n+  else if (mode == XFmode)\n+    return 0;\n+\n+  return size > 12;\n+}\n+\n /* When returning SSE vector types, we have a choice of either\n      (1) being abi incompatible with a -march switch, or\n      (2) generating an error."}, {"sha": "a3eb1f50a685158097ab5ebefdcfa07c94dd3dfd", "filename": "gcc/config/i386/sol2-10.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29173496a0453f740b280bcc1f1ddbebc2726ced/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-10.h?ref=29173496a0453f740b280bcc1f1ddbebc2726ced", "patch": "@@ -111,12 +111,5 @@ Boston, MA 02110-1301, USA.  */\n #undef TARGET_ASM_NAMED_SECTION\n #define TARGET_ASM_NAMED_SECTION i386_solaris_elf_named_section\n \n-/* In 32-bit mode, follow the SVR4 ABI definition; in 64-bit mode, use\n-   the AMD64 ABI definition.  */\n #undef RETURN_IN_MEMORY\n-#define RETURN_IN_MEMORY(TYPE)\t\t\t\\\n-  (TARGET_64BIT \t\t\t\t\\\n-   ? ix86_return_in_memory (TYPE)\t\t\\\n-   : (TYPE_MODE (TYPE) == BLKmode\t\t\\\n-      || (VECTOR_MODE_P (TYPE_MODE (TYPE)) \t\\\n-\t  && int_size_in_bytes (TYPE) == 8)))\n+#define RETURN_IN_MEMORY ix86_sol10_return_in_memory"}]}