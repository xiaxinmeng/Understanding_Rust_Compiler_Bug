{"sha": "b0385db881d09789d60be06a6bb78246fba4463a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzODVkYjg4MWQwOTc4OWQ2MGJlMDZhNmJiNzgyNDZmYmE0NDYzYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-07-23T20:53:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-07-23T20:53:54Z"}, "message": "call.c (reference_binding): Tweak.\n\n\t* call.c (reference_binding): Tweak.\n\t(mayble_handle_implicit_object): Use direct_reference_binding to\n\tcreate the right implicit conversion sequence.\n\nFrom-SVN: r28228", "tree": {"sha": "eebcc752477a695b5824974e217275421ba3947b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eebcc752477a695b5824974e217275421ba3947b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0385db881d09789d60be06a6bb78246fba4463a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0385db881d09789d60be06a6bb78246fba4463a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0385db881d09789d60be06a6bb78246fba4463a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0385db881d09789d60be06a6bb78246fba4463a/comments", "author": null, "committer": null, "parents": [{"sha": "ed0e65302b574687298c6c1e947799c27e4d0b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0e65302b574687298c6c1e947799c27e4d0b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0e65302b574687298c6c1e947799c27e4d0b9b"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "f08254f858c5bf9108775bb9aa2bcdbdf6903013", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b0385db881d09789d60be06a6bb78246fba4463a", "patch": "@@ -1,3 +1,9 @@\n+1999-07-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* call.c (reference_binding): Tweak.\n+\t(mayble_handle_implicit_object): Use direct_reference_binding to\n+\tcreate the right implicit conversion sequence.\n+\n 1999-07-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* pt.c (convert_nontype_argument): Don't call decl_constant_value"}, {"sha": "6e75e94dd0b2ea3a51dca746490642710ef0208f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b0385db881d09789d60be06a6bb78246fba4463a", "patch": "@@ -1005,9 +1005,6 @@ reference_binding (rto, rfrom, expr, flags)\n       from = TREE_TYPE (expr);\n     }\n \n-  related_p = reference_related_p (to, from);\n-  compatible_p = reference_compatible_p (to, from);\n-\n   if (TREE_CODE (from) == REFERENCE_TYPE)\n     {\n       /* Anything with reference type is an lvalue.  */\n@@ -1017,6 +1014,12 @@ reference_binding (rto, rfrom, expr, flags)\n   else if (expr)\n     lvalue_p = real_lvalue_p (expr);\n \n+  /* Figure out whether or not the types are reference-related and\n+     reference compatible.  We have do do this after stripping\n+     references from FROM.  */\n+  related_p = reference_related_p (to, from);\n+  compatible_p = reference_compatible_p (to, from);\n+\n   if (lvalue_p && compatible_p)\n     {\n       /* [dcl.init.ref]\n@@ -3975,15 +3978,20 @@ maybe_handle_implicit_object (ics)\n \t member and cv is the cv-qualification on the member\n \t function declaration.  */\n       tree t = *ics;\n+      tree reference_type;\n+\n+      /* The `this' parameter is a pointer to a class type.  Make the\n+\t implict conversion talk about a reference to that same class\n+\t type.  */\n+      reference_type = TREE_TYPE (TREE_TYPE (*ics));\n+      reference_type = build_reference_type (reference_type);\n+\n       if (TREE_CODE (t) == QUAL_CONV)\n \tt = TREE_OPERAND (t, 0);\n       if (TREE_CODE (t) == PTR_CONV)\n \tt = TREE_OPERAND (t, 0);\n       t = build1 (IDENTITY_CONV, TREE_TYPE (TREE_TYPE (t)), NULL_TREE);\n-      t = build_conv (REF_BIND, \n-\t\t      build_reference_type (TREE_TYPE (TREE_TYPE (*ics))), \n-\t\t      t);\n-      ICS_STD_RANK (t) = ICS_STD_RANK (*ics);\n+      t = direct_reference_binding (reference_type, t); \n       *ics = t;\n     }\n }"}, {"sha": "cd19816671abadbff4ea7c1191d260513532901f", "filename": "gcc/testsuite/g++.old-deja/g++.other/covar1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcovar1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcovar1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcovar1.C?ref=b0385db881d09789d60be06a6bb78246fba4463a", "patch": "@@ -0,0 +1,10 @@\n+// Build don't link:\n+// Origin: Jason Merrill <jason@cygnus.com>\n+\n+struct A {\n+  virtual A& f();\n+};\n+\n+struct B: public A {\n+  B& f();\n+};"}, {"sha": "5acbcc40babbf24fa2d66bd91d74e998899efa62", "filename": "gcc/testsuite/g++.old-deja/g++.other/ref2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fref2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0385db881d09789d60be06a6bb78246fba4463a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fref2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fref2.C?ref=b0385db881d09789d60be06a6bb78246fba4463a", "patch": "@@ -0,0 +1,15 @@\n+// Build don't link:\n+// Origin: Jason Merrill <jason@cygnus.com>\n+\n+  struct A {\n+    int operator * ();\n+  };\n+  struct B : public A { };\n+  int operator * (B &);\n+\n+  int main ()\n+  {\n+    B b;\n+    B& br = b;\n+    *br;\n+  }"}]}