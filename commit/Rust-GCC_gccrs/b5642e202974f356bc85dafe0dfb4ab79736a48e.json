{"sha": "b5642e202974f356bc85dafe0dfb4ab79736a48e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU2NDJlMjAyOTc0ZjM1NmJjODVkYWZlMGRmYjRhYjc5NzM2YTQ4ZQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-02-08T18:37:01Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-02-08T18:37:01Z"}, "message": "df-scan.c (df_def_record_1): A set destination may be a parallel regardless of mode.\n\n2006-02-08  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* df-scan.c (df_def_record_1): A set destination may\n\tbe a parallel regardless of mode.\n\nFrom-SVN: r110761", "tree": {"sha": "7b9df126013e486eb750d3262d5c792590bb1662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b9df126013e486eb750d3262d5c792590bb1662"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5642e202974f356bc85dafe0dfb4ab79736a48e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5642e202974f356bc85dafe0dfb4ab79736a48e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5642e202974f356bc85dafe0dfb4ab79736a48e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5642e202974f356bc85dafe0dfb4ab79736a48e/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b8318052298eb22355dad37ff842d871c409b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8318052298eb22355dad37ff842d871c409b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8318052298eb22355dad37ff842d871c409b3d"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "ae49e0f368c1c2098f6119fa0781ddb79eea0fe8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5642e202974f356bc85dafe0dfb4ab79736a48e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5642e202974f356bc85dafe0dfb4ab79736a48e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5642e202974f356bc85dafe0dfb4ab79736a48e", "patch": "@@ -1,3 +1,8 @@\n+2006-02-08  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* df-scan.c (df_def_record_1): A set destination may\n+\tbe a parallel regardless of mode.\n+\n 2006-02-08  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/22209"}, {"sha": "e6460faa3a69190526b521042fd901b506f51a95", "filename": "gcc/df-scan.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5642e202974f356bc85dafe0dfb4ab79736a48e/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5642e202974f356bc85dafe0dfb4ab79736a48e/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=b5642e202974f356bc85dafe0dfb4ab79736a48e", "patch": "@@ -1116,9 +1116,8 @@ df_def_record_1 (struct dataflow *dflow, rtx x,\n     loc = &SET_DEST (x);\n   dst = *loc;\n \n-  /* Some targets place small structures in registers for\n-     return values of functions.  */\n-  if (GET_CODE (dst) == PARALLEL && GET_MODE (dst) == BLKmode)\n+  /* It is legal to have a set destination be a parallel. */\n+  if (GET_CODE (dst) == PARALLEL)\n     {\n       int i;\n "}]}