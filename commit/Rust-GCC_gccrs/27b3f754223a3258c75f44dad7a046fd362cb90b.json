{"sha": "27b3f754223a3258c75f44dad7a046fd362cb90b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdiM2Y3NTQyMjNhMzI1OGM3NWY0NGRhZDdhMDQ2ZmQzNjJjYjkwYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:28:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:28:53Z"}, "message": "(extendtab, fixtab, fixtrunctab, floattab, movstr_optab): New\ndefinitions.\n\nFrom-SVN: r3924", "tree": {"sha": "7ed050e186a10e1f52ebacd186dd70800f42893a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ed050e186a10e1f52ebacd186dd70800f42893a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27b3f754223a3258c75f44dad7a046fd362cb90b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b3f754223a3258c75f44dad7a046fd362cb90b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b3f754223a3258c75f44dad7a046fd362cb90b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b3f754223a3258c75f44dad7a046fd362cb90b/comments", "author": null, "committer": null, "parents": [{"sha": "e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6677db3fdd1ff345bea540386a1e3e06f58fbc5"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "f47580b9595faebe86851b986c6bb1fa1adad2f6", "filename": "gcc/expr.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27b3f754223a3258c75f44dad7a046fd362cb90b/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27b3f754223a3258c75f44dad7a046fd362cb90b/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=27b3f754223a3258c75f44dad7a046fd362cb90b", "patch": "@@ -325,6 +325,14 @@ extern optab sin_optab;\t\t/* Sine */\n extern optab cos_optab;\t\t/* Cosine */\n extern optab strlen_optab;\t/* String length */\n \n+/* Tables of patterns for extending one integer mode to another.  */\n+extern enum insn_code extendtab[MAX_MACHINE_MODE][MAX_MACHINE_MODE][2];\n+\n+/* Tables of patterns for converting between fixed and floating point. */\n+extern enum insn_code fixtab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];\n+extern enum insn_code fixtrunctab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];\n+extern enum insn_code floattab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];\n+\n /* Passed to expand_binop and expand_unop to say which options to try to use\n    if the requested operation can't be open-coded on the requisite mode.\n    Either OPTAB_LIB or OPTAB_LIB_WIDEN says try using a library call.\n@@ -451,6 +459,9 @@ extern rtxfun bcc_gen_fctn[NUM_RTX_CODE];\n \n extern enum insn_code setcc_gen_code[NUM_RTX_CODE];\n \n+/* This array records the insn_code of insns to perform block moves.  */\n+extern enum insn_code movstr_optab[NUM_MACHINE_MODES];\n+\n /* Define functions given in optabs.c.  */\n \n /* Expand a binary operation given optab and rtx operands.  */"}]}