{"sha": "28a595fc801358850b92344878d1fe6055b59693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhhNTk1ZmM4MDEzNTg4NTBiOTIzNDQ4NzhkMWZlNjA1NWI1OTY5Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-05-22T12:43:55Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-22T12:43:55Z"}, "message": "re PR fortran/57364 ([OOP] ICE gfc_enforce_clean_symbol_state)\n\n2013-05-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57364\n        * resolve.c (get_temp_from_expr): Commit created sym.\n\n2013-05-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57364\n        * gfortran.dg/defined_assignment_6.f90: New.\n\nFrom-SVN: r199196", "tree": {"sha": "4336e1f7d9236e6836fecbecae2c28c0110f0b2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4336e1f7d9236e6836fecbecae2c28c0110f0b2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28a595fc801358850b92344878d1fe6055b59693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a595fc801358850b92344878d1fe6055b59693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a595fc801358850b92344878d1fe6055b59693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a595fc801358850b92344878d1fe6055b59693/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e1ba2d795b72be88b7be1cbe0960973f6d10e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1ba2d795b72be88b7be1cbe0960973f6d10e99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1ba2d795b72be88b7be1cbe0960973f6d10e99"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "306474981b3881c67804b42b91bdd9c61f866bcf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=28a595fc801358850b92344878d1fe6055b59693", "patch": "@@ -1,3 +1,8 @@\n+2013-05-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57364\n+\t* resolve.c (get_temp_from_expr): Commit created sym.\n+\n 2013-05-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57338"}, {"sha": "6f32df85a85392197e74a8c0e9d307e0e9754735", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=28a595fc801358850b92344878d1fe6055b59693", "patch": "@@ -9300,6 +9300,7 @@ get_temp_from_expr (gfc_expr *e, gfc_namespace *ns)\n \n   gfc_set_sym_referenced (tmp->n.sym);\n   gfc_add_flavor (&tmp->n.sym->attr, FL_VARIABLE, name, NULL);\n+  gfc_commit_symbol (tmp->n.sym);\n   e = gfc_lval_expr_from_sym (tmp->n.sym);\n \n   /* Should the lhs be a section, use its array ref for the"}, {"sha": "6067bc05cf294da61b5548109ff22c4e0af86491", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28a595fc801358850b92344878d1fe6055b59693", "patch": "@@ -1,3 +1,8 @@\n+2013-05-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57364\n+\t* gfortran.dg/defined_assignment_6.f90: New.\n+\n 2013-05-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57338"}, {"sha": "a5666fe5109f2ec17e724679483e24f9ec2a400a", "filename": "gcc/testsuite/gfortran.dg/defined_assignment_6.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a595fc801358850b92344878d1fe6055b59693/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_6.f90?ref=28a595fc801358850b92344878d1fe6055b59693", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+!\n+! PR fortran/57364\n+!\n+! Contributed by Damian Rouson\n+!\n+module ref_counter_implementation\n+  type ref_counter\n+  contains\n+    procedure :: assign\n+    generic :: assignment(=) => assign\n+  end type\n+contains\n+  subroutine assign (lhs, rhs)\n+    class (ref_counter), intent(inout) :: lhs\n+    class (ref_counter), intent(in) :: rhs\n+  end subroutine\n+end module\n+module foo_parent_implementation\n+  use ref_counter_implementation ,only: ref_counter\n+  type :: foo_parent\n+    type(ref_counter) :: counter\n+  end type\n+contains\n+  type(foo_parent) function new_foo_parent()\n+  end function\n+end module\n+module foo_implementation\n+  use foo_parent_implementation ,only: foo_parent,new_foo_parent\n+  type, extends(foo_parent) :: foo\n+  end type\n+contains\n+  type(foo) function new_foo()\n+    new_foo%foo_parent = new_foo_parent()\n+ end function\n+end module"}]}