{"sha": "0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIzNWY1ZjEwZGM5ZDc3M2I2Y2RhZjYwYTMwY2UzZTc2ZDM5YmIzNQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-03-08T15:52:22Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-09T18:18:35Z"}, "message": "Cleanup Formatting for is_equal on TupleTypes", "tree": {"sha": "eee1703d8e34f8e437a221277bcf18efa755dbc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eee1703d8e34f8e437a221277bcf18efa755dbc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6212572b23ccaaf355ab8376d3f5affec334b797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6212572b23ccaaf355ab8376d3f5affec334b797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6212572b23ccaaf355ab8376d3f5affec334b797"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "c16a8040656ca3fffda9212868d16083bb4a611d", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=0b35f5f10dc9d773b6cdaf60a30ce3e76d39bb35", "patch": "@@ -347,25 +347,18 @@ bool\n TupleType::is_equal (const BaseType &other) const\n {\n   if (get_kind () != other.get_kind ())\n+    return false;\n+\n+  auto other2 = static_cast<const TupleType &> (other);\n+  if (num_fields () != other2.num_fields ())\n+    return false;\n+\n+  for (size_t i = 0; i < num_fields (); i++)\n     {\n-      return false;\n-    }\n-  else\n-    {\n-      auto other2 = static_cast<const TupleType &> (other);\n-      if (num_fields () != other2.num_fields ())\n-\t{\n-\t  return false;\n-\t}\n-      for (size_t i = 0; i < num_fields (); i++)\n-\t{\n-\t  if (!get_field (i)->is_equal (*other2.get_field (i)))\n-\t    {\n-\t      return false;\n-\t    }\n-\t}\n-      return true;\n+      if (!get_field (i)->is_equal (*other2.get_field (i)))\n+\treturn false;\n     }\n+  return true;\n }\n \n BaseType *"}]}