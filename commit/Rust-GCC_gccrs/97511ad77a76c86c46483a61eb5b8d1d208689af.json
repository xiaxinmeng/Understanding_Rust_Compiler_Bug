{"sha": "97511ad77a76c86c46483a61eb5b8d1d208689af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc1MTFhZDc3YTc2Yzg2YzQ2NDgzYTYxZWI1YjhkMWQyMDg2ODlhZg==", "commit": {"author": {"name": "Revital Eres", "email": "eres@il.ibm.com", "date": "2007-09-09T09:25:32Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2007-09-09T09:25:32Z"}, "message": "Use new debug counter\n\nFrom-SVN: r128292", "tree": {"sha": "5ad01d2ab295368d41efc4c0d35307fd13920c3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ad01d2ab295368d41efc4c0d35307fd13920c3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97511ad77a76c86c46483a61eb5b8d1d208689af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97511ad77a76c86c46483a61eb5b8d1d208689af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97511ad77a76c86c46483a61eb5b8d1d208689af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97511ad77a76c86c46483a61eb5b8d1d208689af/comments", "author": {"login": "revit13", "id": 16211463, "node_id": "MDQ6VXNlcjE2MjExNDYz", "avatar_url": "https://avatars.githubusercontent.com/u/16211463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revit13", "html_url": "https://github.com/revit13", "followers_url": "https://api.github.com/users/revit13/followers", "following_url": "https://api.github.com/users/revit13/following{/other_user}", "gists_url": "https://api.github.com/users/revit13/gists{/gist_id}", "starred_url": "https://api.github.com/users/revit13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revit13/subscriptions", "organizations_url": "https://api.github.com/users/revit13/orgs", "repos_url": "https://api.github.com/users/revit13/repos", "events_url": "https://api.github.com/users/revit13/events{/privacy}", "received_events_url": "https://api.github.com/users/revit13/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3968877d4adbc8d79de157c5ed4f8176558a7069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3968877d4adbc8d79de157c5ed4f8176558a7069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3968877d4adbc8d79de157c5ed4f8176558a7069"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "e950e64623bfa07bb874d3b09a5a8055f3f64155", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97511ad77a76c86c46483a61eb5b8d1d208689af", "patch": "@@ -1,3 +1,12 @@\n+2007-09-09  Revital Eres  <eres@il.ibm.com>\n+\n+\t* dbgcnt.def (sms_sched_loop): New counter.\n+\t* modulo-sched.c: Use sms_sched_loop instead of\n+\tMAX_SMS_LOOP_NUMBER to determine the maximum number of loops to\n+\tperform swing modulo scheduling on.  Include dbgcnt.h.\n+\t* Makefile.in: Add DBGCNT_H to modulo-sched.o.\n+\t* params.def: Remove PARAM_MAX_SMS_LOOP_NUMBER.\n+\n 2007-09-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (X87MODEF12, SSEMODEF): Remove mode iterators."}, {"sha": "273dda52cc59622d18d9bcbae3d5791dc33f9c9a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=97511ad77a76c86c46483a61eb5b8d1d208689af", "patch": "@@ -2765,7 +2765,7 @@ modulo-sched.o : modulo-sched.c $(DDG_H) $(CONFIG_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) except.h $(RECOG_H) \\\n    $(SCHED_INT_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(EXPR_H) $(PARAMS_H) \\\n    cfghooks.h $(GCOV_IO_H) hard-reg-set.h $(TM_H) timevar.h tree-pass.h \\\n-   $(DF_H)\n+   $(DF_H) $(DBGCNT_H)\n haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(FUNCTION_H) \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H) $(TARGET_H) output.h \\"}, {"sha": "18ef8a7dc559322974428117951ecd1427b518cb", "filename": "gcc/dbgcnt.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2Fdbgcnt.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2Fdbgcnt.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.def?ref=97511ad77a76c86c46483a61eb5b8d1d208689af", "patch": "@@ -83,3 +83,4 @@ DEBUG_COUNTER (split_for_sched2)\n DEBUG_COUNTER (tail_call)\n DEBUG_COUNTER (global_alloc_at_func)\n DEBUG_COUNTER (global_alloc_at_reg)\n+DEBUG_COUNTER (sms_sched_loop)"}, {"sha": "075fe2eae9cac1aa88fa10e6a8d7f07af59b90b7", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=97511ad77a76c86c46483a61eb5b8d1d208689af", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ddg.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\"\n+#include \"dbgcnt.h\"\n \n #ifdef INSN_SCHEDULING\n \n@@ -862,7 +863,6 @@ canon_loop (struct loop *loop)\n static void\n sms_schedule (void)\n {\n-  static int passes = 0;\n   rtx insn;\n   ddg_ptr *g_arr, g;\n   int * node_order;\n@@ -919,10 +919,10 @@ sms_schedule (void)\n       rtx count_reg;\n \n       /* For debugging.  */\n-      if ((passes++ > MAX_SMS_LOOP_NUMBER) && (MAX_SMS_LOOP_NUMBER != -1))\n+      if (dbg_cnt (sms_sched_loop) == false)\n         {\n           if (dump_file)\n-            fprintf (dump_file, \"SMS reached MAX_PASSES... \\n\");\n+            fprintf (dump_file, \"SMS reached max limit... \\n\");\n \n           break;\n         }"}, {"sha": "fcc168951cb600924e8078c3e0164bd1e015037b", "filename": "gcc/params.def", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97511ad77a76c86c46483a61eb5b8d1d208689af/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=97511ad77a76c86c46483a61eb5b8d1d208689af", "patch": "@@ -311,11 +311,6 @@ DEFPARAM(PARAM_MAX_ITERATIONS_COMPUTATION_COST,\n \t\"Bound on the cost of an expression to compute the number of iterations\",\n \t10, 0, 0)\n \n-DEFPARAM(PARAM_MAX_SMS_LOOP_NUMBER,\n-\t \"max-sms-loop-number\",\n-\t \"Maximum number of loops to perform swing modulo scheduling on (mainly for debugging)\",\n-\t -1, -1, -1)\n-  \n /* This parameter is used to tune SMS MAX II calculations.  */\n DEFPARAM(PARAM_SMS_MAX_II_FACTOR,\n \t \"sms-max-ii-factor\","}]}