{"sha": "2f215d2176608467aeee73b245beedfc60836b71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYyMTVkMjE3NjYwODQ2N2FlZWU3M2IyNDViZWVkZmM2MDgzNmI3MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-01T07:37:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-01T07:37:28Z"}, "message": "tree-ssa-sccvn.c (copy_reference_ops_from_ref): Adjust TARGET_MEM_REF handling to also handle address-taken ones.\n\n2019-07-01  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Adjust\n\tTARGET_MEM_REF handling to also handle address-taken ones.\n\nFrom-SVN: r272842", "tree": {"sha": "b1782cf53d19d89582c8e403c14561dc4e994943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1782cf53d19d89582c8e403c14561dc4e994943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f215d2176608467aeee73b245beedfc60836b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f215d2176608467aeee73b245beedfc60836b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f215d2176608467aeee73b245beedfc60836b71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f215d2176608467aeee73b245beedfc60836b71/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d1184f02585a39f1b4813c92e63bc697fc39adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1184f02585a39f1b4813c92e63bc697fc39adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1184f02585a39f1b4813c92e63bc697fc39adf"}], "stats": {"total": 52, "additions": 19, "deletions": 33}, "files": [{"sha": "77d58451fb20d8b5fa0b38961f29aa518ad333d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f215d2176608467aeee73b245beedfc60836b71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f215d2176608467aeee73b245beedfc60836b71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f215d2176608467aeee73b245beedfc60836b71", "patch": "@@ -1,3 +1,8 @@\n+2019-07-01  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Adjust\n+\tTARGET_MEM_REF handling to also handle address-taken ones.\n+\n 2019-07-01  Hongtao Liu  <hongtao.liu@intel.com>\n \n \t* doc/sourcebuild.texi (Effective-Target Keywords, Other"}, {"sha": "dcfafef85527edfd85414eced512c67d133e9864", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 14, "deletions": 33, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f215d2176608467aeee73b245beedfc60836b71/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f215d2176608467aeee73b245beedfc60836b71/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=2f215d2176608467aeee73b245beedfc60836b71", "patch": "@@ -791,39 +791,6 @@ vn_reference_eq (const_vn_reference_t const vr1, const_vn_reference_t const vr2)\n static void\n copy_reference_ops_from_ref (tree ref, vec<vn_reference_op_s> *result)\n {\n-  if (TREE_CODE (ref) == TARGET_MEM_REF)\n-    {\n-      vn_reference_op_s temp;\n-\n-      result->reserve (3);\n-\n-      memset (&temp, 0, sizeof (temp));\n-      temp.type = TREE_TYPE (ref);\n-      temp.opcode = TREE_CODE (ref);\n-      temp.op0 = TMR_INDEX (ref);\n-      temp.op1 = TMR_STEP (ref);\n-      temp.op2 = TMR_OFFSET (ref);\n-      temp.off = -1;\n-      temp.clique = MR_DEPENDENCE_CLIQUE (ref);\n-      temp.base = MR_DEPENDENCE_BASE (ref);\n-      result->quick_push (temp);\n-\n-      memset (&temp, 0, sizeof (temp));\n-      temp.type = NULL_TREE;\n-      temp.opcode = ERROR_MARK;\n-      temp.op0 = TMR_INDEX2 (ref);\n-      temp.off = -1;\n-      result->quick_push (temp);\n-\n-      memset (&temp, 0, sizeof (temp));\n-      temp.type = NULL_TREE;\n-      temp.opcode = TREE_CODE (TMR_BASE (ref));\n-      temp.op0 = TMR_BASE (ref);\n-      temp.off = -1;\n-      result->quick_push (temp);\n-      return;\n-    }\n-\n   /* For non-calls, store the information that makes up the address.  */\n   tree orig = ref;\n   while (ref)\n@@ -853,6 +820,20 @@ copy_reference_ops_from_ref (tree ref, vec<vn_reference_op_s> *result)\n \t  temp.base = MR_DEPENDENCE_BASE (ref);\n \t  temp.reverse = REF_REVERSE_STORAGE_ORDER (ref);\n \t  break;\n+\tcase TARGET_MEM_REF:\n+\t  /* The base address gets its own vn_reference_op_s structure.  */\n+\t  temp.op0 = TMR_INDEX (ref);\n+\t  temp.op1 = TMR_STEP (ref);\n+\t  temp.op2 = TMR_OFFSET (ref);\n+\t  temp.clique = MR_DEPENDENCE_CLIQUE (ref);\n+\t  temp.base = MR_DEPENDENCE_BASE (ref);\n+\t  result->safe_push (temp);\n+\t  memset (&temp, 0, sizeof (temp));\n+\t  temp.type = NULL_TREE;\n+\t  temp.opcode = ERROR_MARK;\n+\t  temp.op0 = TMR_INDEX2 (ref);\n+\t  temp.off = -1;\n+\t  break;\n \tcase BIT_FIELD_REF:\n \t  /* Record bits, position and storage order.  */\n \t  temp.op0 = TREE_OPERAND (ref, 1);"}]}