{"sha": "39307ba788ba09db3d35eb8d920085bb9aebbece", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkzMDdiYTc4OGJhMDlkYjNkMzVlYjhkOTIwMDg1YmI5YWViYmVjZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-09T10:04:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-09T10:04:24Z"}, "message": "re PR tree-optimization/56854 (error: non-decl/MEM_REF LHS in clobber statement)\n\n\tPR tree-optimization/56854\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Don't\n\tforward into clobber stmts if it would change MEM_REF lhs into\n\tnon-MEM_REF.\n\n\t* g++.dg/torture/pr56854.C: New test.\n\nFrom-SVN: r197625", "tree": {"sha": "e2fa3b193c0435960fdf15ebaca3ceb42dc9c985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2fa3b193c0435960fdf15ebaca3ceb42dc9c985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39307ba788ba09db3d35eb8d920085bb9aebbece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39307ba788ba09db3d35eb8d920085bb9aebbece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39307ba788ba09db3d35eb8d920085bb9aebbece", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39307ba788ba09db3d35eb8d920085bb9aebbece/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83e03963466636419bccb8b08997164e93c1790b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e03963466636419bccb8b08997164e93c1790b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e03963466636419bccb8b08997164e93c1790b"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "407676933695d3f2eee37f5ab5515e8a5029913b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39307ba788ba09db3d35eb8d920085bb9aebbece", "patch": "@@ -1,3 +1,10 @@\n+2013-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56854\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Don't\n+\tforward into clobber stmts if it would change MEM_REF lhs into\n+\tnon-MEM_REF.\n+\n 2013-04-09  Maxim Kuvyrkov  <maxim@kugelworks.com>\n \n \t* tree.c (type_hash_lookup, type_hash_add): Make static."}, {"sha": "dac8f36bc7a1cb226dcf133677065f88798fe5d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39307ba788ba09db3d35eb8d920085bb9aebbece", "patch": "@@ -1,3 +1,8 @@\n+2013-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56854\n+\t* g++.dg/torture/pr56854.C: New test.\n+\n 2013-04-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/56782"}, {"sha": "fc7e30299f686de2f33a7450419c8e02831f8692", "filename": "gcc/testsuite/g++.dg/torture/pr56854.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr56854.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr56854.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr56854.C?ref=39307ba788ba09db3d35eb8d920085bb9aebbece", "patch": "@@ -0,0 +1,24 @@\n+// PR tree-optimization/56854\n+// { dg-do compile }\n+\n+inline void *\n+operator new (__SIZE_TYPE__, void *p) throw ()\n+{\n+  return p;\n+}\n+\n+struct A\n+{\n+  int a;\n+  A () : a (0) {}\n+  ~A () {}\n+  A &operator= (const A &v) { this->~A (); new (this) A (v); return *this; }\n+};\n+A b[4], c[4];\n+\n+void\n+foo ()\n+{\n+  for (int i = 0; i < 4; ++i)\n+    c[i] = b[i];\n+}"}, {"sha": "26b076146d3aa0271d6fd640a0653278fe5e2835", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39307ba788ba09db3d35eb8d920085bb9aebbece/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=39307ba788ba09db3d35eb8d920085bb9aebbece", "patch": "@@ -826,7 +826,11 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t       && integer_zerop (TREE_OPERAND (lhs, 1))\n \t       && useless_type_conversion_p\n \t            (TREE_TYPE (TREE_OPERAND (def_rhs, 0)),\n-\t\t     TREE_TYPE (gimple_assign_rhs1 (use_stmt))))\n+\t\t     TREE_TYPE (gimple_assign_rhs1 (use_stmt)))\n+\t       /* Don't forward anything into clobber stmts if it would result\n+\t\t  in the lhs no longer being a MEM_REF.  */\n+\t       && (!gimple_clobber_p (use_stmt)\n+\t\t   || TREE_CODE (TREE_OPERAND (def_rhs, 0)) == MEM_REF))\n \t{\n \t  tree *def_rhs_basep = &TREE_OPERAND (def_rhs, 0);\n \t  tree new_offset, new_base, saved, new_lhs;"}]}