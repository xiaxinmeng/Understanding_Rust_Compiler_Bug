{"sha": "a139bc2b492de8a761890a5d299951dede3d8f7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEzOWJjMmI0OTJkZThhNzYxODkwYTVkMjk5OTUxZGVkZTNkOGY3Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-08T07:37:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-08T07:37:09Z"}, "message": "tree: Avoid variable sharing in get_narrower [PR94724]\n\nOn Thu, May 07, 2020 at 02:45:29PM +0200, Thomas Schwinge wrote:\n> >>+      for (tree op = win; TREE_CODE (op) == COMPOUND_EXPR;\n>\n> ..., and new 'op' variable here.\n>\n> >>+        op = TREE_OPERAND (op, 1))\n> >>+     v.safe_push (op);\n> >>+      FOR_EACH_VEC_ELT_REVERSE (v, i, op)\n> >>+     ret = build2_loc (EXPR_LOCATION (op), COMPOUND_EXPR,\n> >>+                       TREE_TYPE (win), TREE_OPERAND (op, 0),\n> >>+                       ret);\n> >>+      return ret;\n> >>     }\n> >>   while (TREE_CODE (op) == NOP_EXPR)\n> >>     {\n\nThere is no reason for the shadowing and op at this point acts as a\ntemporary and will be overwritten in FOR_EACH_VEC_ELT_REVERSE anyway.\nSo, we can just s/tree // here.\n\n2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/94724\n\t* tree.c (get_narrower): Reuse the op temporary instead of\n\tshadowing it.", "tree": {"sha": "1bb476f5b2c10eeed8d744d9186a72b95457cc39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb476f5b2c10eeed8d744d9186a72b95457cc39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a139bc2b492de8a761890a5d299951dede3d8f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a139bc2b492de8a761890a5d299951dede3d8f7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a139bc2b492de8a761890a5d299951dede3d8f7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a139bc2b492de8a761890a5d299951dede3d8f7b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d732eea2e152fc51f7c5249abaa9ef56fc5121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d732eea2e152fc51f7c5249abaa9ef56fc5121"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2e5a05134abe7ed4d27b23983280960574a46997", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a139bc2b492de8a761890a5d299951dede3d8f7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a139bc2b492de8a761890a5d299951dede3d8f7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a139bc2b492de8a761890a5d299951dede3d8f7b", "patch": "@@ -1,5 +1,9 @@\n 2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/94724\n+\t* tree.c (get_narrower): Reuse the op temporary instead of\n+\tshadowing it.\n+\n \tPR tree-optimization/94783\n \t* match.pd ((X + (X >> (prec - 1))) ^ (X >> (prec - 1)) to abs (X)):\n \tNew simplification."}, {"sha": "397474900ff9191c9a18ca473479304b8109d8a3", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a139bc2b492de8a761890a5d299951dede3d8f7b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a139bc2b492de8a761890a5d299951dede3d8f7b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=a139bc2b492de8a761890a5d299951dede3d8f7b", "patch": "@@ -8889,7 +8889,7 @@ get_narrower (tree op, int *unsignedp_ptr)\n \treturn win;\n       auto_vec <tree, 16> v;\n       unsigned int i;\n-      for (tree op = win; TREE_CODE (op) == COMPOUND_EXPR;\n+      for (op = win; TREE_CODE (op) == COMPOUND_EXPR;\n \t   op = TREE_OPERAND (op, 1))\n \tv.safe_push (op);\n       FOR_EACH_VEC_ELT_REVERSE (v, i, op)"}]}