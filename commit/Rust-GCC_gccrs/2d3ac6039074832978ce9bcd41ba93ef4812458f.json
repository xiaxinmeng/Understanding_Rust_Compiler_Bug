{"sha": "2d3ac6039074832978ce9bcd41ba93ef4812458f", "node_id": "C_kwDOANBUbNoAKDJkM2FjNjAzOTA3NDgzMjk3OGNlOWJjZDQxYmE5M2VmNDgxMjQ1OGY", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T01:34:23Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T01:34:23Z"}, "message": "libstdc++: Implement LWG 3590-3592 changes to split_view/lazy_split_view\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (lazy_split_view::base): Add forward_range\n\tconstraint as per LWG 3591.\n\t(lazy_split_view::begin, lazy_split_view::end): Also check\n\tsimpleness of _Pattern as per LWG 3592.\n\t(split_view::base): Relax copyable constraint as per LWG 3590.", "tree": {"sha": "dd086d37ed52db3a9a913e7e48954fd676f41e9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd086d37ed52db3a9a913e7e48954fd676f41e9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d3ac6039074832978ce9bcd41ba93ef4812458f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3ac6039074832978ce9bcd41ba93ef4812458f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d3ac6039074832978ce9bcd41ba93ef4812458f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3ac6039074832978ce9bcd41ba93ef4812458f/comments", "author": null, "committer": null, "parents": [{"sha": "6667274b0593a64dd3de3c7c3565bec42af35b62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6667274b0593a64dd3de3c7c3565bec42af35b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6667274b0593a64dd3de3c7c3565bec42af35b62"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "30ba06068696d6f37890aedcf7c1935fe1126fe4", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3ac6039074832978ce9bcd41ba93ef4812458f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3ac6039074832978ce9bcd41ba93ef4812458f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=2d3ac6039074832978ce9bcd41ba93ef4812458f", "patch": "@@ -3137,7 +3137,7 @@ namespace views::__adaptor\n \t  { return _M_i_current(); }\n \n \t  constexpr iterator_t<_Base>\n-\t  base() &&\n+\t  base() && requires forward_range<_Vp>\n \t  { return std::move(_M_i_current()); }\n \n \t  constexpr decltype(auto)\n@@ -3229,8 +3229,11 @@ namespace views::__adaptor\n       begin()\n       {\n \tif constexpr (forward_range<_Vp>)\n-\t  return _OuterIter<__detail::__simple_view<_Vp>>{\n-\t      this, ranges::begin(_M_base)};\n+\t  {\n+\t    constexpr bool __simple\n+\t      = __detail::__simple_view<_Vp> && __detail::__simple_view<_Pattern>;\n+\t    return _OuterIter<__simple>{this, ranges::begin(_M_base)};\n+\t  }\n \telse\n \t  {\n \t    _M_current = ranges::begin(_M_base);\n@@ -3247,8 +3250,9 @@ namespace views::__adaptor\n       constexpr auto\n       end() requires forward_range<_Vp> && common_range<_Vp>\n       {\n-\treturn _OuterIter<__detail::__simple_view<_Vp>>{\n-\t    this, ranges::end(_M_base)};\n+\tconstexpr bool __simple\n+\t  = __detail::__simple_view<_Vp> && __detail::__simple_view<_Pattern>;\n+\treturn _OuterIter<__simple>{this, ranges::end(_M_base)};\n       }\n \n       constexpr auto\n@@ -3339,7 +3343,7 @@ namespace views::__adaptor\n     { }\n \n     constexpr _Vp\n-    base() const& requires copyable<_Vp>\n+    base() const& requires copy_constructible<_Vp>\n     { return _M_base; }\n \n     constexpr _Vp"}]}