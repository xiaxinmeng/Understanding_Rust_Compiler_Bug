{"sha": "c38b84d8f108cb3317475744fcb92c41324b4291", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4Yjg0ZDhmMTA4Y2IzMzE3NDc1NzQ0ZmNiOTJjNDEzMjRiNDI5MQ==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@ira.uka.de", "date": "2008-09-19T11:37:16Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2008-09-19T11:37:16Z"}, "message": "re PR libstdc++/37470 (parallel/base.h log2 conflicts with math.h)\n\n2008-09-19  Johannes Singler  <singler@ira.uka.de>\n\n        PR libstdc++/37470\n        * include/parallel/base.h: Rename log2 to __log2.\n          (__log2) Avoid infinite loop for n <= 0, return 0.\n        * include/parallel/losertree.h: Rename log2 to __log2.\n        * include/parallel/multiseq_selection.h: Likewise.\n        * include/parallel/random_shuffle.h: Likewise.\n\nFrom-SVN: r140490", "tree": {"sha": "42de00f4ce674b62e3736f92e4f82d466697d3ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42de00f4ce674b62e3736f92e4f82d466697d3ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c38b84d8f108cb3317475744fcb92c41324b4291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38b84d8f108cb3317475744fcb92c41324b4291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c38b84d8f108cb3317475744fcb92c41324b4291", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38b84d8f108cb3317475744fcb92c41324b4291/comments", "author": null, "committer": null, "parents": [{"sha": "6a7a462cbfe97638fcfe74a8c5e4b847d71f6e9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7a462cbfe97638fcfe74a8c5e4b847d71f6e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7a462cbfe97638fcfe74a8c5e4b847d71f6e9d"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "99340ec117c236c5d1f14122dc64c34ed565f149", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c38b84d8f108cb3317475744fcb92c41324b4291", "patch": "@@ -1,3 +1,12 @@\n+2008-09-19  Johannes Singler  <singler@ira.uka.de>\n+\n+        PR libstdc++/37470\n+        * include/parallel/base.h: Rename log2 to __log2.\n+\t  (__log2) Avoid infinite loop for n <= 0, return 0.\n+        * include/parallel/losertree.h: Rename log2 to __log2.\n+        * include/parallel/multiseq_selection.h: Likewise.\n+        * include/parallel/random_shuffle.h: Likewise.\n+\n 2008-09-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/shared_ptr.h (__shared_count<>::"}, {"sha": "2a5dc297ec4ffef56755c3595dd296507e27044a", "filename": "libstdc++-v3/include/parallel/base.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h?ref=c38b84d8f108cb3317475744fcb92c41324b4291", "patch": "@@ -105,14 +105,14 @@ namespace __gnu_parallel\n \n /** @brief Calculates the rounded-down logarithm of @c n for base 2.\n   *  @param n Argument.\n-  *  @return Returns 0 for argument 0.\n+  *  @return Returns 0 for any argument <1.\n   */\n template<typename Size>\n   inline Size\n-  log2(Size n)\n+  __log2(Size n)\n     {\n       Size k;\n-      for (k = 0; n != 1; n >>= 1)\n+      for (k = 0; n > 1; n >>= 1)\n         ++k;\n       return k;\n     }"}, {"sha": "84d5be7a05d47dc564c46fa22807b19e52802915", "filename": "libstdc++-v3/include/parallel/losertree.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h?ref=c38b84d8f108cb3317475744fcb92c41324b4291", "patch": "@@ -105,7 +105,7 @@ class LoserTreeBase\n     ik = _k;\n \n     // Compute log_2{k} for the Loser Tree\n-    _M_log_k = log2(ik - 1) + 1;\n+    _M_log_k = __log2(ik - 1) + 1;\n \n     // Next greater power of 2.\n     k = 1 << _M_log_k;\n@@ -368,7 +368,7 @@ class LoserTreePointerBase\n     ik = _k;\n \n     // Next greater power of 2.\n-    k = 1 << (log2(ik - 1) + 1);\n+    k = 1 << (__log2(ik - 1) + 1);\n     offset = k;\n     losers = new Loser[k * 2];\n     for (unsigned int i = ik - 1; i < k; i++)\n@@ -579,7 +579,7 @@ class LoserTreeUnguardedBase\n     ik = _k;\n \n     // Next greater power of 2.\n-    k = 1 << (log2(ik - 1) + 1);\n+    k = 1 << (__log2(ik - 1) + 1);\n     offset = k;\n     // Avoid default-constructing losers[].key\n     losers = static_cast<Loser*>(::operator new(2 * k * sizeof(Loser)));\n@@ -815,7 +815,7 @@ class LoserTreePointerUnguardedBase\n     ik = _k;\n \n     // Next greater power of 2.\n-    k = 1 << (log2(ik - 1) + 1);\n+    k = 1 << (__log2(ik - 1) + 1);\n     offset = k;\n     // Avoid default-constructing losers[].key\n     losers = new Loser[2 * k];"}, {"sha": "79078af996c99b8029c7a610fa294a10df93c572", "filename": "libstdc++-v3/include/parallel/multiseq_selection.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h?ref=c38b84d8f108cb3317475744fcb92c41324b4291", "patch": "@@ -183,7 +183,7 @@ namespace __gnu_parallel\n \t  nmax = std::max(nmax, ns[i]);\n \t}\n \n-      r = log2(nmax) + 1;\n+      r = __log2(nmax) + 1;\n \n       // Pad all lists to this length, at least as long as any ns[i],\n       // equality iff nmax = 2^k - 1.\n@@ -429,7 +429,7 @@ namespace __gnu_parallel\n \t  nmax = std::max(nmax, ns[i]);\n \t}\n \n-      r = log2(nmax) + 1;\n+      r = __log2(nmax) + 1;\n \n       // Pad all lists to this length, at least as long as any ns[i],\n       // equality iff nmax = 2^k - 1"}, {"sha": "5e875b4fb4a1bf75764870e67dc65c33796bb7a9", "filename": "libstdc++-v3/include/parallel/random_shuffle.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38b84d8f108cb3317475744fcb92c41324b4291/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h?ref=c38b84d8f108cb3317475744fcb92c41324b4291", "patch": "@@ -249,7 +249,7 @@ template<typename T>\n     if (x <= 1)\n       return 1;\n     else\n-      return (T)1 << (log2(x - 1) + 1);\n+      return (T)1 << (__log2(x - 1) + 1);\n   }\n \n /** @brief Main parallel random shuffle step.\n@@ -352,7 +352,7 @@ template<typename RandomAccessIterator, typename RandomNumberGenerator>\n             starts = sd.starts = new difference_type[num_threads + 1];\n             int bin_cursor = 0;\n             sd.num_bins = num_bins;\n-            sd.num_bits = log2(num_bins);\n+            sd.num_bits = __log2(num_bins);\n \n             difference_type chunk_length = n / num_threads,\n                             split = n % num_threads, start = 0;\n@@ -450,7 +450,7 @@ template<typename RandomAccessIterator, typename RandomNumberGenerator>\n       }\n #endif\n \n-    int num_bits = log2(num_bins);\n+    int num_bits = __log2(num_bins);\n \n     if (num_bins > 1)\n       {"}]}