{"sha": "a34437a1da009486cdd38e8ea74b3d0c42022a10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM0NDM3YTFkYTAwOTQ4NmNkZDM4ZThlYTc0YjNkMGM0MjAyMmExMA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-05-08T14:40:58Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-05-08T14:40:58Z"}, "message": "re PR fortran/31630 (ICE on nasty derived types code)\n\n2007-05-08  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31630\n\t* resolve.c (resolve_symbol): Remove the flagging mechanism from the\n\tformal namespace resolution and instead check that the formal\n\tnamespace is not the current namespace.\n\nFrom-SVN: r124550", "tree": {"sha": "887b0b786c6f93ded3510a3ce8a8a2b2631f9152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/887b0b786c6f93ded3510a3ce8a8a2b2631f9152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a34437a1da009486cdd38e8ea74b3d0c42022a10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34437a1da009486cdd38e8ea74b3d0c42022a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34437a1da009486cdd38e8ea74b3d0c42022a10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34437a1da009486cdd38e8ea74b3d0c42022a10/comments", "author": null, "committer": null, "parents": [{"sha": "b2b247f9864d751c6ebf696292b93b477d2c6c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b247f9864d751c6ebf696292b93b477d2c6c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b247f9864d751c6ebf696292b93b477d2c6c96"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "36137451ec62d1671c5ccd4665168ebd420cdd25", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34437a1da009486cdd38e8ea74b3d0c42022a10/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34437a1da009486cdd38e8ea74b3d0c42022a10/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a34437a1da009486cdd38e8ea74b3d0c42022a10", "patch": "@@ -1,3 +1,10 @@\n+2007-05-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31630\n+\t* resolve.c (resolve_symbol): Remove the flagging mechanism from the\n+\tformal namespace resolution and instead check that the formal\n+\tnamespace is not the current namespace.\n+\n 2007-05-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31692"}, {"sha": "5c5d40bf6d5c60be8b42d765650862c0b413d7f4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34437a1da009486cdd38e8ea74b3d0c42022a10/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34437a1da009486cdd38e8ea74b3d0c42022a10/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a34437a1da009486cdd38e8ea74b3d0c42022a10", "patch": "@@ -6136,9 +6136,7 @@ resolve_fl_parameter (gfc_symbol *sym)\n static void\n resolve_symbol (gfc_symbol *sym)\n {\n-  /* Zero if we are checking a formal namespace.  */\n-  static int formal_ns_flag = 1;\n-  int formal_ns_save, check_constant, mp_flag;\n+  int check_constant, mp_flag;\n   gfc_symtree *symtree;\n   gfc_symtree *this_symtree;\n   gfc_namespace *ns;\n@@ -6345,18 +6343,9 @@ resolve_symbol (gfc_symbol *sym)\n \n   formal_arg_flag = 0;\n \n-  /* Resolve formal namespaces.  The symbols in formal namespaces that\n-     themselves are from procedures in formal namespaces will not stand\n-     resolution, except when they are use associated.\n-     TODO: Fix the symbols in formal namespaces so that resolution can\n-     be done unconditionally.  */\n-  if (formal_ns_flag && sym != NULL && sym->formal_ns != NULL)\n-    {\n-      formal_ns_save = formal_ns_flag;\n-      formal_ns_flag = sym->attr.use_assoc ? 1 : 0;\n-      gfc_resolve (sym->formal_ns);\n-      formal_ns_flag = formal_ns_save;\n-    }\n+  /* Resolve formal namespaces.  */\n+  if (sym->formal_ns && sym->formal_ns != gfc_current_ns)\n+    gfc_resolve (sym->formal_ns);\n \n   /* Check threadprivate restrictions.  */\n   if (sym->attr.threadprivate && !sym->attr.save"}]}