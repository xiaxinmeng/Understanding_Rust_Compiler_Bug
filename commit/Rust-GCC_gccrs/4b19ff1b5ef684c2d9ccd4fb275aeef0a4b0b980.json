{"sha": "4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980", "node_id": "C_kwDOANBUbNoAKDRiMTlmZjFiNWVmNjg0YzJkOWNjZDRmYjI3NWFlZWYwYTRiMGI5ODA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-07T13:01:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-09T07:24:30Z"}, "message": "tree-optimization/26854 - slow bitmap operations\n\nWith the compiler.i testcase from the PR one can see bitmap_set_bit\nvery high in the profile, originating from SSA update and alias\nstmt walking.  For SSA update mark_block_for_update essentially\nperforms redundant bitmap_set_bits and is called via\ninsert_updated_phi_nodes_for as\n\n      EXECUTE_IF_SET_IN_BITMAP (pruned_idf, 0, i, bi)\n...\n          mark_block_for_update (bb);\n          FOR_EACH_EDGE (e, ei, bb->preds)\n            if (e->src->index >= 0)\n              mark_block_for_update (e->src);\n\nwhich is quite random in the access pattern and runs into the\nO(n) case of the linked list bitmap representation.  Switching\nblocks_to_update to tree view around insert_updated_phi_nodes_for\nimproves SSA update time from\n\n tree SSA incremental               :   4.26 (  3%)\n\nto\n\n tree SSA incremental               :   2.98 (  2%)\n\nLikewise the visited bitmap allocated by the alias walker benefits\nfrom using the tree view in case of large CFGs and we see an\nimprovement from\n\n alias stmt walking                 :  10.53 (  9%)\n\nto\n\n alias stmt walking                 :   4.05 (  4%)\n\n\tPR tree-optimization/26854\n\t* tree-into-ssa.cc (update_ssa): Turn blocks_to_update to tree\n\tview around insert_updated_phi_nodes_for.\n\t* tree-ssa-alias.cc (maybe_skip_until): Allocate visited bitmap\n\tin tree view.\n\t(walk_aliased_vdefs_1): Likewise.", "tree": {"sha": "e95b698aac611d9a960a99b8fd4949195e763af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e95b698aac611d9a960a99b8fd4949195e763af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6fc79d0c90ff3a924d272eff74b32656bdf5481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fc79d0c90ff3a924d272eff74b32656bdf5481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fc79d0c90ff3a924d272eff74b32656bdf5481"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "2e3229904565117faa8d2581beceaa6a552c5ea6", "filename": "gcc/tree-into-ssa.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980/gcc%2Ftree-into-ssa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980/gcc%2Ftree-into-ssa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.cc?ref=4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980", "patch": "@@ -3561,6 +3561,8 @@ update_ssa (unsigned update_flags)\n \tbitmap_initialize (&dfs[bb->index], &bitmap_default_obstack);\n       compute_dominance_frontiers (dfs);\n \n+      bitmap_tree_view (blocks_to_update);\n+\n       /* insert_update_phi_nodes_for will call add_new_name_mapping\n \t when inserting new PHI nodes, but it will not add any\n \t new members to OLD_SSA_NAMES.  */\n@@ -3574,6 +3576,8 @@ update_ssa (unsigned update_flags)\n       FOR_EACH_VEC_ELT (symbols_to_rename, i, sym)\n \tinsert_updated_phi_nodes_for (sym, dfs, update_flags);\n \n+      bitmap_list_view (blocks_to_update);\n+\n       FOR_EACH_BB_FN (bb, cfun)\n \tbitmap_clear (&dfs[bb->index]);\n       free (dfs);"}, {"sha": "81bc51ed4ad8e4c2018a98b00c75efafb90c2fa8", "filename": "gcc/tree-ssa-alias.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980/gcc%2Ftree-ssa-alias.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980/gcc%2Ftree-ssa-alias.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.cc?ref=4b19ff1b5ef684c2d9ccd4fb275aeef0a4b0b980", "patch": "@@ -3657,7 +3657,10 @@ maybe_skip_until (gimple *phi, tree &target, basic_block target_bb,\n   basic_block bb = gimple_bb (phi);\n \n   if (!*visited)\n-    *visited = BITMAP_ALLOC (NULL);\n+    {\n+      *visited = BITMAP_ALLOC (NULL);\n+      bitmap_tree_view (*visited);\n+    }\n \n   bitmap_set_bit (*visited, SSA_NAME_VERSION (PHI_RESULT (phi)));\n \n@@ -3949,7 +3952,10 @@ walk_aliased_vdefs_1 (ao_ref *ref, tree vdef,\n \t{\n \t  unsigned i;\n \t  if (!*visited)\n-\t    *visited = BITMAP_ALLOC (NULL);\n+\t    {\n+\t      *visited = BITMAP_ALLOC (NULL);\n+\t      bitmap_tree_view (*visited);\n+\t    }\n \t  for (i = 0; i < gimple_phi_num_args (def_stmt); ++i)\n \t    {\n \t      int res = walk_aliased_vdefs_1 (ref,"}]}