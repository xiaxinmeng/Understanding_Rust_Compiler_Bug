{"sha": "e83a75a793e317d6e35ae124084e5af1c415e764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzYTc1YTc5M2UzMTdkNmUzNWFlMTI0MDg0ZTVhZjFjNDE1ZTc2NA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2008-03-09T08:59:49Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2008-03-09T08:59:49Z"}, "message": "rs6000.c (builtin_description): Rename vector left shift operations.\n\n\t* config/rs6000/rs6000.c (builtin_description): Rename vector\n\tleft shift operations.\n\t* config/rs6000/altivec.md (UNSPEC_VSL): Remove.\n\t(altivec_vsl<VI_char>): Rename to ...\n\t(ashl<mode>3): ... new name.\n\t(mulv4sf3, mulv4si3, negv4sf2): Replace gen_altivec_vslw with\n\tgen_ashlv4si3.\n\t(absv4sf2): Convert to use ashift:V4SI instead of UNSPEC_VSL.\n\nFrom-SVN: r133051", "tree": {"sha": "12268178e87c733264ee8a2b3bc5f9684ec5a637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12268178e87c733264ee8a2b3bc5f9684ec5a637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e83a75a793e317d6e35ae124084e5af1c415e764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83a75a793e317d6e35ae124084e5af1c415e764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83a75a793e317d6e35ae124084e5af1c415e764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83a75a793e317d6e35ae124084e5af1c415e764/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ef3292853b53ce0321c34f8e8acf005d879ae2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef3292853b53ce0321c34f8e8acf005d879ae2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef3292853b53ce0321c34f8e8acf005d879ae2c"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "e907310934209a5a59697281c0f39ad9498abce1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83a75a793e317d6e35ae124084e5af1c415e764/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83a75a793e317d6e35ae124084e5af1c415e764/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e83a75a793e317d6e35ae124084e5af1c415e764", "patch": "@@ -1,3 +1,14 @@\n+2008-03-09  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (builtin_description): Rename vector\n+\tleft shift operations.\n+\t* config/rs6000/altivec.md (UNSPEC_VSL): Remove.\n+\t(altivec_vsl<VI_char>): Rename to ...\n+\t(ashl<mode>3): ... new name.\n+\t(mulv4sf3, mulv4si3, negv4sf2): Replace gen_altivec_vslw with\n+\tgen_ashlv4si3.\n+\t(absv4sf2): Convert to use ashift:V4SI instead of UNSPEC_VSL.\n+\n 2008-03-08  Richard Guenther  <rguenther@suse.de>\n \n \t* coverage.h (tree_coverage_counter_addr): Declare."}, {"sha": "95c588ca0700bc99117065e032bc04a75453ef0b", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83a75a793e317d6e35ae124084e5af1c415e764/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83a75a793e317d6e35ae124084e5af1c415e764/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=e83a75a793e317d6e35ae124084e5af1c415e764", "patch": "@@ -64,7 +64,6 @@\n    (UNSPEC_VPKUWUS      102)\n    (UNSPEC_VPKSWUS      103)\n    (UNSPEC_VRL          104)\n-   (UNSPEC_VSL          107)\n    (UNSPEC_VSLV4SI      110)\n    (UNSPEC_VSLO         111)\n    (UNSPEC_VSR          118)\n@@ -576,7 +575,7 @@\n   /* Generate [-0.0, -0.0, -0.0, -0.0].  */\n   neg0 = gen_reg_rtx (V4SImode);\n   emit_insn (gen_altivec_vspltisw (neg0, constm1_rtx));\n-  emit_insn (gen_altivec_vslw (neg0, neg0, neg0));\n+  emit_insn (gen_ashlv4si3 (neg0, neg0, neg0));\n \n   /* Use the multiply-add.  */\n   emit_insn (gen_altivec_vmaddfp (operands[0], operands[1], operands[2],\n@@ -635,7 +634,7 @@\n    high_product = gen_reg_rtx (V4SImode);\n    emit_insn (gen_altivec_vmsumuhm (high_product, one, small_swap, zero));\n  \n-   emit_insn (gen_altivec_vslw (high_product, high_product, sixteen));\n+   emit_insn (gen_ashlv4si3 (high_product, high_product, sixteen));\n  \n    emit_insn (gen_addv4si3 (operands[0], high_product, low_product));\n    \n@@ -1221,15 +1220,6 @@\n   \"vrl<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vsl<VI_char>\"\n-  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n-        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")]\n-\t\t   UNSPEC_VSL))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsl<VI_char> %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n (define_insn \"altivec_vsl\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n@@ -1248,6 +1238,14 @@\n   \"vslo %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n+(define_insn \"ashl<mode>3\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (ashift:VI (match_operand:VI 1 \"register_operand\" \"v\")\n+                   (match_operand:VI 2 \"register_operand\" \"v\") ))]\n+  \"TARGET_ALTIVEC\"\n+  \"vsl<VI_char> %0,%1,%2\"\n+  [(set_attr \"type\" \"vecsimple\")])\n+\n (define_insn \"lshr<mode>3\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (lshiftrt:VI (match_operand:VI 1 \"register_operand\" \"v\")\n@@ -2039,7 +2037,7 @@\n   [(set (match_dup 2)\n \t(vec_duplicate:V4SI (const_int -1)))\n    (set (match_dup 3)\n-        (unspec:V4SI [(match_dup 2) (match_dup 2)] UNSPEC_VSL))\n+        (ashift:V4SI (match_dup 2) (match_dup 2)))\n    (set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (and:V4SF (not:V4SF (subreg:V4SF (match_dup 3) 0))\n                   (match_operand:V4SF 1 \"register_operand\" \"v\")))]\n@@ -2642,7 +2640,7 @@\n   /* Generate [-0.0, -0.0, -0.0, -0.0].  */\n   neg0 = gen_reg_rtx (V4SImode);\n   emit_insn (gen_altivec_vspltisw (neg0, constm1_rtx));\n-  emit_insn (gen_altivec_vslw (neg0, neg0, neg0));\n+  emit_insn (gen_ashlv4si3 (neg0, neg0, neg0));\n \n   /* XOR */\n   emit_insn (gen_xorv4sf3 (operands[0],"}, {"sha": "593408f56d538cad0461cc0862a43ccc75425ce6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83a75a793e317d6e35ae124084e5af1c415e764/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83a75a793e317d6e35ae124084e5af1c415e764/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e83a75a793e317d6e35ae124084e5af1c415e764", "patch": "@@ -7090,9 +7090,9 @@ static struct builtin_description bdesc_2arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vrlb, \"__builtin_altivec_vrlb\", ALTIVEC_BUILTIN_VRLB },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vrlh, \"__builtin_altivec_vrlh\", ALTIVEC_BUILTIN_VRLH },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vrlw, \"__builtin_altivec_vrlw\", ALTIVEC_BUILTIN_VRLW },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vslb, \"__builtin_altivec_vslb\", ALTIVEC_BUILTIN_VSLB },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vslh, \"__builtin_altivec_vslh\", ALTIVEC_BUILTIN_VSLH },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vslw, \"__builtin_altivec_vslw\", ALTIVEC_BUILTIN_VSLW },\n+  { MASK_ALTIVEC, CODE_FOR_ashlv16qi3, \"__builtin_altivec_vslb\", ALTIVEC_BUILTIN_VSLB },\n+  { MASK_ALTIVEC, CODE_FOR_ashlv8hi3, \"__builtin_altivec_vslh\", ALTIVEC_BUILTIN_VSLH },\n+  { MASK_ALTIVEC, CODE_FOR_ashlv4si3, \"__builtin_altivec_vslw\", ALTIVEC_BUILTIN_VSLW },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vsl, \"__builtin_altivec_vsl\", ALTIVEC_BUILTIN_VSL },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vslo, \"__builtin_altivec_vslo\", ALTIVEC_BUILTIN_VSLO },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vspltb, \"__builtin_altivec_vspltb\", ALTIVEC_BUILTIN_VSPLTB },"}]}