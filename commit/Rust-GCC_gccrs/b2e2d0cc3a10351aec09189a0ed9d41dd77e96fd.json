{"sha": "b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJlMmQwY2MzYTEwMzUxYWVjMDkxODlhMGVkOWQ0MWRkNzdlOTZmZA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2002-06-06T03:05:37Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-06-06T03:05:37Z"}, "message": "varasm.c (make_decl_rtl): Fix comment for removed halfpic.c.\n\n2002-06-05  Eric Christopher  <echristo@redhat.com>\n\n\t* varasm.c (make_decl_rtl): Fix comment for removed\n\thalfpic.c.\n\nFrom-SVN: r54298", "tree": {"sha": "85b6cbff3d398d4803cde144ceda1e680e7596e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85b6cbff3d398d4803cde144ceda1e680e7596e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f81faf6523201cbf39b90de7d2d6b6542681cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f81faf6523201cbf39b90de7d2d6b6542681cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f81faf6523201cbf39b90de7d2d6b6542681cfb"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "becbadf2de33b0589ca8ff5dcced6964c8ae1f87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd", "patch": "@@ -1,3 +1,8 @@\n+2002-06-05  Eric Christopher  <echristo@redhat.com>\n+\n+\t* varasm.c (make_decl_rtl): Fix comment for removed\n+\thalfpic.c.\n+\n 2002-06-05  Eric Christopher  <echristo@redhat.com>\n \n \t* Makefile.in: Remove missed halfpic bits."}, {"sha": "908f166ca81cd44747dcbd50837a33fe02a627d6", "filename": "gcc/varasm.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=b2e2d0cc3a10351aec09189a0ed9d41dd77e96fd", "patch": "@@ -82,7 +82,7 @@ struct varasm_status GTY(())\n      This pool of constants is reinitialized for each function\n      so each function gets its own constants-pool that comes right before\n      it.  */\n-  struct constant_descriptor_rtx ** GTY ((length (\"MAX_RTX_HASH_TABLE\"))) \n+  struct constant_descriptor_rtx ** GTY ((length (\"MAX_RTX_HASH_TABLE\")))\n     x_const_rtx_hash_table;\n   struct pool_constant ** GTY ((length (\"MAX_RTX_HASH_TABLE\")))\n     x_const_rtx_sym_hash_table;\n@@ -143,9 +143,9 @@ static void output_constant_def_contents  PARAMS ((tree, int, int));\n static void decode_rtx_const\t\tPARAMS ((enum machine_mode, rtx,\n \t\t\t\t\t       struct rtx_const *));\n static int const_hash_rtx\t\tPARAMS ((enum machine_mode, rtx));\n-static int compare_constant_rtx\t\n+static int compare_constant_rtx\n   PARAMS ((enum machine_mode, rtx, struct constant_descriptor_rtx *));\n-static struct constant_descriptor_rtx * record_constant_rtx \n+static struct constant_descriptor_rtx * record_constant_rtx\n   PARAMS ((enum machine_mode, rtx));\n static struct pool_constant *find_pool_constant PARAMS ((struct function *, rtx));\n static void mark_constant_pool\t\tPARAMS ((void));\n@@ -823,8 +823,11 @@ make_decl_rtl (decl, asmspec)\n \tSET_DECL_RTL (decl, adjust_address_nv (DECL_RTL (decl),\n \t\t\t\t\t       DECL_MODE (decl), 0));\n \n-      /* ??? Another way to do this would be to do what halfpic.c does\n-\t and maintain a hashed table of such critters.  */\n+      /* ??? Another way to do this would be to maintain a hashed\n+\t table of such critters.  Instead of adding stuff to a DECL\n+\t to give certain attributes to it, we could use an external\n+\t hash map from DECL to set of attributes.  */\n+\n       /* Let the target reassign the RTL if it wants.\n \t This is necessary, for example, when one machine specific\n \t decl attribute overrides another.  */\n@@ -2173,9 +2176,9 @@ struct rtx_const GTY(())\n   union rtx_const_un {\n     REAL_VALUE_TYPE du;\n     struct addr_const GTY ((tag (\"1\"))) addr;\n-    struct rtx_const_u_di { \n+    struct rtx_const_u_di {\n       HOST_WIDE_INT high;\n-      HOST_WIDE_INT low; \n+      HOST_WIDE_INT low;\n     } GTY ((tag (\"0\"))) di;\n \n     /* The max vector size we have is 8 wide.  This should be enough.  */\n@@ -2433,7 +2436,7 @@ compare_constant (t1, t2)\n \t    return 0;\n \t  if (get_set_constructor_bytes (t2, tmp2, len) != NULL_TREE)\n \t    return 0;\n-\t  \n+\n \t  return memcmp (tmp1, tmp2, len) != 0;\n \t}\n       else\n@@ -2477,7 +2480,7 @@ compare_constant (t1, t2)\n \t\t    return 0;\n \t\t}\n \t    }\n-\t  \n+\n \t  return l1 == NULL_TREE && l2 == NULL_TREE;\n \t}\n \n@@ -4678,7 +4681,7 @@ make_decl_one_only (decl)\n void\n init_varasm_once ()\n {\n-  const_str_htab = htab_create_ggc (128, const_str_htab_hash, \n+  const_str_htab = htab_create_ggc (128, const_str_htab_hash,\n \t\t\t\t    const_str_htab_eq, NULL);\n   in_named_htab = htab_create (31, in_named_entry_hash,\n \t\t\t       in_named_entry_eq, NULL);"}]}