{"sha": "2180cdd8a0e65c2790a7732c82de87f83478487b", "node_id": "C_kwDOANBUbNoAKDIxODBjZGQ4YTBlNjVjMjc5MGE3NzMyYzgyZGU4N2Y4MzQ3ODQ4N2I", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-07-18T12:43:45Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-07-19T03:17:13Z"}, "message": "xtensa: Correct the relative RTX cost that corresponds to the Move Immediate \"MOVI\" instruction\n\nThis patch corrects the overestimation of the relative cost of\n'(set (reg) (const_int N))' where N fits into the instruction itself.\n\nIn fact, such overestimation confuses the RTL loop invariant motion pass.\nAs a result, it brings almost no negative impact from the speed point of\nview, but addtiional reg-reg move instructions and register allocation\npressure about the size.\n\n    /* example, optimized for size */\n    extern int foo(void);\n    extern int array[16];\n    void test_0(void) {\n      unsigned int i;\n      for (i = 0; i < sizeof(array)/sizeof(*array); ++i)\n        array[i] = 1024;\n    }\n    void test_1(void) {\n      unsigned int i;\n      for (i = 0; i < sizeof(array)/sizeof(*array); ++i)\n        array[i] = array[i] ? 1024 : 0;\n    }\n    void test_2(void) {\n      unsigned int i;\n      for (i = 0; i < sizeof(array)/sizeof(*array); ++i)\n        array[i] = foo() ? 0 : 1024;\n    }\n\n    ;; before\n\t.literal_position\n\t.literal .LC0, array\n    test_0:\n\tl32r\ta3, .LC0\n\tmovi.n\ta2, 0\n\tmovi\ta4, 0x400\t// OK\n    .L2:\n\ts32i.n\ta4, a3, 0\n\taddi.n\ta2, a2, 1\n\taddi.n\ta3, a3, 4\n\tbnei\ta2, 16, .L2\n\tret.n\n\t.literal_position\n\t.literal .LC1, array\n    test_1:\n\tl32r\ta2, .LC1\n\tmovi.n\ta3, 0\n\tmovi\ta5, 0x400\t// NG\n    .L6:\n\tl32i.n\ta4, a2, 0\n\tbeqz.n\ta4, .L5\n\tmov.n\ta4, a5\t\t// should be \"movi a4, 0x400\"\n    .L5:\n\ts32i.n\ta4, a2, 0\n\taddi.n\ta3, a3, 1\n\taddi.n\ta2, a2, 4\n\tbnei\ta3, 16, .L6\n\tret.n\n\t.literal_position\n\t.literal .LC2, array\n    test_2:\n\taddi\tsp, sp, -32\n\ts32i.n\ta12, sp, 24\n\tl32r\ta12, .LC2\n\ts32i.n\ta13, sp, 20\n\ts32i.n\ta14, sp, 16\n\ts32i.n\ta15, sp, 12\n\ts32i.n\ta0, sp, 28\n\taddi\ta13, a12, 64\n\tmovi.n\ta15, 0\t\t// NG\n\tmovi\ta14, 0x400\t// and wastes callee-saved registers (only 4)\n    .L11:\n\tcall0\tfoo\n\tmov.n\ta3, a14\t\t// should be \"movi a3, 0x400\"\n\tmovnez\ta3, a15, a2\n\ts32i.n\ta3, a12, 0\n\taddi.n\ta12, a12, 4\n\tbne\ta12, a13, .L11\n\tl32i.n\ta0, sp, 28\n\tl32i.n\ta12, sp, 24\n\tl32i.n\ta13, sp, 20\n\tl32i.n\ta14, sp, 16\n\tl32i.n\ta15, sp, 12\n\taddi\tsp, sp, 32\n\tret.n\n\n    ;; after\n\t.literal_position\n\t.literal .LC0, array\n    test_0:\n\tl32r\ta3, .LC0\n\tmovi.n\ta2, 0\n\tmovi\ta4, 0x400\t// OK\n    .L2:\n\ts32i.n\ta4, a3, 0\n\taddi.n\ta2, a2, 1\n\taddi.n\ta3, a3, 4\n\tbnei\ta2, 16, .L2\n\tret.n\n\t.literal_position\n\t.literal .LC1, array\n    test_1:\n\tl32r\ta2, .LC1\n\tmovi.n\ta3, 0\n    .L6:\n\tl32i.n\ta4, a2, 0\n\tbeqz.n\ta4, .L5\n\tmovi\ta4, 0x400\t// OK\n    .L5:\n\ts32i.n\ta4, a2, 0\n\taddi.n\ta3, a3, 1\n\taddi.n\ta2, a2, 4\n\tbnei\ta3, 16, .L6\n\tret.n\n\t.literal_position\n\t.literal .LC2, array\n    test_2:\n\taddi\tsp, sp, -16\n\ts32i.n\ta12, sp, 8\n\tl32r\ta12, .LC2\n\ts32i.n\ta13, sp, 4\n\ts32i.n\ta0, sp, 12\n\taddi\ta13, a12, 64\n    .L11:\n\tcall0\tfoo\n\tmovi.n\ta3, 0\t\t// OK\n\tmovi\ta4, 0x400\t// and less register allocation pressure\n\tmoveqz\ta3, a4, a2\n\ts32i.n\ta3, a12, 0\n\taddi.n\ta12, a12, 4\n\tbne\ta12, a13, .L11\n\tl32i.n\ta0, sp, 12\n\tl32i.n\ta12, sp, 8\n\tl32i.n\ta13, sp, 4\n\taddi\tsp, sp, 16\n\tret.n\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.cc (xtensa_rtx_costs):\n\tChange the relative cost of '(set (reg) (const_int N))' where\n\tN fits into signed 12-bit from 4 to 0 if optimizing for size.\n\tAnd use the appropriate macro instead of the bare number 4.", "tree": {"sha": "a5c75f0c02bfeafea267532a81fd47404c5ca264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c75f0c02bfeafea267532a81fd47404c5ca264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2180cdd8a0e65c2790a7732c82de87f83478487b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2180cdd8a0e65c2790a7732c82de87f83478487b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2180cdd8a0e65c2790a7732c82de87f83478487b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2180cdd8a0e65c2790a7732c82de87f83478487b/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79fb1124c8c31da3ca70ee3a07bf15f3d2d87ab7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a851a7ae6b3cb5e08242346bb558710c8c3ea6fc", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2180cdd8a0e65c2790a7732c82de87f83478487b/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2180cdd8a0e65c2790a7732c82de87f83478487b/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=2180cdd8a0e65c2790a7732c82de87f83478487b", "patch": "@@ -4073,7 +4073,7 @@ xtensa_rtx_costs (rtx x, machine_mode mode, int outer_code,\n \tcase SET:\n \t  if (xtensa_simm12b (INTVAL (x)))\n \t    {\n-\t      *total = 4;\n+\t      *total = speed ? COSTS_N_INSNS (1) : 0;\n \t      return true;\n \t    }\n \t  break;"}]}