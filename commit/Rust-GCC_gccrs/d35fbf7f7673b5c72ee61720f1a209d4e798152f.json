{"sha": "d35fbf7f7673b5c72ee61720f1a209d4e798152f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1ZmJmN2Y3NjczYjVjNzJlZTYxNzIwZjFhMjA5ZDRlNzk4MTUyZg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-12T13:11:11Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-13T10:40:54Z"}, "message": "Objective-C [2/3] : Implement Wobjc-root-class [PR77404].\n\nAdd \"Wno-objc-root-class\" to tests in the Objective-C suite where\nneeded.\n\ngcc/testsuite/ChangeLog:\n\n\tPR objc/77404\n\t* objc.dg/anon-1.m: Add Wno-objc-root-class.\n\t* objc.dg/attributes/class-attribute-1.m: Likewise.\n\t* objc.dg/attributes/class-attribute-2.m: Likewise.\n\t* objc.dg/attributes/class-attribute-3.m: Likewise.\n\t* objc.dg/attributes/method-deprecated-1.m: Likewise.\n\t* objc.dg/attributes/method-deprecated-2.m: Likewise.\n\t* objc.dg/attributes/method-deprecated-3.m: Likewise.\n\t* objc.dg/attributes/method-format-1.m: Likewise.\n\t* objc.dg/attributes/method-nonnull-1.m: Likewise.\n\t* objc.dg/attributes/method-noreturn-1.m: Likewise.\n\t* objc.dg/attributes/method-sentinel-1.m: Likewise.\n\t* objc.dg/attributes/nsobject-01.m: Likewise.\n\t* objc.dg/attributes/objc-exception-1.m: Likewise.\n\t* objc.dg/attributes/parameter-attribute-1.m: Likewise.\n\t* objc.dg/attributes/parameter-attribute-2.m: Likewise.\n\t* objc.dg/attributes/proto-attribute-1.m: Likewise.\n\t* objc.dg/attributes/proto-attribute-2.m: Likewise.\n\t* objc.dg/attributes/proto-attribute-3.m: Likewise.\n\t* objc.dg/attributes/proto-attribute-4.m: Likewise.\n\t* objc.dg/bitfield-2.m: Likewise.\n\t* objc.dg/break-in-ifstmt.m: Likewise.\n\t* objc.dg/class-1.m: Likewise.\n\t* objc.dg/class-extension-1.m: Likewise.\n\t* objc.dg/class-extension-2.m: Likewise.\n\t* objc.dg/class-extension-3.m: Likewise.\n\t* objc.dg/class-extension-4.m: Likewise.\n\t* objc.dg/class-protocol-1.m: Likewise.\n\t* objc.dg/comp-types-7.m: Likewise.\n\t* objc.dg/demangle-1.m: Likewise.\n\t* objc.dg/duplicate-class-1.m: Likewise.\n\t* objc.dg/encode-6-next.m: Likewise.\n\t* objc.dg/encode-6.m: Likewise.\n\t* objc.dg/enhanced-proto-2.m: Likewise.\n\t* objc.dg/exceptions-1.m: Likewise.\n\t* objc.dg/exceptions-3.m: Likewise.\n\t* objc.dg/exceptions-4.m: Likewise.\n\t* objc.dg/exceptions-5.m: Likewise.\n\t* objc.dg/fobjc-std-1.m: Likewise.\n\t* objc.dg/foreach-2.m: Likewise.\n\t* objc.dg/foreach-4.m: Likewise.\n\t* objc.dg/foreach-5.m: Likewise.\n\t* objc.dg/fsyntax-only.m: Likewise.\n\t* objc.dg/gnu-api-2-class-meta.m: Likewise.\n\t* objc.dg/gnu-api-2-class.m: Likewise.\n\t* objc.dg/gnu-api-2-ivar.m: Likewise.\n\t* objc.dg/gnu-api-2-method.m: Likewise.\n\t* objc.dg/gnu-api-2-objc.m: Likewise.\n\t* objc.dg/gnu-api-2-objc_msg_lookup.m: Likewise.\n\t* objc.dg/gnu-api-2-object.m: Likewise.\n\t* objc.dg/gnu-api-2-property.m: Likewise.\n\t* objc.dg/gnu-api-2-protocol.m: Likewise.\n\t* objc.dg/gnu-api-2-resolve-method.m: Likewise.\n\t* objc.dg/gnu-api-2-sel.m: Likewise.\n\t* objc.dg/incomplete-type-1.m: Likewise.\n\t* objc.dg/instancetype-0.m: Likewise.\n\t* objc.dg/invalid-method-2.m: Likewise.\n\t* objc.dg/ivar-invalid-type-1.m: Likewise.\n\t* objc.dg/ivar-problem-1.m: Likewise.\n\t* objc.dg/ivar-scope-1.m: Likewise.\n\t* objc.dg/ivar-scope-2.m: Likewise.\n\t* objc.dg/ivar-scope-4.m: Likewise.\n\t* objc.dg/ivar-visibility-1.m: Likewise.\n\t* objc.dg/ivar-visibility-2.m: Likewise.\n\t* objc.dg/ivar-visibility-3.m: Likewise.\n\t* objc.dg/ivar-visibility-4.m: Likewise.\n\t* objc.dg/local-decl-1.m: Likewise.\n\t* objc.dg/lto/lto.exp: Likewise.\n\t* objc.dg/lto/trivial-1_0.m: Likewise.\n\t* objc.dg/method-1.m: Likewise.\n\t* objc.dg/method-12.m: Likewise.\n\t* objc.dg/method-13.m: Likewise.\n\t* objc.dg/method-14.m: Likewise.\n\t* objc.dg/missing-proto-3.m: Likewise.\n\t* objc.dg/next-runtime-1.m: Likewise.\n\t* objc.dg/objc-foreach-1.m: Likewise.\n\t* objc.dg/objc-foreach-2.m: Likewise.\n\t* objc.dg/objc-foreach-3.m: Likewise.\n\t* objc.dg/objc-nofilename-1.m: Likewise.\n\t* objc.dg/param-1.m: Likewise.\n\t* objc.dg/pch/pch.exp: Likewise.\n\t* objc.dg/plugin/diagnostic-test-expressions-1.m: Likewise.\n\t* objc.dg/pr23709.m: Likewise.\n\t* objc.dg/private-1.m: Likewise.\n\t* objc.dg/private-2.m: Likewise.\n\t* objc.dg/property/property.exp: Likewise.\n\t* objc.dg/proto-hier-1.m: Likewise.\n\t* objc.dg/proto-hier-2.m: Likewise.\n\t* objc.dg/proto-lossage-1.m: Likewise.\n\t* objc.dg/proto-lossage-5.m: Likewise.\n\t* objc.dg/proto-qual-1.m: Likewise.\n\t* objc.dg/protocol-inheritance-1.m: Likewise.\n\t* objc.dg/protocol-inheritance-2.m: Likewise.\n\t* objc.dg/protocol-optional-1.m: Likewise.\n\t* objc.dg/selector-1.m: Likewise.\n\t* objc.dg/selector-2.m: Likewise.\n\t* objc.dg/selector-3.m: Likewise.\n\t* objc.dg/selector-4.m: Likewise.\n\t* objc.dg/shadow-1.m: Likewise.\n\t* objc.dg/shadow-2.m: Likewise.\n\t* objc.dg/special/load-category-1.m: Likewise.\n\t* objc.dg/special/load-category-2.m: Likewise.\n\t* objc.dg/special/load-category-3.m: Likewise.\n\t* objc.dg/special/special.exp: Likewise.\n\t* objc.dg/special/unclaimed-category-1.h: Likewise.\n\t* objc.dg/special/unclaimed-category-1.m: Likewise.\n\t* objc.dg/stabs-1.m: Likewise.\n\t* objc.dg/strings/strings.exp: Likewise.\n\t* objc.dg/stubify-1.m: Likewise.\n\t* objc.dg/stubify-2.m: Likewise.\n\t* objc.dg/super-class-2.m: Likewise.\n\t* objc.dg/super-dealloc-1.m: Likewise.\n\t* objc.dg/super-dealloc-2.m: Likewise.\n\t* objc.dg/sync-3.m: Likewise.\n\t* objc.dg/threedotthree-abi-1.m: Likewise.\n\t* objc.dg/torture/dg-torture.exp: Likewise.\n\t* objc.dg/torture/strings/strings.exp: Likewise.\n\t* objc.dg/try-catch-11.m: Likewise.\n\t* objc.dg/try-catch-12.m: Likewise.\n\t* objc.dg/type-size-2.m: Likewise.\n\t* objc.dg/type-size-3.m: Likewise.\n\t* objc.dg/type-size-4.m: Likewise.\n\t* objc.dg/type-size-5.m: Likewise.\n\t* objc.dg/undeclared-selector.m: Likewise.\n\t* objc.dg/volatile-1.m: Likewise.", "tree": {"sha": "12118de58101ac5ca2dfe9c8f34a39e2461a4cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12118de58101ac5ca2dfe9c8f34a39e2461a4cd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d35fbf7f7673b5c72ee61720f1a209d4e798152f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35fbf7f7673b5c72ee61720f1a209d4e798152f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35fbf7f7673b5c72ee61720f1a209d4e798152f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35fbf7f7673b5c72ee61720f1a209d4e798152f/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe07cdec8c79bce53ea5aeb8e607df6eb5c8c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe07cdec8c79bce53ea5aeb8e607df6eb5c8c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe07cdec8c79bce53ea5aeb8e607df6eb5c8c2c"}], "stats": {"total": 203, "additions": 171, "deletions": 32}, "files": [{"sha": "5dab3fa142d6c63a65b65889bb3b13b3b0696c00", "filename": "gcc/testsuite/objc.dg/anon-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fanon-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fanon-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fanon-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Test for graceful handling of anonymous ivars.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Foo {\n    unsigned char : 1;"}, {"sha": "93e5d7f40aeb115970e6c44a0f5a2f41abecf00f", "filename": "gcc/testsuite/objc.dg/attributes/class-attribute-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test deprecate attribute with an @interface declaration.  */\n "}, {"sha": "f8137ffb4c4b064c70c0f94b4fc48674a6a38476", "filename": "gcc/testsuite/objc.dg/attributes/class-attribute-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "7c3b3b0e0062b3263ac96d194742be354d26f750", "filename": "gcc/testsuite/objc.dg/attributes/class-attribute-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fclass-attribute-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that you get a warning when an unknown class attribute is ignored.  */\n "}, {"sha": "68e8373920da272265b203efda549ca87544cf0a", "filename": "gcc/testsuite/objc.dg/attributes/method-deprecated-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "8fb0e1510d00a7eff181f0c88963cb71d95f3493", "filename": "gcc/testsuite/objc.dg/attributes/method-deprecated-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "efa2d349557b4e17f9ccbd93a14730d949508cdc", "filename": "gcc/testsuite/objc.dg/attributes/method-deprecated-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-deprecated-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "d3bb997b2aaf4190eaf98dda8305b64abc8fb33a", "filename": "gcc/testsuite/objc.dg/attributes/method-format-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-format-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-format-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-format-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do compile } */\n /* { dg-options \"-Wall\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include <stdlib.h>"}, {"sha": "a3bfd9bc3c69bfdc325936abfd2e0e5fca8181d3", "filename": "gcc/testsuite/objc.dg/attributes/method-nonnull-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-nonnull-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-nonnull-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-nonnull-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, May 2011.  */\n /* { dg-do compile } */\n /* { dg-options \"-Wall\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include <stdlib.h>"}, {"sha": "413a0be4b2bdbbb83a26df0128b0120a3656f837", "filename": "gcc/testsuite/objc.dg/attributes/method-noreturn-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-noreturn-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-noreturn-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-noreturn-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include <stdlib.h>"}, {"sha": "f89c98121b9dd657cde99d92b21d72c5670c26ba", "filename": "gcc/testsuite/objc.dg/attributes/method-sentinel-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-sentinel-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-sentinel-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fmethod-sentinel-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do compile } */\n /* { dg-options \"-Wall\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include <stdlib.h>"}, {"sha": "1f331508a89f79ce1bc10c20b572513ca72f672d", "filename": "gcc/testsuite/objc.dg/attributes/nsobject-01.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fnsobject-01.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fnsobject-01.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fnsobject-01.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Test handling of the NSObject attribute.  */\n /*  { dg-additional-options \"-fsyntax-only \" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct AnObj * __attribute__ ((NSObject)) AnObjRef;\n typedef struct AnObj * __attribute__ ((__NSObject__)) AnotherObjRef;"}, {"sha": "19e5ade8bcd1754147bb4f5593d5bfd5ddab5995", "filename": "gcc/testsuite/objc.dg/attributes/objc-exception-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fobjc-exception-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fobjc-exception-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fobjc-exception-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, February 2011.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that the 'objc_exception' attribute is accepted for\n    @interfaces, but not for anything else.  */"}, {"sha": "d6ebaf227f3b885eeb0be5c6db777bee4d8e8675", "filename": "gcc/testsuite/objc.dg/attributes/parameter-attribute-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fparameter-attribute-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fparameter-attribute-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fparameter-attribute-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test __attribute__((unused)) for an Objective-C method parameter.  */\n /* { dg-do compile } */\n /* { dg-options \"-Wunused-parameter\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "637846d4a089f079ada8b47f2ac6aea74afe1110", "filename": "gcc/testsuite/objc.dg/attributes/parameter-attribute-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fparameter-attribute-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fparameter-attribute-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fparameter-attribute-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Test that we get warnings for unrecognized attributes.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "03726dc7bed74c2ed9008ec98041b282ad7104e9", "filename": "gcc/testsuite/objc.dg/attributes/proto-attribute-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "6a73d248ee8f9fc7b9d43ebbb11498358c2dcb9c", "filename": "gcc/testsuite/objc.dg/attributes/proto-attribute-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test deprecate attribute with a forward declarations of\n    @protocol.  */"}, {"sha": "ad6d0c804b1bbbd16a9c3218a2cb97fcf5785ab6", "filename": "gcc/testsuite/objc.dg/attributes/proto-attribute-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test deprecate attribute with normal @protocol declarations.  */\n "}, {"sha": "8d34ebdcc2fe4c5db20b8eeadb407d463851b4b5", "filename": "gcc/testsuite/objc.dg/attributes/proto-attribute-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fattributes%2Fproto-attribute-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that you get a warning when an unknown protocol attribute is ignored.  */\n "}, {"sha": "b28c81e056955fc1c23c27af3bed23392e562d11", "filename": "gcc/testsuite/objc.dg/bitfield-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fbitfield-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fbitfield-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fbitfield-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n /* { dg-options \"-fsigned-char\" } */\n /* { dg-do run { target *-*-darwin* } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { struct objc_class *class_pointer; } *id;\n "}, {"sha": "6176832ed1c56e847f047a21b50c5821b911707a", "filename": "gcc/testsuite/objc.dg/break-in-ifstmt.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fbreak-in-ifstmt.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fbreak-in-ifstmt.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fbreak-in-ifstmt.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface foo\n - (void) test;"}, {"sha": "64383f22d99e20a88036c61e45394845f79544c0", "filename": "gcc/testsuite/objc.dg/class-1.m", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Redeclarations of class names.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef int foo; /* { dg-line foo_def } */\n \n@@ -8,6 +9,9 @@\n \n typedef int bar; /* { dg-line bar_def } */\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface bar\n @end  /* { dg-error \"redeclared as different kind of symbol\" } */\n /* { dg-error \"previous declaration of\" \"\" { target *-*-* } bar_def } */"}, {"sha": "9d6658a63993196adfe7b6e065d42f7c164c44e7", "filename": "gcc/testsuite/objc.dg/class-extension-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* This test tests the basic of class extensions.  */\n "}, {"sha": "293facb189f88ddd9fff632c8b3f0ef08b230c03", "filename": "gcc/testsuite/objc.dg/class-extension-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* This test tests class extensions and protocols.  */\n "}, {"sha": "51fe5eef08364b3c90b9ac868684054aaed232bb", "filename": "gcc/testsuite/objc.dg/class-extension-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* This test tests warnings on class extensions.  */\n "}, {"sha": "5d367d40bd53503e2a0db334424e1c8721584fd2", "filename": "gcc/testsuite/objc.dg/class-extension-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-extension-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* This test tests you can not declare a class extension after the class @implementation.  */\n "}, {"sha": "34680c2ef3a804b2abf545b2f9890e2df812c837", "filename": "gcc/testsuite/objc.dg/class-protocol-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-protocol-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-protocol-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-protocol-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Check Class <protocol> types */\n /* Author: David Ayers <d.ayers@inode.at> */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include \"../objc-obj-c++-shared/runtime.h\""}, {"sha": "6b796f09b296514e22400314ba86b44b752bb4f1", "filename": "gcc/testsuite/objc.dg/comp-types-7.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fcomp-types-7.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fcomp-types-7.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fcomp-types-7.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n /* We used to ICE because we removed the cast to List_linked*\n    in -[ListIndex_linked next]. */\n "}, {"sha": "61e79a69976687f0d2d48b7bf8f6cefee4a33c6c", "filename": "gcc/testsuite/objc.dg/demangle-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fdemangle-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fdemangle-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fdemangle-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test demangling an Objective-C method.  */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <string.h>\n #include <stdlib.h>"}, {"sha": "7992ebf978c5e95c888d5fc7860e873df7d4666a", "filename": "gcc/testsuite/objc.dg/duplicate-class-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fduplicate-class-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fduplicate-class-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fduplicate-class-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that a duplicated @implementation for the same class does not\n    crash the compiler.  */"}, {"sha": "18ee15db446c331f29adea644a21cff1753a7917", "filename": "gcc/testsuite/objc.dg/encode-6-next.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-6-next.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-6-next.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-6-next.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Ziemowit Laski  <zlaski@apple.com>  */\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n struct Cxx {\n   const struct Cxx *next;"}, {"sha": "9e9e4925c5ea1823e3602b52045f4a7bb489b237", "filename": "gcc/testsuite/objc.dg/encode-6.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-6.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-6.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-6.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Ziemowit Laski  <zlaski@apple.com>  */\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n struct Cxx {\n   const struct Cxx *next;"}, {"sha": "ca99445df409f220eb4c661a57c564eb1e0b8839", "filename": "gcc/testsuite/objc.dg/enhanced-proto-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fenhanced-proto-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fenhanced-proto-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fenhanced-proto-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Test use of @optional/@required keywords in @protocol class. */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @protocol MyProto1 \n @optional"}, {"sha": "1e861773b9663a5b079cfe3bdcb3f8c3390ceeed", "filename": "gcc/testsuite/objc.dg/exceptions-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* This test checks the syntax @catch (...) which catches any\n    exceptions.  At the moment, @catch (...) is identical to @catch (id"}, {"sha": "bedaf53ee839761e9dc0dc32ab8d8fdcd10ba492", "filename": "gcc/testsuite/objc.dg/exceptions-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that the compiler is checking the argument of @catch(), and\n    produce errors when invalid types are used.  */"}, {"sha": "5d77ffa61d251cf6632d0c901a59703746f61793", "filename": "gcc/testsuite/objc.dg/exceptions-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test warnings when parsing syntax errors in @catch().  */\n "}, {"sha": "31796bc4c5cd167cf51d82296a901d0fc6ab8872", "filename": "gcc/testsuite/objc.dg/exceptions-5.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-5.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that you can use an unnamed argument with @catch.  This test is the same\n    as exceptions-3.m, but with no name for @catch arguments.  */"}, {"sha": "729f65c5ea611f8ace3d4d72e3db56a42cc48f8e", "filename": "gcc/testsuite/objc.dg/fobjc-std-1.m", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-std-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-std-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-std-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test warnings when using -fobjc-std=objc1.  */\n /* { dg-do compile } */\n /* { dg-options \"-fobjc-std=objc1\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n \n@@ -29,8 +30,8 @@ - (id) testMe: (id) __attribute__((unused)) argument { return self; } /* { dg-er\n @end\n \n __attribute__ ((deprecated))\n-@interface MyRootClass2\n-{  /* { dg-error \"class attributes are not available in Objective.C 1.0\" } */\n+@interface MyRootClass2 /* { dg-error \"class attributes are not available in Objective.C 1.0\" } */\n+{  \n   Class isa;\n }\n @end"}, {"sha": "ccce557482fb99532cf1328c94758780d4ceccbc", "filename": "gcc/testsuite/objc.dg/foreach-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -6,6 +6,7 @@\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n /* { dg-additional-sources \"../objc-obj-c++-shared/nsconstantstring-class-impl.m\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include \"../objc-obj-c++-shared/TestsuiteObject.m\"\n #ifndef __NEXT_RUNTIME__"}, {"sha": "23656090c3cc22b8f9b9bb041edc4978e4149925", "filename": "gcc/testsuite/objc.dg/foreach-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -6,6 +6,7 @@\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n /* { dg-additional-sources \"../objc-obj-c++-shared/nsconstantstring-class-impl.m\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #import \"../objc-obj-c++-shared/TestsuiteObject.m\"\n #ifndef __NEXT_RUNTIME__"}, {"sha": "1bcb10b6fafbb87d5614e2a80f0d5c3dbb8cb1ec", "filename": "gcc/testsuite/objc.dg/foreach-5.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-5.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -6,6 +6,7 @@\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n /* { dg-additional-sources \"../objc-obj-c++-shared/nsconstantstring-class-impl.m\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #import \"../objc-obj-c++-shared/TestsuiteObject.m\"\n #ifndef __NEXT_RUNTIME__"}, {"sha": "70ea8ace43de0816b6be7e21294af15de798d975", "filename": "gcc/testsuite/objc.dg/fsyntax-only.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ffsyntax-only.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ffsyntax-only.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ffsyntax-only.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-fsyntax-only\" } */\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface foo\n -(void) my_method:(int) i with:(int) j;\n @end"}, {"sha": "6c1c76a87a31949bb230c4c5d79dc281201a43c5", "filename": "gcc/testsuite/objc.dg/gnu-api-2-class-meta.m", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class-meta.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class-meta.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class-meta.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -20,6 +20,7 @@ this behavior may be defined or documented (for example, if class\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n /* { dg-additional-options \"-DOBJC_OLD_DISPATCH_PROTOTYPES\" { target { *-*-darwin* } } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n@@ -29,9 +30,6 @@ this behavior may be defined or documented (for example, if class\n #include <stdio.h>\n #include <string.h>\n \n-#if __has_attribute(objc_root_class)\n-__attribute__((objc_root_class))\n-#endif\n @interface MyRootClass\n { Class isa; }\n + alloc;"}, {"sha": "d11dae0e6dc16a697d5f4f577c963b5aee96f69f", "filename": "gcc/testsuite/objc.dg/gnu-api-2-class.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -7,6 +7,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n /* { dg-additional-options \"-DOBJC_OLD_DISPATCH_PROTOTYPES\" { target { *-*-darwin* } } } */\n \n /* To get the modern GNU Objective-C Runtime API, you include"}, {"sha": "072d2655bb8badd82512effd11b091716f62002b", "filename": "gcc/testsuite/objc.dg/gnu-api-2-ivar.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-ivar.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-ivar.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-ivar.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "ea1da8d138f593bc7cde96fcad3c8d3aa7b34169", "filename": "gcc/testsuite/objc.dg/gnu-api-2-method.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-method.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-method.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-method.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "e9ec5d7ab9406d63f2466345a17d2021a8c21398", "filename": "gcc/testsuite/objc.dg/gnu-api-2-objc.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -9,6 +9,7 @@ which causes the objc_copyProtocolList test to fail (in addition to those\n    systems that don't have the V2 APis).  XFAILing the run is not useful\n    since it will XPASS on the sub-set that works.  */\n /* { dg-skip-if \"Incompatible\" { *-*-darwin* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "d417225cdfb094ad6145db913fd0dc556dfbd3a4", "filename": "gcc/testsuite/objc.dg/gnu-api-2-objc_msg_lookup.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc_msg_lookup.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc_msg_lookup.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-objc_msg_lookup.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n \n /* { dg-do run } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "20c4342d26704a0aff8066150651e7d3a9e3cae7", "filename": "gcc/testsuite/objc.dg/gnu-api-2-object.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-object.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "0ef4d79f9b35a522aa3be36f0f3e866e3f673b71", "filename": "gcc/testsuite/objc.dg/gnu-api-2-property.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-property.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-property.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-property.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n \n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "682adcd716e9356cadb15740994c1ac51cfd292c", "filename": "gcc/testsuite/objc.dg/gnu-api-2-protocol.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-protocol.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-protocol.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-protocol.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "6eaa3dd72a3141833ef9ba6fa23b38df85605100", "filename": "gcc/testsuite/objc.dg/gnu-api-2-resolve-method.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-resolve-method.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-resolve-method.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-resolve-method.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n \n /* { dg-do run } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "bc581bec2f7428345ba249244bc660161a1af5b0", "filename": "gcc/testsuite/objc.dg/gnu-api-2-sel.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-sel.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-sel.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-sel.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n \n /* { dg-do run } */\n /* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* To get the modern GNU Objective-C Runtime API, you include\n    objc/runtime.h.  */"}, {"sha": "60d0d8a113310e20c2195646a05fc31446f6af40", "filename": "gcc/testsuite/objc.dg/incomplete-type-1.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fincomplete-type-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fincomplete-type-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fincomplete-type-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -6,6 +6,9 @@\n enum type1;\n struct type2;\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyObject\n - (void) method1: (enum type1)argument;\n - (void) method2: (struct type2)argument;"}, {"sha": "dc279269d24237d0a14f95edcfc69caf0d2ff566", "filename": "gcc/testsuite/objc.dg/instancetype-0.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Finstancetype-0.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Finstancetype-0.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Finstancetype-0.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -6,6 +6,9 @@\n extern id class_createInstance (id, int);\n extern id class_getSuperclass (id);\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyObject\n {\n   Class isa;"}, {"sha": "0a4bd6390fcdb9f747de3f6dd873f2e18af5b68f", "filename": "gcc/testsuite/objc.dg/invalid-method-2.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Finvalid-method-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Finvalid-method-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Finvalid-method-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,9 @@\n /* Test that using an invalid type in a method declaration produces a\n    friendly error without a compiler crash.  */\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyClass\n @end\n "}, {"sha": "98bf36e17c9e14a1a115d93d014bf7e057539d6d", "filename": "gcc/testsuite/objc.dg/ivar-invalid-type-1.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-invalid-type-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-invalid-type-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-invalid-type-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n #include <objc/objc.h>\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyRootClass\n {\n   Class isa;"}, {"sha": "0d5bb66ea324088d8e4e56b52d380d27e5de65ab", "filename": "gcc/testsuite/objc.dg/ivar-problem-1.m", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-problem-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-problem-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-problem-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -10,6 +10,9 @@\n #include <stdlib.h>\n #include <objc/objc.h>\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyRootClass1\n {\n   Class isa;\n@@ -36,6 +39,9 @@ - (id) init { return self; }\n @end\n \n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyRootClass2\n {\n   Class isa;"}, {"sha": "64d275b44bd12c29d132cea525c87d5f8c750266", "filename": "gcc/testsuite/objc.dg/ivar-scope-1.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,9 @@\n /* { dg-do compile } */\n #include <objc/objc.h>\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyClass\n {\n   int someivar;"}, {"sha": "1149d735d127bdb71cb354acbb2284747fe912cb", "filename": "gcc/testsuite/objc.dg/ivar-scope-2.m", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,9 @@\n /* { dg-additional-options \"-fno-local-ivars\" } */\n #include <objc/objc.h>\n \n+#if defined(__has_attribute) && __has_attribute(objc_root_class)\n+__attribute__((objc_root_class))\n+#endif\n @interface MyClass\n {\n   int someivar;"}, {"sha": "df1c8927586ef4ede0bdb0a1750ff4b5168ea5be", "filename": "gcc/testsuite/objc.dg/ivar-scope-4.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,7 +1,8 @@\n /* Test instance variable scope.  */\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do run } */\n-/* { dg-additional-options \"-Wno-shadow-ivar -fno-local-ivars\" } */\n+/* { dg-additional-options \"-Wno-shadow-ivar -fno-local-ivars -Wno-objc-root-class\" } */\n+\n #include \"../objc-obj-c++-shared/runtime.h\"\n #include <objc/objc.h>\n "}, {"sha": "79d791ec7aba68a94974769bc0d3da3c1b5b2002", "filename": "gcc/testsuite/objc.dg/ivar-visibility-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test instance variable visibility.  */\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MySuperClass"}, {"sha": "6ddcb5b46652cc4d9ebc31d8357481da56190029", "filename": "gcc/testsuite/objc.dg/ivar-visibility-2.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,7 +1,7 @@\n /* Test instance variable visibility.  */\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do compile } */\n-/* { dg-additional-options \"-fivar-visibility=protected\" } */\n+/* { dg-additional-options \"-fivar-visibility=protected -Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MySuperClass"}, {"sha": "64035037a25dbc6a26d7b712da0daedbb1255f10", "filename": "gcc/testsuite/objc.dg/ivar-visibility-3.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,7 +1,7 @@\n /* Test instance variable visibility.  */\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do compile } */\n-/* { dg-additional-options \"-fivar-visibility=private\" } */\n+/* { dg-additional-options \"-fivar-visibility=private -Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MySuperClass"}, {"sha": "abd802b5423d63c912ccbb95e67791cba37fb979", "filename": "gcc/testsuite/objc.dg/ivar-visibility-4.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,7 +1,7 @@\n /* Test instance variable visibility.  */\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do compile } */\n-/* { dg-additional-options \"-fivar-visibility=public\" } */\n+/* { dg-additional-options \"-fivar-visibility=public -Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MySuperClass"}, {"sha": "8356a8ca24892fe700ed09421313518c007d7cc3", "filename": "gcc/testsuite/objc.dg/local-decl-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Flocal-decl-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Flocal-decl-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Flocal-decl-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test for hiding of ivars by local variables.  */\n /* Author: Ziemowit Laski <zlaski@apple.com>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Sprite {\n   int a;"}, {"sha": "8a362d6728870d7f798da448d5155d80091b3fc0", "filename": "gcc/testsuite/objc.dg/lto/lto.exp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Flto.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -41,10 +41,10 @@ if { ![check_effective_target_lto] } {\n global LTO_OPTIONS\n \n set LTO_OPTIONS [list\t\\\n-  {-O0 -flto -fgnu-runtime}\t\\\n-  {-O2 -flto -fgnu-runtime}\t\\\n-  {-O0 -flto -flto-partition=none -fgnu-runtime} \t\\\n-  {-O2 -flto -flto-partition=none -fgnu-runtime}\t\\\n+  {-O0 -flto -fgnu-runtime -Wno-objc-root-class}\t\\\n+  {-O2 -flto -fgnu-runtime -Wno-objc-root-class }\t\\\n+  {-O0 -flto -flto-partition=none -fgnu-runtime -Wno-objc-root-class} \t\\\n+  {-O2 -flto -flto-partition=none -fgnu-runtime -Wno-objc-root-class}\t\\\n ]\n \n objc_init\n@@ -67,10 +67,10 @@ foreach src $tests {\n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n set LTO_OPTIONS [list\t\\\n-  {-O0 -flto -fnext-runtime}\t\\\n-  {-O2 -flto -fnext-runtime}\t\\\n-  {-O0 -flto -flto-partition=none -fnext-runtime} \t\\\n-  {-O2 -flto -flto-partition=none -fnext-runtime}\t\\\n+  {-O0 -flto -fnext-runtime -Wno-objc-root-class}\t\\\n+  {-O2 -flto -fnext-runtime -Wno-objc-root-class}\t\\\n+  {-O0 -flto -flto-partition=none -fnext-runtime -Wno-objc-root-class} \t\\\n+  {-O2 -flto -flto-partition=none -fnext-runtime -Wno-objc-root-class}\t\\\n ]\n   foreach src $tests {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "ca07fa4bdb2ae52fa35d33b19d8abd64e6d76ec0", "filename": "gcc/testsuite/objc.dg/lto/trivial-1_0.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Ftrivial-1_0.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Ftrivial-1_0.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Ftrivial-1_0.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,13 +1,13 @@\n /* { dg-lto-do run } */\n-/* { dg-skip-if \"\" { \"*-*-darwin*\" && lp64 } } */\n+\n extern int printf (char *,...) ;\n \n typedef struct objc_class *Class;\n \n struct objc_class {\n     Class isa;\n     /* other stuff... */\n-}  ;\n+};\n \n @interface myRootObject {\n @public"}, {"sha": "bd23493988ce40a480b73aa47b6b4ac418ea8a83", "filename": "gcc/testsuite/objc.dg/method-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Tests of duplication.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface class1\n - (int) meth1;   /* { dg-message \"previous declaration\" } */"}, {"sha": "b69a84f300bed6457549caca52ee697ca467b918", "filename": "gcc/testsuite/objc.dg/method-12.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-12.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-12.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-12.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Igor Seleznev <selez@mail.ru>.  */\n /* This used to be broken.  */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "3e0fde5f5bab62ab35de83f80423ea7d1f7d8bee", "filename": "gcc/testsuite/objc.dg/method-13.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-13.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-13.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-13.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n /* Author: Ziemowit Laski <zlaski@apple.com>.  */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include \"../objc-obj-c++-shared/runtime.h\""}, {"sha": "bc3ee12f20b20ffbfb93795182713e07beefd087", "filename": "gcc/testsuite/objc.dg/method-14.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-14.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-14.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-14.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n    used as method selectors.  */\n /* Author: Ziemowit Laski <zlaski@apple.com>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Foo\n - (void)insertNewButtonImage:(Foo *)newButtonImage in:(Foo *)buttonCell;"}, {"sha": "77aa3a39446b3a9d2d06df21700609e8a7532f1f", "filename": "gcc/testsuite/objc.dg/missing-proto-3.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmissing-proto-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fmissing-proto-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmissing-proto-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,7 +2,8 @@\n    In addition to not crashing :-), the compiler should properly handle\n    valid protocol references, even when they're mixed with invalid ones.  */\n /* { dg-do compile } */\n- \n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n+\n #include <objc/objc.h>\n \n @protocol DefinedProtocol"}, {"sha": "2ce798bc94f2b029970d66d76d1de9965f70af66", "filename": "gcc/testsuite/objc.dg/next-runtime-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fnext-runtime-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fnext-runtime-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fnext-runtime-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -7,6 +7,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fobjc-abi-version=1\" } { \"\" } } */\n /* { dg-options \"-fobjc-abi-version=0\" { target { *-*-darwin* && { ! lp64 } } } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface FooBar\n - (void)boo;"}, {"sha": "e4c958ced72b3213074d365e304e3be238eb54dc", "filename": "gcc/testsuite/objc.dg/objc-foreach-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Syntax check for the new foreach statement. */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_class *Class;\n "}, {"sha": "0f79089f278471404d4600c7cda367ffe55a9c73", "filename": "gcc/testsuite/objc.dg/objc-foreach-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Syntax check for the new foreach statement. */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_class *Class;\n "}, {"sha": "b551ae394361efae2ab206b412ae722db3696184", "filename": "gcc/testsuite/objc.dg/objc-foreach-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Syntax check for the new foreach statement. \n    Use of declaration in loop-header without requiring c99 mode. */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_class *Class;\n "}, {"sha": "3ddaa6431ec0b1dd21d018fde8c73a90932e10a7", "filename": "gcc/testsuite/objc.dg/objc-nofilename-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-nofilename-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-nofilename-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-nofilename-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Test to make sure that file name does not appear in the binary. */\n /* { dg-do compile { target *-*-darwin* } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "8e7781169acba499b09848aa51c3fe3dc53e0ba6", "filename": "gcc/testsuite/objc.dg/param-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fparam-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fparam-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fparam-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test if compiler detects object as an parameter to a method\n    or not. It is not valid.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface foo\n @end"}, {"sha": "54c3e429efed301214eae36d463661f381fa7e53", "filename": "gcc/testsuite/objc.dg/pch/pch.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fpch%2Fpch.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fpch%2Fpch.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fpch%2Fpch.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -41,7 +41,7 @@ foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.m]] {\n     # unlikely to make any difference to PCH.  However, we do want to\n     # add -O0 -g, since users who want PCH usually want debugging and quick\n     # compiles.\n-    dg-flags-pch $subdir $test \"-fgnu-runtime\" $mytorture \".h\"\n+    dg-flags-pch $subdir $test \"-fgnu-runtime -Wno-objc-root-class\" $mytorture \".h\"\n }\n \n if [istarget \"*-*-darwin*\" ] {\n@@ -52,7 +52,7 @@ if [istarget \"*-*-darwin*\" ] {\n     # unlikely to make any difference to PCH.  However, we do want to\n     # add -O0 -g, since users who want PCH usually want debugging and quick\n     # compiles.\n-    dg-flags-pch $subdir $test \"-fnext-runtime\" $mytorture \".h\"\n+    dg-flags-pch $subdir $test \"-fnext-runtime -Wno-objc-root-class\" $mytorture \".h\"\n   }\n }\n "}, {"sha": "7070b37b38c776f22cf06c8ddfb569eeb2064f23", "filename": "gcc/testsuite/objc.dg/plugin/diagnostic-test-expressions-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fplugin%2Fdiagnostic-test-expressions-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fplugin%2Fdiagnostic-test-expressions-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fplugin%2Fdiagnostic-test-expressions-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdiagnostics-show-caret\" } */\n+/* { dg-options \"-O -fdiagnostics-show-caret -Wno-objc-root-class\" } */\n \n /* This file is similar to diagnostic-test-expressions-1.c\n    (see the notes in that file); this file adds test"}, {"sha": "2bdcca56d364f350c789facb3dcde4baf3c98bac", "filename": "gcc/testsuite/objc.dg/pr23709.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fpr23709.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fpr23709.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fpr23709.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface A\n +(void)method: (int)parameter {} /* { dg-error \"expected\" } */"}, {"sha": "5bd29e5939b1c30ffc87d2f2b426e5a1e1b2ed69", "filename": "gcc/testsuite/objc.dg/private-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test errors for accessing @private and @protected variables.  */\n /* Author: Nicola Pero <nicola@brainstorm.co.uk>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MySuperClass"}, {"sha": "d0646f5ca68fcb245d388e250f36f123c23e9295", "filename": "gcc/testsuite/objc.dg/private-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test warnings for shadowing instance variables.  */\n /* Author: Nicola Pero <nicola@brainstorm.co.uk>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MySuperClass"}, {"sha": "1c203dbcbf0a85dc189bb871cfb96903aa00fff9", "filename": "gcc/testsuite/objc.dg/property/property.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -31,12 +31,12 @@ dg-init\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n # Main loop.\n-dg-runtest $tests \"-fgnu-runtime\" $DEFAULT_CFLAGS\n+dg-runtest $tests \"-fgnu-runtime -Wno-objc-root-class\" $DEFAULT_CFLAGS\n \n # Darwin targets can also run code with the NeXT runtime.\n # but Properties are not supported by the runtime lib before Darwin 9.\n if [istarget \"*-*-darwin\\[9123\\]*\" ] {\n-  dg-runtest $tests \"-fnext-runtime\" $DEFAULT_CFLAGS\n+  dg-runtest $tests \"-fnext-runtime -Wno-objc-root-class\" $DEFAULT_CFLAGS\n }\n \n # All done."}, {"sha": "648a4d45cc3949b7bc398e00f901329995ac7bb6", "filename": "gcc/testsuite/objc.dg/proto-hier-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test for handling of protocol hierarchies.  */\n /* Author: Ziemowit Laski <zlaski@apple.com>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* One-line substitute for objc/objc.h */\n typedef struct objc_object { struct objc_class *class_pointer; } *id;"}, {"sha": "6b3f803d5cba56947e2289a472a5fd44acd72792", "filename": "gcc/testsuite/objc.dg/proto-hier-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test protocol warning.  */\n /* Contributed by Devang Patel <dpatel@apple.com>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { struct objc_class *class_pointer; } *id;\n "}, {"sha": "4564a9432f1207035fbfdd1680e70fd403829ba9", "filename": "gcc/testsuite/objc.dg/proto-lossage-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n    may be lost, leading to superfluous warnings.  */\n /* Author: Ziemowit Laski <zlaski@apple.com>.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* One-line substitute for objc/objc.h */\n typedef struct objc_object { struct objc_class *class_pointer; } *id;"}, {"sha": "a18b3578cbce38dab51fc45f3ee52bfeff25e0fc", "filename": "gcc/testsuite/objc.dg/proto-lossage-5.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-5.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Do not lose references to forward-declared protocols.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n @class MyBaseClass;\n @class MyClassThatFails;\n @protocol _MyProtocol;"}, {"sha": "6e908727678a3770188528761ae39d95f133ad5c", "filename": "gcc/testsuite/objc.dg/proto-qual-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-qual-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-qual-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-qual-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include \"../objc-obj-c++-shared/runtime.h\"\n #include <objc/Protocol.h>"}, {"sha": "5367a9870be6e964fd82b7578e3beae3ca0f2ae5", "filename": "gcc/testsuite/objc.dg/protocol-inheritance-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do compile } */\n /* { dg-options \"-Wno-protocol\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "9776a40f1da666bd7f38812283629e647f58cc89", "filename": "gcc/testsuite/objc.dg/protocol-inheritance-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "29fe72ea00ff5cc5697f88561736d4d7bb58b23b", "filename": "gcc/testsuite/objc.dg/protocol-optional-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-optional-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-optional-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-optional-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "5ff15a2e0a7291e1547dfcca8da249cb7633a369", "filename": "gcc/testsuite/objc.dg/selector-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-options \"-Wselector\" } */\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { struct objc_class *class_pointer; } *id;\n typedef struct objc_selector    *SEL;"}, {"sha": "5042104ed3eddecd523dfc27d49aa8fd58360183", "filename": "gcc/testsuite/objc.dg/selector-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test that we don't ICE when issuing a -Wselector warning.  */\n /* { dg-options \"-Wselector\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "94838cd3803bf126265a434943cdee95fff35025", "filename": "gcc/testsuite/objc.dg/selector-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-options \"-Wselector\" } */\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { struct objc_class *class_pointer; } *id;\n typedef const struct objc_selector    *SEL;"}, {"sha": "2a4947e322a1c656db563ede01e4a3855017a4a5", "filename": "gcc/testsuite/objc.dg/selector-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fselector-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,7 @@\n /* Author: Ziemowit Laski <zlaski@apple.com>.  */\n \n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Int1 \n + (int)and_eq:(int)arg1 and:(int)arg2;"}, {"sha": "d18fd6e5f93c4db5909f83e255daca5e8b47370f", "filename": "gcc/testsuite/objc.dg/shadow-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do compile } */\n /* { dg-additional-options \"-Wno-shadow-ivar\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MyClass"}, {"sha": "26447fe10818295c7b0a2747890f7df59b8ace6c", "filename": "gcc/testsuite/objc.dg/shadow-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n /* { dg-do compile } */\n /* { dg-additional-options \"-Wno-shadow\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n #include <objc/objc.h>\n \n @interface MyClass"}, {"sha": "b72d0709044eb5f0585679b6aef0d6be99bbcd15", "filename": "gcc/testsuite/objc.dg/special/load-category-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <stdlib.h>\n #include <objc/objc.h>"}, {"sha": "2706351da2230f75567b790b2715e4d14875778a", "filename": "gcc/testsuite/objc.dg/special/load-category-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "215e463fcbe1b1130e943f9f750574fc73fa9fbd", "filename": "gcc/testsuite/objc.dg/special/load-category-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fload-category-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* This test is identical to load-category-2, but the classes and\n    categories are created in inverted order in the modules, to test"}, {"sha": "f561d3895d493e8a4149e36763888ac2d4aa9536", "filename": "gcc/testsuite/objc.dg/special/special.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fspecial.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -39,6 +39,7 @@ dg-init\n # for all systems we point to the libobjc includes and use the -fgnu-runtime\n set add_flags \"additional_flags=-I${srcdir}/../../libobjc\"\n lappend add_flags \"additional_flags=-fgnu-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/unclaimed-category-1a.m\" \"unclaimed-category-1a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"unclaimed-category-1a.o\"\n@@ -50,6 +51,7 @@ if ![string match \"\" $lines] then {\n if [istarget \"*-*-darwin*\" ] {\n set add_flags \"\"\n lappend add_flags \"additional_flags=-fnext-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/unclaimed-category-1a.m\" \"unclaimed-category-1a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"unclaimed-category-1a.o\"\n@@ -66,6 +68,7 @@ if ![string match \"\" $lines] then {\n # and load-category-1a.m, link them together, and execute the result.\n set add_flags \"additional_flags=-I${srcdir}/../../libobjc\"\n lappend add_flags \"additional_flags=-fgnu-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/load-category-1a.m\" \"load-category-1a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"load-category-1a.o\"\n@@ -77,6 +80,7 @@ if ![string match \"\" $lines] then {\n if [istarget \"*-*-darwin*\" ] {\n set add_flags \"\"\n lappend add_flags \"additional_flags=-fnext-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/load-category-1a.m\" \"load-category-1a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"load-category-1a.o\"\n@@ -93,6 +97,7 @@ if ![string match \"\" $lines] then {\n # and load-category-2a.m, link them together, and execute the result.\n set add_flags \"additional_flags=-I${srcdir}/../../libobjc\"\n lappend add_flags \"additional_flags=-fgnu-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/load-category-2a.m\" \"load-category-2a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"load-category-2a.o\"\n@@ -104,6 +109,7 @@ if ![string match \"\" $lines] then {\n if [istarget \"*-*-darwin*\" ] {\n set add_flags \"\"\n lappend add_flags \"additional_flags=-fnext-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/load-category-2a.m\" \"load-category-2a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"load-category-2a.o\"\n@@ -120,6 +126,7 @@ if ![string match \"\" $lines] then {\n # and load-category-3a.m, link them together, and execute the result.\n set add_flags \"additional_flags=-I${srcdir}/../../libobjc\"\n lappend add_flags \"additional_flags=-fgnu-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/load-category-3a.m\" \"load-category-3a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"load-category-3a.o\"\n@@ -131,6 +138,7 @@ if ![string match \"\" $lines] then {\n if [istarget \"*-*-darwin*\" ] {\n set add_flags \"\"\n lappend add_flags \"additional_flags=-fnext-runtime\"\n+lappend add_flags \"additional_flags=-Wno-objc-root-class\"\n set lines [objc_target_compile \"$srcdir/$subdir/load-category-3a.m\" \"load-category-3a.o\" object $add_flags ]\n if ![string match \"\" $lines] then {\n     fail \"load-category-3a.o\""}, {"sha": "cb5812ea327319c52e7baf92650bdc8d0d446618", "filename": "gcc/testsuite/objc.dg/special/unclaimed-category-1.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.h?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,4 +1,5 @@\n /* Contributed by Nicola Pero - Fri Dec 14 08:36:00 GMT 2001 */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test loading unclaimed categories - categories of a class defined\n    separately from the class itself.  */"}, {"sha": "a8e422d34e982424a3ad04042a0068790926f600", "filename": "gcc/testsuite/objc.dg/special/unclaimed-category-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero - Fri Dec 14 08:36:00 GMT 2001 */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n #include \"../../objc-obj-c++-shared/runtime.h\""}, {"sha": "b97e4d6a762bc038b0e51a6dc3d66f84f031c2da", "filename": "gcc/testsuite/objc.dg/stabs-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstabs-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstabs-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstabs-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,7 @@\n \n /* { dg-do compile { target stabs } } */\n /* { dg-options \"-gstabs\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface MyClass\n + newWithArg: arg;"}, {"sha": "6042d3c14deacee2b6aa162e5659aee008e4af5d", "filename": "gcc/testsuite/objc.dg/strings/strings.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fstrings.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fstrings.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fstrings.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -35,11 +35,11 @@ dg-init\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n # Main loop.\n-dg-runtest $tests \"-fgnu-runtime\" $DEFAULT_CFLAGS\n+dg-runtest $tests \"-fgnu-runtime -Wno-objc-root-class\" $DEFAULT_CFLAGS\n \n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  dg-runtest $tests \"-fnext-runtime\" $DEFAULT_CFLAGS\n+  dg-runtest $tests \"-fnext-runtime -Wno-objc-root-class\" $DEFAULT_CFLAGS\n }\n \n # All done."}, {"sha": "4043492e6b8a2809b97f3de6fc2f189bf5631e7d", "filename": "gcc/testsuite/objc.dg/stubify-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-Os -mdynamic-no-pic -mmacosx-version-min=10.4 -msymbol-stubs\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { } *id ;\n int x = 41 ;"}, {"sha": "3e9097e11acadea0dc6ea318d77c9c4fb2dbd52d", "filename": "gcc/testsuite/objc.dg/stubify-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstubify-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -5,6 +5,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-mdynamic-no-pic -fdump-rtl-jump -mmacosx-version-min=10.4 -msymbol-stubs\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { } *id ;\n int x = 41 ;"}, {"sha": "63792fd1d88904432b64a7b126e2e23881252ec2", "filename": "gcc/testsuite/objc.dg/super-class-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Test calling super from within a category class method.  */\n /* Author: Ziemowit Laski <zlaski@apple.com>  */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct objc_object { struct objc_class *isa; } *id;\n "}, {"sha": "035de055b25f3ab35368960768225260da448153", "filename": "gcc/testsuite/objc.dg/super-dealloc-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-dealloc-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-dealloc-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-dealloc-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Ziemowit Laski <zlaski@apple.com>  */\n \n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Foo {\n   void *isa;"}, {"sha": "5d588c50fa96c7cb6270bf70918fff42e9214908", "filename": "gcc/testsuite/objc.dg/super-dealloc-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-dealloc-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-dealloc-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-dealloc-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Ziemowit Laski <zlaski@apple.com>  */\n \n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Foo {\n   void *isa;"}, {"sha": "6ef72a1a4c2135de7ed107894d0cb442f9d728f6", "filename": "gcc/testsuite/objc.dg/sync-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsync-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fsync-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsync-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n /* Test that the compiler is checking the argument of @synchronized(),\n    and produce errors when invalid types are used.  */"}, {"sha": "8c22850e094f5fe38d24bc5a73595da98f17acbc", "filename": "gcc/testsuite/objc.dg/threedotthree-abi-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fthreedotthree-abi-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fthreedotthree-abi-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fthreedotthree-abi-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run { target *-*-darwin* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <stdio.h>\n #include <string.h>"}, {"sha": "11f50fc1dedb93477b8a0e727bcb4d164d76ffd3", "filename": "gcc/testsuite/objc.dg/torture/dg-torture.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fdg-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fdg-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fdg-torture.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -7,11 +7,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n-objc-dg-runtest $tests \"\" \"-fgnu-runtime\"\n+objc-dg-runtest $tests \"\" \"-fgnu-runtime -Wno-objc-root-class\"\n \n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  objc-dg-runtest $tests \"\" \"-fnext-runtime\"\n+  objc-dg-runtest $tests \"\" \"-fnext-runtime -Wno-objc-root-class\"\n }\n \n dg-finish"}, {"sha": "3e2b3b0bd03dcf5d14b3514b18dfc1d0d4b28de2", "filename": "gcc/testsuite/objc.dg/torture/strings/strings.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fstrings.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fstrings.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fstrings.exp?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -24,11 +24,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n-objc-dg-runtest $tests \"\" \"-fgnu-runtime\"\n+objc-dg-runtest $tests \"\" \"-fgnu-runtime -Wno-objc-root-class\"\n \n # Darwin targets also test with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  objc-dg-runtest $tests \"\" \"-fnext-runtime\"\n+  objc-dg-runtest $tests \"\" \"-fnext-runtime -Wno-objc-root-class\"\n }\n \n dg-finish"}, {"sha": "c792c83062f09b95d10e51e096c3a5447b3c6794", "filename": "gcc/testsuite/objc.dg/try-catch-11.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-11.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-11.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-11.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n \n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef volatile int IOSharedLockData;\n "}, {"sha": "6c9afc26de7ee42b98b2f5db461cd93df8176874", "filename": "gcc/testsuite/objc.dg/try-catch-12.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-12.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-12.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-12.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n \n /* { dg-options \"-fobjc-exceptions\" } */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface TestMyTests\n - (void) testSpoon;"}, {"sha": "64444cfe2550fbda006a12a60b0f714d5ad3b2f8", "filename": "gcc/testsuite/objc.dg/type-size-2.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-2.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -4,6 +4,7 @@\n /* Contributed by Ziemowit Laski <zlaski@apple.com>.  */\n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include \"../objc-obj-c++-shared/runtime.h\"\n #include <stdio.h>"}, {"sha": "3f65516e75e4506e7a35b8d26c9929588e4fbf79", "filename": "gcc/testsuite/objc.dg/type-size-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-3.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Reject ivars that use flexible array members.  */\n /* Contributed by Nicola Pero  <nicola.pero@meta-innovation.com> */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct\n {"}, {"sha": "f10ed5b0118fefd1c7154b47f71464f0c6cc8fcd", "filename": "gcc/testsuite/objc.dg/type-size-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-4.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Contributed by Nicola Pero  <nicola.pero@meta-innovation.com> */\n /* PR objc/47832 */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct\n {"}, {"sha": "e1b11f7eef5401692545fee719bbf0bd9bb3b3d9", "filename": "gcc/testsuite/objc.dg/type-size-5.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-size-5.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,6 +1,7 @@\n /* Reject ivars that use flexible array members.  */\n /* Contributed by Nicola Pero  <nicola.pero@meta-innovation.com> */\n /* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n typedef struct\n {"}, {"sha": "389b0321817b2fe16d729a28898c3fd8ee1688b0", "filename": "gcc/testsuite/objc.dg/undeclared-selector.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fundeclared-selector.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fundeclared-selector.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fundeclared-selector.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -2,6 +2,7 @@\n /* Author: Nicola Pero <nicola@brainstorm.co.uk>.  */\n /* { dg-do compile } */\n /* { dg-options \"-Wundeclared-selector\" } */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n #include <objc/objc.h>\n "}, {"sha": "a71363163924d05007f388fe77db7a43de4e2efc", "filename": "gcc/testsuite/objc.dg/volatile-1.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fvolatile-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35fbf7f7673b5c72ee61720f1a209d4e798152f/gcc%2Ftestsuite%2Fobjc.dg%2Fvolatile-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fvolatile-1.m?ref=d35fbf7f7673b5c72ee61720f1a209d4e798152f", "patch": "@@ -1,7 +1,8 @@\n /* Test for proper handling of volatile parameters in ObjC methods.  */\n+/* Contributed by Ziemowit Laski  <zlaski@apple.com>  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* Contributed by Ziemowit Laski  <zlaski@apple.com>  */\n+/* { dg-additional-options \"-Wno-objc-root-class\" } */\n \n @interface Test\n -(void) test2: (volatile int) a;"}]}