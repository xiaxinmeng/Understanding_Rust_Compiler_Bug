{"sha": "6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY2Yzc5OTIwODgzZjNmYzMwMWE0YWNjMDU0NGVkNWExMzBiZjdjNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-04-24T06:46:29Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-04-24T06:46:45Z"}, "message": "Remove CHECKING_P in coroutines.cc for release checking.\n\n\t* coroutines.cc: Fix compilation error for release checking\n\twhere we miss declaration of \u2018coro_body_contains_bind_expr_p\u2019.", "tree": {"sha": "6484383b4ee2b09f961dfa88a063f1fbaeff88e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6484383b4ee2b09f961dfa88a063f1fbaeff88e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6ii18ACgkQTcGC3A+n\nN4VFjggAox4S95DwkryPdwZaGaAlNkL5nqD3mMjA6rTqol7eYGIuogfdBbDdG7i4\nYvzPoUsWRy8F8FKsflh3utaZ9frdebdw2qM+OZlqLWY6yISgqYuRyBQqq4JIar1S\nXdbPfIHv6F5Qiz/bnZERTk6olLkyfKAvl8M8Tsu5pPziT75qIg4FxCUFPaWteQJx\nIgpQF7iVtaQElOJtIy6RfoagQPmpKvK2R9joNRp9OeN0rgLzq34AekYnatGBi/S8\nbQkUWUUXrmI8Et30xN+Uowe0N2cC39HsiBYmDpbyBl2W7X1Fz7+ra/Qw37H+2mMf\nWZxoEXBra309Js+2McVYEtjCDeb14Q==\n=gUS/\n-----END PGP SIGNATURE-----", "payload": "tree 6484383b4ee2b09f961dfa88a063f1fbaeff88e7\nparent ef8dc9d24055ddeef2fe9cb300b1051d7a440438\nauthor Martin Liska <mliska@suse.cz> 1587710789 +0200\ncommitter Martin Liska <mliska@suse.cz> 1587710805 +0200\n\nRemove CHECKING_P in coroutines.cc for release checking.\n\n\t* coroutines.cc: Fix compilation error for release checking\n\twhere we miss declaration of \u2018coro_body_contains_bind_expr_p\u2019.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6c79920883f3fc301a4acc0544ed5a130bf7c5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef8dc9d24055ddeef2fe9cb300b1051d7a440438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8dc9d24055ddeef2fe9cb300b1051d7a440438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef8dc9d24055ddeef2fe9cb300b1051d7a440438"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "4d3049e67f353585f55fd014c7049349b9d970c3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6c79920883f3fc301a4acc0544ed5a130bf7c5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6c79920883f3fc301a4acc0544ed5a130bf7c5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "patch": "@@ -1,3 +1,8 @@\n+2020-04-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* coroutines.cc: Fix compilation error for release checking\n+\twhere we miss declaration of \u2018coro_body_contains_bind_expr_p\u2019.\n+\n 2020-04-23  Patrick Palka  <ppalka@redhat.com>\n \n \t* tree.c (zero_init_expr_p): Use uses_template_parms instead of"}, {"sha": "4f254b7fd100b1a4109c6eea698c098c853eabd0", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6c79920883f3fc301a4acc0544ed5a130bf7c5/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6c79920883f3fc301a4acc0544ed5a130bf7c5/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "patch": "@@ -3441,7 +3441,6 @@ act_des_fn (tree orig, tree fn_type, tree coro_frame_ptr, const char* name)\n   return fn;\n }\n \n-#if CHECKING_P\n /* Return a bind expression if we see one, else NULL_TREE.  */\n static tree\n bind_expr_find_in_subtree (tree *stmt, int *, void *)\n@@ -3460,7 +3459,6 @@ coro_body_contains_bind_expr_p (tree *stmt)\n   hash_set<tree> visited;\n   return cp_walk_tree (stmt, bind_expr_find_in_subtree, NULL, &visited);\n }\n-#endif\n \n /* Here we:\n    a) Check that the function and promise type are valid for a"}]}