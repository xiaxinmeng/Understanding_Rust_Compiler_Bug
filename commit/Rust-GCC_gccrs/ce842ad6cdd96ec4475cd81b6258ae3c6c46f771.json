{"sha": "ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U4NDJhZDZjZGQ5NmVjNDQ3NWNkODFiNjI1OGFlM2M2YzQ2Zjc3MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-03-01T05:14:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-01T05:14:10Z"}, "message": "compiler: Avoid some compiler crashes on invalid code.\n\n\t* go-gcc.cc (class Gcc_tree): Add set_tree method.\n\t(set_placeholder_pointer_type): When setting to a pointer to\n\terror, set to error_mark_node.\n\nFrom-SVN: r184684", "tree": {"sha": "58642681b007c2d8a419efeb1a3af019720fea3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58642681b007c2d8a419efeb1a3af019720fea3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/comments", "author": null, "committer": null, "parents": [{"sha": "fc24bee911ea0d941ffcd8a25db91f417e303168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc24bee911ea0d941ffcd8a25db91f417e303168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc24bee911ea0d941ffcd8a25db91f417e303168"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "8b8e90c4b6896ae9f2a73bbd3e868a996aff4c22", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "patch": "@@ -1,3 +1,9 @@\n+2012-02-29  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (class Gcc_tree): Add set_tree method.\n+\t(set_placeholder_pointer_type): When setting to a pointer to\n+\terror, set to error_mark_node.\n+\n 2012-02-23  Richard Guenther  <rguenther@suse.de>\n \n \t* go-gcc.cc (Gcc_backend::placeholder_pointer_type): Use"}, {"sha": "a19bb894a993284c78d57ea05cc3109c5b613c9c", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "patch": "@@ -56,6 +56,10 @@ class Gcc_tree\n   get_tree() const\n   { return this->t_; }\n \n+  void\n+  set_tree(tree t)\n+  { this->t_ = t; }\n+\n  private:\n   tree t_;\n };\n@@ -626,7 +630,7 @@ Gcc_backend::set_placeholder_pointer_type(Btype* placeholder,\n   tree tt = to_type->get_tree();\n   if (tt == error_mark_node)\n     {\n-      TREE_TYPE(pt) = tt;\n+      placeholder->set_tree(error_mark_node);\n       return false;\n     }\n   gcc_assert(TREE_CODE(tt) == POINTER_TYPE);"}, {"sha": "39a162b93be627417cdb20e12d41934f9198969f", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "patch": "@@ -13878,7 +13878,7 @@ tree\n Heap_composite_expression::do_get_tree(Translate_context* context)\n {\n   tree expr_tree = this->expr_->get_tree(context);\n-  if (expr_tree == error_mark_node)\n+  if (expr_tree == error_mark_node || TREE_TYPE(expr_tree) == error_mark_node)\n     return error_mark_node;\n   tree expr_size = TYPE_SIZE_UNIT(TREE_TYPE(expr_tree));\n   go_assert(TREE_CODE(expr_size) == INTEGER_CST);"}, {"sha": "1a9c153a5784d7c7c2111d768ceb79295ca351b8", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce842ad6cdd96ec4475cd81b6258ae3c6c46f771/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=ce842ad6cdd96ec4475cd81b6258ae3c6c46f771", "patch": "@@ -3948,8 +3948,9 @@ Parse::return_stat()\n \t   ++p)\n \t{\n \t  Named_object* no = this->gogo_->lookup((*p)->name(), NULL);\n-\t  go_assert(no != NULL);\n-\t  if (!no->is_result_variable())\n+\t  if (no == NULL)\n+\t    go_assert(saw_errors());\n+\t  else if (!no->is_result_variable())\n \t    error_at(location, \"%qs is shadowed during return\",\n \t\t     (*p)->message_name().c_str());\n \t}"}]}