{"sha": "1715bb172423071698981653483c41283a342713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcxNWJiMTcyNDIzMDcxNjk4OTgxNjUzNDgzYzQxMjgzYTM0MjcxMw==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-02-25T13:18:17Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-02-25T13:18:17Z"}, "message": "ld-vsx.c: Don't use vec_all_eq.\n\ngcc/testsuite:\n\n2014-02-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.dg/vmx/ld-vsx.c: Don't use vec_all_eq.\n\t* gcc.dg/vmx/ld-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/ldl-vsx.c: Likewise.\n\t* gcc.dg/vmx/ldl-vsx-be-order.c: Likewise.\n\t* gcc.dg/vmx/merge-vsx.c: Likewise.\n\t* gcc.dg/vmx/merge-vsx-be-order.c: Likewise.\n\nFrom-SVN: r208120", "tree": {"sha": "537410b2efd3fdfa398d410f02728a43c37a2471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/537410b2efd3fdfa398d410f02728a43c37a2471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1715bb172423071698981653483c41283a342713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1715bb172423071698981653483c41283a342713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1715bb172423071698981653483c41283a342713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1715bb172423071698981653483c41283a342713/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db57bbc9b26143a2efb24868ce1a0cb8ed653447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db57bbc9b26143a2efb24868ce1a0cb8ed653447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db57bbc9b26143a2efb24868ce1a0cb8ed653447"}], "stats": {"total": 59, "additions": 47, "deletions": 12}, "files": [{"sha": "e245784652f33a183d2da56060f48deaedb5c8f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -1,3 +1,12 @@\n+2014-02-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.dg/vmx/ld-vsx.c: Don't use vec_all_eq.\n+\t* gcc.dg/vmx/ld-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/ldl-vsx.c: Likewise.\n+\t* gcc.dg/vmx/ldl-vsx-be-order.c: Likewise.\n+\t* gcc.dg/vmx/merge-vsx.c: Likewise.\n+\t* gcc.dg/vmx/merge-vsx-be-order.c: Likewise.\n+\n 2014-02-25  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* gcc.target/i386/avx-1.c: Update __builtin_prefetch."}, {"sha": "a4c49c94808c3499063e3efce5be6d8cb0b1dae7", "filename": "gcc/testsuite/gcc.dg/vmx/ld-vsx-be-order.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx-be-order.c?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -29,12 +29,16 @@ static void test ()\n \n   vector unsigned long vul;\n   vector double vd;\n+  unsigned i;\n \n   init ();\n \n   vul = vec_ld (0, (vector unsigned long *)svul);\n   vd  = vec_ld (0, (vector double *)svd);\n \n-  check (vec_all_eq (vul, evul), \"vul\");\n-  check (vec_all_eq (vd,  evd ), \"vd\" );\n+  for (i = 0; i < 2; ++i)\n+    {\n+      check (vul[i] == evul[i], \"vul\");\n+      check (vd[i]  == evd[i],  \"vd\" );\n+    }\n }"}, {"sha": "aebf2ea91cacb861818fc2a466159a4c8cc53825", "filename": "gcc/testsuite/gcc.dg/vmx/ld-vsx.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fld-vsx.c?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -24,12 +24,16 @@ static void test ()\n \n   vector unsigned long vul;\n   vector double vd;\n+  unsigned i;\n \n   init ();\n \n   vul = vec_ld (0, (vector unsigned long *)svul);\n   vd  = vec_ld (0, (vector double *)svd);\n \n-  check (vec_all_eq (vul, evul), \"vul\");\n-  check (vec_all_eq (vd,  evd ), \"vd\" );\n+  for (i = 0; i < 2; ++i)\n+    {\n+      check (vul[i] == evul[i], \"vul\");\n+      check (vd[i]  == evd[i],  \"vd\" );\n+    }\n }"}, {"sha": "a7c14cea26ef54b21723bd8835c2a2f4f7814dab", "filename": "gcc/testsuite/gcc.dg/vmx/ldl-vsx-be-order.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx-be-order.c?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -29,12 +29,16 @@ static void test ()\n \n   vector unsigned long vul;\n   vector double vd;\n+  unsigned i;\n \n   init ();\n \n   vul = vec_ldl (0, (vector unsigned long *)svul);\n   vd  = vec_ldl (0, (vector double *)svd);\n \n-  check (vec_all_eq (vul, evul), \"vul\");\n-  check (vec_all_eq (vd,  evd ), \"vd\" );\n+  for (i = 0; i < 2; ++i)\n+    {\n+      check (vul[i] == evul[i], \"vul\");\n+      check (vd[i]  == evd[i],  \"vd\" );\n+    }\n }"}, {"sha": "3faa62ca68f17d19307fdda9e8684ca2873480a8", "filename": "gcc/testsuite/gcc.dg/vmx/ldl-vsx.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fldl-vsx.c?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -24,12 +24,16 @@ static void test ()\n \n   vector unsigned long vul;\n   vector double vd;\n+  unsigned i;\n \n   init ();\n \n   vul = vec_ldl (0, (vector unsigned long *)svul);\n   vd  = vec_ldl (0, (vector double *)svd);\n \n-  check (vec_all_eq (vul, evul), \"vul\");\n-  check (vec_all_eq (vd,  evd ), \"vd\" );\n+  for (i = 0; i < 2; ++i)\n+    {\n+      check (vul[i] == evul[i], \"vul\");\n+      check (vd[i]  == evd[i],  \"vd\" );\n+    }\n }"}, {"sha": "386db2e08056f5911c035b6a04ed796a22e291f8", "filename": "gcc/testsuite/gcc.dg/vmx/merge-vsx-be-order.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -9,6 +9,11 @@ static int vec_long_eq (vector long x, vector long y)\n   return (x[0] == y[0] && x[1] == y[1]);\n }\n \n+static int vec_double_eq (vector double x, vector double y)\n+{\n+  return (x[0] == y[0] && x[1] == y[1]);\n+}\n+\n static void test()\n {\n   /* Input vectors.  */\n@@ -41,6 +46,6 @@ static void test()\n \n   check (vec_long_eq (vlh, vlrh), \"vlh\");\n   check (vec_long_eq (vll, vlrl), \"vll\");\n-  check (vec_all_eq (vdh, vdrh), \"vdh\" );\n-  check (vec_all_eq (vdl, vdrl), \"vdl\" );\n+  check (vec_double_eq (vdh, vdrh), \"vdh\" );\n+  check (vec_double_eq (vdl, vdrl), \"vdl\" );\n }"}, {"sha": "2c8e72c085072703892ae639dce187820b7aa376", "filename": "gcc/testsuite/gcc.dg/vmx/merge-vsx.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1715bb172423071698981653483c41283a342713/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c?ref=1715bb172423071698981653483c41283a342713", "patch": "@@ -9,6 +9,11 @@ static int vec_long_eq (vector long x, vector long y)\n   return (x[0] == y[0] && x[1] == y[1]);\n }\n \n+static int vec_double_eq (vector double x, vector double y)\n+{\n+  return (x[0] == y[0] && x[1] == y[1]);\n+}\n+\n static void test()\n {\n   /* Input vectors.  */\n@@ -34,6 +39,6 @@ static void test()\n \n   check (vec_long_eq (vlh, vlrh), \"vlh\");\n   check (vec_long_eq (vll, vlrl), \"vll\");\n-  check (vec_all_eq (vdh, vdrh), \"vdh\" );\n-  check (vec_all_eq (vdl, vdrl), \"vdl\" );\n+  check (vec_double_eq (vdh, vdrh), \"vdh\" );\n+  check (vec_double_eq (vdl, vdrl), \"vdl\" );\n }"}]}