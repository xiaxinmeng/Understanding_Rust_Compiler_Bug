{"sha": "6187fd28ad121ea6a3adabdcf106df70d9ea0429", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE4N2ZkMjhhZDEyMWVhNmEzYWRhYmRjZjEwNmRmNzBkOWVhMDQyOQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-07-13T21:03:03Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-07-13T21:03:03Z"}, "message": "re PR libgcj/7587 (direct threaded interpreter not thread-safe)\n\n2004-07-13  Bryce McKinlay  <mckinlay@redhat.com>\n\n\tPR libgcj/7587\n\t* interpret.cc (compile_mutex): New.\n\t(_Jv_InitInterpreter): New. Initialize compile_mutex.\n\t(run): Lock compile_mutex before calling compile() if compilation is\n\trequired.\n\t* prims.cc (_Jv_CreateJavaVM): Call _Jv_InitInterpreter().\n\t* include/java-interp.h (_Jv_InitInterpreter): Declare.\n\nFrom-SVN: r84644", "tree": {"sha": "9e450f9a46004f388b904ee291f197c06e3c7f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e450f9a46004f388b904ee291f197c06e3c7f8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6187fd28ad121ea6a3adabdcf106df70d9ea0429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6187fd28ad121ea6a3adabdcf106df70d9ea0429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6187fd28ad121ea6a3adabdcf106df70d9ea0429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6187fd28ad121ea6a3adabdcf106df70d9ea0429/comments", "author": null, "committer": null, "parents": [{"sha": "b6fa4f6e162650a0dfddbefb0104ca7d0224920d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6fa4f6e162650a0dfddbefb0104ca7d0224920d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6fa4f6e162650a0dfddbefb0104ca7d0224920d"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "476795a111de7ea0fe55e628040a19ddf1c94736", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6187fd28ad121ea6a3adabdcf106df70d9ea0429", "patch": "@@ -1,3 +1,13 @@\n+2004-07-13  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR libgcj/7587\n+\t* interpret.cc (compile_mutex): New.\n+\t(_Jv_InitInterpreter): New. Initialize compile_mutex.\n+\t(run): Lock compile_mutex before calling compile() if compilation is\n+\trequired.\n+\t* prims.cc (_Jv_CreateJavaVM): Call _Jv_InitInterpreter().\n+\t* include/java-interp.h (_Jv_InitInterpreter): Declare.\t\n+\n 2004-07-12  Bryce McKinlay  <mckinlay@redhat.com>\n \n \tPR libgcj/15713"}, {"sha": "12bc21f24360869b708ec17bde6462fbb60eacb7", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=6187fd28ad121ea6a3adabdcf106df70d9ea0429", "patch": "@@ -35,6 +35,7 @@ _Jv_IsInterpretedClass (jclass c)\n \n struct _Jv_ResolvedMethod;\n \n+void _Jv_InitInterpreter ();\n void _Jv_DefineClass (jclass, jbyteArray, jint, jint);\n \n void _Jv_InitField (jobject, jclass, int);"}, {"sha": "40c7cbaac5a8ddc889e4215d756b464310ab1b52", "filename": "libjava/interpret.cc", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=6187fd28ad121ea6a3adabdcf106df70d9ea0429", "patch": "@@ -54,6 +54,21 @@ static void throw_null_pointer_exception ()\n   __attribute__ ((__noreturn__));\n #endif\n \n+#ifdef DIRECT_THREADED\n+// Lock to ensure that methods are not compiled concurrently.\n+// We could use a finer-grained lock here, however it is not safe to use\n+// the Class monitor as user code in another thread could hold it.\n+static _Jv_Mutex_t compile_mutex;\n+\n+void\n+_Jv_InitInterpreter()\n+{\n+  _Jv_MutexInit (&compile_mutex);\n+}\n+#else\n+void _Jv_InitInterpreter() {}\n+#endif\n+\n extern \"C\" double __ieee754_fmod (double,double);\n \n // This represents a single slot in the \"compiled\" form of the\n@@ -1032,9 +1047,14 @@ _Jv_InterpMethod::run (void *retp, ffi_raw *args)\n #define PCVAL(unionval) unionval.p\n #define AMPAMP(label) &&label\n \n-  // Compile if we must.\n+  // Compile if we must. NOTE: Double-check locking.\n   if (prepared == NULL)\n-    compile (insn_target);\n+    {\n+      _Jv_MutexLock (&compile_mutex);\n+      if (prepared == NULL)\n+\tcompile (insn_target);\n+      _Jv_MutexUnlock (&compile_mutex);\n+    }\n   pc = (insn_slot *) prepared;\n \n #else"}, {"sha": "19bce1e62a059d891842b03d280dbd498c7b614d", "filename": "libjava/prims.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6187fd28ad121ea6a3adabdcf106df70d9ea0429/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=6187fd28ad121ea6a3adabdcf106df70d9ea0429", "patch": "@@ -25,6 +25,7 @@ details.  */\n #include <jvm.h>\n #include <java-signal.h>\n #include <java-threads.h>\n+#include <java-interp.h>\n \n #ifdef ENABLE_JVMPI\n #include <jvmpi.h>\n@@ -953,6 +954,10 @@ _Jv_CreateJavaVM (void* /*vm_args*/)\n   _Jv_InitThreads ();\n   _Jv_InitGC ();\n   _Jv_InitializeSyncMutex ();\n+  \n+#ifdef INTERPRETER\n+  _Jv_InitInterpreter ();\n+#endif  \n \n #ifdef HANDLE_SEGV\n   INIT_SEGV;"}]}