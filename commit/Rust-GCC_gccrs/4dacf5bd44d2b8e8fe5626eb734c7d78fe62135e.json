{"sha": "4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRhY2Y1YmQ0NGQyYjhlOGZlNTYyNmViNzM0YzdkNzhmZTYyMTM1ZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-25T18:40:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-25T18:40:05Z"}, "message": "decl.c (member_function_or_else): Change third arg from a format specifier to an `enum overload_flags'.\n\n\t* decl.c (member_function_or_else): Change third arg from a format\n\tspecifier to an `enum overload_flags'.  Callers changed.\n\nFrom-SVN: r31615", "tree": {"sha": "fd8eff172a4f2ad80e5a613457bb57d1b78ef690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd8eff172a4f2ad80e5a613457bb57d1b78ef690"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e/comments", "author": null, "committer": null, "parents": [{"sha": "2884c41e1c9d2abd8dd3db430d26fb56b7de6ea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2884c41e1c9d2abd8dd3db430d26fb56b7de6ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2884c41e1c9d2abd8dd3db430d26fb56b7de6ea1"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "0b5c2ff527ccc01ac0e6e417e35643d6722d1438", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e", "patch": "@@ -1,3 +1,8 @@\n+2000-01-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* decl.c (member_function_or_else): Change third arg from a format\n+\tspecifier to an `enum overload_flags'.  Callers changed.\n+\n 2000-01-25  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* typeck.c (composite_pointer_type, c_sizeof, expr_sizeof,"}, {"sha": "ed4a07183a2babfa29e4ea8fa4c556dfbf756569", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4dacf5bd44d2b8e8fe5626eb734c7d78fe62135e", "patch": "@@ -132,7 +132,7 @@ static void set_identifier_type_value_with_scope\n \tPROTO((tree, tree, struct binding_level *));\n static void record_builtin_type PROTO((enum rid, const char *, tree));\n static void record_unknown_type PROTO((tree, const char *));\n-static int member_function_or_else PROTO((tree, tree, const char *));\n+static int member_function_or_else PROTO((tree, tree, enum overload_flags));\n static void bad_specifiers PROTO((tree, const char *, int, int, int, int,\n \t\t\t\t  int));\n static void lang_print_error_function PROTO((const char *));\n@@ -8321,13 +8321,18 @@ complete_array_type (type, initial_value, do_default)\n    message to print in that case.  Otherwise, quietly return 1.  */\n \n static int\n-member_function_or_else (ctype, cur_type, string)\n+member_function_or_else (ctype, cur_type, flags)\n      tree ctype, cur_type;\n-     const char *string;\n+     enum overload_flags flags;\n {\n   if (ctype && ctype != cur_type)\n     {\n-      error (string, TYPE_NAME_STRING (ctype));\n+      if (flags == DTOR_FLAG)\n+\terror (\"destructor for alien class `%s' cannot be a member\",\n+\t       TYPE_NAME_STRING (ctype));\n+      else\n+\terror (\"constructor for alien class `%s' cannot be a member\",\n+\t       TYPE_NAME_STRING (ctype));\n       return 0;\n     }\n   return 1;\n@@ -10177,8 +10182,9 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t      }\n \t\t    if (decl_context == FIELD)\n \t\t      {\n-\t\t\tif (! member_function_or_else (ctype, current_class_type,\n-\t\t\t\t\t\t       \"destructor for alien class `%s' cannot be a member\"))\n+\t\t\tif (! member_function_or_else (ctype,\n+\t\t\t\t\t\t       current_class_type,\n+\t\t\t\t\t\t       flags))\n \t\t\t  return void_type_node;\n \t\t      }\n \t\t  }\n@@ -10213,8 +10219,9 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t    type = build_pointer_type (ctype);\n \t\t    if (decl_context == FIELD)\n \t\t      {\n-\t\t\tif (! member_function_or_else (ctype, current_class_type,\n-\t\t\t\t\t\t       \"constructor for alien class `%s' cannot be member\"))\n+\t\t\tif (! member_function_or_else (ctype,\n+\t\t\t\t\t\t       current_class_type,\n+\t\t\t\t\t\t       flags))\n \t\t\t  return void_type_node;\n \t\t\tTYPE_HAS_CONSTRUCTOR (ctype) = 1;\n \t\t\tif (return_type != return_ctor)"}]}