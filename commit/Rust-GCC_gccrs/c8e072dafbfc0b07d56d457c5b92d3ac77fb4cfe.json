{"sha": "c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhlMDcyZGFmYmZjMGIwN2Q1NmQ0NTdjNWI5MmQzYWM3N2ZiNGNmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-07T10:02:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-07T10:02:27Z"}, "message": "[multiple changes]\n\n2017-09-07  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb: Do not get the target parameters before calling\n\tgprclean.\n\n2017-09-07  Nicolas Roche  <roche@adacore.com>\n\n\t* s-osinte-solaris-posix.ads: Removed.\n\nFrom-SVN: r251841", "tree": {"sha": "015e94b525475b06d13c771057db7670c63c72f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/015e94b525475b06d13c771057db7670c63c72f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe/comments", "author": null, "committer": null, "parents": [{"sha": "83b77c5c9214b1a85d219921ba333a952cf9b90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b77c5c9214b1a85d219921ba333a952cf9b90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b77c5c9214b1a85d219921ba333a952cf9b90a"}], "stats": {"total": 602, "additions": 16, "deletions": 586}, "files": [{"sha": "d46957c41f3dcbc575d95312ae589a6e6547cd2c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe", "patch": "@@ -1,3 +1,12 @@\n+2017-09-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb: Do not get the target parameters before calling\n+\tgprclean.\n+\n+2017-09-07  Nicolas Roche  <roche@adacore.com>\n+\n+\t* s-osinte-solaris-posix.ads: Removed.\n+\n 2017-09-07  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sem_prag.adb (Collect_States_And_Objects): Detect also instances of"}, {"sha": "b3ce56036cf93455163c8bfa16da5b138e9c31d1", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 7, "deletions": 27, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=c8e072dafbfc0b07d56d457c5b92d3ac77fb4cfe", "patch": "@@ -24,18 +24,15 @@\n ------------------------------------------------------------------------------\n \n with ALI;       use ALI;\n-with Csets;\n with Make_Util; use Make_Util;\n with Namet;     use Namet;\n with Opt;       use Opt;\n with Osint;     use Osint;\n with Osint.M;   use Osint.M;\n-with Snames;\n-with Stringt;\n-with Switch;   use Switch;\n+with Switch;    use Switch;\n with Table;\n-with Targparm; use Targparm;\n-with Types;    use Types;\n+with Targparm;  use Targparm;\n+with Types;     use Types;\n \n with Ada.Command_Line;          use Ada.Command_Line;\n \n@@ -46,10 +43,6 @@ with GNAT.OS_Lib;               use GNAT.OS_Lib;\n \n package body Clean is\n \n-   Initialized : Boolean := False;\n-   --  Set to True by the first call to Initialize to avoid reinitialization of\n-   --  some packages.\n-\n    --  Suffixes of various files\n \n    Assembly_Suffix : constant String := \".s\";\n@@ -492,6 +485,7 @@ package body Clean is\n       end if;\n \n       Osint.Add_Default_Search_Dirs;\n+      Targparm.Get_Target_Parameters;\n \n       if Osint.Number_Of_Files = 0 then\n          if Argument_Count = 0 then\n@@ -577,23 +571,6 @@ package body Clean is\n \n    procedure Initialize is\n    begin\n-      if not Initialized then\n-         Initialized := True;\n-\n-         --  Get default search directories to locate system.ads when calling\n-         --  Targparm.Get_Target_Parameters.\n-\n-         Osint.Add_Default_Search_Dirs;\n-\n-         --  Initialize some packages\n-\n-         Csets.Initialize;\n-         Snames.Initialize;\n-         Stringt.Initialize;\n-\n-         Targparm.Get_Target_Parameters;\n-      end if;\n-\n       --  Reset global variables\n \n       Free (Object_Directory_Path);\n@@ -701,6 +678,9 @@ package body Clean is\n \n                      if Success then\n                         Exit_Program (E_Success);\n+\n+                     else\n+                        Exit_Program (E_Fatal);\n                      end if;\n                   end;\n                end if;"}, {"sha": "09f9f1f34905238612edeee3e3bf498d9e7048a7", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "removed", "additions": 0, "deletions": 559, "changes": 559, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b77c5c9214b1a85d219921ba333a952cf9b90a/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b77c5c9214b1a85d219921ba333a952cf9b90a/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=83b77c5c9214b1a85d219921ba333a952cf9b90a", "patch": "@@ -1,559 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   S Y S T E M . O S _ I N T E R F A C E                  --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a Solaris (POSIX Threads) version of this package\n-\n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by the tasking run-time (libgnarl).\n-\n---  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n---  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n-\n-with Interfaces.C;\n-\n-with Ada.Unchecked_Conversion;\n-\n-package System.OS_Interface is\n-   pragma Preelaborate;\n-\n-   pragma Linker_Options (\"-lposix4\");\n-   pragma Linker_Options (\"-lpthread\");\n-\n-   --  The following is needed to allow --enable-threads=solaris\n-\n-   pragma Linker_Options (\"-lthread\");\n-\n-   subtype int            is Interfaces.C.int;\n-   subtype short          is Interfaces.C.short;\n-   subtype long           is Interfaces.C.long;\n-   subtype unsigned       is Interfaces.C.unsigned;\n-   subtype unsigned_short is Interfaces.C.unsigned_short;\n-   subtype unsigned_long  is Interfaces.C.unsigned_long;\n-   subtype unsigned_char  is Interfaces.C.unsigned_char;\n-   subtype plain_char     is Interfaces.C.plain_char;\n-   subtype size_t         is Interfaces.C.size_t;\n-\n-   -----------\n-   -- Errno --\n-   -----------\n-\n-   function errno return int;\n-   pragma Import (C, errno, \"__get_errno\");\n-\n-   EAGAIN    : constant := 11;\n-   EINTR     : constant := 4;\n-   EINVAL    : constant := 22;\n-   ENOMEM    : constant := 12;\n-   ETIMEDOUT : constant := 145;\n-\n-   -------------\n-   -- Signals --\n-   -------------\n-\n-   Max_Interrupt : constant := 45;\n-   type Signal is new int range 0 .. Max_Interrupt;\n-   for Signal'Size use int'Size;\n-\n-   SIGHUP      : constant := 1; --  hangup\n-   SIGINT      : constant := 2; --  interrupt (rubout)\n-   SIGQUIT     : constant := 3; --  quit (ASCD FS)\n-   SIGILL      : constant := 4; --  illegal instruction (not reset)\n-   SIGTRAP     : constant := 5; --  trace trap (not reset)\n-   SIGIOT      : constant := 6; --  IOT instruction\n-   SIGABRT     : constant := 6; --  used by abort, replace SIGIOT in the future\n-   SIGEMT      : constant := 7; --  EMT instruction\n-   SIGFPE      : constant := 8; --  floating point exception\n-   SIGKILL     : constant := 9; --  kill (cannot be caught or ignored)\n-   SIGBUS      : constant := 10; --  bus error\n-   SIGSEGV     : constant := 11; --  segmentation violation\n-   SIGSYS      : constant := 12; --  bad argument to system call\n-   SIGPIPE     : constant := 13; --  write on a pipe with no one to read it\n-   SIGALRM     : constant := 14; --  alarm clock\n-   SIGTERM     : constant := 15; --  software termination signal from kill\n-   SIGUSR1     : constant := 16; --  user defined signal 1\n-   SIGUSR2     : constant := 17; --  user defined signal 2\n-   SIGCLD      : constant := 18; --  alias for SIGCHLD\n-   SIGCHLD     : constant := 18; --  child status change\n-   SIGPWR      : constant := 19; --  power-fail restart\n-   SIGWINCH    : constant := 20; --  window size change\n-   SIGURG      : constant := 21; --  urgent condition on IO channel\n-   SIGPOLL     : constant := 22; --  pollable event occurred\n-   SIGIO       : constant := 22; --  I/O possible (Solaris SIGPOLL alias)\n-   SIGSTOP     : constant := 23; --  stop (cannot be caught or ignored)\n-   SIGTSTP     : constant := 24; --  user stop requested from tty\n-   SIGCONT     : constant := 25; --  stopped process has been continued\n-   SIGTTIN     : constant := 26; --  background tty read attempted\n-   SIGTTOU     : constant := 27; --  background tty write attempted\n-   SIGVTALRM   : constant := 28; --  virtual timer expired\n-   SIGPROF     : constant := 29; --  profiling timer expired\n-   SIGXCPU     : constant := 30; --  CPU time limit exceeded\n-   SIGXFSZ     : constant := 31; --  filesize limit exceeded\n-   SIGWAITING  : constant := 32; --  process's lwps blocked (Solaris)\n-   SIGLWP      : constant := 33; --  used by thread library (Solaris)\n-   SIGFREEZE   : constant := 34; --  used by CPR (Solaris)\n-   SIGTHAW     : constant := 35; --  used by CPR (Solaris)\n-   SIGCANCEL   : constant := 36; --  thread cancellation signal (libthread)\n-\n-   SIGADAABORT : constant := SIGABRT;\n-\n-   type Signal_Set is array (Natural range <>) of Signal;\n-\n-   Unmasked    : constant Signal_Set := (SIGTRAP, SIGLWP, SIGPROF);\n-\n-   --  Following signals should not be disturbed.\n-   --  See c-posix-signals.c in FLORIST\n-\n-   Reserved    : constant Signal_Set :=\n-     (SIGKILL, SIGSTOP, SIGWAITING, SIGCANCEL);\n-\n-   type sigset_t is private;\n-\n-   function sigaddset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigaddset, \"sigaddset\");\n-\n-   function sigdelset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigdelset, \"sigdelset\");\n-\n-   function sigfillset (set : access sigset_t) return int;\n-   pragma Import (C, sigfillset, \"sigfillset\");\n-\n-   function sigismember (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigismember, \"sigismember\");\n-\n-   function sigemptyset (set : access sigset_t) return int;\n-   pragma Import (C, sigemptyset, \"sigemptyset\");\n-\n-   type struct_sigaction is record\n-      sa_flags   : int;\n-      sa_handler : System.Address;\n-      sa_mask    : sigset_t;\n-      sa_resv1   : int;\n-      sa_resv2   : int;\n-   end record;\n-   pragma Convention (C, struct_sigaction);\n-   type struct_sigaction_ptr is access all struct_sigaction;\n-\n-   SA_SIGINFO : constant := 16#0008#;\n-   SA_ONSTACK : constant := 16#0001#;\n-\n-   SIG_BLOCK   : constant := 1;\n-   SIG_UNBLOCK : constant := 2;\n-   SIG_SETMASK : constant := 3;\n-\n-   SIG_DFL : constant := 0;\n-   SIG_IGN : constant := 1;\n-\n-   function sigaction\n-     (sig  : Signal;\n-      act  : struct_sigaction_ptr;\n-      oact : struct_sigaction_ptr) return int;\n-   pragma Import (C, sigaction, \"sigaction\");\n-\n-   ----------\n-   -- Time --\n-   ----------\n-\n-   Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates whether time slicing is supported\n-\n-   type timespec is private;\n-\n-   type clockid_t is new int;\n-\n-   function clock_getres\n-     (clock_id : clockid_t;\n-      res      : access timespec) return int;\n-   pragma Import (C, clock_getres, \"clock_getres\");\n-\n-   function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec) return int;\n-   pragma Import (C, clock_gettime, \"clock_gettime\");\n-\n-   function To_Duration (TS : timespec) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timespec (D : Duration) return timespec;\n-   pragma Inline (To_Timespec);\n-\n-   -------------------------\n-   -- Priority Scheduling --\n-   -------------------------\n-\n-   SCHED_FIFO  : constant := 1;\n-   SCHED_RR    : constant := 2;\n-   SCHED_OTHER : constant := 0;\n-\n-   function To_Target_Priority\n-     (Prio : System.Any_Priority) return Interfaces.C.int;\n-   --  Maps System.Any_Priority to a POSIX priority\n-\n-   -------------\n-   -- Process --\n-   -------------\n-\n-   type pid_t is private;\n-\n-   function kill (pid : pid_t; sig : Signal) return int;\n-   pragma Import (C, kill, \"kill\");\n-\n-   function getpid return pid_t;\n-   pragma Import (C, getpid, \"getpid\");\n-\n-   ---------\n-   -- LWP --\n-   ---------\n-\n-   function lwp_self return System.Address;\n-   pragma Import (C, lwp_self, \"_lwp_self\");\n-\n-   -------------\n-   -- Threads --\n-   -------------\n-\n-   type Thread_Body is access\n-     function (arg : System.Address) return System.Address;\n-   pragma Convention (C, Thread_Body);\n-\n-   function Thread_Body_Access is new\n-     Ada.Unchecked_Conversion (System.Address, Thread_Body);\n-\n-   type pthread_t           is private;\n-   subtype Thread_Id        is pthread_t;\n-\n-   type pthread_mutex_t     is limited private;\n-   type pthread_cond_t      is limited private;\n-   type pthread_attr_t      is limited private;\n-   type pthread_mutexattr_t is limited private;\n-   type pthread_condattr_t  is limited private;\n-   type pthread_key_t       is private;\n-\n-   --  Read/Write lock not supported on Solaris. To add support both types\n-   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n-   --  with the associated routines pthread_rwlock_[init/destroy] and\n-   --  pthread_rwlock_[rdlock/wrlock/unlock].\n-\n-   subtype pthread_rwlock_t     is pthread_mutex_t;\n-   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n-\n-   PTHREAD_CREATE_DETACHED : constant := 16#40#;\n-\n-   PTHREAD_SCOPE_PROCESS : constant := 0;\n-   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n-\n-   -----------\n-   -- Stack --\n-   -----------\n-\n-   type stack_t is record\n-      ss_sp    : System.Address;\n-      ss_size  : size_t;\n-      ss_flags : int;\n-   end record;\n-   pragma Convention (C, stack_t);\n-\n-   function sigaltstack\n-     (ss  : not null access stack_t;\n-      oss : access stack_t) return int;\n-   pragma Import (C, sigaltstack, \"sigaltstack\");\n-\n-   Alternate_Stack : aliased System.Address;\n-   --  This is a dummy definition, never used (Alternate_Stack_Size is null)\n-\n-   Alternate_Stack_Size : constant := 0;\n-   --  No alternate signal stack is used on this platform\n-\n-   Stack_Base_Available : constant Boolean := False;\n-   --  Indicates whether the stack base is available on this target\n-\n-   function Get_Stack_Base (thread : pthread_t) return Address;\n-   pragma Inline (Get_Stack_Base);\n-   --  Returns the stack base of the specified thread. Only call this function\n-   --  when Stack_Base_Available is True.\n-\n-   function Get_Page_Size return int;\n-   pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page\n-\n-   PROT_NONE  : constant := 0;\n-   PROT_READ  : constant := 1;\n-   PROT_WRITE : constant := 2;\n-   PROT_EXEC  : constant := 4;\n-   PROT_ALL   : constant := PROT_READ + PROT_WRITE + PROT_EXEC;\n-   PROT_ON    : constant := PROT_READ;\n-   PROT_OFF   : constant := PROT_ALL;\n-\n-   function mprotect (addr : Address; len : size_t; prot : int) return int;\n-   pragma Import (C, mprotect);\n-\n-   ---------------------------------------\n-   -- Nonstandard Thread Initialization --\n-   ---------------------------------------\n-\n-   procedure pthread_init;\n-   --  This is a dummy procedure to share some GNULLI files\n-\n-   -------------------------\n-   -- POSIX.1c  Section 3 --\n-   -------------------------\n-\n-   function sigwait\n-     (set : access sigset_t;\n-      sig : access Signal) return int;\n-   pragma Import (C, sigwait, \"__posix_sigwait\");\n-\n-   function pthread_kill\n-     (thread : pthread_t;\n-      sig    : Signal) return int;\n-   pragma Import (C, pthread_kill, \"pthread_kill\");\n-\n-   function pthread_sigmask\n-     (how  : int;\n-      set  : access sigset_t;\n-      oset : access sigset_t) return int;\n-   pragma Import (C, pthread_sigmask, \"pthread_sigmask\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 11 --\n-   --------------------------\n-\n-   function pthread_mutexattr_init\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_init, \"pthread_mutexattr_init\");\n-\n-   function pthread_mutexattr_destroy\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_destroy, \"pthread_mutexattr_destroy\");\n-\n-   function pthread_mutex_init\n-     (mutex : access pthread_mutex_t;\n-      attr  : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutex_init, \"pthread_mutex_init\");\n-\n-   function pthread_mutex_destroy (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_destroy, \"pthread_mutex_destroy\");\n-\n-   function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_lock, \"pthread_mutex_lock\");\n-\n-   function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_unlock, \"pthread_mutex_unlock\");\n-\n-   function pthread_condattr_init\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_init, \"pthread_condattr_init\");\n-\n-   function pthread_condattr_destroy\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_destroy, \"pthread_condattr_destroy\");\n-\n-   function pthread_cond_init\n-     (cond : access pthread_cond_t;\n-      attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_cond_init, \"pthread_cond_init\");\n-\n-   function pthread_cond_destroy (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_destroy, \"pthread_cond_destroy\");\n-\n-   function pthread_cond_signal (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_signal, \"pthread_cond_signal\");\n-\n-   function pthread_cond_wait\n-     (cond  : access pthread_cond_t;\n-      mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_cond_wait, \"pthread_cond_wait\");\n-\n-   function pthread_cond_timedwait\n-     (cond    : access pthread_cond_t;\n-      mutex   : access pthread_mutex_t;\n-      abstime : access timespec) return int;\n-   pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n-\n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n-   --------------------------\n-   -- POSIX.1c  Section 13 --\n-   --------------------------\n-\n-   PTHREAD_PRIO_NONE    : constant := 0;\n-   PTHREAD_PRIO_INHERIT : constant := 16#10#;\n-   PTHREAD_PRIO_PROTECT : constant := 16#20#;\n-\n-   function pthread_mutexattr_setprotocol\n-     (attr     : access pthread_mutexattr_t;\n-      protocol : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprotocol);\n-\n-   function pthread_mutexattr_setprioceiling\n-     (attr        : access pthread_mutexattr_t;\n-      prioceiling : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprioceiling);\n-\n-   type Array_8_Int is array (0 .. 7) of int;\n-   type struct_sched_param is record\n-      sched_priority : int;\n-      sched_pad      : Array_8_Int;\n-   end record;\n-\n-   function pthread_setschedparam\n-     (thread : pthread_t;\n-      policy : int;\n-      param  : access struct_sched_param) return int;\n-   pragma Import (C, pthread_setschedparam, \"pthread_setschedparam\");\n-\n-   function pthread_attr_setscope\n-     (attr            : access pthread_attr_t;\n-      contentionscope : int) return int;\n-   pragma Import (C, pthread_attr_setscope, \"pthread_attr_setscope\");\n-\n-   function pthread_attr_setinheritsched\n-     (attr         : access pthread_attr_t;\n-      inheritsched : int) return int;\n-   pragma Import (C, pthread_attr_setinheritsched);\n-\n-   function pthread_attr_setschedpolicy\n-     (attr   : access pthread_attr_t;\n-      policy : int) return int;\n-   pragma Import (C, pthread_attr_setschedpolicy);\n-\n-   function sched_yield return int;\n-   pragma Import (C, sched_yield, \"sched_yield\");\n-\n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n-\n-   function pthread_attr_init (attributes : access pthread_attr_t) return int;\n-   pragma Import (C, pthread_attr_init, \"pthread_attr_init\");\n-\n-   function pthread_attr_destroy\n-     (attributes : access pthread_attr_t) return int;\n-   pragma Import (C, pthread_attr_destroy, \"pthread_attr_destroy\");\n-\n-   function pthread_attr_setdetachstate\n-     (attr        : access pthread_attr_t;\n-      detachstate : int) return int;\n-   pragma Import (C, pthread_attr_setdetachstate);\n-\n-   function pthread_attr_setstacksize\n-     (attr      : access pthread_attr_t;\n-      stacksize : size_t) return int;\n-   pragma Import (C, pthread_attr_setstacksize);\n-\n-   function pthread_create\n-     (thread        : access pthread_t;\n-      attributes    : access pthread_attr_t;\n-      start_routine : Thread_Body;\n-      arg           : System.Address) return int;\n-   pragma Import (C, pthread_create, \"pthread_create\");\n-\n-   procedure pthread_exit (status : System.Address);\n-   pragma Import (C, pthread_exit, \"pthread_exit\");\n-\n-   function pthread_self return pthread_t;\n-   pragma Import (C, pthread_self, \"pthread_self\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 17 --\n-   --------------------------\n-\n-   function pthread_setspecific\n-     (key   : pthread_key_t;\n-      value : System.Address) return int;\n-   pragma Import (C, pthread_setspecific, \"pthread_setspecific\");\n-\n-   function pthread_getspecific (key : pthread_key_t) return System.Address;\n-   pragma Import (C, pthread_getspecific, \"pthread_getspecific\");\n-\n-   type destructor_pointer is access procedure (arg : System.Address);\n-   pragma Convention (C, destructor_pointer);\n-\n-   function pthread_key_create\n-     (key        : access pthread_key_t;\n-      destructor : destructor_pointer) return int;\n-   pragma Import (C, pthread_key_create, \"pthread_key_create\");\n-\n-private\n-\n-   type array_type_1 is array (Integer range 0 .. 3) of unsigned_long;\n-   type sigset_t is record\n-      X_X_sigbits  : array_type_1;\n-   end record;\n-   pragma Convention (C, sigset_t);\n-\n-   type pid_t is new long;\n-\n-   type time_t is new long;\n-\n-   type timespec is record\n-      tv_sec  : time_t;\n-      tv_nsec : long;\n-   end record;\n-   pragma Convention (C, timespec);\n-\n-   type pthread_attr_t is record\n-      pthread_attrp : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_attr_t);\n-\n-   type pthread_condattr_t is record\n-      pthread_condattrp : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_condattr_t);\n-\n-   type pthread_mutexattr_t is record\n-      pthread_mutexattrp : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_mutexattr_t);\n-\n-   type pthread_t is new unsigned;\n-\n-   type uint64_t is mod 2 ** 64;\n-\n-   type pthread_mutex_t is record\n-      pthread_mutex_flags   : uint64_t;\n-      pthread_mutex_owner64 : uint64_t;\n-      pthread_mutex_data    : uint64_t;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-   type pthread_mutex_t_ptr is access pthread_mutex_t;\n-\n-   type pthread_cond_t is record\n-      pthread_cond_flags : uint64_t;\n-      pthread_cond_data  : uint64_t;\n-   end record;\n-   pragma Convention (C, pthread_cond_t);\n-\n-   type pthread_key_t is new unsigned;\n-\n-end System.OS_Interface;"}]}