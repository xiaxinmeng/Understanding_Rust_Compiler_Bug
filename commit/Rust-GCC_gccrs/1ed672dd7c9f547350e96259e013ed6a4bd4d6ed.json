{"sha": "1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkNjcyZGQ3YzlmNTQ3MzUwZTk2MjU5ZTAxM2VkNmE0YmQ0ZDZlZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-14T01:06:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-14T01:06:42Z"}, "message": "bb-reorder.c (skip_insn_after_block): Get past the line number notes.\n\n\t* bb-reorder.c (skip_insn_after_block): Get past the line number notes.\n\n\t* flow.c (redirect_edge_and_branch_force, split_edge,\n\ttry_crossjump_to_edge): Use set_block_for_new_insns.\n\t* bb-reorder.c (emit_jump_to_block_after): Call set_block_for_new_insns.\n\nFrom-SVN: r44002", "tree": {"sha": "7ebe8a09f2e053c88b2a24162827fccbad43b62d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ebe8a09f2e053c88b2a24162827fccbad43b62d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/comments", "author": null, "committer": null, "parents": [{"sha": "c51f3aa110b4e8e1142668174576d12a0f443326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51f3aa110b4e8e1142668174576d12a0f443326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51f3aa110b4e8e1142668174576d12a0f443326"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "7a365dc201965de0aa894fdabd76c2d52ab746b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "patch": "@@ -1,3 +1,11 @@\n+Sat Jul 14 02:58:38 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* bb-reorder.c (skip_insn_after_block): Get past the line number notes.\n+\n+\t* flow.c (redirect_edge_and_branch_force, split_edge,\n+\ttry_crossjump_to_edge): Use set_block_for_new_insns.\n+\t* bb-reorder.c (emit_jump_to_block_after): Call set_block_for_new_insns.\n+\n 2001-07-13  H.J. Lu  (hjl@gnu.org)\n \n \t* config/elfos.h (UNIQUE_SECTION): Enable .bss section with"}, {"sha": "e2dc44c5053399e3dc4b66333dd9bd384fa587cd", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "patch": "@@ -211,26 +211,35 @@ skip_insns_after_block (bb)\n   if (bb->index + 1 != n_basic_blocks)\n     next_head = BASIC_BLOCK (bb->index + 1)->head;\n \n-  for (last_insn = bb->end; (insn = NEXT_INSN (last_insn)); last_insn = insn)\n+  for (last_insn = insn = bb->end; (insn = NEXT_INSN (insn)); )\n     {\n       if (insn == next_head)\n \tbreak;\n \n       switch (GET_CODE (insn))\n \t{\n \tcase BARRIER:\n+\t  last_insn = insn;\n \t  continue;\n \n \tcase NOTE:\n \t  switch (NOTE_LINE_NUMBER (insn))\n \t    {\n \t    case NOTE_INSN_LOOP_END:\n \t    case NOTE_INSN_BLOCK_END:\n+\t      last_insn = insn;\n+\t      continue;\n \t    case NOTE_INSN_DELETED:\n \t    case NOTE_INSN_DELETED_LABEL:\n \t      continue;\n \n \t    default:\n+\t      /* Make line notes attached to the succesor block unless they\n+\t         are followed by something attached to predecesor block.\n+\t         These notes remained after removing code in the predecesor\n+\t         block and thus should be kept together.  */\n+\t      if (NOTE_LINE_NUMBER (insn) >= 0)\n+\t\tcontinue;\n \t      break;\n \t    }\n \t  break;\n@@ -242,6 +251,7 @@ skip_insns_after_block (bb)\n \t          || GET_CODE (PATTERN (NEXT_INSN (insn))) == ADDR_DIFF_VEC))\n \t    {\n \t      insn = NEXT_INSN (insn);\n+\t      last_insn = insn;\n \t      continue;\n \t    }\n           break;\n@@ -501,6 +511,8 @@ emit_jump_to_block_after (bb, after)\n       jump = emit_jump_insn_after (gen_jump (label), after);\n       JUMP_LABEL (jump) = label;\n       LABEL_NUSES (label) += 1;\n+      if (basic_block_for_insn)\n+\tset_block_for_new_insns (jump, bb);\n \n       if (rtl_dump_file)\n \tfprintf (rtl_dump_file, \"Emitting jump to block %d (%d)\\n\","}, {"sha": "652328f894c82b2e574cea5a6ccb48d1f664823e", "filename": "gcc/flow.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed672dd7c9f547350e96259e013ed6a4bd4d6ed/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=1ed672dd7c9f547350e96259e013ed6a4bd4d6ed", "patch": "@@ -1897,7 +1897,7 @@ redirect_edge_and_branch_force (e, target)\n       JUMP_LABEL (e->src->end) = label;\n       LABEL_NUSES (label)++;\n       if (basic_block_for_insn)\n-\tset_block_for_insn (e->src->end, e->src);\n+\tset_block_for_new_insns (e->src->end, e->src);\n       emit_barrier_after (e->src->end);\n       if (rtl_dump_file)\n \tfprintf (rtl_dump_file,\n@@ -1971,7 +1971,7 @@ redirect_edge_and_branch_force (e, target)\n   JUMP_LABEL (new_bb->end) = label;\n   LABEL_NUSES (label)++;\n   if (basic_block_for_insn)\n-    set_block_for_insn (new_bb->end, new_bb);\n+    set_block_for_new_insns (new_bb->end, new_bb);\n   emit_barrier_after (new_bb->end);\n   return new_bb;\n }\n@@ -2074,7 +2074,7 @@ split_edge (edge_in)\n \t\t\t\t      jump_block->end);\n \t  jump_block->end = pos;\n \t  if (basic_block_for_insn)\n-\t    set_block_for_insn (pos, jump_block);\n+\t    set_block_for_new_insns (pos, jump_block);\n \t  emit_barrier_after (pos);\n \n \t  /* ... let jump know that label is in use, ...  */\n@@ -3555,7 +3555,7 @@ try_crossjump_to_edge (mode, e1, e2)\n   JUMP_LABEL (e1->src->end) = label;\n   LABEL_NUSES (label)++;\n   if (basic_block_for_insn)\n-    set_block_for_insn (e1->src->end, e1->src);\n+    set_block_for_new_insns (e1->src->end, e1->src);\n \n   flow_delete_insn_chain (first, last);\n "}]}