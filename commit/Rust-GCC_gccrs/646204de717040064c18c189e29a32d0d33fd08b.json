{"sha": "646204de717040064c18c189e29a32d0d33fd08b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ2MjA0ZGU3MTcwNDAwNjRjMThjMTg5ZTI5YTMyZDBkMzNmZDA4Yg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-12-31T13:28:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:28Z"}, "message": "[Ada] CCG: regressions on ACATS c460007, c46013a, cd1009d\n\n2020-06-02  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Generate_Temporary): New subprogram of\n\tDiscrete_Range_Check that generates a temporary to facilitate\n\tthe C backend the code generation of the unchecked conversion\n\tsince the size of the source type may differ from the size of\n\tthe target type.", "tree": {"sha": "679697ed32fe7307594f52aaa620839abad5e9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/679697ed32fe7307594f52aaa620839abad5e9f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/646204de717040064c18c189e29a32d0d33fd08b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646204de717040064c18c189e29a32d0d33fd08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646204de717040064c18c189e29a32d0d33fd08b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646204de717040064c18c189e29a32d0d33fd08b/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b490c1ec51c276069c29f23406164803587bd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b490c1ec51c276069c29f23406164803587bd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b490c1ec51c276069c29f23406164803587bd06"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "2d63f7ee04b1240e1547bc3fc21e6999aed8e44a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/646204de717040064c18c189e29a32d0d33fd08b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/646204de717040064c18c189e29a32d0d33fd08b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=646204de717040064c18c189e29a32d0d33fd08b", "patch": "@@ -11144,6 +11144,51 @@ package body Exp_Ch4 is\n          Expr : Node_Id;\n          Ityp : Entity_Id;\n \n+         procedure Generate_Temporary;\n+         --  Generate a temporary to facilitate in the C backend the code\n+         --  generation of the unchecked conversion since the size of the\n+         --  source type may differ from the size of the target type.\n+\n+         ------------------------\n+         -- Generate_Temporary --\n+         ------------------------\n+\n+         procedure Generate_Temporary is\n+         begin\n+            if Esize (Etype (Expr)) < Esize (Etype (Ityp)) then\n+               declare\n+                  Exp_Type : constant Entity_Id := Ityp;\n+                  Def_Id   : constant Entity_Id :=\n+                               Make_Temporary (Loc, 'R', Expr);\n+                  E        : Node_Id;\n+                  Res      : Node_Id;\n+\n+               begin\n+                  Set_Is_Internal (Def_Id);\n+                  Set_Etype (Def_Id, Exp_Type);\n+                  Res := New_Occurrence_Of (Def_Id, Loc);\n+\n+                  E :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Def_Id,\n+                      Object_Definition   => New_Occurrence_Of\n+                                               (Exp_Type, Loc),\n+                      Constant_Present    => True,\n+                      Expression          => Relocate_Node (Expr));\n+\n+                  Set_Assignment_OK (E);\n+                  Insert_Action (Expr, E);\n+\n+                  Set_Assignment_OK (Res, Assignment_OK (Expr));\n+\n+                  Rewrite (Expr, Res);\n+                  Analyze_And_Resolve (Expr, Exp_Type);\n+               end;\n+            end if;\n+         end Generate_Temporary;\n+\n+      --  Start of processing for Discrete_Range_Check\n+\n       begin\n          --  Nothing to do if conversion was rewritten\n \n@@ -11180,6 +11225,13 @@ package body Exp_Ch4 is\n                Ityp := Standard_Integer;\n             end if;\n \n+            --  Generate a temporary with the large type to facilitate in the C\n+            --  backend the code generation for the unchecked conversion.\n+\n+            if Modify_Tree_For_C then\n+               Generate_Temporary;\n+            end if;\n+\n             Set_Do_Range_Check (Expr, False);\n             Rewrite (Expr, Unchecked_Convert_To (Ityp, Expr));\n          end if;"}]}