{"sha": "4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxYTVkOGI3MWUyOWI3MWUwYmMxMDA0NDgwYzEyYzVmYzQyN2NiNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-15T16:06:50Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-15T16:07:17Z"}, "message": "x86: Also check if -fcf-protection works\n\nWhen defaulting CET run-time support to auto, check if -fcf-protection\nworks.  Even if the stage1 GCC doesn't support -fcf-protection, since\nthe final GCC does, CET run-time support will be enabled by default if\nbinutils support CET.\n\nconfig/\n\n\tPR bootstrap/95147\n\t* cet.m4 (GCC_CET_FLAGS): Also check if -fcf-protection works\n\twhen defaulting to auto.\n\nlibatomic/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibbacktrace/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibgcc/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibgfortran/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibgomp/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibitm/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibobjc/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibphobos/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibquadmath/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibsanitizer/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibssp/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibstdc++-v3/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nlibvtv/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.\n\nzlib/\n\n\tPR bootstrap/95147\n\t* configure: Regenerated.", "tree": {"sha": "00192b598877094aa647955fecc5997ced114e06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00192b598877094aa647955fecc5997ced114e06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ec52417fd9b3bef5227cdc9a18ff4f0247b0ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec52417fd9b3bef5227cdc9a18ff4f0247b0ea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec52417fd9b3bef5227cdc9a18ff4f0247b0ea4"}], "stats": {"total": 145, "additions": 133, "deletions": 12}, "files": [{"sha": "a4d54749669bcc065b9ab315e51ffdb2c2bc981e", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,9 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* cet.m4 (GCC_CET_FLAGS): Also check if -fcf-protection works\n+\twhen defaulting to auto.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* cet.m4 (GCC_CET_FLAGS): Change default to auto."}, {"sha": "2bb2c8a95ac1b59f83ef6376f7de7b90b077e342", "filename": "config/cet.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/config%2Fcet.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/config%2Fcet.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fcet.m4?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -13,6 +13,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tAC_COMPILE_IFELSE(\n \t [AC_LANG_PROGRAM(\n \t  [],\n@@ -25,6 +27,7 @@ asm (\"setssbsy\");\n \t  ])],\n \t [enable_cet=yes],\n \t [enable_cet=no])\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "ddfce8d5552e0de63feef6944c6d6bacbe65965c", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "478670a6fe702c2df53a3c63744049fa900106e0", "filename": "libatomic/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -15595,6 +15595,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -15618,6 +15620,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "9f45d72f4fe35bcde77d548444080816abfe9065", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "d851e807d2d60a01fdf079ff5f6f5bfff5535376", "filename": "libbacktrace/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -12169,6 +12169,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -12192,6 +12194,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "7343c773ecf2301ec113fd50aba115262bc07abc", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "5d0c79bcd75c47879ac1ede1f13d3fe7ae5d542f", "filename": "libgcc/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -4913,6 +4913,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -4936,6 +4938,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "149f45e1088fcd11dad3e5c5ef303634b29b6a28", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/95119"}, {"sha": "97d9616e425603f056ec6033cc1769e2f6e47f17", "filename": "libgfortran/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -6014,6 +6014,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -6037,6 +6039,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -12719,7 +12722,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12722 \"configure\"\n+#line 12725 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12825,7 +12828,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12828 \"configure\"\n+#line 12831 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "0011763acd8d3b45ecfdcd91b591ece7f1dec294", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/95119"}, {"sha": "e5710b26749176313b98d26c0585a8822af4ae60", "filename": "libgomp/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -16753,6 +16753,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -16776,6 +16778,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "b3ebcab466b1a1954140119b6314bc110be81b9b", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "be70ea6f76f03c7ebbbd4965a631d0c1fc889e7e", "filename": "libitm/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -17890,6 +17890,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -17913,6 +17915,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "5f42020f0b625557616d39c5eb6bc4e4445c5259", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "6975a727d5e75d2797d298c9ce3dd3e44695c233", "filename": "libobjc/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -3466,6 +3466,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -3489,6 +3491,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -10775,7 +10778,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10778 \"configure\"\n+#line 10781 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10881,7 +10884,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10884 \"configure\"\n+#line 10887 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "e5422ecd06366ab89df1dd1736e5a2bc9d0fb583", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* libdruntime/config/x86/switchcontext.S: Include <cet.h> if"}, {"sha": "4551e9fddefc4b2445c8552da2b7880fc68a9a79", "filename": "libphobos/configure", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1478,7 +1478,7 @@ Optional Features:\n   --enable-maintainer-mode\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n-  --enable-cet            enable Intel CET in target libraries [default=no]\n+  --enable-cet            enable Intel CET in target libraries [default=auto]\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n   --enable-fast-install[=PKGS]\n@@ -5573,7 +5573,7 @@ if test \"${enable_cet+set}\" = set; then :\n                           esac\n \n else\n-  enable_cet=no\n+  enable_cet=auto\n fi\n \n \n@@ -5586,6 +5586,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -5609,6 +5611,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -11734,7 +11737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11737 \"configure\"\n+#line 11740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11840,7 +11843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11843 \"configure\"\n+#line 11846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "eb045415f7542f05da3b2d697abb912b7d87ff96", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "dee79cf99a02f95db92725053a53ad69ff90f150", "filename": "libquadmath/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -13039,6 +13039,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -13062,6 +13064,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "001483b6ca6d8ab969113d4d297a64291f3b688d", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "7ec074491c1a28b9818ce48f2a18a946f8b90d9f", "filename": "libsanitizer/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -16862,6 +16862,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -16885,6 +16887,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "dfb2015edc52d563e5d8a4de25a800c1ffa41d1b", "filename": "libssp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "2eb4c7998d5f0810bb91d38a713bbbda1e245b25", "filename": "libssp/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -4338,6 +4338,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -4361,6 +4363,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -10996,7 +10999,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10999 \"configure\"\n+#line 11002 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11102,7 +11105,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11105 \"configure\"\n+#line 11108 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "dde62ad477970b474503d0e1a7d894ed3dcf2f8d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "502f660200121b9b8be2a059d4db2f5dca9a2734", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -77488,6 +77488,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -77511,6 +77513,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "b50e74be2c7209ada12dd98c636f6a1a1d3e7165", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "eced2b23ce09cb025337ae478c08f47a8e599f10", "filename": "libvtv/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -15680,6 +15680,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -15703,6 +15705,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET."}, {"sha": "0986b1469f0f3913022daad273a4812ccdbdc2f7", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/95147\n+\t* configure: Regenerated.\n+\n 2020-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "ae1f193491175d222c9c5c975bdbecb0a50d2184", "filename": "zlib/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=4c1a5d8b71e29b71e0bc1004480c12c5fc427cb7", "patch": "@@ -4169,6 +4169,8 @@ case \"$host\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n \t# and if assembler supports CET insn.\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -4192,6 +4194,7 @@ else\n   enable_cet=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$save_CFLAGS\"\n \t;;\n       yes)\n \t# Check if assembler supports CET.\n@@ -10739,7 +10742,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10742 \"configure\"\n+#line 10745 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10845,7 +10848,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10848 \"configure\"\n+#line 10851 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}