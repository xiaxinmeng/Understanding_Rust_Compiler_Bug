{"sha": "0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRhNGVkZjc2ZGZjYTVkNGVhN2FmNGRkZmRiZTk0NDIyOWQ3MWNjNQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2015-12-10T17:16:32Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2015-12-10T17:16:32Z"}, "message": "invoke.texi (Warning Options): Update -Wall options.\n\n        * invoke.texi (Warning Options): Update -Wall options.  Clarify\n        when some -Wextra options are enabled.  Add -Wplacement-new example.\n\nFrom-SVN: r231533", "tree": {"sha": "f18765a9a8a3d3135e7ff375d946187d730796a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f18765a9a8a3d3135e7ff375d946187d730796a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3dec93d59c389bcb17830dad1e191775c4b45eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dec93d59c389bcb17830dad1e191775c4b45eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dec93d59c389bcb17830dad1e191775c4b45eed"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "2eb367a9a153eb4b26f1d89a191f00fce342a44e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5", "patch": "@@ -1,3 +1,8 @@\n+2015-12-10  Martin Sebor  <msebor@redhat.com>\n+\n+\t* invoke.texi (Warning Options): Update -Wall options.  Clarify\n+\twhen some -Wextra options are enabled.  Add -Wplacement-new example.\n+\n 2015-12-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR tree-optimization/68619"}, {"sha": "3f8742925050e652618d6cae6e39902c457264b8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0da4edf76dfca5d4ea7af4ddfdbe944229d71cc5", "patch": "@@ -3542,18 +3542,22 @@ Options} and @ref{Objective-C and Objective-C++ Dialect Options}.\n \n @gccoptlist{-Waddress   @gol\n -Warray-bounds=1 @r{(only with} @option{-O2}@r{)}  @gol\n+-Wbool-compare  @gol\n -Wc++11-compat  -Wc++14-compat@gol\n -Wchar-subscripts  @gol\n+-Wcomment  @gol\n -Wenum-compare @r{(in C/ObjC; this is on by default in C++)} @gol\n+-Wformat   @gol\n+-Wimplicit @r{(C and Objective-C only)} @gol\n -Wimplicit-int @r{(C and Objective-C only)} @gol\n -Wimplicit-function-declaration @r{(C and Objective-C only)} @gol\n--Wbool-compare  @gol\n--Wduplicated-cond  @gol\n--Wcomment  @gol\n--Wformat   @gol\n+-Winit-self @r{(only for C++)} @gol\n+-Wlogical-not-parentheses\n -Wmain @r{(only for C/ObjC and unless} @option{-ffreestanding}@r{)}  @gol\n -Wmaybe-uninitialized @gol\n+-Wmemset-transposed-args @gol\n -Wmissing-braces @r{(only for C/ObjC)} @gol\n+-Wnarrowing @r{(only for C++)}  @gol\n -Wnonnull  @gol\n -Wopenmp-simd @gol\n -Wparentheses  @gol\n@@ -3562,6 +3566,7 @@ Options} and @ref{Objective-C and Objective-C++ Dialect Options}.\n -Wreturn-type  @gol\n -Wsequence-point  @gol\n -Wsign-compare @r{(only in C++)}  @gol\n+-Wsizeof-pointer-memaccess @gol\n -Wstrict-aliasing  @gol\n -Wstrict-overflow=1  @gol\n -Wswitch  @gol\n@@ -3599,10 +3604,10 @@ name is still supported, but the newer name is more descriptive.)\n -Wmissing-parameter-type @r{(C only)}  @gol\n -Wold-style-declaration @r{(C only)}  @gol\n -Woverride-init  @gol\n--Wsign-compare  @gol\n+-Wsign-compare @r{(C only)} @gol\n -Wtype-limits  @gol\n -Wuninitialized  @gol\n--Wshift-negative-value  @gol\n+-Wshift-negative-value @r{(in C++03 and in C99 and newer)}  @gol\n -Wunused-parameter @r{(only with} @option{-Wunused} @r{or} @option{-Wall}@r{)} @gol\n -Wunused-but-set-parameter @r{(only with} @option{-Wunused} @r{or} @option{-Wall}@r{)}  @gol\n }\n@@ -4589,7 +4594,6 @@ warn for the following code:\n if (p->q != NULL) @{ @dots{} @}\n else if (p->q != NULL) @{ @dots{} @}\n @end smallexample\n-This warning is enabled by @option{-Wall}.\n \n @item -Wframe-address\n @opindex Wno-frame-address\n@@ -4896,8 +4900,15 @@ which depend on the MS runtime.\n @opindex Wno-placement-new\n Warn about placement new expressions with undefined behavior, such as\n constructing an object in a buffer that is smaller than the type of\n-the object.\n-\n+the object.  For example, the placement new expression below is diagnosed\n+because it attempts to construct an array of 64 integers in a buffer only\n+64 bytes large.\n+@smallexample\n+char buf [64];\n+new (buf) int[64];\n+@end smallexample\n+This warning is enabled by default.\n+  \n @item -Wpointer-arith\n @opindex Wpointer-arith\n @opindex Wno-pointer-arith\n@@ -5114,8 +5125,8 @@ can be disabled with the @option{-Wno-jump-misses-init} option.\n @cindex signed and unsigned values, comparison warning\n Warn when a comparison between signed and unsigned values could produce\n an incorrect result when the signed value is converted to unsigned.\n-This warning is also enabled by @option{-Wextra}; to get the other warnings\n-of @option{-Wextra} without this warning, use @option{-Wextra -Wno-sign-compare}.\n+In C++, this warning is also enabled by @option{-Wall}.  In C, it is\n+also enabled by @option{-Wextra}.\n \n @item -Wsign-conversion\n @opindex Wsign-conversion"}]}