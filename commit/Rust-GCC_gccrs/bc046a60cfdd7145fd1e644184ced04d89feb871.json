{"sha": "bc046a60cfdd7145fd1e644184ced04d89feb871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMwNDZhNjBjZmRkNzE0NWZkMWU2NDQxODRjZWQwNGQ4OWZlYjg3MQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-06-19T00:33:31Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-06-19T00:50:23Z"}, "message": "libstdc++: Implement LWG 3555 changes to transform/elements_view\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (transform_view::_Iterator::_S_iter_concept):\n\tConsider _Base instead of _Vp as per LWG 3555.\n\t(elements_view::_Iterator::_S_iter_concept): Likewise.", "tree": {"sha": "1b8f18da2c3a187f5d7ad4373f2b0e5302f711b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b8f18da2c3a187f5d7ad4373f2b0e5302f711b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc046a60cfdd7145fd1e644184ced04d89feb871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc046a60cfdd7145fd1e644184ced04d89feb871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc046a60cfdd7145fd1e644184ced04d89feb871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc046a60cfdd7145fd1e644184ced04d89feb871/comments", "author": null, "committer": null, "parents": [{"sha": "15736576df739fdcc5e795961dae30c7b0c87967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15736576df739fdcc5e795961dae30c7b0c87967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15736576df739fdcc5e795961dae30c7b0c87967"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "49babe81437a3d5964b2f7e6eb64a7ba81ece116", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc046a60cfdd7145fd1e644184ced04d89feb871/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc046a60cfdd7145fd1e644184ced04d89feb871/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=bc046a60cfdd7145fd1e644184ced04d89feb871", "patch": "@@ -1613,11 +1613,11 @@ namespace views::__adaptor\n \t  static auto\n \t  _S_iter_concept()\n \t  {\n-\t    if constexpr (random_access_range<_Vp>)\n+\t    if constexpr (random_access_range<_Base>)\n \t      return random_access_iterator_tag{};\n-\t    else if constexpr (bidirectional_range<_Vp>)\n+\t    else if constexpr (bidirectional_range<_Base>)\n \t      return bidirectional_iterator_tag{};\n-\t    else if constexpr (forward_range<_Vp>)\n+\t    else if constexpr (forward_range<_Base>)\n \t      return forward_iterator_tag{};\n \t    else\n \t      return input_iterator_tag{};\n@@ -3653,11 +3653,11 @@ namespace views::__adaptor\n \t  static auto\n \t  _S_iter_concept()\n \t  {\n-\t    if constexpr (random_access_range<_Vp>)\n+\t    if constexpr (random_access_range<_Base>)\n \t      return random_access_iterator_tag{};\n-\t    else if constexpr (bidirectional_range<_Vp>)\n+\t    else if constexpr (bidirectional_range<_Base>)\n \t      return bidirectional_iterator_tag{};\n-\t    else if constexpr (forward_range<_Vp>)\n+\t    else if constexpr (forward_range<_Base>)\n \t      return forward_iterator_tag{};\n \t    else\n \t      return input_iterator_tag{};"}]}