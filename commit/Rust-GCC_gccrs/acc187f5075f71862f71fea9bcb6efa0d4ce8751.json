{"sha": "acc187f5075f71862f71fea9bcb6efa0d4ce8751", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNjMTg3ZjUwNzVmNzE4NjJmNzFmZWE5YmNiNmVmYTBkNGNlODc1MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-03-17T18:18:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-03-17T18:18:12Z"}, "message": "dwarf2out.c (lookup_filename): Emit .file if the assembler is generating .debug_line.\n\n        * dwarf2out.c (lookup_filename): Emit .file if the assembler\n        is generating .debug_line.\n        (dwarf2out_init): Add main_input_filename to the file table first.\n        * configure.in (as_dwarf2_debug_line): Test with file number 1\n        instead of file number 0.\n\nFrom-SVN: r40578", "tree": {"sha": "8521ea8c7791dc00e81d7eec6428546cf5ef129f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8521ea8c7791dc00e81d7eec6428546cf5ef129f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acc187f5075f71862f71fea9bcb6efa0d4ce8751", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc187f5075f71862f71fea9bcb6efa0d4ce8751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc187f5075f71862f71fea9bcb6efa0d4ce8751", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc187f5075f71862f71fea9bcb6efa0d4ce8751/comments", "author": null, "committer": null, "parents": [{"sha": "f1c6ba8bd13aa28aabbabbf75c8e1611bc462bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c6ba8bd13aa28aabbabbf75c8e1611bc462bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c6ba8bd13aa28aabbabbf75c8e1611bc462bd8"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "fadf0f202e6f2605237461647c38bcc589b4b752", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acc187f5075f71862f71fea9bcb6efa0d4ce8751", "patch": "@@ -1,3 +1,11 @@\n+2001-03-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* dwarf2out.c (lookup_filename): Emit .file if the assembler\n+\tis generating .debug_line.\n+\t(dwarf2out_init): Add main_input_filename to the file table first.\n+\t* configure.in (as_dwarf2_debug_line): Test with file number 1\n+\tinstead of file number 0.\n+\n Sat Mar 17 11:52:34 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* combine.c (undobuf): Remove field previous_undos; all refs deleted."}, {"sha": "87562fae71d5828d420680c3a030694fd26f9a69", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=acc187f5075f71862f71fea9bcb6efa0d4ce8751", "patch": "@@ -6752,8 +6752,8 @@ then\n     gcc_cv_as_dwarf2_debug_line=\"yes\"\n   fi\n elif test x$gcc_cv_as != x -a x\"$insn\" != x ; then\n-\techo '\t.file 0 \"conftest.s\"' > conftest.s\n-\techo '\t.loc 0 3 0' >> conftest.s\n+\techo '\t.file 1 \"conftest.s\"' > conftest.s\n+\techo '\t.loc 1 3 0' >> conftest.s\n \techo \"\t$insn\" >> conftest.s\n \t# ??? This fails with non-gnu grep.\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\"}, {"sha": "a53bd4d71e574cbeed6edaa4fa06da9a33b10673", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=acc187f5075f71862f71fea9bcb6efa0d4ce8751", "patch": "@@ -1491,8 +1491,8 @@ then\n     gcc_cv_as_dwarf2_debug_line=\"yes\"\n   fi\n elif test x$gcc_cv_as != x -a x\"$insn\" != x ; then\n-\techo '\t.file 0 \"conftest.s\"' > conftest.s\n-\techo '\t.loc 0 3 0' >> conftest.s\n+\techo '\t.file 1 \"conftest.s\"' > conftest.s\n+\techo '\t.loc 1 3 0' >> conftest.s\n \techo \"\t$insn\" >> conftest.s\n \t# ??? This fails with non-gnu grep.\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\"}, {"sha": "72b1d4b6d530607d93b70459c177c8a74fbba3fa", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc187f5075f71862f71fea9bcb6efa0d4ce8751/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=acc187f5075f71862f71fea9bcb6efa0d4ce8751", "patch": "@@ -10723,6 +10723,9 @@ lookup_filename (file_name)\n   file_table.in_use = i + 1;\n   file_table.last_lookup_index = i;\n \n+  if (DWARF2_ASM_LINE_DEBUG_INFO)\n+    fprintf (asm_out_file, \"\\t.file %u \\\"%s\\\"\\n\", i, file_name);\n+\n   return i;\n }\n \n@@ -10885,10 +10888,15 @@ dwarf2out_init (asm_out_file, main_input_filename)\n      register FILE *asm_out_file;\n      register const char *main_input_filename;\n {\n+  init_file_table ();\n+\n   /* Remember the name of the primary input file.  */\n   primary_filename = main_input_filename;\n \n-  init_file_table ();\n+  /* Add it to the file table first, under the assumption that we'll\n+     be emitting line number data for it first, which avoids having\n+     to add an initial DW_LNS_set_file.  */\n+  lookup_filename (main_input_filename);\n \n   /* Allocate the initial hunk of the decl_die_table.  */\n   decl_die_table"}]}