{"sha": "63894de2a2b9c1520afee0622d4d87e81dd3f200", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4OTRkZTJhMmI5YzE1MjBhZmVlMDYyMmQ0ZDg3ZTgxZGQzZjIwMA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-01-19T22:21:35Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-01-19T22:21:35Z"}, "message": "re PR fortran/42804 (ICE with -fcheck=bounds and type bound procedure call on array element)\n\ngcc/fortran/\n2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42804\n\t* resolve.c (extract_compcall_passed_object): Set locus for\n\tpassed-object argument.\n\t(extract_ppc_passed_object): Set locus and correctly remove PPC\n\treference.\n\ngcc/testsuite/\n2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42804\n\t* gfortran.dg/proc_ptr_comp_pass_6.f90: New test.\n\t* gfortran.dg/typebound_call_12.f03: New test.\n\nFrom-SVN: r156049", "tree": {"sha": "d382be0f1d918295a14ae96f177d80806e1c2787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d382be0f1d918295a14ae96f177d80806e1c2787"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63894de2a2b9c1520afee0622d4d87e81dd3f200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63894de2a2b9c1520afee0622d4d87e81dd3f200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63894de2a2b9c1520afee0622d4d87e81dd3f200", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63894de2a2b9c1520afee0622d4d87e81dd3f200/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "702a738bdbd231eb88fb12c3383e6443c7a5fe73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/702a738bdbd231eb88fb12c3383e6443c7a5fe73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/702a738bdbd231eb88fb12c3383e6443c7a5fe73"}], "stats": {"total": 89, "additions": 88, "deletions": 1}, "files": [{"sha": "1c29ff473b3813d7daf7a0e48dc4e58c3839850b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=63894de2a2b9c1520afee0622d4d87e81dd3f200", "patch": "@@ -1,3 +1,11 @@\n+2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42804\n+\t* resolve.c (extract_compcall_passed_object): Set locus for\n+\tpassed-object argument.\n+\t(extract_ppc_passed_object): Set locus and correctly remove PPC\n+\treference.\n+\n 2010-01-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/42783"}, {"sha": "fe98b7e0a5453f767d2268fe8d9b8522fcaea79c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=63894de2a2b9c1520afee0622d4d87e81dd3f200", "patch": "@@ -4777,6 +4777,7 @@ extract_compcall_passed_object (gfc_expr* e)\n       po->expr_type = EXPR_VARIABLE;\n       po->symtree = e->symtree;\n       po->ref = gfc_copy_ref (e->ref);\n+      po->where = e->where;\n     }\n \n   if (gfc_resolve_expr (po) == FAILURE)\n@@ -4831,11 +4832,12 @@ extract_ppc_passed_object (gfc_expr *e)\n   po->expr_type = EXPR_VARIABLE;\n   po->symtree = e->symtree;\n   po->ref = gfc_copy_ref (e->ref);\n+  po->where = e->where;\n \n   /* Remove PPC reference.  */\n   ref = &po->ref;\n   while ((*ref)->next)\n-    (*ref) = (*ref)->next;\n+    ref = &(*ref)->next;\n   gfc_free_ref_list (*ref);\n   *ref = NULL;\n "}, {"sha": "33e9cc84bf7f1afdcd21583a06fa6e6dccbe9758", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63894de2a2b9c1520afee0622d4d87e81dd3f200", "patch": "@@ -1,3 +1,9 @@\n+2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42804\n+\t* gfortran.dg/proc_ptr_comp_pass_6.f90: New test.\n+\t* gfortran.dg/typebound_call_12.f03: New test.\n+\n 2010-01-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/42783"}, {"sha": "8898a597d53ae48b10902c97103659ac9b70d79c", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_pass_6.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_6.f90?ref=63894de2a2b9c1520afee0622d4d87e81dd3f200", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+! { dg-options \"-fcheck=bounds\" }\n+!\n+! PR 42804: ICE with -fcheck=bounds and type bound procedure call on array element\n+!\n+! Contributed by Ian Harvey <ian_harvey@bigpond.com>\n+\n+MODULE ModA\n+  IMPLICIT NONE\n+  TYPE, PUBLIC :: A\n+    PROCEDURE(a_proc),pointer :: Proc\n+  END TYPE A\n+CONTAINS\n+  SUBROUTINE a_proc(this, stat)\n+    CLASS(A), INTENT(INOUT) :: this\n+    INTEGER, INTENT(OUT) :: stat\n+    WRITE (*, *) 'a_proc'\n+    stat = 0\n+  END SUBROUTINE a_proc\n+END MODULE ModA\n+\n+PROGRAM ProgA\n+  USE ModA\n+  IMPLICIT NONE\n+  INTEGER :: ierr\n+  INTEGER :: i\n+  TYPE(A), ALLOCATABLE :: arr(:)\n+  ALLOCATE(arr(2))\n+  DO i = 1, 2\n+    arr(i)%proc => a_proc\n+    CALL arr(i)%Proc(ierr)\n+  END DO\n+END PROGRAM ProgA\n+\n+! { dg-final { cleanup-modules \"ModA\" } }"}, {"sha": "afb0fda71a466d5704badeb3882e7250aef8da04", "filename": "gcc/testsuite/gfortran.dg/typebound_call_12.f03", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_12.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63894de2a2b9c1520afee0622d4d87e81dd3f200/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_12.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_12.f03?ref=63894de2a2b9c1520afee0622d4d87e81dd3f200", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+! { dg-options \"-fcheck=bounds\" }\n+!\n+! PR 42804: ICE with -fcheck=bounds and type bound procedure call on array element\n+!\n+! Contributed by Ian Harvey <ian_harvey@bigpond.com>\n+\n+MODULE ModA\n+  IMPLICIT NONE\n+  PRIVATE\n+  TYPE, PUBLIC :: A\n+  CONTAINS\n+    PROCEDURE :: Proc => a_proc\n+  END TYPE A\n+CONTAINS\n+  SUBROUTINE a_proc(this, stat)\n+    CLASS(A), INTENT(INOUT) :: this\n+    INTEGER, INTENT(OUT) :: stat\n+    WRITE (*, *) 'a_proc'\n+    stat = 0\n+  END SUBROUTINE a_proc\n+END MODULE ModA\n+\n+PROGRAM ProgA\n+  USE ModA\n+  IMPLICIT NONE\n+  INTEGER :: ierr\n+  INTEGER :: i\n+  TYPE(A), ALLOCATABLE :: arr(:)\n+  ALLOCATE(arr(2))\n+  DO i = 1, 2\n+    CALL arr(i)%Proc(ierr)\n+  END DO\n+END PROGRAM ProgA\n+ \n+! { dg-final { cleanup-modules \"ModA\" } }"}]}