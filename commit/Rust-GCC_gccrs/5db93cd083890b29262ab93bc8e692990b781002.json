{"sha": "5db93cd083890b29262ab93bc8e692990b781002", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiOTNjZDA4Mzg5MGIyOTI2MmFiOTNiYzhlNjkyOTkwYjc4MTAwMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T08:42:37Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T13:30:56Z"}, "message": "Skip statements with no BB in ranger.\n\nThe function postfold_gcond_edges() registers relations coming out of a\nGIMPLE_COND.  With upcoming changes, we may be called with statements\nnot in the IL (for example, dummy statements created by the\nforward threader).  This patch avoids breakage by exiting if the\nstatement does not have a defining basic block.  There is a similar\nchange to the path solver.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-range-fold.cc (fold_using_range::postfold_gcond_edges):\n\tSkip statements with no defining BB.\n\t* gimple-range-path.cc (path_range_query::range_defined_in_block):\n\tDo not get confused by statements with no defining BB.", "tree": {"sha": "45793b098773cb0e73558f5e2542306e5ceca2d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45793b098773cb0e73558f5e2542306e5ceca2d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db93cd083890b29262ab93bc8e692990b781002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db93cd083890b29262ab93bc8e692990b781002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db93cd083890b29262ab93bc8e692990b781002", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db93cd083890b29262ab93bc8e692990b781002/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bccf4b88e184e925ee2d7931e4cf09704f1c3932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bccf4b88e184e925ee2d7931e4cf09704f1c3932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bccf4b88e184e925ee2d7931e4cf09704f1c3932"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "7cf8830fc5d7b2099a66bb66dad9241e38d771b1", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db93cd083890b29262ab93bc8e692990b781002/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db93cd083890b29262ab93bc8e692990b781002/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=5db93cd083890b29262ab93bc8e692990b781002", "patch": "@@ -1360,6 +1360,10 @@ fold_using_range::postfold_gcond_edges (gcond *s, irange& lhs_range,\n   range_operator *handler;\n   basic_block bb = gimple_bb (s);\n \n+  // We may get asked to fold an artificial statement not in the CFG.\n+  if (!bb)\n+    return;\n+\n   edge e0 = EDGE_SUCC (bb, 0);\n   if (!single_pred_p (e0->dest))\n     e0 = NULL;"}, {"sha": "77b823e7bd5e6ecede5e96db1edd6716b598db34", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db93cd083890b29262ab93bc8e692990b781002/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db93cd083890b29262ab93bc8e692990b781002/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=5db93cd083890b29262ab93bc8e692990b781002", "patch": "@@ -221,14 +221,19 @@ path_range_query::range_defined_in_block (irange &r, tree name, basic_block bb)\n   else if (!fold_range (r, def_stmt, this))\n     r.set_varying (TREE_TYPE (name));\n \n-  if (DEBUG_SOLVER)\n+  if (DEBUG_SOLVER && (bb || !r.varying_p ()))\n     {\n-      fprintf (dump_file, \"range_defined_in_block (BB%d) for \", bb->index);\n+      fprintf (dump_file, \"range_defined_in_block (BB%d) for \", bb ? bb->index : -1);\n       print_generic_expr (dump_file, name, TDF_SLIM);\n       fprintf (dump_file, \" is \");\n       r.dump (dump_file);\n       fprintf (dump_file, \"\\n\");\n     }\n+\n+  // We may have an artificial statement not in the IL.\n+  if (!bb && r.varying_p ())\n+    return false;\n+\n   return true;\n }\n "}]}