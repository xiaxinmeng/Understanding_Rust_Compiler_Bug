{"sha": "99ac47b5d2a8ce1cf512a505879d6fedcec89308", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlhYzQ3YjVkMmE4Y2UxY2Y1MTJhNTA1ODc5ZDZmZWRjZWM4OTMwOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T20:06:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T20:06:00Z"}, "message": "(initdcl, notype_initdcl): Pass attributes to start_decl; delete call\nto decl_attributes.\n\nFrom-SVN: r9442", "tree": {"sha": "19f13f3f32fad3839bf3aefd17e5849cc00ae62b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19f13f3f32fad3839bf3aefd17e5849cc00ae62b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99ac47b5d2a8ce1cf512a505879d6fedcec89308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ac47b5d2a8ce1cf512a505879d6fedcec89308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99ac47b5d2a8ce1cf512a505879d6fedcec89308", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ac47b5d2a8ce1cf512a505879d6fedcec89308/comments", "author": null, "committer": null, "parents": [{"sha": "17ea663341d6a003a9557966687297a3fe7987f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ea663341d6a003a9557966687297a3fe7987f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17ea663341d6a003a9557966687297a3fe7987f6"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "747d3eff54aad1a9d8c1bc828cdc721c045cd519", "filename": "gcc/c-parse.in", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ac47b5d2a8ce1cf512a505879d6fedcec89308/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ac47b5d2a8ce1cf512a505879d6fedcec89308/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=99ac47b5d2a8ce1cf512a505879d6fedcec89308", "patch": "@@ -1038,33 +1038,33 @@ maybeasm:\n \n initdcl:\n \t  declarator maybeasm maybe_attribute '='\n-\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1);\n-\t\t  decl_attributes ($<ttype>$, $3, prefix_attributes);\n+\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1,\n+\t\t\t\t\t  $3, prefix_attributes);\n \t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n \t  init\n /* Note how the declaration of the variable is in effect while its init is parsed! */\n \t\t{ finish_init ();\n \t\t  finish_decl ($<ttype>5, $6, $2); }\n \t| declarator maybeasm maybe_attribute\n-\t\t{ tree d = start_decl ($1, current_declspecs, 0);\n-\t\t  decl_attributes (d, $3, prefix_attributes);\n+\t\t{ tree d = start_decl ($1, current_declspecs, 0,\n+\t\t\t\t       $3, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, $2); \n                 }\n \t;\n \n notype_initdcl:\n \t  notype_declarator maybeasm maybe_attribute '='\n-\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1);\n-\t\t  decl_attributes ($<ttype>$, $3, prefix_attributes);\n+\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1,\n+\t\t\t\t\t  $3, prefix_attributes);\n \t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n \t  init\n /* Note how the declaration of the variable is in effect while its init is parsed! */\n \t\t{ finish_init ();\n \t\t  decl_attributes ($<ttype>5, $3, prefix_attributes);\n \t\t  finish_decl ($<ttype>5, $6, $2); }\n \t| notype_declarator maybeasm maybe_attribute\n-\t\t{ tree d = start_decl ($1, current_declspecs, 0);\n-\t\t  decl_attributes (d, $3, prefix_attributes);\n+\t\t{ tree d = start_decl ($1, current_declspecs, 0,\n+\t\t\t\t       $3, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, $2); }\n \t;\n /* the * rules are dummies to accept the Apollo extended syntax"}]}