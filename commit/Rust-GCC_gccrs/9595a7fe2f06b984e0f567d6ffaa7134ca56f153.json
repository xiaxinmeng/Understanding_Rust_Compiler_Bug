{"sha": "9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5NWE3ZmUyZjA2Yjk4NGUwZjU2N2Q2ZmZhYTcxMzRjYTU2ZjE1Mw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-08-20T01:33:15Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-08-20T01:33:15Z"}, "message": "URISyntaxException.java: New file.\n\n2002-08-20  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/URISyntaxException.java: New file.\n\t* java/net/SocketTimeoutException.java: New file.\n\t* java/net/PortUnreachableException.java: New file.\n\t* Makefile.am: Updated.\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r56452", "tree": {"sha": "80a25bfdb69fd31ac2b473cedf91dca15df20b32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80a25bfdb69fd31ac2b473cedf91dca15df20b32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/comments", "author": null, "committer": null, "parents": [{"sha": "1bd5981b33ab83a5f1745bda7bd7d97d23e84f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd5981b33ab83a5f1745bda7bd7d97d23e84f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd5981b33ab83a5f1745bda7bd7d97d23e84f4b"}], "stats": {"total": 289, "additions": 284, "deletions": 5}, "files": [{"sha": "a7ff4e8a823260c76322151c53fdcde8c7347a44", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "patch": "@@ -1,3 +1,11 @@\n+2002-08-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/URISyntaxException.java: New file.\n+\t* java/net/SocketTimeoutException.java: New file.\n+\t* java/net/PortUnreachableException.java: New file.\t\n+\t* Makefile.am: Updated.\n+\t* Makefile.in: Rebuilt.\n+\n 2002-08-18  Mark Wielaard  <mark@klomp.org>\n \n \tThanks to Vladimir Puskas <vpuskas@eunet.yu>"}, {"sha": "15719b2b7d94ef71b7d650a8aa4245179965251f", "filename": "libjava/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "patch": "@@ -1894,6 +1894,7 @@ java/net/NoRouteToHostException.java \\\n java/net/PasswordAuthentication.java \\\n java/net/PlainDatagramSocketImpl.java \\\n java/net/PlainSocketImpl.java \\\n+java/net/PortUnreachableException.java \\\n java/net/ProtocolException.java\t\\\n java/net/ServerSocket.java \\\n java/net/Socket.java \\\n@@ -1902,6 +1903,8 @@ java/net/SocketImpl.java \\\n java/net/SocketImplFactory.java\t\\\n java/net/SocketOptions.java \\\n java/net/SocketPermission.java \\\n+java/net/SocketTimeoutException.java \\\n+java/net/URISyntaxException.java \\\n java/net/URL.java \\\n java/net/URLClassLoader.java \\\n java/net/URLConnection.java \\"}, {"sha": "7a8c7f42933075fcfbf41bd26f590abaaf95a892", "filename": "libjava/Makefile.in", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "patch": "@@ -1656,6 +1656,7 @@ java/net/NoRouteToHostException.java \\\n java/net/PasswordAuthentication.java \\\n java/net/PlainDatagramSocketImpl.java \\\n java/net/PlainSocketImpl.java \\\n+java/net/PortUnreachableException.java \\\n java/net/ProtocolException.java\t\\\n java/net/ServerSocket.java \\\n java/net/Socket.java \\\n@@ -1664,6 +1665,8 @@ java/net/SocketImpl.java \\\n java/net/SocketImplFactory.java\t\\\n java/net/SocketOptions.java \\\n java/net/SocketPermission.java \\\n+java/net/SocketTimeoutException.java \\\n+java/net/URISyntaxException.java \\\n java/net/URL.java \\\n java/net/URLClassLoader.java \\\n java/net/URLConnection.java \\\n@@ -2860,11 +2863,14 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/net/NetPermission.P .deps/java/net/NoRouteToHostException.P \\\n .deps/java/net/PasswordAuthentication.P \\\n .deps/java/net/PlainDatagramSocketImpl.P \\\n-.deps/java/net/PlainSocketImpl.P .deps/java/net/ProtocolException.P \\\n-.deps/java/net/ServerSocket.P .deps/java/net/Socket.P \\\n-.deps/java/net/SocketException.P .deps/java/net/SocketImpl.P \\\n-.deps/java/net/SocketImplFactory.P .deps/java/net/SocketOptions.P \\\n-.deps/java/net/SocketPermission.P .deps/java/net/URL.P \\\n+.deps/java/net/PlainSocketImpl.P \\\n+.deps/java/net/PortUnreachableException.P \\\n+.deps/java/net/ProtocolException.P .deps/java/net/ServerSocket.P \\\n+.deps/java/net/Socket.P .deps/java/net/SocketException.P \\\n+.deps/java/net/SocketImpl.P .deps/java/net/SocketImplFactory.P \\\n+.deps/java/net/SocketOptions.P .deps/java/net/SocketPermission.P \\\n+.deps/java/net/SocketTimeoutException.P \\\n+.deps/java/net/URISyntaxException.P .deps/java/net/URL.P \\\n .deps/java/net/URLClassLoader.P .deps/java/net/URLConnection.P \\\n .deps/java/net/URLDecoder.P .deps/java/net/URLEncoder.P \\\n .deps/java/net/URLStreamHandler.P \\"}, {"sha": "b31bcbcd6a330bc7d7edb8fa1045fdfd76a75de1", "filename": "libjava/java/net/PortUnreachableException.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2Fjava%2Fnet%2FPortUnreachableException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2Fjava%2Fnet%2FPortUnreachableException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FPortUnreachableException.java?ref=9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "patch": "@@ -0,0 +1,68 @@\n+/* PortUnreachableException.java\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package java.net;\n+\n+import java.io.IOException;\n+\n+/**\n+ * This exception indicates that a URL passed to an object was not in a\n+ * valid format.\n+ *\n+ * @author Michael Koch <konqueror@gmx.de>\n+ * @since 1.4\n+ * @status should be completely JDK 1.4 compatible\n+ */\n+public class PortUnreachableException extends IOException\n+{\n+  /**\n+   * Create a new instance without a descriptive error message.\n+   */\n+  public PortUnreachableException()\n+  {\n+  }\n+\n+  /**\n+   * Create a new instance with a descriptive error message.\n+   *\n+   * @param message a message describing the error that occurred\n+   */\n+  public PortUnreachableException(String message)\n+  {\n+    super(message);\n+  }\n+} // class PortUnreachableException"}, {"sha": "3c341b30ccbdfcf258454c854e137926c9202779", "filename": "libjava/java/net/SocketTimeoutException.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2Fjava%2Fnet%2FSocketTimeoutException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2Fjava%2Fnet%2FSocketTimeoutException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocketTimeoutException.java?ref=9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "patch": "@@ -0,0 +1,69 @@\n+/* SocketTimeoutException.java\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package java.net;\n+\n+import java.io.IOException;\n+\n+/**\n+ * This exception indicates that a generic error occurred related to an\n+ * operation on a socket.  Check the descriptive message (if any) for\n+ * details on the nature of this error\n+ *\n+ * @author Michael Koch <konqueror@gmx.de>\n+ * @since 1.4\n+ * @status should be completele JDK 1.4 compatible\n+ */\n+public class SocketTimeoutException extends IOException\n+{\n+  /**\n+   * Create a new instance without a descriptive error message.\n+   */\n+  public SocketTimeoutException()\n+  {\n+  }\n+\n+  /**\n+   * Create a new instance with a descriptive error message.\n+   *\n+   * @param message a message describing the error that occurred\n+   */\n+  public SocketTimeoutException(String message)\n+  {\n+    super(message);\n+  }\n+} // class SocketTimeoutException"}, {"sha": "2ca799e11fc5f8c63f43c31ca0208a435ffb288a", "filename": "libjava/java/net/URISyntaxException.java", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2Fjava%2Fnet%2FURISyntaxException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9595a7fe2f06b984e0f567d6ffaa7134ca56f153/libjava%2Fjava%2Fnet%2FURISyntaxException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURISyntaxException.java?ref=9595a7fe2f06b984e0f567d6ffaa7134ca56f153", "patch": "@@ -0,0 +1,125 @@\n+/* URISyntaxException.java\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package java.net;\n+\n+/**\n+ * This exception indicates that a generic error occurred related to an\n+ * operation on a socket.  Check the descriptive message (if any) for\n+ * details on the nature of this error\n+ *\n+ * @author Michael Koch <konqueror@gmx.de>\n+ * @since 1.4\n+ * @status Should be completely JDK 1.4 compatible\n+ */\n+public class URISyntaxException extends Exception\n+{\n+  private String input;\n+  private String reason;\n+  private int index;\n+ \n+  /**\n+   * @param input Input that cause the exception\n+   * @param reason Reason of the exception\n+   * @param index Position of the index or -1 if unknown\n+   *\n+   * @exception NullPointerException\n+   * @exception IllegalArgumentException\n+   */\n+  public URISyntaxException(String input, String reason, int index)\n+  {\n+    if (input == null || reason == null)\n+      throw new NullPointerException();\n+    \n+    if (index < -1)\n+      throw new IllegalArgumentException();\n+\n+    this.input = input;\n+    this.reason = reason;\n+    this.index = index;\n+  }\n+\n+  /**\n+   * @param input Input that cause the exception\n+   * @param reason Reason of the exception\n+   *\n+   * @exception NullPointerException\n+   */\n+  public URISyntaxException(String input, String reason)\n+  {\n+    if (input == null || reason == null)\n+      throw new NullPointerException();\n+    \n+    this.input = input;\n+    this.reason = reason;\n+    this.index = -1;\n+  }\n+\n+  /**\n+   * @return Returns the input that caused this exception\n+   */\n+  public String getInput()\n+  {\n+    return input;\n+  }\n+\n+  /**\n+   * @return Returns the reason of this exception\n+   */\n+  public String getReason()\n+  {\n+    return reason;\n+  }\n+\n+  /**\n+   * @return Returns the index/position of this exception or -1 if unknown\n+   */\n+  public int getIndex()\n+  {\n+    return index;\n+  }\n+\n+  /**\n+   * This function returns an error message including input and reason.\n+   * \n+   * @return Returns a exception message\n+   */\n+  public String getMessage()\n+  {\n+    return input + \":\" + reason;\n+  }\n+} // class URISyntaxException"}]}