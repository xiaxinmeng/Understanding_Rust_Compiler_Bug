{"sha": "353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "node_id": "C_kwDOANBUbNoAKDM1M2ZkMWVjM2RmOTJmYmU2NmNlMTUxM2M1YTg2YmRkNWM1ZTIyZDE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-02T07:58:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-02T13:06:06Z"}, "message": "Properly honor param_max_fsm_thread_path_insns in backwards threader\n\nI am trying to make sense of back_threader_profitability::profitable_path_p\nand the first thing I notice is that we do\n\n  /* Threading is profitable if the path duplicated is hot but also\n     in a case we separate cold path from hot path and permit optimization\n     of the hot path later.  Be on the agressive side here. In some testcases,\n     as in PR 78407 this leads to noticeable improvements.  */\n  if (m_speed_p\n      && ((taken_edge && optimize_edge_for_speed_p (taken_edge))\n          || contains_hot_bb))\n    {\n      if (n_insns >= param_max_fsm_thread_path_insns)\n        {\n          if (dump_file && (dump_flags & TDF_DETAILS))\n            fprintf (dump_file, \"  FAIL: Jump-thread path not considered: \"\n                     \"the number of instructions on the path \"\n                     \"exceeds PARAM_MAX_FSM_THREAD_PATH_INSNS.\\n\");\n          return false;\n        }\n...\n    }\n  else if (!m_speed_p && n_insns > 1)\n    {\n      if (dump_file && (dump_flags & TDF_DETAILS))\n        fprintf (dump_file, \"  FAIL: Jump-thread path not considered: \"\n                 \"duplication of %i insns is needed and optimizing for size.\\n\",\n                 n_insns);\n      return false;\n    }\n...\n  return true;\n\nthus we apply the n_insns >= param_max_fsm_thread_path_insns only\nto \"hot paths\".  The comment above this isn't entirely clear whether\nthis is by design (\"Be on the aggressive side here ...\") but I think\nthis is a mistake.  In fact the \"hot path\" check seems entirely\nuseless since if the path is not hot we simply continue threading it.\n\nThis was caused by r12-324-g69e5544210e3c0 and the following simply\nreverts the offending change.\n\n\t* tree-ssa-threadbackward.cc\n\t(back_threader_profitability::profitable_path_p): Apply\n\tsize constraints to all paths again.", "tree": {"sha": "5176159b51b2516d90d675bc00db12abb797cd96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5176159b51b2516d90d675bc00db12abb797cd96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24012539ae3410174b3e755b580a16de826d56a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24012539ae3410174b3e755b580a16de826d56a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24012539ae3410174b3e755b580a16de826d56a6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ba114e98a41cf90397f3462933dcb9cc3763735b", "filename": "gcc/tree-ssa-threadbackward.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1/gcc%2Ftree-ssa-threadbackward.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1/gcc%2Ftree-ssa-threadbackward.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.cc?ref=353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "patch": "@@ -794,7 +794,7 @@ back_threader_profitability::profitable_path_p (const vec<basic_block> &m_path,\n \t  return false;\n \t}\n     }\n-  else if (!m_speed_p && n_insns > 1)\n+  else if (n_insns > 1)\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file, \"  FAIL: Jump-thread path not considered: \""}]}