{"sha": "88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhiZjFmYWY1N2RhZTJmZDM4ZjNmYjE1MmE4ZWQ1YjJhYWUzYTRhMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-09-02T09:23:14Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-09-02T09:23:14Z"}, "message": "ambig2.C: New test.\n\n\t* g++.old-deja/g++.other/ambig2.C: New test.\n\t* g++.old-deja/g++.other/cond5.C: New test.\n\t* g++.old-deja/g++.other/lookup16.C: New test.\n\nFrom-SVN: r29057", "tree": {"sha": "49c09b3f712d3ec6be746b6889c32d3202cbbafb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49c09b3f712d3ec6be746b6889c32d3202cbbafb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b4d752a6422fad640ac6c18ad49a424b02f4849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4d752a6422fad640ac6c18ad49a424b02f4849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4d752a6422fad640ac6c18ad49a424b02f4849"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "2bf872df10ac50b300ef2115a5aa8b270a4c913b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "patch": "@@ -1,3 +1,9 @@\n+Thu Sep 02 09:27:34 BST 1999  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.old-deja/g++.other/ambig2.C: New test.\n+\t* g++.old-deja/g++.other/cond5.C: New test.\n+\t* g++.old-deja/g++.other/lookup16.C: New test.\n+\n Thu Sep  2 01:17:51 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* gcc.dg/980414-1.c: Fix assembler syntax to work with old"}, {"sha": "a8463ab909b485ec48555bd2fd4838fa9b759033", "filename": "gcc/testsuite/g++.old-deja/g++.other/ambig2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fambig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fambig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fambig2.C?ref=88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "patch": "@@ -0,0 +1,21 @@\n+// Build don't link:\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 29 Aug 1999 <nathan@acm.org>\n+\n+// We should spot all ambiguities\n+\n+struct A {int m;};\n+struct B : A { int m; };\n+struct C : A { int m; };\n+struct D0 : virtual B, virtual C { int m; };\n+struct D1 : virtual B, C { int m; };\n+struct D2 : B, virtual C { int m; };\n+struct D3 : B, C { int m; };\n+\n+void fn(D0 *d0, D1 *d1, D2 *d2, D3 *d3)\n+{\n+  A *a0 = d0;   // ERROR - A is an ambiguous base\n+  A *a1 = d1;   // ERROR - A is an ambiguous base\n+  A *a2 = d2;   // ERROR - A is an ambiguous base\n+  A *a3 = d3;   // ERROR - A is an ambiguous base\n+}"}, {"sha": "fb561e26724b97371c7cfc4c326342450a7af540", "filename": "gcc/testsuite/g++.old-deja/g++.other/cond5.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcond5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcond5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcond5.C?ref=88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "patch": "@@ -0,0 +1,45 @@\n+// Build don't link:\n+// Special g++ Options: -W -pedantic -ansi\n+\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 1 Sep 1999 <nathan@acm.org>\n+// Derived from bug report from Gabriel Dos Reis\n+// <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n+// http://egcs.cygnus.com/ml/egcs-bugs/1999-03/msg00883.html\n+\n+// conditional exprs have some funny rules when one of the types is void.\n+// [expr.cond] 5.16, make sure we do the right things\n+// We have checks for mismatching enumerations, check we give them -- they had\n+// got lost due to changes in add_builtin_candidate and subsequent changes.\n+\n+struct X {};\n+enum E1 {e1 = -1};\n+enum E2 {e2 = -1};\n+void f(int, ...);\n+\n+void fn(int i)\n+{\n+  double d;\n+  int j;\n+\n+  j = (i ? e1 : e2);    // WARNING - mismatch\n+  d = (i ? e1 : 1.0);   // WARNING - mismatch\n+  d = (i ? 1.0 : e2);   // WARNING - mismatch\n+  E1 e = (i ? e1 : e1); // ok\n+  j = (i ? 1 : e2);     // ok\n+  j = (i ? e1 : 1);     // ok\n+  \n+  j = (i ? throw X() : 1); // ok, int\n+  j = (i ? 1 : throw X()); // ok, int\n+  \n+  (i ? throw X() : throw X());  // ok, void\n+  \n+  (i ? i : j) = 1; // ok, int &\n+  (i ? throw X() : j) = 1;    // ERROR - non lvalue\n+  (i ? j : throw X()) = 1;    // ERROR - non lvalue\n+  (i ? throw X() : throw X()) = 1;  // ERROR - invalid use of void\n+  \n+  (i ? (void)1 : i++);        // WARNING - not a throw\n+  (i ? i++ : (void)1);        // WARNING - not a throw\n+  \n+}"}, {"sha": "9cf8404307c7b3c70c5546e09042cda33a736092", "filename": "gcc/testsuite/g++.old-deja/g++.other/lookup16.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup16.C?ref=88bf1faf57dae2fd38f3fb152a8ed5b2aae3a4a0", "patch": "@@ -0,0 +1,30 @@\n+// Build don't link:\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 25 Aug 1999 <nathan@acm.org>\n+\n+// typenames are not injected early enough, [basic.scope.pdecl]3.3.1/4\n+// indicates this should compile.\n+\n+struct A {\n+};\n+\n+struct B : A {\n+  typedef A Parent;\n+  struct F {\n+  };\n+};\n+\n+struct C : B {\n+  typedef B Parent;\n+  struct G {};\n+  struct F : C::Parent::F {\n+    typedef C::Parent::F Parent;\n+  };\n+};\n+\n+struct D : B {\n+  typedef B Parent;\n+  struct F : D::Parent::F {\n+    typedef D::Parent::F Parent;\n+  };\n+};"}]}