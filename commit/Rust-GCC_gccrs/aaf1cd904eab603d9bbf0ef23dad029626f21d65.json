{"sha": "aaf1cd904eab603d9bbf0ef23dad029626f21d65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmMWNkOTA0ZWFiNjAzZDliYmYwZWYyM2RhZDAyOTYyNmYyMWQ2NQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2012-02-22T13:50:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-22T13:50:02Z"}, "message": "exp_ch5.adb: Add comment.\n\n2012-02-22  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb: Add comment.\n\t* sem_ch12.adb, exp_ch6.adb: minor reformatting\n\nFrom-SVN: r184472", "tree": {"sha": "d022ac4fd9781249be4adc6771d7a30654b03922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d022ac4fd9781249be4adc6771d7a30654b03922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaf1cd904eab603d9bbf0ef23dad029626f21d65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf1cd904eab603d9bbf0ef23dad029626f21d65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf1cd904eab603d9bbf0ef23dad029626f21d65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf1cd904eab603d9bbf0ef23dad029626f21d65/comments", "author": null, "committer": null, "parents": [{"sha": "84c4181d3b2b772d5e5efba12ed215834c862fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c4181d3b2b772d5e5efba12ed215834c862fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c4181d3b2b772d5e5efba12ed215834c862fc6"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "5353e3ee1c95c6e3a0175521a34f484802d333ca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aaf1cd904eab603d9bbf0ef23dad029626f21d65", "patch": "@@ -1,3 +1,8 @@\n+2012-02-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb: Add comment.\n+\t* sem_ch12.adb, exp_ch6.adb: minor reformatting\n+\n 2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* freeze.adb (Freeze_Entity): Do not perform type layout within"}, {"sha": "2b170a6c4653e5fe6441c07b2a6654337464a49a", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=aaf1cd904eab603d9bbf0ef23dad029626f21d65", "patch": "@@ -2095,6 +2095,9 @@ package body Exp_Ch5 is\n                   --  is not caught at the point of instantiation in earlier\n                   --  versions.\n \n+                  --  This is wrong, error messages cannot be issued during\n+                  --  expansion, since they would be missed in -gnatc mode ???\n+\n                   Error_Msg_N (\"assignment not available on limited type\", N);\n                   return;\n                end if;"}, {"sha": "10ee14ac1310c2c30d8149cc3557ee56c4510858", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=aaf1cd904eab603d9bbf0ef23dad029626f21d65", "patch": "@@ -1418,11 +1418,14 @@ package body Exp_Ch6 is\n \n          if Is_By_Reference_Type (Etype (Formal)) then\n \n-         --  If the front-end does not perform full type layout, the actual\n-         --  may in fact be properly aligned but there is not enough front-end\n-         --  information to determine this. In that case gigi will emit an\n-         --  error if a copy is not legal, or generate the proper code.\n-         --  For other backends we report the error now.\n+            --  If the front-end does not perform full type layout, the actual\n+            --  may in fact be properly aligned but there is not enough front-\n+            --  end information to determine this. In that case gigi will emit\n+            --  an error if a copy is not legal, or generate the proper code.\n+            --  For other backends we report the error now.\n+\n+            --  Seems wrong to be issuing an error in the expander, since it\n+            --  will be missed in -gnatc mode ???\n \n             if Frontend_Layout_On_Target then\n                Error_Msg_N\n@@ -6130,7 +6133,6 @@ package body Exp_Ch6 is\n \n          begin\n             Set_Has_Completion (Subp, False);\n-            --  Set_Has_Delayed_Freeze (Subp);\n             Append_Freeze_Action (Subp, Bod);\n \n             --  The body now contains raise statements, so calls to it will"}, {"sha": "c463e57199c0b033bd1e448d6cb51590aac37510", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf1cd904eab603d9bbf0ef23dad029626f21d65/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=aaf1cd904eab603d9bbf0ef23dad029626f21d65", "patch": "@@ -3730,8 +3730,8 @@ package body Sem_Ch12 is\n          --  (Could we do better and remove the original body???)\n \n          if Distribution_Stub_Mode = Generate_Caller_Stub_Body\n-              and then Comes_From_Source (N)\n-              and then Nkind (Parent (N)) = N_Compilation_Unit\n+           and then Comes_From_Source (N)\n+           and then Nkind (Parent (N)) = N_Compilation_Unit\n          then\n             Needs_Body := False;\n          end if;\n@@ -3741,9 +3741,7 @@ package body Sem_Ch12 is\n             --  Here is a defence against a ludicrous number of instantiations\n             --  caused by a circular set of instantiation attempts.\n \n-            if Pending_Instantiations.Last >\n-                 Hostparm.Max_Instantiations\n-            then\n+            if Pending_Instantiations.Last > Hostparm.Max_Instantiations then\n                Error_Msg_N (\"too many instantiations\", N);\n                raise Unrecoverable_Error;\n             end if;\n@@ -3857,13 +3855,13 @@ package body Sem_Ch12 is\n             Insert_Before (N, Act_Decl);\n             Analyze (Act_Decl);\n \n-         --  For an instantiation that is a compilation unit, place declaration\n-         --  on current node so context is complete for analysis (including\n-         --  nested instantiations). If this is the main unit, the declaration\n-         --  eventually replaces the instantiation node. If the instance body\n-         --  is created later, it replaces the instance node, and the\n-         --  declaration is attached to it (see\n-         --  Build_Instance_Compilation_Unit_Nodes).\n+         --  For an instantiation that is a compilation unit, place\n+         --  declaration on current node so context is complete for analysis\n+         --  (including nested instantiations). If this is the main unit,\n+         --  the declaration eventually replaces the instantiation node.\n+         --  If the instance body is created later, it replaces the\n+         --  instance node, and the declaration is attached to it\n+         --  (see Build_Instance_Compilation_Unit_Nodes).\n \n          else\n             if Cunit_Entity (Current_Sem_Unit) = Defining_Entity (N) then"}]}