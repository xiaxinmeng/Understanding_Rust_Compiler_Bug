{"sha": "de334ef66a24e7ab148d658bc91c780b22425cd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUzMzRlZjY2YTI0ZTdhYjE0OGQ2NThiYzkxYzc4MGIyMjQyNWNkNQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-10-26T17:36:29Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-10-26T17:36:29Z"}, "message": "rs6000.h (MEMBER_TYPE_FORCES_BLK): Adjust for e500 doubles.\n\n\t* config/rs6000/rs6000.h (MEMBER_TYPE_FORCES_BLK): Adjust for e500\n\tdoubles.\n\n[[Split portion of a mixed commit.]]\n\nFrom-SVN: r89592.2", "tree": {"sha": "35b5ebb4a8942f6518eaa7b60b580e87341325c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35b5ebb4a8942f6518eaa7b60b580e87341325c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de334ef66a24e7ab148d658bc91c780b22425cd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de334ef66a24e7ab148d658bc91c780b22425cd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de334ef66a24e7ab148d658bc91c780b22425cd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de334ef66a24e7ab148d658bc91c780b22425cd5/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2c5a1e912e708928f3f0697cb6248fd647bd85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c5a1e912e708928f3f0697cb6248fd647bd85b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c5a1e912e708928f3f0697cb6248fd647bd85b"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "9869e4174bd8505a2aa8726dd8aa1f0f1a592116", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de334ef66a24e7ab148d658bc91c780b22425cd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de334ef66a24e7ab148d658bc91c780b22425cd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de334ef66a24e7ab148d658bc91c780b22425cd5", "patch": "@@ -1,3 +1,8 @@\n+2004-10-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/rs6000/rs6000.h (MEMBER_TYPE_FORCES_BLK): Adjust for e500\n+\tdoubles.\n+\n 2004-10-26  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* stmt.c (expand_case): Update a comment."}, {"sha": "50b6ac1cfcc430de6ff190b8b110a9361cf8a59c", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de334ef66a24e7ab148d658bc91c780b22425cd5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de334ef66a24e7ab148d658bc91c780b22425cd5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=de334ef66a24e7ab148d658bc91c780b22425cd5", "patch": "@@ -759,9 +759,13 @@ extern const char *rs6000_warn_altivec_long_switch;\n    store_bit_field() will force (subreg:DI (reg:V2SI x))'s to the\n    back-end.  Because a single GPR can hold a V2SI, but not a DI, the\n    best thing to do is set structs to BLKmode and avoid Severe Tire\n-   Damage.  */\n+   Damage.\n+\n+   On e500 v2, DF and DI modes suffer from the same anomaly.  DF can\n+   fit into 1, whereas DI still needs two.  */\n #define MEMBER_TYPE_FORCES_BLK(FIELD, MODE) \\\n-  (TARGET_SPE && TREE_CODE (TREE_TYPE (FIELD)) == VECTOR_TYPE)\n+  ((TARGET_SPE && TREE_CODE (TREE_TYPE (FIELD)) == VECTOR_TYPE) \\\n+   || (TARGET_E500_DOUBLE && (MODE) == DFmode))\n \n /* A bit-field declared as `int' forces `int' alignment for the struct.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1"}]}