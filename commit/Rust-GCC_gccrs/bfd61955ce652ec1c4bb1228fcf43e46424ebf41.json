{"sha": "bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkNjE5NTVjZTY1MmVjMWM0YmIxMjI4ZmNmNDNlNDY0MjRlYmY0MQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-11-25T22:02:53Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-11-25T22:02:53Z"}, "message": "re PR fortran/34079 (Bind(C): Character argument/return value problems)\n\n2007-11-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34079\n        * trans-types.c (gfc_return_by_reference,\n        gfc_get_function_type): Do not return result of\n        character-returning bind(C) functions as argument.\n        * trans-expr.c (gfc_conv_function_call): Ditto.\n\n2007-11-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34079\n        * gfortran.dg/bind_c_usage_10_c.c: Fix comment.\n        * gfortran.dg/bind_c_usage_16.f03: New.\n        * gfortran.dg/bind_c_usage_16_c.c: New.\n\nFrom-SVN: r130414", "tree": {"sha": "7450a7309aad864e7a3b61af66cf21d340b9b297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7450a7309aad864e7a3b61af66cf21d340b9b297"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4b7c9cd4c2df850eda972f7257ec0cdc6e60aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b7c9cd4c2df850eda972f7257ec0cdc6e60aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b7c9cd4c2df850eda972f7257ec0cdc6e60aae"}], "stats": {"total": 118, "additions": 108, "deletions": 10}, "files": [{"sha": "2b4799af88e376eed3f3d11a34f5290750506aa0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -1,3 +1,11 @@\n+2007-11-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34079\n+\t* trans-types.c (gfc_return_by_reference,\n+\tgfc_get_function_type): Do not return result of\n+\tcharacter-returning bind(C) functions as argument.\n+\t* trans-expr.c (gfc_conv_function_call): Ditto.\n+\n 2007-11-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/34175"}, {"sha": "813e43da2db808c9a5932558841fb3b4495d723d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -2586,6 +2586,15 @@ gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,\n       && !sym->attr.always_explicit)\n     se->expr = fold_convert (gfc_get_real_type (sym->ts.kind), se->expr);\n \n+  /* Bind(C) character variables may have only length 1.  */\n+  if (sym->ts.type == BT_CHARACTER && sym->attr.is_bind_c)\n+    {\n+      gcc_assert (sym->ts.cl->length\n+\t\t  && sym->ts.cl->length->expr_type == EXPR_CONSTANT\n+\t\t  && mpz_cmp_si (sym->ts.cl->length->value.integer, 1));\n+      se->string_length = build_int_cst (gfc_charlen_type_node, 1);\n+    }\n+\n   /* A pure function may still have side-effects - it may modify its\n      parameters.  */\n   TREE_SIDE_EFFECTS (se->expr) = 1;"}, {"sha": "ff5643b0fc3078a8768937ee003bc0c00f2a55b2", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -1853,7 +1853,7 @@ gfc_return_by_reference (gfc_symbol * sym)\n   if (sym->attr.dimension)\n     return 1;\n \n-  if (sym->ts.type == BT_CHARACTER)\n+  if (sym->ts.type == BT_CHARACTER && !sym->attr.is_bind_c)\n     return 1;\n \n   /* Possibly return complex numbers by reference for g77 compatibility.\n@@ -1942,17 +1942,17 @@ gfc_get_function_type (gfc_symbol * sym)\n       typelist = gfc_chainon_list (typelist, gfc_array_index_type);\n     }\n \n+  if (sym->result)\n+    arg = sym->result;\n+  else\n+    arg = sym;\n+\n+  if (arg->ts.type == BT_CHARACTER)\n+    gfc_conv_const_charlen (arg->ts.cl);\n+\n   /* Some functions we use an extra parameter for the return value.  */\n   if (gfc_return_by_reference (sym))\n     {\n-      if (sym->result)\n-\targ = sym->result;\n-      else\n-\targ = sym;\n-\n-      if (arg->ts.type == BT_CHARACTER)\n-\tgfc_conv_const_charlen (arg->ts.cl);\n-\n       type = gfc_sym_type (arg);\n       if (arg->ts.type == BT_COMPLEX\n \t  || arg->attr.dimension"}, {"sha": "df55de85047d265a31153f1b796fd815e564f35f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -1,3 +1,10 @@\n+2007-11-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34079\n+\t* gfortran.dg/bind_c_usage_10_c.c: Fix comment.\n+\t* gfortran.dg/bind_c_usage_16.f03: New.\n+\t* gfortran.dg/bind_c_usage_16_c.c: New.\n+\n 2007-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/size_clause1.ads: New test."}, {"sha": "ec64c41b00c8b759116f1542c807a11f3c04083f", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_10_c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10_c.c?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -1,6 +1,6 @@\n /* Check BIND(C) for ENTRY\n    PR fortran/34079\n-   To be linked with bind_c_usage_10.c\n+   To be linked with bind_c_usage_10.f03\n */\n \n void mySub1(int *);"}, {"sha": "b05faa752fa34b2984df97e9c8de13afaa0d22ad", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_16.f03", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_16.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_16.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_16.f03?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -0,0 +1,52 @@\n+! { dg-do run }\n+! { dg-additional-sources bind_c_usage_16_c.c }\n+!\n+! PR fortran/34079\n+!\n+! Ensure character-returning, bind(C) function work.\n+!\n+module mod\n+  use iso_c_binding\n+  implicit none\n+contains\n+  function bar(x)  bind(c, name=\"returnA\")\n+    character(len=1,kind=c_char) :: bar, x\n+    bar = x\n+    bar = 'A'\n+  end function bar\n+  function foo()  bind(c, name=\"returnB\")\n+    character(len=1,kind=c_char) :: foo\n+    foo = 'B'\n+  end function foo\n+end module mod\n+\n+subroutine test() bind(c)\n+  use mod\n+  implicit none\n+  character(len=1,kind=c_char) :: a\n+  character(len=5,kind=c_char) :: b\n+  character(len=1,kind=c_char) :: c(3)\n+  character(len=5,kind=c_char) :: d(3)\n+  a = 'z'\n+  b = 'fffff'\n+  c = 'h'\n+  d = 'uuuuu'\n+\n+  a = bar('x')\n+  if (a /= 'A') call abort()\n+  b = bar('y')\n+  if (b /= 'A') call abort()\n+  c = bar('x')\n+  if (any(c /= 'A')) call abort()\n+  d = bar('y')\n+  if (any(d /= 'A')) call abort()\n+\n+  a = foo()\n+  if (a /= 'B') call abort()\n+  b = foo()\n+  if (b /= 'B') call abort()\n+  c = foo()\n+  if (any(c /= 'B')) call abort()\n+  d = foo()\n+  if (any(d /= 'B')) call abort()\n+end subroutine"}, {"sha": "30ce25f8bd7ac3cf654f357db8b9de626e5a8645", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_16_c.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_16_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd61955ce652ec1c4bb1228fcf43e46424ebf41/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_16_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_16_c.c?ref=bfd61955ce652ec1c4bb1228fcf43e46424ebf41", "patch": "@@ -0,0 +1,22 @@\n+/* Check character-returning bind(C) functions\n+   PR fortran/34079\n+   To be linked with bind_c_usage_16.f03\n+*/\n+\n+#include <stdlib.h>\n+\n+char returnA(char *);\n+char returnB(void);\n+void test(void);\n+\n+int main()\n+{\n+  char c;\n+  c = 'z';\n+  c = returnA(&c);\n+  if (c != 'A') abort();\n+  c = returnB();\n+  if (c != 'B') abort();\n+  test();\n+  return 0;\n+}"}]}