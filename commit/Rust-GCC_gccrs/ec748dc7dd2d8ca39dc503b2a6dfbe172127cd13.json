{"sha": "ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM3NDhkYzdkZDJkOGNhMzlkYzUwM2IyYTZkZmJlMTcyMTI3Y2QxMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-09T11:36:00Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-09T11:38:10Z"}, "message": "docs: add missing @headitem in Intrinsic Procedures\n\ngcc/fortran/ChangeLog:\n\n\t* intrinsic.texi: Add missing @headitem to tables with a header.", "tree": {"sha": "c934e44621cdaf48ffae71281e068f5d8b2b9e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c934e44621cdaf48ffae71281e068f5d8b2b9e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12913c7125f15d4385c28860126b33834b6dd267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12913c7125f15d4385c28860126b33834b6dd267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12913c7125f15d4385c28860126b33834b6dd267"}], "stats": {"total": 144, "additions": 72, "deletions": 72}, "files": [{"sha": "8a92b86207085125cc458577450c3c898703686d", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 72, "deletions": 72, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=ec748dc7dd2d8ca39dc503b2a6dfbe172127cd13", "patch": "@@ -462,7 +462,7 @@ end program test_abs\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{ABS(A)}   @tab @code{REAL(4) A}    @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{CABS(A)}  @tab @code{COMPLEX(4) A} @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DABS(A)}  @tab @code{REAL(8) A}    @tab @code{REAL(8)}    @tab Fortran 77 and later\n@@ -627,7 +627,7 @@ end program test_acos\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument         @tab Return type     @tab Standard\n+@headitem Name            @tab Argument         @tab Return type     @tab Standard\n @item @code{ACOS(X)}  @tab @code{REAL(4) X} @tab @code{REAL(4)}  @tab Fortran 77 and later\n @item @code{DACOS(X)} @tab @code{REAL(8) X} @tab @code{REAL(8)}  @tab Fortran 77 and later\n @end multitable\n@@ -686,7 +686,7 @@ end program test_acosd\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument         @tab Return type     @tab Standard\n+@headitem Name            @tab Argument         @tab Return type     @tab Standard\n @item @code{ACOSD(X)}  @tab @code{REAL(4) X} @tab @code{REAL(4)}  @tab GNU extension\n @item @code{DACOSD(X)} @tab @code{REAL(8) X} @tab @code{REAL(8)}  @tab GNU extension\n @end multitable\n@@ -742,7 +742,7 @@ END PROGRAM\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument          @tab Return type       @tab Standard\n+@headitem Name             @tab Argument          @tab Return type       @tab Standard\n @item @code{DACOSH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n \n@@ -891,7 +891,7 @@ end program test_aimag\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name               @tab Argument            @tab Return type     @tab Standard\n+@headitem Name               @tab Argument            @tab Return type     @tab Standard\n @item @code{AIMAG(Z)}    @tab @code{COMPLEX Z}    @tab @code{REAL}     @tab Fortran 77 and later\n @item @code{DIMAG(Z)}    @tab @code{COMPLEX(8) Z} @tab @code{REAL(8)}  @tab GNU extension\n @item @code{IMAG(Z)}     @tab @code{COMPLEX Z}    @tab @code{REAL}     @tab GNU extension\n@@ -951,7 +951,7 @@ end program test_aint\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name           @tab Argument         @tab Return type      @tab Standard\n+@headitem Name           @tab Argument         @tab Return type      @tab Standard\n @item @code{AINT(A)} @tab @code{REAL(4) A} @tab @code{REAL(4)}   @tab Fortran 77 and later\n @item @code{DINT(A)} @tab @code{REAL(8) A} @tab @code{REAL(8)}   @tab Fortran 77 and later\n @end multitable\n@@ -1231,7 +1231,7 @@ end program test_anint\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument         @tab Return type      @tab Standard\n+@headitem Name            @tab Argument         @tab Return type      @tab Standard\n @item @code{ANINT(A)}  @tab @code{REAL(4) A} @tab @code{REAL(4)}   @tab Fortran 77 and later\n @item @code{DNINT(A)} @tab @code{REAL(8) A} @tab @code{REAL(8)}   @tab Fortran 77 and later\n @end multitable\n@@ -1347,7 +1347,7 @@ end program test_asin\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{ASIN(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DASIN(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 77 and later\n @end multitable\n@@ -1406,7 +1406,7 @@ end program test_asind\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{ASIND(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab GNU extension\n @item @code{DASIND(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n@@ -1462,7 +1462,7 @@ END PROGRAM\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument          @tab Return type       @tab Standard\n+@headitem Name             @tab Argument          @tab Return type       @tab Standard\n @item @code{DASINH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension.\n @end multitable\n \n@@ -1598,7 +1598,7 @@ end program test_atan\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{ATAN(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DATAN(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 77 and later\n @end multitable\n@@ -1663,7 +1663,7 @@ end program test_atand\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{ATAND(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab GNU extension\n @item @code{DATAND(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n@@ -1728,7 +1728,7 @@ end program test_atan2\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                @tab Argument            @tab Return type    @tab Standard\n+@headitem Name                @tab Argument            @tab Return type    @tab Standard\n @item @code{ATAN2(X, Y)}  @tab @code{REAL(4) X, Y} @tab @code{REAL(4)} @tab Fortran 77 and later\n @item @code{DATAN2(X, Y)} @tab @code{REAL(8) X, Y} @tab @code{REAL(8)} @tab Fortran 77 and later\n @end multitable\n@@ -1796,7 +1796,7 @@ end program test_atan2d\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                @tab Argument            @tab Return type    @tab Standard\n+@headitem Name                @tab Argument            @tab Return type    @tab Standard\n @item @code{ATAN2D(X, Y)}  @tab @code{REAL(4) X, Y} @tab @code{REAL(4)} @tab GNU extension\n @item @code{DATAN2D(X, Y)} @tab @code{REAL(8) X, Y} @tab @code{REAL(8)} @tab GNU extension\n @end multitable\n@@ -1852,7 +1852,7 @@ END PROGRAM\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument          @tab Return type       @tab Standard\n+@headitem Name             @tab Argument          @tab Return type       @tab Standard\n @item @code{DATANH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n \n@@ -2541,7 +2541,7 @@ end program test_besj0\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{DBESJ0(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}   @tab GNU extension\n @end multitable\n @end table\n@@ -2590,7 +2590,7 @@ end program test_besj1\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument          @tab Return type       @tab Standard\n+@headitem Name             @tab Argument          @tab Return type       @tab Standard\n @item @code{DBESJ1(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n @end table\n@@ -2655,7 +2655,7 @@ end program test_besjn\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                @tab Argument            @tab Return type       @tab Standard\n+@headitem Name                @tab Argument            @tab Return type       @tab Standard\n @item @code{DBESJN(N, X)} @tab @code{INTEGER N}    @tab @code{REAL(8)}    @tab GNU extension\n @item                     @tab @code{REAL(8) X}    @tab                   @tab\n @end multitable\n@@ -2703,7 +2703,7 @@ end program test_besy0\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{DBESY0(X)}@tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n @end table\n@@ -2750,7 +2750,7 @@ end program test_besy1\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{DBESY1(X)}@tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n @end table\n@@ -2815,7 +2815,7 @@ end program test_besyn\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name               @tab Argument            @tab Return type     @tab Standard\n+@headitem Name               @tab Argument            @tab Return type     @tab Standard\n @item @code{DBESYN(N,X)} @tab @code{INTEGER N} @tab @code{REAL(8)}  @tab GNU extension\n @item                    @tab @code{REAL(8) X} @tab                 @tab \n @end multitable\n@@ -3058,7 +3058,7 @@ end program test_btest\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name           @tab Argument         @tab Return type             @tab Standard\n+@headitem Name           @tab Argument         @tab Return type             @tab Standard\n @item @code{BTEST(I,POS)} @tab @code{INTEGER I,POS} @tab @code{LOGICAL} @tab Fortran 95 and later\n @item @code{BBTEST(I,POS)} @tab @code{INTEGER(1) I,POS} @tab @code{LOGICAL(1)} @tab GNU extension\n @item @code{BITEST(I,POS)} @tab @code{INTEGER(2) I,POS} @tab @code{LOGICAL(2)} @tab GNU extension\n@@ -3475,7 +3475,7 @@ end program test_char\n \n @item @emph{Specific names}:\n @multitable @columnfractions .18 .18 .24 .25\n-@item Name           @tab Argument         @tab Return type             @tab Standard\n+@headitem Name           @tab Argument         @tab Return type             @tab Standard\n @item @code{CHAR(I)} @tab @code{INTEGER I} @tab @code{CHARACTER(LEN=1)} @tab Fortran 77 and later\n @end multitable\n \n@@ -4204,7 +4204,7 @@ end program test_conjg\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument             @tab Return type       @tab Standard\n+@headitem Name             @tab Argument             @tab Return type       @tab Standard\n @item @code{DCONJG(Z)} @tab @code{COMPLEX(8) Z}  @tab @code{COMPLEX(8)} @tab GNU extension\n @end multitable\n @end table\n@@ -4255,7 +4255,7 @@ end program test_cos\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{COS(X)}   @tab @code{REAL(4) X}    @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DCOS(X)}  @tab @code{REAL(8) X}    @tab @code{REAL(8)}    @tab Fortran 77 and later\n @item @code{CCOS(X)}  @tab @code{COMPLEX(4) X} @tab @code{COMPLEX(4)} @tab Fortran 77 and later\n@@ -4319,7 +4319,7 @@ end program test_cosd\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{COSD(X)}   @tab @code{REAL(4) X}    @tab @code{REAL(4)}    @tab GNU extension\n @item @code{DCOSD(X)}  @tab @code{REAL(8) X}    @tab @code{REAL(8)}    @tab GNU extension\n @item @code{CCOSD(X)}  @tab @code{COMPLEX(4) X} @tab @code{COMPLEX(4)} @tab GNU extension\n@@ -4378,7 +4378,7 @@ end program test_cosh\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{COSH(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DCOSH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 77 and later\n @end multitable\n@@ -4432,7 +4432,7 @@ end program test_cotan\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type     @tab Standard\n+@headitem Name            @tab Argument          @tab Return type     @tab Standard\n @item @code{COTAN(X)}   @tab @code{REAL(4) X}  @tab @code{REAL(4)}  @tab GNU extension\n @item @code{DCOTAN(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}  @tab GNU extension\n @end multitable\n@@ -4488,7 +4488,7 @@ end program test_cotand\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type     @tab Standard\n+@headitem Name            @tab Argument          @tab Return type     @tab Standard\n @item @code{COTAND(X)}   @tab @code{REAL(4) X}  @tab @code{REAL(4)}  @tab GNU extension\n @item @code{DCOTAND(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}  @tab GNU extension\n @end multitable\n@@ -5003,7 +5003,7 @@ end program test_dim\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument               @tab Return type       @tab Standard\n+@headitem Name             @tab Argument               @tab Return type       @tab Standard\n @item @code{DIM(X,Y)}  @tab @code{REAL(4) X, Y}    @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{IDIM(X,Y)} @tab @code{INTEGER(4) X, Y} @tab @code{INTEGER(4)} @tab Fortran 77 and later\n @item @code{DDIM(X,Y)} @tab @code{REAL(8) X, Y}    @tab @code{REAL(8)}    @tab Fortran 77 and later\n@@ -5106,7 +5106,7 @@ end program test_dprod\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name              @tab Argument               @tab Return type       @tab Standard\n+@headitem Name              @tab Argument               @tab Return type       @tab Standard\n @item @code{DPROD(X,Y)} @tab @code{REAL(4) X, Y}    @tab @code{REAL(8)}    @tab Fortran 77 and later\n @end multitable\n \n@@ -5475,7 +5475,7 @@ end program test_erf\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{DERF(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n @end table\n@@ -5519,7 +5519,7 @@ end program test_erfc\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{DERFC(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n @end table\n@@ -5863,7 +5863,7 @@ end program test_exp\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument             @tab Return type         @tab Standard\n+@headitem Name            @tab Argument             @tab Return type         @tab Standard\n @item @code{EXP(X)}   @tab @code{REAL(4) X}     @tab @code{REAL(4)}      @tab Fortran 77 and later\n @item @code{DEXP(X)}  @tab @code{REAL(8) X}     @tab @code{REAL(8)}      @tab Fortran 77 and later\n @item @code{CEXP(X)}  @tab @code{COMPLEX(4) X}  @tab @code{COMPLEX(4)}   @tab Fortran 77 and later\n@@ -6803,7 +6803,7 @@ end program test_gamma\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument         @tab Return type       @tab Standard\n+@headitem Name             @tab Argument         @tab Return type       @tab Standard\n @item @code{DGAMMA(X)} @tab @code{REAL(8) X} @tab @code{REAL(8)}    @tab GNU extension\n @end multitable\n \n@@ -7692,7 +7692,7 @@ END PROGRAM\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{IAND(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BIAND(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IIAND(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -7855,7 +7855,7 @@ The return value is of type @code{INTEGER} and of the same kind as\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{IBCLR(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BBCLR(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IIBCLR(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -7914,7 +7914,7 @@ The return value is of type @code{INTEGER} and of the same kind as\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{IBITS(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BBITS(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IIBITS(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -7968,7 +7968,7 @@ The return value is of type @code{INTEGER} and of the same kind as\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{IBSET(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BBSET(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IIBSET(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -8029,7 +8029,7 @@ end program test_ichar\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument             @tab Return type       @tab Standard\n+@headitem Name             @tab Argument             @tab Return type       @tab Standard\n @item @code{ICHAR(C)}  @tab @code{CHARACTER C}   @tab @code{INTEGER(4)}    @tab Fortran 77 and later\n @end multitable\n \n@@ -8156,7 +8156,7 @@ type parameter of the other argument as-if a call to @ref{INT} occurred.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{IEOR(A)}  @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BIEOR(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IIEOR(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -8293,7 +8293,7 @@ The return value is of type @code{INTEGER} and of kind @var{KIND}. If\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                            @tab Argument           @tab Return type       @tab Standard\n+@headitem Name                            @tab Argument           @tab Return type       @tab Standard\n @item @code{INDEX(STRING, SUBSTRING)} @tab @code{CHARACTER}   @tab @code{INTEGER(4)} @tab Fortran 77 and later\n @end multitable\n \n@@ -8360,7 +8360,7 @@ end program\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{INT(A)}   @tab @code{REAL(4) A}  @tab @code{INTEGER}    @tab Fortran 77 and later\n @item @code{IFIX(A)}  @tab @code{REAL(4) A}  @tab @code{INTEGER}    @tab Fortran 77 and later\n @item @code{IDINT(A)} @tab @code{REAL(8) A}  @tab @code{INTEGER}    @tab Fortran 77 and later\n@@ -8486,7 +8486,7 @@ type parameter of the other argument as-if a call to @ref{INT} occurred.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{IOR(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BIOR(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IIOR(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -8840,7 +8840,7 @@ The return value is of type @code{INTEGER} and of the same kind as\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{ISHFT(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BSHFT(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IISHFT(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -8898,7 +8898,7 @@ The return value is of type @code{INTEGER} and of the same kind as\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{ISHFTC(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BSHFTC(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IISHFTC(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -9259,7 +9259,7 @@ The return value is of type @code{INTEGER} and of kind @var{KIND}. If\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name               @tab Argument          @tab Return type       @tab Standard\n+@headitem Name               @tab Argument          @tab Return type       @tab Standard\n @item @code{LEN(STRING)} @tab @code{CHARACTER}  @tab @code{INTEGER}    @tab Fortran 77 and later\n @end multitable\n \n@@ -9352,7 +9352,7 @@ otherwise, based on the ASCII ordering.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                           @tab Argument          @tab Return type       @tab Standard\n+@headitem Name                           @tab Argument          @tab Return type       @tab Standard\n @item @code{LGE(STRING_A, STRING_B)} @tab @code{CHARACTER}  @tab @code{LOGICAL}    @tab Fortran 77 and later\n @end multitable\n \n@@ -9406,7 +9406,7 @@ otherwise, based on the ASCII ordering.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                           @tab Argument          @tab Return type       @tab Standard\n+@headitem Name                           @tab Argument          @tab Return type       @tab Standard\n @item @code{LGT(STRING_A, STRING_B)} @tab @code{CHARACTER}  @tab @code{LOGICAL}    @tab Fortran 77 and later\n @end multitable\n \n@@ -9504,7 +9504,7 @@ otherwise, based on the ASCII ordering.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                           @tab Argument          @tab Return type       @tab Standard\n+@headitem Name                           @tab Argument          @tab Return type       @tab Standard\n @item @code{LLE(STRING_A, STRING_B)} @tab @code{CHARACTER}  @tab @code{LOGICAL}    @tab Fortran 77 and later\n @end multitable\n \n@@ -9558,7 +9558,7 @@ otherwise, based on the ASCII ordering.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name                           @tab Argument          @tab Return type       @tab Standard\n+@headitem Name                           @tab Argument          @tab Return type       @tab Standard\n @item @code{LLT(STRING_A, STRING_B)} @tab @code{CHARACTER}  @tab @code{LOGICAL}    @tab Fortran 77 and later\n @end multitable\n \n@@ -9697,7 +9697,7 @@ end program test_log\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{ALOG(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab Fortran 77 or later\n @item @code{DLOG(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 77 or later\n @item @code{CLOG(X)}  @tab @code{COMPLEX(4) X}  @tab @code{COMPLEX(4)}    @tab Fortran 77 or later\n@@ -9749,7 +9749,7 @@ end program test_log10\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{ALOG10(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DLOG10(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 77 and later\n @end multitable\n@@ -9798,7 +9798,7 @@ end program test_log_gamma\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument         @tab Return type       @tab Standard\n+@headitem Name             @tab Argument         @tab Return type       @tab Standard\n @item @code{LGAMMA(X)} @tab @code{REAL(4) X} @tab @code{REAL(4)}    @tab GNU extension\n @item @code{ALGAMA(X)} @tab @code{REAL(4) X} @tab @code{REAL(4)}    @tab GNU extension\n @item @code{DLGAMA(X)} @tab @code{REAL(8) X} @tab @code{REAL(8)}    @tab GNU extension\n@@ -10257,7 +10257,7 @@ and has the same type and kind as the first argument.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument             @tab Return type         @tab Standard\n+@headitem Name             @tab Argument             @tab Return type         @tab Standard\n @item @code{MAX0(A1)}  @tab @code{INTEGER(4) A1} @tab @code{INTEGER(4)}   @tab Fortran 77 and later\n @item @code{AMAX0(A1)} @tab @code{INTEGER(4) A1} @tab @code{REAL(MAX(X))} @tab Fortran 77 and later\n @item @code{MAX1(A1)}  @tab @code{REAL A1}       @tab @code{INT(MAX(X))}  @tab Fortran 77 and later\n@@ -10632,7 +10632,7 @@ and has the same type and kind as the first argument.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name              @tab Argument             @tab Return type        @tab Standard\n+@headitem Name              @tab Argument             @tab Return type        @tab Standard\n @item @code{MIN0(A1)}   @tab @code{INTEGER(4) A1} @tab @code{INTEGER(4)}  @tab Fortran 77 and later\n @item @code{AMIN0(A1)}  @tab @code{INTEGER(4) A1} @tab @code{REAL(4)}     @tab Fortran 77 and later\n @item @code{MIN1(A1)}   @tab @code{REAL A1}       @tab @code{INTEGER(4)}  @tab Fortran 77 and later\n@@ -10865,7 +10865,7 @@ end program test_mod\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Arguments          @tab Return type    @tab Standard\n+@headitem Name             @tab Arguments          @tab Return type    @tab Standard\n @item @code{MOD(A,P)}  @tab @code{INTEGER A,P} @tab @code{INTEGER} @tab Fortran 77 and later\n @item @code{AMOD(A,P)} @tab @code{REAL(4) A,P} @tab @code{REAL(4)} @tab Fortran 77 and later\n @item @code{DMOD(A,P)} @tab @code{REAL(8) A,P} @tab @code{REAL(8)} @tab Fortran 77 and later\n@@ -11030,7 +11030,7 @@ same kind as @var{FROM}.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{MVBITS(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 90 and later\n @item @code{BMVBITS(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{IMVBITS(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -11180,7 +11180,7 @@ end program test_nint\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument           @tab Return Type     @tab Standard\n+@headitem Name             @tab Argument           @tab Return Type     @tab Standard\n @item @code{NINT(A)}   @tab @code{REAL(4) A}   @tab  @code{INTEGER} @tab Fortran 77 and later\n @item @code{IDNINT(A)} @tab @code{REAL(8) A}   @tab  @code{INTEGER} @tab Fortran 77 and later\n @end multitable\n@@ -11278,7 +11278,7 @@ argument.\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument            @tab Return type       @tab Standard\n+@headitem Name            @tab Argument            @tab Return type       @tab Standard\n @item @code{NOT(A)}   @tab @code{INTEGER A}    @tab @code{INTEGER}    @tab Fortran 95 and later\n @item @code{BNOT(A)} @tab @code{INTEGER(1) A} @tab @code{INTEGER(1)} @tab GNU extension\n @item @code{INOT(A)} @tab @code{INTEGER(2) A} @tab @code{INTEGER(2)} @tab GNU extension\n@@ -12294,7 +12294,7 @@ end program test_real\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument           @tab Return type     @tab Standard\n+@headitem Name             @tab Argument           @tab Return type     @tab Standard\n @item @code{FLOAT(A)}  @tab @code{INTEGER(4)}  @tab @code{REAL(4)}  @tab GNU extension\n @item @code{DFLOAT(A)} @tab @code{INTEGER(4)}  @tab @code{REAL(8)}  @tab GNU extension\n @item @code{FLOATI(A)} @tab @code{INTEGER(2)}  @tab @code{REAL(4)}  @tab GNU extension\n@@ -13198,7 +13198,7 @@ end program test_sign\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name              @tab Arguments              @tab Return type       @tab Standard\n+@headitem Name              @tab Arguments              @tab Return type       @tab Standard\n @item @code{SIGN(A,B)}  @tab @code{REAL(4) A, B}    @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{ISIGN(A,B)} @tab @code{INTEGER(4) A, B} @tab @code{INTEGER(4)} @tab Fortran 77 and later\n @item @code{DSIGN(A,B)} @tab @code{REAL(8) A, B}    @tab @code{REAL(8)}    @tab Fortran 77 and later\n@@ -13307,7 +13307,7 @@ end program test_sin\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument             @tab Return type       @tab Standard\n+@headitem Name            @tab Argument             @tab Return type       @tab Standard\n @item @code{SIN(X)}   @tab @code{REAL(4) X}     @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DSIN(X)}  @tab @code{REAL(8) X}     @tab @code{REAL(8)}    @tab Fortran 77 and later\n @item @code{CSIN(X)}  @tab @code{COMPLEX(4) X}  @tab @code{COMPLEX(4)} @tab Fortran 77 and later\n@@ -13369,7 +13369,7 @@ end program test_sind\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument             @tab Return type       @tab Standard\n+@headitem Name            @tab Argument             @tab Return type       @tab Standard\n @item @code{SIND(X)}   @tab @code{REAL(4) X}     @tab @code{REAL(4)}    @tab GNU extension\n @item @code{DSIND(X)}  @tab @code{REAL(8) X}     @tab @code{REAL(8)}    @tab GNU extension\n @item @code{CSIND(X)}  @tab @code{COMPLEX(4) X}  @tab @code{COMPLEX(4)} @tab GNU extension\n@@ -13426,7 +13426,7 @@ end program test_sinh\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{DSINH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 90 and later\n @end multitable\n \n@@ -13711,7 +13711,7 @@ end program test_sqrt\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name             @tab Argument             @tab Return type          @tab Standard\n+@headitem Name             @tab Argument             @tab Return type          @tab Standard\n @item @code{SQRT(X)}   @tab @code{REAL(4) X}     @tab @code{REAL(4)}       @tab Fortran 77 and later\n @item @code{DSQRT(X)}  @tab @code{REAL(8) X}     @tab @code{REAL(8)}       @tab Fortran 77 and later\n @item @code{CSQRT(X)}  @tab @code{COMPLEX(4) X}  @tab @code{COMPLEX(4)}    @tab Fortran 77 and later\n@@ -14162,7 +14162,7 @@ end program test_tan\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type     @tab Standard\n+@headitem Name            @tab Argument          @tab Return type     @tab Standard\n @item @code{TAN(X)}   @tab @code{REAL(4) X}  @tab @code{REAL(4)}  @tab Fortran 77 and later\n @item @code{DTAN(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}  @tab Fortran 77 and later\n @end multitable\n@@ -14217,7 +14217,7 @@ end program test_tand\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type     @tab Standard\n+@headitem Name            @tab Argument          @tab Return type     @tab Standard\n @item @code{TAND(X)}   @tab @code{REAL(4) X}  @tab @code{REAL(4)}  @tab GNU extension\n @item @code{DTAND(X)}  @tab @code{REAL(8) X}  @tab @code{REAL(8)}  @tab GNU extension\n @end multitable\n@@ -14273,7 +14273,7 @@ end program test_tanh\n \n @item @emph{Specific names}:\n @multitable @columnfractions .20 .20 .20 .25\n-@item Name            @tab Argument          @tab Return type       @tab Standard\n+@headitem Name            @tab Argument          @tab Return type       @tab Standard\n @item @code{TANH(X)}  @tab @code{REAL(4) X}  @tab @code{REAL(4)}    @tab Fortran 77 and later\n @item @code{DTANH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab Fortran 77 and later\n @end multitable\n@@ -15197,7 +15197,7 @@ Furthermore, if @code{__float128} is supported in C, the named constants\n @code{C_FLOAT128, C_FLOAT128_COMPLEX} are defined.\n \n @multitable @columnfractions .15 .35 .35 .35\n-@item Fortran Type  @tab Named constant         @tab C type                                @tab Extension\n+@headitem Fortran Type  @tab Named constant         @tab C type                                @tab Extension\n @item @code{INTEGER}@tab @code{C_INT}           @tab @code{int}\n @item @code{INTEGER}@tab @code{C_SHORT}         @tab @code{short int}\n @item @code{INTEGER}@tab @code{C_LONG}          @tab @code{long int}\n@@ -15238,7 +15238,7 @@ Additionally, the following parameters of type @code{CHARACTER(KIND=C_CHAR)}\n are defined.\n \n @multitable @columnfractions .20 .45 .15\n-@item Name                     @tab C definition    @tab Value\n+@headitem Name                     @tab C definition    @tab Value\n @item @code{C_NULL_CHAR}       @tab null character  @tab @code{'\\0'}\n @item @code{C_ALERT}           @tab alert           @tab @code{'\\a'}\n @item @code{C_BACKSPACE}       @tab backspace       @tab @code{'\\b'}\n@@ -15252,7 +15252,7 @@ are defined.\n Moreover, the following two named constants are defined:\n \n @multitable @columnfractions .20 .80\n-@item Name                 @tab Type\n+@headitem Name                 @tab Type\n @item @code{C_NULL_PTR}    @tab @code{C_PTR}\n @item @code{C_NULL_FUNPTR} @tab @code{C_FUNPTR}\n @end multitable"}]}