{"sha": "0b70519f0101c104871d90f285ba0ab20306a84e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3MDUxOWYwMTAxYzEwNDg3MWQ5MGYyODViYTBhYjIwMzA2YTg0ZQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-09-30T00:47:38Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-09-30T00:47:38Z"}, "message": "install.texi cleanups.\n\ngcc/:\n\t* doc/install.texi: Linguistic and markup fixes.\n\t(Configuration) <--disable-cpp>: Remove description.\n\t<--enable-maintainer-mode>: Autotools files are affected, too.\n\t<--with-sysroot>: Improve description.\n\t(Building): Bump required GNU make version.\n\nFrom-SVN: r152316", "tree": {"sha": "1cf0571c2f6325be223bcde4168d1e2544ca3cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cf0571c2f6325be223bcde4168d1e2544ca3cf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b70519f0101c104871d90f285ba0ab20306a84e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b70519f0101c104871d90f285ba0ab20306a84e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b70519f0101c104871d90f285ba0ab20306a84e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b70519f0101c104871d90f285ba0ab20306a84e/comments", "author": null, "committer": null, "parents": [{"sha": "c82852f70695b75a246088321e8fea319d1fc069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c82852f70695b75a246088321e8fea319d1fc069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c82852f70695b75a246088321e8fea319d1fc069"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "70a3efcb9da04d3122c516591188c39b6522081d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b70519f0101c104871d90f285ba0ab20306a84e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b70519f0101c104871d90f285ba0ab20306a84e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b70519f0101c104871d90f285ba0ab20306a84e", "patch": "@@ -1,3 +1,11 @@\n+2009-09-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/install.texi: Linguistic and markup fixes.\n+\t(Configuration) <--disable-cpp>: Remove description.\n+\t<--enable-maintainer-mode>: Autotools files are affected, too.\n+\t<--with-sysroot>: Improve description.\n+\t(Building): Bump required GNU make version.\n+\n 2009-09-29  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config.gcc (i[34567]86-*-*): Include fma4intrin.h."}, {"sha": "bfa336e2e9e0b7d93ecce8d227380ec3b1398769", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b70519f0101c104871d90f285ba0ab20306a84e/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b70519f0101c104871d90f285ba0ab20306a84e/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=0b70519f0101c104871d90f285ba0ab20306a84e", "patch": "@@ -571,8 +571,8 @@ We use @var{srcdir} to refer to the toplevel source directory for\n GCC; we use @var{objdir} to refer to the toplevel build/object directory.\n \n If you obtained the sources via SVN, @var{srcdir} must refer to the top\n-@file{gcc} directory, the one where the @file{MAINTAINERS} can be found,\n-and not its @file{gcc} subdirectory, otherwise the build will fail.\n+@file{gcc} directory, the one where the @file{MAINTAINERS} file can be\n+found, and not its @file{gcc} subdirectory, otherwise the build will fail.\n \n If either @var{srcdir} or @var{objdir} is located on an automounted NFS\n file system, the shell's built-in @command{pwd} command will return\n@@ -583,7 +583,7 @@ variable to an automounter-aware @command{pwd} command, e.g.,\n phases.\n \n First, we @strong{highly} recommend that GCC be built into a\n-separate directory than the sources which does @strong{not} reside\n+separate directory from the sources which does @strong{not} reside\n within the source tree.  This is how we generally build GCC; building\n where @var{srcdir} == @var{objdir} should still work, but doesn't\n get extensive testing; building where @var{objdir} is a subdirectory\n@@ -652,8 +652,8 @@ The default value refers to the FSF's GCC bug tracker.\n @itemize @bullet\n @item\n GCC has code to correctly determine the correct value for @var{target}\n-for nearly all native systems.  Therefore, we highly recommend you not\n-provide a configure target when configuring a native compiler.\n+for nearly all native systems.  Therefore, we highly recommend you do\n+not provide a configure target when configuring a native compiler.\n \n @item\n @var{target} must be specified as @option{--target=@var{target}}\n@@ -1213,9 +1213,6 @@ Specify that target\n libraries should be optimized for code space instead of code speed.\n This is the default for the m32r platform.\n \n-@item --disable-cpp\n-Specify that a user visible @command{cpp} program should not be installed.\n-\n @item --with-cpp-install-dir=@var{dirname}\n Specify that the user visible @command{cpp} program should be installed\n in @file{@var{prefix}/@var{dirname}/cpp}, in addition to @var{bindir}.\n@@ -1233,8 +1230,8 @@ Build GCC using a C++ compiler rather than a C compiler.  This is an\n experimental option which may become the default in a later release.\n \n @item --enable-maintainer-mode\n-The build rules that\n-regenerate the GCC master message catalog @file{gcc.pot} are normally\n+The build rules that regenerate the Autoconf and Automake output files as\n+well as the GCC master message catalog @file{gcc.pot} are normally\n disabled.  This is because it can only be rebuilt if the complete source\n tree is present.  If you have changed the sources and want to rebuild the\n catalog, configuring with @option{--enable-maintainer-mode} will enable\n@@ -1250,7 +1247,7 @@ this process, you can configure with @option{--disable-bootstrap}.\n @item --enable-bootstrap\n In special cases, you may want to perform a 3-stage build\n even if the target and host triplets are different.\n-This could happen when the host can run code compiled for\n+This is possible when the host can run code compiled for\n the target (e.g.@: host is i686-linux, target is i486-linux).\n Starting from GCC 4.2, to do this you have to configure explicitly\n with @option{--enable-bootstrap}.\n@@ -1622,20 +1619,28 @@ GLIBC 2.11 or above, otherwise disabled.\n \n @subheading Cross-Compiler-Specific Options\n The following options only apply to building cross compilers.\n+\n @table @code\n @item --with-sysroot\n @itemx --with-sysroot=@var{dir}\n Tells GCC to consider @var{dir} as the root of a tree that contains a\n (subset of) the root filesystem of the target operating system.\n Target system headers, libraries and run-time object files will be\n-searched in there.  The specified directory is not copied into the\n+searched in there.  More specifically, this acts as if\n+@option{--sysroot=@var{dir}} was added to the default options of the built\n+compiler.  The specified directory is not copied into the\n install tree, unlike the options @option{--with-headers} and\n @option{--with-libs} that this option obsoletes.  The default value,\n in case @option{--with-sysroot} is not given an argument, is\n @option{$@{gcc_tooldir@}/sys-root}.  If the specified directory is a\n subdirectory of @option{$@{exec_prefix@}}, then it will be found relative to\n the GCC binaries if the installation tree is moved.\n \n+This option affects the system root for the compiler used to build\n+target libraries (which runs on the build system) and the compiler newly\n+installed with @code{make install}; it does not affect the compiler which is\n+used to build GCC itself.\n+\n @item --with-build-sysroot\n @itemx --with-build-sysroot=@var{dir}\n Tells GCC to consider @var{dir} as the system root (see\n@@ -1668,7 +1673,7 @@ compiler.  When crossing to GNU/Linux, you need the headers so GCC\n can build the exception handling for libgcc.\n \n @item --with-libs\n-@itemx --with-libs=``@var{dir1} @var{dir2} @dots{} @var{dirN}''\n+@itemx --with-libs=\"@var{dir1} @var{dir2} @dots{} @var{dirN}\"\n Deprecated in favor of @option{--with-sysroot}.\n Specifies a list of directories which contain the target runtime\n libraries.  These libraries will be copied into the @file{gcc} install\n@@ -2157,7 +2162,7 @@ When building a cross compiler, it is not generally possible to do a\n 3-stage bootstrap of the compiler.  This makes for an interesting problem\n as parts of GCC can only be built with GCC@.\n \n-To build a cross compiler, we first recommend building and installing a\n+To build a cross compiler, we recommend first building and installing a\n native compiler.  You can then use the native GCC compiler to build the\n cross compiler.  The installed native compiler needs to be GCC version\n 2.95 or later.\n@@ -2237,7 +2242,7 @@ compilation options.  Check your target's definition of\n \n @section Building in parallel\n \n-GNU Make 3.79 and above, which is necessary to build GCC, support\n+GNU Make 3.80 and above, which is necessary to build GCC, support\n building in parallel.  To activate this, you can use @samp{make -j 2}\n instead of @samp{make}.  You can also specify a bigger number, and \n in most cases using a value greater than the number of processors in\n@@ -3779,6 +3784,7 @@ This problem can be avoided by running the commands:\n    % export CONFIG_SHELL\n @end smallexample\n \n+@noindent\n before starting the build.\n \n @html\n@@ -3795,18 +3801,21 @@ resulting object file.  The output should look like:\n test.o: ELF N32 MSB @dots{}\n @end smallexample\n \n+@noindent\n If you see:\n \n @smallexample\n test.o: ELF 32-bit MSB @dots{}\n @end smallexample\n \n+@noindent\n or\n \n @smallexample\n test.o: ELF 64-bit MSB @dots{}\n @end smallexample\n \n+@noindent\n then your version of @command{cc} uses the O32 or N64 ABI by default.  You\n should set the environment variable @env{CC} to @samp{cc -n32}\n before configuring GCC@.\n@@ -3823,12 +3832,14 @@ all on @samp{mips3}-only systems.  For the test program above, you should see:\n test.o: ELF N32 MSB mips-3 @dots{}\n @end smallexample\n \n+@noindent\n If you get:\n \n @smallexample\n test.o: ELF N32 MSB mips-4 @dots{}\n @end smallexample\n \n+@noindent\n instead, you should set the environment variable @env{CC} to @samp{cc\n -n32 -mips3} or @samp{gcc -mips3} respectively before configuring GCC@.\n "}]}