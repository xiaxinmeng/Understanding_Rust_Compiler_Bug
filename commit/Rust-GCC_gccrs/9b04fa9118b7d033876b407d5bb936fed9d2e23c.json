{"sha": "9b04fa9118b7d033876b407d5bb936fed9d2e23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwNGZhOTExOGI3ZDAzMzg3NmI0MDdkNWJiOTM2ZmVkOWQyZTIzYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-07-27T17:41:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-07-27T17:41:47Z"}, "message": "acinclude.m4 ([GLIBCXX_COMPUTE_STDIO_INTEGER_CONSTANTS]): Fix messages.\n\n2010-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* acinclude.m4 ([GLIBCXX_COMPUTE_STDIO_INTEGER_CONSTANTS]): Fix\n\tmessages.\n\t* configure: Regenerate.\n\nFrom-SVN: r162580", "tree": {"sha": "ae34843e290b5aaf0c7aef2165ab3a6783e4f220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae34843e290b5aaf0c7aef2165ab3a6783e4f220"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b04fa9118b7d033876b407d5bb936fed9d2e23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b04fa9118b7d033876b407d5bb936fed9d2e23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b04fa9118b7d033876b407d5bb936fed9d2e23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b04fa9118b7d033876b407d5bb936fed9d2e23c/comments", "author": null, "committer": null, "parents": [{"sha": "65e2958885fdede707d113f4cd224b7808fe6081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e2958885fdede707d113f4cd224b7808fe6081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e2958885fdede707d113f4cd224b7808fe6081"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "ea4c2ebac9095c8288deeb3162fb3ccc67594dc4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b04fa9118b7d033876b407d5bb936fed9d2e23c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b04fa9118b7d033876b407d5bb936fed9d2e23c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b04fa9118b7d033876b407d5bb936fed9d2e23c", "patch": "@@ -1,3 +1,9 @@\n+2010-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* acinclude.m4 ([GLIBCXX_COMPUTE_STDIO_INTEGER_CONSTANTS]): Fix\n+\tmessages.\n+\t* configure: Regenerate.\n+\n 2010-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/ext/vstring_util.h: Include bits/range_access.h."}, {"sha": "5c856baab8d90240d0c5466bbb333e626db1c45e", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b04fa9118b7d033876b407d5bb936fed9d2e23c/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b04fa9118b7d033876b407d5bb936fed9d2e23c/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=9b04fa9118b7d033876b407d5bb936fed9d2e23c", "patch": "@@ -1623,32 +1623,27 @@ dnl Compute the EOF, SEEK_CUR, and SEEK_END integer constants.\n dnl\n AC_DEFUN([GLIBCXX_COMPUTE_STDIO_INTEGER_CONSTANTS], [\n \n-  AC_MSG_CHECKING([For some <stdio.h> integer constants.])\n-\n-  AC_CACHE_VAL(glibcxx_cv_stdio_eof, [\n+  AC_CACHE_CHECK([for the value of EOF], glibcxx_cv_stdio_eof, [\n   AC_COMPUTE_INT([glibcxx_cv_stdio_eof], [[EOF]],\n                  [#include <stdio.h>],\n                  [AC_MSG_ERROR([computing EOF failed])])\n   ])\n-  AC_MSG_RESULT($glibcxx_cv_stdio_eof)\n   AC_DEFINE_UNQUOTED(_GLIBCXX_STDIO_EOF, $glibcxx_cv_stdio_eof,\n                      [Define to the value of the EOF integer constant.])\n \n-  AC_CACHE_VAL(glibcxx_cv_stdio_seek_cur, [\n+  AC_CACHE_CHECK([for the value of SEEK_CUR], glibcxx_cv_stdio_seek_cur, [\n   AC_COMPUTE_INT([glibcxx_cv_stdio_seek_cur], [[SEEK_CUR]],\n                  [#include <stdio.h>],\n                  [AC_MSG_ERROR([computing SEEK_CUR failed])])\n   ])\n-  AC_MSG_RESULT($glibcxx_cv_stdio_seek_cur)\n   AC_DEFINE_UNQUOTED(_GLIBCXX_STDIO_SEEK_CUR, $glibcxx_cv_stdio_seek_cur,\n                      [Define to the value of the SEEK_CUR integer constant.])\n \n-  AC_CACHE_VAL(glibcxx_cv_stdio_seek_end, [\n+  AC_CACHE_CHECK([for the value of SEEK_END], glibcxx_cv_stdio_seek_end, [\n   AC_COMPUTE_INT([glibcxx_cv_stdio_seek_end], [[SEEK_END]],\n                  [#include <stdio.h>],\n                  [AC_MSG_ERROR([computing SEEK_END failed])])\n   ])\n-  AC_MSG_RESULT($glibcxx_cv_stdio_seek_end)\n   AC_DEFINE_UNQUOTED(_GLIBCXX_STDIO_SEEK_END, $glibcxx_cv_stdio_seek_end,\n                      [Define to the value of the SEEK_END integer constant.])\n ])"}, {"sha": "c78413286f3fc032831944035695eb998076aea1", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b04fa9118b7d033876b407d5bb936fed9d2e23c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b04fa9118b7d033876b407d5bb936fed9d2e23c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9b04fa9118b7d033876b407d5bb936fed9d2e23c", "patch": "@@ -18679,10 +18679,9 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n # For the EOF, SEEK_CUR, and SEEK_END integer constants.\n \n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking For some <stdio.h> integer constants.\" >&5\n-$as_echo_n \"checking For some <stdio.h> integer constants.... \" >&6; }\n-\n-  if test \"${glibcxx_cv_stdio_eof+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the value of EOF\" >&5\n+$as_echo_n \"checking for the value of EOF... \" >&6; }\n+if test \"${glibcxx_cv_stdio_eof+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n \n@@ -18694,16 +18693,17 @@ fi\n \n \n fi\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_stdio_eof\" >&5\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_stdio_eof\" >&5\n $as_echo \"$glibcxx_cv_stdio_eof\" >&6; }\n \n cat >>confdefs.h <<_ACEOF\n #define _GLIBCXX_STDIO_EOF $glibcxx_cv_stdio_eof\n _ACEOF\n \n \n-  if test \"${glibcxx_cv_stdio_seek_cur+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the value of SEEK_CUR\" >&5\n+$as_echo_n \"checking for the value of SEEK_CUR... \" >&6; }\n+if test \"${glibcxx_cv_stdio_seek_cur+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n \n@@ -18715,16 +18715,17 @@ fi\n \n \n fi\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_stdio_seek_cur\" >&5\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_stdio_seek_cur\" >&5\n $as_echo \"$glibcxx_cv_stdio_seek_cur\" >&6; }\n \n cat >>confdefs.h <<_ACEOF\n #define _GLIBCXX_STDIO_SEEK_CUR $glibcxx_cv_stdio_seek_cur\n _ACEOF\n \n \n-  if test \"${glibcxx_cv_stdio_seek_end+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the value of SEEK_END\" >&5\n+$as_echo_n \"checking for the value of SEEK_END... \" >&6; }\n+if test \"${glibcxx_cv_stdio_seek_end+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n \n@@ -18736,8 +18737,7 @@ fi\n \n \n fi\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_stdio_seek_end\" >&5\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_stdio_seek_end\" >&5\n $as_echo \"$glibcxx_cv_stdio_seek_end\" >&6; }\n \n cat >>confdefs.h <<_ACEOF"}]}