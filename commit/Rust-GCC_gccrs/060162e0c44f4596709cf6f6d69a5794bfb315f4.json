{"sha": "060162e0c44f4596709cf6f6d69a5794bfb315f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYwMTYyZTBjNDRmNDU5NjcwOWNmNmY2ZDY5YTU3OTRiZmIzMTVmNA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-12-08T21:08:06Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-12-08T21:08:06Z"}, "message": "PR c/78165 - avoid printing type suffix for constants in %E output\n\ngcc/c-family/ChangeLog:\n\n\tPR c/78165\n           * c-pretty-print (pp_c_integer_constant): Avoid formatting type\n             suffix.\ngcc/testsuite/ChangeLog:\n\nFrom-SVN: r243461", "tree": {"sha": "547b39090145d078f18f6337d1db72688b213648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/547b39090145d078f18f6337d1db72688b213648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/060162e0c44f4596709cf6f6d69a5794bfb315f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060162e0c44f4596709cf6f6d69a5794bfb315f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060162e0c44f4596709cf6f6d69a5794bfb315f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060162e0c44f4596709cf6f6d69a5794bfb315f4/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "560bcfdcfda5a68fab59e5a1da732667aee5cc56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560bcfdcfda5a68fab59e5a1da732667aee5cc56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560bcfdcfda5a68fab59e5a1da732667aee5cc56"}], "stats": {"total": 44, "additions": 12, "deletions": 32}, "files": [{"sha": "850b6f8b52c83df2b449a123ea837691263be13f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=060162e0c44f4596709cf6f6d69a5794bfb315f4", "patch": "@@ -1,3 +1,10 @@\n+2016-12-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/78165\n+           * c-pretty-print (pp_c_integer_constant): Avoid formatting type\n+             suffix.\n+gcc/testsuite/ChangeLog:\n+\n 2016-12-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/53562"}, {"sha": "c32d0a05bfac34d1ac5aea194755a3b7e4261596", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=060162e0c44f4596709cf6f6d69a5794bfb315f4", "patch": "@@ -904,15 +904,6 @@ pp_c_void_constant (c_pretty_printer *pp)\n static void\n pp_c_integer_constant (c_pretty_printer *pp, tree i)\n {\n-  int idx;\n-\n-  /* We are going to compare the type of I to other types using\n-     pointer comparison so we need to use its canonical type.  */\n-  tree type =\n-    TYPE_CANONICAL (TREE_TYPE (i))\n-    ? TYPE_CANONICAL (TREE_TYPE (i))\n-    : TREE_TYPE (i);\n-\n   if (tree_fits_shwi_p (i))\n     pp_wide_integer (pp, tree_to_shwi (i));\n   else if (tree_fits_uhwi_p (i))\n@@ -929,24 +920,6 @@ pp_c_integer_constant (c_pretty_printer *pp, tree i)\n       print_hex (wi, pp_buffer (pp)->digit_buffer);\n       pp_string (pp, pp_buffer (pp)->digit_buffer);\n     }\n-  if (TYPE_UNSIGNED (type))\n-    pp_character (pp, 'u');\n-  if (type == long_integer_type_node || type == long_unsigned_type_node)\n-    pp_character (pp, 'l');\n-  else if (type == long_long_integer_type_node\n-\t   || type == long_long_unsigned_type_node)\n-    pp_string (pp, \"ll\");\n-  else for (idx = 0; idx < NUM_INT_N_ENTS; idx ++)\n-    if (int_n_enabled_p[idx])\n-      {\n-\tchar buf[2+20];\n-\tif (type == int_n_trees[idx].signed_type\n-\t    || type == int_n_trees[idx].unsigned_type)\n-\t  {\n-\t    sprintf (buf, \"I%d\", int_n_data[idx].bitsize);\n-\t    pp_string (pp, buf);\n-\t  }\n-      }\n }\n \n /* Print out a CHARACTER literal.  */"}, {"sha": "d48a072a73fcc44ef7ec64b105a141517d1d7df2", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/integer-typedef.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Finteger-typedef.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Finteger-typedef.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Finteger-typedef.C?ref=060162e0c44f4596709cf6f6d69a5794bfb315f4", "patch": "@@ -24,5 +24,5 @@ main()\n   s1.f(10);\n }\n \n-// { dg-final {scan-assembler-times \"\\\"S<2048ul>.0\\\"\\[^\\n\\r\\]* DW_AT_name\" 1 } }\n+// { dg-final {scan-assembler-times \"\\\"S<2048>.0\\\"\\[^\\n\\r\\]* DW_AT_name\" 1 } }\n // { dg-final {scan-assembler-times \"\\\"_ZN1SILm2048EE1fEm.0\\\"\\[^\\n\\r\\]* DW_AT_\\[MIPS_\\]*linkage_name\" 1 } }"}, {"sha": "e025fbc00bbb496f00b65be4c5c8e95b6fbfc333", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/typedef1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C?ref=060162e0c44f4596709cf6f6d69a5794bfb315f4", "patch": "@@ -3,9 +3,9 @@\n // { dg-options \"-gdwarf-2 -dA -fno-debug-types-section\" }\n // { dg-do compile }\n // { dg-final { scan-assembler-times \"DW_TAG_structure_type\" 2 } }\n-// { dg-final { scan-assembler-times \"DW_AT_name: \\\"foo<1u>\\\"|\\\"foo<1u>..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DW_AT_name: \\\"foo<1>\\\"|\\\"foo<1u>..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n // { dg-final { scan-assembler-times \"DW_TAG_enumeration_type\" 2 } }\n-// { dg-final { scan-assembler-times \"DW_AT_name: \\\"typedef foo<1u>::type type\\\"|\\\"typedef foo<1u>::type type..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"DW_AT_name: \\\"typedef foo<1>::type type\\\"|\\\"typedef foo<1>::type type..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n // { dg-final { scan-assembler-times \"DIE \\\\(\\[^\\n\\]*\\\\) DW_TAG_enumeration_type\" 1 } }\n // { dg-final { scan-assembler-times \"\\\"e0..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }\n // { dg-final { scan-assembler-times \"\\\"e1..\\\"\\[^\\n\\]*DW_AT_name\" 1 } }"}, {"sha": "7aec6fda234b9e60d6a456132b33ee6fadbe2b47", "filename": "gcc/testsuite/g++.dg/inherit/covariant7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060162e0c44f4596709cf6f6d69a5794bfb315f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C?ref=060162e0c44f4596709cf6f6d69a5794bfb315f4", "patch": "@@ -42,8 +42,8 @@ struct c6 : c0, c3, c4\n // { dg-final { scan-tree-dump \"28    .*c6::f2\" \"class\" { target ilp32 } } }\n // { dg-final { scan-tree-dump \"56    .*c6::f2\" \"class\" { target lp64 } } }\n // once in c1-in-c3-in-c4-in-c6 - lost primary\n-// { dg-final { scan-tree-dump \"80    .*0u\" \"class\" { target ilp32 } } }\n-// { dg-final { scan-tree-dump \"160   .*0u\" \"class\" { target lp64 } } }\n+// { dg-final { scan-tree-dump \"80    .*0\" \"class\" { target ilp32 } } }\n+// { dg-final { scan-tree-dump \"160   .*0\" \"class\" { target lp64 } } }\n // once in c3-in-c4-in-c6 - c3 vcall offset\n // { dg-final { scan-tree-dump \"84    .*c6::_ZTv0_n16_NV2c62f2Ev\" \"class\" { target ilp32 } } }\n // { dg-final { scan-tree-dump \"168   .*c6::_ZTv0_n32_NV2c62f2Ev\" \"class\" { target lp64 } } }"}]}