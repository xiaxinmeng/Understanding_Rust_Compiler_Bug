{"sha": "4bf1cec711415449e6c604b9da5142853572b52f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmMWNlYzcxMTQxNTQ0OWU2YzYwNGI5ZGE1MTQyODUzNTcyYjUyZg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-03-07T18:31:53Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-03-07T18:31:53Z"}, "message": "[hsa] Consodlidate GTY roots for trees used during expansion to HSA\n\n2016-03-07  Martin Jambor  <mjambor@suse.cz>\n\n\t* hsa.h (hsa_get_ctor_statements): Declare.\n\t(hsa_get_dtor_statements): Likewise.\n\t(hsa_get_kernel_dispatch_type): Likewise.\n\t* hsa.c (hsa_get_ctor_statements): New function.\n\t(hsa_get_dtor_statements): Likewise.\n\t(hsa_get_kernel_dispatch_type): Likewise.\n\t* hsa-brig.c (hsa_cdtor_statements): Removed.\n\t(hsa_output_libgomp_mapping): Use hsa_get_ctor_statements and\n\thsa_get_dtor_statements.\n\t* hsa-gen.c (hsa_kernel_dispatch_type): Removed.\n\t(get_hsa_kernel_dispatch_offset): Use hsa_get_kernel_dispatch_type.\n\nFrom-SVN: r234042", "tree": {"sha": "55b94d15f9b30b1f8259bd8e5bd89d53399bac83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b94d15f9b30b1f8259bd8e5bd89d53399bac83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bf1cec711415449e6c604b9da5142853572b52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf1cec711415449e6c604b9da5142853572b52f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bf1cec711415449e6c604b9da5142853572b52f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf1cec711415449e6c604b9da5142853572b52f/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94156b3f3796d1fe59a48c3dab36aa5a2254f8f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94156b3f3796d1fe59a48c3dab36aa5a2254f8f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94156b3f3796d1fe59a48c3dab36aa5a2254f8f9"}], "stats": {"total": 69, "additions": 54, "deletions": 15}, "files": [{"sha": "6a143ba94b54c44a67fe121405084db579969447", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bf1cec711415449e6c604b9da5142853572b52f", "patch": "@@ -1,3 +1,17 @@\n+2016-03-07  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* hsa.h (hsa_get_ctor_statements): Declare.\n+\t(hsa_get_dtor_statements): Likewise.\n+\t(hsa_get_kernel_dispatch_type): Likewise.\n+\t* hsa.c (hsa_get_ctor_statements): New function.\n+\t(hsa_get_dtor_statements): Likewise.\n+\t(hsa_get_kernel_dispatch_type): Likewise.\n+\t* hsa-brig.c (hsa_cdtor_statements): Removed.\n+\t(hsa_output_libgomp_mapping): Use hsa_get_ctor_statements and\n+\thsa_get_dtor_statements.\n+\t* hsa-gen.c (hsa_kernel_dispatch_type): Removed.\n+\t(get_hsa_kernel_dispatch_offset): Use hsa_get_kernel_dispatch_type.\n+\n 2016-03-07  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-r8): New."}, {"sha": "2a301be81060928a8519312be15728b9f2677280", "filename": "gcc/hsa-brig.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa-brig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa-brig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-brig.c?ref=4bf1cec711415449e6c604b9da5142853572b52f", "patch": "@@ -2006,8 +2006,6 @@ hsa_brig_emit_omp_symbols (void)\n   emit_directive_variable (hsa_num_threads);\n }\n \n-static GTY(()) tree hsa_cdtor_statements[2];\n-\n /* Create and return __hsa_global_variables symbol that contains\n    all informations consumed by libgomp to link global variables\n    with their string names used by an HSA kernel.  */\n@@ -2408,6 +2406,7 @@ hsa_output_libgomp_mapping (tree brig_decl)\n     = builtin_decl_explicit (BUILT_IN_GOMP_OFFLOAD_REGISTER);\n   gcc_checking_assert (offload_register);\n \n+  tree *hsa_ctor_stmts = hsa_get_ctor_statements ();\n   append_to_statement_list\n     (build_call_expr (offload_register, 4,\n \t\t      build_int_cstu (unsigned_type_node,\n@@ -2416,15 +2415,15 @@ hsa_output_libgomp_mapping (tree brig_decl)\n \t\t      build_fold_addr_expr (hsa_libgomp_host_table),\n \t\t      build_int_cst (integer_type_node, GOMP_DEVICE_HSA),\n \t\t      build_fold_addr_expr (hsa_img_descriptor)),\n-     &hsa_cdtor_statements[0]);\n+     hsa_ctor_stmts);\n \n-  cgraph_build_static_cdtor ('I', hsa_cdtor_statements[0],\n-\t\t\t     DEFAULT_INIT_PRIORITY);\n+  cgraph_build_static_cdtor ('I', *hsa_ctor_stmts, DEFAULT_INIT_PRIORITY);\n \n   tree offload_unregister\n     = builtin_decl_explicit (BUILT_IN_GOMP_OFFLOAD_UNREGISTER);\n   gcc_checking_assert (offload_unregister);\n \n+  tree *hsa_dtor_stmts = hsa_get_dtor_statements ();\n   append_to_statement_list\n     (build_call_expr (offload_unregister, 4,\n \t\t      build_int_cstu (unsigned_type_node,\n@@ -2433,9 +2432,8 @@ hsa_output_libgomp_mapping (tree brig_decl)\n \t\t      build_fold_addr_expr (hsa_libgomp_host_table),\n \t\t      build_int_cst (integer_type_node, GOMP_DEVICE_HSA),\n \t\t      build_fold_addr_expr (hsa_img_descriptor)),\n-     &hsa_cdtor_statements[1]);\n-  cgraph_build_static_cdtor ('D', hsa_cdtor_statements[1],\n-\t\t\t     DEFAULT_INIT_PRIORITY);\n+     hsa_dtor_stmts);\n+  cgraph_build_static_cdtor ('D', *hsa_dtor_stmts, DEFAULT_INIT_PRIORITY);\n }\n \n /* Emit the brig module we have compiled to a section in the final assembly and"}, {"sha": "5939a577f3f4a2a46d82672e68e16f9aec7f8899", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=4bf1cec711415449e6c604b9da5142853572b52f", "patch": "@@ -3772,20 +3772,19 @@ gen_set_num_threads (tree value, hsa_bb *hbb)\n   hbb->append_insn (basic);\n }\n \n-static GTY (()) tree hsa_kernel_dispatch_type = NULL;\n-\n /* Return byte offset of a FIELD_NAME in GOMP_hsa_kernel_dispatch which\n    is defined in plugin-hsa.c.  */\n \n static HOST_WIDE_INT\n get_hsa_kernel_dispatch_offset (const char *field_name)\n {\n-  if (hsa_kernel_dispatch_type == NULL)\n+  tree *hsa_kernel_dispatch_type = hsa_get_kernel_dispatch_type ();\n+  if (*hsa_kernel_dispatch_type == NULL)\n     {\n       /* Collection of information needed for a dispatch of a kernel from a\n \t kernel.  Keep in sync with libgomp's plugin-hsa.c.  */\n \n-      hsa_kernel_dispatch_type = make_node (RECORD_TYPE);\n+      *hsa_kernel_dispatch_type = make_node (RECORD_TYPE);\n       tree id_f1 = build_decl (BUILTINS_LOCATION, FIELD_DECL,\n \t\t\t       get_identifier (\"queue\"), ptr_type_node);\n       DECL_CHAIN (id_f1) = NULL_TREE;\n@@ -3835,12 +3834,12 @@ get_hsa_kernel_dispatch_offset (const char *field_name)\n       DECL_CHAIN (id_f12) = id_f11;\n \n \n-      finish_builtin_struct (hsa_kernel_dispatch_type, \"__hsa_kernel_dispatch\",\n+      finish_builtin_struct (*hsa_kernel_dispatch_type, \"__hsa_kernel_dispatch\",\n \t\t\t     id_f12, NULL_TREE);\n-      TYPE_ARTIFICIAL (hsa_kernel_dispatch_type) = 1;\n+      TYPE_ARTIFICIAL (*hsa_kernel_dispatch_type) = 1;\n     }\n \n-  for (tree chain = TYPE_FIELDS (hsa_kernel_dispatch_type);\n+  for (tree chain = TYPE_FIELDS (*hsa_kernel_dispatch_type);\n        chain != NULL_TREE; chain = TREE_CHAIN (chain))\n     if (strcmp (field_name, IDENTIFIER_POINTER (DECL_NAME (chain))) == 0)\n       return int_byte_position (chain);"}, {"sha": "9eacb59f759633aced8e10014f0756e3262afa70", "filename": "gcc/hsa.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa.c?ref=4bf1cec711415449e6c604b9da5142853572b52f", "patch": "@@ -712,6 +712,31 @@ hsa_add_kernel_dependency (tree caller, const char *called_function)\n   s->safe_push (called_function);\n }\n \n+/* Expansion to HSA needs a few gc roots to hold types, constructors etc.  In\n+   order to minimize the number of GTY roots, we'll root them all in the\n+   following array.  The individual elements should only be accessed by the\n+   very simple getters (of a pointer-to-tree) below.  */\n+\n+static GTY(()) tree hsa_tree_gt_roots[3];\n+\n+tree *\n+hsa_get_ctor_statements (void)\n+{\n+  return &hsa_tree_gt_roots[0];\n+}\n+\n+tree *\n+hsa_get_dtor_statements (void)\n+{\n+  return &hsa_tree_gt_roots[1];\n+}\n+\n+tree *\n+hsa_get_kernel_dispatch_type (void)\n+{\n+  return &hsa_tree_gt_roots[2];\n+}\n+\n /* Modify the name P in-place so that it is a valid HSA identifier.  */\n \n void"}, {"sha": "6a7c651ce9bc0c9100a0893c9b034c65f15c26ba", "filename": "gcc/hsa.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf1cec711415449e6c604b9da5142853572b52f/gcc%2Fhsa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa.h?ref=4bf1cec711415449e6c604b9da5142853572b52f", "patch": "@@ -1353,6 +1353,9 @@ char *hsa_get_decl_kernel_mapping_name (unsigned i);\n unsigned hsa_get_decl_kernel_mapping_omp_size (unsigned i);\n bool hsa_get_decl_kernel_mapping_gridified (unsigned i);\n void hsa_free_decl_kernel_mapping (void);\n+tree *hsa_get_ctor_statements (void);\n+tree *hsa_get_dtor_statements (void);\n+tree *hsa_get_kernel_dispatch_type (void);\n void hsa_add_kernel_dependency (tree caller, const char *called_function);\n void hsa_sanitize_name (char *p);\n char *hsa_brig_function_name (const char *p);"}]}