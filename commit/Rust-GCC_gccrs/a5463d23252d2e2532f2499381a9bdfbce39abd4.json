{"sha": "a5463d23252d2e2532f2499381a9bdfbce39abd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU0NjNkMjMyNTJkMmUyNTMyZjI0OTkzODFhOWJkZmJjZTM5YWJkNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-03-30T12:37:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-03-30T12:37:37Z"}, "message": "Properly align stack in gcc.target/i386/cleanup-[12].c\n\n\tPR testsuite/70364\n\t* gcc.target/i386/cleanup-1.c: Include <stddef.h>.\n\t(check): New function.\n\t(bar): Call check.\n\t(foo): Align stack to 16 bytes when calling bar.\n\t* gcc.target/i386/cleanup-2.c: Likewise.\n\nFrom-SVN: r234557", "tree": {"sha": "cc8b39d5803ac334b8c43367d1dacd675ac29618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc8b39d5803ac334b8c43367d1dacd675ac29618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5463d23252d2e2532f2499381a9bdfbce39abd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5463d23252d2e2532f2499381a9bdfbce39abd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5463d23252d2e2532f2499381a9bdfbce39abd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5463d23252d2e2532f2499381a9bdfbce39abd4/comments", "author": null, "committer": null, "parents": [{"sha": "9c49362f039750b5ea63a32c3e403bd9865a3738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c49362f039750b5ea63a32c3e403bd9865a3738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c49362f039750b5ea63a32c3e403bd9865a3738"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "dcfcc4edb5fa992019f59f431c24c2375039f1f3", "filename": "gcc/testsuite/gcc.target/i386/cleanup-1.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5463d23252d2e2532f2499381a9bdfbce39abd4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5463d23252d2e2532f2499381a9bdfbce39abd4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-1.c?ref=a5463d23252d2e2532f2499381a9bdfbce39abd4", "patch": "@@ -4,6 +4,7 @@\n \n #include <unwind.h>\n #include <stdlib.h>\n+#include <stddef.h>\n #include <string.h>\n #include <stdio.h>\n #include <unistd.h>\n@@ -47,6 +48,14 @@ handler (void *p __attribute__((unused)))\n   _exit (0);\n }\n \n+static void\n+__attribute__((noinline))\n+check (intptr_t p)\n+{\n+  if ((p & 15) != 0)\n+    abort ();\n+}\n+\n static int __attribute__((noinline))\n fn5 (void)\n {\n@@ -59,6 +68,8 @@ void\n bar (void)\n {\n   char dummy __attribute__((cleanup (counter)));\n+  unsigned long tmp[4] __attribute__((aligned(16)));\n+  check ((intptr_t) tmp);\n   fn5 ();\n }\n \n@@ -133,9 +144,9 @@ foo (int x)\n \t\".type\t_L_mutex_lock_%=, @function\\n\"\n \"_L_mutex_lock_%=:\\n\"\n \"1:\\t\"\t\"leaq\t%1, %%rdi\\n\"\n-\"2:\\t\"\t\"subq\t$128, %%rsp\\n\"\n+\"2:\\t\"\t\"subq\t$136, %%rsp\\n\"\n \"3:\\t\"\t\"call\tbar\\n\"\n-\"4:\\t\"\t\"addq\t$128, %%rsp\\n\"\n+\"4:\\t\"\t\"addq\t$136, %%rsp\\n\"\n \"5:\\t\"\t\"jmp\t24f\\n\"\n \"6:\\t\"\t\".size _L_mutex_lock_%=, .-_L_mutex_lock_%=\\n\\t\"\n \t\".previous\\n\\t\"\n@@ -179,7 +190,7 @@ foo (int x)\n \t\".sleb128 4b-3b\\n\"\n \"16:\\t\"\t\".byte\t0x40 + (4b-3b-1) # DW_CFA_advance_loc\\n\\t\"\n \t\".byte\t0x0e\t# DW_CFA_def_cfa_offset\\n\\t\"\n-\t\".uleb128 128\\n\\t\"\n+\t\".uleb128 136\\n\\t\"\n \t\".byte\t0x16\t# DW_CFA_val_expression\\n\\t\"\n \t\".uleb128 0x10\\n\\t\"\n \t\".uleb128 20f-17f\\n\""}, {"sha": "7e60323373b8553e78dafdbe1f19b2a97eb2ef07", "filename": "gcc/testsuite/gcc.target/i386/cleanup-2.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5463d23252d2e2532f2499381a9bdfbce39abd4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5463d23252d2e2532f2499381a9bdfbce39abd4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-2.c?ref=a5463d23252d2e2532f2499381a9bdfbce39abd4", "patch": "@@ -4,6 +4,7 @@\n \n #include <unwind.h>\n #include <stdlib.h>\n+#include <stddef.h>\n #include <string.h>\n #include <stdio.h>\n #include <unistd.h>\n@@ -47,6 +48,14 @@ handler (void *p __attribute__((unused)))\n   _exit (0);\n }\n \n+static void\n+__attribute__((noinline))\n+check (intptr_t p)\n+{\n+  if ((p & 15) != 0)\n+    abort ();\n+}\n+\n static int __attribute__((noinline))\n fn5 (void)\n {\n@@ -59,6 +68,8 @@ void\n bar (void)\n {\n   char dummy __attribute__((cleanup (counter)));\n+  unsigned long tmp[4] __attribute__((aligned(16)));\n+  check ((intptr_t) tmp);\n   fn5 ();\n }\n \n@@ -74,9 +85,9 @@ foo (int x)\n \t\".type\t_L_mutex_lock_%=, @function\\n\"\n \"_L_mutex_lock_%=:\\n\"\n \"1:\\t\"\t\"leaq\t%1, %%rdi\\n\"\n-\"2:\\t\"\t\"subq\t$128, %%rsp\\n\"\n+\"2:\\t\"\t\"subq\t$136, %%rsp\\n\"\n \"3:\\t\"\t\"call\tbar\\n\"\n-\"4:\\t\"\t\"addq\t$128, %%rsp\\n\"\n+\"4:\\t\"\t\"addq\t$136, %%rsp\\n\"\n \"5:\\t\"\t\"jmp\t21f\\n\"\n \"6:\\t\"\t\".size _L_mutex_lock_%=, .-_L_mutex_lock_%=\\n\\t\"\n \t\".previous\\n\\t\"\n@@ -160,7 +171,7 @@ foo (int x)\n \t\".uleb128 6b-5b-1\\n\"\n \"19:\\t\"\t\".byte\t0x40 + (3b-1b) # DW_CFA_advance_loc\\n\\t\"\n \t\".byte\t0xe\t# DW_CFA_def_cfa_offset\\n\\t\"\n-\t\".uleb128 128\\n\\t\"\n+\t\".uleb128 136\\n\\t\"\n \t\".byte\t0x40 + (5b-3b) # DW_CFA_advance_loc\\n\\t\"\n \t\".byte\t0xe\t# DW_CFA_def_cfa_offset\\n\\t\"\n \t\".uleb128 0\\n\\t\""}]}