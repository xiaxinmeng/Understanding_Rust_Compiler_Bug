{"sha": "c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJkZjNjOTlkNWNhZmJiOTc3NGZjNmU5NDRmYmQ2NGFhMTdjMDNiYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-28T07:16:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-28T07:16:38Z"}, "message": "re PR c/89520 (ICE tree check: accessed operand 4 of call_expr with 3 operands in convert_to_integer_1, at convert.c:668)\n\n\tPR c/89520\n\t* convert.c (convert_to_real_1, convert_to_integer_1): Punt for\n\tbuiltins if they don't have a single scalar floating point argument.\n\tFormatting fixes.\n\n\t* gcc.dg/pr89520-1.c: New test.\n\t* gcc.dg/pr89520-2.c: New test.\n\nFrom-SVN: r269273", "tree": {"sha": "5a8fabcd1ab74bb58149f1fd4e49588634b44be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a8fabcd1ab74bb58149f1fd4e49588634b44be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0cf10e423144652be05382cc89670bd366cb65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0cf10e423144652be05382cc89670bd366cb65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0cf10e423144652be05382cc89670bd366cb65b"}], "stats": {"total": 97, "additions": 89, "deletions": 8}, "files": [{"sha": "f9b71975e1084e5d615711a5f5e6cca3001d22af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "patch": "@@ -1,3 +1,10 @@\n+2019-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/89520\n+\t* convert.c (convert_to_real_1, convert_to_integer_1): Punt for\n+\tbuiltins if they don't have a single scalar floating point argument.\n+\tFormatting fixes.\n+\n 2019-02-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR rtl-optimization/89490"}, {"sha": "32d475524d793ca66d3bab51db4a46e6878694b9", "filename": "gcc/convert.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "patch": "@@ -216,12 +216,15 @@ convert_to_real_1 (tree type, tree expr, bool fold_p)\n \t  CASE_MATHFN (FABS)\n \t  CASE_MATHFN (LOGB)\n #undef CASE_MATHFN\n+\t    if (call_expr_nargs (expr) != 1\n+\t\t|| !SCALAR_FLOAT_TYPE_P (TREE_TYPE (CALL_EXPR_ARG (expr, 0))))\n+\t      break;\n \t    {\n \t      tree arg0 = strip_float_extensions (CALL_EXPR_ARG (expr, 0));\n \t      tree newtype = type;\n \n-\t      /* We have (outertype)sqrt((innertype)x).  Choose the wider mode from\n-\t\t the both as the safe type for operation.  */\n+\t      /* We have (outertype)sqrt((innertype)x).  Choose the wider mode\n+\t\t from the both as the safe type for operation.  */\n \t      if (TYPE_PRECISION (TREE_TYPE (arg0)) > TYPE_PRECISION (type))\n \t\tnewtype = TREE_TYPE (arg0);\n \n@@ -618,7 +621,8 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \tCASE_FLT_FN (BUILT_IN_ROUND):\n \tCASE_FLT_FN_FLOATN_NX (BUILT_IN_ROUND):\n \t  /* Only convert in ISO C99 mode and with -fno-math-errno.  */\n-\t  if (!targetm.libc_has_function (function_c99_misc) || flag_errno_math)\n+\t  if (!targetm.libc_has_function (function_c99_misc)\n+\t      || flag_errno_math)\n \t    break;\n \t  if (outprec < TYPE_PRECISION (integer_type_node)\n \t      || (outprec == TYPE_PRECISION (integer_type_node)\n@@ -641,7 +645,8 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \tCASE_FLT_FN (BUILT_IN_RINT):\n \tCASE_FLT_FN_FLOATN_NX (BUILT_IN_RINT):\n \t  /* Only convert in ISO C99 mode and with -fno-math-errno.  */\n-\t  if (!targetm.libc_has_function (function_c99_misc) || flag_errno_math)\n+\t  if (!targetm.libc_has_function (function_c99_misc)\n+\t      || flag_errno_math)\n \t    break;\n \t  if (outprec < TYPE_PRECISION (integer_type_node)\n \t      || (outprec == TYPE_PRECISION (integer_type_node)\n@@ -657,14 +662,20 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \n \tCASE_FLT_FN (BUILT_IN_TRUNC):\n \tCASE_FLT_FN_FLOATN_NX (BUILT_IN_TRUNC):\n-\t  return convert_to_integer_1 (type, CALL_EXPR_ARG (s_expr, 0), dofold);\n+\t  if (call_expr_nargs (s_expr) != 1\n+\t      || !SCALAR_FLOAT_TYPE_P (TREE_TYPE (CALL_EXPR_ARG (s_expr, 0))))\n+\t    break;\n+\t  return convert_to_integer_1 (type, CALL_EXPR_ARG (s_expr, 0),\n+\t\t\t\t       dofold);\n \n \tdefault:\n \t  break;\n \t}\n \n-      if (fn)\n-        {\n+      if (fn\n+\t  && call_expr_nargs (s_expr) == 1\n+\t  && SCALAR_FLOAT_TYPE_P (TREE_TYPE (CALL_EXPR_ARG (s_expr, 0))))\n+\t{\n \t  tree newexpr = build_call_expr (fn, 1, CALL_EXPR_ARG (s_expr, 0));\n \t  return convert_to_integer_1 (type, newexpr, dofold);\n \t}\n@@ -694,7 +705,9 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \t  break;\n \t}\n \n-      if (fn)\n+      if (fn\n+\t  && call_expr_nargs (s_expr) == 1\n+\t  && SCALAR_FLOAT_TYPE_P (TREE_TYPE (CALL_EXPR_ARG (s_expr, 0))))\n         {\n \t  tree newexpr = build_call_expr (fn, 1, CALL_EXPR_ARG (s_expr, 0));\n \t  return convert_to_integer_1 (type, newexpr, dofold);"}, {"sha": "21642dec1c1f86641e64af0518e01d246bc599d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "patch": "@@ -1,3 +1,9 @@\n+2019-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/89520\n+\t* gcc.dg/pr89520-1.c: New test.\n+\t* gcc.dg/pr89520-2.c: New test.\n+\n 2019-02-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/88857 - ICE with value-initialization of argument in template."}, {"sha": "128e8359d40c70cf8f1fa8b5eecb3800b4ff5bfe", "filename": "gcc/testsuite/gcc.dg/pr89520-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89520-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89520-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89520-1.c?ref=c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "patch": "@@ -0,0 +1,13 @@\n+/* PR c/89520 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -w\" } */\n+\n+#define A(name) __typeof (__builtin_##name (0)) name (); long name##1 () { return name (); }\n+#define B(name) A(name) A(name##f) A(name##l)\n+B (ceil)\n+B (floor)\n+B (round)\n+B (trunc)\n+B (nearbyint)\n+B (rint)\n+B (logb)"}, {"sha": "8edafa7f4e1efe542b779ed217c183d40af3a967", "filename": "gcc/testsuite/gcc.dg/pr89520-2.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89520-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89520-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89520-2.c?ref=c2df3c99d5cafbb9774fc6e944fbd64aa17c03bb", "patch": "@@ -0,0 +1,42 @@\n+/* PR c/89520 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -w\" } */\n+\n+#define A(name) __typeof (__builtin_##name (0)) name (); \\\n+  float name##1 () { return name (); } \\\n+  double name##2 () { return name (); }\n+#define B(name) A(name) A(name##l)\n+B (cosh)\n+B (exp)\n+B (exp10)\n+B (exp2)\n+B (expm1)\n+B (gamma)\n+B (j0)\n+B (j1)\n+B (lgamma)\n+B (pow10)\n+B (sinh)\n+B (tgamma)\n+B (y0)\n+B (y1)\n+B (acos)\n+B (acosh)\n+B (asin)\n+B (asinh)\n+B (atan)\n+B (atanh)\n+B (cbrt)\n+B (cos)\n+B (erf)\n+B (erfc)\n+B (log)\n+B (log10)\n+B (log2)\n+B (log1p)\n+B (sin)\n+B (tan)\n+B (tanh)\n+B (sqrt)\n+B (fabs)\n+B (logb)"}]}