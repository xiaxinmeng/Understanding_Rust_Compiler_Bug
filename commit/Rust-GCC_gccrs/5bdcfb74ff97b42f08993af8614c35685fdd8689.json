{"sha": "5bdcfb74ff97b42f08993af8614c35685fdd8689", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJkY2ZiNzRmZjk3YjQyZjA4OTkzYWY4NjE0YzM1Njg1ZmRkODY4OQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-06-23T19:25:45Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-06-24T17:25:58Z"}, "message": "Correctly unify recomputation with existing range.\n\nWhen propagating the on-entry cache, new block ranges are calculated\nby combining all the incoming edges and comparing to the old value.\nWhen a recomputation was performed on an edge, it didn't take into account\nthat the value in the block may already be better than a potential\nrecompuation... Thus a worse values was sometimes propagated.\nFixed by simply calling the now correct range_on_edge the cache provides.\n\n\t* gimple-range-cache.cc (ranger_cache::propagate_cache): Call\n\trange_on_edge instead of manually calculating.", "tree": {"sha": "573c834dd99bba578438d63718260251f5b61c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/573c834dd99bba578438d63718260251f5b61c1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bdcfb74ff97b42f08993af8614c35685fdd8689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bdcfb74ff97b42f08993af8614c35685fdd8689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bdcfb74ff97b42f08993af8614c35685fdd8689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bdcfb74ff97b42f08993af8614c35685fdd8689/comments", "author": null, "committer": null, "parents": [{"sha": "90fa63e134f478c775b64b281901ecbba3c9f15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fa63e134f478c775b64b281901ecbba3c9f15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90fa63e134f478c775b64b281901ecbba3c9f15b"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "98ecdbbd68e194c6d537413d77449e3e066bb769", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bdcfb74ff97b42f08993af8614c35685fdd8689/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bdcfb74ff97b42f08993af8614c35685fdd8689/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=5bdcfb74ff97b42f08993af8614c35685fdd8689", "patch": "@@ -1037,27 +1037,12 @@ ranger_cache::propagate_cache (tree name)\n       new_range.set_undefined ();\n       FOR_EACH_EDGE (e, ei, bb->preds)\n \t{\n+\t  range_on_edge (e_range, e, name);\n \t  if (DEBUG_RANGE_CACHE)\n-\t    fprintf (dump_file, \"   edge %d->%d :\", e->src->index, bb->index);\n-\t  // Get whatever range we can for this edge.\n-\t  if (!m_gori.outgoing_edge_range_p (e_range, e, name, *this))\n \t    {\n-\t      exit_range (e_range, name, e->src);\n-\t      if (DEBUG_RANGE_CACHE)\n-\t\t{\n-\t\t  fprintf (dump_file, \"No outgoing edge range, picked up \");\n-\t\t  e_range.dump (dump_file);\n-\t\t  fprintf (dump_file, \"\\n\");\n-\t\t}\n-\t    }\n-\t  else\n-\t    {\n-\t      if (DEBUG_RANGE_CACHE)\n-\t\t{\n-\t\t  fprintf (dump_file, \"outgoing range :\");\n-\t\t  e_range.dump (dump_file);\n-\t\t  fprintf (dump_file, \"\\n\");\n-\t\t}\n+\t      fprintf (dump_file, \"   edge %d->%d :\", e->src->index, bb->index);\n+\t      e_range.dump (dump_file);\n+\t      fprintf (dump_file, \"\\n\");\n \t    }\n \t  new_range.union_ (e_range);\n \t  if (new_range.varying_p ())\n@@ -1074,7 +1059,11 @@ ranger_cache::propagate_cache (tree name)\n \t  if (DEBUG_RANGE_CACHE) \n \t    {\n \t      if (!ok_p)\n-\t\tfprintf (dump_file, \"     Cache failure to store value.\");\n+\t\t{\n+\t\t  fprintf (dump_file, \"   Cache failure to store value:\");\n+\t\t  print_generic_expr (dump_file, name, TDF_SLIM);\n+\t\t  fprintf (dump_file, \"  \");\n+\t\t}\n \t      else\n \t\t{\n \t\t  fprintf (dump_file, \"      Updating range to \");"}]}