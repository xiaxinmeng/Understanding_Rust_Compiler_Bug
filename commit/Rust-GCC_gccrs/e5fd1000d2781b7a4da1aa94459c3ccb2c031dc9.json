{"sha": "e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVmZDEwMDBkMjc4MWI3YTRkYTFhYTk0NDU5YzNjY2IyYzAzMWRjOQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-09-14T20:43:35Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-09-14T20:43:35Z"}, "message": "Test for -fbranch-probability.\n\n\t* g77.dg/bprob: New directory.\n\t* g77.dg/bprob/bprob.exp: New file.\n\t* g77.dg/bprob/bprob-1.f: New test.\n\nFrom-SVN: r45608", "tree": {"sha": "4349d59ad8f695882dc295411dba0a75b81d2ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4349d59ad8f695882dc295411dba0a75b81d2ff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9/comments", "author": null, "committer": null, "parents": [{"sha": "1f8d138f4e374ce0187f078e44952e4fa2a53435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8d138f4e374ce0187f078e44952e4fa2a53435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8d138f4e374ce0187f078e44952e4fa2a53435"}], "stats": {"total": 330, "additions": 330, "deletions": 0}, "files": [{"sha": "73f04405b9bcffcca4169fb0851db9ade53cc30e", "filename": "gcc/testsuite/g77.dg/bprob/bprob-1.f", "status": "added", "additions": 330, "deletions": 0, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob-1.f?ref=e5fd1000d2781b7a4da1aa94459c3ccb2c031dc9", "patch": "@@ -0,0 +1,330 @@\n+C Test profile-directed block ordering with various Fortran 77 constructs\n+C to catch basic regressions in the functionality.\n+\n+      program bprob1\n+      implicit none\n+      integer i,j,k,n\n+      integer result\n+      integer lpall, ieall, gtall\n+      integer lpval, ieval, gtval\n+\n+      lpval = lpall()\n+      ieval = ieall()\n+      gtval = gtall()\n+      if ((lpval .ne. 1) .or. (ieval .ne. 1) .or. (gtval .ne. 1)) then\n+         call abort\n+      end if\n+      \n+      end\n+\n+C Pass a value through a function to thwart optimization.\n+      integer function foo(i)\n+      implicit none\n+      integer i\n+      foo = i\n+      end\n+\n+C Test various flavors of GOTO and compare results against expected values.\n+      integer function gtall()\n+      implicit none\n+      integer gt1, gt2, gt3, gt4, gt5\n+      integer gtval\n+\n+      gtall = 1\n+      gtval = 0\n+      gtval = gtval + gt1(0)\n+      gtval = gtval + gt1(1)\n+      if (gtval .ne. 3) then\n+         print *,\"gtall part 1:  \", gtval, 3\n+         gtall = 0\n+      end if\n+\n+      gtval = 0\n+      gtval = gtval + gt2(3)\n+      gtval = gtval + gt2(30)\n+      if (gtval .ne. 12) then\n+         print *,\"gtall part 2:  \", gtval, 12\n+         gtall = 0\n+      end if\n+\n+      gtval = 0\n+      gtval = gtval + gt3(0)\n+      gtval = gtval + gt3(3)\n+      if (gtval .ne. 48) then\n+         print *,\"gtall part 3:  \", gtval, 48\n+         gtall = 0\n+      end if\n+\n+      gtval = 0\n+      gtval = gtval + gt4(1)\n+      gtval = gtval + gt4(2)\n+      gtval = gtval + gt4(3)\n+      if (gtval .ne. 14) then\n+         print *,\"gtall part 4:  \", gtval, 14\n+         gtall = 0\n+      end if\n+\n+      gtval = 0\n+      gtval = gtval + gt5(0)\n+      gtval = gtval + gt5(-1)\n+      gtval = gtval + gt5(5)\n+      if (gtval .ne. 14) then\n+         print *,\"gtall part 5:  \", gtval, 14\n+         gtall = 0\n+      end if\n+      end\n+\n+C Test simple GOTO.\n+      integer function gt1(f)\n+      implicit none\n+      integer f\n+      if (f .ne. 0) goto 100\n+      gt1 = 1\n+      goto 101\n+  100 gt1 = 2\n+  101 continue\n+      end\n+\n+C Test simple GOTO again, this time out of a DO loop.\n+      integer function gt2(f)\n+      implicit none\n+      integer f\n+      integer i\n+      do i=1,10\n+         if (i .eq. f) goto 100\n+      end do\n+      gt2 = 4\n+      goto 101\n+  100 gt2 = 8\n+  101 continue\n+      end\n+\n+C Test computed GOTO.\n+      integer function gt3(i)\n+      implicit none\n+      integer i\n+      gt3 = 8\n+      goto (101, 102, 103, 104), i\n+      goto 105\n+  101 gt3 = 1024\n+      goto 105\n+  102 gt3 = 2048\n+      goto 105\n+  103 gt3 = 16\n+      goto 105\n+  104 gt3 = 4096\n+      goto 105\n+  105 gt3 = gt3 * 2\n+      end\n+\n+C Test assigned GOTO.\n+      integer function gt4(i)\n+      implicit none\n+      integer i\n+      integer label\n+      assign 101 to label\n+      if (i .eq. 2) assign 102 to label\n+      if (i .eq. 3) assign 103 to label\n+      goto label, (101, 102, 103)\n+  101 gt4 = 1\n+      goto 104\n+  102 gt4 = 2\n+      goto 104\n+  103 gt4 = 4\n+  104 gt4 = gt4 * 2\n+      end\n+\n+C Test arithmetic IF (bundled with the GOTO variants).\n+      integer function gt5(i)\n+      implicit none\n+      integer i\n+      gt5 = 1\n+      if (i) 101, 102, 103\n+  101 gt5 = 2\n+      goto 104\n+  102 gt5 = 4\n+      goto 104\n+  103 gt5 = 8\n+  104 continue\n+      end\n+\n+C Run all of the loop tests and check results against expected values.\n+      integer function lpall()\n+      implicit none\n+      integer loop1, loop2\n+      integer loopval\n+\n+      lpall = 1\n+      loopval = 0\n+      loopval = loopval + loop1(1,0)\n+      loopval = loopval + loop1(1,2)\n+      loopval = loopval + loop1(1,7)\n+      if (loopval .ne. 12) then\n+         print *,\"lpall part 1:  \", loopval, 12\n+         lpall = 0\n+      end if\n+\n+      loopval = 0\n+      loopval = loopval + loop2(1,0,0,0)\n+      loopval = loopval + loop2(1,1,0,0)\n+      loopval = loopval + loop2(1,1,3,0)\n+      loopval = loopval + loop2(1,1,3,1)\n+      loopval = loopval + loop2(1,3,1,5)\n+      loopval = loopval + loop2(1,3,7,3)\n+      if (loopval .ne. 87) then\n+         print *,\"lpall part 2:  \", loopval, 87\n+         lpall = 0\n+      end if\n+      end\n+\n+C Test a simple DO loop.\n+      integer function loop1(r,n)\n+      implicit none\n+      integer r,n,i\n+\n+      loop1 = r\n+      do i=1,n\n+         loop1 = loop1 + 1\n+      end do\n+      end\n+\n+C Test nested DO loops.\n+      integer function loop2(r, l, m, n)\n+      implicit none\n+      integer r,l,m,n\n+      integer i,j,k\n+      loop2 = r\n+      do i=1,l\n+         do j=1,m\n+            do k=1,n\n+               loop2 = loop2 + 1\n+            end do\n+         end do\n+      end do\n+      end\n+\n+C Test various combinations of IF-THEN-ELSE and check results against\n+C expected values.\n+      integer function ieall()\n+      implicit none\n+      integer ie1, ie2, ie3\n+      integer ieval\n+      ieall = 1\n+      ieval = 0\n+      \n+      ieval = ieval + ie1(0,2)\n+      ieval = ieval + ie1(0,0)\n+      ieval = ieval + ie1(1,2)\n+      ieval = ieval + ie1(10,2)\n+      ieval = ieval + ie1(11,11)\n+      if (ieval .ne. 31) then\n+         print *,\"ieall part 1:  \", ieval, 31\n+         ieall = 0\n+      end if\n+\n+      ieval = 0\n+      ieval = ieval + ie2(0)\n+      ieval = ieval + ie2(2)\n+      ieval = ieval + ie2(2)\n+      ieval = ieval + ie2(2)\n+      ieval = ieval + ie2(3)\n+      ieval = ieval + ie2(3)\n+      if (ieval .ne. 23) then\n+         print *,\"ieall part 2:  \", ieval, 23\n+         ieall = 0\n+      end if\n+\n+      ieval = 0\n+      ieval = ieval + ie3(11,19)\n+      ieval = ieval + ie3(25,27)\n+      ieval = ieval + ie3(11,22)\n+      ieval = ieval + ie3(11,10)\n+      ieval = ieval + ie3(21,32)\n+      ieval = ieval + ie3(21,20)\n+      ieval = ieval + ie3(1,2)\n+      ieval = ieval + ie3(32,31)\n+      ieval = ieval + ie3(3,0)\n+      ieval = ieval + ie3(0,47)\n+      ieval = ieval + ie3(65,65)\n+      if (ieval .ne. 246) then\n+         print *,\"ieall part 3:  \", ieval, 246\n+         ieall = 0\n+      end if\n+      end\n+\n+C Test IF-THEN-ELSE.\n+      integer function ie1(i,j)\n+      implicit none\n+      integer i,j\n+      integer foo\n+\n+      ie1 = 0\n+      if (i .ne. 0) then\n+         if (j .ne. 0) then\n+            ie1 = foo(4)\n+         else\n+            ie1 = foo(1024)\n+         end if\n+      else\n+         if (j .ne. 0) then\n+            ie1 = foo(1)\n+         else\n+            ie1 = foo(2)\n+         end if\n+      end if\n+      if (i .gt. j) then\n+         ie1 = foo(ie1*2)\n+      end if\n+      if (i .gt. 10) then\n+         if (j .gt. 10) then\n+            ie1 = foo(ie1*4)\n+         end if\n+      end if\n+      end\n+\n+C Test a series of simple IF-THEN statements.\n+      integer function ie2(i)\n+      implicit none\n+      integer i\n+      integer foo\n+      ie2 = 0\n+\n+      if (i .eq. 0) then\n+         ie2 = foo(1)\n+      end if\n+      if (i .eq. 1) then\n+         ie2 = foo(1024)\n+      end if\n+      if (i .eq. 2) then\n+         ie2 = foo(2)\n+      end if\n+      if (i .eq. 3) then\n+         ie2 = foo(8)\n+      end if\n+      if (i .eq. 4) then\n+         ie2 = foo(2048)\n+      end if\n+\n+      end\n+\n+C Test nested IF statements and IF with compound expressions.\n+      integer function ie3(i,j)\n+      implicit none\n+      integer i,j\n+      integer foo\n+\n+      ie3 = 1\n+      if ((i .gt. 10) .and. (j .gt. i) .and. (j .lt. 20)) then\n+         ie3 = foo(16)\n+      end if\n+      if (i .gt. 20) then\n+         if (j .gt. i) then\n+            if (j .lt. 30) then\n+               ie3 = foo(32)\n+            end if\n+         end if\n+      end if\n+      if ((i .eq. 3) .or. (j .eq. 47) .or. (i .eq.j)) then\n+         ie3 = foo(64)\n+      end if\n+      end"}]}