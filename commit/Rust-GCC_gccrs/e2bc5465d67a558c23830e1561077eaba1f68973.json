{"sha": "e2bc5465d67a558c23830e1561077eaba1f68973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJiYzU0NjVkNjdhNTU4YzIzODMwZTE1NjEwNzdlYWJhMWY2ODk3Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T12:50:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T12:50:18Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb: Minor reformatting.\n\n2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch3.adb (Default_Initialize_Object): Add new variables\n\tAbrt_Blk and Dummy. Generate a dummy temporary when aborts are\n\tnot allowed to ensure the symmetrical generation of symbols.\n\t* exp_ch7.adb (Build_Object_Declarations): Remove variables A_Expr\n\tand E_Decl. Add new variables Decl and Dummy. Generate a dummy\n\ttemporary when aborts are not allowed to ensure symmertrical\n\tgeneration of symbols.\n\t* exp_intr.adb (Expand_Unc_Deallocation): Add new variable\n\tDummy. Generate a dummy temporary when aborts are not allowed\n\tto ensure symmertrical generation of symbols.\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_dbug.adb (Debug_Renaming_Declaration): For an object\n\trenaming, indicate that the renamed entity itself needs debug\n\tinformation. This is necessary if that entity is a temporary,\n\te.g. part of the expansion of an explicit dereference in an\n\titerator.\n\nFrom-SVN: r213157", "tree": {"sha": "4a5a4a18d332f90e79570e013594d8a2f996c0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a5a4a18d332f90e79570e013594d8a2f996c0ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2bc5465d67a558c23830e1561077eaba1f68973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bc5465d67a558c23830e1561077eaba1f68973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2bc5465d67a558c23830e1561077eaba1f68973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bc5465d67a558c23830e1561077eaba1f68973/comments", "author": null, "committer": null, "parents": [{"sha": "414c65636fdd1503b2134da24a49bb8a3ab57ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414c65636fdd1503b2134da24a49bb8a3ab57ee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/414c65636fdd1503b2134da24a49bb8a3ab57ee3"}], "stats": {"total": 203, "additions": 133, "deletions": 70}, "files": [{"sha": "3b7ae6bbef2c085d0212d6eb757a5bf4841f1343", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2bc5465d67a558c23830e1561077eaba1f68973", "patch": "@@ -1,3 +1,28 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb: Minor reformatting.\n+\n+2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch3.adb (Default_Initialize_Object): Add new variables\n+\tAbrt_Blk and Dummy. Generate a dummy temporary when aborts are\n+\tnot allowed to ensure the symmetrical generation of symbols.\n+\t* exp_ch7.adb (Build_Object_Declarations): Remove variables A_Expr\n+\tand E_Decl. Add new variables Decl and Dummy. Generate a dummy\n+\ttemporary when aborts are not allowed to ensure symmertrical\n+\tgeneration of symbols.\n+\t* exp_intr.adb (Expand_Unc_Deallocation): Add new variable\n+\tDummy. Generate a dummy temporary when aborts are not allowed\n+\tto ensure symmertrical generation of symbols.\n+\n+2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_dbug.adb (Debug_Renaming_Declaration): For an object\n+\trenaming, indicate that the renamed entity itself needs debug\n+\tinformation. This is necessary if that entity is a temporary,\n+\te.g. part of the expansion of an explicit dereference in an\n+\titerator.\n+\n 2014-07-29  Thomas Quinot  <quinot@adacore.com>\n \n \t* errout.adb (Set_Error_Posted): When propagating flag to"}, {"sha": "1274b31ea1c93a34e3789e4a68c6a4557e0304ca", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=e2bc5465d67a558c23830e1561077eaba1f68973", "patch": "@@ -3008,12 +3008,11 @@ package body Errout is\n             exit when Nkind (P) not in N_Subexpr;\n          end loop;\n \n-         if Nkind_In (P,\n-              N_Pragma_Argument_Association,\n-              N_Component_Association,\n-              N_Discriminant_Association,\n-              N_Generic_Association,\n-              N_Parameter_Association)\n+         if Nkind_In (P, N_Pragma_Argument_Association,\n+                         N_Component_Association,\n+                         N_Discriminant_Association,\n+                         N_Generic_Association,\n+                         N_Parameter_Association)\n          then\n             Set_Error_Posted (Parent (P));\n          end if;"}, {"sha": "f454768e1040e7b19b05972604c2c907236f1e7f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 45, "deletions": 33, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e2bc5465d67a558c23830e1561077eaba1f68973", "patch": "@@ -5031,6 +5031,7 @@ package body Exp_Ch3 is\n \n          --  Local variables\n \n+         Abrt_Blk   : Node_Id;\n          Abrt_HSS   : Node_Id;\n          Abrt_Id    : Entity_Id;\n          Abrt_Stmts : List_Id;\n@@ -5041,6 +5042,11 @@ package body Exp_Ch3 is\n          Obj_Init   : Node_Id := Empty;\n          Obj_Ref    : Node_Id;\n \n+         Dummy : Entity_Id;\n+         pragma Unreferenced (Dummy);\n+         --  This variable captures an unused dummy internal entity, see the\n+         --  comment associated with its use.\n+\n       --  Start of processing for Default_Initialize_Object\n \n       begin\n@@ -5205,47 +5211,53 @@ package body Exp_Ch3 is\n \n          --  Step 3b: Build the abort block (if applicable)\n \n-         --  The abort block is required when aborts are allowed and there is\n-         --  at least one initialization call that needs protection.\n+         --  The abort block is required when aborts are allowed in order to\n+         --  protect both initialization calls.\n \n-         if Abort_Allowed\n-           and then Present (Comp_Init)\n-           and then Present (Obj_Init)\n-         then\n-            --  Generate:\n-            --    Abort_Defer;\n+         if Present (Comp_Init) and then Present (Obj_Init) then\n+            if Abort_Allowed then\n \n-            Prepend_To (Fin_Stmts, Build_Runtime_Call (Loc, RE_Abort_Defer));\n+               --  Generate:\n+               --    Abort_Defer;\n \n-            --  Generate:\n-            --    begin\n-            --       Abort_Defer;\n-            --       <finalization statements>\n-            --    at end\n-            --       Abort_Undefer_Direct;\n-            --    end;\n+               Prepend_To\n+                 (Fin_Stmts, Build_Runtime_Call (Loc, RE_Abort_Defer));\n \n-            Abrt_Id := New_Internal_Entity (E_Block, Current_Scope, Loc, 'B');\n-            Set_Etype (Abrt_Id, Standard_Void_Type);\n-            Set_Scope (Abrt_Id, Current_Scope);\n+               --  Generate:\n+               --    begin\n+               --       Abort_Defer;\n+               --       <finalization statements>\n+               --    at end\n+               --       Abort_Undefer_Direct;\n+               --    end;\n+\n+               Abrt_HSS :=\n+                 Make_Handled_Sequence_Of_Statements (Loc,\n+                   Statements  => Fin_Stmts,\n+                   At_End_Proc =>\n+                     New_Occurrence_Of (RTE (RE_Abort_Undefer_Direct), Loc));\n \n-            Abrt_HSS :=\n-              Make_Handled_Sequence_Of_Statements (Loc,\n-                Statements  => Fin_Stmts,\n-                At_End_Proc =>\n-                  New_Occurrence_Of (RTE (RE_Abort_Undefer_Direct), Loc));\n+               Abrt_Blk :=\n+                 Make_Block_Statement (Loc,\n+                   Declarations               => No_List,\n+                   Handled_Statement_Sequence => Abrt_HSS);\n+\n+               Add_Block_Identifier (Abrt_Blk, Abrt_Id);\n+               Expand_At_End_Handler (Abrt_HSS, Abrt_Id);\n \n-            Abrt_Stmts := New_List (\n-              Make_Block_Statement (Loc,\n-                Identifier                 => New_Occurrence_Of (Abrt_Id, Loc),\n-                Declarations               => No_List,\n-                Handled_Statement_Sequence => Abrt_HSS));\n+               Abrt_Stmts := New_List (Abrt_Blk);\n \n-            Expand_At_End_Handler (Abrt_HSS, Abrt_Id);\n+            --  Abort is not required\n+\n+            else\n+               --  Generate a dummy entity to ensure that the internal symbols\n+               --  are in sync when a unit is compiled with and without aborts.\n+\n+               Dummy := New_Internal_Entity (E_Block, Current_Scope, Loc, 'B');\n+               Abrt_Stmts := Fin_Stmts;\n+            end if;\n \n-         --  Abort is not required, the construct from Step 3a is to be added\n-         --  in the tree (either finalization block or single initialization\n-         --  call).\n+         --  No initialization calls present\n \n          else\n             Abrt_Stmts := Fin_Stmts;"}, {"sha": "a714d20e829ef87d6a61e8d325fa834e045b9089", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 37, "deletions": 28, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=e2bc5465d67a558c23830e1561077eaba1f68973", "patch": "@@ -3134,8 +3134,12 @@ package body Exp_Ch7 is\n       Loc         : Source_Ptr;\n       For_Package : Boolean := False)\n    is\n-      A_Expr : Node_Id;\n-      E_Decl : Node_Id;\n+      Decl : Node_Id;\n+\n+      Dummy : Entity_Id;\n+      pragma Unreferenced (Dummy);\n+      --  This variable captures an unused dummy internal entity, see the\n+      --  comment associated with its use.\n \n    begin\n       pragma Assert (Decls /= No_List);\n@@ -3164,56 +3168,61 @@ package body Exp_Ch7 is\n       --  does not include routine Raise_From_Controlled_Operation which is the\n       --  the sole user of flag Abort.\n \n-      --  This is not needed for library-level finalizers as they are called\n-      --  by the environment task and cannot be aborted.\n+      --  This is not needed for library-level finalizers as they are called by\n+      --  the environment task and cannot be aborted.\n \n-      if Abort_Allowed\n-        and then VM_Target = No_VM\n-        and then not For_Package\n-      then\n-         Data.Abort_Id  := Make_Temporary (Loc, 'A');\n+      if VM_Target = No_VM and then not For_Package then\n+         if Abort_Allowed then\n+            Data.Abort_Id := Make_Temporary (Loc, 'A');\n \n-         A_Expr := New_Occurrence_Of (RTE (RE_Triggered_By_Abort), Loc);\n+            --  Generate:\n+            --    Abort_Id : constant Boolean := <A_Expr>;\n \n-         --  Generate:\n+            Append_To (Decls,\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Data.Abort_Id,\n+                Constant_Present    => True,\n+                Object_Definition   =>\n+                  New_Occurrence_Of (Standard_Boolean, Loc),\n+                Expression          =>\n+                  New_Occurrence_Of (RTE (RE_Triggered_By_Abort), Loc)));\n \n-         --    Abort_Id : constant Boolean := <A_Expr>;\n+         --  Abort is not required\n \n-         Append_To (Decls,\n-           Make_Object_Declaration (Loc,\n-             Defining_Identifier => Data.Abort_Id,\n-             Constant_Present    => True,\n-             Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n-             Expression          => A_Expr));\n+         else\n+            --  Generate a dummy entity to ensure that the internal symbols are\n+            --  in sync when a unit is compiled with and without aborts.\n \n-      else\n-         --  No abort, .NET/JVM or library-level finalizers\n+            Dummy := Make_Temporary (Loc, 'A');\n+            Data.Abort_Id := Empty;\n+         end if;\n \n-         Data.Abort_Id  := Empty;\n+      --  .NET/JVM or library-level finalizers\n+\n+      else\n+         Data.Abort_Id := Empty;\n       end if;\n \n       if Exception_Extra_Info then\n-         Data.E_Id      := Make_Temporary (Loc, 'E');\n+         Data.E_Id := Make_Temporary (Loc, 'E');\n \n          --  Generate:\n-\n          --    E_Id : Exception_Occurrence;\n \n-         E_Decl :=\n+         Decl :=\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Data.E_Id,\n              Object_Definition   =>\n                New_Occurrence_Of (RTE (RE_Exception_Occurrence), Loc));\n-         Set_No_Initialization (E_Decl);\n+         Set_No_Initialization (Decl);\n \n-         Append_To (Decls, E_Decl);\n+         Append_To (Decls, Decl);\n \n       else\n-         Data.E_Id      := Empty;\n+         Data.E_Id := Empty;\n       end if;\n \n       --  Generate:\n-\n       --    Raised_Id : Boolean := False;\n \n       Append_To (Decls,"}, {"sha": "7337acc7c97eddddd32cdfcebf6afafea1f82610", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=e2bc5465d67a558c23830e1561077eaba1f68973", "patch": "@@ -479,6 +479,13 @@ package body Exp_Dbug is\n \n       Set_Debug_Info_Needed (Obj);\n \n+      --  The renamed entity may be a temporary, e.g. the result of an\n+      --  implicit dereference in an iterator. Indicate that the temporary\n+      --  itself requires debug information. If the renamed entity comes\n+      --  from source this is a no-op.\n+\n+      Set_Debug_Info_Needed (Entity (Ren));\n+\n       --  Mark the object as internal so that it won't be initialized when\n       --  pragma Initialize_Scalars or Normalize_Scalars is in use.\n "}, {"sha": "3c6eb7468fa36e5573344d39fa80b1e12ab9473a", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc5465d67a558c23830e1561077eaba1f68973/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=e2bc5465d67a558c23830e1561077eaba1f68973", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -914,6 +914,7 @@ package body Exp_Intr is\n       Finalizer_Data  : Finalization_Exception_Data;\n \n       Blk        : Node_Id := Empty;\n+      Blk_Id     : Entity_Id;\n       Deref      : Node_Id;\n       Final_Code : List_Id;\n       Free_Arg   : Node_Id;\n@@ -926,6 +927,11 @@ package body Exp_Intr is\n       --  that we analyze some generated statements before properly attaching\n       --  them to the tree, and that can disturb current value settings.\n \n+      Dummy : Entity_Id;\n+      pragma Unreferenced (Dummy);\n+      --  This variable captures an unused dummy internal entity, see the\n+      --  comment associated with its use.\n+\n    begin\n       --  Nothing to do if we know the argument is null\n \n@@ -1007,18 +1013,23 @@ package body Exp_Intr is\n          --  protected by an abort defer/undefer pair.\n \n          if Abort_Allowed then\n-            Prepend_To (Final_Code,\n-              Build_Runtime_Call (Loc, RE_Abort_Defer));\n+            Prepend_To (Final_Code, Build_Runtime_Call (Loc, RE_Abort_Defer));\n \n             Blk :=\n               Make_Block_Statement (Loc, Handled_Statement_Sequence =>\n                 Make_Handled_Sequence_Of_Statements (Loc,\n                   Statements  => Final_Code,\n                   At_End_Proc =>\n                     New_Occurrence_Of (RTE (RE_Abort_Undefer_Direct), Loc)));\n+            Add_Block_Identifier (Blk, Blk_Id);\n \n             Append (Blk, Stmts);\n+\n          else\n+            --  Generate a dummy entity to ensure that the internal symbols are\n+            --  in sync when a unit is compiled with and without aborts.\n+\n+            Dummy := New_Internal_Entity (E_Block, Current_Scope, Loc, 'B');\n             Append_List_To (Stmts, Final_Code);\n          end if;\n       end if;"}]}