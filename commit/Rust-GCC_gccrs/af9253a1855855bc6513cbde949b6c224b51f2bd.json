{"sha": "af9253a1855855bc6513cbde949b6c224b51f2bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY5MjUzYTE4NTU4NTViYzY1MTNjYmRlOTQ5YjZjMjI0YjUxZjJiZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2008-09-06T00:44:13Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2008-09-06T00:44:13Z"}, "message": "tm.texi (IRA_COVER_CLASSES): Fix a typo.\n\n2008-09-05  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* doc/tm.texi (IRA_COVER_CLASSES): Fix a typo.\n\nFrom-SVN: r140053", "tree": {"sha": "fb9751028a10e9fae1f69a74db826dcbb5b7bfe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb9751028a10e9fae1f69a74db826dcbb5b7bfe5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af9253a1855855bc6513cbde949b6c224b51f2bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9253a1855855bc6513cbde949b6c224b51f2bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9253a1855855bc6513cbde949b6c224b51f2bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9253a1855855bc6513cbde949b6c224b51f2bd/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b8d9676607e7472a5e4cd772ec814a29b02658d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8d9676607e7472a5e4cd772ec814a29b02658d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b8d9676607e7472a5e4cd772ec814a29b02658d"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "4606969779ce27e4de84cab99b2b47b7b49592bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af9253a1855855bc6513cbde949b6c224b51f2bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af9253a1855855bc6513cbde949b6c224b51f2bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af9253a1855855bc6513cbde949b6c224b51f2bd", "patch": "@@ -1,4 +1,8 @@\n-2008-09-04  Vladimir Makarov  <vmakarov@redhat.com>\n+2008-09-05  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* doc/tm.texi (IRA_COVER_CLASSES): Fix a typo.\n+\n+2008-09-05  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira-color.c (ira_fast_allocation): Permit global allocno\n \tallocation."}, {"sha": "eba39cde164f4e15d5906e07b542316b2d1d1e7f", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af9253a1855855bc6513cbde949b6c224b51f2bd/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af9253a1855855bc6513cbde949b6c224b51f2bd/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=af9253a1855855bc6513cbde949b6c224b51f2bd", "patch": "@@ -2830,7 +2830,7 @@ as below:\n The macro defines cover classes for the Integrated Register Allocator\n (@acronym{IRA}).  Cover classes are a set of non-intersecting register\n classes covering all hard registers used for register allocation\n-purposes.  If a move between two registers in the same cover class are\n+purposes.  If a move between two registers in the same cover class is\n possible, it should be cheaper than a load or store of the registers.\n The macro value should be the initializer for an array of register\n class values, with @code{LIM_REG_CLASSES} used as the end marker."}]}