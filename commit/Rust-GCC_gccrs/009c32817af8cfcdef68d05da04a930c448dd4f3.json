{"sha": "009c32817af8cfcdef68d05da04a930c448dd4f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA5YzMyODE3YWY4Y2ZjZGVmNjhkMDVkYTA0YTkzMGM0NDhkZDRmMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-12-14T11:19:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-12-14T11:19:28Z"}, "message": "tweak comment\n\nFrom-SVN: r47998", "tree": {"sha": "e8ef2e0494efc960fae81761d556b7b4b08079c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8ef2e0494efc960fae81761d556b7b4b08079c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/009c32817af8cfcdef68d05da04a930c448dd4f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009c32817af8cfcdef68d05da04a930c448dd4f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/009c32817af8cfcdef68d05da04a930c448dd4f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009c32817af8cfcdef68d05da04a930c448dd4f3/comments", "author": null, "committer": null, "parents": [{"sha": "a4cf1d8534aa178a01522936044e5d62579161d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4cf1d8534aa178a01522936044e5d62579161d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4cf1d8534aa178a01522936044e5d62579161d7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c3958f9e7323b3e28fe7f57671f4abab486394a6", "filename": "gcc/except.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009c32817af8cfcdef68d05da04a930c448dd4f3/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009c32817af8cfcdef68d05da04a930c448dd4f3/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=009c32817af8cfcdef68d05da04a930c448dd4f3", "patch": "@@ -1022,7 +1022,12 @@ begin_protect_partials ()\n /* Start a new exception region for a region of code that has a\n    cleanup action and push the HANDLER for the region onto\n    protect_list. All of the regions created with add_partial_entry\n-   will be ended when end_protect_partials is invoked.  */\n+   will be ended when end_protect_partials is invoked.\n+\n+   ??? The only difference between this purpose and that of\n+   expand_decl_cleanup is that in this case, we only want the cleanup to\n+   run if an exception is thrown.  This should also be handled using\n+   binding levels.  */\n \n void\n add_partial_entry (handler)"}]}