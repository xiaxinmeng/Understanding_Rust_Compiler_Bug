{"sha": "27d2e61268434dc682b81227e93ae9022d4d290f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkMmU2MTI2ODQzNGRjNjgyYjgxMjI3ZTkzYWU5MDIyZDRkMjkwZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2013-08-08T13:46:28Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2013-08-08T13:46:28Z"}, "message": "re PR target/57431 (ICE in simplify_const_unary_operation vld1_dup_s64/vst1_s64)\n\n\tPR target/57431\n\t* arm/neon.md (neon_vld1_dupdi): New expand pattern.\n\t(neon_vld1_dup<mode> VD iterator): Iterate over VD not VDX.\n\nFrom-SVN: r201599", "tree": {"sha": "c74cbb02a0e224f62a786e6d19b283646ee1eaf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c74cbb02a0e224f62a786e6d19b283646ee1eaf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27d2e61268434dc682b81227e93ae9022d4d290f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d2e61268434dc682b81227e93ae9022d4d290f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d2e61268434dc682b81227e93ae9022d4d290f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d2e61268434dc682b81227e93ae9022d4d290f/comments", "author": null, "committer": null, "parents": [{"sha": "5efc661cc49cf7bd83fc805f91e02eefd44073e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efc661cc49cf7bd83fc805f91e02eefd44073e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5efc661cc49cf7bd83fc805f91e02eefd44073e1"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "e55b5db7608e00b521d2012c93a481d2eecfae47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d2e61268434dc682b81227e93ae9022d4d290f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d2e61268434dc682b81227e93ae9022d4d290f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27d2e61268434dc682b81227e93ae9022d4d290f", "patch": "@@ -1,3 +1,9 @@\n+2013-08-08  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/57431\n+\t* arm/neon.md (neon_vld1_dupdi): New expand pattern.\n+\t(neon_vld1_dup<mode> VD iterator): Iterate over VD not VDX.\n+\n 2013-08-08  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/56979"}, {"sha": "627cc71ebc275ad6a9ecb1f852e82794d96a0ef5", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d2e61268434dc682b81227e93ae9022d4d290f/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d2e61268434dc682b81227e93ae9022d4d290f/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=27d2e61268434dc682b81227e93ae9022d4d290f", "patch": "@@ -4593,19 +4593,20 @@\n )\n \n (define_insn \"neon_vld1_dup<mode>\"\n-  [(set (match_operand:VDX 0 \"s_register_operand\" \"=w\")\n-        (vec_duplicate:VDX (match_operand:<V_elem> 1 \"neon_struct_operand\" \"Um\")))]\n+  [(set (match_operand:VD 0 \"s_register_operand\" \"=w\")\n+        (vec_duplicate:VD (match_operand:<V_elem> 1 \"neon_struct_operand\" \"Um\")))]\n   \"TARGET_NEON\"\n-{\n-  if (GET_MODE_NUNITS (<MODE>mode) > 1)\n-    return \"vld1.<V_sz_elem>\\t{%P0[]}, %A1\";\n-  else\n-    return \"vld1.<V_sz_elem>\\t%h0, %A1\";\n-}\n-  [(set (attr \"neon_type\")\n-      (if_then_else (gt (const_string \"<V_mode_nunits>\") (const_string \"1\"))\n-                    (const_string \"neon_vld2_2_regs_vld1_vld2_all_lanes\")\n-                    (const_string \"neon_vld1_1_2_regs\")))]\n+  \"vld1.<V_sz_elem>\\t{%P0[]}, %A1\"\n+  [(set_attr \"neon_type\" \"neon_vld2_2_regs_vld1_vld2_all_lanes\")]\n+)\n+\n+;; Special case for DImode.  Treat it exactly like a simple load.\n+(define_expand \"neon_vld1_dupdi\"\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"\")\n+        (unspec:DI [(match_operand:DI 1 \"neon_struct_operand\" \"\")]\n+\t\t   UNSPEC_VLD1))]\n+  \"TARGET_NEON\"\n+  \"\"\n )\n \n (define_insn \"neon_vld1_dup<mode>\""}]}