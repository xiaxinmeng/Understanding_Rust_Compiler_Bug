{"sha": "cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M1OGNlZWU1ZDljMjRjMGFhYWQ0NWQ5NGRlM2M1ZmZjZjU1ZjYzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-04T23:07:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-04T23:07:20Z"}, "message": "re PR tree-optimization/47967 (ICE: verify_stmts failed: conversion of register to a different size with -fipa-cp on undefined code)\n\n\tPR tree-optimization/47967\n\t* ipa-cp.c (build_const_val): Return NULL instead of creating\n\tVIEW_CONVERT_EXPR for mismatching sizes.\n\t(ipcp_create_replace_map): Return NULL if build_const_val failed.\n\t(ipcp_insert_stage): If ipcp_create_replace_map returns NULL,\n\tgive up on versioning.\n\n\t* gcc.c-torture/compile/pr47967.c: New test.\n\nFrom-SVN: r170689", "tree": {"sha": "352a02c7c8b3eb836979f13b631297d4f3e7d3a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/352a02c7c8b3eb836979f13b631297d4f3e7d3a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea868305675efc1aab86644c80b8f23228b813f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea868305675efc1aab86644c80b8f23228b813f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea868305675efc1aab86644c80b8f23228b813f8"}], "stats": {"total": 82, "additions": 68, "deletions": 14}, "files": [{"sha": "c9c1540b1d29b8aaddfe0bbb4b64736e5074dbbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "patch": "@@ -1,3 +1,12 @@\n+2011-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47967\n+\t* ipa-cp.c (build_const_val): Return NULL instead of creating\n+\tVIEW_CONVERT_EXPR for mismatching sizes.\n+\t(ipcp_create_replace_map): Return NULL if build_const_val failed.\n+\t(ipcp_insert_stage): If ipcp_create_replace_map returns NULL,\n+\tgive up on versioning.\n+\n 2011-03-05  Alan Modra  <amodra@gmail.com>\n \n \tPR target/47986"}, {"sha": "db0941c36a3c275adc76ab128f79071c904ba53a", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "patch": "@@ -1,5 +1,5 @@\n /* Interprocedural constant propagation\n-   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Razya Ladelsky <RAZYA@il.ibm.com>\n \n@@ -587,8 +587,9 @@ ipcp_initialize_node_lattices (struct cgraph_node *node)\n     }\n }\n \n-/* build INTEGER_CST tree with type TREE_TYPE and value according to LAT.\n-   Return the tree.  */\n+/* Build a constant tree with type TREE_TYPE and value according to LAT.\n+   Return the tree, or, if it is not possible to convert such value\n+   to TREE_TYPE, NULL.  */\n static tree\n build_const_val (struct ipcp_lattice *lat, tree tree_type)\n {\n@@ -601,8 +602,10 @@ build_const_val (struct ipcp_lattice *lat, tree tree_type)\n     {\n       if (fold_convertible_p (tree_type, val))\n \treturn fold_build1 (NOP_EXPR, tree_type, val);\n-      else\n+      else if (TYPE_SIZE (tree_type) == TYPE_SIZE (TREE_TYPE (val)))\n \treturn fold_build1 (VIEW_CONVERT_EXPR, tree_type, val);\n+      else\n+\treturn NULL;\n     }\n   return val;\n }\n@@ -976,8 +979,20 @@ ipcp_create_replace_map (tree parm_tree, struct ipcp_lattice *lat)\n   struct ipa_replace_map *replace_map;\n   tree const_val;\n \n-  replace_map = ggc_alloc_ipa_replace_map ();\n   const_val = build_const_val (lat, TREE_TYPE (parm_tree));\n+  if (const_val == NULL_TREE)\n+    {\n+      if (dump_file)\n+\t{\n+\t  fprintf (dump_file, \"  const \");\n+\t  print_generic_expr (dump_file, lat->constant, 0);\n+\t  fprintf (dump_file, \"  can't be converted to param \");\n+\t  print_generic_expr (dump_file, parm_tree, 0);\n+\t  fprintf (dump_file, \"\\n\");\n+\t}\n+      return NULL;\n+    }\n+  replace_map = ggc_alloc_ipa_replace_map ();\n   if (dump_file)\n     {\n       fprintf (dump_file, \"  replacing param \");\n@@ -1378,15 +1393,6 @@ ipcp_insert_stage (void)\n \t  continue;\n \t}\n \n-      new_size += growth;\n-\n-      /* Look if original function becomes dead after cloning.  */\n-      for (cs = node->callers; cs != NULL; cs = cs->next_caller)\n-\tif (cs->caller == node || ipcp_need_redirect_p (cs))\n-\t  break;\n-      if (!cs && cgraph_will_be_removed_from_program_if_no_direct_calls (node))\n-\tbitmap_set_bit (dead_nodes, node->uid);\n-\n       info = IPA_NODE_REF (node);\n       count = ipa_get_param_count (info);\n \n@@ -1413,11 +1419,28 @@ ipcp_insert_stage (void)\n \t    {\n \t      replace_param =\n \t\tipcp_create_replace_map (parm_tree, lat);\n+\t      if (replace_param == NULL)\n+\t\tbreak;\n \t      VEC_safe_push (ipa_replace_map_p, gc, replace_trees, replace_param);\n \t      if (args_to_skip)\n \t        bitmap_set_bit (args_to_skip, i);\n \t    }\n \t}\n+      if (i < count)\n+\t{\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"Not versioning, some parameters couldn't be replaced\");\n+\t  continue;\n+\t}\n+\n+      new_size += growth;\n+\n+      /* Look if original function becomes dead after cloning.  */\n+      for (cs = node->callers; cs != NULL; cs = cs->next_caller)\n+\tif (cs->caller == node || ipcp_need_redirect_p (cs))\n+\t  break;\n+      if (!cs && cgraph_will_be_removed_from_program_if_no_direct_calls (node))\n+\tbitmap_set_bit (dead_nodes, node->uid);\n \n       /* Compute how many callers node has.  */\n       node_callers = 0;"}, {"sha": "055e9ac60d11c8fdc7df603f2800a008d813d89e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "patch": "@@ -1,3 +1,8 @@\n+2011-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47967\n+\t* gcc.c-torture/compile/pr47967.c: New test.\n+\n 2011-03-04  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/property-encoding-1.m: Tidied up testcase."}, {"sha": "cc2c213974e220a7e1515d88e999a55b5a869d86", "filename": "gcc/testsuite/gcc.c-torture/compile/pr47967.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47967.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47967.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47967.c?ref=cc58ceee5d9c24c0aaad45d94de3c5ffcf55f63c", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/47967 */\n+\n+extern void abort (void);\n+static void bar ();\n+\n+void\n+foo ()\n+{\n+  bar (1);\n+}\n+\n+static void\n+bar (double i)\n+{\n+  if (i)\n+    abort ();\n+}"}]}