{"sha": "c25d8793cce98e6abaaf9c44be1526aaabd54e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1ZDg3OTNjY2U5OGU2YWJhYWY5YzQ0YmUxNTI2YWFhYmQ1NGU0Mw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1998-12-07T14:57:30Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1998-12-07T14:57:30Z"}, "message": "cccp.c (ignore_escape_flag): Add support for \\ as `natural' characters in file names in #line to be...\n\nMon Dec  7 17:55:06 1998  Mike Stump  <mrs@wrs.com>\n\t* cccp.c (ignore_escape_flag): Add support for \\ as `natural'\n\tcharacters in file names in #line to be consistent with #include\n\thandling.  We support escape prcessing in the # 1 \"...\" version of\n\tthe command.  See also support in cp/lex.c.\n\t(handle_directive): Likewise.\n\t(do_line): Likewise.\n\nFrom-SVN: r24156", "tree": {"sha": "b4caf25320b0e53c6673cf24365c3f744631bb63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4caf25320b0e53c6673cf24365c3f744631bb63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c25d8793cce98e6abaaf9c44be1526aaabd54e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25d8793cce98e6abaaf9c44be1526aaabd54e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c25d8793cce98e6abaaf9c44be1526aaabd54e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25d8793cce98e6abaaf9c44be1526aaabd54e43/comments", "author": null, "committer": null, "parents": [{"sha": "3a5ac29d20f6f97f0df1f49b8494b64f3e034266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5ac29d20f6f97f0df1f49b8494b64f3e034266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5ac29d20f6f97f0df1f49b8494b64f3e034266"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "c2811fe1ad8bc64a5d5d382f454f05978ae84aa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25d8793cce98e6abaaf9c44be1526aaabd54e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25d8793cce98e6abaaf9c44be1526aaabd54e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c25d8793cce98e6abaaf9c44be1526aaabd54e43", "patch": "@@ -1,3 +1,12 @@\n+Mon Dec  7 17:55:06 1998  Mike Stump  <mrs@wrs.com>\n+\n+\t* cccp.c (ignore_escape_flag): Add support for \\ as `natural'\n+\tcharacters in file names in #line to be consistent with #include\n+\thandling.  We support escape prcessing in the # 1 \"...\" version of\n+\tthe command.  See also support in cp/lex.c.\n+\t(handle_directive): Likewise.\n+\t(do_line): Likewise.\n+\t\n 1998-12-07  Zack Weinberg  <zack@rabi.phys.columbia.edu>\n \n \t* cpplib.c (initialize_char_syntax): Use ISALPHA and ISALNUM"}, {"sha": "34b9d46f839c32b55ab9834d5fd2461bfeef5880", "filename": "gcc/cccp.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25d8793cce98e6abaaf9c44be1526aaabd54e43/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25d8793cce98e6abaaf9c44be1526aaabd54e43/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=c25d8793cce98e6abaaf9c44be1526aaabd54e43", "patch": "@@ -868,6 +868,10 @@ static int errors = 0;\t\t\t/* Error counter for exit code */\n /* Name of output file, for error messages.  */\n static char *out_fname;\n \n+/* Nonzero to ignore \\ in string constants.  Use to treat #line 1 \"A:\\file.h\n+   as a non-form feed.  If you want it to be a form feed, you must use\n+   # 1 \"\\f\".  */\n+static int ignore_escape_flag = 1;\n \n /* Stack of conditionals currently in progress\n    (including both successful and failing conditionals).  */\n@@ -3806,6 +3810,8 @@ handle_directive (ip, op)\n   /* Record where the directive started.  do_xifdef needs this.  */\n   directive_start = bp - 1;\n \n+  ignore_escape_flag = 1;\n+\n   /* Skip whitespace and \\-newline.  */\n   while (1) {\n     if (is_hor_space[*bp]) {\n@@ -3868,6 +3874,7 @@ handle_directive (ip, op)\n \tpedwarn (\"`#' followed by integer\");\n       after_ident = ident;\n       kt = line_directive_table;\n+      ignore_escape_flag = 0;\n       goto old_linenum;\n     }\n \n@@ -6940,15 +6947,16 @@ do_line (buf, limit, op, keyword)\n \treturn 0;\n \n       case '\\\\':\n-\t{\n-\t  char *bpc = (char *) bp;\n-\t  HOST_WIDE_INT c = parse_escape (&bpc, (HOST_WIDE_INT) (U_CHAR) (-1));\n-\t  bp = (U_CHAR *) bpc;\n-\t  if (c < 0)\n-\t    p--;\n-\t  else\n-\t    p[-1] = c;\n-\t}\n+\tif (! ignore_escape_flag)\n+\t  {\n+\t    char *bpc = (char *) bp;\n+\t    HOST_WIDE_INT c = parse_escape (&bpc, (HOST_WIDE_INT) (U_CHAR) (-1));\n+\t    bp = (U_CHAR *) bpc;\n+\t    if (c < 0)\n+\t      p--;\n+\t    else\n+\t      p[-1] = c;\n+\t  }\n \tbreak;\n \n       case '\\\"':"}]}