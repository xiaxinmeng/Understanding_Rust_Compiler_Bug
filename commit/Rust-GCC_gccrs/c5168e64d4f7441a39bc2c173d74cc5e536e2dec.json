{"sha": "c5168e64d4f7441a39bc2c173d74cc5e536e2dec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxNjhlNjRkNGY3NDQxYTM5YmMyYzE3M2Q3NGNjNWU1MzZlMmRlYw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-09-02T10:04:26Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-09-02T10:04:26Z"}, "message": "Change HANDLE_PRAGMA macro so that it supports USE_CPPLIB\n\nFrom-SVN: r22167", "tree": {"sha": "40b5f24316a20968ad978759c604d8aeb719097c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40b5f24316a20968ad978759c604d8aeb719097c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5168e64d4f7441a39bc2c173d74cc5e536e2dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5168e64d4f7441a39bc2c173d74cc5e536e2dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5168e64d4f7441a39bc2c173d74cc5e536e2dec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5168e64d4f7441a39bc2c173d74cc5e536e2dec/comments", "author": null, "committer": null, "parents": [{"sha": "ae4d12ca9f1208a84a5e6d66aa1587cf5fb48b31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4d12ca9f1208a84a5e6d66aa1587cf5fb48b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4d12ca9f1208a84a5e6d66aa1587cf5fb48b31"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "ff424696a4b437a95612647701d3a27791730be4", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5168e64d4f7441a39bc2c173d74cc5e536e2dec/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5168e64d4f7441a39bc2c173d74cc5e536e2dec/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=c5168e64d4f7441a39bc2c173d74cc5e536e2dec", "patch": "@@ -1,3 +1,12 @@\n+Wed Sep 02 09:25:29 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* lex.c (check_newline):  Change how HANDLE_PRAGMA is called.\n+\tGenerate warning messages if unknown pragmas are encountered.\n+\t(pragma_getc): New function: retrieves characters from the\n+\tinput stream.  Defined when HANDLE_PRAGMA is defined.\n+\t(pragma_ungetc): New function: replaces characters back into the\n+\tinput stream.  Defined when HANDLE_PRAGMA is defined.\n+\n Mon Aug 31 15:35:16 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* decl.c (layout_chill_variants): Calculate nlables properly."}, {"sha": "17b926879e389a3321566c05c327edc55bc28a1e", "filename": "gcc/ch/lex.c", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5168e64d4f7441a39bc2c173d74cc5e536e2dec/gcc%2Fch%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5168e64d4f7441a39bc2c173d74cc5e536e2dec/gcc%2Fch%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flex.c?ref=c5168e64d4f7441a39bc2c173d74cc5e536e2dec", "patch": "@@ -1,5 +1,5 @@\n /* Lexical analyzer for GNU CHILL. -*- C -*-\n-   Copyright (C) 1992, 93, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 93, 1994, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1495,6 +1495,22 @@ getlc (file)\n   return c;\n }\n \f\n+#if defined HANDLE_PRAGMA\n+/* Local versions of these macros, that can be passed as function pointers.  */\n+static int\n+pragma_getc ()\n+{\n+  return getc (finput);\n+}\n+\n+static void\n+pragma_ungetc (arg)\n+     int arg;\n+{\n+  ungetc (arg, finput);\n+}\n+#endif /* HANDLE_PRAGMA */\n+\n /* At the beginning of a line, increment the line number and process\n    any #-directive on this line.  If the line is a #-directive, read\n    the entire line and return a newline.  Otherwise, return the line's\n@@ -1553,10 +1569,28 @@ check_newline ()\n \t      && (isspace (c = getlc (finput))))\n \t    {\n #ifdef HANDLE_PRAGMA\n-\t      return HANDLE_PRAGMA (finput, c);\n-#else\n-\t      goto skipline;\n+\t      static char buffer [128];\n+\t      char * buff = buffer;\n+\n+\t      /* Read the pragma name into a buffer.  */\n+\t      while (isspace (c = getlc (finput)))\n+\t\tcontinue;\n+\t      \n+\t      do\n+\t\t{\n+\t\t  * buff ++ = c;\n+\t\t  c = getlc (finput);\n+\t\t}\n+\t      while (c != EOF && ! isspace (c) && c != '\\n'\n+\t\t     && buff < buffer + 128);\n+\n+\t      pragma_ungetc (c);\n+\t\t\n+\t      * -- buff = 0;\n+\t      \n+\t      (void) HANDLE_PRAGMA (pragma_getc, pragma_ungetc, buffer);\n #endif /* HANDLE_PRAGMA */\n+\t      goto skipline;\n \t    }\n \t}\n "}]}