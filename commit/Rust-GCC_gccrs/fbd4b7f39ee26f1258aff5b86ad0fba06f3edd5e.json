{"sha": "fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkNGI3ZjM5ZWUyNmYxMjU4YWZmNWI4NmFkMGZiYTA2ZjNlZGQ1ZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-06-03T22:36:24Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-06-03T22:36:24Z"}, "message": "rs6000: Delete -mmfpgpr\n\nThis patch makes the -mmfpgpr option not do anything except warn that\nthe option is deprecated.\n\n\n\t* config/rs6000/rs6000.h (MASK_MFPGPR): Delete.\n\t* config/rs6000/rs6000.c (direct_move_p): Adjust.\n\t(rs6000_secondary_reload_simple_move): Adjust.\n\t(rs6000_opt_masks): Neuter the \"mfpgpr\" option.\n\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Adjust.\n\t* config/rs6000/rs6000-cpus.def (ISA_2_5_MASKS_EMBEDDED): Adjust\n\tcomment.\n\t(power6x): Adjust.\n\t* config/rs6000/rs6000.md (floatsi<mode>2_lfiwax): Adjust.\n\t(floatunssi<mode>2_lfiwzx): Adjust.\n\t(fix_trunc<mode>si2_stfiwx): Adjust.\n\t(fixuns_trunc<mode>si2_stfiwx): Adjust.\n\t* config/rs6000/rs6000.opt (mno-mfpgpr): New.\n\t(mfpgpr): Mark as deprecated.\n\t* doc/extend.texi (PowerPC Function Attributes): Delete mfpgpr.\n\t(Basic PowerPC Built-in Functions Available on ISA 2.05): Adjust.\n\t* doc/invoke.texi (RS/6000 and PowerPC Options): Delete -mmfpgpr.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/mmfpgpr.c: Delete.\n\nFrom-SVN: r271889", "tree": {"sha": "d506da46c8059f6d1d257b275d7de16db9f364e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d506da46c8059f6d1d257b275d7de16db9f364e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec7fd7807d5e1a06a8fe957d0e12df0753acb6c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7fd7807d5e1a06a8fe957d0e12df0753acb6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec7fd7807d5e1a06a8fe957d0e12df0753acb6c4"}], "stats": {"total": 127, "additions": 48, "deletions": 79}, "files": [{"sha": "d012ce23e541293e41e1ea17a4718dcb065d69db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -1,3 +1,23 @@\n+2019-06-03  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.h (MASK_MFPGPR): Delete.\n+\t* config/rs6000/rs6000.c (direct_move_p): Adjust.\n+\t(rs6000_secondary_reload_simple_move): Adjust.\n+\t(rs6000_opt_masks): Neuter the \"mfpgpr\" option.\n+\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Adjust.\n+\t* config/rs6000/rs6000-cpus.def (ISA_2_5_MASKS_EMBEDDED): Adjust\n+\tcomment.\n+\t(power6x): Adjust.\n+\t* config/rs6000/rs6000.md (floatsi<mode>2_lfiwax): Adjust.\n+\t(floatunssi<mode>2_lfiwzx): Adjust.\n+\t(fix_trunc<mode>si2_stfiwx): Adjust.\n+\t(fixuns_trunc<mode>si2_stfiwx): Adjust.\n+\t* config/rs6000/rs6000.opt (mno-mfpgpr): New.\n+\t(mfpgpr): Mark as deprecated.\n+\t* doc/extend.texi (PowerPC Function Attributes): Delete mfpgpr.\n+\t(Basic PowerPC Built-in Functions Available on ISA 2.05): Adjust.\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options): Delete -mmfpgpr.\n+\n 2019-06-03  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/constraints.md (define_register_constraint \"wg\"):"}, {"sha": "7854082858500ff6df0153e51263b45b5be12f95", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -430,8 +430,6 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,\n     rs6000_define_or_undefine_macro (define_p, \"_ARCH_PWR5X\");\n   if ((flags & OPTION_MASK_CMPB) != 0)\n     rs6000_define_or_undefine_macro (define_p, \"_ARCH_PWR6\");\n-  if ((flags & OPTION_MASK_MFPGPR) != 0)\n-    rs6000_define_or_undefine_macro (define_p, \"_ARCH_PWR6X\");\n   if ((flags & OPTION_MASK_POPCNTD) != 0)\n     rs6000_define_or_undefine_macro (define_p, \"_ARCH_PWR7\");\n   /* Note that the OPTION_MASK_DIRECT_MOVE flag is automatically"}, {"sha": "14f8a0ef7464ac82bcc2b258f50eaebbd695d8d3", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -24,10 +24,9 @@\n #define ISA_2_2_MASKS\t\t(ISA_2_1_MASKS | OPTION_MASK_POPCNTB)\n #define ISA_2_4_MASKS\t\t(ISA_2_2_MASKS | OPTION_MASK_FPRND)\n \n-  /* For ISA 2.05, do not add MFPGPR, since it isn't in ISA 2.06, and don't add\n-     ALTIVEC, since in general it isn't a win on power6.  In ISA 2.04, fsel,\n-     fre, fsqrt, etc. were no longer documented as optional.  Group masks by\n-     server and embedded. */\n+  /* For ISA 2.05, don't add ALTIVEC, since in general it isn't a win on\n+     power6.  In ISA 2.04, fsel, fre, fsqrt, etc. were no longer documented\n+     as optional.  Group masks by server and embedded. */\n #define ISA_2_5_MASKS_EMBEDDED\t(ISA_2_4_MASKS\t\t\t\t\\\n \t\t\t\t | OPTION_MASK_CMPB\t\t\t\\\n \t\t\t\t | OPTION_MASK_RECIP_PRECISION\t\t\\\n@@ -130,7 +129,6 @@\n \t\t\t\t | OPTION_MASK_HTM\t\t\t\\\n \t\t\t\t | OPTION_MASK_ISEL\t\t\t\\\n \t\t\t\t | OPTION_MASK_MFCRF\t\t\t\\\n-\t\t\t\t | OPTION_MASK_MFPGPR\t\t\t\\\n \t\t\t\t | OPTION_MASK_MODULO\t\t\t\\\n \t\t\t\t | OPTION_MASK_MULHW\t\t\t\\\n \t\t\t\t | OPTION_MASK_NO_UPDATE\t\t\\\n@@ -236,7 +234,7 @@ RS6000_CPU (\"power6\", PROCESSOR_POWER6, MASK_POWERPC64 | MASK_PPC_GPOPT\n \t    | MASK_CMPB | MASK_DFP | MASK_RECIP_PRECISION)\n RS6000_CPU (\"power6x\", PROCESSOR_POWER6, MASK_POWERPC64 | MASK_PPC_GPOPT\n \t    | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB | MASK_FPRND\n-\t    | MASK_CMPB | MASK_DFP | MASK_MFPGPR | MASK_RECIP_PRECISION)\n+\t    | MASK_CMPB | MASK_DFP | MASK_RECIP_PRECISION)\n RS6000_CPU (\"power7\", PROCESSOR_POWER7, MASK_POWERPC64 | ISA_2_6_MASKS_SERVER)\n RS6000_CPU (\"power8\", PROCESSOR_POWER8, MASK_POWERPC64 | ISA_2_7_MASKS_SERVER)\n RS6000_CPU (\"power9\", PROCESSOR_POWER9, MASK_POWERPC64 | ISA_3_0_MASKS_SERVER)"}, {"sha": "3aa19db863c00b15164d1de4b8df45cd833f6775", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -7473,30 +7473,22 @@ gpr_or_gpr_p (rtx op0, rtx op1)\n bool\n direct_move_p (rtx op0, rtx op1)\n {\n-  int regno0, regno1;\n-\n   if (!REG_P (op0) || !REG_P (op1))\n     return false;\n \n-  if (!TARGET_DIRECT_MOVE && !TARGET_MFPGPR)\n+  if (!TARGET_DIRECT_MOVE)\n     return false;\n \n-  regno0 = REGNO (op0);\n-  regno1 = REGNO (op1);\n+  int regno0 = REGNO (op0);\n+  int regno1 = REGNO (op1);\n   if (!HARD_REGISTER_NUM_P (regno0) || !HARD_REGISTER_NUM_P (regno1))\n     return false;\n \n-  if (INT_REGNO_P (regno0))\n-    return (TARGET_DIRECT_MOVE) ? VSX_REGNO_P (regno1) : FP_REGNO_P (regno1);\n-\n-  else if (INT_REGNO_P (regno1))\n-    {\n-      if (TARGET_MFPGPR && FP_REGNO_P (regno0))\n-\treturn true;\n+  if (INT_REGNO_P (regno0) && VSX_REGNO_P (regno1))\n+    return true;\n \n-      else if (TARGET_DIRECT_MOVE && VSX_REGNO_P (regno0))\n-\treturn true;\n-    }\n+  if (VSX_REGNO_P (regno0) && INT_REGNO_P (regno1))\n+    return true;\n \n   return false;\n }\n@@ -19079,12 +19071,6 @@ rs6000_secondary_reload_simple_move (enum rs6000_reg_type to_type,\n \treturn true;\n     }\n \n-  /* Power6+: MFTGPR or MFFGPR.  */\n-  else if (TARGET_MFPGPR && TARGET_POWERPC64 && size == 8\n-      && ((to_type == GPR_REG_TYPE && from_type == FPR_REG_TYPE)\n-\t  || (to_type == FPR_REG_TYPE && from_type == GPR_REG_TYPE)))\n-    return true;\n-\n   /* Move to/from SPR.  */\n   else if ((size == 4 || (TARGET_POWERPC64 && size == 8))\n \t   && ((to_type == GPR_REG_TYPE && from_type == SPR_REG_TYPE)\n@@ -36452,7 +36438,7 @@ static struct rs6000_opt_mask const rs6000_opt_masks[] =\n   { \"htm\",\t\t\tOPTION_MASK_HTM,\t\tfalse, true  },\n   { \"isel\",\t\t\tOPTION_MASK_ISEL,\t\tfalse, true  },\n   { \"mfcrf\",\t\t\tOPTION_MASK_MFCRF,\t\tfalse, true  },\n-  { \"mfpgpr\",\t\t\tOPTION_MASK_MFPGPR,\t\tfalse, true  },\n+  { \"mfpgpr\",\t\t\t0,\t\t\t\tfalse, true  },\n   { \"modulo\",\t\t\tOPTION_MASK_MODULO,\t\tfalse, true  },\n   { \"mulhw\",\t\t\tOPTION_MASK_MULHW,\t\tfalse, true  },\n   { \"multiple\",\t\t\tOPTION_MASK_MULTIPLE,\t\tfalse, true  },"}, {"sha": "32011520739b2cc82696db3a15f3f37f520570e0", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -509,7 +509,6 @@ extern int rs6000_vector_align[];\n #define MASK_HTM\t\t\tOPTION_MASK_HTM\n #define MASK_ISEL\t\t\tOPTION_MASK_ISEL\n #define MASK_MFCRF\t\t\tOPTION_MASK_MFCRF\n-#define MASK_MFPGPR\t\t\tOPTION_MASK_MFPGPR\n #define MASK_MULHW\t\t\tOPTION_MASK_MULHW\n #define MASK_MULTIPLE\t\t\tOPTION_MASK_MULTIPLE\n #define MASK_NO_UPDATE\t\t\tOPTION_MASK_NO_UPDATE"}, {"sha": "c49614c237ddf734e7edca9df15d98e011b36ea1", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -5265,8 +5265,7 @@\n   rtx src = operands[1];\n   rtx tmp;\n \n-  if (!MEM_P (src) && TARGET_POWERPC64\n-      && (TARGET_MFPGPR || TARGET_DIRECT_MOVE))\n+  if (!MEM_P (src) && TARGET_POWERPC64 && TARGET_DIRECT_MOVE)\n     tmp = convert_to_mode (DImode, src, false);\n   else\n     {\n@@ -5341,8 +5340,7 @@\n   rtx src = operands[1];\n   rtx tmp;\n \n-  if (!MEM_P (src) && TARGET_POWERPC64\n-      && (TARGET_MFPGPR || TARGET_DIRECT_MOVE))\n+  if (!MEM_P (src) && TARGET_POWERPC64 && TARGET_DIRECT_MOVE)\n     tmp = convert_to_mode (DImode, src, true);\n   else\n     {\n@@ -5703,7 +5701,7 @@\n       emit_insn (gen_stfiwx (dest, tmp));\n       DONE;\n     }\n-  else if (TARGET_POWERPC64 && (TARGET_MFPGPR || TARGET_DIRECT_MOVE) && !MEM_P (dest))\n+  else if (TARGET_POWERPC64 && TARGET_DIRECT_MOVE && !MEM_P (dest))\n     {\n       dest = gen_lowpart (DImode, dest);\n       emit_move_insn (dest, tmp);\n@@ -5851,7 +5849,7 @@\n       emit_insn (gen_stfiwx (dest, tmp));\n       DONE;\n     }\n-  else if (TARGET_POWERPC64 && (TARGET_MFPGPR || TARGET_DIRECT_MOVE))\n+  else if (TARGET_POWERPC64 && TARGET_DIRECT_MOVE)\n     {\n       dest = gen_lowpart (DImode, dest);\n       emit_move_insn (dest, tmp);"}, {"sha": "342a349e79f2c8d8385644036cc7cf1ccd69fd96", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -144,9 +144,12 @@ mcmpb\n Target Report Mask(CMPB) Var(rs6000_isa_flags)\n Use PowerPC V2.05 compare bytes instruction.\n \n+;; This option existed in the past, but now is always off.\n+mno-mfpgpr\n+Target RejectNegative Undocumented Ignore\n+\n mmfpgpr\n-Target Report Mask(MFPGPR) Var(rs6000_isa_flags)\n-Use extended PowerPC V2.05 move floating point to/from GPR instructions.\n+Target RejectNegative Undocumented Deprecated\n \n maltivec\n Target Report Mask(ALTIVEC) Var(rs6000_isa_flags)"}, {"sha": "2520835ff3a48d460af67e4adc106aa794e55bed", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -5432,13 +5432,6 @@ Generate code that uses (does not use) the move from condition\n register field instruction implemented on the POWER4 processor and\n other processors that support the PowerPC V2.01 architecture.\n \n-@item mfpgpr\n-@itemx no-mfpgpr\n-@cindex @code{target(\"mfpgpr\")} function attribute, PowerPC\n-Generate code that uses (does not use) the FP move to/from general\n-purpose register instructions implemented on the POWER6X processor and\n-other processors that support the extended PowerPC V2.05 architecture.\n-\n @item mulhw\n @itemx no-mulhw\n @cindex @code{target(\"mulhw\")} function attribute, PowerPC\n@@ -16879,8 +16872,8 @@ enabling the @option{-mpowerpc64}, @option{-mpowerpc-gpopt},\n @option{-mpowerpc-gfxopt}, @option{-mmfcrf}, @option{-mpopcntb},\n @option{-mfprnd}, @option{-mcmpb}, @option{-mhard-dfp}, and\n @option{-mrecip-precision} options.  Specify the\n-@option{-maltivec} and @option{-mfpgpr} options explicitly in\n-combination with the above options if they are desired.\n+@option{-maltivec} option explicitly in\n+combination with the above options if desired.\n \n The following functions require option @option{-mcmpb}.\n @smallexample"}, {"sha": "91c9bb89651ff61e7b70f91715e0b4efda342d6b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -1076,7 +1076,7 @@ See RS/6000 and PowerPC Options.\n -mpowerpc-gfxopt  -mno-powerpc-gfxopt @gol\n -mmfcrf  -mno-mfcrf  -mpopcntb  -mno-popcntb  -mpopcntd  -mno-popcntd @gol\n -mfprnd  -mno-fprnd @gol\n--mcmpb  -mno-cmpb  -mmfpgpr  -mno-mfpgpr  -mhard-dfp  -mno-hard-dfp @gol\n+-mcmpb  -mno-cmpb  -mhard-dfp  -mno-hard-dfp @gol\n -mfull-toc   -mminimal-toc  -mno-fp-in-toc  -mno-sum-in-toc @gol\n -m64  -m32  -mxl-compat  -mno-xl-compat  -mpe @gol\n -malign-power  -malign-natural @gol\n@@ -24014,8 +24014,6 @@ These @samp{-m} options are defined for the IBM RS/6000 and PowerPC:\n @need 800\n @itemx -mcmpb\n @itemx -mno-cmpb\n-@itemx -mmfpgpr\n-@itemx -mno-mfpgpr\n @itemx -mhard-dfp\n @itemx -mno-hard-dfp\n @opindex mpowerpc-gpopt\n@@ -24034,8 +24032,6 @@ These @samp{-m} options are defined for the IBM RS/6000 and PowerPC:\n @opindex mno-fprnd\n @opindex mcmpb\n @opindex mno-cmpb\n-@opindex mmfpgpr\n-@opindex mno-mfpgpr\n @opindex mhard-dfp\n @opindex mno-hard-dfp\n You use these options to specify which instructions are available on the\n@@ -24069,10 +24065,6 @@ processors that support the PowerPC V2.03 architecture.\n The @option{-mcmpb} option allows GCC to generate the compare bytes\n instruction implemented on the POWER6 processor and other processors\n that support the PowerPC V2.05 architecture.\n-The @option{-mmfpgpr} option allows GCC to generate the FP move to/from\n-general-purpose register instructions implemented on the POWER6X\n-processor and other processors that support the extended PowerPC V2.05\n-architecture.\n The @option{-mhard-dfp} option allows GCC to generate the decimal\n floating-point instructions implemented on some POWER processors.\n "}, {"sha": "3f7ddfdf8bc98cb296861f51e6a48abc49ba32c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbd4b7f39ee26f1258aff5b86ad0fba06f3edd5e", "patch": "@@ -1,3 +1,7 @@\n+2019-06-03  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/mmfpgpr.c: Delete.\n+\n 2019-06-03  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/debug/enum-1.c: Add -fno-eliminate-unused-debug-symbols"}, {"sha": "d7063a4633af2aa4240a225f57f05c7e7a494a84", "filename": "gcc/testsuite/gcc.target/powerpc/mmfpgpr.c", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7fd7807d5e1a06a8fe957d0e12df0753acb6c4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fmmfpgpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7fd7807d5e1a06a8fe957d0e12df0753acb6c4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fmmfpgpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fmmfpgpr.c?ref=ec7fd7807d5e1a06a8fe957d0e12df0753acb6c4", "patch": "@@ -1,22 +0,0 @@\n-/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n-/* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n-/* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-O2 -mdejagnu-cpu=power6x -mmfpgpr\" } */\n-/* { dg-final { scan-assembler \"mffgpr\" } } */\n-/* { dg-final { scan-assembler \"mftgpr\" } } */\n-\n-/* Test that we generate the instructions to move between the GPR and FPR\n-   registers under power6x.  */\n-\n-extern long return_long (void);\n-extern double return_double (void);\n-\n-double return_double2 (void)\n-{\n-  return (double) return_long ();\n-}\n-\n-long return_long2 (void)\n-{\n-  return (long) return_double ();\n-}"}]}