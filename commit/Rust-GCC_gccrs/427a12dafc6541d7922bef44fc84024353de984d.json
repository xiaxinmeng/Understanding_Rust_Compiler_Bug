{"sha": "427a12dafc6541d7922bef44fc84024353de984d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI3YTEyZGFmYzY1NDFkNzkyMmJlZjQ0ZmM4NDAyNDM1M2RlOTg0ZA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2013-11-21T11:37:07Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2013-11-21T11:37:07Z"}, "message": "re PR libfortran/59227 (FAIL: gfortran.dg/erf_3.F90  -O0  execution test)\n\n\tPR libfortran/59227\n\t* gfortran.dg/erf_3.F90: XFAIL on spu-* and ia64-*-linux*.\n\tMake more generic for other platforms.\n\nFrom-SVN: r205210", "tree": {"sha": "8a75ec26c78f42a5810c5d37d2859816b972e54a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a75ec26c78f42a5810c5d37d2859816b972e54a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/427a12dafc6541d7922bef44fc84024353de984d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427a12dafc6541d7922bef44fc84024353de984d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427a12dafc6541d7922bef44fc84024353de984d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427a12dafc6541d7922bef44fc84024353de984d/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f45afb879c3a50179bdc78e7f41306202e791b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f45afb879c3a50179bdc78e7f41306202e791b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f45afb879c3a50179bdc78e7f41306202e791b4"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "b29070fb11fd4127bf55796dd3f45534371f2841", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427a12dafc6541d7922bef44fc84024353de984d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427a12dafc6541d7922bef44fc84024353de984d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=427a12dafc6541d7922bef44fc84024353de984d", "patch": "@@ -1,3 +1,9 @@\n+2013-11-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/59227\n+\t* gfortran.dg/erf_3.F90: XFAIL on spu-* and ia64-*-linux*.\n+\tMake more generic for other platforms.\n+\n 2013-11-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/53976"}, {"sha": "d9d65898984ea00c59f5095f7283c1383b2b117b", "filename": "gcc/testsuite/gfortran.dg/erf_3.F90", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427a12dafc6541d7922bef44fc84024353de984d/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf_3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427a12dafc6541d7922bef44fc84024353de984d/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf_3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf_3.F90?ref=427a12dafc6541d7922bef44fc84024353de984d", "patch": "@@ -1,20 +1,29 @@\n-! { dg-do run }\n+! { dg-do run { xfail spu-*-* ia64-*-linux* } }\n ! { dg-options \"-fno-range-check -ffree-line-length-none -O0\" }\n ! { dg-add-options ieee }\n !\n ! Check that simplification functions and runtime library agree on ERF,\n ! ERFC and ERFC_SCALED, for quadruple-precision.\n+!\n+! XFAILed for SPU targets because our library implementation of\n+! the double-precision erf/erfc functions is not accurate enough.\n+!\n+! XFAILed for IA64 Linux because of a glibc bug:\n+! http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59227\n \n program test\n+  use, intrinsic :: iso_fortran_env\n   implicit none\n \n-  real(kind=16) :: x16\n+  ! QP will be the largest supported real kind, possibly real(kind=16)\n+  integer, parameter :: qp = real_kinds(ubound(real_kinds,dim=1))\n+  real(kind=qp) :: x\n \n #define CHECK(a) \\\n-  x16 = a ; \\\n-  call check(erf(real(a,kind=16)), erf(x16)) ; \\\n-  call check(erfc(real(a,kind=16)), erfc(x16)) ; \\\n-  call check(erfc_scaled(real(a,kind=16)), erfc_scaled(x16))\n+  x = a ; \\\n+  call check(erf(real(a,kind=qp)), erf(x)) ; \\\n+  call check(erfc(real(a,kind=qp)), erfc(x)) ; \\\n+  call check(erfc_scaled(real(a,kind=qp)), erfc_scaled(x))\n \n   CHECK(0.0)\n   CHECK(0.9)\n@@ -36,7 +45,7 @@ program test\n contains\n \n   subroutine check (a, b)\n-    real(kind=16), intent(in) :: a, b\n+    real(kind=qp), intent(in) :: a, b\n     print *, abs(a-b) / spacing(a)\n     if (abs(a - b) > 10 * spacing(a)) call abort\n   end subroutine"}]}