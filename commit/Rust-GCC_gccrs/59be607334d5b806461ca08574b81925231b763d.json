{"sha": "59be607334d5b806461ca08574b81925231b763d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTliZTYwNzMzNGQ1YjgwNjQ2MWNhMDg1NzRiODE5MjUyMzFiNzYzZA==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@lnxw.com", "date": "2002-09-24T16:51:33Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-09-24T16:51:33Z"}, "message": "(THUMB_FUNCTION_PROFILER): Remove.\n\n(FUNCTION_PROFILER): Only invoke THUMB_FUNCTION_PROFILER if it is defined.\n\nCo-Authored-By: Nick Clifton <nickc@redhat.com>\n\nFrom-SVN: r57475", "tree": {"sha": "33ea194018d1552c33fbec2e2bbd0669457b7dbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33ea194018d1552c33fbec2e2bbd0669457b7dbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59be607334d5b806461ca08574b81925231b763d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59be607334d5b806461ca08574b81925231b763d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59be607334d5b806461ca08574b81925231b763d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59be607334d5b806461ca08574b81925231b763d/comments", "author": null, "committer": null, "parents": [{"sha": "100c742042048f88027789f7ad2c0841c3df3471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100c742042048f88027789f7ad2c0841c3df3471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100c742042048f88027789f7ad2c0841c3df3471"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "0aad8c8ab83089aaa041c3c87fc460f2fa4b595b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59be607334d5b806461ca08574b81925231b763d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59be607334d5b806461ca08574b81925231b763d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59be607334d5b806461ca08574b81925231b763d", "patch": "@@ -1,3 +1,10 @@\n+2002-09-24  Adam Nemet  <anemet@lnxw.com>\n+            Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.h (THUMB_FUNCTION_PROFILER): Remove.\n+\t(FUNCTION_PROFILER): Only invoke THUMB_FUNCTION_PROFILER if it\n+\tis defined.\n+\n 2002-09-24  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (preferred_la_operand_p): New function."}, {"sha": "9c0ce4437abc0ed1edbc1c05b8b6518e68949294", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59be607334d5b806461ca08574b81925231b763d/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59be607334d5b806461ca08574b81925231b763d/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=59be607334d5b806461ca08574b81925231b763d", "patch": "@@ -1547,7 +1547,10 @@ typedef struct\n    will output the .text section.\n \n    The ``mov ip,lr'' seems like a good idea to stick with cc convention.\n-   ``prof'' doesn't seem to mind about this!  */\n+   ``prof'' doesn't seem to mind about this!\n+\n+   Note - this version of the code is designed to work in both ARM and\n+   Thumb modes.  */\n #ifndef ARM_FUNCTION_PROFILER\n #define ARM_FUNCTION_PROFILER(STREAM, LABELNO)  \t\\\n {\t\t\t\t\t\t\t\\\n@@ -1564,20 +1567,16 @@ typedef struct\n }\n #endif\n \n-#ifndef THUMB_FUNCTION_PROFILER\n-#define THUMB_FUNCTION_PROFILER(STREAM, LABELNO)\t\\\n-{\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\tmov\\tip, lr\\n\");\t\t\t\\\n-  fprintf (STREAM, \"\\tbl\\tmcount\\n\");\t\t\t\\\n-  fprintf (STREAM, \"\\t.word\\tLP%d\\n\", LABELNO);\t\t\\\n-}\n-#endif\n-\n+#ifdef THUMB_FUNCTION_PROFILER\n #define FUNCTION_PROFILER(STREAM, LABELNO)\t\t\\\n   if (TARGET_ARM)\t\t\t\t\t\\\n     ARM_FUNCTION_PROFILER (STREAM, LABELNO)\t\t\\\n   else\t\t\t\t\t\t\t\\\n     THUMB_FUNCTION_PROFILER (STREAM, LABELNO)\n+#else\n+#define FUNCTION_PROFILER(STREAM, LABELNO)\t\t\\\n+    ARM_FUNCTION_PROFILER (STREAM, LABELNO)\n+#endif\n \n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n    the stack pointer does not matter.  The value is tested only in"}]}