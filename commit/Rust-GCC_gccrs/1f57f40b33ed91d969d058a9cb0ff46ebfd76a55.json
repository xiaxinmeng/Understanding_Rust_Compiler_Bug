{"sha": "1f57f40b33ed91d969d058a9cb0ff46ebfd76a55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY1N2Y0MGIzM2VkOTFkOTY5ZDA1OGE5Y2IwZmY0NmViZmQ3NmE1NQ==", "commit": {"author": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-23T18:45:53Z"}, "committer": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-23T18:45:53Z"}, "message": "declared yyerror before using it\n\nFrom-SVN: r5439", "tree": {"sha": "e6046f2a22339f272c94ac5a7fe4d8050a3daba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6046f2a22339f272c94ac5a7fe4d8050a3daba6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f57f40b33ed91d969d058a9cb0ff46ebfd76a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f57f40b33ed91d969d058a9cb0ff46ebfd76a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f57f40b33ed91d969d058a9cb0ff46ebfd76a55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f57f40b33ed91d969d058a9cb0ff46ebfd76a55/comments", "author": null, "committer": null, "parents": [{"sha": "da9f42b18eb2c3c3b6e1acc40d714a730749111e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9f42b18eb2c3c3b6e1acc40d714a730749111e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9f42b18eb2c3c3b6e1acc40d714a730749111e"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "c855d84374bdc30ef129bc804b5ecd7d758cafac", "filename": "gcc/bi-parser.y", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f57f40b33ed91d969d058a9cb0ff46ebfd76a55/gcc%2Fbi-parser.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f57f40b33ed91d969d058a9cb0ff46ebfd76a55/gcc%2Fbi-parser.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbi-parser.y?ref=1f57f40b33ed91d969d058a9cb0ff46ebfd76a55", "patch": "@@ -26,20 +26,23 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n extern char yytext[];\n extern int yyleng;\n \n-extern char *malloc();\n+extern char *malloc ();\n \n \n /* Chain of all defs built by the parser. */\n struct def *defs;\n int ndefs;\n \n-static struct node *makenode();\n-static struct variation *makevar();\n-static struct def *makedef();\n+static struct node *makenode ();\n+static struct variation *makevar ();\n+static struct def *makedef ();\n+\n+void yyerror ();\n \n %}\n \n-%union{\n+%union\n+{\n   char *string;\n   struct def *def;\n   struct variation *variation;\n@@ -67,7 +70,7 @@ defs:\n \n def:\n   DEFOP '(' STRING ',' opt_string ',' '(' variations ')' ')'\n-    { $$ = makedef($3, $5, $8); }\n+    { $$ = makedef ($3, $5, $8); }\n   ;\n \n variations:\n@@ -80,11 +83,11 @@ variation:\n   '(' opt_string ')'\n     { $$ = makevar($2, (struct node *) NULL, (struct node *) NULL, (struct node *) NULL); }\n   | '(' opt_string ',' list ')'\n-    { $$ = makevar($2, $4, (struct node *) NULL, (struct node *) NULL); }\n+    { $$ = makevar ($2, $4, (struct node *) NULL, (struct node *) NULL); }\n   | '(' opt_string ',' list ',' list ')'\n-    { $$ = makevar($2, $4, $6, (struct node *) NULL); }\n+    { $$ = makevar ($2, $4, $6, (struct node *) NULL); }\n   | '(' opt_string ',' list ',' list ',' list ')'\n-    { $$ = makevar($2, $4, $6, $8); }\n+    { $$ = makevar ($2, $4, $6, $8); }\n   ;\n \n opt_string:\n@@ -108,31 +111,31 @@ items:\n \n item:\n   STRING\n-    { $$ = makenode($1); }\n+    { $$ = makenode ($1); }\n   ;\n \n %%\n \n static struct node *\n-makenode(s)\n+makenode (s)\n      char *s;\n {\n   struct node *n;\n \n-  n = (struct node *) malloc(sizeof (struct node));\n+  n = (struct node *) malloc (sizeof (struct node));\n   n->text = s;\n   n->next = NULL;\n   return n;\n }\n \n static struct variation *\n-makevar(name, inputs, outputs, literals)\n+makevar (name, inputs, outputs, literals)\n      char *name;\n      struct node *inputs, *outputs, *literals;\n {\n   struct variation *v;\n \n-  v = (struct variation *) malloc(sizeof (struct variation));\n+  v = (struct variation *) malloc (sizeof (struct variation));\n   v->name = name;\n   v->code = ndefs++;\n   v->inputs = inputs;\n@@ -143,13 +146,13 @@ makevar(name, inputs, outputs, literals)\n }\n \n static struct def *\n-makedef(name, template, vars)\n+makedef (name, template, vars)\n      char *name, *template;\n      struct variation *vars;\n {\n   struct def *d;\n \n-  d = (struct def *) malloc(sizeof (struct def));\n+  d = (struct def *) malloc (sizeof (struct def));\n   d->basename = name;\n   d->template = template;\n   d->variations = vars;\n@@ -158,11 +161,9 @@ makedef(name, template, vars)\n }\n \n void\n-yyerror(s)\n+yyerror (s)\n      char *s;\n {\n-  extern int yylineno;\n-\n-  fprintf(stderr, \"syntax error in line %d\\n\", yylineno);\n-  exit(1);\n+  fprintf (stderr, \"syntax error in input\");\n+  exit (1);\n }"}]}