{"sha": "08fd13d44702391da6e367876b74ce8ed71c0bab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmZDEzZDQ0NzAyMzkxZGE2ZTM2Nzg3NmI3NGNlOGVkNzFjMGJhYg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-08-28T22:10:52Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-08-28T22:10:52Z"}, "message": "mtype.m4 (upcase, [...]): New macros.\n\n\t* m4/mtype.m4 (upcase, hasmathfunc, mathfunc_macro): New macros.\n\t* m4/fraction.m4: Use new macros to support quad-float types.\n\t* m4/set_exponent.m4: Likewise.\n\t* m4/spacing.m4: Likewise.\n\t* m4/exponent.m4: Likewise.\n\t* m4/nearest.m4: Likewise.\n\t* m4/norm2.m4: Likewise.\n\t* m4/bessel.m4: Likewise.\n\t* m4/rrspacing.m4: Likewise.\n\t* generated/bessel_r4.c:Regenerated.\n\t* generated/bessel_r8.c: Regenerated.\n\t* generated/bessel_r10.c: Regenerated.\n\t* generated/bessel_r16.c: Regenerated.\n\t* generated/exponent_r4.c: Regenerated.\n\t* generated/exponent_r8.c: Regenerated.\n\t* generated/exponent_r10.c: Regenerated.\n\t* generated/exponent_r16.c: Regenerated.\n\t* generated/fraction_r4.c: Regenerated.\n\t* generated/fraction_r8.c: Regenerated.\n\t* generated/fraction_r10.c: Regenerated.\n\t* generated/fraction_r16.c: Regenerated.\n\t* generated/nearest_r4.c: Regenerated.\n\t* generated/nearest_r8.c: Regenerated.\n\t* generated/nearest_r10.c: Regenerated.\n\t* generated/nearest_r16.c: Regenerated.\n\t* generated/norm2_r4.c: Regenerated.\n\t* generated/norm2_r8.c: Regenerated.\n\t* generated/norm2_r10.c: Regenerated.\n\t* generated/norm2_r16.c: Regenerated.\n\t* generated/rrspacing_r4.c: Regenerated.\n\t* generated/rrspacing_r8.c: Regenerated.\n\t* generated/rrspacing_r10.c: Regenerated.\n\t* generated/rrspacing_r16.c: Regenerated.\n\t* generated/set_exponent_r4.c: Regenerated.\n\t* generated/set_exponent_r8.c: Regenerated.\n\t* generated/set_exponent_r10.c: Regenerated.\n\t* generated/set_exponent_r16.c: Regenerated.\n\t* generated/spacing_r4.c: Regenerated.\n\t* generated/spacing_r8.c: Regenerated.\n\t* generated/spacing_r10.c: Regenerated.\n\t* generated/spacing_r16.c: Regenerated.\n\nFrom-SVN: r163620", "tree": {"sha": "0834fa07275fef77737822694da3a4ad8215b389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0834fa07275fef77737822694da3a4ad8215b389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08fd13d44702391da6e367876b74ce8ed71c0bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08fd13d44702391da6e367876b74ce8ed71c0bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08fd13d44702391da6e367876b74ce8ed71c0bab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08fd13d44702391da6e367876b74ce8ed71c0bab/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf321310b19598f6151b217e160f1c05ba18f994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf321310b19598f6151b217e160f1c05ba18f994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf321310b19598f6151b217e160f1c05ba18f994"}], "stats": {"total": 545, "additions": 370, "deletions": 175}, "files": [{"sha": "b6fa20f8b77a459f593d1fada5476064d52abbc1", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -1,3 +1,47 @@\n+2010-08-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* m4/mtype.m4 (upcase, hasmathfunc, mathfunc_macro): New macros.\n+\t* m4/fraction.m4: Use new macros to support quad-float types.\n+\t* m4/set_exponent.m4: Likewise.\n+\t* m4/spacing.m4: Likewise.\n+\t* m4/exponent.m4: Likewise.\n+\t* m4/nearest.m4: Likewise.\n+\t* m4/norm2.m4: Likewise.\n+\t* m4/bessel.m4: Likewise.\n+\t* m4/rrspacing.m4: Likewise.\n+\t* generated/bessel_r4.c:Regenerated.\n+\t* generated/bessel_r8.c: Regenerated.\n+\t* generated/bessel_r10.c: Regenerated.\n+\t* generated/bessel_r16.c: Regenerated.\n+\t* generated/exponent_r4.c: Regenerated.\n+\t* generated/exponent_r8.c: Regenerated.\n+\t* generated/exponent_r10.c: Regenerated.\n+\t* generated/exponent_r16.c: Regenerated.\n+\t* generated/fraction_r4.c: Regenerated.\n+\t* generated/fraction_r8.c: Regenerated.\n+\t* generated/fraction_r10.c: Regenerated.\n+\t* generated/fraction_r16.c: Regenerated.\n+\t* generated/nearest_r4.c: Regenerated.\n+\t* generated/nearest_r8.c: Regenerated.\n+\t* generated/nearest_r10.c: Regenerated.\n+\t* generated/nearest_r16.c: Regenerated.\n+\t* generated/norm2_r4.c: Regenerated.\n+\t* generated/norm2_r8.c: Regenerated.\n+\t* generated/norm2_r10.c: Regenerated.\n+\t* generated/norm2_r16.c: Regenerated.\n+\t* generated/rrspacing_r4.c: Regenerated.\n+\t* generated/rrspacing_r8.c: Regenerated.\n+\t* generated/rrspacing_r10.c: Regenerated.\n+\t* generated/rrspacing_r16.c: Regenerated.\n+\t* generated/set_exponent_r4.c: Regenerated.\n+\t* generated/set_exponent_r8.c: Regenerated.\n+\t* generated/set_exponent_r10.c: Regenerated.\n+\t* generated/set_exponent_r16.c: Regenerated.\n+\t* generated/spacing_r4.c: Regenerated.\n+\t* generated/spacing_r8.c: Regenerated.\n+\t* generated/spacing_r10.c: Regenerated.\n+\t* generated/spacing_r16.c: Regenerated.\n+\n 2010-08-28  Tobias Burnus  <burnus@net-b.de>\n \n \t* mk-kinds-h.sh: Disable REAL(16) if REAL(10) is available."}, {"sha": "efef450518851f078a8fcb2ae653925f64d170f5", "filename": "libgfortran/generated/bessel_r10.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,6 +29,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10)\n \n \n@@ -67,28 +70,28 @@ bessel_jn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2, GFC_REAL_10 x\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0L))\n+  if (unlikely (x == 0))\n     {\n-      ret->data[0] = 1.0L;\n+      ret->data[0] = 1;\n       for (i = 1; i <= n2-n1; i++)\n-        ret->data[i*stride] = 0.0L;\n+        ret->data[i*stride] = 0;\n       return;\n     }\n \n   ret->data = ret->data;\n-  last1 = jnl (n2, x);\n+  last1 = MATHFUNC(jn) (n2, x);\n   ret->data[(n2-n1)*stride] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = jnl (n2 - 1, x);\n+  last2 = MATHFUNC(jn) (n2 - 1, x);\n   ret->data[(n2-n1-1)*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0L/x;\n+  x2rev = GFC_REAL_10_LITERAL(2.)/x;\n \n   for (i = n2-n1-2; i >= 0; i--)\n     {\n@@ -135,7 +138,7 @@ bessel_yn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2,\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0L))\n+  if (unlikely (x == 0))\n     {\n       for (i = 0; i <= n2-n1; i++)\n #if defined(GFC_REAL_10_INFINITY)\n@@ -147,19 +150,19 @@ bessel_yn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2,\n     }\n \n   ret->data = ret->data;\n-  last1 = ynl (n1, x);\n+  last1 = MATHFUNC(yn) (n1, x);\n   ret->data[0] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = ynl (n1 + 1, x);\n+  last2 = MATHFUNC(yn) (n1 + 1, x);\n   ret->data[1*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0L/x;\n+  x2rev = GFC_REAL_10_LITERAL(2.)/x;\n \n   for (i = 2; i <= n1+n2; i++)\n     {"}, {"sha": "d5ca883e8990172e899cf58d46f18a4eab4a938d", "filename": "libgfortran/generated/bessel_r16.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,11 +29,18 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n #if defined (HAVE_GFC_REAL_16)\n \n \n \n-#if defined (HAVE_JNL)\n+#if (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_JNL))\n extern void bessel_jn_r16 (gfc_array_r16 * const restrict ret, int n1,\n \t\t\t\t     int n2, GFC_REAL_16 x);\n export_proto(bessel_jn_r16);\n@@ -67,28 +74,28 @@ bessel_jn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2, GFC_REAL_16 x\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0L))\n+  if (unlikely (x == 0))\n     {\n-      ret->data[0] = 1.0L;\n+      ret->data[0] = 1;\n       for (i = 1; i <= n2-n1; i++)\n-        ret->data[i*stride] = 0.0L;\n+        ret->data[i*stride] = 0;\n       return;\n     }\n \n   ret->data = ret->data;\n-  last1 = jnl (n2, x);\n+  last1 = MATHFUNC(jn) (n2, x);\n   ret->data[(n2-n1)*stride] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = jnl (n2 - 1, x);\n+  last2 = MATHFUNC(jn) (n2 - 1, x);\n   ret->data[(n2-n1-1)*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0L/x;\n+  x2rev = GFC_REAL_16_LITERAL(2.)/x;\n \n   for (i = n2-n1-2; i >= 0; i--)\n     {\n@@ -100,7 +107,7 @@ bessel_jn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2, GFC_REAL_16 x\n \n #endif\n \n-#if defined (HAVE_YNL)\n+#if (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_YNL))\n extern void bessel_yn_r16 (gfc_array_r16 * const restrict ret,\n \t\t\t\t     int n1, int n2, GFC_REAL_16 x);\n export_proto(bessel_yn_r16);\n@@ -135,7 +142,7 @@ bessel_yn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2,\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0L))\n+  if (unlikely (x == 0))\n     {\n       for (i = 0; i <= n2-n1; i++)\n #if defined(GFC_REAL_16_INFINITY)\n@@ -147,19 +154,19 @@ bessel_yn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2,\n     }\n \n   ret->data = ret->data;\n-  last1 = ynl (n1, x);\n+  last1 = MATHFUNC(yn) (n1, x);\n   ret->data[0] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = ynl (n1 + 1, x);\n+  last2 = MATHFUNC(yn) (n1 + 1, x);\n   ret->data[1*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0L/x;\n+  x2rev = GFC_REAL_16_LITERAL(2.)/x;\n \n   for (i = 2; i <= n1+n2; i++)\n     {"}, {"sha": "794a5f6b7f9e8a8ca351836da3b83b0bcdb1f6b5", "filename": "libgfortran/generated/bessel_r4.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,6 +29,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4)\n \n \n@@ -67,28 +70,28 @@ bessel_jn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2, GFC_REAL_4 x)\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0F))\n+  if (unlikely (x == 0))\n     {\n-      ret->data[0] = 1.0F;\n+      ret->data[0] = 1;\n       for (i = 1; i <= n2-n1; i++)\n-        ret->data[i*stride] = 0.0F;\n+        ret->data[i*stride] = 0;\n       return;\n     }\n \n   ret->data = ret->data;\n-  last1 = jnf (n2, x);\n+  last1 = MATHFUNC(jn) (n2, x);\n   ret->data[(n2-n1)*stride] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = jnf (n2 - 1, x);\n+  last2 = MATHFUNC(jn) (n2 - 1, x);\n   ret->data[(n2-n1-1)*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0F/x;\n+  x2rev = GFC_REAL_4_LITERAL(2.)/x;\n \n   for (i = n2-n1-2; i >= 0; i--)\n     {\n@@ -135,7 +138,7 @@ bessel_yn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2,\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0F))\n+  if (unlikely (x == 0))\n     {\n       for (i = 0; i <= n2-n1; i++)\n #if defined(GFC_REAL_4_INFINITY)\n@@ -147,19 +150,19 @@ bessel_yn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2,\n     }\n \n   ret->data = ret->data;\n-  last1 = ynf (n1, x);\n+  last1 = MATHFUNC(yn) (n1, x);\n   ret->data[0] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = ynf (n1 + 1, x);\n+  last2 = MATHFUNC(yn) (n1 + 1, x);\n   ret->data[1*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0F/x;\n+  x2rev = GFC_REAL_4_LITERAL(2.)/x;\n \n   for (i = 2; i <= n1+n2; i++)\n     {"}, {"sha": "e9f84b4ce546710f56ec11c30d7c958c59ac52a3", "filename": "libgfortran/generated/bessel_r8.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fbessel_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,6 +29,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8)\n \n \n@@ -67,28 +70,28 @@ bessel_jn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2, GFC_REAL_8 x)\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0))\n+  if (unlikely (x == 0))\n     {\n-      ret->data[0] = 1.0;\n+      ret->data[0] = 1;\n       for (i = 1; i <= n2-n1; i++)\n-        ret->data[i*stride] = 0.0;\n+        ret->data[i*stride] = 0;\n       return;\n     }\n \n   ret->data = ret->data;\n-  last1 = jn (n2, x);\n+  last1 = MATHFUNC(jn) (n2, x);\n   ret->data[(n2-n1)*stride] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = jn (n2 - 1, x);\n+  last2 = MATHFUNC(jn) (n2 - 1, x);\n   ret->data[(n2-n1-1)*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0/x;\n+  x2rev = GFC_REAL_8_LITERAL(2.)/x;\n \n   for (i = n2-n1-2; i >= 0; i--)\n     {\n@@ -135,7 +138,7 @@ bessel_yn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2,\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0))\n+  if (unlikely (x == 0))\n     {\n       for (i = 0; i <= n2-n1; i++)\n #if defined(GFC_REAL_8_INFINITY)\n@@ -147,19 +150,19 @@ bessel_yn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2,\n     }\n \n   ret->data = ret->data;\n-  last1 = yn (n1, x);\n+  last1 = MATHFUNC(yn) (n1, x);\n   ret->data[0] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = yn (n1 + 1, x);\n+  last2 = MATHFUNC(yn) (n1 + 1, x);\n   ret->data[1*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0/x;\n+  x2rev = GFC_REAL_8_LITERAL(2.)/x;\n \n   for (i = 2; i <= n1+n2; i++)\n     {"}, {"sha": "ceafda30e2c132c3e886ab0c38d023199f949b3f", "filename": "libgfortran/generated/exponent_r10.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_FREXPL)\n \n extern GFC_INTEGER_4 exponent_r10 (GFC_REAL_10 s);\n@@ -35,7 +38,7 @@ GFC_INTEGER_4\n exponent_r10 (GFC_REAL_10 s)\n {\n   int ret;\n-  frexpl (s, &ret);\n+  MATHFUNC(frexp) (s, &ret);\n   return ret;\n }\n "}, {"sha": "899a2aef35919fd0c45bb1304cdafd2db64ee312", "filename": "libgfortran/generated/exponent_r16.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,7 +26,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_FREXPL)\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n+#if defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FREXPL))\n \n extern GFC_INTEGER_4 exponent_r16 (GFC_REAL_16 s);\n export_proto(exponent_r16);\n@@ -35,7 +42,7 @@ GFC_INTEGER_4\n exponent_r16 (GFC_REAL_16 s)\n {\n   int ret;\n-  frexpl (s, &ret);\n+  MATHFUNC(frexp) (s, &ret);\n   return ret;\n }\n "}, {"sha": "04aee1c922c991a3c4497c0c83ae2283457dd852", "filename": "libgfortran/generated/exponent_r4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_FREXPF)\n \n extern GFC_INTEGER_4 exponent_r4 (GFC_REAL_4 s);\n@@ -35,7 +38,7 @@ GFC_INTEGER_4\n exponent_r4 (GFC_REAL_4 s)\n {\n   int ret;\n-  frexpf (s, &ret);\n+  MATHFUNC(frexp) (s, &ret);\n   return ret;\n }\n "}, {"sha": "5c35c5d0de90695697f788800221ad869c7d08ea", "filename": "libgfortran/generated/exponent_r8.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fexponent_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexponent_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_FREXP)\n \n extern GFC_INTEGER_4 exponent_r8 (GFC_REAL_8 s);\n@@ -35,7 +38,7 @@ GFC_INTEGER_4\n exponent_r8 (GFC_REAL_8 s)\n {\n   int ret;\n-  frexp (s, &ret);\n+  MATHFUNC(frexp) (s, &ret);\n   return ret;\n }\n "}, {"sha": "38cbdf8b44db6e855f88116ca90e4da74a8626a4", "filename": "libgfortran/generated/fraction_r10.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_FREXPL)\n \n extern GFC_REAL_10 fraction_r10 (GFC_REAL_10 s);\n@@ -35,7 +38,7 @@ GFC_REAL_10\n fraction_r10 (GFC_REAL_10 s)\n {\n   int dummy_exp;\n-  return frexpl (s, &dummy_exp);\n+  return MATHFUNC(frexp) (s, &dummy_exp);\n }\n \n #endif"}, {"sha": "97e283dddc8e5d4169105b69c254caf5f4278e9e", "filename": "libgfortran/generated/fraction_r16.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,7 +26,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_FREXPL)\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n+#if defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FREXPL))\n \n extern GFC_REAL_16 fraction_r16 (GFC_REAL_16 s);\n export_proto(fraction_r16);\n@@ -35,7 +42,7 @@ GFC_REAL_16\n fraction_r16 (GFC_REAL_16 s)\n {\n   int dummy_exp;\n-  return frexpl (s, &dummy_exp);\n+  return MATHFUNC(frexp) (s, &dummy_exp);\n }\n \n #endif"}, {"sha": "a42e1468f516d34b47757218aec5586de44b65d7", "filename": "libgfortran/generated/fraction_r4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_FREXPF)\n \n extern GFC_REAL_4 fraction_r4 (GFC_REAL_4 s);\n@@ -35,7 +38,7 @@ GFC_REAL_4\n fraction_r4 (GFC_REAL_4 s)\n {\n   int dummy_exp;\n-  return frexpf (s, &dummy_exp);\n+  return MATHFUNC(frexp) (s, &dummy_exp);\n }\n \n #endif"}, {"sha": "1e267091f376dcfc2ba6075c2c9529d23eb82d66", "filename": "libgfortran/generated/fraction_r8.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Ffraction_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ffraction_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_FREXP)\n \n extern GFC_REAL_8 fraction_r8 (GFC_REAL_8 s);\n@@ -35,7 +38,7 @@ GFC_REAL_8\n fraction_r8 (GFC_REAL_8 s)\n {\n   int dummy_exp;\n-  return frexp (s, &dummy_exp);\n+  return MATHFUNC(frexp) (s, &dummy_exp);\n }\n \n #endif"}, {"sha": "eb7a3b15a0de8132ca4a1b08bd7d28fac176a8ca", "filename": "libgfortran/generated/nearest_r10.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_COPYSIGNL) && defined (HAVE_NEXTAFTERL)\n \n extern GFC_REAL_10 nearest_r10 (GFC_REAL_10 s, GFC_REAL_10 dir);\n@@ -34,15 +37,15 @@ export_proto(nearest_r10);\n GFC_REAL_10\n nearest_r10 (GFC_REAL_10 s, GFC_REAL_10 dir)\n {\n-  dir = copysignl (__builtin_infl (), dir);\n+  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n   if (FLT_EVAL_METHOD != 0)\n     {\n       /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_10 r = nextafterl (s, dir);\n+      volatile GFC_REAL_10 r = MATHFUNC(nextafter) (s, dir);\n       return r;\n     }\n   else\n-    return nextafterl (s, dir);\n+    return MATHFUNC(nextafter) (s, dir);\n }\n \n #endif"}, {"sha": "474cf3609aecbd2ed94951db196434bbf9dfdf43", "filename": "libgfortran/generated/nearest_r16.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,23 +26,30 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_COPYSIGNL) && defined (HAVE_NEXTAFTERL)\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n+#if defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_COPYSIGNL)) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_NEXTAFTERL))\n \n extern GFC_REAL_16 nearest_r16 (GFC_REAL_16 s, GFC_REAL_16 dir);\n export_proto(nearest_r16);\n \n GFC_REAL_16\n nearest_r16 (GFC_REAL_16 s, GFC_REAL_16 dir)\n {\n-  dir = copysignl (__builtin_infl (), dir);\n+  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n   if (FLT_EVAL_METHOD != 0)\n     {\n       /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_16 r = nextafterl (s, dir);\n+      volatile GFC_REAL_16 r = MATHFUNC(nextafter) (s, dir);\n       return r;\n     }\n   else\n-    return nextafterl (s, dir);\n+    return MATHFUNC(nextafter) (s, dir);\n }\n \n #endif"}, {"sha": "076df4b33e83c5ac3126c1a7b78cfa388170a824", "filename": "libgfortran/generated/nearest_r4.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_COPYSIGNF) && defined (HAVE_NEXTAFTERF)\n \n extern GFC_REAL_4 nearest_r4 (GFC_REAL_4 s, GFC_REAL_4 dir);\n@@ -34,15 +37,15 @@ export_proto(nearest_r4);\n GFC_REAL_4\n nearest_r4 (GFC_REAL_4 s, GFC_REAL_4 dir)\n {\n-  dir = copysignf (__builtin_inff (), dir);\n+  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n   if (FLT_EVAL_METHOD != 0)\n     {\n       /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_4 r = nextafterf (s, dir);\n+      volatile GFC_REAL_4 r = MATHFUNC(nextafter) (s, dir);\n       return r;\n     }\n   else\n-    return nextafterf (s, dir);\n+    return MATHFUNC(nextafter) (s, dir);\n }\n \n #endif"}, {"sha": "8ac00b17c6d85002ccfa269bb406cf8e0c238d59", "filename": "libgfortran/generated/nearest_r8.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnearest_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnearest_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_COPYSIGN) && defined (HAVE_NEXTAFTER)\n \n extern GFC_REAL_8 nearest_r8 (GFC_REAL_8 s, GFC_REAL_8 dir);\n@@ -34,15 +37,15 @@ export_proto(nearest_r8);\n GFC_REAL_8\n nearest_r8 (GFC_REAL_8 s, GFC_REAL_8 dir)\n {\n-  dir = copysign (__builtin_inf (), dir);\n+  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n   if (FLT_EVAL_METHOD != 0)\n     {\n       /* ??? Work around glibc bug on x86.  */\n-      volatile GFC_REAL_8 r = nextafter (s, dir);\n+      volatile GFC_REAL_8 r = MATHFUNC(nextafter) (s, dir);\n       return r;\n     }\n   else\n-    return nextafter (s, dir);\n+    return MATHFUNC(nextafter) (s, dir);\n }\n \n #endif"}, {"sha": "475a8cfa11049560660c32a8c4532804ceabe61c", "filename": "libgfortran/generated/norm2_r10.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,7 +29,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_REAL_10)\n+\n+#if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_REAL_10) && defined (HAVE_SQRTL) && defined (HAVE_FABSL)\n+\n+#define MATHFUNC(funcname) funcname ## l\n \n \n extern void norm2_r10 (gfc_array_r10 * const restrict, \n@@ -144,23 +147,23 @@ norm2_r10 (gfc_array_r10 * const restrict retarray,\n       {\n \n \tGFC_REAL_10 scale;\n-\tresult = 0.0L;\n-\tscale = 1.0L;\n+\tresult = 0;\n+\tscale = 1;\n \tif (len <= 0)\n-\t  *dest = 0.0L;\n+\t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-\t  if (*src != 0.0L)\n+\t  if (*src != 0)\n \t    {\n \t      GFC_REAL_10 absX, val;\n-\t      absX = fabsl (*src);\n+\t      absX = MATHFUNC(fabs) (*src);\n \t      if (scale < absX)\n \t\t{\n \t\t  val = scale / absX;\n-\t\t  result = 1.0L + result * val * val;\n+\t\t  result = 1 + result * val * val;\n \t\t  scale = absX;\n \t\t}\n \t      else\n@@ -170,7 +173,7 @@ norm2_r10 (gfc_array_r10 * const restrict retarray,\n \t\t}\n \t    }\n \t      }\n-\t    result = scale * sqrtl (result);\n+\t    result = scale * MATHFUNC(sqrt) (result);\n \t    *dest = result;\n \t  }\n       }"}, {"sha": "acd57790a3d6087b0d400d11f727b2e1722fec3c", "filename": "libgfortran/generated/norm2_r16.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,7 +29,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_REAL_16)\n+\n+#if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_SQRTL)) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FABSL))\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n \n \n extern void norm2_r16 (gfc_array_r16 * const restrict, \n@@ -144,23 +151,23 @@ norm2_r16 (gfc_array_r16 * const restrict retarray,\n       {\n \n \tGFC_REAL_16 scale;\n-\tresult = 0.0L;\n-\tscale = 1.0L;\n+\tresult = 0;\n+\tscale = 1;\n \tif (len <= 0)\n-\t  *dest = 0.0L;\n+\t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-\t  if (*src != 0.0L)\n+\t  if (*src != 0)\n \t    {\n \t      GFC_REAL_16 absX, val;\n-\t      absX = fabsl (*src);\n+\t      absX = MATHFUNC(fabs) (*src);\n \t      if (scale < absX)\n \t\t{\n \t\t  val = scale / absX;\n-\t\t  result = 1.0L + result * val * val;\n+\t\t  result = 1 + result * val * val;\n \t\t  scale = absX;\n \t\t}\n \t      else\n@@ -170,7 +177,7 @@ norm2_r16 (gfc_array_r16 * const restrict retarray,\n \t\t}\n \t    }\n \t      }\n-\t    result = scale * sqrtl (result);\n+\t    result = scale * MATHFUNC(sqrt) (result);\n \t    *dest = result;\n \t  }\n       }"}, {"sha": "83e034fa613dea663fda8730ac996df53a5e6d3e", "filename": "libgfortran/generated/norm2_r4.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,7 +29,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_REAL_4)\n+\n+#if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_REAL_4) && defined (HAVE_SQRTF) && defined (HAVE_FABSF)\n+\n+#define MATHFUNC(funcname) funcname ## f\n \n \n extern void norm2_r4 (gfc_array_r4 * const restrict, \n@@ -144,23 +147,23 @@ norm2_r4 (gfc_array_r4 * const restrict retarray,\n       {\n \n \tGFC_REAL_4 scale;\n-\tresult = 0.0F;\n-\tscale = 1.0F;\n+\tresult = 0;\n+\tscale = 1;\n \tif (len <= 0)\n-\t  *dest = 0.0F;\n+\t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-\t  if (*src != 0.0F)\n+\t  if (*src != 0)\n \t    {\n \t      GFC_REAL_4 absX, val;\n-\t      absX = fabsf (*src);\n+\t      absX = MATHFUNC(fabs) (*src);\n \t      if (scale < absX)\n \t\t{\n \t\t  val = scale / absX;\n-\t\t  result = 1.0F + result * val * val;\n+\t\t  result = 1 + result * val * val;\n \t\t  scale = absX;\n \t\t}\n \t      else\n@@ -170,7 +173,7 @@ norm2_r4 (gfc_array_r4 * const restrict retarray,\n \t\t}\n \t    }\n \t      }\n-\t    result = scale * sqrtf (result);\n+\t    result = scale * MATHFUNC(sqrt) (result);\n \t    *dest = result;\n \t  }\n       }"}, {"sha": "88599e83c7f1a2f4cdcbf8f429c07d8595f7b2bd", "filename": "libgfortran/generated/norm2_r8.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fnorm2_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -29,7 +29,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n \n \n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_REAL_8)\n+\n+#if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_REAL_8) && defined (HAVE_SQRT) && defined (HAVE_FABS)\n+\n+#define MATHFUNC(funcname) funcname\n \n \n extern void norm2_r8 (gfc_array_r8 * const restrict, \n@@ -144,23 +147,23 @@ norm2_r8 (gfc_array_r8 * const restrict retarray,\n       {\n \n \tGFC_REAL_8 scale;\n-\tresult = 0.0;\n-\tscale = 1.0;\n+\tresult = 0;\n+\tscale = 1;\n \tif (len <= 0)\n-\t  *dest = 0.0;\n+\t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-\t  if (*src != 0.0)\n+\t  if (*src != 0)\n \t    {\n \t      GFC_REAL_8 absX, val;\n-\t      absX = fabs (*src);\n+\t      absX = MATHFUNC(fabs) (*src);\n \t      if (scale < absX)\n \t\t{\n \t\t  val = scale / absX;\n-\t\t  result = 1.0 + result * val * val;\n+\t\t  result = 1 + result * val * val;\n \t\t  scale = absX;\n \t\t}\n \t      else\n@@ -170,7 +173,7 @@ norm2_r8 (gfc_array_r8 * const restrict retarray,\n \t\t}\n \t    }\n \t      }\n-\t    result = scale * sqrt (result);\n+\t    result = scale * MATHFUNC(sqrt) (result);\n \t    *dest = result;\n \t  }\n       }"}, {"sha": "298c9d1388bdeedaef74235ad44bc0d431e61328", "filename": "libgfortran/generated/rrspacing_r10.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_FABSL) && defined (HAVE_FREXPL)\n \n extern GFC_REAL_10 rrspacing_r10 (GFC_REAL_10 s, int p);\n@@ -36,14 +39,14 @@ rrspacing_r10 (GFC_REAL_10 s, int p)\n {\n   int e;\n   GFC_REAL_10 x;\n-  x = fabsl (s);\n+  x = MATHFUNC(fabs) (s);\n   if (x == 0.)\n     return 0.;\n-  frexpl (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n #if defined (HAVE_LDEXPL)\n-  return ldexpl (x, p - e);\n+  return MATHFUNC(ldexp) (x, p - e);\n #else\n-  return scalbnl (x, p - e);\n+  return MATHFUNC(scalbn) (x, p - e);\n #endif\n \n }"}, {"sha": "3812435ba807b2623462169a5f7701fc0fd2fdbb", "filename": "libgfortran/generated/rrspacing_r16.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,7 +26,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_FABSL) && defined (HAVE_FREXPL)\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n+#if defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FABSL)) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FREXPL))\n \n extern GFC_REAL_16 rrspacing_r16 (GFC_REAL_16 s, int p);\n export_proto(rrspacing_r16);\n@@ -36,14 +43,14 @@ rrspacing_r16 (GFC_REAL_16 s, int p)\n {\n   int e;\n   GFC_REAL_16 x;\n-  x = fabsl (s);\n+  x = MATHFUNC(fabs) (s);\n   if (x == 0.)\n     return 0.;\n-  frexpl (s, &e);\n-#if defined (HAVE_LDEXPL)\n-  return ldexpl (x, p - e);\n+  MATHFUNC(frexp) (s, &e);\n+#if (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_LDEXPL))\n+  return MATHFUNC(ldexp) (x, p - e);\n #else\n-  return scalbnl (x, p - e);\n+  return MATHFUNC(scalbn) (x, p - e);\n #endif\n \n }"}, {"sha": "74a2826065b4ba53b1a8b3c6393bb44aed7b9e58", "filename": "libgfortran/generated/rrspacing_r4.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_FABSF) && defined (HAVE_FREXPF)\n \n extern GFC_REAL_4 rrspacing_r4 (GFC_REAL_4 s, int p);\n@@ -36,14 +39,14 @@ rrspacing_r4 (GFC_REAL_4 s, int p)\n {\n   int e;\n   GFC_REAL_4 x;\n-  x = fabsf (s);\n+  x = MATHFUNC(fabs) (s);\n   if (x == 0.)\n     return 0.;\n-  frexpf (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n #if defined (HAVE_LDEXPF)\n-  return ldexpf (x, p - e);\n+  return MATHFUNC(ldexp) (x, p - e);\n #else\n-  return scalbnf (x, p - e);\n+  return MATHFUNC(scalbn) (x, p - e);\n #endif\n \n }"}, {"sha": "cf3641893078607e5774e36ab9e27b0842056584", "filename": "libgfortran/generated/rrspacing_r8.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Frrspacing_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Frrspacing_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_FABS) && defined (HAVE_FREXP)\n \n extern GFC_REAL_8 rrspacing_r8 (GFC_REAL_8 s, int p);\n@@ -36,14 +39,14 @@ rrspacing_r8 (GFC_REAL_8 s, int p)\n {\n   int e;\n   GFC_REAL_8 x;\n-  x = fabs (s);\n+  x = MATHFUNC(fabs) (s);\n   if (x == 0.)\n     return 0.;\n-  frexp (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n #if defined (HAVE_LDEXP)\n-  return ldexp (x, p - e);\n+  return MATHFUNC(ldexp) (x, p - e);\n #else\n-  return scalbn (x, p - e);\n+  return MATHFUNC(scalbn) (x, p - e);\n #endif\n \n }"}, {"sha": "f6435f89b5009403ac0094c1dc998948c6d3bc66", "filename": "libgfortran/generated/set_exponent_r10.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_SCALBNL) && defined (HAVE_FREXPL)\n \n extern GFC_REAL_10 set_exponent_r10 (GFC_REAL_10 s, GFC_INTEGER_4 i);\n@@ -35,7 +38,7 @@ GFC_REAL_10\n set_exponent_r10 (GFC_REAL_10 s, GFC_INTEGER_4 i)\n {\n   int dummy_exp;\n-  return scalbnl (frexpl (s, &dummy_exp), i);\n+  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n }\n \n #endif"}, {"sha": "8842dad8993658df897a73b3ee01a9d0c013b96d", "filename": "libgfortran/generated/set_exponent_r16.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,7 +26,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_SCALBNL) && defined (HAVE_FREXPL)\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n+#if defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_SCALBNL)) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FREXPL))\n \n extern GFC_REAL_16 set_exponent_r16 (GFC_REAL_16 s, GFC_INTEGER_4 i);\n export_proto(set_exponent_r16);\n@@ -35,7 +42,7 @@ GFC_REAL_16\n set_exponent_r16 (GFC_REAL_16 s, GFC_INTEGER_4 i)\n {\n   int dummy_exp;\n-  return scalbnl (frexpl (s, &dummy_exp), i);\n+  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n }\n \n #endif"}, {"sha": "f88060237e8701344739f82c2b1248d89f86baaf", "filename": "libgfortran/generated/set_exponent_r4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_SCALBNF) && defined (HAVE_FREXPF)\n \n extern GFC_REAL_4 set_exponent_r4 (GFC_REAL_4 s, GFC_INTEGER_4 i);\n@@ -35,7 +38,7 @@ GFC_REAL_4\n set_exponent_r4 (GFC_REAL_4 s, GFC_INTEGER_4 i)\n {\n   int dummy_exp;\n-  return scalbnf (frexpf (s, &dummy_exp), i);\n+  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n }\n \n #endif"}, {"sha": "9d6fd1395a111943cf95b3a3febdb6e5ca4d6d75", "filename": "libgfortran/generated/set_exponent_r8.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fset_exponent_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fset_exponent_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_SCALBN) && defined (HAVE_FREXP)\n \n extern GFC_REAL_8 set_exponent_r8 (GFC_REAL_8 s, GFC_INTEGER_4 i);\n@@ -35,7 +38,7 @@ GFC_REAL_8\n set_exponent_r8 (GFC_REAL_8 s, GFC_INTEGER_4 i)\n {\n   int dummy_exp;\n-  return scalbn (frexp (s, &dummy_exp), i);\n+  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n }\n \n #endif"}, {"sha": "abf6784b3eedbbce30ebd783f30902e173f0f70e", "filename": "libgfortran/generated/spacing_r10.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r10.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## l\n+\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_FREXPL)\n \n extern GFC_REAL_10 spacing_r10 (GFC_REAL_10 s, int p, int emin, GFC_REAL_10 tiny);\n@@ -37,13 +40,13 @@ spacing_r10 (GFC_REAL_10 s, int p, int emin, GFC_REAL_10 tiny)\n   int e;\n   if (s == 0.)\n     return tiny;\n-  frexpl (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n   e = e - p;\n   e = e > emin ? e : emin;\n #if defined (HAVE_LDEXPL)\n-  return ldexpl (1., e);\n+  return MATHFUNC(ldexp) (1., e);\n #else\n-  return scalbnl (1., e);\n+  return MATHFUNC(scalbn) (1., e);\n #endif\n }\n "}, {"sha": "c95c0bafde853a6ee067859c327e24d2953d96c2", "filename": "libgfortran/generated/spacing_r16.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r16.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,7 +26,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_FREXPL)\n+\n+#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif\n+\n+#if defined (HAVE_GFC_REAL_16) && (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_FREXPL))\n \n extern GFC_REAL_16 spacing_r16 (GFC_REAL_16 s, int p, int emin, GFC_REAL_16 tiny);\n export_proto(spacing_r16);\n@@ -37,13 +44,13 @@ spacing_r16 (GFC_REAL_16 s, int p, int emin, GFC_REAL_16 tiny)\n   int e;\n   if (s == 0.)\n     return tiny;\n-  frexpl (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n   e = e - p;\n   e = e > emin ? e : emin;\n-#if defined (HAVE_LDEXPL)\n-  return ldexpl (1., e);\n+#if (defined(GFC_WITH_QUAD_LIB) || defined(HAVE_LDEXPL))\n+  return MATHFUNC(ldexp) (1., e);\n #else\n-  return scalbnl (1., e);\n+  return MATHFUNC(scalbn) (1., e);\n #endif\n }\n "}, {"sha": "2be2906536df0b5bc6801012c2983062847910c3", "filename": "libgfortran/generated/spacing_r4.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r4.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname ## f\n+\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_FREXPF)\n \n extern GFC_REAL_4 spacing_r4 (GFC_REAL_4 s, int p, int emin, GFC_REAL_4 tiny);\n@@ -37,13 +40,13 @@ spacing_r4 (GFC_REAL_4 s, int p, int emin, GFC_REAL_4 tiny)\n   int e;\n   if (s == 0.)\n     return tiny;\n-  frexpf (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n   e = e - p;\n   e = e > emin ? e : emin;\n #if defined (HAVE_LDEXPF)\n-  return ldexpf (1., e);\n+  return MATHFUNC(ldexp) (1., e);\n #else\n-  return scalbnf (1., e);\n+  return MATHFUNC(scalbn) (1., e);\n #endif\n }\n "}, {"sha": "aa140b53e518f1df1eef179fd9347f618a662417", "filename": "libgfortran/generated/spacing_r8.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fgenerated%2Fspacing_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspacing_r8.c?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -26,6 +26,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n \n+\n+#define MATHFUNC(funcname) funcname\n+\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_FREXP)\n \n extern GFC_REAL_8 spacing_r8 (GFC_REAL_8 s, int p, int emin, GFC_REAL_8 tiny);\n@@ -37,13 +40,13 @@ spacing_r8 (GFC_REAL_8 s, int p, int emin, GFC_REAL_8 tiny)\n   int e;\n   if (s == 0.)\n     return tiny;\n-  frexp (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n   e = e - p;\n   e = e > emin ? e : emin;\n #if defined (HAVE_LDEXP)\n-  return ldexp (1., e);\n+  return MATHFUNC(ldexp) (1., e);\n #else\n-  return scalbn (1., e);\n+  return MATHFUNC(scalbn) (1., e);\n #endif\n }\n "}, {"sha": "3df8f1d1849090b492100459b83d4a8962b0242b", "filename": "libgfortran/m4/bessel.m4", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fbessel.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fbessel.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fbessel.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -31,11 +31,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n include(iparm.m4)dnl\n include(`mtype.m4')dnl\n \n+mathfunc_macro\n+\n `#if defined (HAVE_'rtype_name`)\n \n \n \n-#if defined (HAVE_JN'Q`)\n+#if 'hasmathfunc(jn)`\n extern void bessel_jn_r'rtype_kind` ('rtype` * const restrict ret, int n1,\n \t\t\t\t     int n2, 'rtype_name` x);\n export_proto(bessel_jn_r'rtype_kind`);\n@@ -69,28 +71,28 @@ bessel_jn_r'rtype_kind` ('rtype` * const restrict ret, int n1, int n2, 'rtype_na\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0'Q`))\n+  if (unlikely (x == 0))\n     {\n-      ret->data[0] = 1.0'Q`;\n+      ret->data[0] = 1;\n       for (i = 1; i <= n2-n1; i++)\n-        ret->data[i*stride] = 0.0'Q`;\n+        ret->data[i*stride] = 0;\n       return;\n     }\n \n   ret->data = ret->data;\n-  last1 = jn'q` (n2, x);\n+  last1 = MATHFUNC(jn) (n2, x);\n   ret->data[(n2-n1)*stride] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = jn'q` (n2 - 1, x);\n+  last2 = MATHFUNC(jn) (n2 - 1, x);\n   ret->data[(n2-n1-1)*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0'Q`/x;\n+  x2rev = GFC_REAL_'rtype_kind`_LITERAL(2.)/x;\n \n   for (i = n2-n1-2; i >= 0; i--)\n     {\n@@ -102,7 +104,7 @@ bessel_jn_r'rtype_kind` ('rtype` * const restrict ret, int n1, int n2, 'rtype_na\n \n #endif\n \n-#if defined (HAVE_YN'Q`)\n+#if 'hasmathfunc(yn)`\n extern void bessel_yn_r'rtype_kind` ('rtype` * const restrict ret,\n \t\t\t\t     int n1, int n2, 'rtype_name` x);\n export_proto(bessel_yn_r'rtype_kind`);\n@@ -137,7 +139,7 @@ bessel_yn_r'rtype_kind` ('rtype` * const restrict ret, int n1, int n2,\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n-  if (unlikely (x == 0.0'Q`))\n+  if (unlikely (x == 0))\n     {\n       for (i = 0; i <= n2-n1; i++)\n #if defined('rtype_name`_INFINITY)\n@@ -149,19 +151,19 @@ bessel_yn_r'rtype_kind` ('rtype` * const restrict ret, int n1, int n2,\n     }\n \n   ret->data = ret->data;\n-  last1 = yn'q` (n1, x);\n+  last1 = MATHFUNC(yn) (n1, x);\n   ret->data[0] = last1;\n \n   if (n1 == n2)\n     return;\n \n-  last2 = yn'q` (n1 + 1, x);\n+  last2 = MATHFUNC(yn) (n1 + 1, x);\n   ret->data[1*stride] = last2;\n \n   if (n1 + 1 == n2)\n     return;\n \n-  x2rev = 2.0'Q`/x;\n+  x2rev = GFC_REAL_'rtype_kind`_LITERAL(2.)/x;\n \n   for (i = 2; i <= n1+n2; i++)\n     {"}, {"sha": "7302eb8b1a9af3062e2ae45c344ec43be00b5127", "filename": "libgfortran/m4/exponent.m4", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fexponent.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fexponent.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fexponent.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -27,7 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'real_type`) && defined (HAVE_FREXP'Q`)\n+mathfunc_macro\n+\n+`#if defined (HAVE_'real_type`) && 'hasmathfunc(frexp)`\n \n extern GFC_INTEGER_4 exponent_r'kind` ('real_type` s);\n export_proto(exponent_r'kind`);\n@@ -36,7 +38,7 @@ GFC_INTEGER_4\n exponent_r'kind` ('real_type` s)\n {\n   int ret;\n-  frexp'q` (s, &ret);\n+  MATHFUNC(frexp) (s, &ret);\n   return ret;\n }\n "}, {"sha": "419e801321f177c04720dd7e23231834059106d5", "filename": "libgfortran/m4/fraction.m4", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Ffraction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Ffraction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Ffraction.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -27,7 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'real_type`) && defined (HAVE_FREXP'Q`)\n+mathfunc_macro\n+\n+`#if defined (HAVE_'real_type`) && 'hasmathfunc(frexp)`\n \n extern 'real_type` fraction_r'kind` ('real_type` s);\n export_proto(fraction_r'kind`);\n@@ -36,7 +38,7 @@ export_proto(fraction_r'kind`);\n fraction_r'kind` ('real_type` s)\n {\n   int dummy_exp;\n-  return frexp'q` (s, &dummy_exp);\n+  return MATHFUNC(frexp) (s, &dummy_exp);\n }\n \n #endif'"}, {"sha": "fc4cecac5f5edf7416cece9aad64ac31ed91bb09", "filename": "libgfortran/m4/mtype.m4", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fmtype.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fmtype.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmtype.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -2,5 +2,12 @@ dnl Get type kind from filename.\n define(kind,regexp(file, `_.\\([0-9]+\\).c$', `\\1'))dnl\n define(complex_type, `GFC_COMPLEX_'kind)dnl\n define(real_type, `GFC_REAL_'kind)dnl\n+define(`upcase', `translit(`$*', `a-z', `A-Z')')dnl\n define(q,ifelse(kind,4,f,ifelse(kind,8,`',ifelse(kind,10,l,ifelse(kind,16,l,`_'kind)))))dnl\n define(Q,translit(q,`a-z',`A-Z'))dnl\n+define(hasmathfunc,`ifelse(kind,4,`defined (HAVE_'upcase($1)`F)',ifelse(kind,8,`defined (HAVE_'upcase($1)`)',ifelse(kind,10,`defined (HAVE_'upcase($1)`L)',ifelse(kind,16,`(defined(GFC_WITH_QUAD_LIB) || defined(HAVE_'upcase($1)`L))',`error out'))))')\n+define(mathfunc_macro,`ifelse(kind,16,`#if defined(GFC_REAL_16_IS_FLOAT128)\n+#define MATHFUNC(funcname) funcname ## q\n+#else\n+#define MATHFUNC(funcname) funcname ## l\n+#endif',ifelse(kind,8,``#''`define MATHFUNC(funcname) funcname',```#'''`define MATHFUNC(funcname) funcname '```#'''```#'''` 'q))')dnl"}, {"sha": "8fbe5000794ce3baa0bf1f4b375c084b9fa204ab", "filename": "libgfortran/m4/nearest.m4", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fnearest.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fnearest.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fnearest.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -27,23 +27,25 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'real_type`) && defined (HAVE_COPYSIGN'Q`) && defined (HAVE_NEXTAFTER'Q`)\n+mathfunc_macro\n+\n+`#if defined (HAVE_'real_type`) && 'hasmathfunc(copysign) && hasmathfunc(nextafter)`\n \n extern 'real_type` nearest_r'kind` ('real_type` s, 'real_type` dir);\n export_proto(nearest_r'kind`);\n \n 'real_type`\n nearest_r'kind` ('real_type` s, 'real_type` dir)\n {\n-  dir = copysign'q` (__builtin_inf'q` (), dir);\n+  dir = MATHFUNC(copysign) (MATHFUNC(__builtin_inf) (), dir);\n   if (FLT_EVAL_METHOD != 0)\n     {\n       /* ??? Work around glibc bug on x86.  */\n-      volatile 'real_type` r = nextafter'q` (s, dir);\n+      volatile 'real_type` r = MATHFUNC(nextafter) (s, dir);\n       return r;\n     }\n   else\n-    return nextafter'q` (s, dir);\n+    return MATHFUNC(nextafter) (s, dir);\n }\n \n #endif'"}, {"sha": "b2162ac23ed4bce4372d4a7aba26f57d3fdf6e55", "filename": "libgfortran/m4/norm2.m4", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fnorm2.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fnorm2.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fnorm2.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -32,20 +32,22 @@ include(iparm.m4)dnl\n include(ifunction.m4)dnl\n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'atype_name`) && defined (HAVE_'rtype_name`)'\n+`#if defined (HAVE_'atype_name`) && defined (HAVE_'rtype_name`) && 'hasmathfunc(sqrt) && hasmathfunc(fabs)\n \n-ARRAY_FUNCTION(`0.0'Q,\n+mathfunc_macro\n+\n+ARRAY_FUNCTION(0,\n `\t'rtype_name` scale;\n-\tresult = 0.0'Q`;\n-\tscale = 1.0'Q`;',\n-`\t  if (*src != 0.0'Q`)\n+\tresult = 0;\n+\tscale = 1;',\n+`\t  if (*src != 0)\n \t    {\n \t      'rtype_name` absX, val;\n-\t      absX = fabs'q` (*src);\n+\t      absX = MATHFUNC(fabs) (*src);\n \t      if (scale < absX)\n \t\t{\n \t\t  val = scale / absX;\n-\t\t  result = 1.0'Q` + result * val * val;\n+\t\t  result = 1 + result * val * val;\n \t\t  scale = absX;\n \t\t}\n \t      else\n@@ -54,6 +56,6 @@ ARRAY_FUNCTION(`0.0'Q,\n \t\t  result += val * val;\n \t\t}\n \t    }',\n-`   result = scale * sqrt'q` (result);')\n+`   result = scale * MATHFUNC(sqrt) (result);')\n \n #endif"}, {"sha": "3d75c66fa22074dd0279ebd29379d81c64fcfa3e", "filename": "libgfortran/m4/rrspacing.m4", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Frrspacing.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Frrspacing.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Frrspacing.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -27,7 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'real_type`) && defined (HAVE_FABS'Q`) && defined (HAVE_FREXP'Q`)\n+mathfunc_macro\n+\n+`#if defined (HAVE_'real_type`) && 'hasmathfunc(fabs) && hasmathfunc(frexp)`\n \n extern 'real_type` rrspacing_r'kind` ('real_type` s, int p);\n export_proto(rrspacing_r'kind`);\n@@ -37,14 +39,14 @@ rrspacing_r'kind` ('real_type` s, int p)\n {\n   int e;\n   'real_type` x;\n-  x = fabs'q` (s);\n+  x = MATHFUNC(fabs) (s);\n   if (x == 0.)\n     return 0.;\n-  frexp'q` (s, &e);\n-#if defined (HAVE_LDEXP'Q`)\n-  return ldexp'q` (x, p - e);\n+  MATHFUNC(frexp) (s, &e);\n+#if 'hasmathfunc(ldexp)`\n+  return MATHFUNC(ldexp) (x, p - e);\n #else\n-  return scalbn'q` (x, p - e);\n+  return MATHFUNC(scalbn) (x, p - e);\n #endif\n \n }"}, {"sha": "0d35d11c875a4d7846823f3322d5f54e8b393d4d", "filename": "libgfortran/m4/set_exponent.m4", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fset_exponent.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fset_exponent.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fset_exponent.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -27,7 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'real_type`) && defined (HAVE_SCALBN'Q`) && defined (HAVE_FREXP'Q`)\n+mathfunc_macro\n+\n+`#if defined (HAVE_'real_type`) && 'hasmathfunc(scalbn) && hasmathfunc(frexp)`\n \n extern 'real_type` set_exponent_r'kind` ('real_type` s, GFC_INTEGER_4 i);\n export_proto(set_exponent_r'kind`);\n@@ -36,7 +38,7 @@ export_proto(set_exponent_r'kind`);\n set_exponent_r'kind` ('real_type` s, GFC_INTEGER_4 i)\n {\n   int dummy_exp;\n-  return scalbn'q` (frexp'q` (s, &dummy_exp), i);\n+  return MATHFUNC(scalbn) (MATHFUNC(frexp) (s, &dummy_exp), i);\n }\n \n #endif'"}, {"sha": "9b43b740262b28a1f41c552549e37e359232d854", "filename": "libgfortran/m4/spacing.m4", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fspacing.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd13d44702391da6e367876b74ce8ed71c0bab/libgfortran%2Fm4%2Fspacing.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspacing.m4?ref=08fd13d44702391da6e367876b74ce8ed71c0bab", "patch": "@@ -27,7 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n include(`mtype.m4')dnl\n \n-`#if defined (HAVE_'real_type`) && defined (HAVE_FREXP'Q`)\n+mathfunc_macro\n+\n+`#if defined (HAVE_'real_type`) && 'hasmathfunc(frexp)`\n \n extern 'real_type` spacing_r'kind` ('real_type` s, int p, int emin, 'real_type` tiny);\n export_proto(spacing_r'kind`);\n@@ -38,13 +40,13 @@ spacing_r'kind` ('real_type` s, int p, int emin, 'real_type` tiny)\n   int e;\n   if (s == 0.)\n     return tiny;\n-  frexp'q` (s, &e);\n+  MATHFUNC(frexp) (s, &e);\n   e = e - p;\n   e = e > emin ? e : emin;\n-#if defined (HAVE_LDEXP'Q`)\n-  return ldexp'q` (1., e);\n+#if 'hasmathfunc(ldexp)`\n+  return MATHFUNC(ldexp) (1., e);\n #else\n-  return scalbn'q` (1., e);\n+  return MATHFUNC(scalbn) (1., e);\n #endif\n }\n "}]}