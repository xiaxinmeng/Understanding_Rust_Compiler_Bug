{"sha": "66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZmOWE2ZGU0Y2NkNDI3YmNiZWMxNDEwNDQ2NWIxZjBlZmE3YzEwZg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-01-14T19:45:23Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-01-14T19:45:23Z"}, "message": "Testcases for sibcall unwind info problems.\n\nPR target/13158\n* gcc.target/ia64/sibcall-unwind-1.c: New test.\nPR target/18987\n* gcc.target/ia64/sibcall-unwind-2.c: New test.\n\nFrom-SVN: r93660", "tree": {"sha": "633174f6330af85e4d1d39cbd597887739fbd3c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/633174f6330af85e4d1d39cbd597887739fbd3c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/comments", "author": null, "committer": null, "parents": [{"sha": "05075d4e465d3b1b55e038ff9f6e3086e158846f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05075d4e465d3b1b55e038ff9f6e3086e158846f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05075d4e465d3b1b55e038ff9f6e3086e158846f"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "b0e7898293e6571f1b55c06531c82e35b58fe946", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "patch": "@@ -1,3 +1,10 @@\n+2005-01-14  James E. Wilson  <wilson@specifixinc.com>\n+\n+\tPR target/13158\n+\t* gcc.target/ia64/sibcall-unwind-1.c: New test.\n+\tPR target/18987\n+\t* gcc.target/ia64/sibcall-unwind-2.c: New test.\n+\n 2005-01-14  Steven G. Kargl  <kargls@comcast.net>\n \n \t* gfortran.dg/select_1.f90: New test."}, {"sha": "fef778dd6a10befe19f665add70c799cce6c6514", "filename": "gcc/testsuite/gcc.target/ia64/ia64.exp", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fia64.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fia64.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fia64.exp?ref=66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "patch": "@@ -0,0 +1,41 @@\n+#   Copyright (C) 1997 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't an IA-64 target.\n+if ![istarget ia64*-*-*] then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}, {"sha": "471179119346dd50d7b13c87fabac71e5942a727", "filename": "gcc/testsuite/gcc.target/ia64/sibcall-unwind-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fsibcall-unwind-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fsibcall-unwind-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fsibcall-unwind-1.c?ref=66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "patch": "@@ -0,0 +1,10 @@\n+/* PR 13158.  Emit \".restore sp\" for a sibcall.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+/* { dg-final { scan-assembler-times \"\\\\.restore sp\" 1 } } */\n+\n+static void do_date (char *);  \n+void rfc822_date (char *date)  \n+{  \n+  do_date (date);\n+}"}, {"sha": "0ae31ae5bf4ab8db62c0493f350eeb55f4d3c6e5", "filename": "gcc/testsuite/gcc.target/ia64/sibcall-unwind-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fsibcall-unwind-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f9a6de4ccd427bcbec14104465b1f0efa7c10f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fsibcall-unwind-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fsibcall-unwind-2.c?ref=66f9a6de4ccd427bcbec14104465b1f0efa7c10f", "patch": "@@ -0,0 +1,11 @@\n+/* PR 18987.  This caused an assembler error because we emitted \".restore sp\"\n+   twice.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-omit-frame-pointer -w\" } */\n+/* { dg-final { scan-assembler-times \"\\\\.restore sp\" 1 } } */\n+\n+static void do_date (char *);  \n+void rfc822_date (char *date)  \n+{  \n+  do_date (date);\n+}"}]}