{"sha": "ea663be91a23f217308e669e76b4f0a0c7b86616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2NjNiZTkxYTIzZjIxNzMwOGU2NjllNzZiNGYwYTBjN2I4NjYxNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-06-22T17:35:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-06-22T17:35:34Z"}, "message": "decl.c (grokdeclarator): Use declspecs->locations[ds_virtual].\n\n/cp\n2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (grokdeclarator): Use declspecs->locations[ds_virtual].\n\n/testsuite\n2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/inherit/pure1.C: Test location too.\n\n2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (grokdeclarator): Remove pointless code.\n\nFrom-SVN: r224750", "tree": {"sha": "cc0516ef0b5bb982519291a1fe8f3085d72e8533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc0516ef0b5bb982519291a1fe8f3085d72e8533"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea663be91a23f217308e669e76b4f0a0c7b86616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea663be91a23f217308e669e76b4f0a0c7b86616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea663be91a23f217308e669e76b4f0a0c7b86616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea663be91a23f217308e669e76b4f0a0c7b86616/comments", "author": null, "committer": null, "parents": [{"sha": "33273def7cd81f32d5e5fb9d06e7f5794cb2d46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33273def7cd81f32d5e5fb9d06e7f5794cb2d46a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33273def7cd81f32d5e5fb9d06e7f5794cb2d46a"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "89e43735a05a931ab9db2f492339c0dc61039ca3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea663be91a23f217308e669e76b4f0a0c7b86616", "patch": "@@ -1,3 +1,11 @@\n+2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (grokdeclarator): Use declspecs->locations[ds_virtual].\n+\n+2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (grokdeclarator): Remove pointless code.\n+\n 2015-06-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/66515"}, {"sha": "c934ff930779c01c40edbddc6e2e5c13f80ee2e9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ea663be91a23f217308e669e76b4f0a0c7b86616", "patch": "@@ -9529,7 +9529,8 @@ grokdeclarator (const cp_declarator *declarator,\n   if (virtualp\n       && (current_class_name == NULL_TREE || decl_context != FIELD))\n     {\n-      error (\"%<virtual%> outside class declaration\");\n+      error_at (declspecs->locations[ds_virtual],\n+\t\t\"%<virtual%> outside class declaration\");\n       virtualp = 0;\n     }\n \n@@ -10476,19 +10477,11 @@ grokdeclarator (const cp_declarator *declarator,\n \n   if (decl_context == TYPENAME)\n     {\n-      /* Note that the grammar rejects storage classes\n-\t in typenames, fields or parameters.  */\n-      if (type_quals != TYPE_UNQUALIFIED)\n-\ttype_quals = TYPE_UNQUALIFIED;\n+      /* Note that here we don't care about type_quals.  */\n \n       /* Special case: \"friend class foo\" looks like a TYPENAME context.  */\n       if (friendp)\n \t{\n-\t  if (type_quals != TYPE_UNQUALIFIED)\n-\t    {\n-\t      error (\"type qualifiers specified for friend class declaration\");\n-\t      type_quals = TYPE_UNQUALIFIED;\n-\t    }\n \t  if (inlinep)\n \t    {\n \t      error (\"%<inline%> specified for friend class declaration\");"}, {"sha": "60d13270ff385ab8ebc776dcecd675d9ef2ccb3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea663be91a23f217308e669e76b4f0a0c7b86616", "patch": "@@ -1,3 +1,7 @@\n+2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/inherit/pure1.C: Test location too.\n+\n 2015-06-22  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/fold-ior-1.c: New test."}, {"sha": "e825f0098433d339e7433c259b0114375cfba6df", "filename": "gcc/testsuite/g++.dg/inherit/pure1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea663be91a23f217308e669e76b4f0a0c7b86616/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C?ref=ea663be91a23f217308e669e76b4f0a0c7b86616", "patch": "@@ -3,8 +3,8 @@\n // { dg-do compile }\n \n void foo0() = 0;                   // { dg-error \"like a variable\" }\n-virtual void foo1() = 0;           // { dg-error \"outside class|variable\" }\n-\n+virtual void foo1() = 0;           // { dg-error \"1:'virtual' outside class\" }\n+// { dg-error \"like a variable\" \"\" { target *-*-* } 6 }\n struct A\n {\n   void foo2() = 0;                 // { dg-error \"non-virtual\" }"}]}