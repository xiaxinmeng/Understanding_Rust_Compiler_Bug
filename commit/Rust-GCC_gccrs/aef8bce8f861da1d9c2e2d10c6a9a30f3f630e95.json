{"sha": "aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmOGJjZThmODYxZGExZDljMmUyZDEwYzZhOWEzMGYzZjYzMGU5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-09-02T15:48:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-09-02T15:48:52Z"}, "message": "* semantics.c (describable_type): Don't pretend to be in a template.\n\nFrom-SVN: r151335", "tree": {"sha": "851c3aa7b314e91d451f5fce0f6b5cee9ae65c37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/851c3aa7b314e91d451f5fce0f6b5cee9ae65c37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "301ea0943188c469a2c9b567dedb0f7f64d7d826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301ea0943188c469a2c9b567dedb0f7f64d7d826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301ea0943188c469a2c9b567dedb0f7f64d7d826"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "0a351b2068d76ef91dd110baa86bb4c9405832c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95", "patch": "@@ -1,4 +1,6 @@\n-2009-09-01  Jason Merrill  <jason@redhat.com>\n+2009-09-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (describable_type): Don't pretend to be in a template.\n \n \t* ptree.c (cxx_print_type) [DECLTYPE_TYPE]: Print the expression.\n "}, {"sha": "1e5255e8ce2bae9b601261d713d6349f86ef4b2c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=aef8bce8f861da1d9c2e2d10c6a9a30f3f630e95", "patch": "@@ -4543,17 +4543,13 @@ describable_type (tree expr)\n {\n   tree type = NULL_TREE;\n \n-  /* processing_template_decl isn't set when we're called from the mangling\n-     code, so bump it now.  */\n-  ++processing_template_decl;\n   if (! type_dependent_expression_p (expr)\n       && ! type_unknown_p (expr))\n     {\n-      type = TREE_TYPE (expr);\n+      type = unlowered_expr_type (expr);\n       if (real_lvalue_p (expr))\n \ttype = build_reference_type (type);\n     }\n-  --processing_template_decl;\n \n   if (type)\n     return type;"}]}