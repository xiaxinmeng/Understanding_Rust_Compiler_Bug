{"sha": "db624b3b4b3a15d06cef746f2db07a334d669084", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI2MjRiM2I0YjNhMTVkMDZjZWY3NDZmMmRiMDdhMzM0ZDY2OTA4NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-09-18T12:02:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-09-18T12:02:19Z"}, "message": "Use built-in for std::make_integer_sequnce\n\n\t* include/std/utility (_Itup_cat, _Make_integer_sequence): Remove.\n\t(_Build_index_tuple, make_integer_sequence): Use built-in to generate\n\tpack expansion.\n\nFrom-SVN: r252923", "tree": {"sha": "77438da840f4806ce37a73f5a7d7d6db1aaf674c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77438da840f4806ce37a73f5a7d7d6db1aaf674c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db624b3b4b3a15d06cef746f2db07a334d669084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db624b3b4b3a15d06cef746f2db07a334d669084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db624b3b4b3a15d06cef746f2db07a334d669084", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db624b3b4b3a15d06cef746f2db07a334d669084/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec26ff5a012428ed864b679c7c171e2e7d917f76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec26ff5a012428ed864b679c7c171e2e7d917f76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec26ff5a012428ed864b679c7c171e2e7d917f76"}], "stats": {"total": 57, "additions": 23, "deletions": 34}, "files": [{"sha": "c83f0758beb59f468d501e4f776a9d98a9a39c6f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db624b3b4b3a15d06cef746f2db07a334d669084/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db624b3b4b3a15d06cef746f2db07a334d669084/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=db624b3b4b3a15d06cef746f2db07a334d669084", "patch": "@@ -1,5 +1,9 @@\n 2017-09-18  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/utility (_Itup_cat, _Make_integer_sequence): Remove.\n+\t(_Build_index_tuple, make_integer_sequence): Use built-in to generate\n+\tpack expansion.\n+\n \tPR libstdc++/71187\n \t* include/std/type_traits (__declval): New function to deduce return\n \ttype of declval."}, {"sha": "29a626004f9fd2dc932b28c7561e1d8e8144ae73", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 19, "deletions": 34, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db624b3b4b3a15d06cef746f2db07a334d669084/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db624b3b4b3a15d06cef746f2db07a334d669084/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=db624b3b4b3a15d06cef746f2db07a334d669084", "patch": "@@ -267,32 +267,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // extract the elements in a tuple.\n   template<size_t... _Indexes> struct _Index_tuple { };\n \n-  // Concatenates two _Index_tuples.\n-  template<typename _Itup1, typename _Itup2> struct _Itup_cat;\n-\n-  template<size_t... _Ind1, size_t... _Ind2>\n-    struct _Itup_cat<_Index_tuple<_Ind1...>, _Index_tuple<_Ind2...>>\n-    {\n-      using __type = _Index_tuple<_Ind1..., (_Ind2 + sizeof...(_Ind1))...>;\n-    };\n+#ifdef __has_builtin\n+# if __has_builtin(__make_integer_seq)\n+#  define _GLIBCXX_USE_MAKE_INTEGER_SEQ 1\n+# endif\n+#endif\n \n   // Builds an _Index_tuple<0, 1, 2, ..., _Num-1>.\n   template<size_t _Num>\n     struct _Build_index_tuple\n-    : _Itup_cat<typename _Build_index_tuple<_Num / 2>::__type,\n-\t\ttypename _Build_index_tuple<_Num - _Num / 2>::__type>\n-    { };\n-\n-  template<>\n-    struct _Build_index_tuple<1>\n     {\n-      typedef _Index_tuple<0> __type;\n-    };\n+#if _GLIBCXX_USE_MAKE_INTEGER_SEQ\n+      template<typename, size_t... _Indices>\n+        using _IdxTuple = _Index_tuple<_Indices...>;\n \n-  template<>\n-    struct _Build_index_tuple<0>\n-    {\n-      typedef _Index_tuple<> __type;\n+      using __type = __make_integer_seq<_IdxTuple, size_t, _Num>;\n+#else\n+      using __type = _Index_tuple<__integer_pack(_Num)...>;\n+#endif\n     };\n \n #if __cplusplus > 201103L\n@@ -307,23 +299,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       static constexpr size_t size() { return sizeof...(_Idx); }\n     };\n \n-  template<typename _Tp, _Tp _Num,\n-\t   typename _ISeq = typename _Build_index_tuple<_Num>::__type>\n-    struct _Make_integer_sequence;\n-\n-  template<typename _Tp, _Tp _Num,  size_t... _Idx>\n-    struct _Make_integer_sequence<_Tp, _Num, _Index_tuple<_Idx...>>\n-    {\n-      static_assert( _Num >= 0,\n-\t\t     \"Cannot make integer sequence of negative length\" );\n-\n-      typedef integer_sequence<_Tp, static_cast<_Tp>(_Idx)...> __type;\n-    };\n-\n   /// Alias template make_integer_sequence\n   template<typename _Tp, _Tp _Num>\n     using make_integer_sequence\n-      = typename _Make_integer_sequence<_Tp, _Num>::__type;\n+#if _GLIBCXX_USE_MAKE_INTEGER_SEQ\n+      = __make_integer_seq<integer_sequence, _Tp, _Num>;\n+#else\n+      = integer_sequence<_Tp, __integer_pack(_Num)...>;\n+#endif\n+\n+#undef _GLIBCXX_USE_MAKE_INTEGER_SEQ\n \n   /// Alias template index_sequence\n   template<size_t... _Idx>"}]}