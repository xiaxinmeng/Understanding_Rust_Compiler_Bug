{"sha": "695d8830016f8ce038d7891230d36b9824751610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk1ZDg4MzAwMTZmOGNlMDM4ZDc4OTEyMzBkMzZiOTgyNDc1MTYxMA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2007-03-03T19:23:06Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2007-03-03T19:23:06Z"}, "message": "configure.ac (HAVE_AS_REL16): Move test back to correct place.\n\n\t* configure.ac (HAVE_AS_REL16): Move test back to correct place.\n\t* configure: Regenerate.\n\nFrom-SVN: r122511", "tree": {"sha": "b2590f513b8ab63891cdd4b0963419a435e0a3f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2590f513b8ab63891cdd4b0963419a435e0a3f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/695d8830016f8ce038d7891230d36b9824751610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695d8830016f8ce038d7891230d36b9824751610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695d8830016f8ce038d7891230d36b9824751610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695d8830016f8ce038d7891230d36b9824751610/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1cad89ed591f45f71045c7fb9747bbc7e25f193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cad89ed591f45f71045c7fb9747bbc7e25f193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1cad89ed591f45f71045c7fb9747bbc7e25f193"}], "stats": {"total": 93, "additions": 49, "deletions": 44}, "files": [{"sha": "f055676e8ff848c63284a392b2b8942b4e01fbe6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695d8830016f8ce038d7891230d36b9824751610/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695d8830016f8ce038d7891230d36b9824751610/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=695d8830016f8ce038d7891230d36b9824751610", "patch": "@@ -1,3 +1,8 @@\n+2007-03-03  Andreas Schwab  <schwab@suse.de>\n+\n+\t* configure.ac (HAVE_AS_REL16): Move test back to correct place.\n+\t* configure: Regenerate.\n+\n 2007-03-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.def (ATTR_MATHFN_FPROUNDING): Rely on"}, {"sha": "1e63c02811faf78afd7a708939fc23a48e72994e", "filename": "gcc/configure", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695d8830016f8ce038d7891230d36b9824751610/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695d8830016f8ce038d7891230d36b9824751610/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=695d8830016f8ce038d7891230d36b9824751610", "patch": "@@ -15589,6 +15589,43 @@ LCF0:\n \taddis 11,30,_GLOBAL_OFFSET_TABLE_-.LCF0@ha';;\n     esac\n \n+    echo \"$as_me:$LINENO: checking assembler for rel16 relocs\" >&5\n+echo $ECHO_N \"checking assembler for rel16 relocs... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_powerpc_rel16+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_powerpc_rel16=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 17 \\) \\* 1000 + 0`\n+  then gcc_cv_as_powerpc_rel16=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo \"$conftest_s\" > conftest.s\n+    if { ac_try='$gcc_cv_as -a32 -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_powerpc_rel16=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_powerpc_rel16\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_powerpc_rel16\" >&6\n+if test $gcc_cv_as_powerpc_rel16 = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_REL16 1\n+_ACEOF\n+\n+fi\n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr6\"\n \t.csect .text[PR]\n@@ -15679,43 +15716,6 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_DFP 1\n _ACEOF\n \n-fi\n-\n-    echo \"$as_me:$LINENO: checking assembler for rel16 relocs\" >&5\n-echo $ECHO_N \"checking assembler for rel16 relocs... $ECHO_C\" >&6\n-if test \"${gcc_cv_as_powerpc_rel16+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  gcc_cv_as_powerpc_rel16=no\n-    if test $in_tree_gas = yes; then\n-    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 17 \\) \\* 1000 + 0`\n-  then gcc_cv_as_powerpc_rel16=yes\n-fi\n-  elif test x$gcc_cv_as != x; then\n-    echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as -a32 -o conftest.o conftest.s >&5'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }\n-    then\n-\tgcc_cv_as_powerpc_rel16=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-echo \"$as_me:$LINENO: result: $gcc_cv_as_powerpc_rel16\" >&5\n-echo \"${ECHO_T}$gcc_cv_as_powerpc_rel16\" >&6\n-if test $gcc_cv_as_powerpc_rel16 = yes; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_AS_REL16 1\n-_ACEOF\n-\n fi\n     ;;\n "}, {"sha": "83e13dd18f68139332fd13bcf49efa623861dac7", "filename": "gcc/configure.ac", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695d8830016f8ce038d7891230d36b9824751610/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695d8830016f8ce038d7891230d36b9824751610/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=695d8830016f8ce038d7891230d36b9824751610", "patch": "@@ -1,7 +1,7 @@\n # configure.ac for GCC\n # Process this file with autoconf to generate a configuration script.\n \n-# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n # Free Software Foundation, Inc.\n \n #This file is part of GCC.\n@@ -2926,6 +2926,12 @@ LCF0:\n \taddis 11,30,_GLOBAL_OFFSET_TABLE_-.LCF0@ha';;\n     esac\n \n+    gcc_GAS_CHECK_FEATURE([rel16 relocs],\n+      gcc_cv_as_powerpc_rel16, [2,17,0], -a32,\n+      [$conftest_s],,\n+      [AC_DEFINE(HAVE_AS_REL16, 1,\n+\t  [Define if your assembler supports R_PPC_REL16 relocs.])])\n+\n     case $target in\n       *-*-aix*) conftest_s='\t.machine \"pwr6\"\n \t.csect .text[[PR]]\n@@ -2955,12 +2961,6 @@ LCF0:\n       [$conftest_s],,\n       [AC_DEFINE(HAVE_AS_DFP, 1,\n \t  [Define if your assembler supports DFP instructions.])])\n-\n-    gcc_GAS_CHECK_FEATURE([rel16 relocs],\n-      gcc_cv_as_powerpc_rel16, [2,17,0], -a32,\n-      [$conftest_s],,\n-      [AC_DEFINE(HAVE_AS_REL16, 1,\n-\t  [Define if your assembler supports R_PPC_REL16 relocs.])])\n     ;;\n \n   mips*-*-*)"}]}