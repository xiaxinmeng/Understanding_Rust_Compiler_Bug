{"sha": "7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ExZGQzMjMyNTFjY2ZiODNiZTNiNmU1YWU5ZTdmZjMxZWM4YTQxMw==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1994-06-30T16:18:55Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1994-06-30T16:18:55Z"}, "message": "(read:, write:, streamVersion:):\n\n        Un-disable for alpha.  (forward::, performv::): Declare and fix to\n        return retval_t. .\n\nFrom-SVN: r7621", "tree": {"sha": "3e90397f11527da4cbb520a83a9c0ba5e8d8bc62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e90397f11527da4cbb520a83a9c0ba5e8d8bc62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413/comments", "author": null, "committer": null, "parents": [{"sha": "5d0f30f711ced9cdc1ab5bc2239311a4c35e4d0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d0f30f711ced9cdc1ab5bc2239311a4c35e4d0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d0f30f711ced9cdc1ab5bc2239311a4c35e4d0b"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "56b77fad3d5723702b5e2e093e5625e5e7216e7b", "filename": "gcc/objc/Object.m", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413/gcc%2Fobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413/gcc%2Fobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.m?ref=7a1dd323251ccfb83be3b6e5ae9e7ff31ec8a413", "patch": "@@ -1,5 +1,5 @@\n /* The implementation of class Object for Objective-C.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -260,12 +260,12 @@ - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n   return (*msg)(self, aSel, anObject1, anObject2);\n }\n \n-- forward:(SEL)aSel :(arglist_t)argFrame\n+- (retval_t)forward:(SEL)aSel :(arglist_t)argFrame\n {\n-  return [self doesNotRecognize: aSel];\n+  return (retval_t)[self doesNotRecognize: aSel];\n }\n \n-- performv:(SEL)aSel :(arglist_t)argFrame\n+- (retval_t)performv:(SEL)aSel :(arglist_t)argFrame\n {\n   return objc_msg_sendv(self, aSel, argFrame);\n }\n@@ -311,6 +311,10 @@ - (Class*)transmuteClassTo:(Class*)aClassObject\n                      object_get_class_name(self), sel_get_name(aSel)];\n }\n \n+#ifdef __alpha__\n+extern size_t strlen(const char*);\n+#endif\n+\n - error:(const char *)aString, ...\n {\n #define FMT \"error: %s (%s)\\n%s\\n\"\n@@ -339,37 +343,31 @@ + (int)version\n   return self;\n }\n \n-#ifndef __alpha__ /* TypedStream not supported on alpha yet.  */\n + (int)streamVersion: (TypedStream*)aStream\n {\n   if (aStream->mode == OBJC_READONLY)\n     return objc_get_stream_class_version (aStream, self);\n   else\n     return class_get_version (self);\n }\n-#endif\n \n // These are used to write or read the instance variables \n // declared in this particular part of the object.  Subclasses\n // should extend these, by calling [super read/write: aStream]\n // before doing their own archiving.  These methods are private, in\n // the sense that they should only be called from subclasses.\n \n-#ifndef __alpha__\n - read: (TypedStream*)aStream\n {\n   // [super read: aStream];  \n   return self;\n }\n-#endif\n \n-#ifndef __alpha__\n - write: (TypedStream*)aStream\n {\n   // [super write: aStream];\n   return self;\n }\n-#endif\n \n - awake\n {"}]}