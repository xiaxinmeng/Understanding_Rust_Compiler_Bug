{"sha": "b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBkZDhjOTBmZjFhNGE1MGUyMWI0YjI5MThjNzQ4NGYzNjEwNjk0Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-04-23T08:30:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-04-23T08:30:04Z"}, "message": "cfgexpand.c (expand_gimple_stmt_1): Use ops.code.\n\n2015-04-23  Richard Biener  <rguenther@suse.de>\n\n\t* cfgexpand.c (expand_gimple_stmt_1): Use ops.code.\n\t* cfgloop.c (verify_loop_structure): Verify the root loop node.\n\t* except.c (duplicate_eh_regions): Call get_eh_region_from_lp_number_fn\n\tinstead of get_eh_region_from_lp_number.\n\t* loop-init.c (fix_loop_structure): If we removed a loop, reset\n\tthe SCEV cache.\n\nFrom-SVN: r222353", "tree": {"sha": "effc3756d6b4a06c5169abcd4a1c65749373e202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/effc3756d6b4a06c5169abcd4a1c65749373e202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "905bcb98e7fc013e4061f060106fed01d335ea16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905bcb98e7fc013e4061f060106fed01d335ea16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/905bcb98e7fc013e4061f060106fed01d335ea16"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "d76faf853e95dfc9ffc9d5d6293eb59f26ad7d7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "patch": "@@ -1,3 +1,12 @@\n+2015-04-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* cfgexpand.c (expand_gimple_stmt_1): Use ops.code.\n+\t* cfgloop.c (verify_loop_structure): Verify the root loop node.\n+\t* except.c (duplicate_eh_regions): Call get_eh_region_from_lp_number_fn\n+\tinstead of get_eh_region_from_lp_number.\n+\t* loop-init.c (fix_loop_structure): If we removed a loop, reset\n+\tthe SCEV cache.\n+\n 2015-04-23  Anton Blanchard  <anton@samba.org>\n \n \t* config/rs6000/rs6000.c (rs6000_output_function_prologue): No"}, {"sha": "5905ddb44f780f912a2f0d87258bec6750277565", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "patch": "@@ -3413,7 +3413,7 @@ expand_gimple_stmt_1 (gimple stmt)\n \n \t    ops.code = gimple_assign_rhs_code (assign_stmt);\n \t    ops.type = TREE_TYPE (lhs);\n-\t    switch (get_gimple_rhs_class (gimple_expr_code (stmt)))\n+\t    switch (get_gimple_rhs_class (ops.code))\n \t      {\n \t\tcase GIMPLE_TERNARY_RHS:\n \t\t  ops.op2 = gimple_assign_rhs3 (assign_stmt);"}, {"sha": "57674946bfe7ba53a83477f7c6776f50845cf509", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "patch": "@@ -1347,6 +1347,16 @@ verify_loop_structure (void)\n   else\n     verify_dominators (CDI_DOMINATORS);\n \n+  /* Check the loop tree root.  */\n+  if (current_loops->tree_root->header != ENTRY_BLOCK_PTR_FOR_FN (cfun)\n+      || current_loops->tree_root->latch != EXIT_BLOCK_PTR_FOR_FN (cfun)\n+      || (current_loops->tree_root->num_nodes\n+\t  != (unsigned) n_basic_blocks_for_fn (cfun)))\n+    {\n+      error (\"corrupt loop tree root\");\n+      err = 1;\n+    }\n+\n   /* Check the headers.  */\n   FOR_EACH_BB_FN (bb, cfun)\n     if (bb_loop_header_p (bb))"}, {"sha": "d6095926a991c8a3d0d9b25bccf8d51d7748d65e", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "patch": "@@ -649,7 +649,7 @@ duplicate_eh_regions (struct function *ifun,\n   data.label_map_data = map_data;\n   data.eh_map = new hash_map<void *, void *>;\n \n-  outer_region = get_eh_region_from_lp_number (outer_lp);\n+  outer_region = get_eh_region_from_lp_number_fn (cfun, outer_lp);\n \n   /* Copy all the regions in the subtree.  */\n   if (copy_region)"}, {"sha": "87e58ea677d7b19d1cba851bfc9d7ad8574505fc", "filename": "gcc/loop-init.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0dd8c90ff1a4a50e21b4b2918c7484f36106947/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=b0dd8c90ff1a4a50e21b4b2918c7484f36106947", "patch": "@@ -49,6 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"loop-unroll.h\"\n+#include \"tree-scalar-evolution.h\"\n \n \f\n /* Apply FLAGS to the loop state.  */\n@@ -221,6 +222,9 @@ fix_loop_structure (bitmap changed_bbs)\n \n   timevar_push (TV_LOOP_INIT);\n \n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    fprintf (dump_file, \"fix_loop_structure: fixing up loops for function\\n\");\n+\n   /* We need exact and fast dominance info to be available.  */\n   gcc_assert (dom_info_state (CDI_DOMINATORS) == DOM_OK);\n \n@@ -290,6 +294,7 @@ fix_loop_structure (bitmap changed_bbs)\n     }\n \n   /* Finally free deleted loops.  */\n+  bool any_deleted = false;\n   FOR_EACH_VEC_ELT (*get_loops (cfun), i, loop)\n     if (loop && loop->header == NULL)\n       {\n@@ -322,8 +327,14 @@ fix_loop_structure (bitmap changed_bbs)\n \t  }\n \t(*get_loops (cfun))[i] = NULL;\n \tflow_loop_free (loop);\n+\tany_deleted = true;\n       }\n \n+  /* If we deleted loops then the cached scalar evolutions refering to\n+     those loops become invalid.  */\n+  if (any_deleted && scev_initialized_p ())\n+    scev_reset_htab ();\n+\n   loops_state_clear (LOOPS_NEED_FIXUP);\n \n   /* Apply flags to loops.  */"}]}