{"sha": "3b69d50e4d2746d462dc656e44a6f8c872daf943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2OWQ1MGU0ZDI3NDZkNDYyZGM2NTZlNDRhNmY4Yzg3MmRhZjk0Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-06T11:47:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-06T11:47:24Z"}, "message": "(push_function_context): Use current_function_varargs.\n\n(pop_function_context): Likewise.\n(assign_parms): Respect current_function_varargs.\nSave args_so_far in any case.\n\nFrom-SVN: r6983", "tree": {"sha": "bf29ceb7e34390c112a3221992dc9d0b7b15bf0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf29ceb7e34390c112a3221992dc9d0b7b15bf0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b69d50e4d2746d462dc656e44a6f8c872daf943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b69d50e4d2746d462dc656e44a6f8c872daf943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b69d50e4d2746d462dc656e44a6f8c872daf943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b69d50e4d2746d462dc656e44a6f8c872daf943/comments", "author": null, "committer": null, "parents": [{"sha": "4200c8de09bfe9615370a27dcbff98b63039a877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4200c8de09bfe9615370a27dcbff98b63039a877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4200c8de09bfe9615370a27dcbff98b63039a877"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "8c9cc5f9eb580fe1b8475da4dc78890f31edfa1a", "filename": "gcc/function.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b69d50e4d2746d462dc656e44a6f8c872daf943/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b69d50e4d2746d462dc656e44a6f8c872daf943/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3b69d50e4d2746d462dc656e44a6f8c872daf943", "patch": "@@ -456,6 +456,7 @@ push_function_context ()\n   p->args_size = current_function_args_size;\n   p->pretend_args_size = current_function_pretend_args_size;\n   p->arg_offset_rtx = current_function_arg_offset_rtx;\n+  p->varargs = current_function_varargs;\n   p->uses_const_pool = current_function_uses_const_pool;\n   p->uses_pic_offset_table = current_function_uses_pic_offset_table;\n   p->internal_arg_pointer = current_function_internal_arg_pointer;\n@@ -522,6 +523,7 @@ pop_function_context ()\n   current_function_args_size = p->args_size;\n   current_function_pretend_args_size = p->pretend_args_size;\n   current_function_arg_offset_rtx = p->arg_offset_rtx;\n+  current_function_varargs = p->varargs;\n   current_function_uses_const_pool = p->uses_const_pool;\n   current_function_uses_pic_offset_table = p->uses_pic_offset_table;\n   current_function_internal_arg_pointer = p->internal_arg_pointer;\n@@ -3062,8 +3064,9 @@ assign_parms (fndecl, second_time)\n   /* Nonzero if the last arg is named `__builtin_va_alist',\n      which is used on some machines for old-fashioned non-ANSI varargs.h;\n      this should be stuck onto the stack as if it had arrived there.  */\n-  int vararg\n-    = (fnargs\n+  int hide_last_arg\n+    = (current_function_varargs\n+       && fnargs\n        && (parm = tree_last (fnargs)) != 0\n        && DECL_NAME (parm)\n        && (! strcmp (IDENTIFIER_POINTER (DECL_NAME (parm)),\n@@ -3139,7 +3142,7 @@ assign_parms (fndecl, second_time)\n \t anonymous args.  We treat it as if it were anonymous too.  */\n       int last_named = ((TREE_CHAIN (parm) == 0\n \t\t\t || DECL_NAME (TREE_CHAIN (parm)) == 0)\n-\t\t\t&& (vararg || stdarg));\n+\t\t\t&& (stdarg || current_function_varargs));\n \n       if (TREE_TYPE (parm) == error_mark_node\n \t  /* This can happen after weird syntax errors\n@@ -3155,7 +3158,7 @@ assign_parms (fndecl, second_time)\n \n       /* For varargs.h function, save info about regs and stack space\n \t used by the individual args, not including the va_alist arg.  */\n-      if (vararg && last_named)\n+      if (hide_last_arg && last_named)\n \tcurrent_function_args_info = args_so_far;\n \n       /* Find mode of arg as it is passed, and mode of arg\n@@ -3784,10 +3787,10 @@ assign_parms (fndecl, second_time)\n   current_function_pops_args = RETURN_POPS_ARGS (TREE_TYPE (fndecl),\n \t\t\t\t\t\t current_function_args_size);\n \n-  /* For stdarg.h function, save info about regs and stack space\n-     used by the named args.  */\n+  /* For stdarg.h function, save info about\n+     regs and stack space used by the named args.  */\n \n-  if (stdarg)\n+  if (!hide_last_arg)\n     current_function_args_info = args_so_far;\n \n   /* Set the rtx used for the function return value.  Put this in its"}]}