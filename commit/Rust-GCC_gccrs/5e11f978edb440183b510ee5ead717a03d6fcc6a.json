{"sha": "5e11f978edb440183b510ee5ead717a03d6fcc6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUxMWY5NzhlZGI0NDAxODNiNTEwZWU1ZWFkNzE3YTAzZDZmY2M2YQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-09-12T23:06:27Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-09-12T23:06:27Z"}, "message": "*: Change namespace pb_ds to __gnu_pbds.\n\n2007-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/pb_ds/*: Change namespace pb_ds to __gnu_pbds.\n\t* docs/html/ext/pb_ds/*: Same.\n\t* testsuite/ext/pb_ds/*: Same.\n\t* testsuite/performance/ext/pb_ds/*: Same.\n\t* testsuite/util/*: Same.\n\nFrom-SVN: r128448", "tree": {"sha": "75559fc602e22bd583e99b2b7f544633716530f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75559fc602e22bd583e99b2b7f544633716530f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e11f978edb440183b510ee5ead717a03d6fcc6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e11f978edb440183b510ee5ead717a03d6fcc6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e11f978edb440183b510ee5ead717a03d6fcc6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e11f978edb440183b510ee5ead717a03d6fcc6a/comments", "author": null, "committer": null, "parents": [{"sha": "c93646bd3ca88aa2cc99cc5a2090dc6ea4b39688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93646bd3ca88aa2cc99cc5a2090dc6ea4b39688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c93646bd3ca88aa2cc99cc5a2090dc6ea4b39688"}], "stats": {"total": 1691, "additions": 837, "deletions": 854}, "files": [{"sha": "364648561c7fa1078a56c06b62dd05041c22db57", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -1,3 +1,11 @@\n+2007-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/pb_ds/*: Change namespace pb_ds to __gnu_pbds.\n+\t* docs/html/ext/pb_ds/*: Same.\n+\t* testsuite/ext/pb_ds/*: Same.\n+\t* testsuite/performance/ext/pb_ds/*: Same.\n+\t* testsuite/util/*: Same.\n+\t\n 2007-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/parallel/find.h: Doxygen fixups."}, {"sha": "ec99c4d5f7ef1c8b948651c65c58feef4513e76c", "filename": "libstdc++-v3/docs/html/ext/pb_ds/ds_gen.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fds_gen.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fds_gen.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fds_gen.html?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -167,7 +167,7 @@ <h6 class=\"c1\">Data-structure tag class hierarchy.</h6>\n     <p>Additionally, a traits mechanism can be used to query a\n     container type for its attributes. Given any container\n     <tt>Cntnr</tt>, then <tt><a href=\n-    \"assoc_container_traits.html\">pb_ds::container_traits</a>&lt;Cntnr&gt;</tt>\n+    \"assoc_container_traits.html\">__gnu_pbds::container_traits</a>&lt;Cntnr&gt;</tt>\n     is a traits class identifying the properties of the\n     container.</p>\n "}, {"sha": "95956004527771b4f53f415bcefa50867b742a73", "filename": "libstdc++-v3/docs/html/ext/pb_ds/pq_design.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fpq_design.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fpq_design.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fpq_design.html?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -67,13 +67,13 @@ <h2><a name=\"overview\" id=\"overview\">Overview</a></h2>\n     <p>As mentioned in <a href=\n     \"tutorial.html#pq\">Tutorial::Priority Queues</a>, \n     <a href=\n-    \"priority_queue.html\"><tt>pb_ds::priority_queue</tt></a>\n+    \"priority_queue.html\"><tt>__gnu_pbds::priority_queue</tt></a>\n     shares most of the same interface with <tt>std::priority_queue</tt>.\n     <i>E.g.</i> if <tt>q</tt> is a priority queue of type\n     <tt>Q</tt>, then <tt>q.top()</tt> will return the \"largest\"\n     value in the container (according to <tt><b>typename</b>\n     Q::cmp_fn</tt>). <a href=\n-    \"priority_queue.html\"><tt>pb_ds::priority_queue</tt></a>\n+    \"priority_queue.html\"><tt>__gnu_pbds::priority_queue</tt></a>\n     has a larger (and very slightly different) interface than\n     <tt>std::priority_queue</tt>, however, since typically\n     <tt>push</tt> and <tt>pop</tt> are deemed insufficient for\n@@ -309,7 +309,7 @@ <h2><a name=\"pq_traits\" id=\"pq_traits\">Traits</a></h2>\n \n     <p>Tags and traits are very useful for manipulating generic\n     types. <a href=\n-    \"priority_queue.html\"><tt>pb_ds::priority_queue</tt></a>\n+    \"priority_queue.html\"><tt>__gnu_pbds::priority_queue</tt></a>\n     publicly defines <tt>container_category</tt> as one of the tags\n     discussed in <a href=\"#pq_imp\">Implementations</a>. Given any\n     container <tt>Cntnr</tt>, the tag of the underlying\n@@ -327,7 +327,7 @@ <h6 class=\"c1\">Data-structure tag class hierarchy.</h6>\n     <p>Additionally, a traits mechanism can be used to query a\n     container type for its attributes. Given any container\n     <tt>Cntnr</tt>, then <tt><a href=\n-    \"assoc_container_traits.html\">pb_ds::container_traits</a>&lt;Cntnr&gt;</tt>\n+    \"assoc_container_traits.html\">__gnu_pbds::container_traits</a>&lt;Cntnr&gt;</tt>\n     is a traits class identifying the properties of the\n     container.</p>\n "}, {"sha": "10fa2af1c9d5864d893663716f8b130075504ca2", "filename": "libstdc++-v3/docs/html/ext/pb_ds/string_trie_e_access_traits.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fstring_trie_e_access_traits.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fstring_trie_e_access_traits.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Fstring_trie_e_access_traits.html?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -241,7 +241,7 @@ <h3><a name=\"link5\" id=\"link5\">Element-Type\n \n         <td>\n           <pre>\n-<b>typename</b> pb_ds::detail::__conditional_type&lt;\n+<b>typename</b> __gnu_pbds::detail::__conditional_type&lt;\n     <a href=\"#Reverse1686776\"><tt>Reverse</tt></a>,\n     <b>typename</b> <a href=\n \"#String349403\"><tt>String</tt></a>::const_reverse_iterator,"}, {"sha": "da6efa2f18f8d65022594d73e0b6ad34592f61bd", "filename": "libstdc++-v3/docs/html/ext/pb_ds/trie_prefix_search_node_update.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Ftrie_prefix_search_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Ftrie_prefix_search_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fpb_ds%2Ftrie_prefix_search_node_update.html?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -269,7 +269,7 @@ <h3><a name=\"link6\" id=\"link6\">Metadata-Type\n \n         <td>\n           <pre>\n-pb_ds::detail::null_node_metadata\n+__gnu_pbds::detail::null_node_metadata\n </pre>\n         </td>\n "}, {"sha": "e2ac37c11cc21201540eab6c710de9ea7cc6aa3b", "filename": "libstdc++-v3/include/ext/pb_ds/assoc_container.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fassoc_container.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fassoc_container.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fassoc_container.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <ext/pb_ds/detail/container_base_dispatch.hpp>\n #include <ext/pb_ds/detail/basic_tree_policy/traits.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n #define PB_DS_BASE_C_DEC \\\n   detail::container_base_dispatch<Key, Mapped, Tag, Policy_Tl, Allocator>::type\n@@ -495,7 +495,7 @@ namespace pb_ds\n   template<typename Key, typename Mapped, typename Cmp_Fn = std::less<Key>,\n \t   typename Tag = rb_tree_tag,\n \t   template<typename Const_Node_Iterator, typename Node_Iterator, typename Cmp_Fn_, typename Allocator_>\n-  class Node_Update = pb_ds::null_tree_node_update,\n+  class Node_Update = __gnu_pbds::null_tree_node_update,\n \t   typename Allocator = std::allocator<char> >\n   class tree : public PB_DS_BASE_C_DEC\n   {\n@@ -684,6 +684,6 @@ namespace pb_ds\n \n #undef PB_DS_BASE_C_DEC\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "7c136057cbae857a649db4c0ec8fe09c3dee6bd3", "filename": "libstdc++-v3/include/ext/pb_ds/detail/basic_tree_policy/basic_tree_policy_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Fbasic_tree_policy_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Fbasic_tree_policy_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Fbasic_tree_policy_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_TREE_LIKE_POLICY_BASE_HPP\n #define PB_DS_TREE_LIKE_POLICY_BASE_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -174,6 +174,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TREE_LIKE_POLICY_BASE_HPP"}, {"sha": "88d1ba699f83c750920e9e189b9baf11e164faf9", "filename": "libstdc++-v3/include/ext/pb_ds/detail/basic_tree_policy/null_node_metadata.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Fnull_node_metadata.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Fnull_node_metadata.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Fnull_node_metadata.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/types_traits.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -68,6 +68,6 @@ namespace pb_ds\n     struct null_node_metadata\n     { };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "3a0b57d84040b32a0e0551f1df1210cbe77ef409", "filename": "libstdc++-v3/include/ext/pb_ds/detail/basic_tree_policy/traits.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Ftraits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp>\n #include <ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {    \n@@ -81,7 +81,7 @@ namespace pb_ds\n     struct trie_traits;\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #include <ext/pb_ds/detail/rb_tree_map_/traits.hpp>\n #include <ext/pb_ds/detail/splay_tree_/traits.hpp>"}, {"sha": "01d43e50f8b9b1608bc724cf5af01c4344a4eb58", "filename": "libstdc++-v3/include/ext/pb_ds/detail/basic_types.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_types.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_types.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_types.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n #include <ext/pb_ds/detail/type_utils.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -211,7 +211,7 @@ namespace pb_ds\n       typedef integral_constant<int, is_simple<Key>::value> indicator;\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "6e46cedbbe92557f6912dd43efa81c81e23d362f", "filename": "libstdc++-v3/include/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fbin_search_tree_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fbin_search_tree_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fbin_search_tree_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@\n #include <functional>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -500,4 +500,4 @@ namespace pb_ds\n #undef PB_DS_V2S\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "1df092378d1bdd4f5b37a2cc8dc755bca45542da", "filename": "libstdc++-v3/include/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fnode_iterators.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fnode_iterators.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fnode_iterators.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/tag_and_trait.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -237,7 +237,7 @@ namespace pb_ds\n #undef PB_DS_TREE_NODE_ITERATOR_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_BIN_SEARCH_TREE_NODE_ITERATORS_HPP\n "}, {"sha": "a6e79b33a9efdac3b6b6de3e64ebf165fa2aad6b", "filename": "libstdc++-v3/include/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fpoint_iterators.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fpoint_iterators.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fpoint_iterators.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -382,6 +382,6 @@ namespace pb_ds\n #undef PB_DS_TREE_ODIR_IT_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "dc7c232563b4ccf11b80292458c143c150dcb13e", "filename": "libstdc++-v3/include/ext/pb_ds/detail/bin_search_tree_/traits.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Ftraits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp>\n #include <ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -156,7 +156,7 @@ namespace pb_ds\n       node_update;\n \n       typedef\n-      pb_ds::null_tree_node_update<\n+      __gnu_pbds::null_tree_node_update<\n \tconst_node_iterator,\n \tnode_iterator,\n \tCmp_Fn,\n@@ -242,7 +242,7 @@ namespace pb_ds\n       node_update;\n \n       typedef\n-      pb_ds::null_tree_node_update<\n+      __gnu_pbds::null_tree_node_update<\n \tconst_node_iterator,\n \tnode_iterator,\n \tCmp_Fn,\n@@ -251,6 +251,6 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_BIN_SEARCH_TREE_NODE_AND_IT_TRAITS_HPP"}, {"sha": "cf10195d28c5faa9b68d7819d0e465bffee0d411", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -67,7 +67,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -81,7 +81,7 @@ namespace pb_ds\n     entry_cmp<Value_Type, Cmp_Fn, is_simple<Value_Type>::value, Allocator>::type\n \n #define PB_DS_RESIZE_POLICY_DEC\t\\\n-    pb_ds::detail::resize_policy<typename Allocator::size_type>\n+    __gnu_pbds::detail::resize_policy<typename Allocator::size_type>\n \n     /**\n      * class description = \"Base class for some types of h3ap$\">\n@@ -358,6 +358,6 @@ namespace pb_ds\n #undef PB_DS_RESIZE_POLICY_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "79f36c009dfa44628e10f8e0c49ad3aba022bb06", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/const_iterator.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fconst_iterator.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fconst_iterator.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fconst_iterator.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/binary_heap_/const_point_iterator.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -153,6 +153,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_BASE_C_DEC\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "b2b6760a50a9da52fd9c700dd0eb6e1a956f01d9", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/const_point_iterator.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fconst_point_iterator.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fconst_point_iterator.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fconst_point_iterator.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -145,6 +145,6 @@ namespace pb_ds\n       entry_pointer m_p_e;\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "afde1cd46011ffc7280bb27a92fbf4e58c06493d", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fentry_cmp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fentry_cmp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fentry_cmp.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_BINARY_HEAP_ENTRY_CMP_HPP\n #define PB_DS_BINARY_HEAP_ENTRY_CMP_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -94,6 +94,6 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_BINARY_HEAP_ENTRY_CMP_HPP"}, {"sha": "408e8559ec9e605e28041ab57627478ae9d7de1b", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/entry_pred.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fentry_pred.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fentry_pred.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fentry_pred.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_BINARY_HEAP_ENTRY_PRED_HPP\n #define PB_DS_BINARY_HEAP_ENTRY_PRED_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -94,6 +94,6 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_BINARY_HEAP_ENTRY_PRED_HPP"}, {"sha": "17aeb64f1f145abd53e06e4598a4b2cd3f18fe29", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/resize_policy.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fresize_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fresize_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fresize_policy.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -254,6 +254,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "8f1826ef16436dee3b1f43ed240dbecef2eb7a23", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_%2Fbinomial_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_%2Fbinomial_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_%2Fbinomial_heap_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -119,4 +119,4 @@ namespace pb_ds\n \n #undef PB_DS_BASE_C_DEC\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "acd1c3cf4dccb2c2048090436ac78484d447ced6", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fbinomial_heap_base_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fbinomial_heap_base_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fbinomial_heap_base_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,7 +59,7 @@\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp>\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/null_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -235,6 +235,6 @@ namespace pb_ds\n \n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "3a772fa1df8de0392be0ef1bb56f5d7a18938286", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@\n #endif \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -609,7 +609,7 @@ namespace pb_ds\n       enum\n \t{\n \t  store_hash_ok = !Store_Hash \n-\t                  || !is_same<Hash_Fn, pb_ds::null_hash_fn>::value\n+\t                  || !is_same<Hash_Fn, __gnu_pbds::null_hash_fn>::value\n \t};\n \n       PB_DS_STATIC_ASSERT(sth, store_hash_ok);\n@@ -638,5 +638,5 @@ namespace pb_ds\n #undef PB_DS_V2S\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n "}, {"sha": "a4bcc4b81fddc49c09994dc48d14b5f57a94811f", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcond_key_dtor_entry_dealtor.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcond_key_dtor_entry_dealtor.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcond_key_dtor_entry_dealtor.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -44,7 +44,7 @@\n  * Contains a conditional key destructor, used for exception handling.\n  */\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -119,5 +119,5 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n "}, {"sha": "eba0f39307c06bf4223a85dae9ab5257d34bcc4a", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cond_dealtor.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcond_dealtor.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcond_dealtor.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcond_dealtor.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_COND_DEALTOR_HPP\n #define PB_DS_COND_DEALTOR_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace detail\n@@ -125,7 +125,7 @@ namespace pb_ds\n \n   } // namespace detail\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_COND_DEALTOR_HPP\n "}, {"sha": "cbc514333184166c9ac50ff3c774876d9859f447", "filename": "libstdc++-v3/include/ext/pb_ds/detail/container_base_dispatch.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcontainer_base_dispatch.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcontainer_base_dispatch.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcontainer_base_dispatch.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -105,7 +105,7 @@\n #include <ext/pb_ds/detail/pat_trie_/pat_trie_.hpp>\n #undef PB_DS_DATA_FALSE_INDICATOR\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace detail\n {\n@@ -333,6 +333,6 @@ namespace detail\n \t\t\t\t at3t::value, at4t, at5t, at2t>\ttype;\n   };\n } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "086a50fc5fd412139e10f2c779a1a6b2894fa5b7", "filename": "libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fdebug_map_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fdebug_map_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fdebug_map_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <ext/throw_allocator.h>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -357,7 +357,7 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "467b01e1ecac262b633b56786aa906dcbf054360", "filename": "libstdc++-v3/include/ext/pb_ds/detail/eq_fn/eq_by_less.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Feq_fn%2Feq_by_less.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Feq_fn%2Feq_by_less.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Feq_fn%2Feq_by_less.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <assert.h>\n #include <ext/pb_ds/detail/types_traits.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -69,6 +69,6 @@ namespace pb_ds\n       }\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_EQ_BY_LESS_HPP"}, {"sha": "706ee5ea24b23cbca872c6f4416f3ed330ac2efc", "filename": "libstdc++-v3/include/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Feq_fn%2Fhash_eq_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Feq_fn%2Fhash_eq_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Feq_fn%2Fhash_eq_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <utility>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -180,6 +180,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "8da31e70e8aabfcb1fef87481da654488b7c0906", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -58,7 +58,7 @@\n #endif\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -651,7 +651,7 @@ namespace pb_ds\n       enum\n \t{\n \t  store_hash_ok = !Store_Hash \n-\t                  || !is_same<Hash_Fn, pb_ds::null_hash_fn>::value\n+\t                  || !is_same<Hash_Fn, __gnu_pbds::null_hash_fn>::value\n \t};\n \n       PB_DS_STATIC_ASSERT(sth, store_hash_ok);\n@@ -679,5 +679,5 @@ namespace pb_ds\n #undef PB_DS_V2S\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n "}, {"sha": "cc67e92a062ef8aba4a2b64c21daad478025fa66", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/standard_policies.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fstandard_policies.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fstandard_policies.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fstandard_policies.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <ext/pb_ds/linear_probe_fn.hpp>\n #include <ext/pb_ds/quadratic_probe_fn.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -66,15 +66,15 @@ namespace pb_ds\n       typedef\n       typename __conditional_type<\n       is_same<\n-      pb_ds::direct_mask_range_hashing<size_t>,\n+      __gnu_pbds::direct_mask_range_hashing<size_t>,\n       Comb_Probe_Fn>::value,\n-      pb_ds::linear_probe_fn<size_type>,\n-      pb_ds::quadratic_probe_fn<size_type> >::__type\n+      __gnu_pbds::linear_probe_fn<size_type>,\n+      __gnu_pbds::quadratic_probe_fn<size_type> >::__type\n       type;\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "60d5c39991bdc1d028121c7bcb0cf3ac0fa1f5b6", "filename": "libstdc++-v3/include/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fmask_based_range_hashing.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fmask_based_range_hashing.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fmask_based_range_hashing.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_MASK_BASED_RANGE_HASHING_HPP\n #define PB_DS_MASK_BASED_RANGE_HASHING_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -108,6 +108,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "ea04f5f6dcc1c6e1eff2d74eac4c1a6aa934358c", "filename": "libstdc++-v3/include/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fmod_based_range_hashing.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fmod_based_range_hashing.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fmod_based_range_hashing.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_MOD_BASED_RANGE_HASHING_HPP\n #define PB_DS_MOD_BASED_RANGE_HASHING_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace detail\n@@ -109,6 +109,6 @@ namespace pb_ds\n \n   } // namespace detail\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_MOD_BASED_RANGE_HASHING_HPP"}, {"sha": "4deb23b16ff9a9ad9f339c62f917091d603ac825", "filename": "libstdc++-v3/include/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fprobe_fn_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fprobe_fn_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Fprobe_fn_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <functional>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -60,6 +60,6 @@ namespace pb_ds\n       ~probe_fn_base() { }\n     };\n } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "b54f92d89ef5d30379f25d941e1adb5c84bf3cf3", "filename": "libstdc++-v3/include/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Franged_hash_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Franged_hash_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Franged_hash_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <utility>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -360,6 +360,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "c094026a7d5271b13220126a5c4e0cfeedd260f2", "filename": "libstdc++-v3/include/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Franged_probe_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Franged_probe_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fhash_fn%2Franged_probe_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <utility>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -327,7 +327,7 @@ namespace pb_ds\n       { comb_probe_fn_base::swap(other); }\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "1d0a685143e0b35f829697f15a462c665928b2c0", "filename": "libstdc++-v3/include/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fconst_iterator.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fconst_iterator.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fconst_iterator.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/const_point_iterator.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -163,6 +163,6 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "c6ca2f0c72bea7be72878a1767bf9b579568c4b8", "filename": "libstdc++-v3/include/ext/pb_ds/detail/left_child_next_sibling_heap_/const_point_iterator.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fconst_point_iterator.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fconst_point_iterator.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fconst_point_iterator.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -155,6 +155,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "196ae3010ca264a8aa7a005d1d91b621fad0a767", "filename": "libstdc++-v3/include/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fleft_child_next_sibling_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fleft_child_next_sibling_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fleft_child_next_sibling_heap_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -62,7 +62,7 @@\n #endif \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -350,6 +350,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_T_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "2239683d67c53cca577a62cb9a0ed36f14ad8cbe", "filename": "libstdc++-v3/include/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fnode.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fnode.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fnode.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/null_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -124,6 +124,6 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_NODE_HPP"}, {"sha": "290745e533d12fc50732dd9543ae9d8730322dc2", "filename": "libstdc++-v3/include/ext/pb_ds/detail/left_child_next_sibling_heap_/null_metadata.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fnull_metadata.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fnull_metadata.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fnull_metadata.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/null_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -58,6 +58,6 @@ namespace pb_ds\n     { };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_NULL_METADATA_HPP"}, {"sha": "e2085a91b415e8184a802020d20c300abcc1c914", "filename": "libstdc++-v3/include/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Fentry_metadata_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Fentry_metadata_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Fentry_metadata_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_LU_MAP_ENTRY_METADATA_BASE_HPP\n #define PB_DS_LU_MAP_ENTRY_METADATA_BASE_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -61,6 +61,6 @@ namespace pb_ds\n     struct lu_map_entry_metadata_base<null_lu_metadata>\n     { };  \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "267beccceaf1575dcff1cc3993a2052232abbca4", "filename": "libstdc++-v3/include/ext/pb_ds/detail/list_update_map_/lu_map_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,7 +59,7 @@\n #endif \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -362,4 +362,4 @@ namespace pb_ds\n #undef PB_DS_V2S\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "bbb539c0b50b4e484030f01797e108707e1f4216", "filename": "libstdc++-v3/include/ext/pb_ds/detail/list_update_policy/counter_lu_metadata.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_policy%2Fcounter_lu_metadata.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_policy%2Fcounter_lu_metadata.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_policy%2Fcounter_lu_metadata.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -44,7 +44,7 @@\n  * Contains implementation of a lu counter policy's metadata.\n  */\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -89,4 +89,4 @@ namespace pb_ds\n       }\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "5b9f9a873aa1de54bfa01d7bde8258d4dcea811e", "filename": "libstdc++-v3/include/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fnode_iterators.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fnode_iterators.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fnode_iterators.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -293,6 +293,6 @@ namespace pb_ds\n #undef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC\n \n } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "421a6bea6176270684b4464ce4d24bfdfb4bd8a4", "filename": "libstdc++-v3/include/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fov_tree_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fov_tree_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fov_tree_map_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@\n #include <assert.h>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -525,4 +525,4 @@ namespace pb_ds\n #undef PB_DS_CONST_NODE_ITERATOR_NAME\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "92ff70d7c61e49cd902aa833a46b4c2567a20f79", "filename": "libstdc++-v3/include/ext/pb_ds/detail/ov_tree_map_/traits.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Ftraits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -113,7 +113,7 @@ namespace pb_ds\n       node_update;\n \n       typedef\n-      pb_ds::null_tree_node_update<\n+      __gnu_pbds::null_tree_node_update<\n \tconst_node_iterator,\n \tnode_iterator,\n \tCmp_Fn,\n@@ -174,7 +174,7 @@ namespace pb_ds\n       node_update;\n \n       typedef\n-      pb_ds::null_tree_node_update<\n+      __gnu_pbds::null_tree_node_update<\n \tconst_node_iterator,\n \tnode_iterator,\n \tCmp_Fn,\n@@ -183,7 +183,7 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_OV_TREE_NODE_AND_IT_TRAITS_HPP\n "}, {"sha": "6d3790653a4288b65994b228fe515e36ed3d3785", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpairing_heap_%2Fpairing_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpairing_heap_%2Fpairing_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpairing_heap_%2Fpairing_heap_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,7 +57,7 @@\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/null_metadata.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -219,4 +219,4 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "13c1b5ddf6e20bf4635613565bc2c1735b8e443e", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/head.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fhead.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fhead.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fhead.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <ext/pb_ds/detail/pat_trie_/node_base.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -124,7 +124,7 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "67a612dd58a0c32c004c53b2e133986db8ed26ee", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/internal_node.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -600,6 +600,6 @@ namespace pb_ds\n #undef PB_DS_LEAF_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "310d78950a43969e1f14e8e3f489aea24244ef9a", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/leaf.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fleaf.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fleaf.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fleaf.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -172,6 +172,6 @@ namespace pb_ds\n #undef PB_DS_PAT_TRIE_SUBTREE_DEBUG_INFO_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "4c71d01539673bae1ae192959ef5b383f693ef4c", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/node_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/pat_trie_/node_metadata_base.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -129,6 +129,6 @@ namespace pb_ds\n #undef PB_DS_PAT_TRIE_SUBTREE_DEBUG_INFO_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "b5b273aaffd247f12fb08ac8babd9ffe32123ceb", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/node_iterators.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_iterators.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_iterators.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_iterators.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -338,7 +338,7 @@ namespace pb_ds\n #undef PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "427ae03dd1e7e90a0f68bc91cba8896d52e548db", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/node_metadata_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_metadata_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_metadata_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fnode_metadata_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/basic_tree_policy/null_node_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -86,7 +86,7 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_PAT_TRIE_NODE_BASE_HPP\n "}, {"sha": "00a00d34bcec3c0f67bd097705154b44fa888ba8", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -71,7 +71,7 @@\n #endif \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -518,4 +518,4 @@ namespace pb_ds\n #undef PB_DS_V2S\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "8554f260dc6245a857ef2ba9a726fff76c604299", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/point_iterators.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpoint_iterators.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpoint_iterators.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpoint_iterators.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -484,7 +484,7 @@ namespace pb_ds\n #undef PB_DS_ODIR_IT_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "f979e32f57247cb1563c6856a706918cf8548bee", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Frotate_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Frotate_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Frotate_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -119,7 +119,7 @@ rotate_parent(node_pointer p_nd)\n PB_DS_CLASS_T_DEC\n inline void\n PB_DS_CLASS_C_DEC::\n-apply_update(node_pointer /*p_nd*/, pb_ds::null_node_update*  /*p_update*/)\n+apply_update(node_pointer /*p_nd*/, __gnu_pbds::null_node_update*  /*p_update*/)\n { }\n \n PB_DS_CLASS_T_DEC\n@@ -151,6 +151,6 @@ update_to_top(node_pointer p_nd, Node_Update_* p_update)\n PB_DS_CLASS_T_DEC\n inline void\n PB_DS_CLASS_C_DEC::\n-update_to_top(node_pointer /*p_nd*/, pb_ds::null_node_update*  /*p_update*/)\n+update_to_top(node_pointer /*p_nd*/, __gnu_pbds::null_node_update*  /*p_update*/)\n { }\n "}, {"sha": "46e8ffa95523cb4298aef981a625b4ae428afb42", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/synth_e_access_traits.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fsynth_e_access_traits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fsynth_e_access_traits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fsynth_e_access_traits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/type_utils.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -230,6 +230,6 @@ namespace pb_ds\n #undef PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "c29f814fe55fee654d9846961fe75e853e76222c", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/traits.hpp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Ftraits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <ext/pb_ds/detail/pat_trie_/node_iterators.hpp>\n #include <ext/pb_ds/detail/pat_trie_/synth_e_access_traits.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -93,7 +93,7 @@ namespace pb_ds\n       typedef E_Access_Traits e_access_traits;\n \n       typedef\n-      pb_ds::detail::synth_e_access_traits<\n+      __gnu_pbds::detail::synth_e_access_traits<\n \ttype_traits,\n \tfalse,\n \te_access_traits>\n@@ -208,7 +208,7 @@ namespace pb_ds\n       node_update;\n \n       typedef\n-      pb_ds::null_trie_node_update<\n+      __gnu_pbds::null_trie_node_update<\n \tconst_node_iterator,\n \tnode_iterator,\n \tE_Access_Traits,\n@@ -254,7 +254,7 @@ namespace pb_ds\n       typedef E_Access_Traits e_access_traits;\n \n       typedef\n-      pb_ds::detail::synth_e_access_traits<\n+      __gnu_pbds::detail::synth_e_access_traits<\n \ttype_traits,\n \ttrue,\n \te_access_traits>\n@@ -341,7 +341,7 @@ namespace pb_ds\n       node_update;\n \n       typedef\n-      pb_ds::null_trie_node_update<\n+      __gnu_pbds::null_trie_node_update<\n \tconst_node_iterator,\n \tconst_node_iterator,\n \tE_Access_Traits,\n@@ -350,7 +350,7 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_PAT_TRIE_NODE_AND_IT_TRAITS_HPP\n "}, {"sha": "576e86570911e05ccea687ead7d2e10078aac5d9", "filename": "libstdc++-v3/include/ext/pb_ds/detail/priority_queue_base_dispatch.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpriority_queue_base_dispatch.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpriority_queue_base_dispatch.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpriority_queue_base_dispatch.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <ext/pb_ds/detail/binary_heap_/binary_heap_.hpp>\n #include <ext/pb_ds/detail/thin_heap_/thin_heap_.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n     namespace detail\n     {\n@@ -92,6 +92,6 @@ namespace pb_ds\n       };\n \n     } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_PRIORITY_QUEUE_BASE_DS_DISPATCHER_HPP"}, {"sha": "9797516a50447bc55944f5919d476a15b1f42162", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rb_tree_map_/node.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Fnode.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Fnode.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Fnode.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/basic_tree_policy/null_node_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -139,6 +139,6 @@ namespace pb_ds\n       bool m_red;\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "b5d50a92ae8ba021f875cf96490343d75bc57550", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Frb_tree_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Frb_tree_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Frb_tree_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -69,7 +69,7 @@\n #include <assert.h>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -282,5 +282,5 @@ namespace pb_ds\n #undef PB_DS_V2S\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n "}, {"sha": "2f91669d752a7d32de60f5f1573d2f3467c29813", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rb_tree_map_/traits.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Ftraits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/rb_tree_map_/node.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -125,6 +125,6 @@ namespace pb_ds\n     { };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "fc90ea7dea240836663e13643edb1ce2280655b1", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_RC_HPP\n #define PB_DS_RC_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -263,6 +263,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "5b4a3b4122fc001f22c81fed15e2bcdfd302507c", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc_binomial_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc_binomial_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc_binomial_heap_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <ext/pb_ds/detail/rc_binomial_heap_/rc.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -201,4 +201,4 @@ namespace pb_ds\n \n #undef PB_DS_RC_C_DEC\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "f69690bb21dfa760b9293c40993e9953dd95c1fb", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_size_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_size_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_size_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_HASH_LOAD_CHECK_RESIZE_TRIGGER_SIZE_BASE_HPP\n #define PB_DS_HASH_LOAD_CHECK_RESIZE_TRIGGER_SIZE_BASE_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -95,6 +95,6 @@ namespace pb_ds\n       set_size(size_type size) { }\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "19e54a7ab5bb5f9fc35a0e516b509440fa651150", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fsample_resize_trigger.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fsample_resize_trigger.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fsample_resize_trigger.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -140,6 +140,6 @@ class sample_resize_trigger\n   do_resize(size_type new_size);\n };\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "29519d598aa8c9c7edd6c4e32d8af8ab96969d41", "filename": "libstdc++-v3/include/ext/pb_ds/detail/splay_tree_/node.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fnode.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fnode.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fnode.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #ifndef PB_DS_SPLAY_TREE_NODE_HPP\n #define PB_DS_SPLAY_TREE_NODE_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -126,6 +126,6 @@ namespace pb_ds\n       bool m_special;\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "1642abb068f898e6d1dad345b351d3da77d10630", "filename": "libstdc++-v3/include/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fsplay_tree_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fsplay_tree_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fsplay_tree_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -93,7 +93,7 @@\n #include <assert.h>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -300,5 +300,5 @@ namespace pb_ds\n #undef PB_DS_EP2VP\n #undef PB_DS_V2S\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n "}, {"sha": "0755963a36cd3c13365cf233c4d81997dcb7655e", "filename": "libstdc++-v3/include/ext/pb_ds/detail/splay_tree_/traits.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Ftraits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/splay_tree_/node.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -114,6 +114,6 @@ namespace pb_ds\n     { };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_SPLAY_TREE_NODE_AND_IT_TRAITS_HPP"}, {"sha": "bbd91c38d234ccadde71fa486ad831e0ea3e5d2d", "filename": "libstdc++-v3/include/ext/pb_ds/detail/standard_policies.hpp", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fstandard_policies.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fstandard_policies.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fstandard_policies.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -56,7 +56,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n #include <ext/hash_map>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -79,7 +79,7 @@ namespace pb_ds\n \n     struct default_comb_hash_fn\n     {\n-      typedef pb_ds::direct_mask_range_hashing<> type;\n+      typedef __gnu_pbds::direct_mask_range_hashing<> type;\n     };\n \n     template<typename Comb_Hash_Fn>\n@@ -91,19 +91,19 @@ namespace pb_ds\n       typedef\n       typename __conditional_type<\n \tis_same<\n-\tpb_ds::direct_mask_range_hashing<\n+\t__gnu_pbds::direct_mask_range_hashing<\n \tsize_type>,\n \tComb_Hash_Fn>::value,\n-\tpb_ds::hash_exponential_size_policy<\n+\t__gnu_pbds::hash_exponential_size_policy<\n \tsize_type>,\n-\tpb_ds::hash_prime_size_policy>::__type\n+\t__gnu_pbds::hash_prime_size_policy>::__type\n       size_policy_type;\n \n     public:\n       typedef\n-      pb_ds::hash_standard_resize_policy<\n+      __gnu_pbds::hash_standard_resize_policy<\n       size_policy_type,\n-      pb_ds::hash_load_check_resize_trigger<\n+      __gnu_pbds::hash_load_check_resize_trigger<\n       false,\n       size_type>,\n       false,\n@@ -113,7 +113,7 @@ namespace pb_ds\n \n     struct default_update_policy\n     {\n-      typedef pb_ds::move_to_front_lu_policy<> type;\n+      typedef __gnu_pbds::move_to_front_lu_policy<> type;\n     };\n \n     template<typename Comb_Probe_Fn>\n@@ -126,11 +126,11 @@ namespace pb_ds\n       typedef\n       typename __conditional_type<\n       is_same<\n-      pb_ds::direct_mask_range_hashing<size_t>,\n+      __gnu_pbds::direct_mask_range_hashing<size_t>,\n       Comb_Probe_Fn>::value,\n-      pb_ds::linear_probe_fn<\n+      __gnu_pbds::linear_probe_fn<\n       size_type>,\n-      pb_ds::quadratic_probe_fn<\n+      __gnu_pbds::quadratic_probe_fn<\n       size_type> >::__type\n       type;\n     };\n@@ -147,7 +147,7 @@ namespace pb_ds\n       char> > >\n     {\n       typedef\n-      pb_ds::string_trie_e_access_traits<\n+      __gnu_pbds::string_trie_e_access_traits<\n \tstd::basic_string<\n \tChar,\n \tChar_Traits,\n@@ -157,7 +157,7 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_STANDARD_POLICIES_HPP\n "}, {"sha": "ee874e823be9975ac6e6b1af36b90e7074ccfee4", "filename": "libstdc++-v3/include/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Fthin_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Fthin_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Fthin_heap_.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,7 +59,7 @@\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/null_metadata.hpp>\n #include <debug/debug.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -352,6 +352,6 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "cbb57144e06d61451059784fec9ad6a578a2fdfd", "filename": "libstdc++-v3/include/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftree_policy%2Fnode_metadata_selector.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftree_policy%2Fnode_metadata_selector.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftree_policy%2Fnode_metadata_selector.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <ext/pb_ds/detail/basic_tree_policy/null_node_metadata.hpp>\n #include <ext/pb_ds/detail/types_traits.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -117,6 +117,6 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TREE_NODE_METADATA_SELECTOR_HPP"}, {"sha": "049a9c57527d816e5d33851076fe3e55f5722349", "filename": "libstdc++-v3/include/ext/pb_ds/detail/tree_trace_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftree_trace_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftree_trace_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftree_trace_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <ext/pb_ds/detail/basic_tree_policy/basic_tree_policy_base.hpp>\n #include <ext/pb_ds/detail/basic_tree_policy/null_node_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace detail\n@@ -207,7 +207,7 @@ namespace pb_ds\n \n   } // namespace detail\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifdef PB_DS_TREE_TRACE\n "}, {"sha": "ed724e191e2c948ae3edb01ad335f2494966948d", "filename": "libstdc++-v3/include/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Fnode_metadata_selector.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Fnode_metadata_selector.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Fnode_metadata_selector.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <ext/pb_ds/detail/basic_tree_policy/null_node_metadata.hpp>\n #include <ext/pb_ds/detail/types_traits.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -117,6 +117,6 @@ namespace pb_ds\n     };\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TRIE_NODE_METADATA_SELECTOR_HPP"}, {"sha": "2a1319a4629624654cdb8c5e8c5916ff2a709f42", "filename": "libstdc++-v3/include/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Ftrie_policy_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Ftrie_policy_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Ftrie_policy_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/detail/basic_tree_policy/basic_tree_policy_base.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -249,7 +249,7 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TRIE_POLICY_BASE_HPP\n "}, {"sha": "f57e8d6109c628a23da8358b602c1d489cb260e3", "filename": "libstdc++-v3/include/ext/pb_ds/detail/type_utils.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <ext/type_traits.h>\n #include <ext/numeric_traits.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -158,7 +158,7 @@ namespace pb_ds\n     };\n \n #define PB_DS_STATIC_ASSERT(UNIQUE, E)  \\\n-    typedef pb_ds::detail::__static_assert_dumclass<sizeof(pb_ds::detail::__static_assert<bool(E)>)> UNIQUE##__static_assert_type\n+    typedef __gnu_pbds::detail::__static_assert_dumclass<sizeof(__gnu_pbds::detail::__static_assert<bool(E)>)> UNIQUE##__static_assert_type\n \n #endif\n \n@@ -168,6 +168,6 @@ namespace pb_ds\n       typedef Type type;\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "e493315508e95624a8093cee0eb891e9c2cc981a", "filename": "libstdc++-v3/include/ext/pb_ds/detail/types_traits.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftypes_traits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftypes_traits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftypes_traits.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <utility>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace detail\n   {\n@@ -83,6 +83,6 @@ namespace pb_ds\n       no_throw_copies \tm_no_throw_copies_indicator;\n     };\n   } // namespace detail\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "77d3f2d69272b64334e1e58a69d2a099aba49e06", "filename": "libstdc++-v3/include/ext/pb_ds/exception.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fexception.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fexception.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fexception.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,13 +50,13 @@\n #include <stdexcept>\n #include <cstdlib>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // Base class for exceptions.\n   struct container_error : public std::logic_error\n   {\n     container_error() \n-    : std::logic_error(__N(\"pb_ds::container_error\")) { }\n+    : std::logic_error(__N(\"__gnu_pbds::container_error\")) { }\n   };\n \n   // An entry cannot be inserted into a container object for logical\n@@ -104,6 +104,6 @@ namespace pb_ds\n   __throw_resize_error(void)\n   { std::abort(); }\n #endif\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "d1833c17398e45e649f5fa135abf15b5af62eab8", "filename": "libstdc++-v3/include/ext/pb_ds/hash_policy.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fhash_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fhash_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fhash_policy.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -56,7 +56,7 @@\n #include <ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp>\n #include <ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // A null hash function, indicating that the combining hash function\n   // is actually a ranged hash function.\n@@ -605,6 +605,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "5a63a3e16dc6ff05238a029c104fd43593f9f7b3", "filename": "libstdc++-v3/include/ext/pb_ds/list_update_policy.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Flist_update_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Flist_update_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Flist_update_policy.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <cstdlib>\n #include <ext/pb_ds/detail/list_update_policy/counter_lu_metadata.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // A null type that means that each link in a list-based container\n   // does not actually need metadata.\n@@ -137,6 +137,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "90ffafffefaae8f42dce0885b1e5b25220a626dc", "filename": "libstdc++-v3/include/ext/pb_ds/priority_queue.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fpriority_queue.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fpriority_queue.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fpriority_queue.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/priority_queue_base_dispatch.hpp>\n #include <ext/pb_ds/detail/standard_policies.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // A priority queue.\n   template<typename Value_Type, \n@@ -126,6 +126,6 @@ namespace pb_ds\n     swap(priority_queue& other)\n     { base_type::swap(other); }\n   };\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "09475a2ec9516606db927247b96bdcb7f728a1d2", "filename": "libstdc++-v3/include/ext/pb_ds/tag_and_trait.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftag_and_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftag_and_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftag_and_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,11 +51,11 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n \n /**\n- * @namespace pb_ds\n+ * @namespace __gnu_pbds\n  * @brief GNU extension policy-based data structures for public use.\n  */\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // A trivial iterator tag. Signifies that the iterators has none of\n   // the STL's movement abilities.\n@@ -357,6 +357,6 @@ namespace pb_ds\n \treverse_iteration = base_type::reverse_iteration\n       };\n   };\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "dedabec5c48867429528c66ee565f6c0308eeffc", "filename": "libstdc++-v3/include/ext/pb_ds/tree_policy.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftree_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftree_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftree_policy.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <ext/pb_ds/detail/basic_tree_policy/basic_tree_policy_base.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // A null node updator, indicating that no node updates are required.\n   template<typename Const_Node_Iterator,\n@@ -163,6 +163,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_BASE_C_DEC\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "b18de195ed888b23ee1decca8be971d7c1f7691d", "filename": "libstdc++-v3/include/ext/pb_ds/trie_policy.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftrie_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftrie_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftrie_policy.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <ext/pb_ds/detail/trie_policy/trie_policy_base.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   // A null node updator, indicating that no node updates are required.\n   template<typename Const_Node_Iterator,\n@@ -356,6 +356,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_BASE_C_DEC\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "a9b4affe2a09e4f096a7308f5d2327b98ab1f9d9", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/assoc_container_traits.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fassoc_container_traits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fassoc_container_traits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fassoc_container_traits.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,8 +57,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n template<class DS_Category>\n void"}, {"sha": "3caacb78f521557d3aee6d6a0357ad114bf66c20", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/basic_map.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_map.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,8 +55,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // The following function performs a sequence of operations on an\n // associative container object mapping integers to characters."}, {"sha": "a48860597f620160c65814a9655c0b9b91ffda58", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/basic_multimap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multimap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multimap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multimap.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -56,7 +56,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor.\n // hash could serve instead of this functor, but it is not yet"}, {"sha": "064e24d3610ade999bb214fd29c3d2c15d6ef314", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/basic_multiset.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multiset.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multiset.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multiset.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple priority queue that also supports an \"contains\" query.\n class contains_pq"}, {"sha": "beedd0e7a88805cf79bc22aa703fcec2156d218c", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/basic_priority_queue.cc", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_priority_queue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_priority_queue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_priority_queue.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,8 +55,7 @@\n #include <ext/pb_ds/priority_queue.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // The following function performs a sequence of operations on a\n // priority queue object storing integers.\n@@ -94,35 +93,35 @@ int main()\n   {\n     // Perform operations on a pairing-heap queue.\n     cout << \"Pairing heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, pairing_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, pairing_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n   {\n     // Perform operations on a binomial-heap queue.\n     cout << \"Binomial heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, binomial_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, binomial_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n   {\n     // Perform operations on a binomial-heap queue.\n     cout << \"Redundant-counter binomial heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, rc_binomial_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, rc_binomial_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n   {\n     // Perform operations on a binomial-heap queue.\n     cout << \"Binary heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, binary_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, binary_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n   {\n     // Perform operations on a thin-heap queue.\n     cout << \"Thin heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, thin_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, thin_heap_tag> c;\n     some_op_sequence(c);\n   }\n "}, {"sha": "12a9ad2af1a7e3569f15a4897ee4731554c5f1dc", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/basic_set.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_set.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_set.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_set.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -56,8 +56,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // The following function performs a sequence of operations on an\n // associative container object storing integers."}, {"sha": "b13dd0736ff7176cee0269d40702f1110d16acf5", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/erase_if.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ferase_if.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ferase_if.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ferase_if.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,8 +54,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // The following functor takes a map's value-type object and returns\n // whether its key is between two numbers."}, {"sha": "c77e6e0a141050b56acb6f42bed875f3e0ed1093", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_find_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_find_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_find_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_find_neg.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n int main()\n {"}, {"sha": "1518a0932ae47681a30f4fdf50a86a7c89c5d696", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_illegal_resize.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_illegal_resize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_illegal_resize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_illegal_resize.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,7 +57,7 @@\n #include <cassert>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor.\n // hash could serve instead of this functor, but it is not yet\n@@ -115,7 +115,7 @@ int main()\n     {\n       g.resize(200);\n     }\n-  catch(pb_ds::resize_error& )\n+  catch(__gnu_pbds::resize_error& )\n     {\n       ex_thrown = true;\n     }"}, {"sha": "6168ba457a5f7eadb1a082e28ec68075bee36b61", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_initial_size.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_initial_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_initial_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_initial_size.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor.\n // hash could serve instead of this functor, but it is not yet"}, {"sha": "0afc7efe6a4ee3f5a250802b7166f809142b45cd", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_load_set_change.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_load_set_change.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_load_set_change.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_load_set_change.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -56,7 +56,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor.\n // hash could serve instead of this functor, but it is not yet"}, {"sha": "32b8e0fc483805d6d311bbcf3b24a0bd9dfeb82f", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_mod.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_mod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_mod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_mod.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor.\n // hash could serve instead of this functor, but it is not yet"}, {"sha": "548e56cc88e48345706361d38973dac03a6a8765", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_resize.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor.\n // hash could serve instead of this functor, but it is not yet"}, {"sha": "3a6022ba696c0f401b8517bb76269d7459f383c5", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_resize_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n int main()\n {"}, {"sha": "5242d82c223560b03d10b84baeb31e18b394a301", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_shift_mask.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_shift_mask.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_shift_mask.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_shift_mask.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,7 +57,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A simple hash functor. hash could serve instead of this functor,\n // but it is not yet standard everywhere."}, {"sha": "d59ed81020ecc6c8df679e1dc9a8048a15a0c56f", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/priority_queue_container_traits.cc", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_container_traits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_container_traits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_container_traits.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -56,8 +56,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n template<class DS_Category>\n void\n@@ -147,7 +146,7 @@ int main()\n   {\n     // Print the attributes of a binary heap.\n     typedef\n-      pb_ds::priority_queue<\n+      __gnu_pbds::priority_queue<\n       int,\n       std::less<int>,\n       binary_heap_tag>\n@@ -159,7 +158,7 @@ int main()\n   {\n     // Print the attributes of a binomial heap.\n     typedef\n-      pb_ds::priority_queue<\n+      __gnu_pbds::priority_queue<\n       int,\n       std::less<int>,\n       binomial_heap_tag>\n@@ -171,7 +170,7 @@ int main()\n   {\n     // Print the attributes of a redundant-counter binomial heap.\n     typedef\n-      pb_ds::priority_queue<\n+      __gnu_pbds::priority_queue<\n       int,\n       std::less<int>,\n       rc_binomial_heap_tag>\n@@ -183,7 +182,7 @@ int main()\n   {\n     // Print the attributes of a pairing heap.\n     typedef\n-      pb_ds::priority_queue<\n+      __gnu_pbds::priority_queue<\n       int,\n       std::less<int>,\n       pairing_heap_tag>\n@@ -198,7 +197,7 @@ int main()\n      */\n \n     typedef\n-      pb_ds::priority_queue<\n+      __gnu_pbds::priority_queue<\n       int,\n       std::less<int>,\n       thin_heap_tag>"}, {"sha": "af582b37b341e2737ccc15a6d9e6277a520f49f1", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/priority_queue_dijkstra.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_dijkstra.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_dijkstra.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_dijkstra.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -64,8 +64,7 @@\n #include <ext/pb_ds/priority_queue.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // The value type of the priority queue.\n // The first entry is the node's id, and the second is the distance.\n@@ -108,7 +107,7 @@ int main()\n     };\n \n   // The priority queue type.\n-  typedef pb_ds::priority_queue< pq_value, pq_value_cmp> pq_t;\n+  typedef __gnu_pbds::priority_queue< pq_value, pq_value_cmp> pq_t;\n \n   // The priority queue object.\n   pq_t p;"}, {"sha": "834994c46367d7b0e492da1e63c5b2eeb42dd9e7", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/priority_queue_erase_if.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_erase_if.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_erase_if.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_erase_if.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,13 +54,12 @@\n #include <ext/pb_ds/priority_queue.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n int\n main()\n {\n-  pb_ds::priority_queue<int> p;\n+  __gnu_pbds::priority_queue<int> p;\n \n   // First we insert some values into the container.\n   for (int i = 0; i < 1000; ++i)"}, {"sha": "14604d73dce4a112df7c149195cf58ede0619bc3", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/priority_queue_split_join.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_split_join.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_split_join.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_split_join.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,14 +54,13 @@\n #include <ext/pb_ds/priority_queue.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n int\n main()\n {\n   // Two priority queue objects.\n-  pb_ds::priority_queue<int> even_p, odd_p;\n+  __gnu_pbds::priority_queue<int> even_p, odd_p;\n \n   // First we insert some values: even ones into even_p, and odd ones\n   // into odd_p.\n@@ -77,7 +76,7 @@ main()\n \n   // Print out the values.\n   cout << \"Initial values in even priority queue:\" << endl;\n-  pb_ds::priority_queue<int>::const_iterator it;\n+  __gnu_pbds::priority_queue<int>::const_iterator it;\n   for (it = even_p.begin(); it != even_p.end(); ++it)\n     cout <<* it << endl;\n "}, {"sha": "47a9795b5cdee26b5dc8d40afeb3831342be4d1f", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/priority_queue_xref.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_xref.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_xref.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_xref.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -66,8 +66,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A priority queue of integers, which supports fast pushes,\n // duplicated-int avoidance, and arbitrary-int erases.\n@@ -107,7 +106,7 @@ class mapped_priority_queue\n \n private:\n   // A priority queue of strings.\n-  typedef pb_ds::priority_queue< int> pq_t;\n+  typedef __gnu_pbds::priority_queue< int> pq_t;\n \n   // A hash-table mapping strings to point_iterators inside the\n   // priority queue."}, {"sha": "0be8d8535e75cd07d1819a7bafa78e9ab857c523", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/ranged_hash.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Franged_hash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Franged_hash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Franged_hash.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,8 +61,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n /**\n  * A (somewhat simplistic) ranged-hash function for strings."}, {"sha": "ba46c824b52e6ab57996d1c75a54d959e28feb9b", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/store_hash.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fstore_hash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fstore_hash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fstore_hash.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@\n #include <ext/pb_ds/hash_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A string hash functor.\n struct string_hash : public unary_function<string, size_t>"}, {"sha": "e4411aaab43912ee04e651dc745d8511bb6f9547", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/tree_intervals.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_intervals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_intervals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_intervals.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -68,8 +68,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // Following are definitions of line intervals and functors operating\n // on them. As the purpose of this example is node invariants, and not"}, {"sha": "baba67e7292a6a19e8446fb99c7da3f685b2f660", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/tree_join.cc", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_join.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_join.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_join.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,23 +59,16 @@\n #include <cassert>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n+using namespace __gnu_pbds;\n \n int main()\n {\n   /*\n    *  \n    */\n   // A splay tree table mapping ints to chars.\n-  typedef\n-    tree<\n-    int,\n-    char,\n-    less<\n-    int>,\n-    splay_tree_tag>\n-    map_t;\n+  typedef tree<int, char, less<int>, splay_tree_tag> map_t;\n \n   // Two map_t object.\n   map_t h0, h1;\n@@ -114,7 +107,7 @@ int main()\n     {\n       h2.join(h3);\n     }\n-  catch (pb_ds::join_error& )\n+  catch (__gnu_pbds::join_error& )\n     {\n       exception_thrown = true;\n     }"}, {"sha": "7a3e26292f64e3c04787a9fc9b58ed86446480f9", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/tree_order_statistics.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_order_statistics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_order_statistics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_order_statistics.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -58,8 +58,7 @@\n #include <ext/pb_ds/tree_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A red-black tree table storing ints and their order\n // statistics. Note that since the tree uses"}, {"sha": "24661070cd9e14ee285d8388c61598b0db19b90d", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/tree_order_statistics_join.cc", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_order_statistics_join.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_order_statistics_join.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftree_order_statistics_join.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,18 +55,14 @@\n #include <ext/pb_ds/tree_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A splay tree table mapping ints to chars and storing the ints order\n // statistics.\n typedef\n-tree<\n-  int,\n-  char,\n-  less<int>,\n-  splay_tree_tag,\n-  tree_order_statistics_node_update>\n+tree<int, char, less<int>,\n+     splay_tree_tag,\n+     tree_order_statistics_node_update>\n tree_map_t;\n \n int main()"}, {"sha": "76f2b7bdb811a981bde913b4ee1f26ce3f924101", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/trie_dna.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_dna.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_dna.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_dna.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,7 +57,7 @@\n #include <ext/pb_ds/trie_policy.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // DNA is represented by a string.\n typedef string dna_t;"}, {"sha": "510da445836af40ca9654e51c499c7735080fe26", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/trie_prefix_search.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_prefix_search.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_prefix_search.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_prefix_search.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,8 +57,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n // A PATRICIA trie with a prefix-search node-updator type. Note that\n // since the node updator is trie_prefix_search_node_update, then the"}, {"sha": "868a8cf6216f9e68a3f458014315274048866ecf", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/trie_split.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_split.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_split.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Ftrie_split.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <ext/pb_ds/assoc_container.hpp>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n int main()\n {"}, {"sha": "b7a0b8253ff3344713fb8dbe5379414a0974bf02", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/associative_containers.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fassociative_containers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fassociative_containers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fassociative_containers.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <cassert>\n \n using namespace std;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n \n /**\n  * The following function performs a sequence of operations on an"}, {"sha": "606679b19a417711c311fe6a815d49f6ab3b6b86", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/hash_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef hash_map_tl_t map_tl_t;\n \n   return rand_regression_test(ITERATIONS, KEYS,"}, {"sha": "202fe1443ce5d8f807404a07a820b671acd3f929", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/hash_no_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_no_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_no_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fhash_no_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef hash_set_tl_t map_tl_t;\n \n   return rand_regression_test(ITERATIONS, KEYS,"}, {"sha": "7c8bb40eb1babc9768d37346bb6c53b3de56c135", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/list_update_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef lu_map_tl_t map_tl_t;\n \n   return rand_regression_test(50, 10, "}, {"sha": "0d31f5ad8460fbaf630bf3997861b76e1e9b945e", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/list_update_no_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_no_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_no_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Flist_update_no_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef lu_set_tl_t map_tl_t;\n \n   return rand_regression_test(50, 10,"}, {"sha": "8f4fdaaf68940d2165775640b34ff68e20cc64fe", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/priority_queue_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   return rand_regression_test(ITERATIONS, KEYS,\n \t\t\t      \"tree_no_data_map_rand_regression_test\", \n \t\t\t      pq_tl_t());"}, {"sha": "52099b64e5256d21776a90b5945ba5a622205465", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/priority_queues.cc", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queues.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,8 +50,8 @@\n #include <cassert>\n \n using namespace std;\n-using namespace pb_ds;\n-using namespace pb_ds;\n+using namespace __gnu_pbds;\n+using namespace __gnu_pbds;\n \n template<typename Cntnr>\n void\n@@ -94,7 +94,7 @@ priority_queue_link_regression_test_0()\n      *  Perform operations on a pairing-heap queue.\n      */\n     cout << \"Pairing heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, pairing_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, pairing_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -103,7 +103,7 @@ priority_queue_link_regression_test_0()\n      *  Perform operations on a binomial-heap queue.\n      */\n     cout << \"Binomial heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, binomial_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, binomial_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -112,7 +112,7 @@ priority_queue_link_regression_test_0()\n      *  Perform operations on a binomial-heap queue.\n      */\n     cout << \"Redundant-counter binomial heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, rc_binomial_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, rc_binomial_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -121,7 +121,7 @@ priority_queue_link_regression_test_0()\n      *  Perform operations on a binomial-heap queue.\n      */\n     cout << \"Binary heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, binary_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, binary_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -130,7 +130,7 @@ priority_queue_link_regression_test_0()\n      *  Perform operations on a thin-heap queue.\n      */\n     cout << \"Thin heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, thin_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, thin_heap_tag> c;\n     some_op_sequence(c);\n   }\n }\n@@ -144,7 +144,7 @@ priority_queue_link_regression_test_1()\n      *  Perform operations on a pairing-heap queue.\n      */\n     cout << \"Pairing heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, pairing_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, pairing_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -153,7 +153,7 @@ priority_queue_link_regression_test_1()\n      *  Perform operations on a binomial-heap queue.\n      */\n     cout << \"Binomial heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, binomial_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, binomial_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -162,7 +162,7 @@ priority_queue_link_regression_test_1()\n      *  Perform operations on a binomial-heap queue.\n      */\n     cout << \"Redundant-counter binomial heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, rc_binomial_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, rc_binomial_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -171,7 +171,7 @@ priority_queue_link_regression_test_1()\n      *  Perform operations on a binomial-heap queue.\n      */\n     cout << \"Binary heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, binary_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, binary_heap_tag> c;\n     some_op_sequence(c);\n   }\n \n@@ -180,7 +180,7 @@ priority_queue_link_regression_test_1()\n      *  Perform operations on a thin-heap queue.\n      */\n     cout << \"Thin heap\" << endl;\n-    pb_ds::priority_queue<int, less<int>, thin_heap_tag> c;\n+    __gnu_pbds::priority_queue<int, less<int>, thin_heap_tag> c;\n     some_op_sequence(c);\n   }\n }"}, {"sha": "b08fb855940a86c9b1e8a7875562a84a2c87fa72", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/tree_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef tree_map_tl_t map_tl_t;\n \n   return rand_regression_test(ITERATIONS, KEYS,"}, {"sha": "6f1024f7d4a62a3cc6a8b03646137b648209c308", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/tree_no_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_no_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_no_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftree_no_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef tree_set_tl_t map_tl_t;\n \n   return rand_regression_test(ITERATIONS, KEYS,"}, {"sha": "bd55a83a094b678d2024ef33b308e52f1e69363b", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/trie_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef trie_map_tl_t map_tl_t;\n \n   return rand_regression_test(ITERATIONS, KEYS,"}, {"sha": "3407825bd78c660cdbb38e4b8bb8474f74ecbfbd", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/trie_no_data_map_rand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_no_data_map_rand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_no_data_map_rand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Ftrie_no_data_map_rand.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   typedef trie_set_tl_t map_tl_t;\n \n   return rand_regression_test(ITERATIONS, KEYS,"}, {"sha": "cb7720cc609829166c8664f128bba0a8dff36b3f", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/hash_random_int_erase_mem_usage.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -68,7 +68,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   size_t vn = 200;\n   size_t vs = 200;\n@@ -87,7 +87,7 @@ main(int argc, char* a_p_argv[])\n       erase_test<vec_t::const_iterator> tst(b,  vn, vs, vm);\n       typedef __gnu_test::tracker_allocator<char> alloc_t;\n       {\n-\ttypedef hash_common_types<int, pb_ds::null_mapped_type, int_hash, std::equal_to<int>, alloc_t>::performance_tl tl_t;\n+\ttypedef hash_common_types<int, __gnu_pbds::null_mapped_type, int_hash, std::equal_to<int>, alloc_t>::performance_tl tl_t;\n \n \ttl_t tl;\n \t__gnu_cxx::typelist::apply(tst, tl);"}, {"sha": "d3cebc8757165e4623f08b2cb8de892cee14846b", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/hash_zlob_random_int_find_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "2b8a2a9b77bf0c297ad79edb28d719daa97708b1", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/multimap_text_find_timing.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_find_timing.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_find_timing.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_find_timing.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -67,7 +67,7 @@ set_test_parameters(size_t& n, size_t&s, size_t& m, size_t& prm);\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t prm;"}, {"sha": "a485a8b915d93899fbf8a8f85310c938127a4cd1", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/multimap_text_insert_mem_usage.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -68,7 +68,7 @@ set_test_parameters(size_t& n, size_t&s, size_t& m, size_t& prm);\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t prm;"}, {"sha": "f7f33f051e0c12a6536f3fb77a4edc486a5a219b", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/multimap_text_insert_timing.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -67,7 +67,7 @@ set_test_parameters(size_t& n, size_t&s, size_t& m, size_t& prm);\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t prm;"}, {"sha": "ad6fdd176c16dc19e3e10e95359e3d54f78e028f", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_random_int_push_pop_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "5ab8db1edd599ab8b4b6dbac8b99462b7f4942ee", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_random_int_push_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "c5ba556f239dc90b6b9dc5b6bebef33c5e493412", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_text_join_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -80,7 +80,7 @@ usage()\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 200;"}, {"sha": "e8dffa6978bd4391e4d2b6ede0e634efaef3728d", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_text_modify_timing.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_timing.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_timing.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_timing.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -63,7 +63,7 @@ set_test_parameters(bool& b);\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 100;"}, {"sha": "adbbc0384fd1cb595913e65419e461e39343d8c0", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_text_pop_mem_usage.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n \n   size_t vn = 200;"}, {"sha": "65a009c08ce1d99414e8903ded902ba94e926b02", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_text_push_pop_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "6fcaa0d23f6f0a36d71b48331fb257bdc79a14ff", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/priority_queue_text_push_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "87d14d7f9e5d332ee912ba0f2da533b034d03e18", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/random_int_find_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_find_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_find_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_find_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "e336114b4895d58120bc862a5393d4ec31b7e7a7", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/random_int_subscript_find_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_subscript_find_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_subscript_find_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_subscript_find_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "e9554c1600d6f49c591f5728f468a2854ae85e66", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/random_int_subscript_insert_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_subscript_insert_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_subscript_insert_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Frandom_int_subscript_insert_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   size_t vn = 200;\n   size_t vs = 200;\n   size_t vm = 2100;"}, {"sha": "8409a4aebb263da9adbdc00e8bad679e547de5ae", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/text_find_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftext_find_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftext_find_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftext_find_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -62,7 +62,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 200;\n   size_t vs = 200;"}, {"sha": "2ca61ca14959f259cee02bc5bcfd115da5c6a0e9", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/tree_order_statistics_timing.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_order_statistics_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_order_statistics_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_order_statistics_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,7 +59,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   size_t vn = 200;\n   size_t vs = 200;\n   size_t vm = 2100;\n@@ -71,7 +71,7 @@ main(int argc, char* a_p_argv[])\n       {\n \ttypedef tree_order_statistics_test< true> test_t;\n \ttest_t tst(vn, vs, vm);\n-\ttypedef tree_common_types<int, pb_ds::null_mapped_type, std::less<int>, pb_ds::tree_order_statistics_node_update>::performance_tl tl_t;\n+\ttypedef tree_common_types<int, __gnu_pbds::null_mapped_type, std::less<int>, __gnu_pbds::tree_order_statistics_node_update>::performance_tl tl_t;\n \ttl_t tl;\n \t__gnu_cxx::typelist::apply(tst, tl);\n       }"}, {"sha": "9c4970f2826b0e34589f3dc43819272b87b0458d", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/tree_split_join_timing.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_split_join_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_split_join_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_split_join_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,7 +59,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   size_t vn = 200;\n   size_t vs = 200;\n   size_t vm = 2100;\n@@ -72,7 +72,7 @@ main(int argc, char* a_p_argv[])\n \ttypedef tree_split_join_test<true> test_t;\n \ttest_t tst(vn, vs, vm);\n \n-\ttypedef tree_common_types<int, pb_ds::null_mapped_type>::performance_tl tl_t;\n+\ttypedef tree_common_types<int, __gnu_pbds::null_mapped_type>::performance_tl tl_t;\n \ttl_t tl;\n \t__gnu_cxx::typelist::apply(tst, tl);\n       }"}, {"sha": "23a630233149035d57152ffa7258f08f5da08961", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/tree_text_insert_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_text_insert_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_text_insert_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_text_insert_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -62,7 +62,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n   \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 200;"}, {"sha": "44329b3f769ade15003f5e1da431a20f116ebf91", "filename": "libstdc++-v3/testsuite/performance/ext/pb_ds/tree_text_lor_find_timing.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@ usage();\n int\n main(int argc, char* a_p_argv[])\n {\n-  using namespace pb_ds::test;\n+  using namespace __gnu_pbds::test;\n \n   std::string f_name = \"thirty_years_among_the_dead_preproc.txt\";\n   size_t vn = 200;"}, {"sha": "e5af5c22ccad385379ee63f7f90088380d3ab9d7", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/common_type.hpp", "status": "modified", "additions": 90, "deletions": 90, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fcommon_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fcommon_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fcommon_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,13 +51,13 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <ext/pb_ds/assoc_container.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n     template<typename Key,\n \t     typename Data,\n-\t     class Hash_Fn = typename pb_ds::detail::default_hash_fn<Key>::type,\n+\t     class Hash_Fn = typename __gnu_pbds::detail::default_hash_fn<Key>::type,\n \t     class Eq_Fn = std::equal_to<Key>,\n \t     class Allocator = std::allocator<std::pair<const Key, Data> > >\n     struct hash_common_types\n@@ -66,173 +66,173 @@ namespace pb_ds\n       typedef typename Allocator::size_type size_type;\n \n       typedef\n-      pb_ds::test::hash_load_check_resize_trigger_t_<\n+      __gnu_pbds::test::hash_load_check_resize_trigger_t_<\n \tAllocator,\n \t1, 8,\n \t1, 2,\n \tfalse>\n       no_access_half_load_check_resize_trigger_policy;\n \n       typedef\n-      pb_ds::test::hash_load_check_resize_trigger_t_<\n+      __gnu_pbds::test::hash_load_check_resize_trigger_t_<\n \tAllocator,\n \t1, 8,\n \t1, 2,\n \ttrue>\n       access_half_load_check_resize_trigger_policy;\n \n       typedef\n-      pb_ds::test::hash_load_check_resize_trigger_t_<\n+      __gnu_pbds::test::hash_load_check_resize_trigger_t_<\n \tAllocator,\n \t1, 8,\n \t1, 1,\n \tfalse>\n       no_access_one_load_check_resize_trigger_policy;\n \n       typedef\n-      pb_ds::test::cc_hash_max_collision_check_resize_trigger_t_<\n+      __gnu_pbds::test::cc_hash_max_collision_check_resize_trigger_t_<\n \tAllocator,\n \t1, 2,\n \tfalse>\n       no_access_half_max_col_check_check_resize_trigger_policy;\n \n       typedef\n-      pb_ds::test::cc_hash_max_collision_check_resize_trigger_t_<\n+      __gnu_pbds::test::cc_hash_max_collision_check_resize_trigger_t_<\n \tAllocator,\n \t1, 2,\n \ttrue>\n       access_half_max_col_check_check_resize_trigger_policy;\n \n-      typedef pb_ds::test::linear_probe_fn_t_<Key, Allocator> lin_p_t;\n+      typedef __gnu_pbds::test::linear_probe_fn_t_<Key, Allocator> lin_p_t;\n \n-      typedef pb_ds::test::quadratic_probe_fn_t_<Key, Allocator> quad_p_t;\n+      typedef __gnu_pbds::test::quadratic_probe_fn_t_<Key, Allocator> quad_p_t;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       performance_cc_policy0;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mod_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_prime_size_policy_t_>::type\n+\t__gnu_pbds::test::hash_prime_size_policy_t_>::type\n       performance_cc_policy1;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \tno_access_one_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       performance_cc_policy2;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mod_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator>,\n \tno_access_one_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_prime_size_policy_t_ >::type\n+\t__gnu_pbds::test::hash_prime_size_policy_t_ >::type\n       performance_cc_policy3;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::true_type,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::detail::true_type,\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       performance_cc_policy4;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_max_col_check_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       performance_cc_policy5;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \taccess_half_max_col_check_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       regression_cc_policy0;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::false_type,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::detail::false_type,\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \taccess_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       regression_cc_policy1;\n \n       typedef\n       typename __gnu_cxx::typelist::create4<\n-\tpb_ds::detail::true_type,\n-\tpb_ds::test::direct_mod_range_hashing_t_<\n+\t__gnu_pbds::detail::true_type,\n+\t__gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_prime_size_policy_t_ >::type\n+\t__gnu_pbds::test::hash_prime_size_policy_t_ >::type\n       regression_cc_policy2;\n \n       typedef\n       typename __gnu_cxx::typelist::create5<\n-\tpb_ds::detail::false_type,\n+\t__gnu_pbds::detail::false_type,\n \tlin_p_t,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       performance_gp_policy0;\n \n       typedef\n       typename __gnu_cxx::typelist::create5<\n-\tpb_ds::detail::false_type,\n+\t__gnu_pbds::detail::false_type,\n \tquad_p_t,\n-\tpb_ds::test::direct_mod_range_hashing_t_<\n+\t__gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_prime_size_policy_t_ >::type\n+\t__gnu_pbds::test::hash_prime_size_policy_t_ >::type\n       performance_gp_policy1;\n \n       typedef\n       typename __gnu_cxx::typelist::create5<\n-\tpb_ds::detail::false_type,\n+\t__gnu_pbds::detail::false_type,\n \tquad_p_t,\n-\tpb_ds::test::direct_mod_range_hashing_t_<\n+\t__gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator>,\n \taccess_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_prime_size_policy_t_>::type\n+\t__gnu_pbds::test::hash_prime_size_policy_t_>::type\n       regression_gp_policy0;\n \n       typedef\n       typename __gnu_cxx::typelist::create5<\n-\tpb_ds::detail::true_type,\n+\t__gnu_pbds::detail::true_type,\n \tlin_p_t,\n-\tpb_ds::test::direct_mask_range_hashing_t_<\n+\t__gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator>,\n \taccess_half_load_check_resize_trigger_policy,\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator> >::type\n       regression_gp_policy1;\n \n@@ -296,13 +296,13 @@ namespace pb_ds\n \n       public:\n         typedef\n-\tpb_ds::cc_hash_table<\n+\t__gnu_pbds::cc_hash_table<\n \tKey,\n \tData,\n \tHash_Fn,\n \tEq_Fn,\n \tcomb_hash_fn,\n-\tpb_ds::hash_standard_resize_policy<\n+\t__gnu_pbds::hash_standard_resize_policy<\n \tsize_policy,\n \ttrigger_policy,\n \tfalse>,\n@@ -342,13 +342,13 @@ namespace pb_ds\n \n       public:\n         typedef\n-\tpb_ds::cc_hash_table<\n+\t__gnu_pbds::cc_hash_table<\n \tKey,\n \tData,\n \tHash_Fn,\n \tEq_Fn,\n \tcomb_hash_fn,\n-\tpb_ds::hash_standard_resize_policy<\n+\t__gnu_pbds::hash_standard_resize_policy<\n \tsize_policy,\n \ttrigger_policy,\n \ttrue>,\n@@ -393,14 +393,14 @@ namespace pb_ds\n \n       public:\n         typedef\n-\tpb_ds::gp_hash_table<\n+\t__gnu_pbds::gp_hash_table<\n \tKey,\n \tData,\n \tHash_Fn,\n \tEq_Fn,\n \tcomb_probe_fn,\n \tprobe_fn,\n-\tpb_ds::hash_standard_resize_policy<\n+\t__gnu_pbds::hash_standard_resize_policy<\n \tsize_policy,\n \ttrigger_policy,\n \tfalse>,\n@@ -445,14 +445,14 @@ namespace pb_ds\n \n       public:\n         typedef\n-\tpb_ds::gp_hash_table<\n+\t__gnu_pbds::gp_hash_table<\n \tKey,\n \tData,\n \tHash_Fn,\n \tEq_Fn,\n \tcomb_probe_fn,\n \tprobe_fn,\n-\tpb_ds::hash_standard_resize_policy<\n+\t__gnu_pbds::hash_standard_resize_policy<\n \tsize_policy,\n \ttrigger_policy,\n \ttrue>,\n@@ -533,44 +533,44 @@ namespace pb_ds\n       typedef typename Allocator::size_type size_type;\n \n       typedef\n-      pb_ds::test::hash_load_check_resize_trigger_t_<\n+      __gnu_pbds::test::hash_load_check_resize_trigger_t_<\n \tAllocator,\n \t1, 8,\n \t1, 2,\n \tfalse>\n       no_access_half_load_check_resize_trigger_policy;\n \n       typedef\n-      pb_ds::test::hash_load_check_resize_trigger_t_<\n+      __gnu_pbds::test::hash_load_check_resize_trigger_t_<\n \tAllocator,\n \t1, 8,\n \t1, 1,\n \tfalse>\n       no_access_one_load_check_resize_trigger_policy;\n \n       typedef\n-      pb_ds::hash_standard_resize_policy<\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+      __gnu_pbds::hash_standard_resize_policy<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator>,\n \tno_access_half_load_check_resize_trigger_policy>\n       mask_half_resize_policy_t;\n \n       typedef\n-      pb_ds::hash_standard_resize_policy<\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+      __gnu_pbds::hash_standard_resize_policy<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n \tAllocator>,\n \tno_access_one_load_check_resize_trigger_policy>\n       mask_one_resize_policy_t;\n \n       typedef\n-      pb_ds::hash_standard_resize_policy<\n-\tpb_ds::test::hash_prime_size_policy_t_,\n+      __gnu_pbds::hash_standard_resize_policy<\n+\t__gnu_pbds::test::hash_prime_size_policy_t_,\n \tno_access_half_load_check_resize_trigger_policy>\n       mod_half_resize_policy_t;\n \n       typedef\n-      pb_ds::hash_standard_resize_policy<\n-\tpb_ds::test::hash_prime_size_policy_t_,\n+      __gnu_pbds::hash_standard_resize_policy<\n+\t__gnu_pbds::test::hash_prime_size_policy_t_,\n \tno_access_one_load_check_resize_trigger_policy>\n       mod_one_resize_policy_t;\n \n@@ -579,15 +579,15 @@ namespace pb_ds\n \n       template<typename Allocator_>\n       struct half_resize_policy_selector<\n-        pb_ds::test::direct_mask_range_hashing_t_<\n+        __gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator_> >\n       {\n         typedef mask_half_resize_policy_t type;\n       };\n \n       template<typename Allocator_>\n       struct half_resize_policy_selector<\n-        pb_ds::test::direct_mod_range_hashing_t_<\n+        __gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator_> >\n       {\n         typedef mod_half_resize_policy_t type;\n@@ -598,15 +598,15 @@ namespace pb_ds\n \n       template<typename Allocator_>\n       struct one_resize_policy_selector<\n-        pb_ds::test::direct_mask_range_hashing_t_<\n+        __gnu_pbds::test::direct_mask_range_hashing_t_<\n \tAllocator_> >\n       {\n         typedef mask_one_resize_policy_t type;\n       };\n \n       template<typename Allocator_>\n       struct one_resize_policy_selector<\n-        pb_ds::test::direct_mod_range_hashing_t_<\n+        __gnu_pbds::test::direct_mod_range_hashing_t_<\n \tAllocator_> >\n       {\n         typedef mod_one_resize_policy_t type;\n@@ -616,10 +616,10 @@ namespace pb_ds\n       struct generic_cc_hash_table_t\n       {\n         typedef\n-\tpb_ds::cc_hash_table<\n+\t__gnu_pbds::cc_hash_table<\n \t  Key,\n \t  Data,\n-\t  pb_ds::null_hash_fn,\n+\t  __gnu_pbds::null_hash_fn,\n \t  Eq_Fn,\n \t  Comb_Hash_Fn,\n \t  typename one_resize_policy_selector<\n@@ -639,13 +639,13 @@ namespace pb_ds\n       struct no_access_generic_gp_hash_table_t\n       {\n         typedef\n-\tpb_ds::gp_hash_table<\n+\t__gnu_pbds::gp_hash_table<\n \t  Key,\n \t  Data,\n-\t  pb_ds::null_hash_fn,\n+\t  __gnu_pbds::null_hash_fn,\n \t  Eq_Fn,\n \t  Comb_Probe_Fn,\n-\t  pb_ds::null_probe_fn,\n+\t  __gnu_pbds::null_probe_fn,\n \t  typename half_resize_policy_selector<\n \t  typename Comb_Probe_Fn::comb_fn>::type,\n \t  false,\n@@ -675,9 +675,9 @@ namespace pb_ds\n     private:\n       typedef typename Allocator::size_type size_type;\n \n-      typedef pb_ds::test::move_to_front_lu_policy_t_ mtf_u;\n+      typedef __gnu_pbds::test::move_to_front_lu_policy_t_ mtf_u;\n \n-      typedef pb_ds::test::counter_lu_policy_t_<Allocator, 5> cnt_5_u;\n+      typedef __gnu_pbds::test::counter_lu_policy_t_<Allocator, 5> cnt_5_u;\n \n       typedef typename __gnu_cxx::typelist::create1<mtf_u>::type lu_policy0;\n \n@@ -700,7 +700,7 @@ namespace pb_ds\n \n       public:\n         typedef\n-\tpb_ds::list_update<\n+\t__gnu_pbds::list_update<\n \tKey,\n \tData,\n \tEq_Fn,\n@@ -733,37 +733,37 @@ namespace pb_ds\n \t\t      class Node_Iterator,\n \t\t      class Cmp_Fn_,\n \t\t      class Allocator_>\n-    class Node_Update = pb_ds::null_tree_node_update,\n+    class Node_Update = __gnu_pbds::null_tree_node_update,\n \t     class Allocator = std::allocator<std::pair<const Key, Data> > >\n     struct tree_common_types\n     {\n     private:\n       typedef\n-      pb_ds::tree<\n+      __gnu_pbds::tree<\n       Key,\n       Data,\n       Cmp_Fn,\n-      pb_ds::ov_tree_tag,\n+      __gnu_pbds::ov_tree_tag,\n       Node_Update,\n       Allocator>\n       ov_tree_assoc_container_t;\n \n       typedef\n-      pb_ds::tree<\n+      __gnu_pbds::tree<\n \tKey,\n \tData,\n \tCmp_Fn,\n-\tpb_ds::rb_tree_tag,\n+\t__gnu_pbds::rb_tree_tag,\n \tNode_Update,\n \tAllocator>\n       rb_tree_assoc_container_t;\n \n       typedef\n-      pb_ds::tree<\n+      __gnu_pbds::tree<\n \tKey,\n \tData,\n \tCmp_Fn,\n-\tpb_ds::splay_tree_tag,\n+\t__gnu_pbds::splay_tree_tag,\n \tNode_Update,\n \tAllocator>\n       splay_tree_assoc_container_t;\n@@ -792,18 +792,18 @@ namespace pb_ds\n     template<typename Key,\n \t     typename Data,\n \t     class E_Access_Traits =\n-\t     typename pb_ds::detail::default_trie_e_access_traits<Key>::type,\n-\t     class Tag = pb_ds::pat_trie_tag,\n+\t     typename __gnu_pbds::detail::default_trie_e_access_traits<Key>::type,\n+\t     class Tag = __gnu_pbds::pat_trie_tag,\n \t     template<typename Const_Node_Iterator,\n \t\t      typename Node_Iterator,\n \t\t      class E_Access_Traits_,\n \t\t      typename Allocator_>\n-    class Node_Update = pb_ds::null_trie_node_update,\n+    class Node_Update = __gnu_pbds::null_trie_node_update,\n \t     class Allocator = std::allocator<char> >\n     class trie_common_types\n     {\n     private:\n-      typedef pb_ds::trie<Key, Data, E_Access_Traits, Tag, Node_Update, Allocator> type;\n+      typedef __gnu_pbds::trie<Key, Data, E_Access_Traits, Tag, Node_Update, Allocator> type;\n \n     public:\n       typedef typename __gnu_cxx::typelist::create1<type>::type performance_tl;\n@@ -813,6 +813,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_COMMON_TYPES_HPP"}, {"sha": "41d908e58f5f39ebb49ec3018136c22c82588394", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/comb_hash_fn_string_form.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fcomb_hash_fn_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fcomb_hash_fn_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fcomb_hash_fn_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -116,7 +116,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_COMB_HASH_FN_STRING_FORM_HPP\n "}, {"sha": "28625aff6aa065df728e2b6f61b2276e171ffb37", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/ds_string_form.hpp", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fds_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fds_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fds_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -59,7 +59,7 @@\n #include <common_type/assoc/detail/store_hash_string_form.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -74,7 +74,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n \tCntnr,\n-\tpb_ds::cc_hash_tag>\n+\t__gnu_pbds::cc_hash_tag>\n       {\n \tstatic std::string\n         name()\n@@ -104,7 +104,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n \tCntnr,\n-\tpb_ds::gp_hash_tag>\n+\t__gnu_pbds::gp_hash_tag>\n       {\n \tstatic std::string\n         name()\n@@ -166,7 +166,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n         Cntnr,\n-        pb_ds::rb_tree_tag> : private tree_ds_string_form<\n+        __gnu_pbds::rb_tree_tag> : private tree_ds_string_form<\n         Cntnr>\n       {\n       private:\n@@ -189,7 +189,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n         Cntnr,\n-        pb_ds::splay_tree_tag> : private tree_ds_string_form<\n+        __gnu_pbds::splay_tree_tag> : private tree_ds_string_form<\n         Cntnr>\n       {\n       private:\n@@ -212,7 +212,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n         Cntnr,\n-        pb_ds::ov_tree_tag> : private tree_ds_string_form<\n+        __gnu_pbds::ov_tree_tag> : private tree_ds_string_form<\n         Cntnr>\n       {\n       private:\n@@ -235,7 +235,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n \tCntnr,\n-\tpb_ds::list_update_tag>\n+\t__gnu_pbds::list_update_tag>\n       {\n \tstatic std::string\n         name()\n@@ -258,7 +258,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct ds_string_form<\n \tCntnr,\n-\tpb_ds::pat_trie_tag>\n+\t__gnu_pbds::pat_trie_tag>\n       {\n \tstatic std::string\n         name()\n@@ -298,7 +298,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_DS_STRING_FORM_HPP\n "}, {"sha": "08b65056065f3eed6ac9961357dccd21619687b7", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/list_update_policy_string_form.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Flist_update_policy_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Flist_update_policy_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Flist_update_policy_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -107,7 +107,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_LU_POLICY_STRING_FORM_HPP\n "}, {"sha": "84c5d040051a5929c6e50ef80db9cf438982a03f", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/probe_fn_string_form.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fprobe_fn_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fprobe_fn_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fprobe_fn_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -103,7 +103,7 @@ namespace pb_ds\n \n       template<>\n       struct probe_fn_string_form<\n-\tpb_ds::null_probe_fn>\n+\t__gnu_pbds::null_probe_fn>\n       {\n \tstatic std::string\n         name()\n@@ -122,7 +122,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_PROBE_FN_STRING_FORM_HPP\n "}, {"sha": "8507163ff77fba6957341e7340759b6061899405", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/resize_policy_string_form.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fresize_policy_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fresize_policy_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fresize_policy_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -70,7 +70,7 @@ namespace pb_ds\n \t       bool External_Size_Access,\n \t       typename Size_Type>\n       struct resize_policy_string_form<\n-\tpb_ds::hash_standard_resize_policy<\n+\t__gnu_pbds::hash_standard_resize_policy<\n         Size_Policy,\n         Trigger_Policy,\n         External_Size_Access,\n@@ -100,7 +100,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_RESIZE_POLICY_STRING_FORM_HPP\n "}, {"sha": "876505be3ee678522f5a7af440c2241783c9af38", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/size_policy_string_form.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fsize_policy_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fsize_policy_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fsize_policy_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -67,7 +67,7 @@ namespace pb_ds\n \n       template<typename Allocator>\n       struct size_policy_string_form<\n-\tpb_ds::test::hash_exponential_size_policy_t_<\n+\t__gnu_pbds::test::hash_exponential_size_policy_t_<\n         Allocator> >\n       {\n \tstatic std::string\n@@ -85,7 +85,7 @@ namespace pb_ds\n \n       template<>\n       struct size_policy_string_form<\n-\tpb_ds::test::hash_prime_size_policy_t_>\n+\t__gnu_pbds::test::hash_prime_size_policy_t_>\n       {\n \tstatic std::string\n         name()\n@@ -104,7 +104,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_SIZE_POLICY_STRING_FORM_HPP\n "}, {"sha": "89ef675ced5ce5902fc68dde54d300d2c7b218b9", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/store_hash_string_form.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fstore_hash_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fstore_hash_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Fstore_hash_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -97,7 +97,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_STORE_HASH_STRING_FORM_HPP\n "}, {"sha": "f4b231104917aba62cb44abcd516ac670a10523d", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/tree_supports_order_statistics.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftree_supports_order_statistics.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftree_supports_order_statistics.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftree_supports_order_statistics.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/tree_policy.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -63,9 +63,9 @@ namespace pb_ds\n       {\n \tenum\n \t  {\n-\t    value = pb_ds::detail::is_same<\n+\t    value = __gnu_pbds::detail::is_same<\n             typename Tree_Cntnr::node_update,\n-            pb_ds::tree_order_statistics_node_update<\n+            __gnu_pbds::tree_order_statistics_node_update<\n             typename Tree_Cntnr::const_node_iterator,\n             typename Tree_Cntnr::node_iterator,\n             typename Tree_Cntnr::cmp_fn,\n@@ -77,7 +77,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TREE_SUPPORTS_ORDER_STATISTICS_HPP\n "}, {"sha": "c23708f23ccefdf3d9fdbdbfaaf300347f12d4bd", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/trie_supports_order_statistics.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrie_supports_order_statistics.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrie_supports_order_statistics.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrie_supports_order_statistics.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/trie_policy.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -63,9 +63,9 @@ namespace pb_ds\n       {\n \tenum\n \t  {\n-\t    value = pb_ds::detail::is_same<\n+\t    value = __gnu_pbds::detail::is_same<\n             typename Tree_Cntnr::node_update,\n-            pb_ds::trie_order_statistics_node_update<\n+            __gnu_pbds::trie_order_statistics_node_update<\n             typename Tree_Cntnr::const_node_iterator,\n             typename Tree_Cntnr::node_iterator,\n             typename Tree_Cntnr::e_access_traits,\n@@ -77,7 +77,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TRIE_SUPPORTS_ORDER_STATISTICS_HPP\n "}, {"sha": "0adf029507e454ec568f9fec2571662e77d5ea7d", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/trie_supports_prefix_search.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrie_supports_prefix_search.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrie_supports_prefix_search.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrie_supports_prefix_search.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <ext/pb_ds/trie_policy.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -63,9 +63,9 @@ namespace pb_ds\n       {\n \tenum\n \t  {\n-\t    value = pb_ds::detail::is_same<\n+\t    value = __gnu_pbds::detail::is_same<\n             typename Tree_Cntnr::node_update,\n-            pb_ds::trie_prefix_search_node_update<\n+            __gnu_pbds::trie_prefix_search_node_update<\n             typename Tree_Cntnr::const_node_iterator,\n             typename Tree_Cntnr::node_iterator,\n             typename Tree_Cntnr::e_access_traits,\n@@ -77,7 +77,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TRIE_SUPPORTS_PREFIX_SEARCH_HPP\n "}, {"sha": "8169d93815592b2baab5e46113e2a31c53e7d183", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/detail/trigger_policy_string_form.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrigger_policy_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrigger_policy_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fdetail%2Ftrigger_policy_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <common_type/assoc/template_policy.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -70,7 +70,7 @@ namespace pb_ds\n \t       typename Allocator::size_type Max_Load_Denom,\n \t       bool External_Access>\n       struct trigger_policy_string_form<\n-\tpb_ds::test::hash_load_check_resize_trigger_t_<\n+\t__gnu_pbds::test::hash_load_check_resize_trigger_t_<\n         Allocator,\n         Min_Load_Nom,\n         Min_Load_Denom,\n@@ -111,7 +111,7 @@ namespace pb_ds\n \t       typename Allocator::size_type Load_Denom,\n \t       bool External_Access>\n       struct trigger_policy_string_form<\n-\tpb_ds::test::cc_hash_max_collision_check_resize_trigger_t_<\n+\t__gnu_pbds::test::cc_hash_max_collision_check_resize_trigger_t_<\n         Allocator,\n         Load_Nom,\n         Load_Denom,\n@@ -147,7 +147,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TRIGGER_POLICY_STRING_FORM_HPP\n "}, {"sha": "4667c9d4e2da99c964c0e0ebe5b934344617ab83", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/native_set.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fnative_set.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fnative_set.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fnative_set.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <io/xml.hpp>\n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -88,7 +88,7 @@ namespace pb_ds\n       { return (make_xml_tag(\"type\", \"value\", \"std_set\")); }\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "73015b8967d5160f13edb72af6b974aefbd2d5b9", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/string_form.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fstring_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fstring_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Fstring_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -61,7 +61,7 @@\n #include <regression/basic_type.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -119,11 +119,11 @@ namespace pb_ds\n \t  { return (\"\"); }\n \n \t  static std::string\n-\t  name(pb_ds::null_mapped_type)\n+\t  name(__gnu_pbds::null_mapped_type)\n \t  { return (\"set\"); }\n \n \t  static std::string\n-\t  desc(pb_ds::null_mapped_type)\n+\t  desc(__gnu_pbds::null_mapped_type)\n \t  { return (\"\"); }\n \n \tpublic:\n@@ -183,7 +183,7 @@ namespace pb_ds\n \t\t\t\t\t    typename Cntnr::container_category>\n     { };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "12cf9fbcac66a5f4f12c519a1135d3e15b062a5e", "filename": "libstdc++-v3/testsuite/util/common_type/assoc/template_policy.hpp", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Ftemplate_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Ftemplate_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fassoc%2Ftemplate_policy.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,24 +52,24 @@\n #include <ext/pb_ds/tree_policy.hpp>\n #include <ext/pb_ds/list_update_policy.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n     template<typename Allocator>\n     struct direct_mask_range_hashing_t_ \n-    : public pb_ds::direct_mask_range_hashing<typename Allocator::size_type>\n+    : public __gnu_pbds::direct_mask_range_hashing<typename Allocator::size_type>\n     {\n       typedef typename Allocator::size_type size_type;\n-      typedef pb_ds::direct_mask_range_hashing<size_type> base_type;\n+      typedef __gnu_pbds::direct_mask_range_hashing<size_type> base_type;\n     };\n \n     template<typename Allocator>\n     struct direct_mod_range_hashing_t_ \n-    : public pb_ds::direct_mod_range_hashing<typename Allocator::size_type>\n+    : public __gnu_pbds::direct_mod_range_hashing<typename Allocator::size_type>\n     {\n       typedef typename Allocator::size_type size_type;\n-      typedef pb_ds::direct_mod_range_hashing<size_type> base_type;\n+      typedef __gnu_pbds::direct_mod_range_hashing<size_type> base_type;\n     };\n \n     template<typename Allocator,\n@@ -79,11 +79,11 @@ namespace pb_ds\n \t     typename Allocator::size_type Max_Load_Denom,\n \t     bool External_Access>\n     struct hash_load_check_resize_trigger_t_ \n-    : public pb_ds::hash_load_check_resize_trigger<External_Access,\n+    : public __gnu_pbds::hash_load_check_resize_trigger<External_Access,\n \t\t\t\t\t\t   typename Allocator::size_type>\n     {\n       typedef typename Allocator::size_type size_type;\n-      typedef pb_ds::hash_load_check_resize_trigger<External_Access, size_type>  base_type;\n+      typedef __gnu_pbds::hash_load_check_resize_trigger<External_Access, size_type>  base_type;\n \n       inline\n       hash_load_check_resize_trigger_t_() \n@@ -102,11 +102,11 @@ namespace pb_ds\n \t     typename Allocator::size_type Load_Denom,\n \t     bool External_Access>\n     struct cc_hash_max_collision_check_resize_trigger_t_ \n-    : public pb_ds::cc_hash_max_collision_check_resize_trigger<External_Access,\n+    : public __gnu_pbds::cc_hash_max_collision_check_resize_trigger<External_Access,\n       typename Allocator::size_type>\n     {\n       typedef typename Allocator::size_type size_type;\n-      typedef pb_ds::cc_hash_max_collision_check_resize_trigger<External_Access, size_type> base_type;\n+      typedef __gnu_pbds::cc_hash_max_collision_check_resize_trigger<External_Access, size_type> base_type;\n \n       inline\n       cc_hash_max_collision_check_resize_trigger_t_() \n@@ -120,36 +120,36 @@ namespace pb_ds\n \t};\n     };\n \n-    struct hash_prime_size_policy_t_ : public pb_ds::hash_prime_size_policy\n+    struct hash_prime_size_policy_t_ : public __gnu_pbds::hash_prime_size_policy\n     { };\n \n     template<typename Allocator>\n     struct hash_exponential_size_policy_t_ \n-    : public pb_ds::hash_exponential_size_policy<typename Allocator::size_type>\n+    : public __gnu_pbds::hash_exponential_size_policy<typename Allocator::size_type>\n     { };\n \n     template<typename Key, class Allocator>\n     struct linear_probe_fn_t_ \n-    : public pb_ds::linear_probe_fn<typename Allocator::size_type>\n+    : public __gnu_pbds::linear_probe_fn<typename Allocator::size_type>\n     { };\n \n     template<typename Key, class Allocator>\n     struct quadratic_probe_fn_t_ \n-    : public pb_ds::quadratic_probe_fn<typename Allocator::size_type>\n+    : public __gnu_pbds::quadratic_probe_fn<typename Allocator::size_type>\n     { };\n \n     template<typename Allocator, typename Allocator::size_type Max_Count>\n     struct counter_lu_policy_t_ \n-    : public pb_ds::counter_lu_policy<Max_Count, Allocator>\n+    : public __gnu_pbds::counter_lu_policy<Max_Count, Allocator>\n     {\n-      typedef pb_ds::counter_lu_policy<Max_Count, Allocator> base_type;\n+      typedef __gnu_pbds::counter_lu_policy<Max_Count, Allocator> base_type;\n     };\n \n     struct move_to_front_lu_policy_t_ \n-    : public pb_ds::move_to_front_lu_policy<>\n+    : public __gnu_pbds::move_to_front_lu_policy<>\n     { };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "80176db44dd78ea896cb704fbe302d8d38abb70e", "filename": "libstdc++-v3/testsuite/util/common_type/priority_queue/common_type.hpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fcommon_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fcommon_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fcommon_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/priority_queue.hpp>\n #include <ext/typelist.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -62,15 +62,15 @@ namespace pb_ds\n     private:\n       //    typedef typename Allocator::size_type size_type;\n \n-      typedef pb_ds::priority_queue<Value_Type, Cmp_Fn, pb_ds::pairing_heap_tag, Allocator> pairing_heap_t;\n+      typedef __gnu_pbds::priority_queue<Value_Type, Cmp_Fn, __gnu_pbds::pairing_heap_tag, Allocator> pairing_heap_t;\n \n-      typedef pb_ds::priority_queue<Value_Type, Cmp_Fn, pb_ds::binomial_heap_tag, Allocator> binomial_heap_t;\n+      typedef __gnu_pbds::priority_queue<Value_Type, Cmp_Fn, __gnu_pbds::binomial_heap_tag, Allocator> binomial_heap_t;\n \n-      typedef pb_ds::priority_queue<Value_Type, Cmp_Fn, pb_ds::rc_binomial_heap_tag, Allocator> rc_binomial_heap_t;\n+      typedef __gnu_pbds::priority_queue<Value_Type, Cmp_Fn, __gnu_pbds::rc_binomial_heap_tag, Allocator> rc_binomial_heap_t;\n \n-      typedef pb_ds::priority_queue<Value_Type, Cmp_Fn, pb_ds::binary_heap_tag, Allocator> binary_heap_t;\n+      typedef __gnu_pbds::priority_queue<Value_Type, Cmp_Fn, __gnu_pbds::binary_heap_tag, Allocator> binary_heap_t;\n \n-      typedef pb_ds::priority_queue<Value_Type, Cmp_Fn, pb_ds::thin_heap_tag, Allocator> thin_heap_t;\n+      typedef __gnu_pbds::priority_queue<Value_Type, Cmp_Fn, __gnu_pbds::thin_heap_tag, Allocator> thin_heap_t;\n \n       typedef typename __gnu_cxx::typelist::create5<thin_heap_t, pairing_heap_t, binomial_heap_t, rc_binomial_heap_t, binary_heap_t>::type all_tl;\n \n@@ -82,6 +82,6 @@ namespace pb_ds\n     };\n \n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_COMMON_TYPES_HPP"}, {"sha": "bf3b68850240b637f3b2227348dbbd2baeccc858", "filename": "libstdc++-v3/testsuite/util/common_type/priority_queue/detail/ds_string_form.hpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fdetail%2Fds_string_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fdetail%2Fds_string_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fdetail%2Fds_string_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <ext/pb_ds/tag_and_trait.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -61,7 +61,7 @@ namespace pb_ds\n       struct ds_string_form;\n \n       template<typename Cntnr>\n-      struct ds_string_form<Cntnr, pb_ds::pairing_heap_tag>\n+      struct ds_string_form<Cntnr, __gnu_pbds::pairing_heap_tag>\n       {\n \tstatic std::string\n         name()\n@@ -73,7 +73,7 @@ namespace pb_ds\n       };\n \n       template<typename Cntnr>\n-      struct ds_string_form<Cntnr, pb_ds::thin_heap_tag>\n+      struct ds_string_form<Cntnr, __gnu_pbds::thin_heap_tag>\n       {\n \tstatic std::string\n         name()\n@@ -85,7 +85,7 @@ namespace pb_ds\n       };\n \n       template<typename Cntnr>\n-      struct ds_string_form<Cntnr, pb_ds::binomial_heap_tag>\n+      struct ds_string_form<Cntnr, __gnu_pbds::binomial_heap_tag>\n       {\n \tstatic std::string\n         name()\n@@ -97,7 +97,7 @@ namespace pb_ds\n       };\n \n       template<typename Cntnr>\n-      struct ds_string_form<Cntnr, pb_ds::rc_binomial_heap_tag>\n+      struct ds_string_form<Cntnr, __gnu_pbds::rc_binomial_heap_tag>\n       {\n \tstatic std::string\n         name()\n@@ -109,7 +109,7 @@ namespace pb_ds\n       };\n \n       template<typename Cntnr>\n-      struct ds_string_form<Cntnr, pb_ds::binary_heap_tag>\n+      struct ds_string_form<Cntnr, __gnu_pbds::binary_heap_tag>\n       {\n \tstatic std::string\n         name()\n@@ -122,7 +122,7 @@ namespace pb_ds\n \n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_DS_STRING_FORM_HPP\n "}, {"sha": "0e5b0ce87c97f043813e314cf2e58d1eaa3b9561", "filename": "libstdc++-v3/testsuite/util/common_type/priority_queue/string_form.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fstring_form.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fstring_form.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fcommon_type%2Fpriority_queue%2Fstring_form.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <common_type/priority_queue/detail/ds_string_form.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -103,7 +103,7 @@ namespace pb_ds\n       : public detail::tag_select_string_form<Cntnr, typename Cntnr::container_category>\n     { };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_STRING_FORM_HPP\n "}, {"sha": "0f97906764f2c9a124ad272af90ae49b03611e94", "filename": "libstdc++-v3/testsuite/util/hash_fn/dna_str_limit.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fdna_str_limit.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fdna_str_limit.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fdna_str_limit.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -67,6 +67,6 @@ namespace pb_ds\n       return ret;\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_DNA_STR_LIMIT_HPP"}, {"sha": "59c096722560ff1a0f23e0a3bfbfc87bb38692ec", "filename": "libstdc++-v3/testsuite/util/hash_fn/limit_string_hash_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Flimit_string_hash_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Flimit_string_hash_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Flimit_string_hash_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -77,6 +77,6 @@ namespace pb_ds\n     size_t limit_string_hash_fn::_S_max;\n \n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "00da3a95bce9b7c0f0a934d57a7ead71efe7411a", "filename": "libstdc++-v3/testsuite/util/hash_fn/string_hash_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_hash_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_hash_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_hash_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -73,6 +73,6 @@ namespace pb_ds\n       }\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "ebfe6e2c605b3d90162a4346926883accc2fa1f4", "filename": "libstdc++-v3/testsuite/util/hash_fn/string_ranged_hash_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_ranged_hash_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_ranged_hash_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_ranged_hash_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <string>\n #include <hash_fn/dna_str_limit.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -104,6 +104,6 @@ namespace pb_ds\n       { return (\"string ranged-hash using\" + string_form<comb_fn>::desc()); }\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "b677fed58b7081c9c476137a51379346d1c513a4", "filename": "libstdc++-v3/testsuite/util/hash_fn/string_ranged_probe_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_ranged_probe_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_ranged_probe_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fhash_fn%2Fstring_ranged_probe_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -108,6 +108,6 @@ namespace pb_ds\n       { return (\"string ranged-probe using\" + string_form<comb_fn>::desc());}\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "033a90b3b1cd2bda24a0a2b6d6565aefde4c1663", "filename": "libstdc++-v3/testsuite/util/io/illegal_input_error.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fillegal_input_error.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fillegal_input_error.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fillegal_input_error.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <exception>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -67,6 +67,6 @@ namespace pb_ds\n #endif\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_ILLEGAL_INPUT_EX_HPP"}, {"sha": "b306762a9bd5ffb2b57b8ebd2241748a42b78eb4", "filename": "libstdc++-v3/testsuite/util/io/prog_bar.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fprog_bar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fprog_bar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fprog_bar.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -46,7 +46,7 @@\n \n #include <util/io/prog_bar.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -89,4 +89,4 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "b58f770933fad21d269d7f805b8c534bc7c0e5b9", "filename": "libstdc++-v3/testsuite/util/io/prog_bar.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fprog_bar.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fprog_bar.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fprog_bar.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <iostream>\n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -91,6 +91,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_PROG_BAR_HPP"}, {"sha": "c8bd15ebd24132dc4b4899fb22800af2ef16dbca", "filename": "libstdc++-v3/testsuite/util/io/text_populate.hpp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Ftext_populate.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Ftext_populate.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Ftext_populate.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <string>\n #include <iostream>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -75,7 +75,7 @@ namespace pb_ds\n \t      std::cerr << \"Cannot open file \" << r_f_name.c_str() <<\n                 std::endl;\n \n-\t      throw pb_ds::test::illegal_input_error();\n+\t      throw __gnu_pbds::test::illegal_input_error();\n \t    }\n \n \t  size_t i = 0;\n@@ -93,7 +93,7 @@ namespace pb_ds\n \t      std::cerr << \"Read only \" << static_cast<unsigned long>(i) <<\n                 \" words\" << std::endl;\n \n-\t      throw pb_ds::test::illegal_input_error();\n+\t      throw __gnu_pbds::test::illegal_input_error();\n \t    }\n \t}\n       catch(...)\n@@ -119,7 +119,7 @@ namespace pb_ds\n \t      std::cerr << \"Cannot open file \" << r_f_name.c_str() <<\n                 std::endl;\n \n-\t      throw pb_ds::test::illegal_input_error();\n+\t      throw __gnu_pbds::test::illegal_input_error();\n \t    }\n \n \t  typedef std::set< typename Vec::value_type::first_type> set_t;\n@@ -145,7 +145,7 @@ namespace pb_ds\n \t      std::cerr << \"Read only \" << static_cast<unsigned long>(s.size()) <<\n                 \" words\" << std::endl;\n \n-\t      throw pb_ds::test::illegal_input_error();\n+\t      throw __gnu_pbds::test::illegal_input_error();\n \t    }\n \t}\n       catch(...)\n@@ -158,6 +158,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TEXT_POPULATE_HPP"}, {"sha": "824f0d733f3c2c780434e11f789afa4a6bca29c9", "filename": "libstdc++-v3/testsuite/util/io/verified_cmd_line_input.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fverified_cmd_line_input.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fverified_cmd_line_input.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fverified_cmd_line_input.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <stdlib.h>\n #include <bits/functexcept.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -113,4 +113,4 @@ namespace pb_ds\n       return false;\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "4e0b99216ce31810089e2cacfa0b1087cbe66904", "filename": "libstdc++-v3/testsuite/util/io/verified_cmd_line_input.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fverified_cmd_line_input.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fverified_cmd_line_input.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fverified_cmd_line_input.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <io/illegal_input_error.hpp>\n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -72,6 +72,6 @@ namespace pb_ds\n     bool\n     get_cmd_line_bool(int argc, char* a_p_argv[], int argn);\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_VERIFIED_CMD_LINE_INPUT_HPP"}, {"sha": "eb544da4442483ffd74d9a1358029d63f17c5ab2", "filename": "libstdc++-v3/testsuite/util/io/xml.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fxml.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fxml.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fxml.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <string>\n #include <sstream>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -126,6 +126,6 @@ namespace pb_ds\n       return sstrm.str();\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_XML_HPP"}, {"sha": "9eab6888ffb1abf60833959774a6059f7a303620", "filename": "libstdc++-v3/testsuite/util/io/xml_test_formatter.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fxml_test_formatter.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fxml_test_formatter.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fio%2Fxml_test_formatter.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <iostream>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -83,6 +83,6 @@ namespace pb_ds\n       { std::cout << \"</cntnr>\" << std::endl; }\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_XML_TEST_FORMATTER_HPP"}, {"sha": "7bf1879b429755e2895ca2f75760542c4351d0a4", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_hash_map.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_map.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_map.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_map.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -62,7 +62,7 @@\n #include <ext/hash_map>\n #endif \n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -79,7 +79,7 @@ namespace pb_ds\n     template<typename Key,\n \t     typename Data,\n \t     size_t Init_Size = 8,\n-\t     typename Hash_Fn = typename pb_ds::detail::default_hash_fn<Key>::type,\n+\t     typename Hash_Fn = typename __gnu_pbds::detail::default_hash_fn<Key>::type,\n \t     typename Eq_Fn = std::equal_to<Key>,\n \t     typename Less_Fn = std::less<Key>,\n \t     typename Allocator = std::allocator<char>\n@@ -132,7 +132,7 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "d787bc9bb7abeaae653eff0835dcc2260a3f9b93", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_hash_multimap.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_multimap.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_multimap.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_multimap.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <native_type/assoc/native_hash_tag.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -64,7 +64,7 @@ namespace pb_ds\n     template<typename Key,\n \t     typename Data,\n \t     size_t Init_Size = 8,\n-\t     class Hash_Fn = typename pb_ds::detail::default_hash_fn<Key>::type,\n+\t     class Hash_Fn = typename __gnu_pbds::detail::default_hash_fn<Key>::type,\n \t     class Eq_Fn = std::equal_to<Key>,\n \t     class Less_Fn = std::less<Key>,\n \t     class Allocator = std::allocator<char> >\n@@ -156,6 +156,6 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n \n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "52d1aa13787d66f15dd1d2c3918d53351df04082", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_hash_set.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_set.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_set.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_set.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -62,7 +62,7 @@\n #include <ext/hash_set>\n #endif\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -78,7 +78,7 @@ namespace pb_ds\n \n     template<typename Key,\n \t     size_t Init_Size = 8,\n-         typename Hash_Fn = typename pb_ds::detail::default_hash_fn<Key>::type,\n+         typename Hash_Fn = typename __gnu_pbds::detail::default_hash_fn<Key>::type,\n \t     typename Eq_Fn = std::equal_to<Key>,\n \t     typename Less_Fn = std::less<Key>,\n \t     typename Allocator = std::allocator<char>\n@@ -155,6 +155,6 @@ namespace pb_ds\n \n #undef PB_DS_BASE_C_DEC\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "ad8fec10f2c1b0adc127638ad9db98e6618c7c6f", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_hash_tag.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_tag.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_tag.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_hash_tag.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,12 +47,12 @@\n #ifndef PB_DS_NATIVE_HASH_DS_TAG_HPP\n #define PB_DS_NATIVE_HASH_DS_TAG_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n     struct native_hash_tag { };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "babe038d2809eec4a6c42c40ffaf9d62693220d0", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_map.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_map.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_map.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_map.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <native_type/assoc/native_tree_tag.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -92,6 +92,6 @@ typename Allocator::template rebind<std::pair<const Key, Data > >::other >\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_NATIVE_MAP_HPP"}, {"sha": "2bec37473df7b8e459dbf8b343a32a1d0058de68", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_multimap.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_multimap.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_multimap.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_multimap.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <native_type/assoc/native_tree_tag.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -147,6 +147,6 @@ namespace pb_ds\n #undef PB_DS_BASE_C_DEC\n } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_NATIVE_MULTIMAP_HPP"}, {"sha": "c605ac6b18df3246d1586060b91080464949702b", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_set.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_set.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_set.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_set.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <native_type/assoc/native_tree_tag.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -92,6 +92,6 @@ namespace pb_ds\n \n #undef PB_DS_BASE_C_DEC\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_NATIVE_SET_HPP"}, {"sha": "de2a019b273a9e623580a34d3742bc0deccbc9b4", "filename": "libstdc++-v3/testsuite/util/native_type/assoc/native_tree_tag.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_tree_tag.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_tree_tag.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fassoc%2Fnative_tree_tag.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,13 +47,13 @@\n #ifndef PB_DS_NATIVE_TREE_DS_TAG_HPP\n #define PB_DS_NATIVE_TREE_DS_TAG_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n     struct native_tree_tag\n     { };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "81525c0bfc99fdb448253ee080ea807884305011", "filename": "libstdc++-v3/testsuite/util/native_type/priority_queue/native_priority_queue.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fpriority_queue%2Fnative_priority_queue.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fpriority_queue%2Fnative_priority_queue.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fnative_type%2Fpriority_queue%2Fnative_priority_queue.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <ext/pb_ds/detail/type_utils.hpp>\n #include <io/xml.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -229,6 +229,6 @@ namespace pb_ds\n #undef PB_DS_CLASS_C_DEC\n \n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "722811aac512cc6bcc725552a85200185a39bdf5", "filename": "libstdc++-v3/testsuite/util/performance/assoc/mem_usage/erase_test.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Ferase_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Ferase_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Ferase_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <performance/io/xml_formatter.hpp>\n #include <common_type/assoc/string_form.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -113,7 +113,7 @@ namespace pb_ds\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "22300bb5b86bb12978e32634cda3b5024a92b42d", "filename": "libstdc++-v3/testsuite/util/performance/assoc/mem_usage/multimap_insert_test.hpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Fmultimap_insert_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Fmultimap_insert_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Fmultimap_insert_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <performance/io/xml_formatter.hpp>\n #include <common_type/assoc/string_form.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -74,11 +74,11 @@ namespace pb_ds\n \n       template<typename Cntnr>\n       size_t\n-      insert(Cntnr, It ins_it_b, It ins_it_e, pb_ds::detail::true_type);\n+      insert(Cntnr, It ins_it_b, It ins_it_e, __gnu_pbds::detail::true_type);\n \n       template<typename Cntnr>\n       size_t\n-      insert(Cntnr, It ins_it_b, It ins_it_e, pb_ds::detail::false_type);\n+      insert(Cntnr, It ins_it_b, It ins_it_e, __gnu_pbds::detail::false_type);\n \n       const It m_ins_b;\n       const size_t m_ins_vn;\n@@ -104,7 +104,7 @@ namespace pb_ds\n \t  std::advance(ins_it_e, ins_size);\n \n \t  const size_t delta_mem = insert(Cntnr(), ins_it_b, ins_it_e,\n-\t\t\t\t\t  pb_ds::detail::integral_constant<int,Native>());\n+\t\t\t\t\t  __gnu_pbds::detail::integral_constant<int,Native>());\n \n \t  res_set_fmt.add_res(ins_size, static_cast<double>(delta_mem));\n \t}\n@@ -114,7 +114,7 @@ namespace pb_ds\n     template<typename Cntnr>\n     size_t\n     multimap_insert_test<It, Native>::\n-    insert(Cntnr, It ins_it_b, It ins_it_e, pb_ds::detail::true_type)\n+    insert(Cntnr, It ins_it_b, It ins_it_e, __gnu_pbds::detail::true_type)\n     {\n       typedef __gnu_test::tracker_allocator_counter counter_type;\n       __gnu_test::tracker_allocator<char> alloc;\n@@ -133,7 +133,7 @@ namespace pb_ds\n     template<typename Cntnr>\n     size_t\n     multimap_insert_test<It, Native>::\n-    insert(Cntnr, It ins_it_b, It ins_it_e, pb_ds::detail::false_type)\n+    insert(Cntnr, It ins_it_b, It ins_it_e, __gnu_pbds::detail::false_type)\n     {\n       typedef __gnu_test::tracker_allocator_counter counter_type;\n       __gnu_test::tracker_allocator<char> alloc;\n@@ -148,7 +148,7 @@ namespace pb_ds\n       return (final_mem - init_mem);\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "2d386ff2645573ea5c8b6899f6e45778b10d6600", "filename": "libstdc++-v3/testsuite/util/performance/assoc/multimap_common_type.hpp", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmultimap_common_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmultimap_common_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmultimap_common_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <hash_fn/string_hash_fn.hpp>\n #include <common_type/assoc/common_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -67,9 +67,9 @@ namespace pb_ds\n       struct hash_set_tl_t\n       {\n \ttypedef\n-        typename pb_ds::test::hash_common_types<\n+        typename __gnu_pbds::test::hash_common_types<\n \t  Key,\n-\t  pb_ds::null_mapped_type,\n+\t  __gnu_pbds::null_mapped_type,\n \t  int_hash,\n \t  std::equal_to<Key>,\n \t  Allocator>::performance_min_tl\n@@ -80,9 +80,9 @@ namespace pb_ds\n       struct lu_set_tl_t\n       {\n \ttypedef\n-        typename pb_ds::test::lu_common_types<\n+        typename __gnu_pbds::test::lu_common_types<\n \t  Key,\n-\t  pb_ds::null_mapped_type,\n+\t  __gnu_pbds::null_mapped_type,\n \t  std::equal_to<\n \t  Key>,\n \t  Allocator>::performance_min_tl\n@@ -96,8 +96,8 @@ namespace pb_ds\n       {\n       private:\n \ttypedef\n-        typename pb_ds::detail::__conditional_type<\n-\tpb_ds::detail::is_same<\n+        typename __gnu_pbds::detail::__conditional_type<\n+\t__gnu_pbds::detail::is_same<\n \tint,\n \tKey>::value,\n \tint_hash,\n@@ -108,7 +108,7 @@ namespace pb_ds\n \tstruct hash_mmap_transform\n \t{\n \t  typedef\n-\t  typename pb_ds::test::hash_common_types<\n+\t  typename __gnu_pbds::test::hash_common_types<\n \t    Key,\n \t    Cntnr_T,\n \t    hash_fn_t,\n@@ -137,12 +137,12 @@ namespace pb_ds\n \tstruct tree_mmap_transform\n \t{\n \t  typedef\n-\t  typename pb_ds::test::tree_common_types<\n+\t  typename __gnu_pbds::test::tree_common_types<\n \t    Key,\n \t    Cntnr_T,\n \t    std::less<\n \t    Key>,\n-\t    pb_ds::null_tree_node_update,\n+\t    __gnu_pbds::null_tree_node_update,\n \t    Allocator>::performance_min_tl\n \t  type;\n \t};\n@@ -227,7 +227,7 @@ namespace pb_ds\n     };\n \n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "72cdf115cbc2274a04082467936ca5ab33dec814", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/common_type.hpp", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fcommon_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fcommon_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fcommon_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,25 +49,25 @@\n \n #include <common_type/assoc/common_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n   {\n \n     typedef\n-    pb_ds::test::hash_common_types<\n+    __gnu_pbds::test::hash_common_types<\n       int,\n-      pb_ds::null_mapped_type>::tl\n+      __gnu_pbds::null_mapped_type>::tl\n     hash_set_tl_t;\n \n     template<typename Cntnr_T>\n     struct hash_mmap_transform\n     {\n       typedef\n-      typename pb_ds::test::hash_common_types<\n+      typename __gnu_pbds::test::hash_common_types<\n \tint,\n-\tpb_ds::compound_data_type<\n+\t__gnu_pbds::compound_data_type<\n \tCntnr_T> >::tl\n       type;\n     };\n@@ -80,18 +80,18 @@ namespace pb_ds\n     hash_mmap_tl_t;\n \n     typedef\n-    pb_ds::test::tree_common_types<\n+    __gnu_pbds::test::tree_common_types<\n       int,\n-      pb_ds::null_mapped_type>::tl\n+      __gnu_pbds::null_mapped_type>::tl\n     tree_set_tl_t;\n \n     template<typename Cntnr_T>\n     struct tree_mmap_transform\n     {\n       typedef\n-      typename pb_ds::test::tree_common_types<\n+      typename __gnu_pbds::test::tree_common_types<\n \tint,\n-\tpb_ds::compound_data_type<\n+\t__gnu_pbds::compound_data_type<\n \tCntnr_T> >::tl\n       type;\n     };\n@@ -107,7 +107,7 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_MULTIMAP_RANDOM_INT_INSERT_TEST_COMMON_TYPE_HPP\n "}, {"sha": "d9ec7fb15727e17cd80d682267ec69c27ef2ff9a", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/find_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ffind_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ffind_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ffind_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -111,7 +111,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It, bool LOR = false>\n-    class find_test : private pb_ds::test::detail::timing_test_base\n+    class find_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       find_test(It ins_b, It fnd_it_b, size_t ins_vn, size_t ins_vs, \n@@ -161,16 +161,16 @@ namespace pb_ds\n \t  It fnd_it_e = m_fnd_it_b;\n \t  std::advance(fnd_it_e, fnd_size);\n \n-\t  pb_ds::test::detail::find_find_functor<It, Cntnr, LOR>\n+\t  __gnu_pbds::test::detail::find_find_functor<It, Cntnr, LOR>\n             fn(test_container, fnd_it_b, fnd_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \t  res_set_fmt.add_res(v, res / fnd_size);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "b4dfa29b8cfceb54e0a20c5a31b9bc6aa2ceaa66", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/insert_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Finsert_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Finsert_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Finsert_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -85,7 +85,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class insert_test : private pb_ds::test::detail::timing_test_base\n+    class insert_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       insert_test(It ins_b, size_t ins_vn, size_t ins_vs, size_t ins_vm)\n@@ -126,11 +126,11 @@ namespace pb_ds\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, v);\n \n-\t  pb_ds::test::detail::insert_insert_functor<It, Cntnr>\n+\t  __gnu_pbds::test::detail::insert_insert_functor<It, Cntnr>\n             fn(ins_it_b, ins_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / v);\n \t}\n@@ -147,7 +147,7 @@ namespace pb_ds\n         cntnr.insert((typename Cntnr::const_reference)(*ins_it));\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "efd5997bf54d8c35dd3c40c69702cf3390823dfc", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/multimap_find_test.hpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fmultimap_find_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fmultimap_find_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fmultimap_find_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -128,7 +128,7 @@ namespace pb_ds\n \n \n     template<typename It, bool Native>\n-    class multimap_find_test : private pb_ds::test::detail::timing_test_base\n+    class multimap_find_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       multimap_find_test(It ins_b, size_t ins_vn, size_t vs, size_t ins_vm)\n@@ -144,12 +144,12 @@ namespace pb_ds\n \n       template<typename Cntnr>\n       Cntnr\n-      init(It ins_b, It ins_e, Cntnr, pb_ds::detail::true_type)\n+      init(It ins_b, It ins_e, Cntnr, __gnu_pbds::detail::true_type)\n       { return Cntnr(ins_b, ins_e); }\n \n       template<typename Cntnr>\n       Cntnr\n-      init(It ins_b, It ins_e, Cntnr, pb_ds::detail::false_type)\n+      init(It ins_b, It ins_e, Cntnr, __gnu_pbds::detail::false_type)\n       {\n \tCntnr ret;\n \tfor (It it = ins_b; it != ins_e; ++it)\n@@ -182,19 +182,19 @@ namespace pb_ds\n \t  std::advance(ins_it_e, v);\n \n \t  Cntnr c = init(ins_it_b, ins_it_e, Cntnr(),\n-\t\t\t pb_ds::detail::integral_constant<int,Native>());\n+\t\t\t __gnu_pbds::detail::integral_constant<int,Native>());\n \n-\t  pb_ds::test::detail::multimap_find_functor<It, Cntnr, Native>\n+\t  __gnu_pbds::test::detail::multimap_find_functor<It, Cntnr, Native>\n             fn(c, ins_it_b, ins_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / v);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "bbdc2455c94f3a7195bbd0c7141dac9fd6c042d2", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/multimap_insert_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fmultimap_insert_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fmultimap_insert_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fmultimap_insert_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -108,7 +108,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It, bool Native>\n-    class multimap_insert_test : private pb_ds::test::detail::timing_test_base\n+    class multimap_insert_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       multimap_insert_test(It b, size_t ins_vn, size_t ins_vs, size_t ins_vm) \n@@ -146,16 +146,16 @@ namespace pb_ds\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, v);\n \n-\t  pb_ds::test::detail::multimap_insert_functor<It, Cntnr, Native>\n+\t  __gnu_pbds::test::detail::multimap_insert_functor<It, Cntnr, Native>\n             fn(ins_it_b, ins_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \t  res_set_fmt.add_res(v, res / v);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "af84e9c94365ac4729093480157a80ade810688a", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/subscript_find_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fsubscript_find_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fsubscript_find_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fsubscript_find_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -86,7 +86,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class subscript_find_test : private pb_ds::test::detail::timing_test_base\n+    class subscript_find_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       subscript_find_test(It ins_b, It b, size_t ins_vn, size_t ins_vs, \n@@ -138,17 +138,17 @@ namespace pb_ds\n \t  It fnd_it_e = m_fnd_b;\n \t  std::advance(fnd_it_e, fnd_size);\n \n-\t  pb_ds::test::detail::subscript_find_functor<It, Cntnr>\n+\t  __gnu_pbds::test::detail::subscript_find_functor<It, Cntnr>\n             fn(test_container, fnd_it_b, fnd_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / fnd_size);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "c9a9b9fdecc98b3a315bfd2ca4be7ad99065f601", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/subscript_insert_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fsubscript_insert_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fsubscript_insert_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Fsubscript_insert_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -85,7 +85,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class subscript_insert_test : private pb_ds::test::detail::timing_test_base\n+    class subscript_insert_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       subscript_insert_test(It ins_b, It b, size_t ins_vn, size_t ins_vs, \n@@ -128,17 +128,17 @@ namespace pb_ds\n \t  It ins_it_b = m_ins_b;\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, v);\n-\t  pb_ds::test::detail::subscript_insert_functor<It, Cntnr>\n+\t  __gnu_pbds::test::detail::subscript_insert_functor<It, Cntnr>\n             fn(ins_it_b, ins_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / v);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "8ccbfb95207b94f82ad995819aeadfa471b0a796", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/tree_order_statistics_test.hpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_order_statistics_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_order_statistics_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_order_statistics_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,7 +54,7 @@\n #include <iterator>\n #include <cstdlib>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -73,7 +73,7 @@ namespace pb_ds\n \t  enum\n \t    {\n \t      support_detected =\n-\t      pb_ds::test::detail::tree_supports_order_statistics<Cntnr>::value\n+\t      __gnu_pbds::test::detail::tree_supports_order_statistics<Cntnr>::value\n \t    };\n \n \t  PB_DS_STATIC_ASSERT(correct_type, support_detected);\n@@ -126,7 +126,7 @@ namespace pb_ds\n \n     template<bool Support_Order_Statistics>\n     class tree_order_statistics_test \n-    : private pb_ds::test::detail::timing_test_base\n+    : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       tree_order_statistics_test(size_t vn, size_t vs, size_t vm)\n@@ -142,11 +142,11 @@ namespace pb_ds\n \n       template<typename Cntnr>\n       void\n-      order_statistics(Cntnr& r_container, pb_ds::detail::true_type);\n+      order_statistics(Cntnr& r_container, __gnu_pbds::detail::true_type);\n \n       template<typename Cntnr>\n       void\n-      order_statistics(Cntnr& r_container, pb_ds::detail::false_type);\n+      order_statistics(Cntnr& r_container, __gnu_pbds::detail::false_type);\n \n     private:\n       const size_t m_vn;\n@@ -170,17 +170,17 @@ namespace pb_ds\n \t  for (size_t ins = 0; ins < v; ++ ins)\n             cntnr.insert((typename Cntnr::value_type)ins);\n \n-\t  pb_ds::test::detail::order_statistics_functor<Cntnr, Support_Order_Statistics>\n+\t  __gnu_pbds::test::detail::order_statistics_functor<Cntnr, Support_Order_Statistics>\n             fn(cntnr);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / v);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "7595dc2cb0d9b0f304b9687e3f518710cb13ce20", "filename": "libstdc++-v3/testsuite/util/performance/assoc/timing/tree_split_join_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_split_join_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_split_join_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Ftiming%2Ftree_split_join_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -111,7 +111,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<bool Support_Split_Join>\n-    class tree_split_join_test : private pb_ds::test::detail::timing_test_base\n+    class tree_split_join_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       tree_split_join_test(size_t vn, size_t vs, size_t vm);\n@@ -153,16 +153,16 @@ namespace pb_ds\n \t  for (size_t ins = 0; ins < v; ++ ins)\n             cntnr.insert((typename Cntnr::value_type)ins);\n \n-\t  pb_ds::test::detail::split_join_functor<Cntnr, Support_Split_Join>\n+\t  __gnu_pbds::test::detail::split_join_functor<Cntnr, Support_Split_Join>\n             fn(cntnr);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \t  res_set_fmt.add_res(v, res);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "fdaa65e73c0e503f5902a3ef21f2c9bcc7c75eda", "filename": "libstdc++-v3/testsuite/util/performance/io/xml_formatter.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fio%2Fxml_formatter.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fio%2Fxml_formatter.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fio%2Fxml_formatter.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <iostream>\n #include <io/xml_test_formatter.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -83,6 +83,6 @@ namespace pb_ds\n       }\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_XML_TEST_PERFORMANCE_FORMATTER_HPP"}, {"sha": "4f84fa64b9ce1eca3adc4158649d3713973a96d2", "filename": "libstdc++-v3/testsuite/util/performance/priority_queue/mem_usage/pop_test.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Fmem_usage%2Fpop_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Fmem_usage%2Fpop_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Fmem_usage%2Fpop_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <performance/io/xml_formatter.hpp>\n #include <common_type/priority_queue/string_form.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -115,7 +115,7 @@ namespace pb_ds\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "e419e4f173a5554ac12930f7b4557bf8ee90f887", "filename": "libstdc++-v3/testsuite/util/performance/priority_queue/timing/join_test.hpp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fjoin_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fjoin_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fjoin_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/priority_queue/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -114,7 +114,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class join_test : private pb_ds::test::detail::timing_test_base\n+    class join_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       join_test(It ins_b, size_t ins_vn, size_t ins_vs, size_t ins_vm)\n@@ -125,9 +125,9 @@ namespace pb_ds\n       void\n       operator()(Cntnr)\n       {\n-\tusing pb_ds::test::detail::double_push_functor;\n-\tusing pb_ds::test::detail::double_push_join_functor;\n-\ttypedef pb_ds::test::detail::timing_test_base base_type;\n+\tusing __gnu_pbds::test::detail::double_push_functor;\n+\tusing __gnu_pbds::test::detail::double_push_join_functor;\n+\ttypedef __gnu_pbds::test::detail::timing_test_base base_type;\n \ttypedef double_push_functor<It, Cntnr> psh_fnct;\n \ttypedef double_push_join_functor<It, Cntnr> psh_jn_fnct;\n \n@@ -171,7 +171,7 @@ namespace pb_ds\n       const size_t \tm_ins_vm;\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "1ce1804f297f8bdb018133e94086f0dfddced524", "filename": "libstdc++-v3/testsuite/util/performance/priority_queue/timing/modify_test.hpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fmodify_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fmodify_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fmodify_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/priority_queue/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -126,7 +126,7 @@ namespace pb_ds\n \n       // Specializations.\n       template<typename It, class Cntnr>\n-      class push_functor<It, Cntnr, pb_ds::binary_heap_tag>\n+      class push_functor<It, Cntnr, __gnu_pbds::binary_heap_tag>\n       {\n       public:\n         push_functor(It ins_it_b,  It ins_it_e) \n@@ -151,7 +151,7 @@ namespace pb_ds\n       };\n \n       template<typename It, class Cntnr>\n-      class push_functor<It, Cntnr, pb_ds::test::native_pq_tag>\n+      class push_functor<It, Cntnr, __gnu_pbds::test::native_pq_tag>\n       {\n       public:\n         push_functor(It ins_it_b,  It ins_it_e) \n@@ -178,7 +178,7 @@ namespace pb_ds\n \n \n       template<typename It, class Cntnr>\n-      class push_modify_functor<It, Cntnr, pb_ds::binary_heap_tag>\n+      class push_modify_functor<It, Cntnr, __gnu_pbds::binary_heap_tag>\n       {\n       private:\n \ttypedef typename Cntnr::iterator iterator;\n@@ -220,7 +220,7 @@ namespace pb_ds\n       };\n \n       template<typename It, class Cntnr>\n-      class push_modify_functor<It, Cntnr, pb_ds::test::native_pq_tag>\n+      class push_modify_functor<It, Cntnr, __gnu_pbds::test::native_pq_tag>\n       {\n       private:\n \ttypedef typename Cntnr::value_type value_type;\n@@ -253,7 +253,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class modify_test : private pb_ds::test::detail::timing_test_base\n+    class modify_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       modify_test(It b, size_t vn, size_t vs, size_t vm, bool modify_up)\n@@ -333,7 +333,7 @@ namespace pb_ds\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif\n "}, {"sha": "a2303f9b1b376318a99457fbb0805b87a567af2f", "filename": "libstdc++-v3/testsuite/util/performance/priority_queue/timing/push_pop_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fpush_pop_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fpush_pop_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fpush_pop_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/priority_queue/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -88,7 +88,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class push_pop_test : private pb_ds::test::detail::timing_test_base\n+    class push_pop_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       push_pop_test(It ins_b, size_t ins_vn, size_t ins_vs, size_t ins_vm)\n@@ -135,17 +135,17 @@ namespace pb_ds\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, v);\n \n-\t  pb_ds::test::detail::push_pop_push_pop_functor<It, Cntnr>\n+\t  __gnu_pbds::test::detail::push_pop_push_pop_functor<It, Cntnr>\n             fn(ins_it_b, ins_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / v);\n \t}\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "961c00ec6385d1bf20d7bca76894e267f1576b03", "filename": "libstdc++-v3/testsuite/util/performance/priority_queue/timing/push_test.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fpush_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fpush_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Ftiming%2Fpush_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/priority_queue/string_form.hpp>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -85,7 +85,7 @@ namespace pb_ds\n     } // namespace detail\n \n     template<typename It>\n-    class push_test : private pb_ds::test::detail::timing_test_base\n+    class push_test : private __gnu_pbds::test::detail::timing_test_base\n     {\n     public:\n       push_test(It ins_b, size_t ins_vn, size_t ins_vs, size_t ins_vm)\n@@ -127,11 +127,11 @@ namespace pb_ds\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, v);\n \n-\t  pb_ds::test::detail::push_push_functor<It, Cntnr>\n+\t  __gnu_pbds::test::detail::push_push_functor<It, Cntnr>\n             fn(ins_it_b, ins_it_e);\n \n \t  const double res =\n-            pb_ds::test::detail::timing_test_base::operator()(fn);\n+            __gnu_pbds::test::detail::timing_test_base::operator()(fn);\n \n \t  res_set_fmt.add_res(v, res / v);\n \t}\n@@ -148,7 +148,7 @@ namespace pb_ds\n         cntnr.push((typename Cntnr::const_reference)(*ins_it));\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "e21d14dc61e2054e773d3e85578a66e53f600941", "filename": "libstdc++-v3/testsuite/util/performance/time/elapsed_timer.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Felapsed_timer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Felapsed_timer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Felapsed_timer.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -46,7 +46,7 @@\n \n #include <util/performance/time/elapsed_timer.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -75,4 +75,4 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "2ab7ac0e3102df56c1ddcbc7f9e30385611d8217", "filename": "libstdc++-v3/testsuite/util/performance/time/elapsed_timer.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Felapsed_timer.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Felapsed_timer.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Felapsed_timer.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <time.h>\n #include <iosfwd>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -72,6 +72,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TEST_TIME_HPP"}, {"sha": "8e4cd99dc0e918424b521e9ad2ba61df9cd95fc0", "filename": "libstdc++-v3/testsuite/util/performance/time/timing_test_base.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Ftiming_test_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Ftiming_test_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Ftime%2Ftiming_test_base.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <performance/time/elapsed_timer.hpp>\n #include <statistic/result_recorder.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -81,7 +81,7 @@ namespace pb_ds\n       timing_test_base::operator()(Functor& fn)\n       {\n \tconst std::size_t resolution = get_min_resolution(fn);\n-\tpb_ds::test::detail::result_recorder<double> rec;\n+\t__gnu_pbds::test::detail::result_recorder<double> rec;\n \tdouble res;\n \tdo\n \t  res = run_at_resolution(fn, resolution);\n@@ -121,7 +121,7 @@ namespace pb_ds\n \n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "61f04a8336d681322d7ef3e839c1705473200409", "filename": "libstdc++-v3/testsuite/util/regression/assoc/common_type.hpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fassoc%2Fcommon_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fassoc%2Fcommon_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fassoc%2Fcommon_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <regression/basic_type.hpp>\n #include <common_type/assoc/common_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -72,15 +72,15 @@ namespace test\n     }\n   };\n \n-  typedef pb_ds::string_trie_e_access_traits<basic_type, 'a', 'a' + basic_type::distinct_chars - 1, false, alloc_type> e_access_traits_t;\n+  typedef __gnu_pbds::string_trie_e_access_traits<basic_type, 'a', 'a' + basic_type::distinct_chars - 1, false, alloc_type> e_access_traits_t;\n \n   template<typename Data_Type>\n   struct tree_types\n   {\n   private:\n-    typedef typename tree_common_types<basic_type, Data_Type, std::less<basic_type>, pb_ds::null_tree_node_update, alloc_type>::regression_tl no_order_statistics_tl_t;\n+    typedef typename tree_common_types<basic_type, Data_Type, std::less<basic_type>, __gnu_pbds::null_tree_node_update, alloc_type>::regression_tl no_order_statistics_tl_t;\n \n-    typedef typename tree_common_types<basic_type, Data_Type, std::less<basic_type>, pb_ds::tree_order_statistics_node_update, alloc_type>::regression_tl order_statistics_tl_t;\n+    typedef typename tree_common_types<basic_type, Data_Type, std::less<basic_type>, __gnu_pbds::tree_order_statistics_node_update, alloc_type>::regression_tl order_statistics_tl_t;\n \n   public:\n     typedef typename __gnu_cxx::typelist::append<no_order_statistics_tl_t, order_statistics_tl_t>::type tl_t;\n@@ -92,11 +92,11 @@ namespace test\n   struct trie_types\n   {\n   private:\n-    typedef typename trie_common_types<basic_type, Data_Type, e_access_traits_t, pb_ds::pat_trie_tag, pb_ds::null_trie_node_update, alloc_type>::regression_tl no_updates_tl_t;\n+    typedef typename trie_common_types<basic_type, Data_Type, e_access_traits_t, __gnu_pbds::pat_trie_tag, __gnu_pbds::null_trie_node_update, alloc_type>::regression_tl no_updates_tl_t;\n \n-    typedef typename trie_common_types<basic_type, Data_Type, e_access_traits_t, pb_ds::pat_trie_tag, pb_ds::trie_order_statistics_node_update, alloc_type>::regression_tl order_statistics_tl_t;\n+    typedef typename trie_common_types<basic_type, Data_Type, e_access_traits_t, __gnu_pbds::pat_trie_tag, __gnu_pbds::trie_order_statistics_node_update, alloc_type>::regression_tl order_statistics_tl_t;\n \n-    typedef typename trie_common_types<basic_type, Data_Type, e_access_traits_t, pb_ds::pat_trie_tag, pb_ds::trie_prefix_search_node_update, alloc_type>::regression_tl prefix_search_tl_t;\n+    typedef typename trie_common_types<basic_type, Data_Type, e_access_traits_t, __gnu_pbds::pat_trie_tag, __gnu_pbds::trie_prefix_search_node_update, alloc_type>::regression_tl prefix_search_tl_t;\n \n   public:\n     typedef typename __gnu_cxx::typelist::append<no_updates_tl_t, typename __gnu_cxx::typelist::append<prefix_search_tl_t, order_statistics_tl_t>::type>::type tl_t;\n@@ -140,6 +140,6 @@ namespace test\n   typedef trie_types<basic_type>::tl_t \t\t\ttrie_map_tl_t;\n   typedef trie_types<basic_type>::min_tl_t \t\tmin_trie_map_tl_t;\n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "93a12922ffa9431a030d71945ffe393927cf56aa", "filename": "libstdc++-v3/testsuite/util/regression/basic_type.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fbasic_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fbasic_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fbasic_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <string>\n #include <ext/throw_allocator.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -99,6 +99,6 @@ namespace test\n #undef PB_DS_BASE_C_DEC\n \n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "7740a913852bdd5dca452f5c0b01f20e215dc2c5", "filename": "libstdc++-v3/testsuite/util/regression/priority_queue/common_type.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fpriority_queue%2Fcommon_type.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fpriority_queue%2Fcommon_type.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Fpriority_queue%2Fcommon_type.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <regression/basic_type.hpp>\n #include <common_type/priority_queue/common_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -60,6 +60,6 @@ namespace test\n \n   typedef pq_tl_t min_pq_tl_t;\n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "7eaa3968f9a09ec20a4fae21054017952ed52378", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/container_rand_regression_test.hpp", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fcontainer_rand_regression_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fcontainer_rand_regression_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fcontainer_rand_regression_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -58,7 +58,7 @@\n #include <common_type/assoc/string_form.hpp>\n #include <regression/rand/io/assoc/xml_formatter.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -137,7 +137,7 @@ namespace detail\n     typedef typename test_traits::value_type \t\tvalue_type;\n     typedef typename test_traits::native_type \t\tnative_type;\n     typedef twister_rand_gen \t\t\t\tgen;\n-    typedef pb_ds::container_traits<Cntnr> \t\tcontainer_traits;\n+    typedef __gnu_pbds::container_traits<Cntnr> \t\tcontainer_traits;\n     typedef __gnu_cxx::throw_allocator<char> \t\talloc_t;\n \n     enum op\n@@ -173,52 +173,52 @@ namespace detail\n     iterator_defs();\n \n     static void\n-    node_iterator_defs(pb_ds::detail::false_type);\n+    node_iterator_defs(__gnu_pbds::detail::false_type);\n \n     static void\n-    node_iterator_defs(pb_ds::detail::true_type);\n+    node_iterator_defs(__gnu_pbds::detail::true_type);\n \n     static void\n     policy_defs();\n \n     static void\n-    policy_defs(pb_ds::basic_hash_tag);\n+    policy_defs(__gnu_pbds::basic_hash_tag);\n \n     static void\n-    policy_defs(pb_ds::cc_hash_tag);\n+    policy_defs(__gnu_pbds::cc_hash_tag);\n \n     static void\n-    policy_defs(pb_ds::gp_hash_tag);\n+    policy_defs(__gnu_pbds::gp_hash_tag);\n \n     static void\n-    policy_defs(pb_ds::tree_tag);\n+    policy_defs(__gnu_pbds::tree_tag);\n \n     static void\n-    policy_defs(pb_ds::list_update_tag);\n+    policy_defs(__gnu_pbds::list_update_tag);\n \n     static void\n-    policy_defs(pb_ds::pat_trie_tag);\n+    policy_defs(__gnu_pbds::pat_trie_tag);\n \n     void\n     policy_access();\n \n     void\n-    policy_access(pb_ds::basic_hash_tag);\n+    policy_access(__gnu_pbds::basic_hash_tag);\n \n     void\n-    policy_access(pb_ds::cc_hash_tag);\n+    policy_access(__gnu_pbds::cc_hash_tag);\n \n     void\n-    policy_access(pb_ds::gp_hash_tag);\n+    policy_access(__gnu_pbds::gp_hash_tag);\n \n     void\n-    policy_access(pb_ds::tree_tag);\n+    policy_access(__gnu_pbds::tree_tag);\n \n     void\n-    policy_access(pb_ds::list_update_tag);\n+    policy_access(__gnu_pbds::list_update_tag);\n \n     void\n-    policy_access(pb_ds::pat_trie_tag);\n+    policy_access(__gnu_pbds::pat_trie_tag);\n \n     void\n     it_copy();\n@@ -233,16 +233,16 @@ namespace detail\n     rev_it_assign();\n \n     void\n-    rev_it_copy_imp(pb_ds::detail::false_type);\n+    rev_it_copy_imp(__gnu_pbds::detail::false_type);\n \n     void\n-    rev_it_copy_imp(pb_ds::detail::true_type);\n+    rev_it_copy_imp(__gnu_pbds::detail::true_type);\n \n     void\n-    rev_it_assign_imp(pb_ds::detail::false_type);\n+    rev_it_assign_imp(__gnu_pbds::detail::false_type);\n \n     void\n-    rev_it_assign_imp(pb_ds::detail::true_type);\n+    rev_it_assign_imp(__gnu_pbds::detail::true_type);\n \n     bool\n     default_constructor();\n@@ -260,19 +260,19 @@ namespace detail\n     it_constructor();\n \n     bool\n-    it_constructor_imp(pb_ds::cc_hash_tag);\n+    it_constructor_imp(__gnu_pbds::cc_hash_tag);\n \n     bool\n-    it_constructor_imp(pb_ds::gp_hash_tag);\n+    it_constructor_imp(__gnu_pbds::gp_hash_tag);\n \n     bool\n-    it_constructor_imp(pb_ds::tree_tag);\n+    it_constructor_imp(__gnu_pbds::tree_tag);\n \n     bool\n-    it_constructor_imp(pb_ds::list_update_tag);\n+    it_constructor_imp(__gnu_pbds::list_update_tag);\n \n     bool\n-    it_constructor_imp(pb_ds::pat_trie_tag);\n+    it_constructor_imp(__gnu_pbds::pat_trie_tag);\n \n     bool\n     insert();\n@@ -284,19 +284,19 @@ namespace detail\n     erase_it();\n \n     bool\n-    erase_it_imp(pb_ds::detail::false_type);\n+    erase_it_imp(__gnu_pbds::detail::false_type);\n \n     bool\n-    erase_it_imp(pb_ds::detail::true_type);\n+    erase_it_imp(__gnu_pbds::detail::true_type);\n \n     bool\n     erase_rev_it();\n \n     bool\n-    erase_rev_it_imp(pb_ds::detail::false_type);\n+    erase_rev_it_imp(__gnu_pbds::detail::false_type);\n \n     bool\n-    erase_rev_it_imp(pb_ds::detail::true_type);\n+    erase_rev_it_imp(__gnu_pbds::detail::true_type);\n \n     bool\n     erase_if();\n@@ -308,46 +308,46 @@ namespace detail\n     resize();\n \n     bool\n-    resize_imp(pb_ds::detail::true_type);\n+    resize_imp(__gnu_pbds::detail::true_type);\n \n     bool\n-    resize_imp(pb_ds::detail::false_type);\n+    resize_imp(__gnu_pbds::detail::false_type);\n \n     bool\n     get_set_loads();\n \n     bool\n-    get_set_loads_imp(pb_ds::detail::true_type);\n+    get_set_loads_imp(__gnu_pbds::detail::true_type);\n \n     bool\n-    get_set_loads_imp(pb_ds::detail::false_type);\n+    get_set_loads_imp(__gnu_pbds::detail::false_type);\n \n     void\n     get_set_load();\n \n     void\n-    get_set_load_imp(pb_ds::detail::true_type);\n+    get_set_load_imp(__gnu_pbds::detail::true_type);\n \n     void\n-    get_set_load_imp(pb_ds::detail::false_type);\n+    get_set_load_imp(__gnu_pbds::detail::false_type);\n \n     bool\n     subscript();\n \n     bool\n-    subscript_imp(pb_ds::detail::false_type);\n+    subscript_imp(__gnu_pbds::detail::false_type);\n \n     bool\n-    subscript_imp(pb_ds::detail::true_type);\n+    subscript_imp(__gnu_pbds::detail::true_type);\n \n     bool\n     split_join();\n \n     bool\n-    split_join_imp(pb_ds::detail::false_type);\n+    split_join_imp(__gnu_pbds::detail::false_type);\n \n     bool\n-    split_join_imp(pb_ds::detail::true_type);\n+    split_join_imp(__gnu_pbds::detail::true_type);\n \n     void\n     cmp(const Cntnr&, const native_type&, const std::string&);\n@@ -360,43 +360,43 @@ namespace detail\n \n     void\n     order_preserving_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t     pb_ds::detail::false_type);\n+\t\t\t     __gnu_pbds::detail::false_type);\n \n     void\n     order_preserving_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t     pb_ds::detail::true_type);\n+\t\t\t     __gnu_pbds::detail::true_type);\n \n     void\n     back_order_preserving_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t\t  pb_ds::detail::false_type);\n+\t\t\t\t  __gnu_pbds::detail::false_type);\n \n     void\n     back_order_preserving_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t\t  pb_ds::detail::true_type);\n+\t\t\t\t  __gnu_pbds::detail::true_type);\n \n     void\n     reverse_iteration_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t      pb_ds::detail::false_type);\n+\t\t\t      __gnu_pbds::detail::false_type);\n \n     void\n     reverse_iteration_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t      pb_ds::detail::true_type);\n+\t\t\t      __gnu_pbds::detail::true_type);\n \n     void\n     order_statistics_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t     pb_ds::detail::false_type);\n+\t\t\t     __gnu_pbds::detail::false_type);\n \n     void\n     order_statistics_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t     pb_ds::detail::true_type);\n+\t\t\t     __gnu_pbds::detail::true_type);\n \n     void\n     prefix_search_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t  pb_ds::detail::false_type);\n+\t\t\t  __gnu_pbds::detail::false_type);\n \n     void\n     prefix_search_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\t  pb_ds::detail::true_type);\n+\t\t\t  __gnu_pbds::detail::true_type);\n \n     template<typename Const_It, class Const_Native_It>\n     void\n@@ -408,19 +408,19 @@ namespace detail\n \n     void\n     lower_bound_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\tpb_ds::detail::false_type);\n+\t\t\t__gnu_pbds::detail::false_type);\n \n     void\n     lower_bound_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\tpb_ds::detail::true_type);\n+\t\t\t__gnu_pbds::detail::true_type);\n \n     void\n     upper_bound_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\tpb_ds::detail::false_type);\n+\t\t\t__gnu_pbds::detail::false_type);\n \n     void\n     upper_bound_cmp_imp(const Cntnr&, const native_type&, \n-\t\t\tpb_ds::detail::true_type);\n+\t\t\t__gnu_pbds::detail::true_type);\n \n     void\n     print_container(const native_type&, std::ostream& r_os = std::cerr) const;\n@@ -495,6 +495,6 @@ namespace detail\n \n } // namespace detail\n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "3b19a75269675ae9bb43bc6703bec3e4501eb50e", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/cmp_fn_imps.hpp", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fcmp_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fcmp_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fcmp_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -140,50 +140,50 @@ cmp_(const Cntnr& r_c, const native_type& r_native_c)\n       container_traits::order_preserving,\n       back_order_preserving =\n       container_traits::order_preserving&& \n-      !pb_ds::detail::is_same<\n+      !__gnu_pbds::detail::is_same<\n       typename std::iterator_traits<\n       typename cntnr::const_iterator>::iterator_category,\n       std::forward_iterator_tag>::value,\n       reverse_iteration = container_traits::reverse_iteration,\n       order_statistics = test_traits::order_statistics,\n       prefix_search = test_traits::prefix_search,\n-      has_mapped = !pb_ds::detail::is_same<\n+      has_mapped = !__gnu_pbds::detail::is_same<\n       typename Cntnr::mapped_type,\n-      pb_ds::null_mapped_type>::value\n+      __gnu_pbds::null_mapped_type>::value\n     };\n \n   order_preserving_cmp_imp(r_c, r_native_c,\n-\t\t\t   pb_ds::detail::integral_constant<int,order_preserving>());\n+\t\t\t   __gnu_pbds::detail::integral_constant<int,order_preserving>());\n \n   back_order_preserving_cmp_imp(r_c, r_native_c,\n-\t\t\t\tpb_ds::detail::integral_constant<int,back_order_preserving>());\n+\t\t\t\t__gnu_pbds::detail::integral_constant<int,back_order_preserving>());\n \n   order_statistics_cmp_imp(r_c, r_native_c,\n-\t\t\t   pb_ds::detail::integral_constant<int,order_statistics>());\n+\t\t\t   __gnu_pbds::detail::integral_constant<int,order_statistics>());\n \n   prefix_search_cmp_imp(r_c, r_native_c,\n-\t\t\tpb_ds::detail::integral_constant<int,prefix_search>());\n+\t\t\t__gnu_pbds::detail::integral_constant<int,prefix_search>());\n \n   reverse_iteration_cmp_imp(r_c, r_native_c,\n-\t\t\t    pb_ds::detail::integral_constant<int,reverse_iteration>());\n+\t\t\t    __gnu_pbds::detail::integral_constant<int,reverse_iteration>());\n \n   lower_bound_cmp_imp(r_c, r_native_c,\n-\t\t      pb_ds::detail::integral_constant<int,order_preserving>());\n+\t\t      __gnu_pbds::detail::integral_constant<int,order_preserving>());\n \n   upper_bound_cmp_imp(r_c, r_native_c,\n-\t\t      pb_ds::detail::integral_constant<int,order_preserving>());\n+\t\t      __gnu_pbds::detail::integral_constant<int,order_preserving>());\n }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-order_preserving_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+order_preserving_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-order_preserving_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+order_preserving_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   PB_DS_SET_DESTRUCT_PRINT\n \n@@ -217,13 +217,13 @@ order_preserving_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds:\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-back_order_preserving_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+back_order_preserving_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-back_order_preserving_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+back_order_preserving_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   PB_DS_SET_DESTRUCT_PRINT\n \n@@ -241,13 +241,13 @@ back_order_preserving_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, p\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-reverse_iteration_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+reverse_iteration_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-reverse_iteration_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+reverse_iteration_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   PB_DS_SET_DESTRUCT_PRINT\n \n@@ -281,13 +281,13 @@ reverse_iteration_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-order_statistics_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+order_statistics_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-order_statistics_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+order_statistics_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   {\n     m_alloc.set_throw_prob(0);\n@@ -350,13 +350,13 @@ order_statistics_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds:\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-prefix_search_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+prefix_search_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-prefix_search_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+prefix_search_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   PB_DS_SET_DESTRUCT_PRINT\n \n@@ -495,13 +495,13 @@ back_it_cmp_imp(Const_It b, Const_It e, Const_Native_It native_b, Const_Native_I\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-lower_bound_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+lower_bound_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-lower_bound_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+lower_bound_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   PB_DS_SET_DESTRUCT_PRINT\n \n@@ -548,13 +548,13 @@ lower_bound_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::deta\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-upper_bound_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, pb_ds::detail::false_type)\n+upper_bound_cmp_imp(const Cntnr& /*r_c*/, const native_type& /*r_native_c*/, __gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-upper_bound_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, pb_ds::detail::true_type)\n+upper_bound_cmp_imp(const Cntnr& r_c, const native_type& r_native_c, __gnu_pbds::detail::true_type)\n {\n   PB_DS_SET_DESTRUCT_PRINT\n "}, {"sha": "c6b02b61a170cbed7556f487ad5734241b05852b", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/constructor_destructor_fn_imps.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fconstructor_destructor_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fconstructor_destructor_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fconstructor_destructor_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -162,7 +162,7 @@ it_constructor()\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-it_constructor_imp(pb_ds::cc_hash_tag)\n+it_constructor_imp(__gnu_pbds::cc_hash_tag)\n {\n   bool done = true;\n   Cntnr* p_c = NULL;\n@@ -229,7 +229,7 @@ it_constructor_imp(pb_ds::cc_hash_tag)\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-it_constructor_imp(pb_ds::gp_hash_tag)\n+it_constructor_imp(__gnu_pbds::gp_hash_tag)\n {\n   bool done = true;\n   Cntnr* p_c = NULL;\n@@ -312,7 +312,7 @@ it_constructor_imp(pb_ds::gp_hash_tag)\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-it_constructor_imp(pb_ds::tree_tag)\n+it_constructor_imp(__gnu_pbds::tree_tag)\n {\n   bool done = true;\n   Cntnr* p_c = NULL;\n@@ -348,7 +348,7 @@ it_constructor_imp(pb_ds::tree_tag)\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-it_constructor_imp(pb_ds::list_update_tag)\n+it_constructor_imp(__gnu_pbds::list_update_tag)\n {\n   bool done = true;\n   Cntnr* p_c = NULL;\n@@ -373,7 +373,7 @@ it_constructor_imp(pb_ds::list_update_tag)\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-it_constructor_imp(pb_ds::pat_trie_tag)\n+it_constructor_imp(__gnu_pbds::pat_trie_tag)\n {\n   bool done = true;\n   Cntnr* p_c = NULL;"}, {"sha": "0acb20cd62e01138aca66990082af8de4ff190fb", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/defs_fn_imps.hpp", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fdefs_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fdefs_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fdefs_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -63,7 +63,7 @@ defs()\n \n   iterator_defs();\n \n-  node_iterator_defs(pb_ds::detail::integral_constant<int,\n+  node_iterator_defs(__gnu_pbds::detail::integral_constant<int,\n \t\t     container_traits::order_preserving>());\n \n   policy_defs();\n@@ -124,7 +124,7 @@ void\n PB_DS_CLASS_C_DEC::\n ds_defs()\n {\n-  typedef pb_ds::container_traits< Cntnr> test_container_traits;\n+  typedef __gnu_pbds::container_traits< Cntnr> test_container_traits;\n \n   typedef typename test_container_traits::container_category test_container_category;\n \n@@ -162,13 +162,13 @@ iterator_defs()\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-node_iterator_defs(pb_ds::detail::false_type)\n+node_iterator_defs(__gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-node_iterator_defs(pb_ds::detail::true_type)\n+node_iterator_defs(__gnu_pbds::detail::true_type)\n {\n   typedef typename Cntnr::node_iterator test_node_iterator;\n \n@@ -188,7 +188,7 @@ policy_defs()\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_defs(pb_ds::basic_hash_tag)\n+policy_defs(__gnu_pbds::basic_hash_tag)\n {\n   typedef typename Cntnr::hash_fn test_hash_fn;\n \n@@ -200,19 +200,19 @@ policy_defs(pb_ds::basic_hash_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_defs(pb_ds::cc_hash_tag)\n+policy_defs(__gnu_pbds::cc_hash_tag)\n {\n-  policy_defs(pb_ds::basic_hash_tag());\n+  policy_defs(__gnu_pbds::basic_hash_tag());\n \n   typedef typename Cntnr::comb_hash_fn test_comb_hash_fn;\n }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_defs(pb_ds::gp_hash_tag)\n+policy_defs(__gnu_pbds::gp_hash_tag)\n {\n-  policy_defs(pb_ds::basic_hash_tag());\n+  policy_defs(__gnu_pbds::basic_hash_tag());\n \n   typedef typename Cntnr::comb_probe_fn test_comb_probe_fn;\n \n@@ -222,7 +222,7 @@ policy_defs(pb_ds::gp_hash_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_defs(pb_ds::tree_tag)\n+policy_defs(__gnu_pbds::tree_tag)\n {\n   typedef typename Cntnr::cmp_fn test_cmp_fn;\n \n@@ -232,7 +232,7 @@ policy_defs(pb_ds::tree_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_defs(pb_ds::list_update_tag)\n+policy_defs(__gnu_pbds::list_update_tag)\n {\n   typedef typename Cntnr::eq_fn test_eq_fn;\n \n@@ -242,7 +242,7 @@ policy_defs(pb_ds::list_update_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_defs(pb_ds::pat_trie_tag)\n+policy_defs(__gnu_pbds::pat_trie_tag)\n {\n   typedef typename Cntnr::e_access_traits e_access_traits;\n }"}, {"sha": "0bd39f33bb3d531535e4cbebc7b226e291bde60a", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/erase_fn_imps.hpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Ferase_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Ferase_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Ferase_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -166,21 +166,21 @@ erase_it()\n       container_traits::order_preserving\n     };\n \n-  return (erase_it_imp(pb_ds::detail::integral_constant<int,erase_iterators>()));\n+  return (erase_it_imp(__gnu_pbds::detail::integral_constant<int,erase_iterators>()));\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-erase_it_imp(pb_ds::detail::false_type)\n+erase_it_imp(__gnu_pbds::detail::false_type)\n {\n   return (true);\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-erase_it_imp(pb_ds::detail::true_type)\n+erase_it_imp(__gnu_pbds::detail::true_type)\n {\n   PB_DS_TRACE(\"erase_it\");\n \n@@ -222,9 +222,9 @@ erase_it_imp(pb_ds::detail::true_type)\n \t  m_native_c.erase(native_it);\n \n         bool range_guarantee =\n-\t  pb_ds::detail::is_same<\n+\t  __gnu_pbds::detail::is_same<\n \t  typename container_traits::invalidation_guarantee,\n-\t  pb_ds::range_invalidation_guarantee>::value ;\n+\t  __gnu_pbds::range_invalidation_guarantee>::value ;\n \n         if (range_guarantee)\n \t  PB_DS_THROW_IF_FAILED(                next_ers_it == next_it,  \"\",  m_p_c, & m_native_c);\n@@ -255,21 +255,21 @@ erase_rev_it()\n       container_traits::reverse_iteration\n     };\n \n-  return (erase_rev_it_imp(pb_ds::detail::integral_constant<int,erase_iterators>()));\n+  return (erase_rev_it_imp(__gnu_pbds::detail::integral_constant<int,erase_iterators>()));\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-erase_rev_it_imp(pb_ds::detail::false_type)\n+erase_rev_it_imp(__gnu_pbds::detail::false_type)\n {\n   return (true);\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-erase_rev_it_imp(pb_ds::detail::true_type)\n+erase_rev_it_imp(__gnu_pbds::detail::true_type)\n {\n   PB_DS_TRACE(\"erase_rev_it\");\n "}, {"sha": "adc87271c251807615952ad2f04e68d529335f8c", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/get_set_load_fn_imps.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fget_set_load_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fget_set_load_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fget_set_load_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@ PB_DS_CLASS_C_DEC::\n get_set_load()\n {\n   typedef\n-    pb_ds::detail::integral_constant<int,\n+    __gnu_pbds::detail::integral_constant<int,\n     test_traits::get_set_load>\n     get_set_load_ind;\n \n@@ -60,13 +60,13 @@ get_set_load()\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-get_set_load_imp(pb_ds::detail::false_type)\n+get_set_load_imp(__gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-get_set_load_imp(pb_ds::detail::true_type)\n+get_set_load_imp(__gnu_pbds::detail::true_type)\n {\n   PB_DS_TRACE(\"get_set_load\");\n "}, {"sha": "10ea2aed9417aebac41e922d2aa0a21f7c815838", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/get_set_loads_fn_imps.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fget_set_loads_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fget_set_loads_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fget_set_loads_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@ PB_DS_CLASS_C_DEC::\n get_set_loads()\n {\n   typedef\n-    pb_ds::detail::integral_constant<int,\n+    __gnu_pbds::detail::integral_constant<int,\n     test_traits::get_set_loads>\n     get_set_loads_ind;\n \n@@ -60,15 +60,15 @@ get_set_loads()\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-get_set_loads_imp(pb_ds::detail::false_type)\n+get_set_loads_imp(__gnu_pbds::detail::false_type)\n {\n   return (true);\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-get_set_loads_imp(pb_ds::detail::true_type)\n+get_set_loads_imp(__gnu_pbds::detail::true_type)\n {\n   PB_DS_TRACE(\"get_set_loads\");\n "}, {"sha": "e5bf3be35b05842dad367d06cc6a480de1f570ef", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/insert_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Finsert_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Finsert_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Finsert_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -77,7 +77,7 @@ insert()\n       {\n         done = false;\n       }\n-    catch(pb_ds::insert_error&)\n+    catch(__gnu_pbds::insert_error&)\n       {\n         PB_DS_THROW_IF_FAILED(false, \"\", m_p_c, &m_native_c);\n       }"}, {"sha": "2a3c6396e8a42eec18c59cce237af3aa36d957b7", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/it_conversion_fn_imps.hpp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fit_conversion_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fit_conversion_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fit_conversion_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -195,7 +195,7 @@ rev_it_copy()\n       reverse_iteration = container_traits::reverse_iteration\n     };\n \n-  rev_it_copy_imp(pb_ds::detail::integral_constant<int,reverse_iteration>());\n+  rev_it_copy_imp(__gnu_pbds::detail::integral_constant<int,reverse_iteration>());\n }\n \n PB_DS_CLASS_T_DEC\n@@ -208,19 +208,19 @@ rev_it_assign()\n       reverse_iteration = container_traits::reverse_iteration\n     };\n \n-  rev_it_assign_imp(pb_ds::detail::integral_constant<int,reverse_iteration>());\n+  rev_it_assign_imp(__gnu_pbds::detail::integral_constant<int,reverse_iteration>());\n }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-rev_it_copy_imp(pb_ds::detail::false_type)\n+rev_it_copy_imp(__gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-rev_it_copy_imp(pb_ds::detail::true_type)\n+rev_it_copy_imp(__gnu_pbds::detail::true_type)\n {\n   {\n     typename cntnr::iterator it = m_p_c->end();\n@@ -260,13 +260,13 @@ rev_it_copy_imp(pb_ds::detail::true_type)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-rev_it_assign_imp(pb_ds::detail::false_type)\n+rev_it_assign_imp(__gnu_pbds::detail::false_type)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-rev_it_assign_imp(pb_ds::detail::true_type)\n+rev_it_assign_imp(__gnu_pbds::detail::true_type)\n {\n   {\n     typename cntnr::iterator it = m_p_c->end();"}, {"sha": "9b4f0927f6f0049bd22be3323befdef3a2624655", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/policy_access_fn_imps.hpp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fpolicy_access_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fpolicy_access_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fpolicy_access_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@ policy_access()\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_access(pb_ds::basic_hash_tag)\n+policy_access(__gnu_pbds::basic_hash_tag)\n {\n   {\n     typename Cntnr::hash_fn& r_t =\n@@ -97,9 +97,9 @@ policy_access(pb_ds::basic_hash_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_access(pb_ds::cc_hash_tag)\n+policy_access(__gnu_pbds::cc_hash_tag)\n {\n-  policy_access(pb_ds::basic_hash_tag());\n+  policy_access(__gnu_pbds::basic_hash_tag());\n \n   {\n     typename Cntnr::comb_hash_fn& r_t =\n@@ -117,9 +117,9 @@ policy_access(pb_ds::cc_hash_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_access(pb_ds::gp_hash_tag)\n+policy_access(__gnu_pbds::gp_hash_tag)\n {\n-  policy_access(pb_ds::basic_hash_tag());\n+  policy_access(__gnu_pbds::basic_hash_tag());\n \n   {\n     typename Cntnr::comb_probe_fn& r_t =\n@@ -149,7 +149,7 @@ policy_access(pb_ds::gp_hash_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_access(pb_ds::tree_tag)\n+policy_access(__gnu_pbds::tree_tag)\n {\n   {\n     typename Cntnr::cmp_fn& r_t =\n@@ -168,13 +168,13 @@ policy_access(pb_ds::tree_tag)\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_access(pb_ds::list_update_tag)\n+policy_access(__gnu_pbds::list_update_tag)\n { }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-policy_access(pb_ds::pat_trie_tag)\n+policy_access(__gnu_pbds::pat_trie_tag)\n {\n   typename Cntnr::e_access_traits& r_t =\n     m_p_c->get_e_access_traits();"}, {"sha": "77bfcb84c39cbccebed88e747cec1611eede46b0", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/resize_fn_imps.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fresize_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fresize_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fresize_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,23 +49,23 @@ bool\n PB_DS_CLASS_C_DEC::\n resize()\n {\n-  typedef pb_ds::detail::integral_constant<int, test_traits::resize> resize_ind;\n+  typedef __gnu_pbds::detail::integral_constant<int, test_traits::resize> resize_ind;\n \n   return (resize_imp(resize_ind()));\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-resize_imp(pb_ds::detail::false_type)\n+resize_imp(__gnu_pbds::detail::false_type)\n {\n   return (true);\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-resize_imp(pb_ds::detail::true_type)\n+resize_imp(__gnu_pbds::detail::true_type)\n {\n   PB_DS_TRACE(\"resize\");\n "}, {"sha": "8026d7cc2003310f9a2fb18bcb319b51ae6f815c", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/split_join_fn_imps.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fsplit_join_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fsplit_join_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fsplit_join_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -54,21 +54,21 @@ split_join()\n       split_join = container_traits::order_preserving\n     };\n \n-  return (split_join_imp(pb_ds::detail::integral_constant<int,split_join>()));\n+  return (split_join_imp(__gnu_pbds::detail::integral_constant<int,split_join>()));\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-split_join_imp(pb_ds::detail::false_type)\n+split_join_imp(__gnu_pbds::detail::false_type)\n {\n   return (true);\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-split_join_imp(pb_ds::detail::true_type)\n+split_join_imp(__gnu_pbds::detail::true_type)\n {\n   PB_DS_TRACE(\"split_join\");\n "}, {"sha": "e627595d728f6db5cbcba42453c2583852d4f1aa", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/detail/subscript_fn_imps.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fsubscript_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fsubscript_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Fdetail%2Fsubscript_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,18 +53,18 @@ subscript()\n \n   enum\n     {\n-      no_data = pb_ds::detail::is_same<\n+      no_data = __gnu_pbds::detail::is_same<\n       typename Cntnr::const_key_reference,\n       typename Cntnr::const_reference>::value\n     };\n \n-  return (subscript_imp(pb_ds::detail::integral_constant<int,no_data>()));\n+  return (subscript_imp(__gnu_pbds::detail::integral_constant<int,no_data>()));\n }\n \n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-subscript_imp(pb_ds::detail::false_type)\n+subscript_imp(__gnu_pbds::detail::false_type)\n {\n   bool done = true;\n \n@@ -97,7 +97,7 @@ subscript_imp(pb_ds::detail::false_type)\n PB_DS_CLASS_T_DEC\n bool\n PB_DS_CLASS_C_DEC::\n-subscript_imp(pb_ds::detail::true_type)\n+subscript_imp(__gnu_pbds::detail::true_type)\n {\n   bool done = true;\n \n@@ -110,7 +110,7 @@ subscript_imp(pb_ds::detail::true_type)\n         value_type v = test_traits::generate_value(m_g, m_m);\n \n         m_alloc.set_throw_prob(m_tp);\n-\t(*m_p_c)[v] = pb_ds::null_mapped_type();\n+\t(*m_p_c)[v] = __gnu_pbds::null_mapped_type();\n \n         m_native_c.insert(test_traits::native_value(v));\n       }"}, {"sha": "2f79df56dcebef808c7ae7c325785b26fbbe2e1a", "filename": "libstdc++-v3/testsuite/util/regression/rand/assoc/rand_regression_test.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Frand_regression_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Frand_regression_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fassoc%2Frand_regression_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <regression/basic_type.hpp>\n #include <regression/assoc/common_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -123,7 +123,7 @@ namespace detail\n       {\n \tdetail::verify_params(sd, n, m, tp, ip, ep, cp, mp, disp);\n       }\n-    catch (pb_ds::test::illegal_input_error&)\n+    catch (__gnu_pbds::test::illegal_input_error&)\n       {\n \tdetail::usage(name);\n \treturn -1;\n@@ -205,6 +205,6 @@ namespace detail\n   }\n } // namespace detail\n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "db9ed28efb8bafea736193eec6a2c3a584c37eb7", "filename": "libstdc++-v3/testsuite/util/regression/rand/io/assoc/xml_formatter.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fassoc%2Fxml_formatter.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fassoc%2Fxml_formatter.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fassoc%2Fxml_formatter.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <regression/rand/io/xml_formatter.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -76,6 +76,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_XML_TEST_REGRESSION_FORMATTER_HPP"}, {"sha": "af6f5d242b9d5dba2c187b0b5879e5c6ec3ac662", "filename": "libstdc++-v3/testsuite/util/regression/rand/io/priority_queue/xml_formatter.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fpriority_queue%2Fxml_formatter.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fpriority_queue%2Fxml_formatter.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fpriority_queue%2Fxml_formatter.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -49,7 +49,7 @@\n \n #include <regression/rand/io/xml_formatter.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -77,6 +77,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_XML_TEST_REGRESSION_FORMATTER_HPP"}, {"sha": "7006618bd477757fb41eec7c4bac628bb55438c9", "filename": "libstdc++-v3/testsuite/util/regression/rand/io/xml_formatter.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fxml_formatter.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fxml_formatter.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fio%2Fxml_formatter.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <iostream>\n #include <io/xml_test_formatter.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -82,6 +82,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_COMMON_XML_TEST_REGRESSION_FORMATTER_HPP"}, {"sha": "eeedc27bdcacced9708119dcb8a955a7d657ab1f", "filename": "libstdc++-v3/testsuite/util/regression/rand/priority_queue/container_rand_regression_test.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fcontainer_rand_regression_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fcontainer_rand_regression_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fcontainer_rand_regression_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -60,7 +60,7 @@\n #include <regression/rand/io/priority_queue/xml_formatter.hpp>\n #include <regression/trait/priority_queue/trait.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -329,6 +329,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_CONTAINER_RAND_REGRESSION_TEST_HPP"}, {"sha": "b25394fa34d4733ed480ce86e1f43a6232ef6cfc", "filename": "libstdc++-v3/testsuite/util/regression/rand/priority_queue/detail/split_join_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fdetail%2Fsplit_join_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fdetail%2Fsplit_join_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fdetail%2Fsplit_join_fn_imps.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -109,7 +109,7 @@ split_join()\n       {\n         done = false;\n \n-        PB_DS_THROW_IF_FAILED(            pb_ds::container_traits<cntnr>::split_join_can_throw, pb_ds::container_traits<cntnr>::split_join_can_throw, m_p_c, & m_native_c);\n+        PB_DS_THROW_IF_FAILED(            __gnu_pbds::container_traits<cntnr>::split_join_can_throw, __gnu_pbds::container_traits<cntnr>::split_join_can_throw, m_p_c, & m_native_c);\n       }\n \n   PB_DS_COND_COMPARE(*m_p_c, m_native_c);"}, {"sha": "80f941a6db9f9a7589f85ac8db91bd7780337f6a", "filename": "libstdc++-v3/testsuite/util/regression/rand/priority_queue/rand_regression_test.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Frand_regression_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Frand_regression_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Frand_regression_test.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -55,7 +55,7 @@\n #include <regression/basic_type.hpp>\n #include <regression/priority_queue/common_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -125,7 +125,7 @@ namespace detail\n       {\n \tdetail::verify_params(sd, n, m, tp, ip, dp, ep, cp, mp, disp);\n       }\n-    catch(pb_ds::test::illegal_input_error&)\n+    catch(__gnu_pbds::test::illegal_input_error&)\n       {\n \tdetail::usage(name);\n \treturn -1;\n@@ -209,6 +209,6 @@ namespace detail\n   }\n } // namespace detail\n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "a796b81b732a45f7e23b622932ed49463a2dcab1", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/get_set_load_trait.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fget_set_load_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fget_set_load_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fget_set_load_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <ext/pb_ds/assoc_container.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -80,21 +80,21 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_get_set_load_traits<\n         Cntnr,\n-        pb_ds::cc_hash_tag> : public regression_test_hash_get_set_load_traits<\n+        __gnu_pbds::cc_hash_tag> : public regression_test_hash_get_set_load_traits<\n         Cntnr>\n       { };\n \n       template<typename Cntnr>\n       struct regression_test_get_set_load_traits<\n         Cntnr,\n-        pb_ds::gp_hash_tag> : public regression_test_hash_get_set_load_traits<\n+        __gnu_pbds::gp_hash_tag> : public regression_test_hash_get_set_load_traits<\n         Cntnr>\n       { };\n \n     } // namespace detail\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_REGRESSION_TEST_SET_LOAD_TRAIT_HPP"}, {"sha": "389ad6467fe09f53709e7c886ef289cf61fc508a", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/get_set_loads_trait.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fget_set_loads_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fget_set_loads_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fget_set_loads_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <ext/pb_ds/assoc_container.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -80,21 +80,21 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_get_set_loacontainer_traits<\n         Cntnr,\n-        pb_ds::cc_hash_tag> : public regression_test_hash_get_set_loacontainer_traits<\n+        __gnu_pbds::cc_hash_tag> : public regression_test_hash_get_set_loacontainer_traits<\n         Cntnr>\n       { };\n \n       template<typename Cntnr>\n       struct regression_test_get_set_loacontainer_traits<\n         Cntnr,\n-        pb_ds::gp_hash_tag> : public regression_test_hash_get_set_loacontainer_traits<\n+        __gnu_pbds::gp_hash_tag> : public regression_test_hash_get_set_loacontainer_traits<\n         Cntnr>\n       { };\n \n     } // namespace detail\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_REGRESSION_TEST_SET_LOADS_TRAIT_HPP"}, {"sha": "d70c88339ddeb9e919820aabffb1a156529e764d", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/native_type_trait.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fnative_type_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fnative_type_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fnative_type_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -48,7 +48,7 @@\n #ifndef PB_DS_REGRESSION_TEST_NATIVE_TYPE_TRAIT_HPP\n #define PB_DS_REGRESSION_TEST_NATIVE_TYPE_TRAIT_HPP\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -133,7 +133,7 @@ namespace pb_ds\n       struct native_type_traits_base<\n \tNative_Key_Type,\n \tKey_Type,\n-\tpb_ds::null_mapped_type,\n+\t__gnu_pbds::null_mapped_type,\n \tAllocator>\n       {\n       public:\n@@ -190,6 +190,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_REGRESSION_TEST_NATIVE_TYPE_TRAIT_HPP"}, {"sha": "ff3004279f4340753968f9d2287cffaef25fc9e8", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/node_update_trait.hpp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fnode_update_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fnode_update_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fnode_update_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -53,7 +53,7 @@\n #include <common_type/assoc/detail/trie_supports_order_statistics.hpp>\n #include <common_type/assoc/detail/trie_supports_prefix_search.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -75,7 +75,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_node_update_traits<\n \tCntnr,\n-\tpb_ds::pat_trie_tag>\n+\t__gnu_pbds::pat_trie_tag>\n       {\n \tenum\n \t  {\n@@ -89,7 +89,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_node_update_traits<\n \tCntnr,\n-\tpb_ds::rb_tree_tag>\n+\t__gnu_pbds::rb_tree_tag>\n       {\n \tenum\n \t  {\n@@ -102,7 +102,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_node_update_traits<\n \tCntnr,\n-\tpb_ds::splay_tree_tag>\n+\t__gnu_pbds::splay_tree_tag>\n       {\n \tenum\n \t  {\n@@ -115,7 +115,7 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_node_update_traits<\n \tCntnr,\n-\tpb_ds::ov_tree_tag>\n+\t__gnu_pbds::ov_tree_tag>\n       {\n \tenum\n \t  {\n@@ -129,6 +129,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_REGRESSION_TEST_NODE_UPDATOR_TRAIT_HPP"}, {"sha": "932a0ccbc1ac9fdcd9a6b67703c59fee178675b0", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/resize_trait.hpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fresize_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fresize_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fresize_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <ext/pb_ds/assoc_container.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -80,21 +80,21 @@ namespace pb_ds\n       template<typename Cntnr>\n       struct regression_test_resize_traits<\n         Cntnr,\n-        pb_ds::cc_hash_tag> : public regression_test_hash_resize_traits<\n+        __gnu_pbds::cc_hash_tag> : public regression_test_hash_resize_traits<\n         Cntnr>\n       { };\n \n       template<typename Cntnr>\n       struct regression_test_resize_traits<\n         Cntnr,\n-        pb_ds::gp_hash_tag> : public regression_test_hash_resize_traits<\n+        __gnu_pbds::gp_hash_tag> : public regression_test_hash_resize_traits<\n         Cntnr>\n       { };\n \n     } // namespace detail\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_REGRESSION_TEST_RESIZE_TRAIT_HPP"}, {"sha": "a0ba69388a299b7503849a82c1cb926f1a803010", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/to_string.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fto_string.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fto_string.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Fto_string.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <regression/basic_type.hpp>\n #include <string>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n \n   namespace test\n@@ -86,6 +86,6 @@ namespace pb_ds\n \n   } // namespace test\n \n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_REGRESSION_TEST_TO_STRING_HPP"}, {"sha": "e8791a4472ad4fa67fc7833dde157e865094141e", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/trait.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Ftrait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Ftrait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Ftrait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -57,7 +57,7 @@\n #include <regression/trait/assoc/node_update_trait.hpp>\n #include <regression/trait/erase_if_fn.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n namespace test\n {\n@@ -214,6 +214,6 @@ namespace detail\n \n } // namespace detail\n } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif"}, {"sha": "5c0682de38f55495812c8b9acb02d3f7fdb41fc0", "filename": "libstdc++-v3/testsuite/util/regression/trait/assoc/type_trait.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Ftype_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Ftype_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fassoc%2Ftype_trait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <regression/basic_type.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -92,7 +92,7 @@ namespace pb_ds\n \n \ttemplate<typename Gen>\n \tstatic value_type\n-        generate_value(Gen& r_gen, size_t max, pb_ds::null_mapped_type)\n+        generate_value(Gen& r_gen, size_t max, __gnu_pbds::null_mapped_type)\n \t{ return basic_type(r_gen, max); }\n \n \ttemplate<typename Gen>\n@@ -116,6 +116,6 @@ namespace pb_ds\n       };\n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "41618a6843e7876c5c954371c90c2812ca839936", "filename": "libstdc++-v3/testsuite/util/regression/trait/erase_if_fn.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Ferase_if_fn.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Ferase_if_fn.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Ferase_if_fn.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <functional>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -90,6 +90,6 @@ namespace pb_ds\n       };\n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "f2875105649cdb220e7c2856ddc41bde32b085d4", "filename": "libstdc++-v3/testsuite/util/regression/trait/priority_queue/trait.hpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fpriority_queue%2Ftrait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fpriority_queue%2Ftrait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Ftrait%2Fpriority_queue%2Ftrait.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n \n #include <regression/trait/erase_if_fn.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -61,7 +61,7 @@ namespace pb_ds\n       {\n \ttypedef typename Cntnr::value_type value_type;\n \ttypedef typename Cntnr::const_reference const_reference;\n-\ttypedef pb_ds::test::native_priority_queue<std::string, true> native_type;\n+\ttypedef __gnu_pbds::test::native_priority_queue<std::string, true> native_type;\n \ttypedef typename native_type::value_type native_value_type;\n \n \ttemplate<typename T>\n@@ -87,6 +87,6 @@ namespace pb_ds\n       };\n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif "}, {"sha": "a0c74586a4165f6ae0f49f87e048a194986e3d28", "filename": "libstdc++-v3/testsuite/util/rng/twister_rand_gen.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Frng%2Ftwister_rand_gen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Frng%2Ftwister_rand_gen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Frng%2Ftwister_rand_gen.cc?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -47,7 +47,7 @@\n #include <debug/debug.h>\n #include <util/rng/twister_rand_gen.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -92,4 +92,4 @@ namespace pb_ds\n       return ret;\n     }\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds"}, {"sha": "0088dac76f744a3f80b290cc6bcf0c1ee3ad658f", "filename": "libstdc++-v3/testsuite/util/rng/twister_rand_gen.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Frng%2Ftwister_rand_gen.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Frng%2Ftwister_rand_gen.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Frng%2Ftwister_rand_gen.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -50,7 +50,7 @@\n #include <limits.h>\n #include <tr1/random>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -81,6 +81,6 @@ namespace pb_ds\n       base_generator_t m_base_generator;\n     };\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif // #ifndef PB_DS_TWISTER_RAND_GEN_HPP"}, {"sha": "438fd845311084c5cdc5d3ca06fdc263ef5f00c8", "filename": "libstdc++-v3/testsuite/util/statistic/result_recorder.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fresult_recorder.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fresult_recorder.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fresult_recorder.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <statistic/sample_variance.hpp>\n #include <statistic/sample_mean_confidence_checker.hpp>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -102,7 +102,7 @@ namespace pb_ds\n       }\n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "98a7784cefff026be57509d4d173e0d3bdf87eb1", "filename": "libstdc++-v3/testsuite/util/statistic/sample_mean.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_mean.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_mean.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_mean.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <math.h>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -73,7 +73,7 @@ namespace pb_ds\n \n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "837fd665f0d0fdd7f157547237814e1a0a359abf", "filename": "libstdc++-v3/testsuite/util/statistic/sample_mean_confidence_checker.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_mean_confidence_checker.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_mean_confidence_checker.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_mean_confidence_checker.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -51,7 +51,7 @@\n #include <numeric>\n #include <math.h>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -88,7 +88,7 @@ namespace pb_ds\n       }\n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}, {"sha": "3d7d422c835b0cfe37eb3f181e46df108ee30b49", "filename": "libstdc++-v3/testsuite/util/statistic/sample_variance.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_variance.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e11f978edb440183b510ee5ead717a03d6fcc6a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_variance.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fstatistic%2Fsample_variance.hpp?ref=5e11f978edb440183b510ee5ead717a03d6fcc6a", "patch": "@@ -52,7 +52,7 @@\n #include <math.h>\n #include <iterator>\n \n-namespace pb_ds\n+namespace __gnu_pbds\n {\n   namespace test\n   {\n@@ -85,7 +85,7 @@ namespace pb_ds\n \n     } // namespace detail\n   } // namespace test\n-} // namespace pb_ds\n+} // namespace __gnu_pbds\n \n #endif \n "}]}