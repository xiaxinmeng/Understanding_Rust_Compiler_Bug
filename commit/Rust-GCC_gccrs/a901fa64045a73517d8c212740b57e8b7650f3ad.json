{"sha": "a901fa64045a73517d8c212740b57e8b7650f3ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkwMWZhNjQwNDVhNzM1MTdkOGMyMTI3NDBiNTdlOGI3NjUwZjNhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-02-16T12:46:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-02-16T12:46:21Z"}, "message": "tree.h (BLOCK_CHAIN): Use BLOCK_CHECK.\n\n        * tree.h (BLOCK_CHAIN): Use BLOCK_CHECK.\n        * optimize.c (remap_block): If we're compiling a clone, pass the\n        new block to insert_block.\n\nFrom-SVN: r39761", "tree": {"sha": "02bc8e10dd88d80fb926fee0cc4adbd132f00001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02bc8e10dd88d80fb926fee0cc4adbd132f00001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a901fa64045a73517d8c212740b57e8b7650f3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a901fa64045a73517d8c212740b57e8b7650f3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a901fa64045a73517d8c212740b57e8b7650f3ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a901fa64045a73517d8c212740b57e8b7650f3ad/comments", "author": null, "committer": null, "parents": [{"sha": "cc06d68c8c854a3f1394da9dc0eb5365de5f6d71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc06d68c8c854a3f1394da9dc0eb5365de5f6d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc06d68c8c854a3f1394da9dc0eb5365de5f6d71"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "6e3517b5fdce23a6ec71283ad8d78e62eb8699c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a901fa64045a73517d8c212740b57e8b7650f3ad", "patch": "@@ -1,3 +1,7 @@\n+2001-02-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (BLOCK_CHAIN): Use BLOCK_CHECK.\n+\n 2001-02-16  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* .gdbinit: Rename to gdbinit.in.\n@@ -196,7 +200,7 @@ Tue Feb 13 23:19:27 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n Tue Feb 13 23:05:42 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n- \t* regclass.c (init_reg_sets_1): Silence warning.\n+\t* regclass.c (init_reg_sets_1): Silence warning.\n \n Tue Feb 13 22:03:07 CET 2001  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "d7149eb759f67d7325a625d6b5ec3f73aeb62a07", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a901fa64045a73517d8c212740b57e8b7650f3ad", "patch": "@@ -1,3 +1,8 @@\n+2001-02-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* optimize.c (remap_block): If we're compiling a clone, pass the\n+\tnew block to insert_block.\n+\n 2001-02-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* semantics.c (finish_asm_stmt): Robustify.\n@@ -29,8 +34,8 @@\n \n 2001-02-08  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * cp/parse.y (component_constructor_declarator): allow optional\n-        parenthesess around constructor class name.\n+\t* parse.y (component_constructor_declarator): allow optional\n+\tparentheses around constructor class name.\n \n 2001-02-14  Nathan Sidwell  <nathan@codesourcery.com>\n "}, {"sha": "e18ece97e918bbff71232715d5498bdf4513f3e7", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=a901fa64045a73517d8c212740b57e8b7650f3ad", "patch": "@@ -161,7 +161,6 @@ remap_block (scope_stmt, decls, id)\n       tree old_block;\n       tree new_block;\n       tree old_var;\n-      tree *first_block;\n       tree fn;\n \n       /* Make the new block.  */\n@@ -195,16 +194,24 @@ remap_block (scope_stmt, decls, id)\n \t}\n       /* We put the BLOCK_VARS in reverse order; fix that now.  */\n       BLOCK_VARS (new_block) = nreverse (BLOCK_VARS (new_block));\n-      /* Attach this new block after the DECL_INITIAL block for the\n-\t function into which this block is being inlined.  In\n-\t rest_of_compilation we will straighten out the BLOCK tree.  */\n       fn = VARRAY_TREE (id->fns, 0);\n-      if (DECL_INITIAL (fn))\n-\tfirst_block = &BLOCK_CHAIN (DECL_INITIAL (fn));\n+      if (fn == current_function_decl)\n+\t/* We're building a clone; DECL_INITIAL is still error_mark_node, and\n+\t   current_binding_level is the parm binding level.  */\n+\tinsert_block (new_block);\n       else\n-\tfirst_block = &DECL_INITIAL (fn);\n-      BLOCK_CHAIN (new_block) = *first_block;\n-      *first_block = new_block;\n+\t{\n+\t  /* Attach this new block after the DECL_INITIAL block for the\n+\t     function into which this block is being inlined.  In\n+\t     rest_of_compilation we will straighten out the BLOCK tree.  */\n+\t  tree *first_block;\n+\t  if (DECL_INITIAL (fn))\n+\t    first_block = &BLOCK_CHAIN (DECL_INITIAL (fn));\n+\t  else\n+\t    first_block = &DECL_INITIAL (fn);\n+\t  BLOCK_CHAIN (new_block) = *first_block;\n+\t  *first_block = new_block;\n+\t}\n       /* Remember the remapped block.  */\n       splay_tree_insert (id->decl_map,\n \t\t\t (splay_tree_key) old_block,"}, {"sha": "60427b998b239e4b5db8b0ccec0d4f6693398234", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a901fa64045a73517d8c212740b57e8b7650f3ad/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a901fa64045a73517d8c212740b57e8b7650f3ad", "patch": "@@ -823,7 +823,7 @@ struct tree_exp\n #define BLOCK_SUPERCONTEXT(NODE) (BLOCK_CHECK (NODE)->block.supercontext)\n /* Note: when changing this, make sure to find the places\n    that use chainon or nreverse.  */\n-#define BLOCK_CHAIN(NODE) TREE_CHAIN (NODE)\n+#define BLOCK_CHAIN(NODE) TREE_CHAIN (BLOCK_CHECK (NODE))\n #define BLOCK_ABSTRACT_ORIGIN(NODE) (BLOCK_CHECK (NODE)->block.abstract_origin)\n #define BLOCK_ABSTRACT(NODE) (BLOCK_CHECK (NODE)->block.abstract_flag)\n "}]}