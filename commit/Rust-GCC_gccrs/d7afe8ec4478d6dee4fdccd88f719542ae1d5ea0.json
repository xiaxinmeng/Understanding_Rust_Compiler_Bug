{"sha": "d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhZmU4ZWM0NDc4ZDZkZWU0ZmRjY2Q4OGY3MTk1NDJhZTFkNWVhMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-05T05:41:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-05T05:41:34Z"}, "message": "real.c (GET_REAL): Don't violate ANSI/ISO aliasing rules.\n\n\n        * real.c (GET_REAL): Don't violate ANSI/ISO aliasing rules.\n        (PUT_REAL): Likewise.\n\nFrom-SVN: r28521", "tree": {"sha": "44b02777f0fc79323fcb30fba49f6d94ef81e9ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44b02777f0fc79323fcb30fba49f6d94ef81e9ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0/comments", "author": null, "committer": null, "parents": [{"sha": "67a60018259cec4835f6ce45753f9cae89e5a833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a60018259cec4835f6ce45753f9cae89e5a833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67a60018259cec4835f6ce45753f9cae89e5a833"}], "stats": {"total": 57, "additions": 31, "deletions": 26}, "files": [{"sha": "fee7376c39b624892b7e4ae4d271c8deafff2eab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0", "patch": "@@ -1,3 +1,8 @@\n+Wed Aug  4 23:39:20 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* real.c (GET_REAL): Don't violate ANSI/ISO aliasing rules.\n+\t(PUT_REAL): Likewise.\n+\n Wed Aug  4 20:45:04 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* final.c (shorten_branches): Don't add an alignment for loops"}, {"sha": "6594bd8c1f3323a0bdbb00d04800122b7d3b8493", "filename": "gcc/real.c", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=d7afe8ec4478d6dee4fdccd88f719542ae1d5ea0", "patch": "@@ -274,34 +274,34 @@ do {\t\t\t\t\t\t\\\n /* Emulator uses target format internally\n    but host stores it in host endian-ness.  */\n \n-#define GET_REAL(r,e)\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-     if (HOST_FLOAT_WORDS_BIG_ENDIAN == REAL_WORDS_BIG_ENDIAN)\t\\\n-       e53toe ((unsigned EMUSHORT *) (r), (e));\t\t\t\\\n-     else\t\t\t\t\t\t\t\\\n-       {\t\t\t\t\t\t\t\\\n-\t unsigned EMUSHORT w[4];\t\t\t\t\\\n-\t w[3] = ((EMUSHORT *) r)[0];\t\t\t\t\\\n-\t w[2] = ((EMUSHORT *) r)[1];\t\t\t\t\\\n-\t w[1] = ((EMUSHORT *) r)[2];\t\t\t\t\\\n-\t w[0] = ((EMUSHORT *) r)[3];\t\t\t\t\\\n-\t e53toe (w, (e));\t\t\t\t\t\\\n-       }\t\t\t\t\t\t\t\\\n+#define GET_REAL(r,e)\t\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+     if (HOST_FLOAT_WORDS_BIG_ENDIAN == REAL_WORDS_BIG_ENDIAN)\t\t\\\n+       e53toe ((unsigned EMUSHORT *) (r), (e));\t\t\t\t\\\n+     else\t\t\t\t\t\t\t\t\\\n+       {\t\t\t\t\t\t\t\t\\\n+\t unsigned EMUSHORT w[4];\t\t\t\t\t\\\n+         bcopy (((EMUSHORT *) r), &w[3], sizeof (EMUSHORT));\t\t\\\n+         bcopy (((EMUSHORT *) r) + 1, &w[2], sizeof (EMUSHORT));\t\\\n+\t bcopy (((EMUSHORT *) r) + 2, &w[1], sizeof (EMUSHORT));\t\\\n+\t bcopy (((EMUSHORT *) r) + 3, &w[0], sizeof (EMUSHORT));\t\\\n+\t e53toe (w, (e));\t\t\t\t\t\t\\\n+       }\t\t\t\t\t\t\t\t\\\n    } while (0)\n \n-#define PUT_REAL(e,r)\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-     if (HOST_FLOAT_WORDS_BIG_ENDIAN == REAL_WORDS_BIG_ENDIAN)\t\\\n-       etoe53 ((e), (unsigned EMUSHORT *) (r));\t\t\t\\\n-     else\t\t\t\t\t\t\t\\\n-       {\t\t\t\t\t\t\t\\\n-\t unsigned EMUSHORT w[4];\t\t\t\t\\\n-\t etoe53 ((e), w);\t\t\t\t\t\\\n-\t *((EMUSHORT *) r) = w[3];\t\t\t\t\\\n-\t *((EMUSHORT *) r + 1) = w[2];\t\t\t\t\\\n-\t *((EMUSHORT *) r + 2) = w[1];\t\t\t\t\\\n-\t *((EMUSHORT *) r + 3) = w[0];\t\t\t\t\\\n-       }\t\t\t\t\t\t\t\\\n+#define PUT_REAL(e,r)\t\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+     if (HOST_FLOAT_WORDS_BIG_ENDIAN == REAL_WORDS_BIG_ENDIAN)\t\t\\\n+       etoe53 ((e), (unsigned EMUSHORT *) (r));\t\t\t\t\\\n+     else\t\t\t\t\t\t\t\t\\\n+       {\t\t\t\t\t\t\t\t\\\n+\t unsigned EMUSHORT w[4];\t\t\t\t\t\\\n+\t etoe53 ((e), w);\t\t\t\t\t\t\\\n+         bcopy (&w[3], ((EMUSHORT *) r), sizeof (EMUSHORT));\t\t\\\n+         bcopy (&w[2], ((EMUSHORT *) r) + 1, sizeof (EMUSHORT));\t\\\n+         bcopy (&w[1], ((EMUSHORT *) r) + 2, sizeof (EMUSHORT));\t\\\n+         bcopy (&w[0], ((EMUSHORT *) r) + 3, sizeof (EMUSHORT));\t\\\n+       }\t\t\t\t\t\t\t\t\\\n    } while (0)\n \n #else /* not REAL_ARITHMETIC */"}]}