{"sha": "e239397b2cffa9666a7438b47b7e7e129a450453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzOTM5N2IyY2ZmYTk2NjZhNzQzOGI0N2I3ZTdlMTI5YTQ1MDQ1Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-06T13:11:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-06T13:11:56Z"}, "message": "sse.md (sse_shufps_<mode>, [...]): Use v instead of x in vex or maybe_vex alternatives...\n\n\t* config/i386/sse.md (sse_shufps_<mode>, sse_storehps, sse_loadhps,\n\tsse_storelps, sse_movss, avx2_vec_dup<mode>, avx2_vec_dupv8sf_1,\n\tsse2_shufpd_<mode>, sse2_storehpd, sse2_storelpd, sse2_loadhpd,\n\tsse2_loadlpd, sse2_movsd): Use v instead of x in vex or maybe_vex\n\talternatives, use maybe_evex instead of vex in prefix.\n\nFrom-SVN: r235968", "tree": {"sha": "0dafe95fa63bdf828178c374aea573afad6e04ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dafe95fa63bdf828178c374aea573afad6e04ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e239397b2cffa9666a7438b47b7e7e129a450453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e239397b2cffa9666a7438b47b7e7e129a450453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e239397b2cffa9666a7438b47b7e7e129a450453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e239397b2cffa9666a7438b47b7e7e129a450453/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa13cb15197e813b94abe03711f9b581cff5f6e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa13cb15197e813b94abe03711f9b581cff5f6e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa13cb15197e813b94abe03711f9b581cff5f6e1"}], "stats": {"total": 98, "additions": 52, "deletions": 46}, "files": [{"sha": "1da353ce958e2ef082f064e4149a2cd2f4662a30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e239397b2cffa9666a7438b47b7e7e129a450453/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e239397b2cffa9666a7438b47b7e7e129a450453/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e239397b2cffa9666a7438b47b7e7e129a450453", "patch": "@@ -1,5 +1,11 @@\n 2016-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (sse_shufps_<mode>, sse_storehps, sse_loadhps,\n+\tsse_storelps, sse_movss, avx2_vec_dup<mode>, avx2_vec_dupv8sf_1,\n+\tsse2_shufpd_<mode>, sse2_storehpd, sse2_storelpd, sse2_loadhpd,\n+\tsse2_loadlpd, sse2_movsd): Use v instead of x in vex or maybe_vex\n+\talternatives, use maybe_evex instead of vex in prefix.\n+\n \t* config/i386/sse.md (vec_interleave_lowv4sf,\n \t*vec_interleave_highv2df, *vec_interleave_lowv2df): Use\n \tv instead of x in vex or maybe_vex alternatives, use"}, {"sha": "3b31d57d1190024ab4fe5d886b44d7c786b56812", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e239397b2cffa9666a7438b47b7e7e129a450453/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e239397b2cffa9666a7438b47b7e7e129a450453/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e239397b2cffa9666a7438b47b7e7e129a450453", "patch": "@@ -6219,11 +6219,11 @@\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"sse_shufps_<mode>\"\n-  [(set (match_operand:VI4F_128 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:VI4F_128 0 \"register_operand\" \"=x,v\")\n \t(vec_select:VI4F_128\n \t  (vec_concat:<ssedoublevecmode>\n-\t    (match_operand:VI4F_128 1 \"register_operand\" \"0,x\")\n-\t    (match_operand:VI4F_128 2 \"vector_operand\" \"xBm,xm\"))\n+\t    (match_operand:VI4F_128 1 \"register_operand\" \"0,v\")\n+\t    (match_operand:VI4F_128 2 \"vector_operand\" \"xBm,vm\"))\n \t  (parallel [(match_operand 3 \"const_0_to_3_operand\")\n \t\t     (match_operand 4 \"const_0_to_3_operand\")\n \t\t     (match_operand 5 \"const_4_to_7_operand\")\n@@ -6250,13 +6250,13 @@\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseshuf\")\n    (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"sse_storehps\"\n-  [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"=m,x,x\")\n+  [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"=m,v,v\")\n \t(vec_select:V2SF\n-\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,o\")\n+\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \"v,v,o\")\n \t  (parallel [(const_int 2) (const_int 3)])))]\n   \"TARGET_SSE\"\n   \"@\n@@ -6288,12 +6288,12 @@\n })\n \n (define_insn \"sse_loadhps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,x,x,o\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,v,x,v,o\")\n \t(vec_concat:V4SF\n \t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,x,0,x,0\")\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,v,0,v,0\")\n \t    (parallel [(const_int 0) (const_int 1)]))\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\"   \" m,m,x,x,x\")))]\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\"   \" m,m,x,v,v\")))]\n   \"TARGET_SSE\"\n   \"@\n    movhps\\t{%2, %0|%0, %q2}\n@@ -6303,13 +6303,13 @@\n    %vmovlps\\t{%2, %H0|%H0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,maybe_vex\")\n    (set_attr \"mode\" \"V2SF,V2SF,V4SF,V4SF,V2SF\")])\n \n (define_insn \"sse_storelps\"\n-  [(set (match_operand:V2SF 0 \"nonimmediate_operand\"   \"=m,x,x\")\n+  [(set (match_operand:V2SF 0 \"nonimmediate_operand\"   \"=m,v,v\")\n \t(vec_select:V2SF\n-\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,x,m\")\n+\t  (match_operand:V4SF 1 \"nonimmediate_operand\" \" v,v,m\")\n \t  (parallel [(const_int 0) (const_int 1)])))]\n   \"TARGET_SSE\"\n   \"@\n@@ -6341,11 +6341,11 @@\n })\n \n (define_insn \"sse_loadlps\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,x,x,m\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,v,x,v,m\")\n \t(vec_concat:V4SF\n-\t  (match_operand:V2SF 2 \"nonimmediate_operand\"   \" 0,x,m,m,x\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\"   \" 0,v,m,m,v\")\n \t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,x,0,x,0\")\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" x,v,0,v,0\")\n \t    (parallel [(const_int 2) (const_int 3)]))))]\n   \"TARGET_SSE\"\n   \"@\n@@ -6357,46 +6357,46 @@\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"sseshuf,sseshuf,ssemov,ssemov,ssemov\")\n    (set_attr \"length_immediate\" \"1,1,*,*,*\")\n-   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n (define_insn \"sse_movss\"\n-  [(set (match_operand:V4SF 0 \"register_operand\"   \"=x,x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\"   \"=x,v\")\n \t(vec_merge:V4SF\n-\t  (match_operand:V4SF 2 \"register_operand\" \" x,x\")\n-\t  (match_operand:V4SF 1 \"register_operand\" \" 0,x\")\n+\t  (match_operand:V4SF 2 \"register_operand\" \" x,v\")\n+\t  (match_operand:V4SF 1 \"register_operand\" \" 0,v\")\n \t  (const_int 1)))]\n   \"TARGET_SSE\"\n   \"@\n    movss\\t{%2, %0|%0, %2}\n    vmovss\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"avx2_vec_dup<mode>\"\n-  [(set (match_operand:VF1_128_256 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:VF1_128_256 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:VF1_128_256\n \t  (vec_select:SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"x\")\n+\t    (match_operand:V4SF 1 \"register_operand\" \"v\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_AVX2\"\n   \"vbroadcastss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sselog1\")\n-    (set_attr \"prefix\" \"vex\")\n+    (set_attr \"prefix\" \"maybe_evex\")\n     (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"avx2_vec_dupv8sf_1\"\n-  [(set (match_operand:V8SF 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8SF 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:V8SF\n \t  (vec_select:SF\n-\t    (match_operand:V8SF 1 \"register_operand\" \"x\")\n+\t    (match_operand:V8SF 1 \"register_operand\" \"v\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_AVX2\"\n   \"vbroadcastss\\t{%x1, %0|%0, %x1}\"\n   [(set_attr \"type\" \"sselog1\")\n-    (set_attr \"prefix\" \"vex\")\n+    (set_attr \"prefix\" \"maybe_evex\")\n     (set_attr \"mode\" \"V8SF\")])\n \n (define_insn \"avx512f_vec_dup<mode>_1\"\n@@ -8248,11 +8248,11 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse2_shufpd_<mode>\"\n-  [(set (match_operand:VI8F_128 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:VI8F_128 0 \"register_operand\" \"=x,v\")\n \t(vec_select:VI8F_128\n \t  (vec_concat:<ssedoublevecmode>\n-\t    (match_operand:VI8F_128 1 \"register_operand\" \"0,x\")\n-\t    (match_operand:VI8F_128 2 \"vector_operand\" \"xBm,xm\"))\n+\t    (match_operand:VI8F_128 1 \"register_operand\" \"0,v\")\n+\t    (match_operand:VI8F_128 2 \"vector_operand\" \"xBm,vm\"))\n \t  (parallel [(match_operand 3 \"const_0_to_1_operand\")\n \t\t     (match_operand 4 \"const_2_to_3_operand\")])))]\n   \"TARGET_SSE2\"\n@@ -8275,15 +8275,15 @@\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseshuf\")\n    (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex\")\n    (set_attr \"mode\" \"V2DF\")])\n \n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"sse2_storehpd\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\"     \"=m,x,x,x,*f,r\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\"     \"=m,x,v,x,*f,r\")\n \t(vec_select:DF\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,0,x,o,o,o\")\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" v,0,v,o,o,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_SSE2 && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -8301,7 +8301,7 @@\n \t    (not (match_test \"TARGET_AVX\")))\n        (const_string \"1\")\n        (const_string \"*\")))\n-   (set_attr \"prefix\" \"maybe_vex,orig,vex,*,*,*\")\n+   (set_attr \"prefix\" \"maybe_vex,orig,maybe_evex,*,*,*\")\n    (set_attr \"mode\" \"V1DF,V1DF,V2DF,DF,DF,DF\")])\n \n (define_split\n@@ -8332,7 +8332,7 @@\n (define_insn \"sse2_storelpd\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"     \"=m,x,x,*f,r\")\n \t(vec_select:DF\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,x,m,m,m\")\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" v,x,m,m,m\")\n \t  (parallel [(const_int 0)])))]\n   \"TARGET_SSE2 && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -8393,14 +8393,14 @@\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"sse2_loadhpd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"\n-\t  \"=x,x,x,x,o,o ,o\")\n+\t  \"=x,v,x,v,o,o ,o\")\n \t(vec_concat:V2DF\n \t  (vec_select:DF\n \t    (match_operand:V2DF 1 \"nonimmediate_operand\"\n-\t  \" 0,x,0,x,0,0 ,0\")\n+\t  \" 0,v,0,v,0,0 ,0\")\n \t    (parallel [(const_int 0)]))\n \t  (match_operand:DF 2 \"nonimmediate_operand\"\n-\t  \" m,m,x,x,x,*f,r\")))]\n+\t  \" m,m,x,v,x,*f,r\")))]\n   \"TARGET_SSE2 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    movhpd\\t{%2, %0|%0, %2}\n@@ -8413,7 +8413,7 @@\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"ssemov,ssemov,sselog,sselog,ssemov,fmov,imov\")\n    (set_attr \"prefix_data16\" \"1,*,*,*,*,*,*\")\n-   (set_attr \"prefix\" \"orig,vex,orig,vex,*,*,*\")\n+   (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,*,*,*\")\n    (set_attr \"mode\" \"V1DF,V1DF,V2DF,V2DF,DF,DF,DF\")])\n \n (define_split\n@@ -8449,13 +8449,13 @@\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"sse2_loadlpd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"\n-\t  \"=x,x,x,x,x,x,x,x,m,m ,m\")\n+\t  \"=v,x,v,x,v,x,x,v,m,m ,m\")\n \t(vec_concat:V2DF\n \t  (match_operand:DF 2 \"nonimmediate_operand\"\n-\t  \"xm,m,m,x,x,0,0,x,x,*f,r\")\n+\t  \"vm,m,m,x,v,0,0,v,x,*f,r\")\n \t  (vec_select:DF\n \t    (match_operand:V2DF 1 \"vector_move_operand\"\n-\t  \" C,0,x,0,x,x,o,o,0,0 ,0\")\n+\t  \" C,0,v,0,v,x,o,o,0,0 ,0\")\n \t    (parallel [(const_int 1)]))))]\n   \"TARGET_SSE2 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n@@ -8482,7 +8482,7 @@\n \t   (const_string \"ssemov\")))\n    (set_attr \"prefix_data16\" \"*,1,*,*,*,*,1,*,*,*,*\")\n    (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*,*,*\")\n-   (set_attr \"prefix\" \"maybe_vex,orig,vex,orig,vex,orig,orig,vex,*,*,*\")\n+   (set_attr \"prefix\" \"maybe_vex,orig,maybe_evex,orig,maybe_evex,orig,orig,maybe_evex,*,*,*\")\n    (set_attr \"mode\" \"DF,V1DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,DF,DF,DF\")])\n \n (define_split\n@@ -8495,10 +8495,10 @@\n   \"operands[0] = adjust_address (operands[0], DFmode, 0);\")\n \n (define_insn \"sse2_movsd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"   \"=x,x,x,x,m,x,x,x,o\")\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"   \"=x,v,x,v,m,x,x,v,o\")\n \t(vec_merge:V2DF\n-\t  (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,m,m,x,0,0,x,0\")\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,0,x,0,x,o,o,x\")\n+\t  (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,v,m,m,v,0,0,v,0\")\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,v,0,v,0,x,o,o,v\")\n \t  (const_int 1)))]\n   \"TARGET_SSE2\"\n   \"@\n@@ -8524,7 +8524,7 @@\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*\")\n-   (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig,vex,maybe_vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,maybe_vex,orig,orig,maybe_evex,maybe_vex\")\n    (set_attr \"mode\" \"DF,DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,V1DF\")])\n \n (define_insn \"vec_dupv2df<mask_name>\""}]}