{"sha": "e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "node_id": "C_kwDOANBUbNoAKGU4ODhiZWEyMzg0YTBkOGQyOWE2NTQ1YzRmNTdmNDFjYjQ5ZGYwYTY", "commit": {"author": {"name": "Navid Rahimi", "email": "navidrahimi@microsoft.com", "date": "2021-11-23T00:46:17Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-11-23T00:48:04Z"}, "message": "Re: [PATCH] PR tree-optimization/96779 Adding a missing pattern to match.pd\n\n\tPR tree-optimization/96779\ngcc/\n\t* match.pd (-x == x) -> (x == 0): New optimization.\n\ngcc/testsuite\n\t* gcc.dg/tree-ssa/pr96779.c: Testcase for this optimization.\n\t* gcc.dg/tree-ssa/pr96779-disabled.c: Testcase for this optimization\n\twhen -fwrapv passed.", "tree": {"sha": "3fd897a928b34900e4dfbe6ecff6956659b620ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fd897a928b34900e4dfbe6ecff6956659b620ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/comments", "author": {"login": "navidR", "id": 3811601, "node_id": "MDQ6VXNlcjM4MTE2MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3811601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/navidR", "html_url": "https://github.com/navidR", "followers_url": "https://api.github.com/users/navidR/followers", "following_url": "https://api.github.com/users/navidR/following{/other_user}", "gists_url": "https://api.github.com/users/navidR/gists{/gist_id}", "starred_url": "https://api.github.com/users/navidR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/navidR/subscriptions", "organizations_url": "https://api.github.com/users/navidR/orgs", "repos_url": "https://api.github.com/users/navidR/repos", "events_url": "https://api.github.com/users/navidR/events{/privacy}", "received_events_url": "https://api.github.com/users/navidR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06be28f64a0b5bfc5ee23b9c6289cf6bb57a1d17"}], "stats": {"total": 171, "additions": 171, "deletions": 0}, "files": [{"sha": "5d71a4f907cc0195cd9ad68820e49791ce2addc9", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "patch": "@@ -242,6 +242,14 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (mult @0 integer_zerop@1)\n  @1)\n \n+/* -x == x -> x == 0 */\n+(for cmp (eq ne)\n+ (simplify\n+  (cmp:c @0 (negate @0))\n+   (if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+        && !TYPE_OVERFLOW_WRAPS (TREE_TYPE(@0)))\n+    (cmp @0 { build_zero_cst (TREE_TYPE(@0)); }))))\n+\n /* Maybe fold x * 0 to 0.  The expressions aren't the same\n    when x is NaN, since x * 0 is also NaN.  Nor are they the\n    same in modes with signed zeros, since multiplying a"}, {"sha": "205133d8e0c2210f1f4fa6d544242ac0dc1039fc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96779-disabled.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96779-disabled.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96779-disabled.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96779-disabled.c?ref=e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "patch": "@@ -0,0 +1,84 @@\n+/* PR tree-optimization/96779 */\n+/* { dg-do run } */\n+/* { dg-options \"-O -fdump-tree-optimized -fwrapv\" } */\n+\n+#include <stdbool.h>\n+\n+bool __attribute__ ((noipa)) f_func(int a)\n+{\n+    return -a == a;\n+}\n+\n+bool __attribute__ ((noipa)) g_func(unsigned int a)\n+{\n+    return -a == a;\n+}\n+\n+bool __attribute__ ((noipa)) h_func(short a)\n+{\n+    return -a == a;\n+}\n+\n+bool __attribute__ ((noipa)) k_func(long a)\n+{\n+    return -a == a;\n+}\n+\n+int\n+main (void)\n+{\n+  // few randomly generated test cases\n+  if (f_func (71856034))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (g_func (71856034))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (h_func (1744))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (k_func (68268386))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (f_func (-112237))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (g_func (-787116))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (h_func (-863))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (k_func (-787116))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!f_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!g_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!h_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!k_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+\n+  return 0;\n+}\n+\n+/* Verify that we have *not* transfered \"= -\" pattern in any of those functions.  */\n+/* { dg-final { scan-tree-dump-times \"= -\" 4 \"optimized\" } } */"}, {"sha": "0d46e8eeb1502c746f16d62cf0e42c9a4f94092d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96779.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96779.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e888bea2384a0d8d29a6545c4f57f41cb49df0a6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96779.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96779.c?ref=e888bea2384a0d8d29a6545c4f57f41cb49df0a6", "patch": "@@ -0,0 +1,79 @@\n+/* PR tree-optimization/96779 */\n+/* { dg-do run } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+#include <stdbool.h>\n+\n+bool __attribute__ ((noipa)) f_func(int a)\n+{\n+    return -a == a;\n+}\n+\n+bool __attribute__ ((noipa)) h_func(short a)\n+{\n+    return -a == a;\n+}\n+\n+bool __attribute__ ((noipa)) k_func(long a)\n+{\n+    return -a == a;\n+}\n+\n+int\n+main (void)\n+{\n+  // few randomly generated test cases\n+  if (f_func (71856034))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (f_func (71856034))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (h_func (1744))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (k_func (68268386))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (f_func (-112237))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (f_func (-787116))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (h_func (-863))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (k_func (-787116))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!f_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!f_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!h_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+  if (!k_func (0))\n+    {\n+      __builtin_abort ();\n+    }\n+\n+  return 0;\n+}\n+\n+/* Verify that we transfered to \"= -\" pattern from \"_2 = -_1;\".  */\n+/* { dg-final { scan-tree-dump-not \"= -\" \"optimized\" } } */"}]}