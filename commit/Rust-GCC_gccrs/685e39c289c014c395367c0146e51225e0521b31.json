{"sha": "685e39c289c014c395367c0146e51225e0521b31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1ZTM5YzI4OWMwMTRjMzk1MzY3YzAxNDZlNTEyMjVlMDUyMWIzMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-10-18T15:39:12Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-10-18T15:39:12Z"}, "message": "re PR c++/23293 (Misleading names in diagnostics for typedefs in functions)\n\n\tPR c++/23293\n\t* pt.c (convert_template_argument): Use canonical type variants in\n\ttemplate specializations.\n\tPR c++/23293\n\t* g++.dg/template/error19.C: New test.\n\nFrom-SVN: r105561", "tree": {"sha": "8aa991c7af90fad053fc0468b9ab54c0156ba49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8aa991c7af90fad053fc0468b9ab54c0156ba49a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/685e39c289c014c395367c0146e51225e0521b31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685e39c289c014c395367c0146e51225e0521b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685e39c289c014c395367c0146e51225e0521b31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685e39c289c014c395367c0146e51225e0521b31/comments", "author": null, "committer": null, "parents": [{"sha": "c19aaba57373a99ede12e46196bb8d8740500dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19aaba57373a99ede12e46196bb8d8740500dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c19aaba57373a99ede12e46196bb8d8740500dbd"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "4c79e894de7052dbbb380297f7d4bede6dbd4ae8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685e39c289c014c395367c0146e51225e0521b31/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685e39c289c014c395367c0146e51225e0521b31/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=685e39c289c014c395367c0146e51225e0521b31", "patch": "@@ -1,3 +1,9 @@\n+2005-10-18  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23293\n+\t* pt.c (convert_template_argument): Use canonical type variants in\n+\ttemplate specializations.\n+\n 2005-10-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/21383"}, {"sha": "62db1229b214e058b8c1de275257ab5b0999e7e4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685e39c289c014c395367c0146e51225e0521b31/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685e39c289c014c395367c0146e51225e0521b31/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=685e39c289c014c395367c0146e51225e0521b31", "patch": "@@ -3930,6 +3930,13 @@ convert_template_argument (tree parm,\n \t}\n       else\n \tval = arg;\n+      /* We only form one instance of each template specialization.\n+\t Therefore, if we use a non-canonical variant (i.e., a\n+\t typedef), any future messages referring to the type will use \n+\t the typedef, which is confusing if those future uses do not\n+\t themselves also use the typedef.  */\n+      if (TYPE_P (val))\n+\tval = canonical_type_variant (val);\n     }\n   else\n     {"}, {"sha": "f2123589f84f7b5b3a75c8e1b59e4c578d3ca832", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685e39c289c014c395367c0146e51225e0521b31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685e39c289c014c395367c0146e51225e0521b31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=685e39c289c014c395367c0146e51225e0521b31", "patch": "@@ -1,3 +1,8 @@\n+2005-10-18  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23293\n+\t* g++.dg/template/error19.C: New test.\n+\n 2005-10-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/21383"}, {"sha": "d533e9a3b985ffcad8351add047e7cabfd9ac37e", "filename": "gcc/testsuite/g++.dg/template/error19.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685e39c289c014c395367c0146e51225e0521b31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685e39c289c014c395367c0146e51225e0521b31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror19.C?ref=685e39c289c014c395367c0146e51225e0521b31", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/23293\n+\n+template < typename > struct P;\n+struct S;\n+\n+void *unrelated_function()\n+{\n+  typedef S K;\n+  P < K > * p;\n+  return p;\n+}\n+\n+template < typename U >\n+void generate_warning()\n+{ \n+  U::x(); // { dg-error \"P<S>\" }\n+}\n+\n+int main()\n+{\n+  generate_warning< P < S > >();\n+}"}]}