{"sha": "e73de8f37af47e6568c145d41f0490338b942288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczZGU4ZjM3YWY0N2U2NTY4YzE0NWQ0MWYwNDkwMzM4Yjk0MjI4OA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-09-16T01:23:31Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-09-16T01:23:31Z"}, "message": "use rtx_insn * more\n\ngcc/ChangeLog:\n\n2014-09-15  Trevor Saunders  <tsaunders@mozilla.com>\n\n\t* config/mn10300/mn10300.c (mn10300_insert_setlb_lcc): Assign the\n\tresult of emit_jump_insn_before to a new variable.\n\t* jump.c (mark_jump_label): Change the type of insn to rtx_insn *.\n\t(mark_jump_label_1): Likewise.\n\t(mark_jump_label_asm): Likewise.\n\t* reload1.c (gen_reload): Change type of tem to rtx_insn *.\n\t* rtl.h (mark_jump_label): Adjust.\n\nFrom-SVN: r215281", "tree": {"sha": "c661ee4d9bd7b191dbb98cf8e1f11c4566f5d9d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c661ee4d9bd7b191dbb98cf8e1f11c4566f5d9d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e73de8f37af47e6568c145d41f0490338b942288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73de8f37af47e6568c145d41f0490338b942288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73de8f37af47e6568c145d41f0490338b942288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73de8f37af47e6568c145d41f0490338b942288/comments", "author": null, "committer": null, "parents": [{"sha": "a9a54305449a5490b6bff4a15348fa024ae1f24b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a54305449a5490b6bff4a15348fa024ae1f24b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a54305449a5490b6bff4a15348fa024ae1f24b"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "ed78680fd984985d3d355a8790b27392a541b73c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73de8f37af47e6568c145d41f0490338b942288/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73de8f37af47e6568c145d41f0490338b942288/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e73de8f37af47e6568c145d41f0490338b942288", "patch": "@@ -1,3 +1,13 @@\n+2014-09-15  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* config/mn10300/mn10300.c (mn10300_insert_setlb_lcc): Assign the\n+\tresult of emit_jump_insn_before to a new variable.\n+\t* jump.c (mark_jump_label): Change the type of insn to rtx_insn *.\n+\t(mark_jump_label_1): Likewise.\n+\t(mark_jump_label_asm): Likewise.\n+\t* reload1.c (gen_reload): Change type of tem to rtx_insn *.\n+\t* rtl.h (mark_jump_label): Adjust.\n+\n 2014-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in (dg_target_exps): Remove."}, {"sha": "1289bc50eebce4d82383cbb8f57a0b08332eae75", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=e73de8f37af47e6568c145d41f0490338b942288", "patch": "@@ -3201,11 +3201,11 @@ mn10300_insert_setlb_lcc (rtx label, rtx branch)\n   else\n     lcc = gen_Lcc (comparison, label);    \n \n-  lcc = emit_jump_insn_before (lcc, branch);\n-  mark_jump_label (XVECEXP (PATTERN (lcc), 0, 0), lcc, 0);\n-  JUMP_LABEL (lcc) = label;\n+  rtx_insn *jump = emit_jump_insn_before (lcc, branch);\n+  mark_jump_label (XVECEXP (PATTERN (lcc), 0, 0), jump, 0);\n+  JUMP_LABEL (jump) = label;\n   DUMP (\"Replacing branch insn...\", branch);\n-  DUMP (\"... with Lcc insn:\", lcc);  \n+  DUMP (\"... with Lcc insn:\", jump);\n   delete_insn (branch);\n }\n "}, {"sha": "cad44d8a043080ea776973183fa06ebd488cc408", "filename": "gcc/jump.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=e73de8f37af47e6568c145d41f0490338b942288", "patch": "@@ -65,8 +65,8 @@ along with GCC; see the file COPYING3.  If not see\n \n static void init_label_info (rtx_insn *);\n static void mark_all_labels (rtx_insn *);\n-static void mark_jump_label_1 (rtx, rtx, bool, bool);\n-static void mark_jump_label_asm (rtx, rtx);\n+static void mark_jump_label_1 (rtx, rtx_insn *, bool, bool);\n+static void mark_jump_label_asm (rtx, rtx_insn *);\n static void redirect_exp_1 (rtx *, rtx, rtx, rtx);\n static int invert_exp_1 (rtx, rtx);\n \f\n@@ -1066,7 +1066,7 @@ sets_cc0_p (const_rtx x)\n    that loop-optimization is done with.  */\n \n void\n-mark_jump_label (rtx x, rtx insn, int in_mem)\n+mark_jump_label (rtx x, rtx_insn *insn, int in_mem)\n {\n   rtx asmop = extract_asm_operands (x);\n   if (asmop)\n@@ -1083,7 +1083,7 @@ mark_jump_label (rtx x, rtx insn, int in_mem)\n    note.  */\n \n static void\n-mark_jump_label_1 (rtx x, rtx insn, bool in_mem, bool is_target)\n+mark_jump_label_1 (rtx x, rtx_insn *insn, bool in_mem, bool is_target)\n {\n   RTX_CODE code = GET_CODE (x);\n   int i;\n@@ -1192,7 +1192,7 @@ mark_jump_label_1 (rtx x, rtx insn, bool in_mem, bool is_target)\n \t  int eltnum = code == ADDR_DIFF_VEC ? 1 : 0;\n \n \t  for (i = 0; i < XVECLEN (x, eltnum); i++)\n-\t    mark_jump_label_1 (XVECEXP (x, eltnum, i), NULL_RTX, in_mem,\n+\t    mark_jump_label_1 (XVECEXP (x, eltnum, i), NULL, in_mem,\n \t\t\t       is_target);\n \t}\n       return;\n@@ -1227,7 +1227,7 @@ mark_jump_label_1 (rtx x, rtx insn, bool in_mem, bool is_target)\n    need to be considered targets.  */\n \n static void\n-mark_jump_label_asm (rtx asmop, rtx insn)\n+mark_jump_label_asm (rtx asmop, rtx_insn *insn)\n {\n   int i;\n "}, {"sha": "13dcd4f0aeefb3bfb92a3b03f49debfdacb39383", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=e73de8f37af47e6568c145d41f0490338b942288", "patch": "@@ -8594,7 +8594,7 @@ static rtx_insn *\n gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n {\n   rtx_insn *last = get_last_insn ();\n-  rtx tem;\n+  rtx_insn *tem;\n #ifdef SECONDARY_MEMORY_NEEDED\n   rtx tem1, tem2;\n #endif"}, {"sha": "2b9da8130296afb4f73ed6d4d49f6106af2ace0b", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73de8f37af47e6568c145d41f0490338b942288/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e73de8f37af47e6568c145d41f0490338b942288", "patch": "@@ -2661,7 +2661,7 @@ extern enum rtx_code reverse_condition_maybe_unordered (enum rtx_code);\n extern enum rtx_code swap_condition (enum rtx_code);\n extern enum rtx_code unsigned_condition (enum rtx_code);\n extern enum rtx_code signed_condition (enum rtx_code);\n-extern void mark_jump_label (rtx, rtx, int);\n+extern void mark_jump_label (rtx, rtx_insn *, int);\n \n /* In jump.c */\n extern rtx_insn *delete_related_insns (rtx);"}]}