{"sha": "f1e247d0181d3b055b0d9435a7f65e88792e7812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlMjQ3ZDAxODFkM2IwNTViMGQ5NDM1YTdmNjVlODg3OTJlNzgxMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2017-06-21T15:35:14Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2017-06-21T15:35:14Z"}, "message": "aarch64-cores.def (thunderxt88p1): Use thunderxt88 tunings.\n\n2017-06-21  Andrew Pinski  <apinski@cavium.com>\n\n        * config/aarch64/aarch64-cores.def (thunderxt88p1): Use thunderxt88\n        tunings.\n        (thunderxt88): Likewise.\n        * config/aarch64/aarch64.c (thunderxt88_prefetch_tune): New variable.\n        (thunderx_prefetch_tune): New variable.\n        (thunderx2t99_prefetch_tune): Update for the correct values.\n        (thunderxt88_tunings): New variable.\n        (thunderx_tunings): Use thunderx_prefetch_tune instead of\n        generic_prefetch_tune.\n        (thunderx2t99_tunings): Use AUTOPREFETCHER_WEAK.\n\nFrom-SVN: r249458", "tree": {"sha": "42a253c0f8fa3d8d2ca3738e69ff855d9064e4f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a253c0f8fa3d8d2ca3738e69ff855d9064e4f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e247d0181d3b055b0d9435a7f65e88792e7812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e247d0181d3b055b0d9435a7f65e88792e7812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e247d0181d3b055b0d9435a7f65e88792e7812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e247d0181d3b055b0d9435a7f65e88792e7812/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c0113fd8ac55b9cf93c3a1c660264112edb0462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c0113fd8ac55b9cf93c3a1c660264112edb0462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c0113fd8ac55b9cf93c3a1c660264112edb0462"}], "stats": {"total": 70, "additions": 63, "deletions": 7}, "files": [{"sha": "1b41a7f66431c7dcd1e79f9a08726bc368b46141", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e247d0181d3b055b0d9435a7f65e88792e7812/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e247d0181d3b055b0d9435a7f65e88792e7812/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1e247d0181d3b055b0d9435a7f65e88792e7812", "patch": "@@ -1,3 +1,16 @@\n+2017-06-21  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64-cores.def (thunderxt88p1): Use thunderxt88\n+\ttunings.\n+\t(thunderxt88): Likewise.\n+\t* config/aarch64/aarch64.c (thunderxt88_prefetch_tune): New variable.\n+\t(thunderx_prefetch_tune): New variable.\n+\t(thunderx2t99_prefetch_tune): Update for the correct values.\n+\t(thunderxt88_tunings): New variable.\n+\t(thunderx_tunings): Use thunderx_prefetch_tune instead of\n+\tgeneric_prefetch_tune.\n+\t(thunderx2t99_tunings): Use AUTOPREFETCHER_WEAK.\n+\n 2017-06-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/atomics.md (aarch64_compare_and_swap<mode>_lse,"}, {"sha": "f8342ca722db720f601d63a68386e03f635033dd", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e247d0181d3b055b0d9435a7f65e88792e7812/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e247d0181d3b055b0d9435a7f65e88792e7812/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=f1e247d0181d3b055b0d9435a7f65e88792e7812", "patch": "@@ -56,8 +56,8 @@ AARCH64_CORE(\"cortex-a73\",  cortexa73, cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AA\n AARCH64_CORE(\"thunderx\",      thunderx,      thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  0x43, 0x0a0, -1)\n /* Do not swap around \"thunderxt88p1\" and \"thunderxt88\",\n    this order is required to handle variant correctly. */\n-AARCH64_CORE(\"thunderxt88p1\", thunderxt88p1, thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO,\tthunderx,  0x43, 0x0a1, 0)\n-AARCH64_CORE(\"thunderxt88\",   thunderxt88,   thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  0x43, 0x0a1, -1)\n+AARCH64_CORE(\"thunderxt88p1\", thunderxt88p1, thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO,\tthunderxt88,  0x43, 0x0a1, 0)\n+AARCH64_CORE(\"thunderxt88\",   thunderxt88,   thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderxt88,  0x43, 0x0a1, -1)\n AARCH64_CORE(\"thunderxt81\",   thunderxt81,   thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  0x43, 0x0a2, -1)\n AARCH64_CORE(\"thunderxt83\",   thunderxt83,   thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  0x43, 0x0a3, -1)\n "}, {"sha": "97937dd74cfa81156177f334c156ee0e10b34e7f", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e247d0181d3b055b0d9435a7f65e88792e7812/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e247d0181d3b055b0d9435a7f65e88792e7812/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=f1e247d0181d3b055b0d9435a7f65e88792e7812", "patch": "@@ -554,12 +554,30 @@ static const cpu_prefetch_tune qdf24xx_prefetch_tune =\n   3\t\t\t/* default_opt_level  */\n };\n \n+static const cpu_prefetch_tune thunderxt88_prefetch_tune =\n+{\n+  8,\t\t\t/* num_slots  */\n+  32,\t\t\t/* l1_cache_size  */\n+  128,\t\t\t/* l1_cache_line_size  */\n+  16*1024,\t\t/* l2_cache_size  */\n+  3\t\t\t/* default_opt_level  */\n+};\n+\n+static const cpu_prefetch_tune thunderx_prefetch_tune =\n+{\n+  8,\t\t\t/* num_slots  */\n+  32,\t\t\t/* l1_cache_size  */\n+  128,\t\t\t/* l1_cache_line_size  */\n+  -1,\t\t\t/* l2_cache_size  */\n+  -1\t\t\t/* default_opt_level  */\n+};\n+\n static const cpu_prefetch_tune thunderx2t99_prefetch_tune =\n {\n-  0,\t\t\t/* num_slots  */\n-  -1,\t\t\t/* l1_cache_size  */\n+  8,\t\t\t/* num_slots  */\n+  32,\t\t\t/* l1_cache_size  */\n   64,\t\t\t/* l1_cache_line_size  */\n-  -1,\t\t\t/* l2_cache_size  */\n+  256,\t\t\t/* l2_cache_size  */\n   -1\t\t\t/* default_opt_level  */\n };\n \n@@ -745,6 +763,31 @@ static const struct tune_params exynosm1_tunings =\n   &exynosm1_prefetch_tune\n };\n \n+static const struct tune_params thunderxt88_tunings =\n+{\n+  &thunderx_extra_costs,\n+  &generic_addrcost_table,\n+  &thunderx_regmove_cost,\n+  &thunderx_vector_cost,\n+  &generic_branch_cost,\n+  &generic_approx_modes,\n+  6, /* memmov_cost  */\n+  2, /* issue_rate  */\n+  AARCH64_FUSE_CMP_BRANCH, /* fusible_ops  */\n+  8,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  8,\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  1,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  0,\t/* max_case_values.  */\n+  tune_params::AUTOPREFETCHER_OFF,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_SLOW_UNALIGNED_LDPW),\t/* tune_flags.  */\n+  &thunderxt88_prefetch_tune\n+};\n+\n static const struct tune_params thunderx_tunings =\n {\n   &thunderx_extra_costs,\n@@ -767,7 +810,7 @@ static const struct tune_params thunderx_tunings =\n   0,\t/* max_case_values.  */\n   tune_params::AUTOPREFETCHER_OFF,\t/* autoprefetcher_model.  */\n   (AARCH64_EXTRA_TUNE_SLOW_UNALIGNED_LDPW),\t/* tune_flags.  */\n-  &generic_prefetch_tune\n+  &thunderx_prefetch_tune\n };\n \n static const struct tune_params xgene1_tunings =\n@@ -841,7 +884,7 @@ static const struct tune_params thunderx2t99_tunings =\n   2,\t/* min_div_recip_mul_sf.  */\n   2,\t/* min_div_recip_mul_df.  */\n   0,\t/* max_case_values.  */\n-  tune_params::AUTOPREFETCHER_OFF,\t/* autoprefetcher_model.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n   (AARCH64_EXTRA_TUNE_NONE),\t/* tune_flags.  */\n   &thunderx2t99_prefetch_tune\n };"}]}