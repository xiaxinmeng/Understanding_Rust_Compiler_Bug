{"sha": "0a77c7033ae4ed05a2f7e78600522610a8d82225", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE3N2M3MDMzYWU0ZWQwNWEyZjdlNzg2MDA1MjI2MTBhOGQ4MjIyNQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-08T15:15:19Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-10T11:11:57Z"}, "message": "Move 'libgomp/oacc-parallel.c:GOACC_declare' into 'libgomp/oacc-mem.c'\n\nThis deals with data management, after all.\n\nSmall fix-up for r230275 (commit 6e232ba4246ca324a663ec5ddf0ba4db5cf3fbad)\n\"[OpenACC] declare directive\".\n\n\tlibgomp/\n\t* oacc-parallel.c (GOACC_declare): Move...\n\t* oacc-mem.c: ... here.\n\t* libgomp_g.h: Adjust.", "tree": {"sha": "896c0f29eeb932d70866dd1a53d29d23553f441d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/896c0f29eeb932d70866dd1a53d29d23553f441d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a77c7033ae4ed05a2f7e78600522610a8d82225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a77c7033ae4ed05a2f7e78600522610a8d82225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a77c7033ae4ed05a2f7e78600522610a8d82225", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a77c7033ae4ed05a2f7e78600522610a8d82225/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae33c6deb158911548a5f1d383b683abb799be4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae33c6deb158911548a5f1d383b683abb799be4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae33c6deb158911548a5f1d383b683abb799be4a"}], "stats": {"total": 113, "additions": 55, "deletions": 58}, "files": [{"sha": "b66b69782029638f478c28b831d54c8990187848", "filename": "libgomp/libgomp_g.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a77c7033ae4ed05a2f7e78600522610a8d82225/libgomp%2Flibgomp_g.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a77c7033ae4ed05a2f7e78600522610a8d82225/libgomp%2Flibgomp_g.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp_g.h?ref=0a77c7033ae4ed05a2f7e78600522610a8d82225", "patch": "@@ -370,6 +370,7 @@ extern void GOACC_wait (int, int, ...);\n \n extern void GOACC_enter_exit_data (int, size_t, void **, size_t *,\n \t\t\t\t   unsigned short *, int, int, ...);\n+extern void GOACC_declare (int, size_t, void **, size_t *, unsigned short *);\n \n /* oacc-parallel.c */\n \n@@ -384,6 +385,5 @@ extern void GOACC_update (int, size_t, void **, size_t *,\n \t\t\t  unsigned short *, int, int, ...);\n extern int GOACC_get_num_threads (void);\n extern int GOACC_get_thread_num (void);\n-extern void GOACC_declare (int, size_t, void **, size_t *, unsigned short *);\n \n #endif /* LIBGOMP_G_H */"}, {"sha": "056600aca5248b0a079b01e7ba7ec34e47effe2a", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a77c7033ae4ed05a2f7e78600522610a8d82225/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a77c7033ae4ed05a2f7e78600522610a8d82225/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=0a77c7033ae4ed05a2f7e78600522610a8d82225", "patch": "@@ -1461,3 +1461,57 @@ GOACC_enter_exit_data (int flags_m, size_t mapnum, void **hostaddrs,\n       thr->api_info = NULL;\n     }\n }\n+\n+void\n+GOACC_declare (int flags_m, size_t mapnum,\n+\t       void **hostaddrs, size_t *sizes, unsigned short *kinds)\n+{\n+  for (size_t i = 0; i < mapnum; i++)\n+    {\n+      unsigned char kind = kinds[i] & 0xff;\n+\n+      if (kind == GOMP_MAP_POINTER || kind == GOMP_MAP_TO_PSET)\n+\tcontinue;\n+\n+      switch (kind)\n+\t{\n+\tcase GOMP_MAP_FORCE_ALLOC:\n+\tcase GOMP_MAP_FORCE_FROM:\n+\tcase GOMP_MAP_FORCE_TO:\n+\tcase GOMP_MAP_RELEASE:\n+\tcase GOMP_MAP_DELETE:\n+\t  GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n+\t\t\t\t &kinds[i], GOMP_ASYNC_SYNC, 0);\n+\t  break;\n+\n+\tcase GOMP_MAP_FORCE_DEVICEPTR:\n+\t  break;\n+\n+\tcase GOMP_MAP_ALLOC:\n+\t  if (!acc_is_present (hostaddrs[i], sizes[i]))\n+\t    GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n+\t\t\t\t   &kinds[i], GOMP_ASYNC_SYNC, 0);\n+\t  break;\n+\n+\tcase GOMP_MAP_TO:\n+\t  GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n+\t\t\t\t &kinds[i], GOMP_ASYNC_SYNC, 0);\n+\t  break;\n+\n+\tcase GOMP_MAP_FROM:\n+\t  GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n+\t\t\t\t &kinds[i], GOMP_ASYNC_SYNC, 0);\n+\t  break;\n+\n+\tcase GOMP_MAP_FORCE_PRESENT:\n+\t  if (!acc_is_present (hostaddrs[i], sizes[i]))\n+\t    gomp_fatal (\"[%p,%ld] is not mapped\", hostaddrs[i],\n+\t\t\t(unsigned long) sizes[i]);\n+\t  break;\n+\n+\tdefault:\n+\t  assert (0);\n+\t  break;\n+\t}\n+    }\n+}"}, {"sha": "939e09f2b0c26e122a3f6e1e17b1a13fa77429e8", "filename": "libgomp/oacc-parallel.c", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a77c7033ae4ed05a2f7e78600522610a8d82225/libgomp%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a77c7033ae4ed05a2f7e78600522610a8d82225/libgomp%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-parallel.c?ref=0a77c7033ae4ed05a2f7e78600522610a8d82225", "patch": "@@ -728,60 +728,3 @@ GOACC_get_thread_num (void)\n {\n   return 0;\n }\n-\n-void\n-GOACC_declare (int flags_m, size_t mapnum,\n-\t       void **hostaddrs, size_t *sizes, unsigned short *kinds)\n-{\n-  int i;\n-\n-  for (i = 0; i < mapnum; i++)\n-    {\n-      unsigned char kind = kinds[i] & 0xff;\n-\n-      if (kind == GOMP_MAP_POINTER || kind == GOMP_MAP_TO_PSET)\n-\tcontinue;\n-\n-      switch (kind)\n-\t{\n-\t  case GOMP_MAP_FORCE_ALLOC:\n-\t  case GOMP_MAP_FORCE_FROM:\n-\t  case GOMP_MAP_FORCE_TO:\n-\t  case GOMP_MAP_RELEASE:\n-\t  case GOMP_MAP_DELETE:\n-\t    GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n-\t\t\t\t   &kinds[i], GOMP_ASYNC_SYNC, 0);\n-\t    break;\n-\n-\t  case GOMP_MAP_FORCE_DEVICEPTR:\n-\t    break;\n-\n-\t  case GOMP_MAP_ALLOC:\n-\t    if (!acc_is_present (hostaddrs[i], sizes[i]))\n-\t      GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n-\t\t\t\t     &kinds[i], GOMP_ASYNC_SYNC, 0);\n-\t    break;\n-\n-\t  case GOMP_MAP_TO:\n-\t    GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n-\t\t\t\t   &kinds[i], GOMP_ASYNC_SYNC, 0);\n-\n-\t    break;\n-\n-\t  case GOMP_MAP_FROM:\n-\t    GOACC_enter_exit_data (flags_m, 1, &hostaddrs[i], &sizes[i],\n-\t\t\t\t   &kinds[i], GOMP_ASYNC_SYNC, 0);\n-\t    break;\n-\n-\t  case GOMP_MAP_FORCE_PRESENT:\n-\t    if (!acc_is_present (hostaddrs[i], sizes[i]))\n-\t      gomp_fatal (\"[%p,%ld] is not mapped\", hostaddrs[i],\n-\t\t\t  (unsigned long) sizes[i]);\n-\t    break;\n-\n-\t  default:\n-\t    assert (0);\n-\t    break;\n-\t}\n-    }\n-}"}]}