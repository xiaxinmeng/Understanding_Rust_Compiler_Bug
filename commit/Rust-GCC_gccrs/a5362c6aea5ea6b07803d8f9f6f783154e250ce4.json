{"sha": "a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzNjJjNmFlYTVlYTZiMDc4MDNkOGY5ZjZmNzgzMTU0ZTI1MGNlNA==", "commit": {"author": {"name": "Jose E. Marchesi", "email": "jose.marchesi@oracle.com", "date": "2019-09-09T09:55:10Z"}, "committer": {"name": "Jose E. Marchesi", "email": "jemarch@gcc.gnu.org", "date": "2019-09-09T09:55:10Z"}, "message": "testsuite: new require effective target indirect_calls\n    \nThis patch adds a new dg_require_effective_target procedure to the\ntestsuite infrastructure: indirect_calls.  This new function tells\nwhether a target supports calls to non-constant call targets.\n    \nThis patch also annotates the tests in the gcc.c-torture testuite that\nrequire support for indirect calls.\n    \n    gcc/ChangeLog:\n    \n            * doc/sourcebuild.texi (Effective-Target Keywords): Document\n            indirect_calls.\n    \n    gcc/testsuite/ChangeLog:\n    \n            * lib/target-supports.exp (check_effective_target_indirect_calls):\n            New proc.\n            * gcc.c-torture/compile/20010102-1.c: Annotate with\n            dg-require-effective-target indirect_calls.\n            * gcc.c-torture/compile/20010107-1.c: Likewise.\n            * gcc.c-torture/compile/20011109-1.c: Likewise.\n            * gcc.c-torture/compile/20011218-1.c: Likewise.\n            * gcc.c-torture/compile/20011229-1.c: Likewise.\n            * gcc.c-torture/compile/20020129-1.c: Likewise.\n            * gcc.c-torture/compile/20020320-1.c: Likewise.\n            * gcc.c-torture/compile/20020706-1.c: Likewise.\n            * gcc.c-torture/compile/20020706-2.c: Likewise.\n            * gcc.c-torture/compile/20021205-1.c: Likewise.\n            * gcc.c-torture/compile/20030921-1.c: Likewise.\n            * gcc.c-torture/compile/20031023-1.c: Likewise.\n            * gcc.c-torture/compile/20031023-2.c: Likewise.\n            * gcc.c-torture/compile/20031023-3.c: Likewise.\n            * gcc.c-torture/compile/20031023-4.c: Likewise.\n            * gcc.c-torture/compile/20040614-1.c: Likewise.\n            * gcc.c-torture/compile/20040909-1.c: Likewise.\n            * gcc.c-torture/compile/20050122-1.c: Likewise.\n            * gcc.c-torture/compile/20050202-1.c: Likewise.\n            * gcc.c-torture/compile/20060208-1.c: Likewise.\n            * gcc.c-torture/compile/20081108-1.c: Likewise.\n            * gcc.c-torture/compile/20150327.c: Likewise.\n            * gcc.c-torture/compile/920428-2.c: Likewise.\n            * gcc.c-torture/compile/920928-5.c: Likewise.\n            * gcc.c-torture/compile/930117-1.c: Likewise.\n            * gcc.c-torture/compile/930607-1.c: Likewise.\n            * gcc.c-torture/compile/991213-2.c: Likewise.\n            * gcc.c-torture/compile/callind.c: Likewise.\n            * gcc.c-torture/compile/calls-void.c: Likewise.\n            * gcc.c-torture/compile/calls.c: Likewise.\n            * gcc.c-torture/compile/pr21840.c: Likewise.\n            * gcc.c-torture/compile/pr32139.c: Likewise.\n            * gcc.c-torture/compile/pr35607.c: Likewise.\n            * gcc.c-torture/compile/pr37433-1.c: Likewise.\n            * gcc.c-torture/compile/pr37433.c: Likewise.\n            * gcc.c-torture/compile/pr39941.c: Likewise.\n            * gcc.c-torture/compile/pr40080.c: Likewise.\n            * gcc.c-torture/compile/pr43635.c: Likewise.\n            * gcc.c-torture/compile/pr43791.c: Likewise.\n            * gcc.c-torture/compile/pr43845.c: Likewise.\n            * gcc.c-torture/compile/pr44043.c: Likewise.\n            * gcc.c-torture/compile/pr51694.c: Likewise.\n            * gcc.c-torture/compile/pr77754-2.c: Likewise.\n            * gcc.c-torture/compile/pr77754-3.c: Likewise.\n            * gcc.c-torture/compile/pr77754-4.c: Likewise.\n            * gcc.c-torture/compile/pr89663-2.c: Likewise.\n            * gcc.c-torture/compile/pta-1.c: Likewise.\n            * gcc.c-torture/compile/stack-check-1.c: Likewise.\n            * gcc.dg/Walloc-size-larger-than-18.c: Likewise.\n\nFrom-SVN: r275505", "tree": {"sha": "37e9f7a15fd513ef718918bd6378f16f7acd1e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37e9f7a15fd513ef718918bd6378f16f7acd1e11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/comments", "author": {"login": "jemarch", "id": 7061875, "node_id": "MDQ6VXNlcjcwNjE4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemarch", "html_url": "https://github.com/jemarch", "followers_url": "https://api.github.com/users/jemarch/followers", "following_url": "https://api.github.com/users/jemarch/following{/other_user}", "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions", "organizations_url": "https://api.github.com/users/jemarch/orgs", "repos_url": "https://api.github.com/users/jemarch/repos", "events_url": "https://api.github.com/users/jemarch/events{/privacy}", "received_events_url": "https://api.github.com/users/jemarch/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9b8025bb071f9980aa54c80e642dc855542fd1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9b8025bb071f9980aa54c80e642dc855542fd1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9b8025bb071f9980aa54c80e642dc855542fd1b"}], "stats": {"total": 162, "additions": 162, "deletions": 0}, "files": [{"sha": "cb28809b556444c323b7bf4148aa0df444afa4df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,8 @@\n+2019-09-09  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* doc/sourcebuild.texi (Effective-Target Keywords): Document\n+\tindirect_calls.\n+\n 2019-09-09  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* opt-functions.awk (integer_range_info): Make sure values are in"}, {"sha": "e4180ccaabb706b16410ce84b49f09c1720756b9", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -2374,6 +2374,10 @@ Target supports @code{wchar_t} that is compatible with @code{char32_t}.\n \n @item comdat_group\n Target uses comdat groups.\n+\n+@item indirect_calls\n+Target supports indirect calls, i.e. calls where the target is not\n+constant.\n @end table\n \n @subsubsection Local to tests in @code{gcc.target/i386}"}, {"sha": "9533da6e8190699e3ed15bd2665fa0c7e4726996", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,58 @@\n+2019-09-09  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_indirect_calls):\n+\tNew proc.\n+\t* gcc.c-torture/compile/20010102-1.c: Annotate with\n+\tdg-require-effective-target indirect_calls.\n+\t* gcc.c-torture/compile/20010107-1.c: Likewise.\n+\t* gcc.c-torture/compile/20011109-1.c: Likewise.\n+\t* gcc.c-torture/compile/20011218-1.c: Likewise.\n+\t* gcc.c-torture/compile/20011229-1.c: Likewise.\n+\t* gcc.c-torture/compile/20020129-1.c: Likewise.\n+\t* gcc.c-torture/compile/20020320-1.c: Likewise.\n+\t* gcc.c-torture/compile/20020706-1.c: Likewise.\n+\t* gcc.c-torture/compile/20020706-2.c: Likewise.\n+\t* gcc.c-torture/compile/20021205-1.c: Likewise.\n+\t* gcc.c-torture/compile/20030921-1.c: Likewise.\n+\t* gcc.c-torture/compile/20031023-1.c: Likewise.\n+\t* gcc.c-torture/compile/20031023-2.c: Likewise.\n+\t* gcc.c-torture/compile/20031023-3.c: Likewise.\n+\t* gcc.c-torture/compile/20031023-4.c: Likewise.\n+\t* gcc.c-torture/compile/20040614-1.c: Likewise.\n+\t* gcc.c-torture/compile/20040909-1.c: Likewise.\n+\t* gcc.c-torture/compile/20050122-1.c: Likewise.\n+\t* gcc.c-torture/compile/20050202-1.c: Likewise.\n+\t* gcc.c-torture/compile/20060208-1.c: Likewise.\n+\t* gcc.c-torture/compile/20081108-1.c: Likewise.\n+\t* gcc.c-torture/compile/20150327.c: Likewise.\n+\t* gcc.c-torture/compile/920428-2.c: Likewise.\n+\t* gcc.c-torture/compile/920928-5.c: Likewise.\n+\t* gcc.c-torture/compile/930117-1.c: Likewise.\n+\t* gcc.c-torture/compile/930607-1.c: Likewise.\n+\t* gcc.c-torture/compile/991213-2.c: Likewise.\n+\t* gcc.c-torture/compile/callind.c: Likewise.\n+\t* gcc.c-torture/compile/calls-void.c: Likewise.\n+\t* gcc.c-torture/compile/calls.c: Likewise.\n+\t* gcc.c-torture/compile/pr21840.c: Likewise.\n+\t* gcc.c-torture/compile/pr32139.c: Likewise.\n+\t* gcc.c-torture/compile/pr35607.c: Likewise.\n+\t* gcc.c-torture/compile/pr37433-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr37433.c: Likewise.\n+\t* gcc.c-torture/compile/pr39941.c: Likewise.\n+\t* gcc.c-torture/compile/pr40080.c: Likewise.\n+\t* gcc.c-torture/compile/pr43635.c: Likewise.\n+\t* gcc.c-torture/compile/pr43791.c: Likewise.\n+\t* gcc.c-torture/compile/pr43845.c: Likewise.\n+\t* gcc.c-torture/compile/pr44043.c: Likewise.\n+\t* gcc.c-torture/compile/pr51694.c: Likewise.\n+\t* gcc.c-torture/compile/pr77754-2.c: Likewise.\n+\t* gcc.c-torture/compile/pr77754-3.c: Likewise.\n+\t* gcc.c-torture/compile/pr77754-4.c: Likewise.\n+\t* gcc.c-torture/compile/pr89663-2.c: Likewise.\n+\t* gcc.c-torture/compile/pta-1.c: Likewise.\n+\t* gcc.c-torture/compile/stack-check-1.c: Likewise.\n+\t* gcc.dg/Walloc-size-larger-than-18.c: Likewise.\n+\n 2019-09-09  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* gcc.c-torture/compile/20000609-1.c: Annotate with"}, {"sha": "3d9cc9edf72a7b011c2ee5d253cb5b67cfd407d3", "filename": "gcc/testsuite/gcc.c-torture/compile/20010102-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010102-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -4,6 +4,8 @@\n \n    Copyright (C) 2001  Free Software Foundation.  */\n \n+/* { dg-require-effective-target indirect_calls } */\n+\n # define PTR_INT_TYPE __PTRDIFF_TYPE__\n \n struct _obstack_chunk"}, {"sha": "22461a0521fdbc7f799cd4c810d58eb02ac0b594", "filename": "gcc/testsuite/gcc.c-torture/compile/20010107-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010107-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n unsigned long x[4];\n \n void foo(void)"}, {"sha": "1deba2a52df3deedbc9893144403f11e73c737b8", "filename": "gcc/testsuite/gcc.c-torture/compile/20011109-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011109-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011109-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011109-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef struct { short x[4]; } S;\n typedef struct { unsigned int a, b, c; S *d; } T;\n "}, {"sha": "8db5b777089dc143cce32a525dbc6f95d2b79af2", "filename": "gcc/testsuite/gcc.c-torture/compile/20011218-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011218-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -2,6 +2,8 @@\n    for the indirect call was exposed too early and reload couldn't\n    allocate it for multiplication and division.  */\n \n+/* { dg-require-effective-target indirect_calls } */\n+\n struct S {\n   int a, b;\n   void (*f) (long, int);"}, {"sha": "99aeab7d7cd25a27fe75ec6713848d17be5a85a5", "filename": "gcc/testsuite/gcc.c-torture/compile/20011229-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011229-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011229-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011229-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,5 +1,8 @@\n /* ICE: call insn does not satisfy its constraints, MMIX port.\n    Origin: ghostscript-6.52, reduction from hp@bitrange.com.  */\n+\n+/* { dg-require-effective-target indirect_calls } */\n+\n struct s0\n {\n   void (*init_color)(void *, void *);"}, {"sha": "c14ac07655ed02738429bf75029db33c30a30f24", "filename": "gcc/testsuite/gcc.c-torture/compile/20020129-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020129-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020129-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020129-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,5 +1,7 @@\n /* Test call to static variable.  */\n \n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef struct\n {\n   long long a[10];"}, {"sha": "5b7a17a308064998e10c5c3aae0da9018ae523c4", "filename": "gcc/testsuite/gcc.c-torture/compile/20020320-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020320-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020320-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020320-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -2,6 +2,8 @@\n    This testcase caused infinite loop in flow (several places),\n    because flow assumes gen_jump generates simple_jump_p.  */\n \n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef void (*T) (void);\n extern T x[];\n "}, {"sha": "9bbfc8a66dd8b3fa376845db0d6cc9c66a854777", "filename": "gcc/testsuite/gcc.c-torture/compile/20020706-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020706-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020706-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020706-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,6 +1,8 @@\n // Contributed by Alexandre Oliva <aoliva@redhat.com>\n // From Red Hat case 106165.\n \n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef struct s1\n {\n   unsigned short v1;"}, {"sha": "2391f2085e802d0047f71a64f690762bd12b01ee", "filename": "gcc/testsuite/gcc.c-torture/compile/20020706-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020706-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020706-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020706-2.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,6 +1,8 @@\n // Contributed by Alexandre Oliva <aoliva@redhat.com>\n // From Red Hat case 106165.\n \n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef unsigned short (FUNC_P) (void *, unsigned char *, unsigned short);\n \n void crashIt(int id, FUNC_P *func, unsigned char *funcparm)"}, {"sha": "27f458751086a87e3f80551967c5f3a2363a7776", "filename": "gcc/testsuite/gcc.c-torture/compile/20021205-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021205-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021205-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021205-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef struct x x;\n extern void *baz(char *);\n struct x { char * (*bar) (int); };"}, {"sha": "4bb3f4645af15c225a1c20fe15d71e69663f5dfe", "filename": "gcc/testsuite/gcc.c-torture/compile/20030921-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030921-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030921-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030921-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -2,6 +2,7 @@\n    f is not being emitted. TREE_SYMBOL_REFERENCED was being set\n    instead of calling mark_referenced.  */\n \n+/* { dg-require-effective-target indirect_calls } */\n \n static void f(void);\n void g(void (*x) (void)){x();}"}, {"sha": "1ee1ff7aaa68560dd2c3366cc4cb77e98dd48da6", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,5 +1,7 @@\n /* Declaration of the frame size doesn't work on ptx.  */\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n+\n #ifndef ASIZE\n # define ASIZE 0x10000000000UL\n #endif"}, {"sha": "50965169adcaec9abea115fb567962a8a920b3b7", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-2.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* Declaration of the frame size doesn't work on ptx.  */\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n+\n #define ASIZE 0x1000000000UL\n #include \"20031023-1.c\""}, {"sha": "1bb692f45a984c1cadaf8adb24a2a915d586b9f9", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-3.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* Declaration of the frame size doesn't work on ptx.  */\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n+\n #define ASIZE 0x100000000UL\n #include \"20031023-1.c\""}, {"sha": "85c4dca9cb507e758454aa99d97e105a1f628c62", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-4.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,2 +1,4 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n #define ASIZE 0x80000000UL\n #include \"20031023-1.c\""}, {"sha": "c889bb251c8bc9cac2aaad25b05e4b8f7cd8cbde", "filename": "gcc/testsuite/gcc.c-torture/compile/20040614-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040614-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040614-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040614-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target label_values } */\n+/* { dg-require-effective-target indirect_calls } */\n \n void f(int r1, int *fp) \n {     "}, {"sha": "0f66cb261db1e7b62db7118f89f6ea0e1bdc8dc8", "filename": "gcc/testsuite/gcc.c-torture/compile/20040909-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040909-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040909-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040909-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n static __inline__ int\n one_utf8_to_utf16 () { }\n "}, {"sha": "7bb7cee5a3251951ca6ba7425eb4559926df4973", "filename": "gcc/testsuite/gcc.c-torture/compile/20050122-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050122-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* From PR 19484.  */\n+/* { dg-require-effective-target indirect_calls } */\n+\n extern void foo (void) __attribute__((noreturn));\n int n;\n "}, {"sha": "58ed54eceb3260f9760446fffddbf7feb338e4c8", "filename": "gcc/testsuite/gcc.c-torture/compile/20050202-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050202-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* From PR 19578.  */\n+/* { dg-require-effective-target indirect_calls } */\n+\n extern void foo (void) __attribute__((noreturn));\n \n void"}, {"sha": "5025463d7efa04080de5094e30d07c6f0af03ef8", "filename": "gcc/testsuite/gcc.c-torture/compile/20060208-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060208-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060208-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060208-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,5 +1,7 @@\n /* PR middle-end/26092 */\n+/* { dg-require-effective-target indirect_calls } */\n /* { dg-skip-if \"can't take address of malloc\" { nvptx-*-* } } */\n+\n typedef __SIZE_TYPE__ size_t;\n extern void *malloc (size_t);\n "}, {"sha": "a1f54e8c5fe67e2daf8f7e24a4b5e4dca331451d", "filename": "gcc/testsuite/gcc.c-torture/compile/20081108-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20081108-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20081108-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20081108-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n /* Test function call with function designator involving VLA\n    side-effects does not lead to an ICE.  */\n "}, {"sha": "125b722a6eba1bef0f859b47af7b460e66d29084", "filename": "gcc/testsuite/gcc.c-torture/compile/20150327.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20150327.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20150327.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20150327.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n int a;\n int (*b)(), (*c)();\n int fn1(int p1) {"}, {"sha": "817fff061e9b31df53c479c1391ef4a78460e036", "filename": "gcc/testsuite/gcc.c-torture/compile/920428-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920428-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920428-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920428-2.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n double sin(double x);\n double cos(double x);\n double tan(double x);"}, {"sha": "b9f9dcbaeb067fc51a0e55ead121a5f123825851", "filename": "gcc/testsuite/gcc.c-torture/compile/920928-5.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920928-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920928-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920928-5.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,7 @@\n /* REPRODUCED:CC1:SIGNAL MACHINE:m68k OPTIONS:-fpcc-struct-return */\n+\n+/* { dg-require-effective-target indirect_calls } */\n+\n struct b{};\n f(struct b(*f)())\n {"}, {"sha": "06466f5e58716b349951edcf05593e93ff07ff44", "filename": "gcc/testsuite/gcc.c-torture/compile/930117-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930117-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930117-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930117-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n f(x)\n {\n   (*(void (*)())&x)();"}, {"sha": "360bbbc15083f25d9d4e3009740976eaf6f2465d", "filename": "gcc/testsuite/gcc.c-torture/compile/930607-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930607-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930607-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930607-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef void f ();\n typedef f *pf;\n long long i;"}, {"sha": "dfbedf7d6741f9162f4d21aa8cbb9a20f73df070", "filename": "gcc/testsuite/gcc.c-torture/compile/991213-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991213-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991213-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991213-2.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef long\t\t__kernel_time_t;\n typedef __kernel_time_t\t\ttime_t;\n time2("}, {"sha": "893f4e764acbdf7c7f0ad63bbc5ae87a3ba6d526", "filename": "gcc/testsuite/gcc.c-torture/compile/callind.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcallind.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcallind.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcallind.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n bar (foo, a)\n      int (**foo) ();\n {"}, {"sha": "7e6f56c16fb96fb4d15760cc458d1d84cee01fc9", "filename": "gcc/testsuite/gcc.c-torture/compile/calls-void.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls-void.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls-void.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls-void.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,5 +1,6 @@\n /* { dg-require-effective-target ptr32plus } */\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n \n typedef void  (*T)(void);\n f1 ()"}, {"sha": "48a3b7c77a53ba3b2a0ddd1624992752a41cc6b6", "filename": "gcc/testsuite/gcc.c-torture/compile/calls.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,5 +1,6 @@\n /* { dg-require-effective-target ptr32plus } */\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n \n typedef void  *(*T)(void);\n f1 ()"}, {"sha": "f6f2a5dc13339176e564fbcac255602ff2abaf0a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr21840.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr21840.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr21840.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr21840.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n void fn_show_state(void);\n typedef void (*fn_handler_fn)(void);\n static fn_handler_fn fn_handler[1];"}, {"sha": "3cc541cb328f6e64633aed348434cb9ab03a2486", "filename": "gcc/testsuite/gcc.c-torture/compile/pr32139.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32139.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* PR tree-optimization/32139 */\n+/* { dg-require-effective-target indirect_calls } */\n+\n int foo (void);\n int bar (void) __attribute__ ((const));\n "}, {"sha": "9debd46df583bca9a734bffbfa0260ffe723e177", "filename": "gcc/testsuite/gcc.c-torture/compile/pr35607.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35607.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35607.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35607.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n extern void (*__fini_array_start []) (void);\n extern void (*__fini_array_end []) (void);\n void"}, {"sha": "48a57b637d7ef378278659fc0c0321abcc8659cc", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37433-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n void regex_subst(void)\n {\n   const void *subst = \"\";"}, {"sha": "95d168afa2f3c6350d05c0527e358411ac618b87", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37433.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37433.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n int regex_subst(void)\n {\n   const void *subst = \"\";"}, {"sha": "5cb3b0554ee4b360ea19ea55c05d6874ae3f17d5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39941.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39941.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39941.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39941.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef void (*entry_func) (void) __attribute__ ((noreturn));\n extern entry_func entry_addr;\n static void bsd_boot_entry (void)"}, {"sha": "37c5a918ad4f1d18e8841c9483c1820690987236", "filename": "gcc/testsuite/gcc.c-torture/compile/pr40080.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40080.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40080.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40080.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n extern void *ff(void*,int);\n \n struct lpgl { struct lpgl *next; };"}, {"sha": "3875f4efcd46895ecfa95d007108db0bbfa57b4a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43635.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43635.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43635.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43635.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n+\n extern void d (void);\n \n void (*foo (void)) (float)"}, {"sha": "710bf7e9ec9d60068c9c883029b74c5319c308b6", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43791.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43791.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43791.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43791.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n int owner();\n int clear();\n "}, {"sha": "83442decd1cdc76e6130e94188d147f2e282b3b1", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43845.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43845.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43845.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43845.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef int __attribute__ ((const)) (*x264_pixel_cmp_t)(void);\n \n typedef struct {"}, {"sha": "bd51089a70ae835149c50ebbd58d3b47ab954ec6", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44043.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44043.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44043.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44043.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef unsigned char __u8;\n typedef unsigned short __u16;\n typedef unsigned int __u32;"}, {"sha": "c06bc2118aad54eb5fc2ee861c17b2638b4f0aee", "filename": "gcc/testsuite/gcc.c-torture/compile/pr51694.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr51694.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr51694.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr51694.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-require-effective-target indirect_calls } */\n+\n void\n foo (x, fn)\n   void (*fn) ();"}, {"sha": "d649d7197222a606191f5970e0b9592241d9ca20", "filename": "gcc/testsuite/gcc.c-torture/compile/pr77754-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-2.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,5 @@\n // { dg-require-effective-target alloca }\n+// { dg-require-effective-target indirect_calls }\n /* PR c/77754 */\n \n int fn3();"}, {"sha": "51d7ca71966cb87562dccfc1f9a8db6210d454c4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr77754-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-3.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,5 @@\n // { dg-require-effective-target alloca }\n+// { dg-require-effective-target indirect_calls }\n /* PR c/77754 */\n \n int fn3();"}, {"sha": "53216bb6e7c22b068d0a4ce9df62b046b76c6194", "filename": "gcc/testsuite/gcc.c-torture/compile/pr77754-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77754-4.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,5 @@\n // { dg-require-effective-target alloca }\n+// { dg-require-effective-target indirect_calls }\n /* PR c/77754 */\n \n int fn3();"}, {"sha": "efac68233f63c07ec1884b7dda83c90ff75cb3bf", "filename": "gcc/testsuite/gcc.c-torture/compile/pr89663-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89663-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89663-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89663-2.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/89663 */\n+/* { dg-require-effective-target indirect_calls } */\n \n int irint (double);\n long lrint (double);"}, {"sha": "07dad8a16a78d4aeb7540148a3fbdce1e13d8fe9", "filename": "gcc/testsuite/gcc.c-torture/compile/pta-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpta-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpta-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpta-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target indirect_calls } */\n+\n typedef struct JSObject JSObject;\n typedef struct JSObjectMap *(*JSNewObjectMapOp) (JSObject *obj);\n typedef JSObject *(*JSGetMethodOp) (JSObject *obj);"}, {"sha": "c06f5a19b0170645d3fcdd651545a9dcc3294d62", "filename": "gcc/testsuite/gcc.c-torture/compile/stack-check-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstack-check-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstack-check-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstack-check-1.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target indirect_calls } */\n /* { dg-require-effective-target untyped_assembly } */\n /* { dg-require-stack-check \"\" } */\n /* { dg-additional-options \"-fstack-check\" } */"}, {"sha": "7888cb1b1daccf847183847b6a0ea508cc21caad", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-18.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-18.c?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -4,6 +4,7 @@\n    with zero or excessive size trigger either -Walloc-zero or\n    -Walloc-size-larger-than warnings.\n    { dg-do compile }\n+   { dg-require-effective-target indirect_calls }\n    { dg-options \"-O2 -Wall -Walloc-zero -ftrack-macro-expansion=0\" } */\n \n #define ATTR(...) __attribute__ ((__VA_ARGS__))"}, {"sha": "4d03cc0718bc6c9d3230d0af03bf538111b7c1de", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5362c6aea5ea6b07803d8f9f6f783154e250ce4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=a5362c6aea5ea6b07803d8f9f6f783154e250ce4", "patch": "@@ -9502,3 +9502,11 @@ proc check_effective_target_mfentry { } {\n \t        void foo (void) { }\n     } \"-mfentry\"]\n }\n+\n+# Return 1 if this target supports indirect calls\n+proc check_effective_target_indirect_calls { } {\n+  if { [istarget bpf-*-*] } {\n+        return 0\n+  }\n+  return 1\n+}"}]}