{"sha": "944e24a31a9b3b3c4494853a8e2a2d589f65519f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0ZTI0YTMxYTliM2IzYzQ0OTQ4NTNhOGUyYTJkNTg5ZjY1NTE5Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-05-29T09:42:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-29T09:42:16Z"}, "message": "[Ada] Plug small hole in -gnatR output\n\nThe -gnatR switch outputs representation information for locally-defined\ntypes but it was skipping those defined in blocks without label, unlike\nthose defined in named blocks.  This change plugs this small hole.\n\nThe following procedure:\n\nprocedure P is\nbegin\n  declare\n    type R is record\n      I : Integer;\n    end record;\n  begin\n    null;\n  end;\nend;\n\nmust now generate the following output with -gnatR:\n\nRepresentation information for unit P (body)\n--------------------------------------------\n\nfor B_1.R'Size use 32;\nfor B_1.R'Alignment use 4;\nfor B_1.R use record\n   I at 0 range  0 .. 31;\nend record;\n\n2018-05-29  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* repinfo.adb (List_Entities): Also recurse into blocks without label.\n\nFrom-SVN: r260884", "tree": {"sha": "32d0a4ddf43bc8f544bea46b9d63e629baa3c54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32d0a4ddf43bc8f544bea46b9d63e629baa3c54e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944e24a31a9b3b3c4494853a8e2a2d589f65519f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944e24a31a9b3b3c4494853a8e2a2d589f65519f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944e24a31a9b3b3c4494853a8e2a2d589f65519f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944e24a31a9b3b3c4494853a8e2a2d589f65519f/comments", "author": null, "committer": null, "parents": [{"sha": "3747db827dfedd0f91e08f74b4082da8c0b2df5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3747db827dfedd0f91e08f74b4082da8c0b2df5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3747db827dfedd0f91e08f74b4082da8c0b2df5e"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0d478b01bb1d179295591eec278f7d7a8528315e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944e24a31a9b3b3c4494853a8e2a2d589f65519f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944e24a31a9b3b3c4494853a8e2a2d589f65519f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=944e24a31a9b3b3c4494853a8e2a2d589f65519f", "patch": "@@ -1,3 +1,7 @@\n+2018-05-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* repinfo.adb (List_Entities): Also recurse into blocks without label.\n+\n 2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Expand_N_Subprogram_Body): Do not generate push/pop for"}, {"sha": "a88a3f248a3ddb0f61866f7597dc5b978d582d8e", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944e24a31a9b3b3c4494853a8e2a2d589f65519f/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944e24a31a9b3b3c4494853a8e2a2d589f65519f/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=944e24a31a9b3b3c4494853a8e2a2d589f65519f", "patch": "@@ -408,7 +408,12 @@ package body Repinfo is\n             --  info for the full view). If debug flag A is set, then all\n             --  entities are listed\n \n-            if (Comes_From_Source (E)\n+            if ((Comes_From_Source (E)\n+                   or else (Ekind (E) = E_Block\n+                              and then\n+                            Nkind (Parent (E)) = N_Implicit_Label_Declaration\n+                              and then\n+                            Comes_From_Source (Label_Construct (Parent (E)))))\n               and then not Is_Incomplete_Or_Private_Type (E)\n               and then not (Ekind (E) = E_Constant\n                               and then Present (Full_View (E))))"}]}