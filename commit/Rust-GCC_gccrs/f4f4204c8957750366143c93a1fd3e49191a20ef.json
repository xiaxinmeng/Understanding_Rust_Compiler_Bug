{"sha": "f4f4204c8957750366143c93a1fd3e49191a20ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmNDIwNGM4OTU3NzUwMzY2MTQzYzkzYTFmZDNlNDkxOTFhMjBlZg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-08-12T15:59:34Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-08-12T15:59:34Z"}, "message": "[AArch64] Fix name of macros called in the vdup_lane Neon intrinsics\n\ngcc/\n\t* config/aarch64/arm_none.h\n\t(vdup<bhsd>_lane_<su><8,16,32,64>): Fix macro call.\n\nFrom-SVN: r201666", "tree": {"sha": "f15c6bdbe365baf61e9932079272529a57d38ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f15c6bdbe365baf61e9932079272529a57d38ebd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f4204c8957750366143c93a1fd3e49191a20ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f4204c8957750366143c93a1fd3e49191a20ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f4204c8957750366143c93a1fd3e49191a20ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f4204c8957750366143c93a1fd3e49191a20ef/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "133b1a8e84badd5416c2274ddf5feee4ca69a971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/133b1a8e84badd5416c2274ddf5feee4ca69a971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/133b1a8e84badd5416c2274ddf5feee4ca69a971"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "34d18b8fd41b895a4d75cd832811a0cd1b993bee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f4204c8957750366143c93a1fd3e49191a20ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f4204c8957750366143c93a1fd3e49191a20ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4f4204c8957750366143c93a1fd3e49191a20ef", "patch": "@@ -1,3 +1,8 @@\n+2013-08-12  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/arm_none.h\n+\t(vdup<bhsd>_lane_<su><8,16,32,64>): Fix macro call.\n+\n 2013-08-12  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc (m32r-linux): Allow for tmake_file not being empty."}, {"sha": "4a480fb3da7a5dbd4976ce62b15d3a77284a6096", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f4204c8957750366143c93a1fd3e49191a20ef/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f4204c8957750366143c93a1fd3e49191a20ef/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=f4f4204c8957750366143c93a1fd3e49191a20ef", "patch": "@@ -19780,49 +19780,49 @@ vcvtpq_u64_f64 (float64x2_t __a)\n __extension__ static __inline int8x1_t __attribute__ ((__always_inline__))\n vdupb_lane_s8 (int8x16_t a, int const b)\n {\n-  return __aarch64_vget_laneq_s8 (a, b);\n+  return __aarch64_vgetq_lane_s8 (a, b);\n }\n \n __extension__ static __inline uint8x1_t __attribute__ ((__always_inline__))\n vdupb_lane_u8 (uint8x16_t a, int const b)\n {\n-  return __aarch64_vget_laneq_u8 (a, b);\n+  return __aarch64_vgetq_lane_u8 (a, b);\n }\n \n __extension__ static __inline int16x1_t __attribute__ ((__always_inline__))\n vduph_lane_s16 (int16x8_t a, int const b)\n {\n-  return __aarch64_vget_laneq_s16 (a, b);\n+  return __aarch64_vgetq_lane_s16 (a, b);\n }\n \n __extension__ static __inline uint16x1_t __attribute__ ((__always_inline__))\n vduph_lane_u16 (uint16x8_t a, int const b)\n {\n-  return __aarch64_vget_laneq_u16 (a, b);\n+  return __aarch64_vgetq_lane_u16 (a, b);\n }\n \n __extension__ static __inline int32x1_t __attribute__ ((__always_inline__))\n vdups_lane_s32 (int32x4_t a, int const b)\n {\n-  return __aarch64_vget_laneq_s32 (a, b);\n+  return __aarch64_vgetq_lane_s32 (a, b);\n }\n \n __extension__ static __inline uint32x1_t __attribute__ ((__always_inline__))\n vdups_lane_u32 (uint32x4_t a, int const b)\n {\n-  return __aarch64_vget_laneq_u32 (a, b);\n+  return __aarch64_vgetq_lane_u32 (a, b);\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vdupd_lane_s64 (int64x2_t a, int const b)\n {\n-  return __aarch64_vget_laneq_s64 (a, b);\n+  return __aarch64_vgetq_lane_s64 (a, b);\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vdupd_lane_u64 (uint64x2_t a, int const b)\n {\n-  return __aarch64_vget_laneq_s64 (a, b);\n+  return __aarch64_vgetq_lane_u64 (a, b);\n }\n \n /* vld1 */"}]}