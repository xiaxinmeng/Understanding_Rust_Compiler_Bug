{"sha": "c2e0d0c1cfb4bf29daed189b39885841ee201a65", "node_id": "C_kwDOANBUbNoAKGMyZTBkMGMxY2ZiNGJmMjlkYWVkMTg5YjM5ODg1ODQxZWUyMDFhNjU", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-28T15:06:54Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-01T07:58:36Z"}, "message": "[nvptx] Handle DCmode in define_expand \"omp_simt_xchg_{bfly,idx}\"\n\nFor a test-case doing an openmp target simd reduction on a complex double:\n...\n  DOUBLE COMPLEX :: counter_N0\n  ...\n  !$OMP TARGET SIMD reduction(+: counter_N0)\n...\nwe run into:\n...\nduring RTL pass: expand\nb.f90: In function \u2018MAIN__._omp_fn.0\u2019:\nb.f90:23:32: internal compiler error: in expand_insn, at optabs.cc:8029\n   23 |     counter_N0 = counter_N0 + 1.\n      |                                ^\n0x10f1cd3 expand_insn(insn_code, unsigned int, expand_operand*)\n        gcc/optabs.cc:8029\n0xeac435 expand_GOMP_SIMT_XCHG_BFLY\n        gcc/internal-fn.cc:375\n...\n\nFix this by handling DCmode and CDImode in define_expand\n\"omp_simt_xchg_{bfly,idx}\".\n\nTested on x86_64 with nvptx accelerator.\n\ngcc/ChangeLog:\n\n2022-02-28  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/102429\n\t* config/nvptx/nvptx.cc (nvptx_gen_shuffle): Handle DCmode and CDImode.\n\t* config/nvptx/nvptx.md\n\t(define_predicate \"nvptx_register_or_complex_di_df_register_operand\"):\n\tNew predicate.\n\t(define_expand \"omp_simt_xchg_bfly\", define_expand \"omp_simt_xchg_idx\"):\n\tUse nvptx_register_or_complex_di_df_register_operand.", "tree": {"sha": "375166c8b615804bbd4723656f2339f5058c8c49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/375166c8b615804bbd4723656f2339f5058c8c49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2e0d0c1cfb4bf29daed189b39885841ee201a65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e0d0c1cfb4bf29daed189b39885841ee201a65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2e0d0c1cfb4bf29daed189b39885841ee201a65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e0d0c1cfb4bf29daed189b39885841ee201a65/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d59d13c89503baf92d14b04c05708a6296916fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59d13c89503baf92d14b04c05708a6296916fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59d13c89503baf92d14b04c05708a6296916fad"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "6ca99a61cbd2013bf1cfe90353f7a18c4c06c86b", "filename": "gcc/config/nvptx/nvptx.cc", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e0d0c1cfb4bf29daed189b39885841ee201a65/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e0d0c1cfb4bf29daed189b39885841ee201a65/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc?ref=c2e0d0c1cfb4bf29daed189b39885841ee201a65", "patch": "@@ -1941,6 +1941,23 @@ nvptx_gen_shuffle (rtx dst, rtx src, rtx idx, nvptx_shuffle_kind kind)\n \n   switch (GET_MODE (dst))\n     {\n+      case E_DCmode:\n+      case E_CDImode:\n+\t{\n+\t  gcc_assert (GET_CODE (dst) == CONCAT);\n+\t  gcc_assert (GET_CODE (src) == CONCAT);\n+\t  rtx dst_real = XEXP (dst, 0);\n+\t  rtx dst_imag = XEXP (dst, 1);\n+\t  rtx src_real = XEXP (src, 0);\n+\t  rtx src_imag = XEXP (src, 1);\n+\n+\t  start_sequence ();\n+\t  emit_insn (nvptx_gen_shuffle (dst_real, src_real, idx, kind));\n+\t  emit_insn (nvptx_gen_shuffle (dst_imag, src_imag, idx, kind));\n+\t  res = get_insns ();\n+\t  end_sequence ();\n+\t}\n+\tbreak;\n     case E_SImode:\n       res = gen_nvptx_shufflesi (dst, src, idx, GEN_INT (kind));\n       break;"}, {"sha": "a453c1de503d84e1cc8837fa9b961f7a80d7b742", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e0d0c1cfb4bf29daed189b39885841ee201a65/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e0d0c1cfb4bf29daed189b39885841ee201a65/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=c2e0d0c1cfb4bf29daed189b39885841ee201a65", "patch": "@@ -94,6 +94,18 @@\n   return register_operand (op, mode);\n })\n \n+(define_predicate \"nvptx_register_or_complex_di_df_register_operand\"\n+  (ior (match_code \"reg\")\n+       (match_code \"concat\"))\n+{\n+  if (GET_CODE (op) == CONCAT)\n+    return ((GET_MODE (op) == DCmode || GET_MODE (op) == CDImode)\n+\t    && nvptx_register_operand (XEXP (op, 0), mode)\n+\t    && nvptx_register_operand (XEXP (op, 1), mode));\n+\n+  return nvptx_register_operand (op, mode);\n+})\n+\n (define_predicate \"nvptx_nonimmediate_operand\"\n   (match_code \"mem,reg\")\n {\n@@ -1902,8 +1914,8 @@\n ;; Implement IFN_GOMP_SIMT_XCHG_BFLY: perform a \"butterfly\" exchange\n ;; across lanes\n (define_expand \"omp_simt_xchg_bfly\"\n-  [(match_operand 0 \"nvptx_register_operand\" \"=R\")\n-   (match_operand 1 \"nvptx_register_operand\" \"R\")\n+  [(match_operand 0 \"nvptx_register_or_complex_di_df_register_operand\" \"=R\")\n+   (match_operand 1 \"nvptx_register_or_complex_di_df_register_operand\" \"R\")\n    (match_operand:SI 2 \"nvptx_nonmemory_operand\" \"Ri\")]\n   \"\"\n {\n@@ -1915,8 +1927,8 @@\n ;; Implement IFN_GOMP_SIMT_XCHG_IDX: broadcast value in operand 1\n ;; from lane given by index in operand 2 to operand 0 in all lanes\n (define_expand \"omp_simt_xchg_idx\"\n-  [(match_operand 0 \"nvptx_register_operand\" \"=R\")\n-   (match_operand 1 \"nvptx_register_operand\" \"R\")\n+  [(match_operand 0 \"nvptx_register_or_complex_di_df_register_operand\" \"=R\")\n+   (match_operand 1 \"nvptx_register_or_complex_di_df_register_operand\" \"R\")\n    (match_operand:SI 2 \"nvptx_nonmemory_operand\" \"Ri\")]\n   \"\"\n {"}]}