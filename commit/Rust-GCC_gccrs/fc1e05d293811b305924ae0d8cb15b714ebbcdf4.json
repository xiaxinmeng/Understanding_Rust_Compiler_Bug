{"sha": "fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMxZTA1ZDI5MzgxMWIzMDU5MjRhZTBkOGNiMTViNzE0ZWJiY2RmNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-01-16T17:14:48Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-01-16T17:14:48Z"}, "message": "re PR fortran/47177 (bad example of using -dM in manual)\n\n2011-01-15  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.texi: Update Fortran 2003 Status section.\n\n        PR fortran/47177\n        * invoke.texi: Add missing \"-E\" to the -dM example.\n\nFrom-SVN: r168857", "tree": {"sha": "53d3b342dee41f09495f782b838acb11cd788e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53d3b342dee41f09495f782b838acb11cd788e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e313241f91a24365102a657ff8bb04a647b7963b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e313241f91a24365102a657ff8bb04a647b7963b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e313241f91a24365102a657ff8bb04a647b7963b"}], "stats": {"total": 120, "additions": 79, "deletions": 41}, "files": [{"sha": "a51003c54b06b18ade3778ef54ed702f27a452b6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "patch": "@@ -1,3 +1,10 @@\n+2011-01-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.texi: Update Fortran 2003 Status section.\n+\n+\tPR fortran/47177\n+\t* invoke.texi: Add missing \"-E\" to the -dM example.\n+\n 2011-01-13  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/47268"}, {"sha": "39180353111843b6d54e069cf055db0ba283d220", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 69, "deletions": 38, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "patch": "@@ -1,7 +1,7 @@\n \\input texinfo  @c -*-texinfo-*-\n @c %**start of header\n @setfilename gfortran.info\n-@set copyrights-gfortran 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+@set copyrights-gfortran 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n \n @include gcc-common.texi\n \n@@ -803,18 +803,71 @@ list can be found below.  See also the\n @uref{http://gcc.gnu.org/wiki/Fortran2003, wiki page} about Fortran 2003.\n \n @itemize\n-@item \n-Intrinsics @code{command_argument_count}, @code{get_command},\n-@code{get_command_argument}, @code{get_environment_variable}, and\n-@code{move_alloc}.\n+@item Procedure pointers including procedure-pointer components with\n+@code{PASS} attribute.\n \n-@item \n+@item Procedures which are bound to a derived type (type-bound procedures)\n+including @code{PASS}, @code{PROCEDURE} and @code{GENERIC}, and\n+operators bound to a type.\n+\n+@item Abstract interfaces and and type extension with the possibility to\n+override type-bound procedures or to have deferred binding.\n+\n+@item Polymorphic entities (``@code{CLASS}'') for derived types -- including\n+@code{SAME_TYPE_AS}, @code{EXTENDS_TYPE_OF} and @code{SELECT TYPE}.\n+Note that the support for array-valued polymorphic entities is incomplete\n+and unlimited polymophism is currently not supported.\n+\n+@item The @code{ASSOCIATE} construct.\n+\n+@item Interoperability with C including enumerations, \n+\n+@item In structure constructors the components with default values may be\n+omitted.\n+\n+@item Extensions to the @code{ALLOCATE} statement, allowing for a\n+type-specification with type parameter and for allocation and initialization\n+from a @code{SOURCE=} expression; @code{ALLOCATE} and @code{DEALLOCATE}\n+optionally return an error message string via @code{ERRMSG=}.\n+\n+@item Reallocation on assignment for arrays: If an intrinsic assignment is\n+used, an allocatable variable on the left-hand side is automatically allocated\n+(if unallocated) or reallocated (if the shape is different). Currently, the\n+reallocation for scalars is not implemented.\n+\n+@item Transferring of allocations via @code{MOVE_ALLOC}.\n+\n+@item The @code{PRIVATE} and @code{PUBLIC} attributes may be given individually\n+to derived-type components.\n+\n+@item In pointer assignments, the lower bound may be specified and\n+the remapping of elements is supported.\n+\n+@item For pointers an @code{INTENT} may be specified which affect the\n+association status not the value of the pointer target.\n+\n+@item Intrinsics @code{command_argument_count}, @code{get_command},\n+@code{get_command_argument}, and @code{get_environment_variable}.\n+\n+@item Support for unicode characters (ISO 10646) and UTF-8, including\n+the @code{SELECTED_CHAR_KIND} and @code{NEW_LINE} intrinsic functions.\n+\n+@item Support for binary, octal and hexadecimal (BOZ) constants in the\n+intrinsic functions @code{INT}, @code{REAL}, @code{CMPLX} and @code{DBLE}.\n+\n+@item\n @cindex array, constructors\n @cindex @code{[...]}\n Array constructors using square brackets.  That is, @code{[...]} rather\n than @code{(/.../)}.  Type-specification for array constructors like\n @code{(/ some-type :: ... /)}.\n \n+@item Extensions to the specification and initialization expressions,\n+including the support for intrinsics with real and complex arguments.\n+\n+@item Support for the asynchronous input/output syntax; however, the\n+data transfer is currently always synchronously performed. \n+\n @item\n @cindex @code{FLUSH} statement\n @cindex statement, @code{FLUSH}\n@@ -850,14 +903,6 @@ TR 15581:\n @code{ALLOCATABLE} components of derived types\n @end itemize\n \n-@item\n-@cindex @code{ALLOCATE}\n-The @code{ERRMSG=} tag is now supported in @code{ALLOCATE} and\n-@code{DEALLOCATE} statements.  The @code{SOURCE=} tag is supported\n-in an @code{ALLOCATE} statement.  An @emph{intrinsic-type-spec}\n-can be used as the @emph{type-spec} in an @code{ALLOCATE} statement;\n-while the use of a @emph{derived-type-name} is currently unsupported.\n-\n @item\n @cindex @code{STREAM} I/O\n @cindex @code{ACCESS='STREAM'} I/O\n@@ -867,6 +912,10 @@ allowing I/O without any record structure.\n @item\n Namelist input/output for internal files.\n \n+@item Further I/O extensions: Rounding during formatted output, using of\n+a decimal comma instead of a decimal point, setting whether a plus sign\n+should appear for positive numbers.\n+\n @item\n @cindex @code{PROTECTED} statement\n @cindex statement, @code{PROTECTED}\n@@ -888,41 +937,23 @@ The @code{VOLATILE} statement and attribute.\n The @code{IMPORT} statement, allowing to import\n host-associated derived types.\n \n+@item The intrinsic modules @code{ISO_FORTRAN_ENVIRONMENT} is supported,\n+which contains parameters of the I/O units, storage sizes. Additionally,\n+procedures for C interoperability are available in the @code{ISO_C_BINDING}\n+module.\n+\n @item\n @cindex @code{USE, INTRINSIC} statement\n @cindex statement, @code{USE, INTRINSIC}\n @cindex @code{ISO_FORTRAN_ENV} statement\n @cindex statement, @code{ISO_FORTRAN_ENV}\n @code{USE} statement with @code{INTRINSIC} and @code{NON_INTRINSIC}\n attribute; supported intrinsic modules: @code{ISO_FORTRAN_ENV},\n-@code{OMP_LIB} and @code{OMP_LIB_KINDS}.\n+@code{ISO_C_BINDING}, @code{OMP_LIB} and @code{OMP_LIB_KINDS}.\n \n @item\n Renaming of operators in the @code{USE} statement.\n \n-@item\n-@cindex ISO C Bindings\n-Interoperability with C (ISO C Bindings)\n-\n-@item\n-BOZ as argument of @code{INT}, @code{REAL}, @code{DBLE} and @code{CMPLX}.\n-\n-@item\n-@cindex type-bound procedure\n-@cindex type-bound operator\n-Type-bound procedures with @code{PROCEDURE} or @code{GENERIC}, and operators\n-bound to a derived-type.\n-\n-@item\n-@cindex @code{EXTENDS}\n-@cindex derived-type extension\n-Extension of derived-types (the @code{EXTENDS(...)} syntax).\n-\n-@item\n-@cindex @code{ABSTRACT} type\n-@cindex @code{DEFERRED} procedure binding\n-@code{ABSTRACT} derived-types and declaring procedure bindings @code{DEFERRED}.\n-\n @end itemize\n \n "}, {"sha": "ae11356f834c9ce8a511a5c932313dde64eb819c", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e05d293811b305924ae0d8cb15b714ebbcdf4/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=fc1e05d293811b305924ae0d8cb15b714ebbcdf4", "patch": "@@ -1,11 +1,11 @@\n-@c Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+@c Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n @c Free Software Foundation, Inc.\n @c This is part of the GNU Fortran manual.   \n @c For copying conditions, see the file gfortran.texi.\n \n @ignore\n @c man begin COPYRIGHT\n-Copyright @copyright{} 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+Copyright @copyright{} 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n@@ -410,7 +410,7 @@ preprocessor, including predefined macros. This gives you a way\n of finding out what is predefined in your version of the preprocessor.\n Assuming you have no file @file{foo.f90}, the command\n @smallexample\n-  touch foo.f90; gfortran -cpp -dM foo.f90\n+  touch foo.f90; gfortran -cpp -E -dM foo.f90\n @end smallexample\n will show all the predefined macros.\n "}]}