{"sha": "46238b7dab9626030712b1f6aa9b2abd18e3e82e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyMzhiN2RhYjk2MjYwMzA3MTJiMWY2YWE5YjJhYmQxOGUzZTgyZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-03-24T21:50:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-03-24T21:50:31Z"}, "message": "sparc.h (REVERSIBLE_CC_MODE): Revert Jan, 25 change until infrastructure is finished.\n\n\t* config/sparc/sparc.h (REVERSIBLE_CC_MODE): Revert Jan, 25 change\n\tuntil infrastructure is finished.\n\nFrom-SVN: r32731", "tree": {"sha": "cf2c7bdc285f0a5e5f9a8eff3ee4900bd5d36c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf2c7bdc285f0a5e5f9a8eff3ee4900bd5d36c86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46238b7dab9626030712b1f6aa9b2abd18e3e82e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46238b7dab9626030712b1f6aa9b2abd18e3e82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46238b7dab9626030712b1f6aa9b2abd18e3e82e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46238b7dab9626030712b1f6aa9b2abd18e3e82e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d167afd46ed1252cef65dbb043c2815b082fd89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d167afd46ed1252cef65dbb043c2815b082fd89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d167afd46ed1252cef65dbb043c2815b082fd89"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "166f4ae1d4a629ba7c47d1ecb2d7dc3d1e1d8710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46238b7dab9626030712b1f6aa9b2abd18e3e82e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46238b7dab9626030712b1f6aa9b2abd18e3e82e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46238b7dab9626030712b1f6aa9b2abd18e3e82e", "patch": "@@ -40,6 +40,9 @@\n \t* sparc-protos.h (output_sibcall, eligible_for_sibcall_delay): New\n \tprototypes.\n \n+\t* config/sparc/sparc.h (REVERSIBLE_CC_MODE): Revert Jan, 25 change\n+\tuntil infrastructure is finished.\n+\n Fri Mar 24 13:49:45 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* integrate.c (save_for_inline_nocopy): Clear in_nonparm_insns here."}, {"sha": "c9368ebe06005b60bb141b2389aeb581933a43cd", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46238b7dab9626030712b1f6aa9b2abd18e3e82e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46238b7dab9626030712b1f6aa9b2abd18e3e82e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=46238b7dab9626030712b1f6aa9b2abd18e3e82e", "patch": "@@ -2659,8 +2659,9 @@ do {                                                                    \\\n \n /* Return non-zero if MODE implies a floating point inequality can be\n    reversed.  For Sparc this is always true because we have a full\n-   compliment of ordered and unordered comparisons.  */\n-#define REVERSIBLE_CC_MODE(MODE) 1\n+   compliment of ordered and unordered comparisons, but until generic\n+   code knows how to reverse it correctly we keep the old definition.  */\n+#define REVERSIBLE_CC_MODE(MODE) ((MODE) != CCFPEmode && (MODE) != CCFPmode)\n \n /* A function address in a call instruction\n    is a byte address (for indexing purposes)"}]}