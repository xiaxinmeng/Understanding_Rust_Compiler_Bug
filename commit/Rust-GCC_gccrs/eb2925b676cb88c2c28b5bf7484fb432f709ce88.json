{"sha": "eb2925b676cb88c2c28b5bf7484fb432f709ce88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIyOTI1YjY3NmNiODhjMmMyOGI1YmY3NDg0ZmI0MzJmNzA5Y2U4OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-05-25T23:24:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-05-25T23:24:07Z"}, "message": "re PR libgcj/21692 (unexpected java.lang.NoClassDefFoundError)\n\n        PR libgcj/21692\n        * sysdep/descriptor-n.h: New file.\n        * sysdep/descriptor-y.h: New file.\n        * sysdep/powerpc/descriptor.h: New file.\n        * configure.host: Set $descriptor_h appropriate for the host.\n        * configure.ac: Link it.\n        * configure: Regenerate.\n        * stacktrace.cc: Include sysdep/descriptor.h.\n        (_Jv_StackTrace::UpdateNCodeMap): Use UNWRAP_FUNCTION_DESCRIPTOR.\n\nFrom-SVN: r100173", "tree": {"sha": "decadfd6855f01f7f2fa5b72d94ed6ce6e6edfea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/decadfd6855f01f7f2fa5b72d94ed6ce6e6edfea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb2925b676cb88c2c28b5bf7484fb432f709ce88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2925b676cb88c2c28b5bf7484fb432f709ce88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2925b676cb88c2c28b5bf7484fb432f709ce88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2925b676cb88c2c28b5bf7484fb432f709ce88/comments", "author": null, "committer": null, "parents": [{"sha": "2f828272d85e2ef044aaab493d67d38dbd2dead8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f828272d85e2ef044aaab493d67d38dbd2dead8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f828272d85e2ef044aaab493d67d38dbd2dead8"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "ca1e1f2e878f833a45c053c7556ffbcdd7a538e6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -1,3 +1,15 @@\n+2005-05-25  Richard Henderson  <rth@redhat.com>\n+\n+\tPR libgcj/21692\n+\t* sysdep/descriptor-n.h: New file.\n+\t* sysdep/descriptor-y.h: New file.\n+\t* sysdep/powerpc/descriptor.h: New file.\n+\t* configure.host: Set $descriptor_h appropriate for the host.\n+\t* configure.ac: Link it.\n+\t* configure: Regenerate.\n+\t* stacktrace.cc: Include sysdep/descriptor.h.\n+\t(_Jv_StackTrace::UpdateNCodeMap): Use UNWRAP_FUNCTION_DESCRIPTOR.\n+\n 2005-05-25  Chris Burdess  <dog@gnu.org>\n \n \t* gnu/xml/dom/ls/SAXEventSink.java: Ignore XML entities in start/"}, {"sha": "0e971e1a5839b0e66e1ed60a12a41b72bbf7b950", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -8511,6 +8511,8 @@ if test -d sysdep; then true; else mkdir sysdep; fi\n \n           ac_config_links=\"$ac_config_links sysdep/backtrace.h:$fallback_backtrace_h\"\n \n+          ac_config_links=\"$ac_config_links sysdep/descriptor.h:$descriptor_h\"\n+\n \n HASH_SYNC_SPEC=\n # Hash synchronization is only useful with posix threads right now.\n@@ -16892,6 +16894,7 @@ do\n   \"include/java-threads.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS include/java-threads.h:include/$THREADH\" ;;\n   \"sysdep/locks.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS sysdep/locks.h:sysdep/$sysdeps_dir/locks.h\" ;;\n   \"sysdep/backtrace.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS sysdep/backtrace.h:$fallback_backtrace_h\" ;;\n+  \"sysdep/descriptor.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS sysdep/descriptor.h:$descriptor_h\" ;;\n   \"include/java-signal.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS include/java-signal.h:$SIGNAL_HANDLER\" ;;\n   \"include/java-signal-aux.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS include/java-signal-aux.h:$SIGNAL_HANDLER_AUX\" ;;\n   \"depfiles\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;"}, {"sha": "b28d1e38716d78c89ea0e4c4352f020d7d717f30", "filename": "libjava/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -707,6 +707,7 @@ AM_CONDITIONAL(USING_NO_THREADS, test \"$THREADS\" = none)\n if test -d sysdep; then true; else mkdir sysdep; fi\n AC_CONFIG_LINKS(sysdep/locks.h:sysdep/$sysdeps_dir/locks.h)\n AC_CONFIG_LINKS(sysdep/backtrace.h:$fallback_backtrace_h)\n+AC_CONFIG_LINKS(sysdep/descriptor.h:$descriptor_h)\n \n HASH_SYNC_SPEC=\n # Hash synchronization is only useful with posix threads right now."}, {"sha": "aec0304692dd818ab6271dfcfab801263f9b0297", "filename": "libjava/configure.host", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -32,6 +32,7 @@\n #                       (i.e it is broken).\n #   fallback_backtrace_h  Header to use for fallback backtrace implementation\n #\t\t\t  (only for targets that don't support DWARF2 unwind)\n+#   descriptor_h\tHeader to use for looking past function descriptors\n \n libgcj_flags=\n libgcj_cflags=\n@@ -268,6 +269,19 @@ case \"${host}\" in\n   ;;\n esac\n \n+case \"${host}\" in\n+  ia64-* | hppa*-*)\n+\tdescriptor_h=sysdep/descriptor-y.h\n+\t;;\n+\n+  rs6000-* | powerpc*-*)\n+\tdescriptor_h=sysdep/powerpc/descriptor.h\n+\t;;\n+\n+  *)\n+\tdescriptor_h=sysdep/descriptor-n.h\n+\t;;\n+esac\n \n libgcj_cflags=\"${libgcj_cflags} ${libgcj_flags}\"\n libgcj_cxxflags=\"${libgcj_cxxflags} ${libgcj_flags}\""}, {"sha": "e02767888353b0d984a99e2330fa645c6ec84b59", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -29,6 +29,7 @@ details.  */\n #include <gnu/gcj/runtime/NameFinder.h>\n \n #include <sysdep/backtrace.h>\n+#include <sysdep/descriptor.h>\n \n using namespace java::lang;\n using namespace java::lang::reflect;\n@@ -62,12 +63,12 @@ _Jv_StackTrace::UpdateNCodeMap ()\n       for (int i=0; i < klass->method_count; i++)\n         {\n \t  _Jv_Method *method = &klass->methods[i];\n+\t  void *ncode = method->ncode;\n \t  // Add non-abstract methods to ncodeMap.\n-\t  if (method->ncode)\n+\t  if (ncode)\n \t    {\n-\t      //printf(\"map->put 0x%x / %s.%s\\n\", method->ncode, klass->name->data,\n-\t      //  method->name->data);\n-\t      ncodeMap->put ((java::lang::Object *) method->ncode, klass);\n+\t      ncode = UNWRAP_FUNCTION_DESCRIPTOR (ncode);\n+\t      ncodeMap->put ((java::lang::Object *)ncode, klass);\n \t    }\n \t}\n     }"}, {"sha": "d640405e25b1a9c991514c69d20f1c42d5972c59", "filename": "libjava/sysdep/descriptor-n.h", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fsysdep%2Fdescriptor-n.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fsysdep%2Fdescriptor-n.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fdescriptor-n.h?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -0,0 +1,3 @@\n+// Given a function pointer, return the code address.\n+\n+#define UNWRAP_FUNCTION_DESCRIPTOR(X)  (X)"}, {"sha": "ca615505d83331a544ab76148745179d35f38b4a", "filename": "libjava/sysdep/descriptor-y.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fsysdep%2Fdescriptor-y.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fsysdep%2Fdescriptor-y.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fdescriptor-y.h?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -0,0 +1,5 @@\n+// Given a function pointer, return the code address.\n+\n+// The function descriptor is actually multiple words,\n+// but we don't care about anything except the first.\n+#define UNWRAP_FUNCTION_DESCRIPTOR(X)  (*(void **)(X))"}, {"sha": "51296c22262386e6c34006449d45db610ab35222", "filename": "libjava/sysdep/powerpc/descriptor.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fsysdep%2Fpowerpc%2Fdescriptor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2925b676cb88c2c28b5bf7484fb432f709ce88/libjava%2Fsysdep%2Fpowerpc%2Fdescriptor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fpowerpc%2Fdescriptor.h?ref=eb2925b676cb88c2c28b5bf7484fb432f709ce88", "patch": "@@ -0,0 +1,9 @@\n+// Given a function pointer, return the code address.\n+\n+#ifdef _CALL_AIX\n+// The function descriptor is actually multiple words,\n+// but we don't care about anything except the first.\n+# define UNWRAP_FUNCTION_DESCRIPTOR(X)  (*(void **)(X))\n+#else\n+# define UNWRAP_FUNCTION_DESCRIPTOR(X)  (X)\n+#endif"}]}