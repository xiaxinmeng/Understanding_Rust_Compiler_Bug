{"sha": "36c028f675622046a0f0261cc62c70f58e9a3b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZjMDI4ZjY3NTYyMjA0NmEwZjAyNjFjYzYyYzcwZjU4ZTlhM2I0Yg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-01-16T12:05:53Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-01-16T12:05:53Z"}, "message": "re PR fortran/17675 ([Regression w.r.t. g77] Alignment constraints not honored in EQUIVALENCE)\n\n2004-01-16  Paul Brook  <paul@codesourcery.com>\n\n\tPR fortran/17675\n\t* trans-common.c (translate_common): Remove duplicate function call.\n\t(finish_equivalences): Preserve alignment when biasing offsets.\ntestsuite/\n\t* gfortran.dg/common_4.f90: New test.\n\nFrom-SVN: r93724", "tree": {"sha": "e72be26edb631135d1891d29924473000aacca6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e72be26edb631135d1891d29924473000aacca6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36c028f675622046a0f0261cc62c70f58e9a3b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c028f675622046a0f0261cc62c70f58e9a3b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c028f675622046a0f0261cc62c70f58e9a3b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c028f675622046a0f0261cc62c70f58e9a3b4b/comments", "author": null, "committer": null, "parents": [{"sha": "3a2794abdb6a38e8e17108ffbd326b3af910f0ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2794abdb6a38e8e17108ffbd326b3af910f0ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2794abdb6a38e8e17108ffbd326b3af910f0ae"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "8fa62a2b7a23748858dd21e585fe2587d3fcf7dd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=36c028f675622046a0f0261cc62c70f58e9a3b4b", "patch": "@@ -1,3 +1,9 @@\n+2004-01-16  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/17675\n+\t* trans-common.c (translate_common): Remove duplicate function call.\n+\t(finish_equivalences): Preserve alignment when biasing offsets.\n+\n 2005-01-15  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de\n \n \t* primary.c (check_digit): Call 'ISXDIGIT' instead of assuming"}, {"sha": "ce6a8b682aa22921ea22bd4b5c7e407943f124ac", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=36c028f675622046a0f0261cc62c70f58e9a3b4b", "patch": "@@ -803,7 +803,6 @@ translate_common (gfc_common_head *common, gfc_symbol *var_list)\n \t\t       common->name, &common->where);\n \n \t  offset = align_segment (&align);\n-\t  apply_segment_offset (current_segment, offset);\n \n \t  if (offset & (max_align - 1))\n \t    {\n@@ -851,7 +850,8 @@ finish_equivalences (gfc_namespace *ns)\n {\n   gfc_equiv *z, *y;\n   gfc_symbol *sym;\n-  HOST_WIDE_INT min_offset;\n+  HOST_WIDE_INT offset;\n+  unsigned HOST_WIDE_INT align;\n \n   for (z = ns->equiv; z; z = z->next)\n     for (y = z->eq; y; y = y->eq)\n@@ -864,13 +864,13 @@ finish_equivalences (gfc_namespace *ns)\n         /* All objects directly or indirectly equivalenced with this symbol.  */\n         add_equivalences ();\n \n-        /* Bias the offsets to to start at zero.  */\n-        min_offset = -current_segment->offset;\n+\t/* Align the block.  */\n+\toffset = align_segment (&align);\n \n-\t/* Ensure the block is properly aligned.  */\n-\tmin_offset += align_segment (NULL);\n+\t/* Ensure all offsets are positive.  */\n+\toffset -= current_segment->offset & ~(align - 1);\n \n-\tapply_segment_offset (current_segment, min_offset);\n+\tapply_segment_offset (current_segment, offset);\n \n \t/* Create the decl.  */\n         create_common (NULL, current_segment);"}, {"sha": "821cfea0393b0d9368308b28fa8dd97ea199fa1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36c028f675622046a0f0261cc62c70f58e9a3b4b", "patch": "@@ -1,3 +1,7 @@\n+2004-01-16  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gfortran.dg/common_4.f90: New test.\n+\n 2005-01-15  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR rtl-optimization/19462"}, {"sha": "9ff21230da98ac24c97901cb78fd85ba114446b2", "filename": "gcc/testsuite/gfortran.dg/common_4.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c028f675622046a0f0261cc62c70f58e9a3b4b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_4.f90?ref=36c028f675622046a0f0261cc62c70f58e9a3b4b", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! Suppress warnings about misaligned common blocks.\n+! { dg-options \"-w\" }\n+! Check misaligned common blocks.\n+program prog\n+  common /block/ a, b, c\n+  integer*1 a\n+  integer*4 b, c\n+  a = 1\n+  b = HUGE(b)\n+  c = 2\n+  call foo\n+end program\n+subroutine foo\n+  common /block/ a, b, c\n+  integer*1 a\n+  integer*4 b, c\n+  if (a .ne. 1 .or. b .ne. HUGE(b) .or. c .ne. 2) call abort\n+end subroutine"}]}