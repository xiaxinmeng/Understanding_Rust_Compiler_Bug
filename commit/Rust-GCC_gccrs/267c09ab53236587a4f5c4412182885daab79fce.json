{"sha": "267c09ab53236587a4f5c4412182885daab79fce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY3YzA5YWI1MzIzNjU4N2E0ZjVjNDQxMjE4Mjg4NWRhYWI3OWZjZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-09-08T08:53:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-08T08:53:21Z"}, "message": "dwarf2out.c (dwarf2out_frame_debug): Assume that in a PARALLEL prologue insn, only the first elt is significant.\n\n\t* dwarf2out.c (dwarf2out_frame_debug): Assume that in a PARALLEL\n \tprologue insn, only the first elt is significant.\n\t(output_call_frame_info): For exception handling, always use 4-byte\n \tfields as specified by the dwarf2 spec.\n\tDon't skip trivial FDEs.\n\nFrom-SVN: r15154", "tree": {"sha": "8490c7867ff072920f95e4731c15c598f2291fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8490c7867ff072920f95e4731c15c598f2291fad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/267c09ab53236587a4f5c4412182885daab79fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267c09ab53236587a4f5c4412182885daab79fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/267c09ab53236587a4f5c4412182885daab79fce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267c09ab53236587a4f5c4412182885daab79fce/comments", "author": null, "committer": null, "parents": [{"sha": "0c82f6bfaea7225d2193ea358884829a2eaed38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c82f6bfaea7225d2193ea358884829a2eaed38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c82f6bfaea7225d2193ea358884829a2eaed38a"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "0db830df543ba5f7f7ffbb907970e0d636f122af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267c09ab53236587a4f5c4412182885daab79fce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267c09ab53236587a4f5c4412182885daab79fce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=267c09ab53236587a4f5c4412182885daab79fce", "patch": "@@ -13,6 +13,14 @@ Sun Sep  7 18:44:50 1997  Jim Wilson  <wilson@cygnus.com>\n \t* m68k/m68k.h (TARGET_SWITCHES): For 68000, 68302, subtract MASK_68881.\n \tFor 68303, 68332, cpu32, subtract MASK_68040_ONLY.\n \n+Sun Sep  7 18:30:46 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* dwarf2out.c (dwarf2out_frame_debug): Assume that in a PARALLEL\n+ \tprologue insn, only the first elt is significant.\n+\t(output_call_frame_info): For exception handling, always use 4-byte\n+ \tfields as specified by the dwarf2 spec.\n+\tDon't skip trivial FDEs.\n+\n Sun Sep  7 14:19:39 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* version.c: Bump for snapshot."}, {"sha": "fac5135275006b938cc51bea171608d72b235888", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267c09ab53236587a4f5c4412182885daab79fce/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267c09ab53236587a4f5c4412182885daab79fce/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=267c09ab53236587a4f5c4412182885daab79fce", "patch": "@@ -860,6 +860,10 @@ dwarf2out_frame_debug (insn)\n   label = dwarf2out_cfi_label ();\n     \n   insn = PATTERN (insn);\n+  /* Assume that in a PARALLEL prologue insn, only the first elt is\n+     significant.  Currently this is true.  */\n+  if (GET_CODE (insn) == PARALLEL)\n+    insn = XVECEXP (insn, 0, 0);\n   assert (GET_CODE (insn) == SET);\n \n   src = SET_SRC (insn);\n@@ -1239,7 +1243,10 @@ output_call_frame_info (for_eh)\n   /* Output the CIE. */\n   ASM_GENERATE_INTERNAL_LABEL (l1, CIE_AFTER_SIZE_LABEL, for_eh);\n   ASM_GENERATE_INTERNAL_LABEL (l2, CIE_END_LABEL, for_eh);\n-  ASM_OUTPUT_DWARF_DELTA (asm_out_file, l2, l1);\n+  if (for_eh)\n+    ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, l2, l1);\n+  else\n+    ASM_OUTPUT_DWARF_DELTA (asm_out_file, l2, l1);\n   if (flag_verbose_asm)\n     fprintf (asm_out_file, \"\\t%s Length of Common Information Entry\",\n \t     ASM_COMMENT_START);\n@@ -1252,7 +1259,7 @@ output_call_frame_info (for_eh)\n     fprintf (asm_out_file, \"\\t%s CIE Identifier Tag\", ASM_COMMENT_START);\n \n   fputc ('\\n', asm_out_file);\n-  if (DWARF_OFFSET_SIZE == 8)\n+  if (for_eh ? PTR_SIZE == 8 : DWARF_OFFSET_SIZE == 8)\n     {\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, DW_CIE_ID);\n       fputc ('\\n', asm_out_file);\n@@ -1315,12 +1322,13 @@ output_call_frame_info (for_eh)\n   for (i = 0; i < fde_table_in_use; ++i)\n     {\n       fde = &fde_table[i];\n-      if (fde->dw_fde_cfi == NULL)\n-\tcontinue;\n \n       ASM_GENERATE_INTERNAL_LABEL (l1, FDE_AFTER_SIZE_LABEL, for_eh + i*2);\n       ASM_GENERATE_INTERNAL_LABEL (l2, FDE_END_LABEL, for_eh + i*2);\n-      ASM_OUTPUT_DWARF_DELTA (asm_out_file, l2, l1);\n+      if (for_eh)\n+\tASM_OUTPUT_DWARF_DELTA4 (asm_out_file, l2, l1);\n+      else\n+\tASM_OUTPUT_DWARF_DELTA (asm_out_file, l2, l1);\n       if (flag_verbose_asm)\n \tfprintf (asm_out_file, \"\\t%s FDE Length\", ASM_COMMENT_START);\n       fputc ('\\n', asm_out_file);\n@@ -1380,7 +1388,7 @@ output_call_frame_info (for_eh)\n   if (for_eh)\n     {\n       /* Emit terminating zero for table.  */\n-      ASM_OUTPUT_DWARF_DATA (asm_out_file, 0);\n+      ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n       fputc ('\\n', asm_out_file);\n     }\n #endif"}]}