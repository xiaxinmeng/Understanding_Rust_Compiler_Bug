{"sha": "0b412022414c989c9f3396f4d7e5f3f609fc4154", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0MTIwMjI0MTRjOTg5YzlmMzM5NmY0ZDdlNWYzZjYwOWZjNDE1NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-30T19:05:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-30T19:05:30Z"}, "message": "(PRINT_OPERAND): Integer CONST_DOUBLE is DImode.\n\nFrom-SVN: r7835", "tree": {"sha": "023bd8f61645a4b1d57c9ad6788fa968ceff0476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/023bd8f61645a4b1d57c9ad6788fa968ceff0476"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b412022414c989c9f3396f4d7e5f3f609fc4154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b412022414c989c9f3396f4d7e5f3f609fc4154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b412022414c989c9f3396f4d7e5f3f609fc4154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b412022414c989c9f3396f4d7e5f3f609fc4154/comments", "author": null, "committer": null, "parents": [{"sha": "5b486ce001abc1101c60c80850e266b6a7b5f1b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b486ce001abc1101c60c80850e266b6a7b5f1b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b486ce001abc1101c60c80850e266b6a7b5f1b7"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "6786fa5297d4a1b7135993ef91f630c615897cab", "filename": "gcc/config/gmicro/gmicro.h", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.h?ref=0b412022414c989c9f3396f4d7e5f3f609fc4154", "patch": "@@ -1,8 +1,7 @@\n /* Definitions of target machine for GNU compiler.  Gmicro (TRON) version.\n-   Ported by Masanobu Yuhara, Fujitsu Laboratories LTD.\n-   (yuhara@flab.fujitsu.co.jp)\n-\n    Copyright (C) 1987, 1988, 1989 Free Software Foundation, Inc.\n+   Contributed by Masanobu Yuhara, Fujitsu Laboratories LTD.\n+   (yuhara@flab.fujitsu.co.jp)\n \n This file is part of GNU CC.\n \n@@ -16,13 +15,9 @@ but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n-Among other things, the copyright\n-notice and this notice must be preserved on all copies.\n-\n You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n-*/\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.   */\n \n \n /* Note that some other tm.h files include this one and then override\n@@ -1584,7 +1579,7 @@ myprcode(GET_CODE(X)); */\t\\\n \tASM_OUTPUT_FLOAT_OPERAND (FILE, u1.f);\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \tfprintf (FILE, \"#h'%x\", u1.i); }\t\t\t\t\\\n-  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != DImode)\t\\\n+  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == DFmode)\t\\\n     { union { double d; int i[2]; } u;\t\t\t\t\t\\\n       u.i[0] = CONST_DOUBLE_LOW (X); u.i[1] = CONST_DOUBLE_HIGH (X);\t\\\n       ASM_OUTPUT_DOUBLE_OPERAND (FILE, u.d); }\t\t\t\t\\"}, {"sha": "2799a4e24b74c6087deaebfeee33d085e2ee1156", "filename": "gcc/config/m68k/crds.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fm68k%2Fcrds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fm68k%2Fcrds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcrds.h?ref=0b412022414c989c9f3396f4d7e5f3f609fc4154", "patch": "@@ -1,7 +1,7 @@\n-/* Definitions of target machine for GNU compiler.\n-   Charles River Data Systems UNiverse/32\n-   Written by Gary E. Miller (Gary_Edmunds_Miller@cup.portal.com)\n-   Copyright (C) 1987, 1993 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler;\n+   Charles River Data Systems UNiverse/32.\n+   Copyright (C) 1987, 1993, 1994 Free Software Foundation, Inc.\n+   Contributed by Gary E. Miller (Gary_Edmunds_Miller@cup.portal.com)\n \n This file is part of GNU CC.\n \n@@ -306,14 +306,14 @@ do {  int i;\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n         { REAL_VALUE_TO_TARGET_SINGLE (r, l);\t\t\t\t\\\n           fprintf (FILE, \"$0x%x\", l); } }\t\t\t\t\\\n-  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == XFmode)\t\\\n+  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == DFmode)\t\\\n     { REAL_VALUE_TYPE r;\t\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      ASM_OUTPUT_LONG_DOUBLE_OPERAND (FILE, r); }\t\t\t\\\n-  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != DImode)\t\\\n+      ASM_OUTPUT_DOUBLE_OPERAND (FILE, r); }\t\t\t\t\\\n+  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == XFmode)\t\\\n     { REAL_VALUE_TYPE r;\t\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n-      ASM_OUTPUT_DOUBLE_OPERAND (FILE, r); }\t\t\t\t\\\n+      ASM_OUTPUT_LONG_DOUBLE_OPERAND (FILE, r); }\t\t\t\\\n   else { putc ('$', FILE); output_addr_const (FILE, X); }}\n \f\n /* Note that this contains a kludge that knows that the only reason"}, {"sha": "755ec7e804e44ea661bda149eb8cf4878ec02652", "filename": "gcc/config/m68k/news.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fm68k%2Fnews.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fm68k%2Fnews.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnews.h?ref=0b412022414c989c9f3396f4d7e5f3f609fc4154", "patch": "@@ -338,7 +338,7 @@ do { char dstr[30];\t\t\t\t\t\\\n     { REAL_VALUE_TYPE r;\t\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n       ASM_OUTPUT_LONG_DOUBLE_OPERAND (FILE, r); }\t\t\t\\\n-  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != DImode)\t\\\n+  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == DFmode)\t\\\n     { REAL_VALUE_TYPE r; char dstr[30];\t\t\t\t\t\\\n       REAL_VALUE_FROM_CONST_DOUBLE (r, X);\t\t\t\t\\\n       REAL_VALUE_TO_DECIMAL (r, \"%.20e\", dstr );\t\t\t\\"}, {"sha": "54b52c988c7b4ecb035204e405a7eefff9c10597", "filename": "gcc/config/ns32k/genix.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fns32k%2Fgenix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fns32k%2Fgenix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fgenix.h?ref=0b412022414c989c9f3396f4d7e5f3f609fc4154", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Genix ns32000 version.\n-   Copyright (C) 1987, 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -153,7 +153,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t  break;\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != DImode)\t\\\n+  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != VOIDmode)\t\\\n     if (GET_MODE (X) == DFmode)\t\t\t\t\t\t\\\n       { union { double d; int i[2]; } u;\t\t\t\t\\\n         u.i[0] = CONST_DOUBLE_LOW (X); u.i[1] = CONST_DOUBLE_HIGH (X);\t\\"}, {"sha": "84e8c9b1d5a3664cf0aff1262e5cee49df92322a", "filename": "gcc/config/ns32k/merlin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fns32k%2Fmerlin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b412022414c989c9f3396f4d7e5f3f609fc4154/gcc%2Fconfig%2Fns32k%2Fmerlin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fmerlin.h?ref=0b412022414c989c9f3396f4d7e5f3f609fc4154", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  MERLIN NS32000 version.\n-   Copyright (C) 1990 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1994 Free Software Foundation, Inc.\n    By Mark Mason (mason@reed.bitnet, pyramid!unify!mason@uunet.uu.net).\n \n This file is part of GNU CC.\n@@ -112,7 +112,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t  break;\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != DImode)\t\\\n+  else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) != VOIDmode)\t\\\n     if (GET_MODE (X) == DFmode)\t\t\t\t\t\t\\\n       { union { double d; int i[2]; } u;\t\t\t\t\\\n \tu.i[0] = CONST_DOUBLE_LOW (X); u.i[1] = CONST_DOUBLE_HIGH (X);\t\\"}]}