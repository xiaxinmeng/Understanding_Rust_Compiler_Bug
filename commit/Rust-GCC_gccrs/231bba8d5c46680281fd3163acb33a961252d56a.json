{"sha": "231bba8d5c46680281fd3163acb33a961252d56a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMxYmJhOGQ1YzQ2NjgwMjgxZmQzMTYzYWNiMzNhOTYxMjUyZDU2YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2017-09-13T10:28:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-13T10:28:52Z"}, "message": "s-vxwext__kernel-smp.adb, [...]: New file.\n\n\t* libgnarl/s-vxwext__kernel-smp.adb,\n\tlibgnarl/s-tpopsp__vxworks-rtp.adb, libgnarl/s-vxwext__noints.adb:\n\tNew file.\n\nFrom-SVN: r252075", "tree": {"sha": "8ce38933400ca91cc11c8399b1735a540e1f7178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ce38933400ca91cc11c8399b1735a540e1f7178"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/231bba8d5c46680281fd3163acb33a961252d56a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231bba8d5c46680281fd3163acb33a961252d56a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231bba8d5c46680281fd3163acb33a961252d56a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231bba8d5c46680281fd3163acb33a961252d56a/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4395a4738963e1bfc2202a2433c6d1d24a28e017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4395a4738963e1bfc2202a2433c6d1d24a28e017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4395a4738963e1bfc2202a2433c6d1d24a28e017"}], "stats": {"total": 325, "additions": 325, "deletions": 0}, "files": [{"sha": "d16939fe8f192c54c3fbd8c98bad41cf81baf813", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=231bba8d5c46680281fd3163acb33a961252d56a", "patch": "@@ -1,3 +1,9 @@\n+2017-09-13  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* libgnarl/s-vxwext__kernel-smp.adb,\n+\tlibgnarl/s-tpopsp__vxworks-rtp.adb, libgnarl/s-vxwext__noints.adb:\n+\tNew file.\n+\n 2017-09-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb: Flag42 is now Is_Controlled_Active."}, {"sha": "b49c0cf4cf651ce4466f748ea28ce4cdad5d1c70", "filename": "gcc/ada/libgnarl/s-tpopsp__vxworks-rtp.adb", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2Flibgnarl%2Fs-tpopsp__vxworks-rtp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2Flibgnarl%2Fs-tpopsp__vxworks-rtp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tpopsp__vxworks-rtp.adb?ref=231bba8d5c46680281fd3163acb33a961252d56a", "patch": "@@ -0,0 +1,80 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n+--                                                                          --\n+--                SYSTEM.TASK_PRIMITIVES.OPERATIONS.SPECIFIC                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is a VxWorks version of this package for RTPs where foreign threads\n+--  are recognized. The implementation is based on VxWorks tlsLib or oldTlsLib.\n+\n+separate (System.Task_Primitives.Operations)\n+package body Specific is\n+\n+   ATCB_Key : int := 0;\n+   --  Key used to find the Ada Task_Id associated with a thread\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize is\n+   begin\n+      ATCB_Key := tlsKeyCreate;\n+      pragma Assert (ATCB_Key /= ERROR);\n+   end Initialize;\n+\n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean is\n+   begin\n+      return tlsValueGet (ATCB_Key) /= System.Null_Address;\n+   end Is_Valid_Task;\n+\n+   ---------\n+   -- Set --\n+   ---------\n+\n+   procedure Set (Self_Id : Task_Id) is\n+      Result : STATUS;\n+   begin\n+      Result := tlsValueSet (ATCB_Key, To_Address (Self_Id));\n+      pragma Assert (Result /= ERROR);\n+   end Set;\n+\n+   ----------\n+   -- Self --\n+   ----------\n+\n+   function Self return Task_Id is\n+   begin\n+      return To_Task_Id (tlsValueGet (ATCB_Key));\n+   end Self;\n+\n+end Specific;"}, {"sha": "8ad39abd01af9c3b459d957467baaa35726598b7", "filename": "gcc/ada/libgnarl/s-vxwext__kernel-smp.adb", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__kernel-smp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__kernel-smp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext__kernel-smp.adb?ref=231bba8d5c46680281fd3163acb33a961252d56a", "patch": "@@ -0,0 +1,113 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                                                                          --\n+--                     S Y S T E M . V X W O R K S . E X T                  --\n+--                                                                          --\n+--                                   B o d y                                --\n+--                                                                          --\n+--          Copyright (C) 2008-2017, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides vxworks specific support functions needed\n+--  by System.OS_Interface.\n+\n+--  This is the VxWorks 6 SMP kernel version of this package\n+\n+package body System.VxWorks.Ext is\n+\n+   ERROR : constant := -1;\n+\n+   --------------\n+   -- Int_Lock --\n+   --------------\n+\n+   function Int_Lock return int is\n+   begin\n+      return ERROR;\n+   end Int_Lock;\n+\n+   ----------------\n+   -- Int_Unlock --\n+   ----------------\n+\n+   function Int_Unlock (Old : int) return int is\n+      pragma Unreferenced (Old);\n+   begin\n+      return ERROR;\n+   end Int_Unlock;\n+\n+   ---------------\n+   -- semDelete --\n+   ---------------\n+\n+   function semDelete (Sem : SEM_ID) return int is\n+      function Os_Sem_Delete (Sem : SEM_ID) return int;\n+      pragma Import (C, Os_Sem_Delete, \"semDelete\");\n+   begin\n+      return Os_Sem_Delete (Sem);\n+   end semDelete;\n+\n+   ------------------------\n+   -- taskCpuAffinitySet --\n+   ------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int\n+   is\n+      function Set_Affinity (tid : t_id; CPU : int) return int;\n+      pragma Import (C, Set_Affinity, \"__gnat_set_affinity\");\n+   begin\n+      return Set_Affinity (tid, CPU);\n+   end taskCpuAffinitySet;\n+\n+   -------------------------\n+   -- taskMaskAffinitySet --\n+   -------------------------\n+\n+   function taskMaskAffinitySet (tid : t_id; CPU_Set : unsigned) return int is\n+      function Set_Affinity (tid : t_id; CPU_Set : unsigned) return int;\n+      pragma Import (C, Set_Affinity, \"__gnat_set_affinity_mask\");\n+   begin\n+      return Set_Affinity (tid, CPU_Set);\n+   end taskMaskAffinitySet;\n+\n+   --------------\n+   -- taskCont --\n+   --------------\n+\n+   function Task_Cont (tid : t_id) return int is\n+      function taskCont (tid : t_id) return int;\n+      pragma Import (C, taskCont, \"taskCont\");\n+   begin\n+      return taskCont (tid);\n+   end Task_Cont;\n+\n+   --------------\n+   -- taskStop --\n+   --------------\n+\n+   function Task_Stop (tid : t_id) return int is\n+      function taskStop (tid : t_id) return int;\n+      pragma Import (C, taskStop, \"taskStop\");\n+   begin\n+      return taskStop (tid);\n+   end Task_Stop;\n+\n+end System.VxWorks.Ext;"}, {"sha": "d20ecfb307d9dc0bde3dc2ae3911411df1a917f5", "filename": "gcc/ada/libgnarl/s-vxwext__noints.adb", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__noints.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231bba8d5c46680281fd3163acb33a961252d56a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__noints.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext__noints.adb?ref=231bba8d5c46680281fd3163acb33a961252d56a", "patch": "@@ -0,0 +1,126 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                                                                          --\n+--                     S Y S T E M . V X W O R K S . E X T                  --\n+--                                                                          --\n+--                                   B o d y                                --\n+--                                                                          --\n+--            Copyright (C) 2008-2017, Free Software Foundation, Inc.       --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides vxworks specific support functions needed\n+--  by System.OS_Interface.\n+\n+--  This is a version for VxWorks 5 based systems with no interrupts:\n+--  HI-Ravenscar for VxWorks 5, VxWorks 653 vThreads (not ravenscar-cert)\n+\n+package body System.VxWorks.Ext is\n+\n+   ERROR : constant := -1;\n+\n+   --------------\n+   -- Int_Lock --\n+   --------------\n+\n+   function Int_Lock return int is\n+   begin\n+      return ERROR;\n+   end Int_Lock;\n+\n+   ----------------\n+   -- Int_Unlock --\n+   ----------------\n+\n+   function Int_Unlock (Old : int) return int is\n+      pragma Unreferenced (Old);\n+   begin\n+      return ERROR;\n+   end Int_Unlock;\n+\n+   -----------------------\n+   -- Interrupt_Connect --\n+   -----------------------\n+\n+   function Interrupt_Connect\n+     (Vector    : Interrupt_Vector;\n+      Handler   : Interrupt_Handler;\n+      Parameter : System.Address := System.Null_Address) return int\n+   is\n+      pragma Unreferenced (Vector, Handler, Parameter);\n+   begin\n+      return ERROR;\n+   end Interrupt_Connect;\n+\n+   -----------------------\n+   -- Interrupt_Context --\n+   -----------------------\n+\n+   function Interrupt_Context return int is\n+   begin\n+      --  For VxWorks 653 vThreads, never in an interrupt context\n+\n+      return 0;\n+   end Interrupt_Context;\n+\n+   --------------------------------\n+   -- Interrupt_Number_To_Vector --\n+   --------------------------------\n+\n+   function Interrupt_Number_To_Vector\n+     (intNum : int) return Interrupt_Vector\n+   is\n+      pragma Unreferenced (intNum);\n+   begin\n+      return 0;\n+   end Interrupt_Number_To_Vector;\n+\n+   ---------------\n+   -- semDelete --\n+   ---------------\n+\n+   function semDelete (Sem : SEM_ID) return int is\n+      function Os_Sem_Delete (Sem : SEM_ID) return int;\n+      pragma Import (C, Os_Sem_Delete, \"semDelete\");\n+   begin\n+      return Os_Sem_Delete (Sem);\n+   end semDelete;\n+\n+   ------------------------\n+   -- taskCpuAffinitySet --\n+   ------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int is\n+      pragma Unreferenced (tid, CPU);\n+   begin\n+      return ERROR;\n+   end taskCpuAffinitySet;\n+\n+   -------------------------\n+   -- taskMaskAffinitySet --\n+   -------------------------\n+\n+   function taskMaskAffinitySet (tid : t_id; CPU_Set : unsigned) return int is\n+      pragma Unreferenced (tid, CPU_Set);\n+   begin\n+      return ERROR;\n+   end taskMaskAffinitySet;\n+\n+end System.VxWorks.Ext;"}]}