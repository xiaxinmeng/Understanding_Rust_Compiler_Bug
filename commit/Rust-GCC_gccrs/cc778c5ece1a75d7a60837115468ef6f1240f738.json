{"sha": "cc778c5ece1a75d7a60837115468ef6f1240f738", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M3NzhjNWVjZTFhNzVkN2E2MDgzNzExNTQ2OGVmNmYxMjQwZjczOA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2013-11-24T14:43:20Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2013-11-24T14:43:20Z"}, "message": "scanner.c (gfc_open_intrinsic_module): Remove function.\n\n\t* scanner.c (gfc_open_intrinsic_module): Remove function.\n\t* gfortran.h (gfc_open_intrinsic_module): Remove prototype.\n\nFrom-SVN: r205335", "tree": {"sha": "58a326ad868bcadda67c3d8e545b4c6f8ea6bb35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58a326ad868bcadda67c3d8e545b4c6f8ea6bb35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc778c5ece1a75d7a60837115468ef6f1240f738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc778c5ece1a75d7a60837115468ef6f1240f738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc778c5ece1a75d7a60837115468ef6f1240f738", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc778c5ece1a75d7a60837115468ef6f1240f738/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "523c1561c9ca9cbf980ccb61ce198c70c866a104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523c1561c9ca9cbf980ccb61ce198c70c866a104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/523c1561c9ca9cbf980ccb61ce198c70c866a104"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "58b9c11d32fd42162d74fd2264fa6544973ce49e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc778c5ece1a75d7a60837115468ef6f1240f738/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc778c5ece1a75d7a60837115468ef6f1240f738/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cc778c5ece1a75d7a60837115468ef6f1240f738", "patch": "@@ -1,3 +1,8 @@\n+2013-11-24  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* scanner.c (gfc_open_intrinsic_module): Remove function.\n+\t* gfortran.h (gfc_open_intrinsic_module): Remove prototype.\n+\n 2013-11-23  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/59228"}, {"sha": "ff3ffb5a1c3daa93bff094af9eb74e49fc7cccc4", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc778c5ece1a75d7a60837115468ef6f1240f738/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc778c5ece1a75d7a60837115468ef6f1240f738/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=cc778c5ece1a75d7a60837115468ef6f1240f738", "patch": "@@ -2397,7 +2397,6 @@ void gfc_add_include_path (const char *, bool, bool, bool);\n void gfc_add_intrinsic_modules_path (const char *);\n void gfc_release_include_path (void);\n FILE *gfc_open_included_file (const char *, bool, bool);\n-FILE *gfc_open_intrinsic_module (const char *);\n \n int gfc_at_end (void);\n int gfc_at_eof (void);"}, {"sha": "e0650ba7ee00b7735618a5955eb8c701de20096c", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc778c5ece1a75d7a60837115468ef6f1240f738/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc778c5ece1a75d7a60837115468ef6f1240f738/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=cc778c5ece1a75d7a60837115468ef6f1240f738", "patch": "@@ -465,24 +465,6 @@ gfc_open_included_file (const char *name, bool include_cwd, bool module)\n   return f;\n }\n \n-FILE *\n-gfc_open_intrinsic_module (const char *name)\n-{\n-  FILE *f = NULL;\n-\n-  if (IS_ABSOLUTE_PATH (name))\n-    {\n-      f = gfc_open_file (name);\n-      if (f && gfc_cpp_makedep ())\n-\tgfc_cpp_add_dep (name, true);\n-    }\n-\n-  if (!f)\n-    f = open_included_file (name, intrinsic_modules_dirs, true, true);\n-\n-  return f;\n-}\n-\n \n /* Test to see if we're at the end of the main source file.  */\n "}]}