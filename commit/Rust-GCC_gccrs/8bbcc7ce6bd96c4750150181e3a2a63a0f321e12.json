{"sha": "8bbcc7ce6bd96c4750150181e3a2a63a0f321e12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJiY2M3Y2U2YmQ5NmM0NzUwMTUwMTgxZTNhMmE2M2EwZjMyMWUxMg==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "1999-09-28T08:20:28Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-09-28T08:20:28Z"}, "message": "* gcc.c-torture/execute/va-arg-10.c: New test.\n\nFrom-SVN: r29691", "tree": {"sha": "673a8a9a3f74cee863409f70f0718d97607ca1b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/673a8a9a3f74cee863409f70f0718d97607ca1b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ebecc3b1c66783ed62d5af14148c0778ac66131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebecc3b1c66783ed62d5af14148c0778ac66131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ebecc3b1c66783ed62d5af14148c0778ac66131"}], "stats": {"total": 252, "additions": 252, "deletions": 0}, "files": [{"sha": "4e3ec71dcd4c1e3ca0e1f9bd541e01648fd9cd1e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8bbcc7ce6bd96c4750150181e3a2a63a0f321e12", "patch": "@@ -1,3 +1,7 @@\n+Tue Sep 28 01:19:09 1999  Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* gcc.c-torture/execute/va-arg-10.c: New test.\n+\n Mon Sep 27 09:14:24 BST 1999  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.old-deja/g++.pt/memtemp77.C: Adjust expected"}, {"sha": "5ce3453acb6c6d26f87c893d716df0f7af0d985e", "filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-10.c", "status": "added", "additions": 248, "deletions": 0, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bbcc7ce6bd96c4750150181e3a2a63a0f321e12/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-10.c?ref=8bbcc7ce6bd96c4750150181e3a2a63a0f321e12", "patch": "@@ -0,0 +1,248 @@\n+/* This is a modfied version of va-arg-9.c to test va_copy.  */\n+\n+#include <stdarg.h>\n+\n+#ifndef va_copy\n+#define va_copy __va_copy\n+#endif\n+\n+extern __SIZE_TYPE__ strlen (const char *);\n+\n+int\n+to_hex (unsigned int a)\n+{\n+  static char hex[] = \"0123456789abcdef\";\n+\n+  if (a > 15)\n+    abort ();\n+  return hex[a];\n+}\n+\n+void\n+fap (int i, char* format, va_list ap)\n+{\n+  va_list apc;\n+  char *formatc;\n+\n+  va_copy (apc, ap);\n+  formatc = format;\n+\n+  if (strlen (format) != 16 - i)\n+    abort ();\n+  while (*format)\n+    if (*format++ != to_hex (va_arg (ap, int)))\n+      abort ();\n+  while (*formatc)\n+    if (*formatc++ != to_hex (va_arg (apc, int)))\n+      abort ();\n+}\n+\n+void\n+f0 (char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, format);\n+  fap(0, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f1 (int a1, char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(1, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f2 (int a1, int a2, char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(2, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f3 (int a1, int a2, int a3, char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(3, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f4 (int a1, int a2, int a3, int a4, char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(4, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f5 (int a1, int a2, int a3, int a4, int a5,\n+    char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(5, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f6 (int a1, int a2, int a3, int a4, int a5,\n+    int a6,\n+    char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(6, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f7 (int a1, int a2, int a3, int a4, int a5,\n+    int a6, int a7,\n+    char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(7, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f8 (int a1, int a2, int a3, int a4, int a5,\n+    int a6, int a7, int a8,\n+    char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(8, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f9 (int a1, int a2, int a3, int a4, int a5,\n+    int a6, int a7, int a8, int a9,\n+    char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(9, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f10 (int a1, int a2, int a3, int a4, int a5,\n+     int a6, int a7, int a8, int a9, int a10,\n+     char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(10, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f11 (int a1, int a2, int a3, int a4, int a5,\n+     int a6, int a7, int a8, int a9, int a10,\n+     int a11,\n+     char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(11, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f12 (int a1, int a2, int a3, int a4, int a5,\n+     int a6, int a7, int a8, int a9, int a10,\n+     int a11, int a12,\n+     char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(12, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f13 (int a1, int a2, int a3, int a4, int a5,\n+     int a6, int a7, int a8, int a9, int a10,\n+     int a11, int a12, int a13,\n+     char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(13, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f14 (int a1, int a2, int a3, int a4, int a5,\n+     int a6, int a7, int a8, int a9, int a10,\n+     int a11, int a12, int a13, int a14,\n+     char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(14, format, ap);\n+  va_end(ap);\n+}\n+\n+void\n+f15 (int a1, int a2, int a3, int a4, int a5,\n+     int a6, int a7, int a8, int a9, int a10,\n+     int a11, int a12, int a13, int a14, int a15,\n+     char* format, ...)\n+{\n+  va_list ap;\n+\n+  va_start(ap, format);\n+  fap(15, format, ap);\n+  va_end(ap);\n+}\n+\n+main ()\n+{\n+  char *f = \"0123456789abcdef\";\n+\n+  f0 (f+0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f1 (0, f+1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f2 (0, 1, f+2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f3 (0, 1, 2, f+3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f4 (0, 1, 2, 3, f+4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f5 (0, 1, 2, 3, 4, f+5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f6 (0, 1, 2, 3, 4, 5, f+6, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f7 (0, 1, 2, 3, 4, 5, 6, f+7, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f8 (0, 1, 2, 3, 4, 5, 6, 7, f+8, 8, 9, 10, 11, 12, 13, 14, 15);\n+  f9 (0, 1, 2, 3, 4, 5, 6, 7, 8, f+9, 9, 10, 11, 12, 13, 14, 15);\n+  f10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, f+10, 10, 11, 12, 13, 14, 15);\n+  f11 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, f+11, 11, 12, 13, 14, 15);\n+  f12 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, f+12, 12, 13, 14, 15);\n+  f13 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, f+13, 13, 14, 15);\n+  f14 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, f+14, 14, 15);\n+  f15 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, f+15, 15);\n+\n+  exit (0);\n+}"}]}