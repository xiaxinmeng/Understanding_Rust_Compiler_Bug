{"sha": "b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "node_id": "C_kwDOANBUbNoAKGI5MmE5YjgwZmFhNGI2ZGFlY2EzZTk0ZGI4YmNkZWJkZWVjMGI4NTk", "commit": {"author": {"name": "@mvvsmk", "email": "mvvsmanojkumar@gmail.com", "date": "2022-02-03T01:57:20Z"}, "committer": {"name": "@mvvsmk", "email": "mvvsmanojkumar@gmail.com", "date": "2022-02-04T08:19:50Z"}, "message": "Upated parameterised constuctor of MatchArm to take location data\n\nAddresses issue #863\n1)comment removed form rust-expr.h\n2)changed partameterized constructor and static function in\n  rust-hir-expr.h\n3)changed line 697 to pass expr.get_locus() in rust-ast-lower\n4)changed parameterised constructor in rust-expr.h\n5)changed line 8563 in rust-parse-impl.h to pass location data.\n\nSigned-off-by : M V V S Manoj Kumar <mvvsmanojkumar@gmail.com>", "tree": {"sha": "3285d1e70528eab92bd936439333cdb3cbb0dd3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3285d1e70528eab92bd936439333cdb3cbb0dd3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/comments", "author": {"login": "mvvsmk", "id": 71825974, "node_id": "MDQ6VXNlcjcxODI1OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/71825974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvvsmk", "html_url": "https://github.com/mvvsmk", "followers_url": "https://api.github.com/users/mvvsmk/followers", "following_url": "https://api.github.com/users/mvvsmk/following{/other_user}", "gists_url": "https://api.github.com/users/mvvsmk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvvsmk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvvsmk/subscriptions", "organizations_url": "https://api.github.com/users/mvvsmk/orgs", "repos_url": "https://api.github.com/users/mvvsmk/repos", "events_url": "https://api.github.com/users/mvvsmk/events{/privacy}", "received_events_url": "https://api.github.com/users/mvvsmk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mvvsmk", "id": 71825974, "node_id": "MDQ6VXNlcjcxODI1OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/71825974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvvsmk", "html_url": "https://github.com/mvvsmk", "followers_url": "https://api.github.com/users/mvvsmk/followers", "following_url": "https://api.github.com/users/mvvsmk/following{/other_user}", "gists_url": "https://api.github.com/users/mvvsmk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvvsmk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvvsmk/subscriptions", "organizations_url": "https://api.github.com/users/mvvsmk/orgs", "repos_url": "https://api.github.com/users/mvvsmk/repos", "events_url": "https://api.github.com/users/mvvsmk/events{/privacy}", "received_events_url": "https://api.github.com/users/mvvsmk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6508698504a2bb2e6b92b74f11d55ca4282927f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6508698504a2bb2e6b92b74f11d55ca4282927f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6508698504a2bb2e6b92b74f11d55ca4282927f4"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "3f3ed5cd7ee961add9a8b1f46d74358c51ae5c69", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "patch": "@@ -4225,7 +4225,6 @@ struct MatchArm\n   // inlined from MatchArmGuard\n   std::unique_ptr<Expr> guard_expr;\n \n-  // TODO: should this store location data?\n   Location locus;\n \n public:\n@@ -4234,9 +4233,8 @@ struct MatchArm\n \n   // Constructor for match arm with a guard expression\n   MatchArm (std::vector<std::unique_ptr<Pattern> > match_arm_patterns,\n-\t    std::unique_ptr<Expr> guard_expr = nullptr,\n-\t    std::vector<Attribute> outer_attrs = std::vector<Attribute> (),\n-\t    Location locus = Location ())\n+\t    Location locus, std::unique_ptr<Expr> guard_expr = nullptr,\n+\t    std::vector<Attribute> outer_attrs = std::vector<Attribute> ())\n     : outer_attrs (std::move (outer_attrs)),\n       match_arm_patterns (std::move (match_arm_patterns)),\n       guard_expr (std::move (guard_expr)), locus (locus)\n@@ -4285,7 +4283,8 @@ struct MatchArm\n   // Creates a match arm in an error state.\n   static MatchArm create_error ()\n   {\n-    return MatchArm (std::vector<std::unique_ptr<Pattern> > ());\n+    Location locus = Location ();\n+    return MatchArm (std::vector<std::unique_ptr<Pattern> > (), locus);\n   }\n \n   std::string as_string () const;"}, {"sha": "1aa21bd6f38b422ec3746cea73fc72d5010161e3", "filename": "gcc/rust/hir/rust-ast-lower-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h?ref=b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "patch": "@@ -693,7 +693,7 @@ class ASTLoweringExpr : public ASTLoweringBase\n \t    match_arm_patterns.push_back (std::unique_ptr<HIR::Pattern> (ptrn));\n \t  }\n \n-\tHIR::MatchArm arm (std::move (match_arm_patterns),\n+\tHIR::MatchArm arm (std::move (match_arm_patterns), expr.get_locus (),\n \t\t\t   std::unique_ptr<HIR::Expr> (kase_guard_expr),\n \t\t\t   match_case.get_arm ().get_outer_attrs ());\n "}, {"sha": "3267d0170d5dcad1b8d452a79e691053803bce52", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "patch": "@@ -3721,9 +3721,8 @@ struct MatchArm\n \n   // Constructor for match arm with a guard expression\n   MatchArm (std::vector<std::unique_ptr<Pattern> > match_arm_patterns,\n-\t    std::unique_ptr<Expr> guard_expr = nullptr,\n-\t    AST::AttrVec outer_attrs = AST::AttrVec (),\n-\t    Location locus = Location ())\n+\t    Location locus, std::unique_ptr<Expr> guard_expr = nullptr,\n+\t    AST::AttrVec outer_attrs = AST::AttrVec ())\n     : outer_attrs (std::move (outer_attrs)),\n       match_arm_patterns (std::move (match_arm_patterns)),\n       guard_expr (std::move (guard_expr)), locus (locus)\n@@ -3770,7 +3769,8 @@ struct MatchArm\n   // Creates a match arm in an error state.\n   static MatchArm create_error ()\n   {\n-    return MatchArm (std::vector<std::unique_ptr<Pattern> > ());\n+    Location locus = Location ();\n+    return MatchArm (std::vector<std::unique_ptr<Pattern> > (), locus);\n   }\n \n   std::string as_string () const;"}, {"sha": "6d393b0bc75f387812d28520cb6185677b125c8c", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b92a9b80faa4b6daeca3e94db8bcdebdeec0b859/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=b92a9b80faa4b6daeca3e94db8bcdebdeec0b859", "patch": "@@ -8560,8 +8560,9 @@ Parser<ManagedTokenSource>::parse_match_arm ()\n   // DEBUG\n   rust_debug (\"successfully parsed match arm\");\n \n-  return AST::MatchArm (std::move (match_arm_patterns), std::move (guard_expr),\n-\t\t\tstd::move (outer_attrs));\n+  return AST::MatchArm (std::move (match_arm_patterns),\n+\t\t\tlexer.peek_token ()->get_locus (),\n+\t\t\tstd::move (guard_expr), std::move (outer_attrs));\n }\n \n /* Parses the patterns used in a match arm. End token id is the id of the token"}]}