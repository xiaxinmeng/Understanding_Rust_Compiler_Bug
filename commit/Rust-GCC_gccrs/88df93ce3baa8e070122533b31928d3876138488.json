{"sha": "88df93ce3baa8e070122533b31928d3876138488", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhkZjkzY2UzYmFhOGUwNzAxMjI1MzNiMzE5MjhkMzg3NjEzODQ4OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-10T10:54:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-10T10:54:24Z"}, "message": "tree.h (build_index_2_type): Remove.\n\n2010-09-10  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.h (build_index_2_type): Remove.\n\t* tree.c (build_index_2_type): Remove.\n\n\tada/gcc-interface/\n\t* utils.c (create_index_type): Use build_range_type.\n\nFrom-SVN: r164164", "tree": {"sha": "52bbfc8b0f568a45141cb55233730665d6be7f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52bbfc8b0f568a45141cb55233730665d6be7f43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88df93ce3baa8e070122533b31928d3876138488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88df93ce3baa8e070122533b31928d3876138488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88df93ce3baa8e070122533b31928d3876138488", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88df93ce3baa8e070122533b31928d3876138488/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40ed057ba7ce8b8a00d88aae5ce14133faa83fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ed057ba7ce8b8a00d88aae5ce14133faa83fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ed057ba7ce8b8a00d88aae5ce14133faa83fd0"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "0c5b0ed28fbdf379137690315b3cbc389b8cc834", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88df93ce3baa8e070122533b31928d3876138488/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88df93ce3baa8e070122533b31928d3876138488/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88df93ce3baa8e070122533b31928d3876138488", "patch": "@@ -1,3 +1,8 @@\n+2010-09-10  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.h (build_index_2_type): Remove.\n+\t* tree.c (build_index_2_type): Remove.\n+\n 2010-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/45630"}, {"sha": "6092a21743a1ceb6c23780e5b3c7d47b5c2af803", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88df93ce3baa8e070122533b31928d3876138488/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88df93ce3baa8e070122533b31928d3876138488/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88df93ce3baa8e070122533b31928d3876138488", "patch": "@@ -1,3 +1,7 @@\n+2010-09-10  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc-interface/utils.c (create_index_type): Use build_range_type.\n+\n 2010-09-10  Arnaud Charlet  <charlet@adacore.com>\n \n \t* vms_cmds.ads: New."}, {"sha": "cadc4d7c0daa0d32486f2a05fc4ba95cffdad719", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88df93ce3baa8e070122533b31928d3876138488/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88df93ce3baa8e070122533b31928d3876138488/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=88df93ce3baa8e070122533b31928d3876138488", "patch": "@@ -1156,7 +1156,7 @@ tree\n create_index_type (tree min, tree max, tree index, Node_Id gnat_node)\n {\n   /* First build a type for the desired range.  */\n-  tree type = build_index_2_type (min, max);\n+  tree type = build_range_type (sizetype, min, max);\n \n   /* If this type has the TYPE_INDEX_TYPE we want, return it.  */\n   if (TYPE_INDEX_TYPE (type) == index)"}, {"sha": "7ea69c8cbc5edf86c153f1f507c0458227e7eb97", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88df93ce3baa8e070122533b31928d3876138488/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88df93ce3baa8e070122533b31928d3876138488/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=88df93ce3baa8e070122533b31928d3876138488", "patch": "@@ -7191,15 +7191,6 @@ subrange_type_for_debug_p (const_tree type, tree *lowval, tree *highval)\n   return true;\n }\n \n-/* Just like build_index_type, but takes lowval and highval instead\n-   of just highval (maxval).  */\n-\n-tree\n-build_index_2_type (tree lowval, tree highval)\n-{\n-  return build_range_type (sizetype, lowval, highval);\n-}\n-\n /* Construct, lay out and return the type of arrays of elements with ELT_TYPE\n    and number of elements specified by the range of values of INDEX_TYPE.\n    If such a type has already been constructed, reuse it.  */"}, {"sha": "4fc6725e6536eeb6b7b6214a09b31c15c3884f69", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88df93ce3baa8e070122533b31928d3876138488/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88df93ce3baa8e070122533b31928d3876138488/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=88df93ce3baa8e070122533b31928d3876138488", "patch": "@@ -4086,7 +4086,6 @@ extern tree build_vector_type (tree innertype, int nunits);\n extern tree build_opaque_vector_type (tree innertype, int nunits);\n extern tree build_type_no_quals (tree);\n extern tree build_index_type (tree);\n-extern tree build_index_2_type (tree, tree);\n extern tree build_array_type (tree, tree);\n extern tree build_function_type (tree, tree);\n extern tree build_function_type_list (tree, ...);"}]}