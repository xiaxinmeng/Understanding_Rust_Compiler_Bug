{"sha": "0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFlNzBjNmE5NDkyOGM1ZmZiNzM0NmE2YzNmNmVlMjRjNDcxMGIxMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-08-03T00:57:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-08-03T00:57:50Z"}, "message": "decl.c: Include defaults.h instead of expr.h.\n\n        * decl.c: Include defaults.h instead of expr.h.\n        * parse.y: Likewise.\n\nFrom-SVN: r28431", "tree": {"sha": "8c6a00a6b07ac74452ef6c4d437d6aaebd7d6b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c6a00a6b07ac74452ef6c4d437d6aaebd7d6b98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/comments", "author": null, "committer": null, "parents": [{"sha": "120abe32025fb28e0b09c95699726d29155c479a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120abe32025fb28e0b09c95699726d29155c479a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120abe32025fb28e0b09c95699726d29155c479a"}], "stats": {"total": 1259, "additions": 665, "deletions": 594}, "files": [{"sha": "e2504645c39d0fb7049b061c6f8b8f8f3861adee", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "patch": "@@ -1,3 +1,8 @@\n+1999-08-02  Richard Henderson  <rth@cygnus.com>\n+\n+\t* decl.c: Include defaults.h instead of expr.h.\n+\t* parse.y: Likewise.\n+\n 1999-08-02  Jakub Jelinek  <jj@ultra.linux.cz>\n \n \t* java/decl.c (start_java_method): Change all uses of"}, {"sha": "24696eecec8dbc0f1e6619b183805c50c5397bee", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "patch": "@@ -34,7 +34,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"toplev.h\"\n #include \"function.h\"\n #include \"except.h\"\n-#include \"expr.h\"\n+#include \"defaults.h\"\n \n static tree push_jvm_slot PROTO ((int, tree));\n static tree builtin_function PROTO ((const char *, tree,"}, {"sha": "8b98fbf084ef85a4d72f132c8cf0333b0cb6179f", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "patch": "@@ -39,6 +39,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"parse.h\"\n #include \"toplev.h\"\n #include \"except.h\"\n+#include \"defaults.h\"\n \n static void flush_quick_stack PROTO ((void));\n static void push_value PROTO ((tree));"}, {"sha": "2d4003b0f50f76c06c5946143563cea25cdd13db", "filename": "gcc/java/parse.c", "status": "modified", "additions": 657, "deletions": 590, "changes": 1247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "patch": "@@ -1,6 +1,6 @@\n \n /*  A Bison parser, made from ./parse.y\n- by  GNU Bison version 1.25\n+ by  GNU Bison version 1.27\n   */\n \n #define YYBISON 1  /* Identify Bison output.  */\n@@ -12,113 +12,113 @@\n #define yychar java_char\n #define yydebug java_debug\n #define yynerrs java_nerrs\n-#define\tPLUS_TK\t258\n-#define\tMINUS_TK\t259\n-#define\tMULT_TK\t260\n-#define\tDIV_TK\t261\n-#define\tREM_TK\t262\n-#define\tLS_TK\t263\n-#define\tSRS_TK\t264\n-#define\tZRS_TK\t265\n-#define\tAND_TK\t266\n-#define\tXOR_TK\t267\n-#define\tOR_TK\t268\n-#define\tBOOL_AND_TK\t269\n-#define\tBOOL_OR_TK\t270\n-#define\tEQ_TK\t271\n-#define\tNEQ_TK\t272\n-#define\tGT_TK\t273\n-#define\tGTE_TK\t274\n-#define\tLT_TK\t275\n-#define\tLTE_TK\t276\n-#define\tPLUS_ASSIGN_TK\t277\n-#define\tMINUS_ASSIGN_TK\t278\n-#define\tMULT_ASSIGN_TK\t279\n-#define\tDIV_ASSIGN_TK\t280\n-#define\tREM_ASSIGN_TK\t281\n-#define\tLS_ASSIGN_TK\t282\n-#define\tSRS_ASSIGN_TK\t283\n-#define\tZRS_ASSIGN_TK\t284\n-#define\tAND_ASSIGN_TK\t285\n-#define\tXOR_ASSIGN_TK\t286\n-#define\tOR_ASSIGN_TK\t287\n-#define\tPUBLIC_TK\t288\n-#define\tPRIVATE_TK\t289\n-#define\tPROTECTED_TK\t290\n-#define\tSTATIC_TK\t291\n-#define\tFINAL_TK\t292\n-#define\tSYNCHRONIZED_TK\t293\n-#define\tVOLATILE_TK\t294\n-#define\tTRANSIENT_TK\t295\n-#define\tNATIVE_TK\t296\n-#define\tPAD_TK\t297\n-#define\tABSTRACT_TK\t298\n-#define\tMODIFIER_TK\t299\n-#define\tDECR_TK\t300\n-#define\tINCR_TK\t301\n-#define\tDEFAULT_TK\t302\n-#define\tIF_TK\t303\n-#define\tTHROW_TK\t304\n-#define\tBOOLEAN_TK\t305\n-#define\tDO_TK\t306\n-#define\tIMPLEMENTS_TK\t307\n-#define\tTHROWS_TK\t308\n-#define\tBREAK_TK\t309\n-#define\tIMPORT_TK\t310\n-#define\tELSE_TK\t311\n-#define\tINSTANCEOF_TK\t312\n-#define\tRETURN_TK\t313\n-#define\tVOID_TK\t314\n-#define\tCATCH_TK\t315\n-#define\tINTERFACE_TK\t316\n-#define\tCASE_TK\t317\n-#define\tEXTENDS_TK\t318\n-#define\tFINALLY_TK\t319\n-#define\tSUPER_TK\t320\n-#define\tWHILE_TK\t321\n-#define\tCLASS_TK\t322\n-#define\tSWITCH_TK\t323\n-#define\tCONST_TK\t324\n-#define\tTRY_TK\t325\n-#define\tFOR_TK\t326\n-#define\tNEW_TK\t327\n-#define\tCONTINUE_TK\t328\n-#define\tGOTO_TK\t329\n-#define\tPACKAGE_TK\t330\n-#define\tTHIS_TK\t331\n-#define\tBYTE_TK\t332\n-#define\tSHORT_TK\t333\n-#define\tINT_TK\t334\n-#define\tLONG_TK\t335\n-#define\tCHAR_TK\t336\n-#define\tINTEGRAL_TK\t337\n-#define\tFLOAT_TK\t338\n-#define\tDOUBLE_TK\t339\n-#define\tFP_TK\t340\n-#define\tID_TK\t341\n-#define\tREL_QM_TK\t342\n-#define\tREL_CL_TK\t343\n-#define\tNOT_TK\t344\n-#define\tNEG_TK\t345\n-#define\tASSIGN_ANY_TK\t346\n-#define\tASSIGN_TK\t347\n-#define\tOP_TK\t348\n-#define\tCP_TK\t349\n-#define\tOCB_TK\t350\n-#define\tCCB_TK\t351\n-#define\tOSB_TK\t352\n-#define\tCSB_TK\t353\n-#define\tSC_TK\t354\n-#define\tC_TK\t355\n-#define\tDOT_TK\t356\n-#define\tSTRING_LIT_TK\t357\n-#define\tCHAR_LIT_TK\t358\n-#define\tINT_LIT_TK\t359\n-#define\tFP_LIT_TK\t360\n-#define\tTRUE_TK\t361\n-#define\tFALSE_TK\t362\n-#define\tBOOL_LIT_TK\t363\n-#define\tNULL_TK\t364\n+#define\tPLUS_TK\t257\n+#define\tMINUS_TK\t258\n+#define\tMULT_TK\t259\n+#define\tDIV_TK\t260\n+#define\tREM_TK\t261\n+#define\tLS_TK\t262\n+#define\tSRS_TK\t263\n+#define\tZRS_TK\t264\n+#define\tAND_TK\t265\n+#define\tXOR_TK\t266\n+#define\tOR_TK\t267\n+#define\tBOOL_AND_TK\t268\n+#define\tBOOL_OR_TK\t269\n+#define\tEQ_TK\t270\n+#define\tNEQ_TK\t271\n+#define\tGT_TK\t272\n+#define\tGTE_TK\t273\n+#define\tLT_TK\t274\n+#define\tLTE_TK\t275\n+#define\tPLUS_ASSIGN_TK\t276\n+#define\tMINUS_ASSIGN_TK\t277\n+#define\tMULT_ASSIGN_TK\t278\n+#define\tDIV_ASSIGN_TK\t279\n+#define\tREM_ASSIGN_TK\t280\n+#define\tLS_ASSIGN_TK\t281\n+#define\tSRS_ASSIGN_TK\t282\n+#define\tZRS_ASSIGN_TK\t283\n+#define\tAND_ASSIGN_TK\t284\n+#define\tXOR_ASSIGN_TK\t285\n+#define\tOR_ASSIGN_TK\t286\n+#define\tPUBLIC_TK\t287\n+#define\tPRIVATE_TK\t288\n+#define\tPROTECTED_TK\t289\n+#define\tSTATIC_TK\t290\n+#define\tFINAL_TK\t291\n+#define\tSYNCHRONIZED_TK\t292\n+#define\tVOLATILE_TK\t293\n+#define\tTRANSIENT_TK\t294\n+#define\tNATIVE_TK\t295\n+#define\tPAD_TK\t296\n+#define\tABSTRACT_TK\t297\n+#define\tMODIFIER_TK\t298\n+#define\tDECR_TK\t299\n+#define\tINCR_TK\t300\n+#define\tDEFAULT_TK\t301\n+#define\tIF_TK\t302\n+#define\tTHROW_TK\t303\n+#define\tBOOLEAN_TK\t304\n+#define\tDO_TK\t305\n+#define\tIMPLEMENTS_TK\t306\n+#define\tTHROWS_TK\t307\n+#define\tBREAK_TK\t308\n+#define\tIMPORT_TK\t309\n+#define\tELSE_TK\t310\n+#define\tINSTANCEOF_TK\t311\n+#define\tRETURN_TK\t312\n+#define\tVOID_TK\t313\n+#define\tCATCH_TK\t314\n+#define\tINTERFACE_TK\t315\n+#define\tCASE_TK\t316\n+#define\tEXTENDS_TK\t317\n+#define\tFINALLY_TK\t318\n+#define\tSUPER_TK\t319\n+#define\tWHILE_TK\t320\n+#define\tCLASS_TK\t321\n+#define\tSWITCH_TK\t322\n+#define\tCONST_TK\t323\n+#define\tTRY_TK\t324\n+#define\tFOR_TK\t325\n+#define\tNEW_TK\t326\n+#define\tCONTINUE_TK\t327\n+#define\tGOTO_TK\t328\n+#define\tPACKAGE_TK\t329\n+#define\tTHIS_TK\t330\n+#define\tBYTE_TK\t331\n+#define\tSHORT_TK\t332\n+#define\tINT_TK\t333\n+#define\tLONG_TK\t334\n+#define\tCHAR_TK\t335\n+#define\tINTEGRAL_TK\t336\n+#define\tFLOAT_TK\t337\n+#define\tDOUBLE_TK\t338\n+#define\tFP_TK\t339\n+#define\tID_TK\t340\n+#define\tREL_QM_TK\t341\n+#define\tREL_CL_TK\t342\n+#define\tNOT_TK\t343\n+#define\tNEG_TK\t344\n+#define\tASSIGN_ANY_TK\t345\n+#define\tASSIGN_TK\t346\n+#define\tOP_TK\t347\n+#define\tCP_TK\t348\n+#define\tOCB_TK\t349\n+#define\tCCB_TK\t350\n+#define\tOSB_TK\t351\n+#define\tCSB_TK\t352\n+#define\tSC_TK\t353\n+#define\tC_TK\t354\n+#define\tDOT_TK\t355\n+#define\tSTRING_LIT_TK\t356\n+#define\tCHAR_LIT_TK\t357\n+#define\tINT_LIT_TK\t358\n+#define\tFP_LIT_TK\t359\n+#define\tTRUE_TK\t360\n+#define\tFALSE_TK\t361\n+#define\tBOOL_LIT_TK\t362\n+#define\tNULL_TK\t363\n \n #line 48 \"./parse.y\"\n \n@@ -140,7 +140,7 @@\n #include \"xref.h\"\n #include \"function.h\"\n #include \"except.h\"\n-#include \"expr.h\"\n+#include \"defaults.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -378,7 +378,7 @@ static tree java_lang_cloneable = NULL_TREE;\n static tree current_static_block = NULL_TREE;\n \n \n-#line 305 \"./parse.y\"\n+#line 306 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -388,7 +388,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 315 \"./parse.y\"\n+#line 316 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -409,7 +409,7 @@ typedef union {\n #define\tYYFLAG\t\t-32768\n #define\tYYNTBASE\t110\n \n-#define YYTRANSLATE(x) ((unsigned)(x) <= 364 ? yytranslate[x] : 266)\n+#define YYTRANSLATE(x) ((unsigned)(x) <= 363 ? yytranslate[x] : 266)\n \n static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n@@ -437,18 +437,18 @@ static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n-     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,\n-     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,\n-    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,\n-    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,\n-    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,\n-    46,    47,    48,    49,    50,    51,    52,    53,    54,    55,\n-    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,\n-    66,    67,    68,    69,    70,    71,    72,    73,    74,    75,\n-    76,    77,    78,    79,    80,    81,    82,    83,    84,    85,\n-    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,\n-    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,\n-   106,   107,   108,   109\n+     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,\n+     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,\n+    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,\n+    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,\n+    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,\n+    47,    48,    49,    50,    51,    52,    53,    54,    55,    56,\n+    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,\n+    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,\n+    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,\n+    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,\n+    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,\n+   107,   108,   109\n };\n \n #if YYDEBUG != 0\n@@ -686,57 +686,57 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   459,   465,   467,   468,   469,   470,   471,   475,   477,   480,\n-   482,   483,   486,   488,   491,   495,   499,   503,   509,   511,\n-   513,   515,   520,   522,   525,   529,   534,   539,   541,   542,\n-   543,   544,   545,   546,   547,   550,   555,   561,   563,   566,\n-   569,   571,   575,   577,   580,   607,   609,   613,   626,   628,\n-   632,   639,   644,   646,   656,   661,   676,   680,   683,   686,\n-   689,   691,   693,   698,   702,   704,   706,   708,   712,   714,\n-   716,   723,   729,   734,   738,   747,   757,   759,   762,   764,\n-   765,   766,   770,   772,   774,   775,   777,   782,   785,   795,\n-   798,   800,   804,   807,   814,   820,   828,   830,   832,   834,\n-   836,   840,   842,   846,   853,   854,   858,   861,   863,   865,\n-   867,   869,   871,   873,   875,   882,   885,   887,   896,   898,\n-   902,   907,   912,   916,   921,   926,   928,   935,   937,   939,\n-   943,   946,   948,   952,   954,   955,   960,   966,   973,   981,\n-   988,   991,   994,   998,  1001,  1005,  1014,  1016,  1018,  1022,\n-  1024,  1027,  1034,  1042,  1044,  1048,  1055,  1065,  1069,  1072,\n-  1075,  1078,  1081,  1084,  1087,  1090,  1092,  1096,  1102,  1107,\n-  1109,  1113,  1116,  1120,  1122,  1125,  1127,  1128,  1130,  1134,\n-  1138,  1144,  1149,  1152,  1154,  1158,  1164,  1168,  1173,  1182,\n-  1186,  1191,  1203,  1205,  1208,  1210,  1212,  1216,  1220,  1223,\n-  1227,  1229,  1230,  1231,  1232,  1233,  1237,  1239,  1240,  1241,\n-  1242,  1246,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1255,\n-  1256,  1257,  1260,  1265,  1276,  1279,  1283,  1290,  1300,  1306,\n-  1312,  1318,  1320,  1326,  1328,  1334,  1336,  1338,  1340,  1342,\n-  1346,  1348,  1349,  1350,  1351,  1352,  1353,  1356,  1362,  1364,\n-  1366,  1370,  1375,  1380,  1386,  1396,  1402,  1404,  1406,  1413,\n-  1416,  1418,  1420,  1424,  1426,  1429,  1433,  1435,  1438,  1445,\n-  1451,  1453,  1455,  1459,  1467,  1470,  1472,  1474,  1478,  1483,\n-  1492,  1497,  1500,  1507,  1509,  1511,  1515,  1518,  1527,  1534,\n-  1536,  1540,  1553,  1555,  1561,  1567,  1571,  1573,  1577,  1580,\n-  1582,  1586,  1589,  1591,  1593,  1597,  1600,  1602,  1604,  1608,\n-  1611,  1613,  1615,  1619,  1625,  1627,  1631,  1638,  1640,  1642,\n-  1644,  1648,  1656,  1659,  1661,  1666,  1670,  1672,  1679,  1687,\n-  1704,  1706,  1708,  1712,  1715,  1720,  1722,  1725,  1727,  1729,\n-  1731,  1732,  1733,  1734,  1738,  1740,  1742,  1747,  1749,  1751,\n-  1753,  1755,  1759,  1762,  1767,  1769,  1774,  1775,  1776,  1777,\n-  1778,  1780,  1782,  1784,  1786,  1788,  1792,  1794,  1797,  1803,\n-  1808,  1812,  1815,  1817,  1819,  1823,  1825,  1827,  1829,  1833,\n-  1836,  1840,  1846,  1848,  1856,  1883,  1885,  1889,  1894,  1901,\n-  1905,  1908,  1910,  1921,  1932,  1937,  1946,  1948,  1952,  1955,\n-  1957,  1962,  1967,  1972,  1979,  1981,  1982,  1983,  1986,  1991,\n-  1996,  1998,  1999,  2001,  2003,  2004,  2006,  2010,  2013,  2017,\n-  2020,  2024,  2026,  2028,  2030,  2031,  2033,  2037,  2046,  2048,\n-  2050,  2063,  2065,  2071,  2073,  2075,  2079,  2081,  2086,  2091,\n-  2096,  2098,  2100,  2104,  2106,  2111,  2116,  2118,  2122,  2124,\n-  2129,  2134,  2139,  2141,  2143,  2147,  2149,  2154,  2159,  2164,\n-  2169,  2171,  2173,  2175,  2177,  2179,  2183,  2185,  2190,  2195,\n-  2197,  2201,  2203,  2208,  2212,  2214,  2219,  2223,  2225,  2230,\n-  2234,  2236,  2241,  2245,  2247,  2252,  2256,  2258,  2263,  2269,\n-  2271,  2275,  2277,  2280,  2283,  2291,  2293,  2294,  2297,  2299,\n-  2302,  2306\n+   460,   466,   468,   469,   470,   471,   472,   476,   478,   481,\n+   483,   484,   487,   489,   492,   496,   500,   504,   510,   512,\n+   514,   516,   521,   523,   526,   530,   535,   540,   542,   543,\n+   544,   545,   546,   547,   548,   551,   556,   562,   564,   567,\n+   570,   572,   576,   578,   581,   608,   610,   614,   627,   629,\n+   633,   640,   645,   647,   657,   662,   677,   681,   684,   687,\n+   690,   692,   694,   699,   703,   705,   707,   709,   713,   715,\n+   717,   724,   730,   735,   739,   748,   758,   760,   763,   765,\n+   766,   767,   771,   773,   775,   776,   778,   783,   786,   796,\n+   799,   801,   805,   808,   815,   821,   829,   831,   833,   835,\n+   837,   841,   843,   847,   854,   855,   859,   862,   864,   866,\n+   868,   870,   872,   874,   876,   883,   886,   888,   897,   899,\n+   903,   908,   913,   917,   922,   927,   929,   936,   938,   940,\n+   944,   947,   949,   953,   955,   956,   961,   967,   974,   982,\n+   989,   992,   995,   999,  1002,  1006,  1015,  1017,  1019,  1023,\n+  1025,  1028,  1035,  1043,  1045,  1049,  1056,  1066,  1070,  1073,\n+  1076,  1079,  1082,  1085,  1088,  1091,  1093,  1097,  1103,  1108,\n+  1110,  1114,  1117,  1121,  1123,  1126,  1128,  1129,  1131,  1135,\n+  1139,  1145,  1150,  1153,  1155,  1159,  1165,  1169,  1174,  1183,\n+  1187,  1192,  1204,  1206,  1209,  1211,  1213,  1217,  1221,  1224,\n+  1228,  1230,  1231,  1232,  1233,  1234,  1238,  1240,  1241,  1242,\n+  1243,  1247,  1249,  1250,  1251,  1252,  1253,  1254,  1255,  1256,\n+  1257,  1258,  1261,  1266,  1277,  1280,  1284,  1291,  1301,  1307,\n+  1313,  1319,  1321,  1327,  1329,  1335,  1337,  1339,  1341,  1343,\n+  1347,  1349,  1350,  1351,  1352,  1353,  1354,  1357,  1363,  1365,\n+  1367,  1371,  1376,  1381,  1387,  1397,  1403,  1405,  1407,  1414,\n+  1417,  1419,  1421,  1425,  1427,  1430,  1434,  1436,  1439,  1446,\n+  1452,  1454,  1456,  1460,  1468,  1471,  1473,  1475,  1479,  1484,\n+  1493,  1498,  1501,  1508,  1510,  1512,  1516,  1519,  1528,  1535,\n+  1537,  1541,  1554,  1556,  1562,  1568,  1572,  1574,  1578,  1581,\n+  1583,  1587,  1590,  1592,  1594,  1598,  1601,  1603,  1605,  1609,\n+  1612,  1614,  1616,  1620,  1626,  1628,  1632,  1639,  1641,  1643,\n+  1645,  1649,  1657,  1660,  1662,  1667,  1671,  1673,  1680,  1688,\n+  1705,  1707,  1709,  1713,  1716,  1721,  1723,  1726,  1728,  1730,\n+  1732,  1733,  1734,  1735,  1739,  1741,  1743,  1748,  1750,  1752,\n+  1754,  1756,  1760,  1763,  1768,  1770,  1775,  1776,  1777,  1778,\n+  1779,  1781,  1783,  1785,  1787,  1789,  1793,  1795,  1798,  1804,\n+  1809,  1813,  1816,  1818,  1820,  1824,  1826,  1828,  1830,  1834,\n+  1837,  1841,  1847,  1849,  1857,  1884,  1886,  1890,  1895,  1902,\n+  1906,  1909,  1911,  1922,  1933,  1938,  1947,  1949,  1953,  1956,\n+  1958,  1963,  1968,  1973,  1980,  1982,  1983,  1984,  1987,  1992,\n+  1997,  1999,  2000,  2002,  2004,  2005,  2007,  2011,  2014,  2018,\n+  2021,  2025,  2027,  2029,  2031,  2032,  2034,  2038,  2047,  2049,\n+  2051,  2064,  2066,  2072,  2074,  2076,  2080,  2082,  2087,  2092,\n+  2097,  2099,  2101,  2105,  2107,  2112,  2117,  2119,  2123,  2125,\n+  2130,  2135,  2140,  2142,  2144,  2148,  2150,  2155,  2160,  2165,\n+  2170,  2172,  2174,  2176,  2178,  2180,  2184,  2186,  2191,  2196,\n+  2198,  2202,  2204,  2209,  2213,  2215,  2220,  2224,  2226,  2231,\n+  2235,  2237,  2242,  2246,  2248,  2253,  2257,  2259,  2264,  2270,\n+  2272,  2276,  2278,  2281,  2284,  2292,  2294,  2295,  2298,  2300,\n+  2303,  2307\n };\n #endif\n \n@@ -2214,7 +2214,8 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n+/* This file comes from bison-1.27.  */\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2231,46 +2232,66 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   Foundation, Inc., 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n    This special exception was added by the Free Software Foundation\n    in version 1.24 of Bison.  */\n \n-#ifndef alloca\n+/* This is the parser code that is written into each bison parser\n+  when the %semantic_parser declaration is not specified in the grammar.\n+  It was written by Richard Stallman by simplifying the hairy parser\n+  used when %semantic_parser is specified.  */\n+\n+#ifndef YYSTACK_USE_ALLOCA\n+#ifdef alloca\n+#define YYSTACK_USE_ALLOCA\n+#else /* alloca not defined */\n #ifdef __GNUC__\n+#define YYSTACK_USE_ALLOCA\n #define alloca __builtin_alloca\n #else /* not GNU C.  */\n-#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))\n+#define YYSTACK_USE_ALLOCA\n #include <alloca.h>\n #else /* not sparc */\n-#if defined (MSDOS) && !defined (__TURBOC__)\n+/* We think this test detects Watcom and Microsoft C.  */\n+/* This used to test MSDOS, but that is a bad idea\n+   since that symbol is in the user namespace.  */\n+#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)\n+#if 0 /* No need for malloc.h, which pollutes the namespace;\n+\t instead, just don't use alloca.  */\n #include <malloc.h>\n+#endif\n #else /* not MSDOS, or __TURBOC__ */\n #if defined(_AIX)\n-#include <malloc.h>\n+/* I don't know what this was needed for, but it pollutes the namespace.\n+   So I turned it off.   rms, 2 May 1997.  */\n+/* #include <malloc.h>  */\n  #pragma alloca\n-#else /* not MSDOS, __TURBOC__, or _AIX */\n-#ifdef __hpux\n-#ifdef __cplusplus\n-extern \"C\" {\n-void *alloca (unsigned int);\n-};\n-#else /* not __cplusplus */\n-void *alloca ();\n-#endif /* not __cplusplus */\n+#define YYSTACK_USE_ALLOCA\n+#else /* not MSDOS, or __TURBOC__, or _AIX */\n+#if 0\n+#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,\n+\t\t and on HPUX 10.  Eventually we can turn this on.  */\n+#define YYSTACK_USE_ALLOCA\n+#define alloca __builtin_alloca\n #endif /* __hpux */\n+#endif\n #endif /* not _AIX */\n #endif /* not MSDOS, or __TURBOC__ */\n-#endif /* not sparc.  */\n-#endif /* not GNU C.  */\n-#endif /* alloca not defined.  */\n+#endif /* not sparc */\n+#endif /* not GNU C */\n+#endif /* alloca not defined */\n+#endif /* YYSTACK_USE_ALLOCA not defined */\n \n-/* This is the parser code that is written into each bison parser\n-  when the %semantic_parser declaration is not specified in the grammar.\n-  It was written by Richard Stallman by simplifying the hairy parser\n-  used when %semantic_parser is specified.  */\n+#ifdef YYSTACK_USE_ALLOCA\n+#define YYSTACK_ALLOC alloca\n+#else\n+#define YYSTACK_ALLOC malloc\n+#endif\n \n /* Note: there must be only one dollar sign in this file.\n    It is replaced by the list of actions, each action\n@@ -2280,8 +2301,8 @@ void *alloca ();\n #define yyclearin\t(yychar = YYEMPTY)\n #define YYEMPTY\t\t-2\n #define YYEOF\t\t0\n-#define YYACCEPT\treturn(0)\n-#define YYABORT \treturn(1)\n+#define YYACCEPT\tgoto yyacceptlab\n+#define YYABORT \tgoto yyabortlab\n #define YYERROR\t\tgoto yyerrlab1\n /* Like YYERROR except do call yyerror.\n    This remains here temporarily to ease the\n@@ -2362,12 +2383,12 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n #ifndef YYMAXDEPTH\n #define YYMAXDEPTH 10000\n #endif\n-\n-/* Prevent warning if -Wstrict-prototypes.  */\n-#ifdef __GNUC__\n-int yyparse (void);\n-#endif\n \f\n+/* Define __yy_memcpy.  Note that the size argument\n+   should be passed with type unsigned int, because that is what the non-GCC\n+   definitions require.  With GCC, __builtin_memcpy takes an arg\n+   of type size_t, but it can handle unsigned int.  */\n+\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n #else\t\t\t\t/* not GNU C or C++ */\n@@ -2379,7 +2400,7 @@ static void\n __yy_memcpy (to, from, count)\n      char *to;\n      char *from;\n-     int count;\n+     unsigned int count;\n {\n   register char *f = from;\n   register char *t = to;\n@@ -2394,10 +2415,10 @@ __yy_memcpy (to, from, count)\n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (char *to, char *from, int count)\n+__yy_memcpy (char *to, char *from, unsigned int count)\n {\n-  register char *f = from;\n   register char *t = to;\n+  register char *f = from;\n   register int i = count;\n \n   while (i-- > 0)\n@@ -2407,7 +2428,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/share/bison.simple\"\n+#line 216 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2428,6 +2449,15 @@ __yy_memcpy (char *to, char *from, int count)\n #define YYPARSE_PARAM_DECL\n #endif /* not YYPARSE_PARAM */\n \n+/* Prevent warning if -Wstrict-prototypes.  */\n+#ifdef __GNUC__\n+#ifdef YYPARSE_PARAM\n+int yyparse (void *);\n+#else\n+int yyparse (void);\n+#endif\n+#endif\n+\n int\n yyparse(YYPARSE_PARAM_ARG)\n      YYPARSE_PARAM_DECL\n@@ -2456,6 +2486,7 @@ yyparse(YYPARSE_PARAM_ARG)\n #endif\n \n   int yystacksize = YYINITDEPTH;\n+  int yyfree_stacks = 0;\n \n #ifdef YYPURE\n   int yychar;\n@@ -2540,18 +2571,32 @@ yyparse(YYPARSE_PARAM_ARG)\n       if (yystacksize >= YYMAXDEPTH)\n \t{\n \t  yyerror(\"parser stack overflow\");\n+\t  if (yyfree_stacks)\n+\t    {\n+\t      free (yyss);\n+\t      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+\t      free (yyls);\n+#endif\n+\t    }\n \t  return 2;\n \t}\n       yystacksize *= 2;\n       if (yystacksize > YYMAXDEPTH)\n \tyystacksize = YYMAXDEPTH;\n-      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n-      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));\n-      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n-      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));\n+#ifndef YYSTACK_USE_ALLOCA\n+      yyfree_stacks = 1;\n+#endif\n+      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss, (char *)yyss1,\n+\t\t   size * (unsigned int) sizeof (*yyssp));\n+      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs, (char *)yyvs1,\n+\t\t   size * (unsigned int) sizeof (*yyvsp));\n #ifdef YYLSP_NEEDED\n-      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n-      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));\n+      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls, (char *)yyls1,\n+\t\t   size * (unsigned int) sizeof (*yylsp));\n #endif\n #endif /* no yyoverflow */\n \n@@ -2712,66 +2757,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 461 \"./parse.y\"\n+#line 462 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 505 \"./parse.y\"\n+#line 506 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 510 \"./parse.y\"\n+#line 511 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 512 \"./parse.y\"\n+#line 513 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 514 \"./parse.y\"\n+#line 515 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 516 \"./parse.y\"\n+#line 517 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 531 \"./parse.y\"\n+#line 532 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 540 \"./parse.y\"\n+#line 541 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 552 \"./parse.y\"\n+#line 553 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 556 \"./parse.y\"\n+#line 557 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 568 \"./parse.y\"\n+#line 569 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 570 \"./parse.y\"\n+#line 571 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 572 \"./parse.y\"\n+#line 573 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 582 \"./parse.y\"\n+#line 583 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2799,15 +2844,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 608 \"./parse.y\"\n+#line 609 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 610 \"./parse.y\"\n+#line 611 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 615 \"./parse.y\"\n+#line 616 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2821,47 +2866,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 627 \"./parse.y\"\n+#line 628 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 629 \"./parse.y\"\n+#line 630 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 634 \"./parse.y\"\n+#line 635 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 640 \"./parse.y\"\n+#line 641 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 645 \"./parse.y\"\n+#line 646 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 647 \"./parse.y\"\n+#line 648 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 658 \"./parse.y\"\n+#line 659 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 662 \"./parse.y\"\n+#line 663 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2875,95 +2920,95 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 678 \"./parse.y\"\n+#line 679 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 680 \"./parse.y\"\n+#line 681 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 684 \"./parse.y\"\n+#line 685 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 686 \"./parse.y\"\n+#line 687 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 690 \"./parse.y\"\n+#line 691 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 692 \"./parse.y\"\n+#line 693 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 694 \"./parse.y\"\n+#line 695 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 699 \"./parse.y\"\n+#line 700 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 703 \"./parse.y\"\n+#line 704 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 705 \"./parse.y\"\n+#line 706 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 707 \"./parse.y\"\n+#line 708 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 709 \"./parse.y\"\n+#line 710 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 713 \"./parse.y\"\n+#line 714 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 715 \"./parse.y\"\n+#line 716 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 717 \"./parse.y\"\n+#line 718 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 725 \"./parse.y\"\n+#line 726 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 730 \"./parse.y\"\n+#line 731 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 735 \"./parse.y\"\n+#line 736 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 740 \"./parse.y\"\n+#line 741 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2973,7 +3018,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 748 \"./parse.y\"\n+#line 749 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2983,27 +3028,27 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 767 \"./parse.y\"\n+#line 768 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 773 \"./parse.y\"\n+#line 774 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 776 \"./parse.y\"\n+#line 777 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 778 \"./parse.y\"\n+#line 779 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 784 \"./parse.y\"\n+#line 785 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 786 \"./parse.y\"\n+#line 787 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3013,19 +3058,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 799 \"./parse.y\"\n+#line 800 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 801 \"./parse.y\"\n+#line 802 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 806 \"./parse.y\"\n+#line 807 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 808 \"./parse.y\"\n+#line 809 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3034,101 +3079,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 815 \"./parse.y\"\n+#line 816 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 821 \"./parse.y\"\n+#line 822 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 831 \"./parse.y\"\n+#line 832 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 833 \"./parse.y\"\n+#line 834 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 835 \"./parse.y\"\n+#line 836 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 837 \"./parse.y\"\n+#line 838 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 848 \"./parse.y\"\n+#line 849 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 853 \"./parse.y\"\n+#line 854 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 855 \"./parse.y\"\n+#line 856 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 860 \"./parse.y\"\n+#line 861 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 862 \"./parse.y\"\n+#line 863 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 864 \"./parse.y\"\n+#line 865 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 866 \"./parse.y\"\n+#line 867 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 868 \"./parse.y\"\n+#line 869 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 870 \"./parse.y\"\n+#line 871 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 872 \"./parse.y\"\n+#line 873 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 874 \"./parse.y\"\n+#line 875 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 876 \"./parse.y\"\n+#line 877 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 884 \"./parse.y\"\n+#line 885 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 886 \"./parse.y\"\n+#line 887 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 888 \"./parse.y\"\n+#line 889 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3139,316 +3184,316 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 897 \"./parse.y\"\n+#line 898 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 899 \"./parse.y\"\n+#line 900 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 904 \"./parse.y\"\n+#line 905 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 908 \"./parse.y\"\n+#line 909 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 913 \"./parse.y\"\n+#line 914 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 918 \"./parse.y\"\n+#line 919 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 922 \"./parse.y\"\n+#line 923 \"./parse.y\"\n { \n \t\t  parse_jdk1_1_error (\"final parameters\");\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 126:\n-#line 927 \"./parse.y\"\n+#line 928 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 929 \"./parse.y\"\n+#line 930 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 936 \"./parse.y\"\n+#line 937 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 938 \"./parse.y\"\n+#line 939 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 940 \"./parse.y\"\n+#line 941 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 945 \"./parse.y\"\n+#line 946 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 947 \"./parse.y\"\n+#line 948 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 949 \"./parse.y\"\n+#line 950 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 956 \"./parse.y\"\n+#line 957 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 962 \"./parse.y\"\n+#line 963 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 967 \"./parse.y\"\n+#line 968 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 975 \"./parse.y\"\n+#line 976 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 983 \"./parse.y\"\n+#line 984 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 988 \"./parse.y\"\n+#line 989 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 993 \"./parse.y\"\n+#line 994 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 995 \"./parse.y\"\n+#line 996 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 1000 \"./parse.y\"\n+#line 1001 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 1002 \"./parse.y\"\n+#line 1003 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 1010 \"./parse.y\"\n+#line 1011 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 1015 \"./parse.y\"\n+#line 1016 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 1017 \"./parse.y\"\n+#line 1018 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1019 \"./parse.y\"\n+#line 1020 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 152:\n-#line 1029 \"./parse.y\"\n+#line 1030 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 153:\n-#line 1035 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1043 \"./parse.y\"\n+#line 1044 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 155:\n-#line 1045 \"./parse.y\"\n+#line 1046 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1050 \"./parse.y\"\n+#line 1051 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 157:\n-#line 1056 \"./parse.y\"\n+#line 1057 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1067 \"./parse.y\"\n+#line 1068 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1069 \"./parse.y\"\n+#line 1070 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1073 \"./parse.y\"\n+#line 1074 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 161:\n-#line 1075 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1079 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 163:\n-#line 1081 \"./parse.y\"\n+#line 1082 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1085 \"./parse.y\"\n+#line 1086 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 165:\n-#line 1087 \"./parse.y\"\n+#line 1088 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 166:\n-#line 1091 \"./parse.y\"\n+#line 1092 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 167:\n-#line 1093 \"./parse.y\"\n+#line 1094 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1098 \"./parse.y\"\n+#line 1099 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 169:\n-#line 1103 \"./parse.y\"\n+#line 1104 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 170:\n-#line 1108 \"./parse.y\"\n+#line 1109 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 171:\n-#line 1110 \"./parse.y\"\n+#line 1111 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 172:\n-#line 1115 \"./parse.y\"\n+#line 1116 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 173:\n-#line 1117 \"./parse.y\"\n+#line 1118 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1129 \"./parse.y\"\n+#line 1130 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 179:\n-#line 1131 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 181:\n-#line 1140 \"./parse.y\"\n+#line 1141 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 182:\n-#line 1145 \"./parse.y\"\n+#line 1146 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 183:\n-#line 1151 \"./parse.y\"\n+#line 1152 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 184:\n-#line 1153 \"./parse.y\"\n+#line 1154 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 185:\n-#line 1155 \"./parse.y\"\n+#line 1156 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 186:\n-#line 1160 \"./parse.y\"\n+#line 1161 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 187:\n-#line 1165 \"./parse.y\"\n+#line 1166 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 188:\n-#line 1169 \"./parse.y\"\n+#line 1170 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 189:\n-#line 1175 \"./parse.y\"\n+#line 1176 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3458,15 +3503,15 @@ case 189:\n \t\t;\n     break;}\n case 190:\n-#line 1183 \"./parse.y\"\n+#line 1184 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 191:\n-#line 1188 \"./parse.y\"\n+#line 1189 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 192:\n-#line 1193 \"./parse.y\"\n+#line 1194 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3477,35 +3522,35 @@ case 192:\n \t\t;\n     break;}\n case 196:\n-#line 1211 \"./parse.y\"\n+#line 1212 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1213 \"./parse.y\"\n+#line 1214 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 199:\n-#line 1222 \"./parse.y\"\n+#line 1223 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 200:\n-#line 1224 \"./parse.y\"\n+#line 1225 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 206:\n-#line 1234 \"./parse.y\"\n+#line 1235 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 211:\n-#line 1243 \"./parse.y\"\n+#line 1244 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 223:\n-#line 1262 \"./parse.y\"\n+#line 1263 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 224:\n-#line 1267 \"./parse.y\"\n+#line 1268 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3515,19 +3560,19 @@ case 224:\n \t\t;\n     break;}\n case 225:\n-#line 1278 \"./parse.y\"\n+#line 1279 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1280 \"./parse.y\"\n+#line 1281 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 227:\n-#line 1285 \"./parse.y\"\n+#line 1286 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 228:\n-#line 1292 \"./parse.y\"\n+#line 1293 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3538,108 +3583,108 @@ case 228:\n \t\t;\n     break;}\n case 229:\n-#line 1301 \"./parse.y\"\n+#line 1302 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1307 \"./parse.y\"\n+#line 1308 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1313 \"./parse.y\"\n+#line 1314 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1319 \"./parse.y\"\n+#line 1320 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1321 \"./parse.y\"\n+#line 1322 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1327 \"./parse.y\"\n+#line 1328 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1329 \"./parse.y\"\n+#line 1330 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 236:\n-#line 1335 \"./parse.y\"\n+#line 1336 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1337 \"./parse.y\"\n+#line 1338 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1339 \"./parse.y\"\n+#line 1340 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1341 \"./parse.y\"\n+#line 1342 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1343 \"./parse.y\"\n+#line 1344 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1358 \"./parse.y\"\n+#line 1359 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 249:\n-#line 1363 \"./parse.y\"\n+#line 1364 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1365 \"./parse.y\"\n+#line 1366 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 251:\n-#line 1367 \"./parse.y\"\n+#line 1368 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 252:\n-#line 1372 \"./parse.y\"\n+#line 1373 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 253:\n-#line 1377 \"./parse.y\"\n+#line 1378 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1382 \"./parse.y\"\n+#line 1383 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 255:\n-#line 1386 \"./parse.y\"\n+#line 1387 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3650,112 +3695,112 @@ case 255:\n \t\t;\n     break;}\n case 256:\n-#line 1398 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 257:\n-#line 1403 \"./parse.y\"\n+#line 1404 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1405 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 259:\n-#line 1407 \"./parse.y\"\n+#line 1408 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 260:\n-#line 1415 \"./parse.y\"\n+#line 1416 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1417 \"./parse.y\"\n+#line 1418 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1419 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1421 \"./parse.y\"\n+#line 1422 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1440 \"./parse.y\"\n+#line 1441 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 270:\n-#line 1446 \"./parse.y\"\n+#line 1447 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1452 \"./parse.y\"\n+#line 1453 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 272:\n-#line 1454 \"./parse.y\"\n+#line 1455 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 273:\n-#line 1456 \"./parse.y\"\n+#line 1457 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1461 \"./parse.y\"\n+#line 1462 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 275:\n-#line 1469 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 276:\n-#line 1471 \"./parse.y\"\n+#line 1472 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1473 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1475 \"./parse.y\"\n+#line 1476 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1480 \"./parse.y\"\n+#line 1481 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 280:\n-#line 1485 \"./parse.y\"\n+#line 1486 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 281:\n-#line 1494 \"./parse.y\"\n+#line 1495 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 282:\n-#line 1499 \"./parse.y\"\n+#line 1500 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 283:\n-#line 1501 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3764,23 +3809,23 @@ case 283:\n \t\t;\n     break;}\n case 284:\n-#line 1508 \"./parse.y\"\n+#line 1509 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1510 \"./parse.y\"\n+#line 1511 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1512 \"./parse.y\"\n+#line 1513 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1517 \"./parse.y\"\n+#line 1518 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 288:\n-#line 1519 \"./parse.y\"\n+#line 1520 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3789,23 +3834,23 @@ case 288:\n \t\t;\n     break;}\n case 289:\n-#line 1529 \"./parse.y\"\n+#line 1530 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 290:\n-#line 1535 \"./parse.y\"\n+#line 1536 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 291:\n-#line 1537 \"./parse.y\"\n+#line 1538 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 292:\n-#line 1542 \"./parse.y\"\n+#line 1543 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3818,179 +3863,179 @@ case 292:\n \t\t;\n     break;}\n case 293:\n-#line 1554 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 294:\n-#line 1556 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 295:\n-#line 1562 \"./parse.y\"\n+#line 1563 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 296:\n-#line 1568 \"./parse.y\"\n+#line 1569 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 297:\n-#line 1572 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 298:\n-#line 1574 \"./parse.y\"\n+#line 1575 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1579 \"./parse.y\"\n+#line 1580 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1581 \"./parse.y\"\n+#line 1582 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1583 \"./parse.y\"\n+#line 1584 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1588 \"./parse.y\"\n+#line 1589 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 303:\n-#line 1590 \"./parse.y\"\n+#line 1591 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 304:\n-#line 1592 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 305:\n-#line 1594 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 306:\n-#line 1599 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 307:\n-#line 1601 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 308:\n-#line 1603 \"./parse.y\"\n+#line 1604 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 309:\n-#line 1605 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 310:\n-#line 1610 \"./parse.y\"\n+#line 1611 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1612 \"./parse.y\"\n+#line 1613 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 312:\n-#line 1614 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1616 \"./parse.y\"\n+#line 1617 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1621 \"./parse.y\"\n+#line 1622 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 315:\n-#line 1626 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 316:\n-#line 1628 \"./parse.y\"\n+#line 1629 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1633 \"./parse.y\"\n+#line 1634 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 318:\n-#line 1639 \"./parse.y\"\n+#line 1640 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 319:\n-#line 1641 \"./parse.y\"\n+#line 1642 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1643 \"./parse.y\"\n+#line 1644 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 321:\n-#line 1645 \"./parse.y\"\n+#line 1646 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1650 \"./parse.y\"\n+#line 1651 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 323:\n-#line 1658 \"./parse.y\"\n+#line 1659 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1660 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1662 \"./parse.y\"\n+#line 1663 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 326:\n-#line 1667 \"./parse.y\"\n+#line 1668 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 328:\n-#line 1673 \"./parse.y\"\n+#line 1674 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 329:\n-#line 1681 \"./parse.y\"\n+#line 1682 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 330:\n-#line 1689 \"./parse.y\"\n+#line 1690 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4008,184 +4053,184 @@ case 330:\n \t\t;\n     break;}\n case 331:\n-#line 1705 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 332:\n-#line 1707 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 333:\n-#line 1709 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 334:\n-#line 1714 \"./parse.y\"\n+#line 1715 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 335:\n-#line 1716 \"./parse.y\"\n+#line 1717 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 339:\n-#line 1728 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 340:\n-#line 1730 \"./parse.y\"\n+#line 1731 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 345:\n-#line 1739 \"./parse.y\"\n+#line 1740 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 346:\n-#line 1741 \"./parse.y\"\n+#line 1742 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 347:\n-#line 1743 \"./parse.y\"\n+#line 1744 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 348:\n-#line 1748 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 349:\n-#line 1750 \"./parse.y\"\n+#line 1751 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 350:\n-#line 1752 \"./parse.y\"\n+#line 1753 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1754 \"./parse.y\"\n+#line 1755 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1756 \"./parse.y\"\n+#line 1757 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 353:\n-#line 1761 \"./parse.y\"\n+#line 1762 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 354:\n-#line 1763 \"./parse.y\"\n+#line 1764 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 355:\n-#line 1768 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 356:\n-#line 1770 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 361:\n-#line 1779 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 362:\n-#line 1781 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1783 \"./parse.y\"\n+#line 1784 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1785 \"./parse.y\"\n+#line 1786 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 365:\n-#line 1787 \"./parse.y\"\n+#line 1788 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1789 \"./parse.y\"\n+#line 1790 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 369:\n-#line 1799 \"./parse.y\"\n+#line 1800 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 370:\n-#line 1804 \"./parse.y\"\n+#line 1805 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 371:\n-#line 1809 \"./parse.y\"\n+#line 1810 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 372:\n-#line 1814 \"./parse.y\"\n+#line 1815 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 373:\n-#line 1816 \"./parse.y\"\n+#line 1817 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 374:\n-#line 1818 \"./parse.y\"\n+#line 1819 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 375:\n-#line 1820 \"./parse.y\"\n+#line 1821 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 376:\n-#line 1824 \"./parse.y\"\n+#line 1825 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 377:\n-#line 1826 \"./parse.y\"\n+#line 1827 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 378:\n-#line 1828 \"./parse.y\"\n+#line 1829 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 379:\n-#line 1830 \"./parse.y\"\n+#line 1831 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 380:\n-#line 1835 \"./parse.y\"\n+#line 1836 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 381:\n-#line 1837 \"./parse.y\"\n+#line 1838 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 382:\n-#line 1842 \"./parse.y\"\n+#line 1843 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 383:\n-#line 1847 \"./parse.y\"\n+#line 1848 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 384:\n-#line 1849 \"./parse.y\"\n+#line 1850 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 385:\n-#line 1858 \"./parse.y\"\n+#line 1859 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4213,19 +4258,19 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 1884 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 387:\n-#line 1886 \"./parse.y\"\n+#line 1887 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 388:\n-#line 1891 \"./parse.y\"\n+#line 1892 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 389:\n-#line 1895 \"./parse.y\"\n+#line 1896 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4234,19 +4279,19 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 1902 \"./parse.y\"\n+#line 1903 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 391:\n-#line 1907 \"./parse.y\"\n+#line 1908 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 392:\n-#line 1909 \"./parse.y\"\n+#line 1910 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 393:\n-#line 1911 \"./parse.y\"\n+#line 1912 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4259,7 +4304,7 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 1922 \"./parse.y\"\n+#line 1923 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4272,121 +4317,121 @@ case 394:\n \t\t;\n     break;}\n case 395:\n-#line 1933 \"./parse.y\"\n+#line 1934 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 396:\n-#line 1938 \"./parse.y\"\n+#line 1939 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 397:\n-#line 1947 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 398:\n-#line 1949 \"./parse.y\"\n+#line 1950 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 399:\n-#line 1954 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 400:\n-#line 1956 \"./parse.y\"\n+#line 1957 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 1958 \"./parse.y\"\n+#line 1959 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1963 \"./parse.y\"\n+#line 1964 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 403:\n-#line 1968 \"./parse.y\"\n+#line 1969 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 404:\n-#line 1973 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 409:\n-#line 1988 \"./parse.y\"\n+#line 1989 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1993 \"./parse.y\"\n+#line 1994 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 413:\n-#line 2000 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 2002 \"./parse.y\"\n+#line 2003 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 416:\n-#line 2005 \"./parse.y\"\n+#line 2006 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 2007 \"./parse.y\"\n+#line 2008 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2012 \"./parse.y\"\n+#line 2013 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 2014 \"./parse.y\"\n+#line 2015 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 2019 \"./parse.y\"\n+#line 2020 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 421:\n-#line 2021 \"./parse.y\"\n+#line 2022 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 423:\n-#line 2027 \"./parse.y\"\n+#line 2028 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2029 \"./parse.y\"\n+#line 2030 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 426:\n-#line 2032 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 427:\n-#line 2034 \"./parse.y\"\n+#line 2035 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2039 \"./parse.y\"\n+#line 2040 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4396,15 +4441,15 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2047 \"./parse.y\"\n+#line 2048 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 430:\n-#line 2049 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 431:\n-#line 2051 \"./parse.y\"\n+#line 2052 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4419,275 +4464,275 @@ case 431:\n \t\t;\n     break;}\n case 432:\n-#line 2064 \"./parse.y\"\n+#line 2065 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 433:\n-#line 2066 \"./parse.y\"\n+#line 2067 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 434:\n-#line 2072 \"./parse.y\"\n+#line 2073 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2074 \"./parse.y\"\n+#line 2075 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2076 \"./parse.y\"\n+#line 2077 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 438:\n-#line 2082 \"./parse.y\"\n+#line 2083 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 439:\n-#line 2087 \"./parse.y\"\n+#line 2088 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 440:\n-#line 2092 \"./parse.y\"\n+#line 2093 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 441:\n-#line 2097 \"./parse.y\"\n+#line 2098 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2099 \"./parse.y\"\n+#line 2100 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2101 \"./parse.y\"\n+#line 2102 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2107 \"./parse.y\"\n+#line 2108 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 446:\n-#line 2112 \"./parse.y\"\n+#line 2113 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 447:\n-#line 2117 \"./parse.y\"\n+#line 2118 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2119 \"./parse.y\"\n+#line 2120 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 450:\n-#line 2125 \"./parse.y\"\n+#line 2126 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2130 \"./parse.y\"\n+#line 2131 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 452:\n-#line 2135 \"./parse.y\"\n+#line 2136 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 453:\n-#line 2140 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2142 \"./parse.y\"\n+#line 2143 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2144 \"./parse.y\"\n+#line 2145 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 457:\n-#line 2150 \"./parse.y\"\n+#line 2151 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2155 \"./parse.y\"\n+#line 2156 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2160 \"./parse.y\"\n+#line 2161 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2165 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2170 \"./parse.y\"\n+#line 2171 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 462:\n-#line 2172 \"./parse.y\"\n+#line 2173 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2174 \"./parse.y\"\n+#line 2175 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2176 \"./parse.y\"\n+#line 2177 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2178 \"./parse.y\"\n+#line 2179 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 466:\n-#line 2180 \"./parse.y\"\n+#line 2181 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 468:\n-#line 2186 \"./parse.y\"\n+#line 2187 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 469:\n-#line 2191 \"./parse.y\"\n+#line 2192 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 470:\n-#line 2196 \"./parse.y\"\n+#line 2197 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2198 \"./parse.y\"\n+#line 2199 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2204 \"./parse.y\"\n+#line 2205 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2209 \"./parse.y\"\n+#line 2210 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2215 \"./parse.y\"\n+#line 2216 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2220 \"./parse.y\"\n+#line 2221 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2226 \"./parse.y\"\n+#line 2227 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2231 \"./parse.y\"\n+#line 2232 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2237 \"./parse.y\"\n+#line 2238 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2242 \"./parse.y\"\n+#line 2243 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2248 \"./parse.y\"\n+#line 2249 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 486:\n-#line 2253 \"./parse.y\"\n+#line 2254 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 488:\n-#line 2259 \"./parse.y\"\n+#line 2260 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 489:\n-#line 2264 \"./parse.y\"\n+#line 2265 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 490:\n-#line 2270 \"./parse.y\"\n+#line 2271 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 491:\n-#line 2272 \"./parse.y\"\n+#line 2273 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 494:\n-#line 2282 \"./parse.y\"\n+#line 2283 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 495:\n-#line 2284 \"./parse.y\"\n+#line 2285 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4696,7 +4741,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/share/bison.simple\"\n+#line 542 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4891,8 +4936,32 @@ case 495:\n \n   yystate = yyn;\n   goto yynewstate;\n+\n+ yyacceptlab:\n+  /* YYACCEPT comes here.  */\n+  if (yyfree_stacks)\n+    {\n+      free (yyss);\n+      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+      free (yyls);\n+#endif\n+    }\n+  return 0;\n+\n+ yyabortlab:\n+  /* YYABORT comes here.  */\n+  if (yyfree_stacks)\n+    {\n+      free (yyss);\n+      free (yyvs);\n+#ifdef YYLSP_NEEDED\n+      free (yyls);\n+#endif\n+    }\n+  return 1;\n }\n-#line 2310 \"./parse.y\"\n+#line 2311 \"./parse.y\"\n \n \f\n \n@@ -8178,12 +8247,10 @@ expand_start_java_method (fndecl)\n     {\n       tree next = TREE_CHAIN (tem);\n       tree type = TREE_TYPE (tem);\n-#ifdef PROMOTE_PROTOTYPES\n       if (PROMOTE_PROTOTYPES\n \t  && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n \t  && INTEGRAL_TYPE_P (type))\n \ttype = integer_type_node;\n-#endif\n       DECL_ARG_TYPE (tem) = type;\n       layout_decl (tem, 0);\n       pushdecl (tem);"}, {"sha": "5e344ea4a2f92da606e7d76199152662d02e4224", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=0ae70c6a94928c5ffb7346a6c3f6ee24c4710b12", "patch": "@@ -64,7 +64,7 @@ definitions and other extensions.  */\n #include \"xref.h\"\n #include \"function.h\"\n #include \"except.h\"\n-#include \"expr.h\"\n+#include \"defaults.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -5593,12 +5593,10 @@ expand_start_java_method (fndecl)\n     {\n       tree next = TREE_CHAIN (tem);\n       tree type = TREE_TYPE (tem);\n-#ifdef PROMOTE_PROTOTYPES\n       if (PROMOTE_PROTOTYPES\n \t  && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n \t  && INTEGRAL_TYPE_P (type))\n \ttype = integer_type_node;\n-#endif\n       DECL_ARG_TYPE (tem) = type;\n       layout_decl (tem, 0);\n       pushdecl (tem);"}]}