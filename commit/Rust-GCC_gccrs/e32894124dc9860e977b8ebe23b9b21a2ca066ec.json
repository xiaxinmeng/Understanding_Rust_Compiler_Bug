{"sha": "e32894124dc9860e977b8ebe23b9b21a2ca066ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMyODk0MTI0ZGM5ODYwZTk3N2I4ZWJlMjNiOWIyMWEyY2EwNjZlYw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2003-01-20T18:59:43Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2003-01-20T18:59:43Z"}, "message": "Add an UNSPEC_PROLOGUE_USE to prevent the link register from being considered dead.\n\nAdd a testcase for the bug fixed by this patch.\n\nFrom-SVN: r61509", "tree": {"sha": "964485e9f01270d98d7b1fc07b65f9917509b03f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/964485e9f01270d98d7b1fc07b65f9917509b03f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e32894124dc9860e977b8ebe23b9b21a2ca066ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e32894124dc9860e977b8ebe23b9b21a2ca066ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e32894124dc9860e977b8ebe23b9b21a2ca066ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e32894124dc9860e977b8ebe23b9b21a2ca066ec/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "120cdf68d5dbc7b2819d7e97a26acf4436bb66f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120cdf68d5dbc7b2819d7e97a26acf4436bb66f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120cdf68d5dbc7b2819d7e97a26acf4436bb66f8"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "c75ddc725125b6b433c2fee08939f33acc7965f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e32894124dc9860e977b8ebe23b9b21a2ca066ec", "patch": "@@ -1,3 +1,9 @@\n+2003-01-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.md (sibcall_epilogue): Add an\n+\tUNSPEC_PROLOGUE_USE to prevent the link register from being\n+\tconsidered dead.\n+\n Mon Jan 20 14:36:23 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (SSE cmov splitter):  Handle memory operand in operand 5."}, {"sha": "40f956ee260b044bd07122091f3104b7f63f404e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=e32894124dc9860e977b8ebe23b9b21a2ca066ec", "patch": "@@ -8430,8 +8430,14 @@\n   \"\n )\n \n+;; Note - although unspec_volatile's USE all hard registers,\n+;; USEs are ignored after relaod has completed.  Thus we need\n+;; to add an unspec of the link register to ensure that flow\n+;; does not think that it is unused by the sibcall branch that\n+;; will replace the standard function epilogue.\n (define_insn \"sibcall_epilogue\"\n-  [(unspec_volatile [(const_int 0)] VUNSPEC_EPILOGUE)]\n+  [(parallel [(unspec:SI [(reg:SI LR_REGNUM)] UNSPEC_PROLOGUE_USE)\n+              (unspec_volatile [(return)] VUNSPEC_EPILOGUE)])]\n   \"TARGET_ARM\"\n   \"*\n   if (USE_RETURN_INSN (FALSE))"}, {"sha": "3f53ca43469551e801efb909dfd4233ca1ed58c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e32894124dc9860e977b8ebe23b9b21a2ca066ec", "patch": "@@ -1,3 +1,8 @@\n+2003-01-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc.c-torture/execute/20030117-1.c: New test case.  Exposes\n+\tproblem with ARM sibcall code generation.\n+\n 2003-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gcc.c-torture/execute/20030120-1.c: New."}, {"sha": "656bd61ed0ab9cfb1957e9b8c1124f0eca4a158f", "filename": "gcc/testsuite/gcc.c-torture/execute/20030117-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030117-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e32894124dc9860e977b8ebe23b9b21a2ca066ec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030117-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030117-1.c?ref=e32894124dc9860e977b8ebe23b9b21a2ca066ec", "patch": "@@ -0,0 +1,23 @@\n+int foo (int, int, int);\n+int bar (int, int, int);\n+\n+int main (void)\n+{\n+  if (foo (5, 10, 21) != 12)\n+    abort ();\n+\n+  if (bar (9, 12, 15) != 150)\n+    abort ();\n+\n+  exit (0);\n+}\n+\n+int foo (int x, int y, int z)\n+{\n+  return (x + y + z) / 3;\n+}\n+\n+int bar (int x, int y, int z)\n+{\n+  return foo (x * x, y * y, z * z);\n+}"}]}