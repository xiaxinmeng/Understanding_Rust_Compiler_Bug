{"sha": "023a3fb4915841a3eb469b71cf642b5763163e14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIzYTNmYjQ5MTU4NDFhM2ViNDY5YjcxY2Y2NDJiNTc2MzE2M2UxNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-12-09T09:58:56Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-12-09T09:58:56Z"}, "message": "libstdc++: fix buffer overflow in path::operator+= (PR92853)\n\nWhen concatenating a path ending in a root-directory onto another path,\nwe added an empty filename to the end of the path twice, but only\nreserved space for one. That meant the second write went past the end of\nthe allocated buffer.\n\n\tPR libstdc++/92853\n\t* src/c++17/fs_path.cc (filesystem::path::operator+=(const path&)):\n\tDo not process a trailing directory separator twice.\n\t* testsuite/27_io/filesystem/path/concat/92853.cc: New test.\n\t* testsuite/27_io/filesystem/path/concat/path.cc: Test more cases.\n\nFrom-SVN: r279110", "tree": {"sha": "d7e6eb53a9cc6a33f719349821e7e1caeed54a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7e6eb53a9cc6a33f719349821e7e1caeed54a8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/023a3fb4915841a3eb469b71cf642b5763163e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023a3fb4915841a3eb469b71cf642b5763163e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023a3fb4915841a3eb469b71cf642b5763163e14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023a3fb4915841a3eb469b71cf642b5763163e14/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a65d584dc1aaaad77af0a8e2ab36a29729d6e056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65d584dc1aaaad77af0a8e2ab36a29729d6e056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a65d584dc1aaaad77af0a8e2ab36a29729d6e056"}], "stats": {"total": 100, "additions": 90, "deletions": 10}, "files": [{"sha": "32d539806ad67ed0c10a15a6b13c2d43ba2a583d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=023a3fb4915841a3eb469b71cf642b5763163e14", "patch": "@@ -1,3 +1,11 @@\n+2019-12-09  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/92853\n+\t* src/c++17/fs_path.cc (filesystem::path::operator+=(const path&)):\n+\tDo not process a trailing directory separator twice.\n+\t* testsuite/27_io/filesystem/path/concat/92853.cc: New test.\n+\t* testsuite/27_io/filesystem/path/concat/path.cc: Test more cases.\n+\n 2019-12-09  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* testsuite/23_containers/array/tuple_interface/get_debug_neg.cc:"}, {"sha": "3aefef271fafaaddf27efb63400506976ec2881b", "filename": "libstdc++-v3/src/c++17/fs_path.cc", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc?ref=023a3fb4915841a3eb469b71cf642b5763163e14", "patch": "@@ -975,16 +975,7 @@ path::operator+=(const path& p)\n \t}\n \n       if (it != last && it->_M_type() == _Type::_Root_dir)\n-\t{\n-\t  ++it;\n-\t  if (it == last)\n-\t    {\n-\t      // This root-dir becomes a trailing slash\n-\t      auto pos = _M_pathname.length() + p._M_pathname.length();\n-\t      ::new(output++) _Cmpt({}, _Type::_Filename, pos);\n-\t      ++_M_cmpts._M_impl->_M_size;\n-\t    }\n-\t}\n+\t++it;\n \n       while (it != last)\n \t{"}, {"sha": "62bde05c3ad71e4634eb2f80162e520a1d6b1e60", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/concat/92853.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconcat%2F92853.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconcat%2F92853.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconcat%2F92853.cc?ref=023a3fb4915841a3eb469b71cf642b5763163e14", "patch": "@@ -0,0 +1,61 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+#include <filesystem>\n+#include <testsuite_fs.h>\n+\n+void\n+test01()\n+{\n+  // PR libstdc++/92853\n+  using std::filesystem::path;\n+  path p1{ \".\" }, p2{ \"/\" };\n+  p1 += p2;\t// corrupts heap\n+  path p3{ p1 };\t// CRASH!\n+  __gnu_test::compare_paths( p3, \"./\" );\n+}\n+\n+void\n+test02()\n+{\n+  using std::filesystem::path;\n+  path p1{ \".\" }, p2{ \"////\" };\n+  p1 += p2;\n+  path p3{ p1 };\n+  __gnu_test::compare_paths( p3, \".////\" );\n+}\n+\n+void\n+test03()\n+{\n+  using std::filesystem::path;\n+  path p1{ \"./\" }, p2{ \"/\" };\n+  p1 += p2;\n+  path p3{ p1 };\n+  __gnu_test::compare_paths( p3, \".//\" );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+}"}, {"sha": "16e668c01633f5221eebb2bc230bfe9ea744efaf", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/concat/path.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconcat%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/023a3fb4915841a3eb469b71cf642b5763163e14/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconcat%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconcat%2Fpath.cc?ref=023a3fb4915841a3eb469b71cf642b5763163e14", "patch": "@@ -55,6 +55,8 @@ test02()\n     path x(\"//blah/di/blah\");\n     p += x;\n     VERIFY( p.native() == prior_native + x.native() );\n+    path copy(p);\n+    compare_paths( copy, p );\n   }\n }\n \n@@ -66,10 +68,28 @@ test03()\n   compare_paths(p, \"a//b\");\n }\n \n+void\n+test04()\n+{\n+  // Concat every test path onto every test path.\n+  for (path p : __gnu_test::test_paths)\n+  {\n+    for (path x : __gnu_test::test_paths)\n+    {\n+      auto prior_native = p.native();\n+      p += x;\n+      VERIFY( p.native() == prior_native + x.native() );\n+      path copy(p); // PR libstdc++/98523\n+      compare_paths( copy, p );\n+    }\n+  }\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}]}