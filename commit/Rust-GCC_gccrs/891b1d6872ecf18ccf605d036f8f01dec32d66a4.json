{"sha": "891b1d6872ecf18ccf605d036f8f01dec32d66a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxYjFkNjg3MmVjZjE4Y2NmNjA1ZDAzNmY4ZjAxZGVjMzJkNjZhNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-08-16T15:56:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-08-16T15:56:21Z"}, "message": "Fix bootstrap with --enable-fully-dynamic-string\n\n\tPR libstdc++/86447\n\t* src/c++11/cow-stdexcept.cc [_GLIBCXX_FULLY_DYNAMIC_STRING]\n\t(logic_error::logic_error(logic_error&&))\n\t(logic_error::operator=(logic_error&&))\n\t(runtime_error::runtime_error(runtime_error&&))\n\t(runtime_error::operator=(runtime_error&&)): Copy strings instead of\n\tmoving, to avoid allocating empty reps for moved-from strings.\n\nFrom-SVN: r263590", "tree": {"sha": "2a4b0d2ec1f3e6a73c8b43e0718ce39be3d4862b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a4b0d2ec1f3e6a73c8b43e0718ce39be3d4862b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/891b1d6872ecf18ccf605d036f8f01dec32d66a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/891b1d6872ecf18ccf605d036f8f01dec32d66a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/891b1d6872ecf18ccf605d036f8f01dec32d66a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/891b1d6872ecf18ccf605d036f8f01dec32d66a4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f6677f418564e634e3b77b0fc385891d1fdf1da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6677f418564e634e3b77b0fc385891d1fdf1da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6677f418564e634e3b77b0fc385891d1fdf1da"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "6c277ff728a66fc2a7201128addfd0dc0e4b6e98", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891b1d6872ecf18ccf605d036f8f01dec32d66a4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891b1d6872ecf18ccf605d036f8f01dec32d66a4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=891b1d6872ecf18ccf605d036f8f01dec32d66a4", "patch": "@@ -1,3 +1,13 @@\n+2018-08-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/86447\n+\t* src/c++11/cow-stdexcept.cc [_GLIBCXX_FULLY_DYNAMIC_STRING]\n+\t(logic_error::logic_error(logic_error&&))\n+\t(logic_error::operator=(logic_error&&))\n+\t(runtime_error::runtime_error(runtime_error&&))\n+\t(runtime_error::operator=(runtime_error&&)): Copy strings instead of\n+\tmoving, to avoid allocating empty reps for moved-from strings.\n+\n 2018-08-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/regex: Remove begin/end macros for namespace."}, {"sha": "d271be529a6046debb8ea7e8b5c9524efd6968ca", "filename": "libstdc++-v3/src/c++11/cow-stdexcept.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891b1d6872ecf18ccf605d036f8f01dec32d66a4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891b1d6872ecf18ccf605d036f8f01dec32d66a4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc?ref=891b1d6872ecf18ccf605d036f8f01dec32d66a4", "patch": "@@ -57,17 +57,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // These operations are noexcept even though copying a COW string is not,\n   // but we know that the string member in an exception has not been \"leaked\"\n   // so copying is a simple reference count increment.\n+  // For the fully dynamic string moves are not noexcept (due to needing to\n+  // allocate an empty string) so we just define the moves as copies here.\n \n   logic_error::logic_error(const logic_error& e) noexcept\n   : exception(e), _M_msg(e._M_msg) { }\n \n   logic_error& logic_error::operator=(const logic_error& e) noexcept\n   { _M_msg = e._M_msg; return *this; }\n \n+#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0\n   logic_error::logic_error(logic_error&& e) noexcept = default;\n \n   logic_error&\n   logic_error::operator=(logic_error&& e) noexcept = default;\n+#else\n+  logic_error::logic_error(logic_error&& e) noexcept\n+  : exception(e), _M_msg(e._M_msg) { }\n+\n+  logic_error&\n+  logic_error::operator=(logic_error&& e) noexcept\n+  { _M_msg = e._M_msg; return *this; }\n+#endif\n \n   runtime_error::runtime_error(const runtime_error& e) noexcept\n   : exception(e), _M_msg(e._M_msg) { }\n@@ -76,10 +87,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   runtime_error::operator=(const runtime_error& e) noexcept\n   { _M_msg = e._M_msg; return *this; }\n \n+#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0\n   runtime_error::runtime_error(runtime_error&& e) noexcept = default;\n \n   runtime_error&\n   runtime_error::operator=(runtime_error&& e) noexcept = default;\n+#else\n+  runtime_error::runtime_error(runtime_error&& e) noexcept\n+  : exception(e), _M_msg(e._M_msg) { }\n+\n+  runtime_error&\n+  runtime_error::operator=(runtime_error&& e) noexcept\n+  { _M_msg = e._M_msg; return *this; }\n+#endif\n \n   // New C++11 constructors:\n "}]}