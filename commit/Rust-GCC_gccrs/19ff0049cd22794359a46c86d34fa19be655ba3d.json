{"sha": "19ff0049cd22794359a46c86d34fa19be655ba3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlmZjAwNDljZDIyNzk0MzU5YTQ2Yzg2ZDM0ZmExOWJlNjU1YmEzZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-01-11T17:25:40Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-01-11T17:25:40Z"}, "message": "Offer suggestions for unrecognized sanitizer options (PR driver/78877)\n\ngcc/ChangeLog:\n\tPR driver/78877\n\t* opts.c: Include \"spellcheck.h\"\n\t(struct string_fragment): New struct.\n\t(struct edit_distance_traits<const string_fragment &>): New\n\tstruct.\n\t(get_closest_sanitizer_option): New function.\n\t(parse_sanitizer_options): Offer suggestions for unrecognized arguments.\n\ngcc/testsuite/ChangeLog:\n\tPR driver/78877\n\t* gcc.dg/spellcheck-options-14.c: New test case.\n\t* gcc.dg/spellcheck-options-15.c: New test case.\n\t* gcc.dg/spellcheck-options-16.c: New test case.\n\t* gcc.dg/spellcheck-options-17.c: New test case.\n\nFrom-SVN: r244325", "tree": {"sha": "f7ccc235482effbed0bd9a6cbea869c2ac6b3d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7ccc235482effbed0bd9a6cbea869c2ac6b3d44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19ff0049cd22794359a46c86d34fa19be655ba3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ff0049cd22794359a46c86d34fa19be655ba3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ff0049cd22794359a46c86d34fa19be655ba3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ff0049cd22794359a46c86d34fa19be655ba3d/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d29bd378ab8da3e646e3735c5ba140ec07f3c9fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29bd378ab8da3e646e3735c5ba140ec07f3c9fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29bd378ab8da3e646e3735c5ba140ec07f3c9fa"}], "stats": {"total": 126, "additions": 124, "deletions": 2}, "files": [{"sha": "db74169e9df418a102dfc9031fc763495e32a173", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -1,3 +1,13 @@\n+2017-01-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR driver/78877\n+\t* opts.c: Include \"spellcheck.h\"\n+\t(struct string_fragment): New struct.\n+\t(struct edit_distance_traits<const string_fragment &>): New\n+\tstruct.\n+\t(get_closest_sanitizer_option): New function.\n+\t(parse_sanitizer_options): Offer suggestions for unrecognized arguments.\n+\n 2017-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (DWARF_COMPILE_UNIT_HEADER_SIZE): For DWARF5 decrease"}, {"sha": "5f573a16ff156a81e6b850b93d807aa59c280970", "filename": "gcc/opts.c", "status": "modified", "additions": 79, "deletions": 2, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts-diagnostic.h\"\n #include \"insn-attr-common.h\"\n #include \"common/common-target.h\"\n+#include \"spellcheck.h\"\n \n static void set_Wstrict_aliasing (struct gcc_options *opts, int onoff);\n \n@@ -1511,6 +1512,65 @@ const struct sanitizer_opts_s sanitizer_opts[] =\n   { NULL, 0U, 0UL, false }\n };\n \n+/* A struct for describing a run of chars within a string.  */\n+\n+struct string_fragment\n+{\n+  string_fragment (const char *start, size_t len)\n+  : m_start (start), m_len (len) {}\n+\n+  const char *m_start;\n+  size_t m_len;\n+};\n+\n+/* Specialization of edit_distance_traits for string_fragment,\n+   for use by get_closest_sanitizer_option.  */\n+\n+template <>\n+struct edit_distance_traits<const string_fragment &>\n+{\n+  static size_t get_length (const string_fragment &fragment)\n+  {\n+    return fragment.m_len;\n+  }\n+\n+  static const char *get_string (const string_fragment &fragment)\n+  {\n+    return fragment.m_start;\n+  }\n+};\n+\n+/* Given ARG, an unrecognized sanitizer option, return the best\n+   matching sanitizer option, or NULL if there isn't one.\n+   CODE is OPT_fsanitize_ or OPT_fsanitize_recover_.\n+   VALUE is non-zero for the regular form of the option, zero\n+   for the \"no-\" form (e.g. \"-fno-sanitize-recover=\").  */\n+\n+static const char *\n+get_closest_sanitizer_option (const string_fragment &arg,\n+\t\t\t      enum opt_code code, int value)\n+{\n+  best_match <const string_fragment &, const char*> bm (arg);\n+  for (int i = 0; sanitizer_opts[i].name != NULL; ++i)\n+    {\n+      /* -fsanitize=all is not valid, so don't offer it.  */\n+      if (sanitizer_opts[i].flag == ~0U\n+\t  && code == OPT_fsanitize_\n+\t  && value)\n+\tcontinue;\n+\n+      /* For -fsanitize-recover= (and not -fno-sanitize-recover=),\n+\t don't offer the non-recoverable options.  */\n+      if (!sanitizer_opts[i].can_recover\n+\t  && code == OPT_fsanitize_recover_\n+\t  && value)\n+\tcontinue;\n+\n+      bm.consider (sanitizer_opts[i].name);\n+    }\n+  return bm.get_best_meaningful_candidate ();\n+}\n+\n /* Parse comma separated sanitizer suboptions from P for option SCODE,\n    adjust previous FLAGS and return new ones.  If COMPLAIN is false,\n    don't issue diagnostics.  */\n@@ -1572,8 +1632,25 @@ parse_sanitizer_options (const char *p, location_t loc, int scode,\n \t  }\n \n       if (! found && complain)\n-\terror_at (loc, \"unrecognized argument to -fsanitize%s= option: %q.*s\",\n-\t\t  code == OPT_fsanitize_ ? \"\" : \"-recover\", (int) len, p);\n+\t{\n+\t  const char *hint\n+\t    = get_closest_sanitizer_option (string_fragment (p, len),\n+\t\t\t\t\t    code, value);\n+\n+\t  if (hint)\n+\t    error_at (loc,\n+\t\t      \"unrecognized argument to -f%ssanitize%s= option: %q.*s;\"\n+\t\t      \" did you mean %qs\",\n+\t\t      value ? \"\" : \"no-\",\n+\t\t      code == OPT_fsanitize_ ? \"\" : \"-recover\",\n+\t\t      (int) len, p, hint);\n+\t  else\n+\t    error_at (loc,\n+\t\t      \"unrecognized argument to -f%ssanitize%s= option: %q.*s\",\n+\t\t      value ? \"\" : \"no-\",\n+\t\t      code == OPT_fsanitize_ ? \"\" : \"-recover\",\n+\t\t      (int) len, p);\n+\t}\n \n       if (comma == NULL)\n \tbreak;"}, {"sha": "a4987caf76cd0631f0bfee8b3f9ad74db0baa4ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -1,3 +1,11 @@\n+2017-01-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR driver/78877\n+\t* gcc.dg/spellcheck-options-14.c: New test case.\n+\t* gcc.dg/spellcheck-options-15.c: New test case.\n+\t* gcc.dg/spellcheck-options-16.c: New test case.\n+\t* gcc.dg/spellcheck-options-17.c: New test case.\n+\n 2017-01-11  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-ssa/flatten-3.c: Add -fno-ipa-icf to dg-options."}, {"sha": "5582460762edd84bc2116eabfa7cd1ff621c8aee", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-14.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-14.c?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -0,0 +1,8 @@\n+/* Verify that we offer suggestions for misspelled sanitizer options\n+   (PR driver/78877).  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=addres,nul,this-is-not-a-sanitizer-option\" } */\n+/* { dg-error \"unrecognized argument to -fsanitize= option: .addres.; did you mean .address.\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"unrecognized argument to -fsanitize= option: .nul.; did you mean .null.\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"unrecognized argument to -fsanitize= option: .this-is-not-a-sanitizer-option.\" \"\" { target *-*-* } 0 } */"}, {"sha": "089e698b601f15f08af8b7e36d238938cae011de", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-15.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-15.c?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -0,0 +1,7 @@\n+/* Verify that we don't offer -fsanitize=all as a suggestion for misspelled\n+   sanitizer options (PR driver/78877).  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=al\" } */\n+/* { dg-bogus \"did you mean\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"unrecognized argument to -fsanitize= option: .al.\" \"\" { target *-*-* } 0 } */"}, {"sha": "701957650f1a7d2ea934f660ad1b46d992fc8ac6", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-16.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-16.c?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -0,0 +1,9 @@\n+/* Verify that we don't offer non-recoverable options as suggestions\n+   for misspelled -fsanitize-recover= arguments (PR driver/78877).  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize-recover=threed\" } */\n+/* Ensure we don't offer non-recoverable \"-fsanitize-recover=thread\"\n+   as a suggestion.  */\n+/* { dg-bogus \"did you mean\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"unrecognized argument to -fsanitize-recover= option: .threed.\" \"\" { target *-*-* } 0 } */"}, {"sha": "1012dca9241195ae7c327763788e3a169a56dce3", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-17.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ff0049cd22794359a46c86d34fa19be655ba3d/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-17.c?ref=19ff0049cd22794359a46c86d34fa19be655ba3d", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-sanitize=threed\" } */\n+/* { dg-error \"unrecognized argument to -fno-sanitize= option: .threed.; did you mean .thread.\" \"\" { target *-*-* } 0 } */"}]}