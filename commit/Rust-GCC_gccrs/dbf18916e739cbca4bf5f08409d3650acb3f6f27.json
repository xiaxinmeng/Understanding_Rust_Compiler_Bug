{"sha": "dbf18916e739cbca4bf5f08409d3650acb3f6f27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJmMTg5MTZlNzM5Y2JjYTRiZjVmMDg0MDlkMzY1MGFjYjNmNmYyNw==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-03-17T08:21:44Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-03-17T08:21:44Z"}, "message": "Update libg2c to netlib f2c-19990317\n\nFrom-SVN: r25818", "tree": {"sha": "9269dd7802645654339d53efad0c4d3a59fca911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9269dd7802645654339d53efad0c4d3a59fca911"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbf18916e739cbca4bf5f08409d3650acb3f6f27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf18916e739cbca4bf5f08409d3650acb3f6f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf18916e739cbca4bf5f08409d3650acb3f6f27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf18916e739cbca4bf5f08409d3650acb3f6f27/comments", "author": null, "committer": null, "parents": [{"sha": "331fff42f7c4c46e29313047fad63b8acf641adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331fff42f7c4c46e29313047fad63b8acf641adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331fff42f7c4c46e29313047fad63b8acf641adf"}], "stats": {"total": 192, "additions": 168, "deletions": 24}, "files": [{"sha": "d58c540fee0ca43a40ef728b08c9bd3b8d4320b3", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -1,3 +1,12 @@\n+1999-03-17  Craig Burley  <craig@jcb-sc.com>\n+\n+\tUpdate to Netlib version of 1999-03-17:\n+\t* libF77/F77_aloc.c, libF77/README.netlib, libF77/dtime_.c,\n+\tlibF77/etime_.c, libF77/signal1.h0, libI77/Version.c,\n+\tlibI77/dfe.c, libI77/endfile.c, libI77/lread.c,\n+\tlibI77/sfe.c, readme.netlib, changes.netlib:\n+\tSee changes.netlib for info.\n+\n 1999-03-06  Craig Burley  <craig@jcb-sc.com>\n \n \tMon Dec 21 23:03:54 1998 Hans-Peter Nilsson <hp@axis.se>:"}, {"sha": "048ea942b99bbca5bd2646cd44350283d23e9a2c", "filename": "libf2c/changes.netlib", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2Fchanges.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2Fchanges.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fchanges.netlib?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -2927,3 +2927,56 @@ Thu Jun 18 01:22:52 EDT 1998\n either a decimal point or an exponent field) are treated as errors\n when they appear as list input for integer data.  Compile lread.c with\n -DALLOW_FLOAT_IN_INTEGER_LIST_INPUT to restore the old behavior.\n+\n+Mon Aug 31 10:38:54 EDT 1998\n+  formatdata.c: if possible, and assuming doubles must be aligned on\n+double boundaries, use existing holes in DATA for common blocks to\n+force alignment of the block.  For example,\n+\tblock data\n+\tcommon /abc/ a, b\n+\tdouble precision a\n+\tinteger b(2)\n+\tdata b(2)/1/\n+\tend\n+used to generate\n+\tstruct {\n+\t    integer fill_1[3];\n+\t    integer e_2;\n+\t    doublereal e_3;\n+\t    } abc_ = { {0}, 1, 0. };\n+and now generates\n+\tstruct {\n+\t    doublereal fill_1[1];\n+\t    integer fill_2[1];\n+\t    integer e_3;\n+\t    } abc_ = { {0}, {0}, 1 };\n+In the old generated C, e_3 was added to force alignment; in the new C,\n+fill_1 does this job.\n+\n+Mon Sep  7 19:48:51 EDT 1998\n+  libi77: move e_wdfe from sfe.c to dfe.c, where it was originally.\n+Why did it ever move to sfe.c?\n+\n+Tue Sep  8 10:22:50 EDT 1998\n+  Treat dreal as a synonym for dble unless -cd is specified on the\n+command line.\n+\n+Sun Sep 13 22:23:41 EDT 1998\n+  format.c: fix bug in writing prototypes under f2c -A ... *.P:\n+under some circumstances involving external functions with no known\n+type, a null pointer was passed to printf.\n+\n+Tue Oct 20 23:25:54 EDT 1998\n+  Comments added to libf2c/README and libF77/README, pointing out\n+the need to modify signal1.h on some systems.\n+\n+Wed Feb 10 22:59:52 EST 1999\n+  defs.h lex.c: permit long names (up to at least roughly\n+MAX_SHARPLINE_LEN = 1000 characters long) in #line lines (which only\n+matters under -g).\n+  fc: add -U option; recognize .so files.\n+\n+Sat Feb 13 10:18:27 EST 1999\n+ libf2c: endfile.c, lread.c, signal1.h0: minor tweaks to make some\n+(C++) compilers happier; f77_aloc.c: make exit_() visible to C++\n+compilers.  Version strings not changed."}, {"sha": "e329a1bfb3415847d8fe3e60cfd5e06f775f9b25", "filename": "libf2c/libF77/F77_aloc.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2FF77_aloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2FF77_aloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FF77_aloc.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -14,7 +14,13 @@ extern void G77_exit_0 ();\n F77_aloc(Len, whence) integer Len; char *whence;\n #else\n #include <stdlib.h>\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n extern void G77_exit_0 (integer*);\n+#ifdef __cplusplus\n+\t}\n+#endif\n \n  char *\n F77_aloc(integer Len, char *whence)"}, {"sha": "5e532ee0990258b92cbe3a5fcd3e2a0d13236213", "filename": "libf2c/libF77/README.netlib", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2FREADME.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2FREADME.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FREADME.netlib?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -106,3 +106,7 @@ one-line shell script\n or (on some systems)\n \n \texec /usr/bin/ar lts $1 >/dev/null\n+\n+If your compiler complains about the signal calls in main.c, s_paus.c,\n+and signal_.c, you may need to adjust signal1.h suitably.  See the\n+comments in signal1.h."}, {"sha": "09755fc586fe7f991fd8f97d89a0d752f5bfc9e2", "filename": "libf2c/libF77/dtime_.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2Fdtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2Fdtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fdtime_.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -1,4 +1,9 @@\n #include \"time.h\"\n+\n+#ifdef MSDOS\n+#define USE_CLOCK\n+#endif\n+\n #ifndef USE_CLOCK\n #define _INCLUDE_POSIX_SOURCE\t/* for HP-UX */\n #define _INCLUDE_XOPEN_SOURCE\t/* for HP-UX */"}, {"sha": "043bf6996f3398b80c0a547e114e46713d5f3429", "filename": "libf2c/libF77/etime_.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2Fetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2Fetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fetime_.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -1,4 +1,9 @@\n #include \"time.h\"\n+\n+#ifdef MSDOS\n+#define USE_CLOCK\n+#endif\n+\n #ifndef USE_CLOCK\n #define _INCLUDE_POSIX_SOURCE\t/* for HP-UX */\n #define _INCLUDE_XOPEN_SOURCE\t/* for HP-UX */"}, {"sha": "a383774b82d2f53661d1119f093aec1e2409b401", "filename": "libf2c/libF77/signal1.h0", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2Fsignal1.h0", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibF77%2Fsignal1.h0", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fsignal1.h0?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -3,6 +3,8 @@\n /* compiler-dependent.   The #define below assumes signal.h declares */\n /* type SIG_PF for the signal function's second argument. */\n \n+/* For some C++ compilers, \"#define Sigarg_t ...\" may be appropriate. */\n+\n #include <signal.h>\n \n #ifndef Sigret_t\n@@ -12,12 +14,8 @@\n #ifdef KR_headers\n #define Sigarg_t\n #else\n-#ifdef __cplusplus\n-#define Sigarg_t ...\n-#else\n #define Sigarg_t int\n #endif\n-#endif\n #endif /*Sigarg_t*/\n \n #ifdef USE_SIG_PF\t/* compile with -DUSE_SIG_PF under IRIX */"}, {"sha": "360b966a96fbdcc6af2f511474f79c8f1d220d2a", "filename": "libf2c/libI77/Version.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2FVersion.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19980617\\n\";\n+static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19980907\\n\";\n \n /*\n */\n@@ -293,6 +293,8 @@ wrtfmt.c:\n \t\t floating-point numbers (containing either a decimal point\n \t\t or an exponent field) as errors when they appear as list\n \t\t input for integer data. */\n+/* 7 Sept. 1998: move e_wdfe from sfe.c to dfe.c, where it was originally.\n+\t\t Why did it ever move to sfe.c? */\n \n \n "}, {"sha": "f639ab51ce7c84bbf116584267a997150734d5ed", "filename": "libf2c/libI77/dfe.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Fdfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Fdfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdfe.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -138,3 +138,9 @@ integer e_rdfe(Void)\n \ten_fio();\n \treturn(0);\n }\n+\n+integer e_wdfe(Void)\n+{\n+\tf__init = 1;\n+\treturn en_fio();\n+}"}, {"sha": "0e4ac0318e9f76173607fb9aa9037b8a9f37bc6f", "filename": "libf2c/libI77/endfile.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Fendfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Fendfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fendfile.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -87,7 +87,9 @@ t_runc(alist *a)\n \t\t}\n \tif (!(bf = fopen(b->ufnm, f__r_mode[0]))\n \t || !(tf = tmpfile())) {\n+#ifdef NON_UNIX_STDIO\n  bad:\n+#endif\n \t\trc = 1;\n \t\tgoto done;\n \t\t}"}, {"sha": "3d4005962246c8dcbdf3003819e12c2a32381151", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -24,14 +24,17 @@ int (*f__lioproc)(), (*l_getc)(), (*l_ungetc)();\n #undef min\n #undef max\n #include <stdlib.h>\n-int (*f__lioproc)(ftnint*, char*, ftnlen, ftnint), (*l_getc)(void),\n-\t(*l_ungetc)(int,FILE*);\n #endif\n \n #include \"fmt.h\"\n #include \"lio.h\"\n #include \"fp.h\"\n \n+#ifndef KR_headers\n+int (*f__lioproc)(ftnint*, char*, ftnlen, ftnint), (*l_getc)(void),\n+\t(*l_ungetc)(int,FILE*);\n+#endif\n+\n int l_eof;\n \n #define isblnk(x) (f__ltab[x+1]&B)"}, {"sha": "f7c3b83b734f3069da894156105b5b7be9eee200", "filename": "libf2c/libI77/sfe.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Fsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2FlibI77%2Fsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fsfe.c?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -32,9 +32,3 @@ integer e_wsfe(Void)\n \tf__fmtbuf=NULL;\n \treturn n;\n }\n-\n-integer e_wdfe(Void)\n-{\n-\tf__init = 1;\n-\treturn en_fio();\n-}"}, {"sha": "f87aae431d2664a6d324a9c3a3ff319d1f4084df", "filename": "libf2c/readme.netlib", "status": "modified", "additions": 68, "deletions": 11, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2Freadme.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf18916e739cbca4bf5f08409d3650acb3f6f27/libf2c%2Freadme.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Freadme.netlib?ref=dbf18916e739cbca4bf5f08409d3650acb3f6f27", "patch": "@@ -619,47 +619,104 @@ either a decimal point or an exponent field) are treated as errors\n when they appear as list input for integer data.  Compile lread.c with\n -DALLOW_FLOAT_IN_INTEGER_LIST_INPUT to restore the old behavior.\n \n+Mon Aug 31 10:38:54 EDT 1998\n+  formatdata.c: if possible, and assuming doubles must be aligned on\n+double boundaries, use existing holes in DATA for common blocks to\n+force alignment of the block.  For example,\n+\tblock data\n+\tcommon /abc/ a, b\n+\tdouble precision a\n+\tinteger b(2)\n+\tdata b(2)/1/\n+\tend\n+used to generate\n+\tstruct {\n+\t    integer fill_1[3];\n+\t    integer e_2;\n+\t    doublereal e_3;\n+\t    } abc_ = { {0}, 1, 0. };\n+and now generates\n+\tstruct {\n+\t    doublereal fill_1[1];\n+\t    integer fill_2[1];\n+\t    integer e_3;\n+\t    } abc_ = { {0}, {0}, 1 };\n+In the old generated C, e_3 was added to force alignment; in the new C,\n+fill_1 does this job.\n+\n+Mon Sep  7 19:48:51 EDT 1998\n+  libi77: move e_wdfe from sfe.c to dfe.c, where it was originally.\n+Why did it ever move to sfe.c?\n+\n+Tue Sep  8 10:22:50 EDT 1998\n+  Treat dreal as a synonym for dble unless -cd is specified on the\n+command line.\n+\n+Sun Sep 13 22:23:41 EDT 1998\n+  format.c: fix bug in writing prototypes under f2c -A ... *.P:\n+under some circumstances involving external functions with no known\n+type, a null pointer was passed to printf.\n+\n+Tue Oct 20 23:25:54 EDT 1998\n+  Comments added to libf2c/README and libF77/README, pointing out\n+the need to modify signal1.h on some systems.\n+\n+Thu Nov 12 15:34:09 EST 1998\n+  libf77, libf2c.zip: minor tweaks to [de]time_.c and the makefiles,\n+so makefile.sy, makefile.vc, and makefile.wat deal with [de]time_.c.\n+\n+Wed Feb 10 22:59:52 EST 1999\n+  defs.h lex.c: permit long names (up to at least roughly\n+MAX_SHARPLINE_LEN = 1000 characters long) in #line lines (which only\n+matters under -g).\n+  fc: add -U option; recognize .so files.\n+\n+Sat Feb 13 10:18:27 EST 1999\n+ libf2c: endfile.c, lread.c, signal1.h0: minor tweaks to make some\n+(C++) compilers happier; f77_aloc.c: make exit_() visible to C++\n+compilers.  Version strings not changed.\n+\n Current timestamps of files in \"all from f2c/src\", sorted by time,\n appear below (mm/dd/year hh:mm:ss).  To bring your source up to date,\n obtain source files with a timestamp later than the time shown in your\n version.c.  Note that the time shown in the current version.c is the\n timestamp of the source module that immediately follows version.c below:\n \n- 5/16/1998  19:07:45  xsum0.out\n- 5/16/1998  17:17:01  f2c.1\n- 5/16/1998  17:16:53  f2c.1t\n- 5/16/1998  16:56:15  version.c\n+ 2/10/1999  22:07:05  version.c\n+ 2/10/1999  22:06:59  lex.c\n+ 2/10/1999  17:43:01  defs.h\n+ 9/13/1998  22:23:35  xsum0.out\n+ 9/13/1998  22:18:21  format.c\n+ 9/08/1998  10:16:51  f2c.1\n+ 9/08/1998  10:16:48  f2c.1t\n+ 9/08/1998  10:14:53  intr.c\n+ 8/31/1998  10:13:22  formatdata.c\n  5/16/1998  16:55:49  output.c\n  4/03/1998  17:15:05  gram.c\n  4/03/1998  17:14:59  gram.dcl\n  3/09/1998   0:30:23  putpcc.c\n  2/25/1998   8:18:04  makefile\n-12/04/1997  17:44:11  format.c\n 12/04/1997  17:44:11  niceprintf.c\n-12/04/1997  17:14:05  lex.c\n  8/05/1997  10:31:26  malloc.c\n  7/24/1997  17:10:55  README\n  7/24/1997  16:06:19  Notice\n  7/21/1997  12:58:44  proc.c\n  2/11/1997  23:39:14  vax.c\n 12/04/1996  13:07:53  gram.exec\n-10/01/1996  14:36:18  defs.h\n 10/01/1996  14:36:18  init.c\n 10/01/1996  14:36:17  data.c\n  9/17/1996  17:29:44  expr.c\n  9/12/1996  12:12:46  equiv.c\n- 8/27/1996   8:30:32  intr.c\n  8/26/1996   9:41:13  sysdep.c\n  7/09/1996  10:40:45  names.c\n- 7/04/1996   9:58:31  formatdata.c\n  7/04/1996   9:55:45  sysdep.h\n  7/04/1996   9:55:43  put.c\n  7/04/1996   9:55:41  pread.c\n- 7/04/1996   9:55:40  parse_args.c\n  7/04/1996   9:55:40  p1output.c\n+ 7/04/1996   9:55:40  parse_args.c\n  7/04/1996   9:55:37  misc.c\n- 7/04/1996   9:55:36  memset.c\n  7/04/1996   9:55:36  mem.c\n+ 7/04/1996   9:55:36  memset.c\n  7/04/1996   9:55:35  main.c\n  7/04/1996   9:55:33  io.c\n  7/04/1996   9:55:30  exec.c"}]}