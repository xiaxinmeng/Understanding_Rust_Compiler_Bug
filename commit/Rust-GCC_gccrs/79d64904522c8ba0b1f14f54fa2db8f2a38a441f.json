{"sha": "79d64904522c8ba0b1f14f54fa2db8f2a38a441f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkNjQ5MDQ1MjJjOGJhMGIxZjE0ZjU0ZmEyZGI4ZjJhMzhhNDQxZg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-03-27T10:29:04Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-03-27T10:29:04Z"}, "message": "re PR target/65495 (ICE: chkp_make_addressed_object_bounds: Unexpected tree code const_decl with -fcheck-pointer-bounds -mmpx and fortran)\n\n\tPR target/65495\n\t* c-family/c.opt (fcheck-pointer-bounds): List supported languages.\n\t(fchkp-check-incomplete-type): Add LTO.\n\t(fchkp-zero-input-bounds-for-main): Likewise.\n\t(fchkp-first-field-has-own-bounds): Likewise.\n\t(fchkp-narrow-bounds): Likewise.\n\t(fchkp-narrow-to-innermost-array): Likewise.\n\t(fchkp-use-static-bounds): Likewise.\n\t(fchkp-use-static-const-bounds): Likewise.\n\t(fchkp-treat-zero-dynamic-size-as-infinite): Likewise.\n\nFrom-SVN: r221725", "tree": {"sha": "24318669982ad6a62b6d7be684395ab132fc8786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24318669982ad6a62b6d7be684395ab132fc8786"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d64904522c8ba0b1f14f54fa2db8f2a38a441f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d64904522c8ba0b1f14f54fa2db8f2a38a441f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d64904522c8ba0b1f14f54fa2db8f2a38a441f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d64904522c8ba0b1f14f54fa2db8f2a38a441f/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d1ff6f0a4223924d05d107b50726be1925719f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1ff6f0a4223924d05d107b50726be1925719f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d1ff6f0a4223924d05d107b50726be1925719f4"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "1f6644d5863599b2408794ffe6bf9dbe8ab3ff99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d64904522c8ba0b1f14f54fa2db8f2a38a441f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d64904522c8ba0b1f14f54fa2db8f2a38a441f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79d64904522c8ba0b1f14f54fa2db8f2a38a441f", "patch": "@@ -1,3 +1,16 @@\n+2015-03-27  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/65495\n+\t* c-family/c.opt (fcheck-pointer-bounds): List supported languages.\n+\t(fchkp-check-incomplete-type): Add LTO.\n+\t(fchkp-zero-input-bounds-for-main): Likewise.\n+\t(fchkp-first-field-has-own-bounds): Likewise.\n+\t(fchkp-narrow-bounds): Likewise.\n+\t(fchkp-narrow-to-innermost-array): Likewise.\n+\t(fchkp-use-static-bounds): Likewise.\n+\t(fchkp-use-static-const-bounds): Likewise.\n+\t(fchkp-treat-zero-dynamic-size-as-infinite): Likewise.\n+\n 2015-03-27  Marek Polacek  <polacek@redhat.com>\n \n \t* gimple-iterator.h (gsi_prev_nondebug): Fix typo."}, {"sha": "983f4a8b94351ea7076023f2effe27ead8212e67", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d64904522c8ba0b1f14f54fa2db8f2a38a441f/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d64904522c8ba0b1f14f54fa2db8f2a38a441f/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=79d64904522c8ba0b1f14f54fa2db8f2a38a441f", "patch": "@@ -964,32 +964,32 @@ C ObjC C++ ObjC++\n Where shorter, use canonicalized paths to systems headers.\n \n fcheck-pointer-bounds\n-Common Report Var(flag_check_pointer_bounds)\n+C ObjC C++ ObjC++ LTO Report Var(flag_check_pointer_bounds)\n Add Pointer Bounds Checker instrumentation.  fchkp-* flags are used to\n control instrumentation.  Currently available for C, C++ and ObjC.\n \n fchkp-check-incomplete-type\n-C ObjC C++ ObjC++ Report Var(flag_chkp_incomplete_type) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_incomplete_type) Init(1)\n Generate pointer bounds checks for variables with incomplete type\n \n fchkp-zero-input-bounds-for-main\n-C ObjC C++ ObjC++ Report Var(flag_chkp_zero_input_bounds_for_main) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_input_bounds_for_main) Init(0)\n Use zero bounds for all incoming arguments in 'main' function.  It helps when\n instrumented binaries are used with legacy libs.\n \n fchkp-first-field-has-own-bounds\n-C ObjC C++ ObjC++ RejectNegative Report Var(flag_chkp_first_field_has_own_bounds)\n+C ObjC C++ ObjC++ LTO RejectNegative Report Var(flag_chkp_first_field_has_own_bounds)\n Forces Pointer Bounds Checker to use narrowed bounds for address of the first\n field in the structure.  By default pointer to the first field has the same\n bounds as pointer to the whole structure.\n \n fchkp-narrow-bounds\n-C ObjC C++ ObjC++ Report Var(flag_chkp_narrow_bounds) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_narrow_bounds) Init(1)\n Control how Pointer Bounds Checker handle pointers to object fields.  When\n narrowing is on, field bounds are used.  Otherwise full object bounds are used.\n \n fchkp-narrow-to-innermost-array\n-C ObjC C++ ObjC++ RejectNegative Report Var(flag_chkp_narrow_to_innermost_arrray)\n+C ObjC C++ ObjC++ LTO RejectNegative Report Var(flag_chkp_narrow_to_innermost_arrray)\n Forces Pointer Bounds Checker to use bounds of the innermost arrays in case of\n nested static arryas access.  By default outermost array is used.\n \n@@ -1007,17 +1007,17 @@ C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_nochk_string_functions) Init(0)\n Allow to use *_nochk versions of string functions by Pointer Bounds Checker.\n \n fchkp-use-static-bounds\n-C ObjC C++ ObjC++ Report Var(flag_chkp_use_static_bounds) Init(1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_static_bounds) Init(1)\n Use statically initialized variable for vars bounds instead of\n generating them each time it is required.\n \n fchkp-use-static-const-bounds\n-C ObjC C++ ObjC++ Report Var(flag_chkp_use_static_const_bounds) Init(-1)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_use_static_const_bounds) Init(-1)\n Use statically initialized variable for constant bounds instead of\n generating them each time it is required.\n \n fchkp-treat-zero-dynamic-size-as-infinite\n-C ObjC C++ ObjC++ Report Var(flag_chkp_zero_dynamic_size_as_infinite) Init(0)\n+C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_dynamic_size_as_infinite) Init(0)\n With this option zero size obtained dynamically for objects with\n incomplete type will be treated as infinite.\n "}]}