{"sha": "b70c7c06aaa2ef55a29e6516a710e57f7218ab53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcwYzdjMDZhYWEyZWY1NWEyOWU2NTE2YTcxMGU1N2Y3MjE4YWI1Mw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-05-10T06:03:41Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-05-10T06:32:59Z"}, "message": "arc: Update ctz/clz patterns\n\nARCv2 ISA introduces special clz/ctz instructions. This patch is\nadding support for them when available.\n\nCorner case:\nmov            r0,0x0 : (w0) r0 <= 0x00000000 *\nffs            r1,r0 : (w0) r1 <= 0x0000001f *\nfls            r2,r0 : (w0) r2 <= 0x00000000 *\n\ngcc/\n2021-05-10  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.h (CLZ_DEFINED_VALUE_AT_ZERO): Define.\n\t(CTZ_DEFINED_VALUE_AT_ZERO): Likewise.\n\t* config/arc/arc.md (clrsbsi2): Cleanup pattern.\n\t(norm_f): Likewise.\n\t(ffs): Likewise.\n\t(ffs_f): Likewise.\n\t(clzsi2): Use fls instruction when available.\n\t(arc_clzsi2): Likewise.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "09836b79ef1fd591d55655fe1316008811231af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09836b79ef1fd591d55655fe1316008811231af7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b70c7c06aaa2ef55a29e6516a710e57f7218ab53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70c7c06aaa2ef55a29e6516a710e57f7218ab53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70c7c06aaa2ef55a29e6516a710e57f7218ab53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70c7c06aaa2ef55a29e6516a710e57f7218ab53/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b9eb2f8a8655bf1cc6bf14e732999c877ee4fff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9eb2f8a8655bf1cc6bf14e732999c877ee4fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9eb2f8a8655bf1cc6bf14e732999c877ee4fff"}], "stats": {"total": 59, "additions": 36, "deletions": 23}, "files": [{"sha": "bd1fe0abd7af727671e3d4462036bfdf8236c273", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70c7c06aaa2ef55a29e6516a710e57f7218ab53/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70c7c06aaa2ef55a29e6516a710e57f7218ab53/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=b70c7c06aaa2ef55a29e6516a710e57f7218ab53", "patch": "@@ -1445,6 +1445,12 @@ do { \\\n */\n #define SHIFT_COUNT_TRUNCATED 1\n \n+/* Defines if the CLZ result is undefined or has a useful value.  */\n+#define CLZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE)  ((VALUE) = 31, 2)\n+\n+/* Defines if the CTZ result is undefined or has a useful value.  */\n+#define CTZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE)  ((VALUE) = 31, 2)\n+\n /* We assume that the store-condition-codes instructions store 0 for false\n    and some other value for true.  This is the value stored for true.  */\n #define STORE_FLAG_VALUE 1"}, {"sha": "f3efe65ca2f13befc9cae1822ef6a43252bd957f", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 30, "deletions": 23, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70c7c06aaa2ef55a29e6516a710e57f7218ab53/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70c7c06aaa2ef55a29e6516a710e57f7218ab53/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=b70c7c06aaa2ef55a29e6516a710e57f7218ab53", "patch": "@@ -4396,24 +4396,20 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n ;; Instructions generated through builtins\n \n (define_insn \"clrsbsi2\"\n-  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=w,w\")\n-\t(clrsb:SI (match_operand:SI 1 \"general_operand\" \"cL,Cal\")))]\n+  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=r,r\")\n+\t(clrsb:SI (match_operand:SI 1 \"general_operand\" \"rL,Cal\")))]\n   \"TARGET_NORM\"\n-  \"@\n-   norm \\t%0, %1\n-   norm \\t%0, %1\"\n+  \"norm\\\\t%0,%1\"\n   [(set_attr \"length\" \"4,8\")\n    (set_attr \"type\" \"two_cycle_core,two_cycle_core\")])\n \n (define_insn \"norm_f\"\n-  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=w,w\")\n-\t(clrsb:SI (match_operand:SI 1 \"general_operand\" \"cL,Cal\")))\n+  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=r,r\")\n+\t(clrsb:SI (match_operand:SI 1 \"general_operand\" \"rL,Cal\")))\n    (set (reg:CC_ZN CC_REG)\n \t(compare:CC_ZN (match_dup 1) (const_int 0)))]\n   \"TARGET_NORM\"\n-  \"@\n-   norm.f\\t%0, %1\n-   norm.f\\t%0, %1\"\n+  \"norm.f\\\\t%0,%1\"\n   [(set_attr \"length\" \"4,8\")\n    (set_attr \"type\" \"two_cycle_core,two_cycle_core\")])\n \n@@ -4443,7 +4439,17 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n \t  (clz:SI (match_operand:SI 1 \"register_operand\" \"\")))\n      (clobber (match_dup 2))])]\n   \"TARGET_NORM\"\n-  \"operands[2] = gen_rtx_REG (CC_ZNmode, CC_REG);\")\n+  \"\n+   if (TARGET_V2)\n+    {\n+      /* ARCv2's FLS is a bit more optimal than using norm.  */\n+      rtx tmp = gen_reg_rtx (SImode);\n+      emit_insn (gen_fls (tmp, operands[1]));\n+      emit_insn (gen_subsi3 (operands[0], GEN_INT (31), tmp));\n+      DONE;\n+    }\n+   operands[2] = gen_rtx_REG (CC_ZNmode, CC_REG);\n+  \")\n \n (define_insn_and_split \"*arc_clzsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -4475,8 +4481,13 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (match_operand:SI 1 \"register_operand\" \"\")]\n   \"TARGET_NORM\"\n   \"\n-  emit_insn (gen_arc_ctzsi2 (operands[0], operands[1]));\n-  DONE;\n+   if (TARGET_V2)\n+    {\n+      emit_insn (gen_ffs (operands[0], operands[1]));\n+      DONE;\n+    }\n+   emit_insn (gen_arc_ctzsi2 (operands[0], operands[1]));\n+   DONE;\n \")\n \n (define_insn_and_split \"arc_ctzsi2\"\n@@ -5575,26 +5586,22 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"type\" \"misc\")])\n \n (define_insn \"ffs\"\n-  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=w,w\")\n-\t(unspec:SI [(match_operand:SI 1 \"general_operand\" \"cL,Cal\")]\n+  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=r,r\")\n+\t(unspec:SI [(match_operand:SI 1 \"general_operand\" \"rL,Cal\")]\n \t\t\t    UNSPEC_ARC_FFS))]\n   \"TARGET_NORM && TARGET_V2\"\n-  \"@\n-   ffs \\t%0, %1\n-   ffs \\t%0, %1\"\n+  \"ffs\\\\t%0,%1\"\n   [(set_attr \"length\" \"4,8\")\n    (set_attr \"type\" \"two_cycle_core,two_cycle_core\")])\n \n (define_insn \"ffs_f\"\n-  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=w,w\")\n-\t(unspec:SI [(match_operand:SI 1 \"general_operand\" \"cL,Cal\")]\n+  [(set (match_operand:SI  0 \"dest_reg_operand\" \"=r,r\")\n+\t(unspec:SI [(match_operand:SI 1 \"general_operand\" \"rL,Cal\")]\n \t\t\t    UNSPEC_ARC_FFS))\n    (set (reg:CC_ZN CC_REG)\n \t(compare:CC_ZN (match_dup 1) (const_int 0)))]\n   \"TARGET_NORM && TARGET_V2\"\n-  \"@\n-   ffs.f\\t%0, %1\n-   ffs.f\\t%0, %1\"\n+  \"ffs.f\\\\t%0,%1\"\n   [(set_attr \"length\" \"4,8\")\n    (set_attr \"type\" \"two_cycle_core,two_cycle_core\")])\n "}]}