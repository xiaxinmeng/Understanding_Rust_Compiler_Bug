{"sha": "da8111a0248fd0b945177d345afbb2c6cbd75f3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4MTExYTAyNDhmZDBiOTQ1MTc3ZDM0NWFmYmIyYzZjYmQ3NWYzZg==", "commit": {"author": {"name": "Daniel Krugler", "email": "daniel.kruegler@googlemail.com", "date": "2011-04-17T21:46:11Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-17T21:46:11Z"}, "message": "PR libstdc++/48635 (again)\n\n2011-04-17  Daniel Krugler  <daniel.kruegler@googlemail.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/48635 (again)\n\t* include/bits/unique_ptr.h (unique_ptr<>::unique_ptr(unique_ptr<>&&),\n\tunique_ptr<_Tp[]>::unique_ptr(unique_ptr<>&&),\n\tunique_ptr<>::operator=(unique_ptr<>&&),\n\tunique_ptr<_Tp[]>::operator=(unique_ptr<>&&)): Use forward<_Ep>, not\n\tforward<_Dp>, to forward the deleter.\n\t* testsuite/20_util/unique_ptr/assign/48635_neg.cc: New.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r172619", "tree": {"sha": "b69d0fe142f92d1da39b3f40ac7cf5157ce87b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b69d0fe142f92d1da39b3f40ac7cf5157ce87b2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da8111a0248fd0b945177d345afbb2c6cbd75f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8111a0248fd0b945177d345afbb2c6cbd75f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8111a0248fd0b945177d345afbb2c6cbd75f3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8111a0248fd0b945177d345afbb2c6cbd75f3f/comments", "author": {"login": "Dani-Hub", "id": 431432, "node_id": "MDQ6VXNlcjQzMTQzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/431432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dani-Hub", "html_url": "https://github.com/Dani-Hub", "followers_url": "https://api.github.com/users/Dani-Hub/followers", "following_url": "https://api.github.com/users/Dani-Hub/following{/other_user}", "gists_url": "https://api.github.com/users/Dani-Hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dani-Hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dani-Hub/subscriptions", "organizations_url": "https://api.github.com/users/Dani-Hub/orgs", "repos_url": "https://api.github.com/users/Dani-Hub/repos", "events_url": "https://api.github.com/users/Dani-Hub/events{/privacy}", "received_events_url": "https://api.github.com/users/Dani-Hub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e54170f4fdead56ae950f57886af5f48c202eb83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54170f4fdead56ae950f57886af5f48c202eb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54170f4fdead56ae950f57886af5f48c202eb83"}], "stats": {"total": 69, "additions": 65, "deletions": 4}, "files": [{"sha": "ab1ffcbec7d2e23cca2ffdcb8a8b864f7c5fd200", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8111a0248fd0b945177d345afbb2c6cbd75f3f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8111a0248fd0b945177d345afbb2c6cbd75f3f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=da8111a0248fd0b945177d345afbb2c6cbd75f3f", "patch": "@@ -1,3 +1,14 @@\n+2011-04-17  Daniel Krugler  <daniel.kruegler@googlemail.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/48635 (again)\n+\t* include/bits/unique_ptr.h (unique_ptr<>::unique_ptr(unique_ptr<>&&),\n+\tunique_ptr<_Tp[]>::unique_ptr(unique_ptr<>&&),\n+\tunique_ptr<>::operator=(unique_ptr<>&&),\n+\tunique_ptr<_Tp[]>::operator=(unique_ptr<>&&)): Use forward<_Ep>, not\n+\tforward<_Dp>, to forward the deleter.\n+\t* testsuite/20_util/unique_ptr/assign/48635_neg.cc: New.\n+\n 2011-04-15  Daniel Krugler  <daniel.kruegler@googlemail.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "e1f98b5f5c93f01d13b304b503ab2a8e22a7c0c6", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8111a0248fd0b945177d345afbb2c6cbd75f3f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8111a0248fd0b945177d345afbb2c6cbd75f3f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=da8111a0248fd0b945177d345afbb2c6cbd75f3f", "patch": "@@ -153,7 +153,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t   && std::is_convertible<_Ep, _Dp>::value))>\n \t     ::type>\n \tunique_ptr(unique_ptr<_Up, _Ep>&& __u)\n-\t: _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter()))\n+\t: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))\n \t{ }\n \n #if _GLIBCXX_USE_DEPRECATED\n@@ -186,7 +186,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \toperator=(unique_ptr<_Up, _Ep>&& __u)\n \t{\n \t  reset(__u.release());\n-\t  get_deleter() = std::forward<deleter_type>(__u.get_deleter());\n+\t  get_deleter() = std::forward<_Ep>(__u.get_deleter());\n \t  return *this;\n \t}\n \n@@ -306,7 +306,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       template<typename _Up, typename _Ep>\n \tunique_ptr(unique_ptr<_Up, _Ep>&& __u)\n-\t: _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter()))\n+\t: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))\n \t{ }\n \n       // Destructor.\n@@ -326,7 +326,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \toperator=(unique_ptr<_Up, _Ep>&& __u)\n \t{\n \t  reset(__u.release());\n-\t  get_deleter() = std::forward<deleter_type>(__u.get_deleter());\n+\t  get_deleter() = std::forward<_Ep>(__u.get_deleter());\n \t  return *this;\n \t}\n "}, {"sha": "1ed53ee2d5cdd04bc9ac228bf5af927b96bf8c65", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/48635_neg.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8111a0248fd0b945177d345afbb2c6cbd75f3f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8111a0248fd0b945177d345afbb2c6cbd75f3f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2F48635_neg.cc?ref=da8111a0248fd0b945177d345afbb2c6cbd75f3f", "patch": "@@ -0,0 +1,50 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2011 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+\n+struct D;\n+\n+struct B\n+{\n+ B& operator=(D&) = delete; // { dg-error \"declared here\" }\n+\n+ template<class T>\n+   void operator()(T*) const {}\n+};\n+\n+struct D : B { };\n+\n+// libstdc++/48635\n+void f()\n+{\n+  B b;\n+  D d;\n+\n+  std::unique_ptr<int, B&> ub(nullptr, b);\n+  std::unique_ptr<int, D&> ud(nullptr, d);\n+  ub = std::move(ud);\n+// { dg-error \"use of deleted function\" \"\" { target *-*-* } 189 }\n+\n+  std::unique_ptr<int[], B&> uba(nullptr, b);\n+  std::unique_ptr<int[], D&> uda(nullptr, d);\n+  uba = std::move(uda);\n+// { dg-error \"use of deleted function\" \"\" { target *-*-* } 329 }\n+}"}]}