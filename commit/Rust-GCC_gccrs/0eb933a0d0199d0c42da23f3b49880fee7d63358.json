{"sha": "0eb933a0d0199d0c42da23f3b49880fee7d63358", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViOTMzYTBkMDE5OWQwYzQyZGEyM2YzYjQ5ODgwZmVlN2Q2MzM1OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-03-05T22:10:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-03-05T22:10:52Z"}, "message": "h8300.c (output_simode_bld): Clear the destination first if possible.\n\n\t* config/h8300/h8300.c (output_simode_bld): Clear the\n\tdestination first if possible.\n\t* config/h8300/h8300.md (extzv_1_r_h8300hs): Add an\n\talternative.\n\t(extzv_1_r_inv_h8300hs): Likewise.\n\nFrom-SVN: r63867", "tree": {"sha": "864d6250f673548226817f5b3d7ac6858e80675e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864d6250f673548226817f5b3d7ac6858e80675e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eb933a0d0199d0c42da23f3b49880fee7d63358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb933a0d0199d0c42da23f3b49880fee7d63358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb933a0d0199d0c42da23f3b49880fee7d63358", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb933a0d0199d0c42da23f3b49880fee7d63358/comments", "author": null, "committer": null, "parents": [{"sha": "1d555f7aecf2802ae7f21891aea9d3de0407c88b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d555f7aecf2802ae7f21891aea9d3de0407c88b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d555f7aecf2802ae7f21891aea9d3de0407c88b"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "ebfb2ca6e6cec251925334b97d97643f9c7a919f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb933a0d0199d0c42da23f3b49880fee7d63358/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb933a0d0199d0c42da23f3b49880fee7d63358/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0eb933a0d0199d0c42da23f3b49880fee7d63358", "patch": "@@ -1,3 +1,11 @@\n+2003-03-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (output_simode_bld): Clear the\n+\tdestination first if possible.\n+\t* config/h8300/h8300.md (extzv_1_r_h8300hs): Add an\n+\talternative.\n+\t(extzv_1_r_inv_h8300hs): Likewise.\n+\n 2003-03-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* basic-block.h (EDGE_IRREDUCIBLE_LOOP, EDGE_ALL_FLAGS): New."}, {"sha": "b39a7020aca0251e155fa989fa479fb50f6f720a", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb933a0d0199d0c42da23f3b49880fee7d63358/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb933a0d0199d0c42da23f3b49880fee7d63358/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=0eb933a0d0199d0c42da23f3b49880fee7d63358", "patch": "@@ -4112,14 +4112,24 @@ output_simode_bld (bild, operands)\n     }\n   else\n     {\n+      /* Determine if we can clear the destination first.  */\n+      int clear_first = (REG_P (operands[0]) && REG_P (operands[1])\n+\t\t\t && REGNO (operands[0]) != REGNO (operands[1]));\n+\n+      if (clear_first)\n+\toutput_asm_insn (\"sub.l\\t%S0,%S0\", operands);\n+\n       /* Output the bit load or bit inverse load.  */\n       if (bild)\n \toutput_asm_insn (\"bild\\t%Z2,%Y1\", operands);\n       else\n \toutput_asm_insn (\"bld\\t%Z2,%Y1\", operands);\n \n-      /* Clear the destination register and perform the bit store.  */\n-      output_asm_insn (\"xor.l\\t%S0,%S0\\n\\tbst\\t#0,%w0\", operands);\n+      if (!clear_first)\n+\toutput_asm_insn (\"xor.l\\t%S0,%S0\", operands);\n+\n+      /* Perform the bit store.  */\n+      output_asm_insn (\"bst\\t#0,%w0\", operands);\n     }\n \n   /* All done.  */"}, {"sha": "cb6bc7a0dbd2fa9ac9412c16ee3008656c9d4e5b", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb933a0d0199d0c42da23f3b49880fee7d63358/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb933a0d0199d0c42da23f3b49880fee7d63358/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=0eb933a0d0199d0c42da23f3b49880fee7d63358", "patch": "@@ -2503,15 +2503,15 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"*extzv_1_r_h8300hs\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n+\t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"?0,r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand 2 \"const_int_operand\" \"n\")))]\n+\t\t\t (match_operand 2 \"const_int_operand\" \"n,n\")))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n    && INTVAL (operands[2]) < 16\"\n   \"* return output_simode_bld (0, operands);\"\n-  [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"8\")])\n+  [(set_attr \"cc\" \"clobber,clobber\")\n+   (set_attr \"length\" \"8,6\")])\n \n ;;\n ;; Inverted loads with a 32bit destination.\n@@ -2531,17 +2531,17 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"*extzv_1_r_inv_h8300hs\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(zero_extract:SI (xor:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t\t\t (match_operand 3 \"const_int_operand\" \"n\"))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n+\t(zero_extract:SI (xor:SI (match_operand:SI 1 \"register_operand\" \"?0,r\")\n+\t\t\t\t (match_operand 3 \"const_int_operand\" \"n,n\"))\n \t\t\t (const_int 1)\n-\t\t\t (match_operand 2 \"const_int_operand\" \"n\")))]\n+\t\t\t (match_operand 2 \"const_int_operand\" \"n,n\")))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n    && INTVAL (operands[2]) < 16\n    && (1 << INTVAL (operands[2])) == INTVAL (operands[3])\"\n   \"* return output_simode_bld (1, operands);\"\n-  [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"8\")])\n+  [(set_attr \"cc\" \"clobber,clobber\")\n+   (set_attr \"length\" \"8,6\")])\n \n (define_expand \"insv\"\n   [(set (zero_extract:HI (match_operand:HI 0 \"general_operand\" \"\")"}]}