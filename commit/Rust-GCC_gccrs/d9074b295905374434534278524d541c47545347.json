{"sha": "d9074b295905374434534278524d541c47545347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwNzRiMjk1OTA1Mzc0NDM0NTM0Mjc4NTI0ZDU0MWM0NzU0NTM0Nw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-03-03T16:32:01Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-03-03T16:32:01Z"}, "message": "[AArch64] Fix bootstrap due to wide_int .elt (0) uninit warning\n\n    * config/aarch64/aarch64.c (aarch64_float_const_representable_p):\n    Use wide_int::ulow () instead of .elt (0).\n\nFrom-SVN: r245877", "tree": {"sha": "56c71dfefa17ad1cb81765edeff15efd007f4bac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56c71dfefa17ad1cb81765edeff15efd007f4bac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9074b295905374434534278524d541c47545347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9074b295905374434534278524d541c47545347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9074b295905374434534278524d541c47545347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9074b295905374434534278524d541c47545347/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c953fb88feaff23f5ffb7caf2f906f08d2d79550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c953fb88feaff23f5ffb7caf2f906f08d2d79550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c953fb88feaff23f5ffb7caf2f906f08d2d79550"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "03522ced844ac5af05371a466fc9054906b89d7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9074b295905374434534278524d541c47545347/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9074b295905374434534278524d541c47545347/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9074b295905374434534278524d541c47545347", "patch": "@@ -1,3 +1,8 @@\n+2017-03-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_float_const_representable_p):\n+\tUse wide_int::ulow () instead of .elt (0).\n+\n 2017-03-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*pushtf): Change *roF constraint to *roC."}, {"sha": "714bb79f52016a4e9ae15539412f94945e4911e7", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9074b295905374434534278524d541c47545347/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9074b295905374434534278524d541c47545347/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d9074b295905374434534278524d541c47545347", "patch": "@@ -12496,7 +12496,7 @@ aarch64_float_const_representable_p (rtx x)\n \n   /* If the low part of the mantissa has bits set we cannot represent\n      the value.  */\n-  if (w.elt (0) != 0)\n+  if (w.ulow () != 0)\n     return false;\n   /* We have rejected the lower HOST_WIDE_INT, so update our\n      understanding of how many bits lie in the mantissa and"}]}