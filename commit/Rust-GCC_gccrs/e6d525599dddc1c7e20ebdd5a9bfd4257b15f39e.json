{"sha": "e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZkNTI1NTk5ZGRkYzFjN2UyMGViZGQ1YTliZmQ0MjU3YjE1ZjM5ZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-08T21:38:20Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-08T21:38:20Z"}, "message": "(build_array_ref): Force array to be allocated on the stack if...\n\n(build_array_ref): Force array to be allocated on the\nstack if it is accessed by out-of-bound constant integer subscript.\n\nFrom-SVN: r5111", "tree": {"sha": "9268279dc1a95a42ed1951b972b215112944e66e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9268279dc1a95a42ed1951b972b215112944e66e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e/comments", "author": null, "committer": null, "parents": [{"sha": "312def2eda47dd591c50f9bf9959fc3129e275e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312def2eda47dd591c50f9bf9959fc3129e275e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312def2eda47dd591c50f9bf9959fc3129e275e0"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "c748a562cd5da25a886bc232543b5523b86167b5", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e6d525599dddc1c7e20ebdd5a9bfd4257b15f39e", "patch": "@@ -1252,6 +1252,17 @@ build_array_ref (array, index)\n \t  if (mark_addressable (array) == 0)\n \t    return error_mark_node;\n \t}\n+      /* An array that is indexed by a constant value which is not within\n+\t the array bounds cannot be stored in a register either; because we\n+\t would get a crash in store_bit_field/extract_bit_field when trying\n+\t to access a non-existent part of the register.  */\n+      if (TREE_CODE (index) == INTEGER_CST\n+\t  && TYPE_VALUES (TREE_TYPE (array))\n+\t  && ! int_fits_type_p (index, TYPE_VALUES (TREE_TYPE (array))))\n+\t{\n+\t  if (mark_addressable (array) == 0)\n+\t    return error_mark_node;\n+\t}\n \n       if (pedantic && !lvalue_p (array))\n \t{"}]}