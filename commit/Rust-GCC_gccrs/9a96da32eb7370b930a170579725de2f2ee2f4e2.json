{"sha": "9a96da32eb7370b930a170579725de2f2ee2f4e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE5NmRhMzJlYjczNzBiOTMwYTE3MDU3OTcyNWRlMmYyZWUyZjRlMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-03-21T20:50:35Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-03-21T20:50:35Z"}, "message": "alpha.md (unspec): New define_c_enum.\n\n\t* config/alpha/alpha.md (unspec): New define_c_enum.\n\t(unspecv): Ditto.\n\nFrom-SVN: r171268", "tree": {"sha": "73c17266127baa86d04aa2e603e42ffdd9f9b90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73c17266127baa86d04aa2e603e42ffdd9f9b90a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a96da32eb7370b930a170579725de2f2ee2f4e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a96da32eb7370b930a170579725de2f2ee2f4e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a96da32eb7370b930a170579725de2f2ee2f4e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a96da32eb7370b930a170579725de2f2ee2f4e2/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e43ad6805fa887f6989c724ece2127abb117698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e43ad6805fa887f6989c724ece2127abb117698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e43ad6805fa887f6989c724ece2127abb117698"}], "stats": {"total": 126, "additions": 66, "deletions": 60}, "files": [{"sha": "16cdafa64eab7a79ae2ebf25d5cd9a4752d32d88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a96da32eb7370b930a170579725de2f2ee2f4e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a96da32eb7370b930a170579725de2f2ee2f4e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a96da32eb7370b930a170579725de2f2ee2f4e2", "patch": "@@ -1,5 +1,11 @@\n 2011-03-21  Uros Bizjak  <ubizjak@gmail.com>\n \n+\t* config/alpha/alpha.md (unspec): New define_c_enum.\n+\t(unspecv): Ditto.\n+\n+2011-03-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR debug/48214\n \t* config/alpha/alpha.c (alpha_pad_noreturn): Do not emit an unop\n \tbetween a call and its CALL_ARG_LOCATION note.\n "}, {"sha": "534b6de711a288c750e888d88d5b4d0fa8a6a07a", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a96da32eb7370b930a170579725de2f2ee2f4e2/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a96da32eb7370b930a170579725de2f2ee2f4e2/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=9a96da32eb7370b930a170579725de2f2ee2f4e2", "patch": "@@ -1,6 +1,6 @@\n ;; Machine description for DEC Alpha for GNU C compiler\n ;; Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-;; 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+;; 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n ;; Free Software Foundation, Inc.\n ;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n ;;\n@@ -24,68 +24,68 @@\n \n ;; Uses of UNSPEC in this file:\n \n-(define_constants\n-  [(UNSPEC_ARG_HOME\t0)\n-   (UNSPEC_LDGP1\t1)\n-   (UNSPEC_INSXH\t2)\n-   (UNSPEC_MSKXH\t3)\n-   (UNSPEC_CVTQL\t4)\n-   (UNSPEC_CVTLQ\t5)\n-   (UNSPEC_UMK_LAUM\t6)\n-   (UNSPEC_UMK_LALM\t7)\n-   (UNSPEC_UMK_LAL\t8)\n-   (UNSPEC_UMK_LOAD_CIW\t9)\n-   (UNSPEC_LDGP2\t10)\n-   (UNSPEC_LITERAL\t11)\n-   (UNSPEC_LITUSE\t12)\n-   (UNSPEC_SIBCALL\t13)\n-   (UNSPEC_SYMBOL\t14)\n-\n-   ;; TLS Support\n-   (UNSPEC_TLSGD_CALL\t15)\n-   (UNSPEC_TLSLDM_CALL\t16)\n-   (UNSPEC_TLSGD\t17)\n-   (UNSPEC_TLSLDM\t18)\n-   (UNSPEC_DTPREL\t19)\n-   (UNSPEC_TPREL\t20)\n-   (UNSPEC_TP\t\t21)\n-\n-   ;; Builtins\n-   (UNSPEC_CMPBGE\t22)\n-   (UNSPEC_ZAP\t\t23)\n-   (UNSPEC_AMASK\t24)\n-   (UNSPEC_IMPLVER\t25)\n-   (UNSPEC_PERR\t\t26)\n-   (UNSPEC_COPYSIGN     27)\n-\n-   ;; Atomic operations\n-   (UNSPEC_MB\t\t28)\n-   (UNSPEC_ATOMIC\t31)\n-   (UNSPEC_CMPXCHG\t32)\n-   (UNSPEC_XCHG\t\t33)\n-  ])\n+(define_c_enum \"unspec\" [\n+  UNSPEC_ARG_HOME\n+  UNSPEC_LDGP1\n+  UNSPEC_INSXH\n+  UNSPEC_MSKXH\n+  UNSPEC_CVTQL\n+  UNSPEC_CVTLQ\n+  UNSPEC_UMK_LAUM\n+  UNSPEC_UMK_LALM\n+  UNSPEC_UMK_LAL\n+  UNSPEC_UMK_LOAD_CIW\n+  UNSPEC_LDGP2\n+  UNSPEC_LITERAL\n+  UNSPEC_LITUSE\n+  UNSPEC_SIBCALL\n+  UNSPEC_SYMBOL\n+\n+  ;; TLS Support\n+  UNSPEC_TLSGD_CALL\n+  UNSPEC_TLSLDM_CALL\n+  UNSPEC_TLSGD\n+  UNSPEC_TLSLDM\n+  UNSPEC_DTPREL\n+  UNSPEC_TPREL\n+  UNSPEC_TP\n+\n+  ;; Builtins\n+  UNSPEC_CMPBGE\n+  UNSPEC_ZAP\n+  UNSPEC_AMASK\n+  UNSPEC_IMPLVER\n+  UNSPEC_PERR\n+  UNSPEC_COPYSIGN\n+\n+  ;; Atomic operations\n+  UNSPEC_MB\n+  UNSPEC_ATOMIC\n+  UNSPEC_CMPXCHG\n+  UNSPEC_XCHG\n+])\n \n ;; UNSPEC_VOLATILE:\n \n-(define_constants\n-  [(UNSPECV_IMB\t\t0)\n-   (UNSPECV_BLOCKAGE\t1)\n-   (UNSPECV_SETJMPR\t2)\t; builtin_setjmp_receiver\n-   (UNSPECV_LONGJMP\t3)\t; builtin_longjmp\n-   (UNSPECV_TRAPB\t4)\n-   (UNSPECV_PSPL\t5)\t; prologue_stack_probe_loop\n-   (UNSPECV_REALIGN\t6)\n-   (UNSPECV_EHR\t\t7)\t; exception_receiver\n-   (UNSPECV_MCOUNT\t8)\n-   (UNSPECV_FORCE_MOV\t9)\n-   (UNSPECV_LDGP1\t10)\n-   (UNSPECV_PLDGP2\t11)\t; prologue ldgp\n-   (UNSPECV_SET_TP\t12)\n-   (UNSPECV_RPCC\t13)\n-   (UNSPECV_SETJMPR_ER\t14)\t; builtin_setjmp_receiver fragment\n-   (UNSPECV_LL\t\t15)\t; load-locked\n-   (UNSPECV_SC\t\t16)\t; store-conditional\n-  ])\n+(define_c_enum \"unspecv\" [\n+  UNSPECV_IMB\n+  UNSPECV_BLOCKAGE\n+  UNSPECV_SETJMPR\t; builtin_setjmp_receiver\n+  UNSPECV_LONGJMP\t; builtin_longjmp\n+  UNSPECV_TRAPB\n+  UNSPECV_PSPL\t\t; prologue_stack_probe_loop\n+  UNSPECV_REALIGN\n+  UNSPECV_EHR\t\t; exception_receiver\n+  UNSPECV_MCOUNT\n+  UNSPECV_FORCE_MOV\n+  UNSPECV_LDGP1\n+  UNSPECV_PLDGP2\t; prologue ldgp\n+  UNSPECV_SET_TP\n+  UNSPECV_RPCC\n+  UNSPECV_SETJMPR_ER\t; builtin_setjmp_receiver fragment\n+  UNSPECV_LL\t\t; load-locked\n+  UNSPECV_SC\t\t; store-conditional\n+])\n \n ;; On non-BWX targets, CQImode must be handled the similarly to HImode\n ;; when generating reloads."}]}