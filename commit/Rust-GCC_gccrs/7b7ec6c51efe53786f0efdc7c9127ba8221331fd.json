{"sha": "7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I3ZWM2YzUxZWZlNTM3ODZmMGVmZGM3YzkxMjdiYTgyMjEzMzFmZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-06-21T11:02:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-06-21T11:02:38Z"}, "message": "re PR tree-optimization/49483 (unable to vectorize code equivalent to \"scalbnf\")\n\n2011-06-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49483\n\t* tree-vect-stmts.c (vectorizable_assignment): Also handle\n\tVIEW_CONVERT_EXPR conversions.\n\n\t* gcc.dg/vect/vect-120.c: New testcase.\n\nFrom-SVN: r175252", "tree": {"sha": "dc57e81a877b41014966d99e0e48a413f39a385a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc57e81a877b41014966d99e0e48a413f39a385a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ced4d0e333a3123208df5950b6e5fc41775666f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced4d0e333a3123208df5950b6e5fc41775666f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ced4d0e333a3123208df5950b6e5fc41775666f8"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "4ec260347d879aecfe2ad919423f4aa9d2c65d56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "patch": "@@ -1,3 +1,9 @@\n+2011-06-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49483\n+\t* tree-vect-stmts.c (vectorizable_assignment): Also handle\n+\tVIEW_CONVERT_EXPR conversions.\n+\n 2011-06-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/avr/avr-mcus.def, config/avr/genopt.sh: New files."}, {"sha": "9dec802661d537382c2fffcaca24ebc4128238fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "patch": "@@ -1,3 +1,8 @@\n+2011-06-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49483\n+\t* gcc.dg/vect/vect-120.c: New testcase.\n+\n 2011-06-21  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR testsuite/49443"}, {"sha": "b9a2f5004ee20b7fdbef822ac5c4ded15d8479ba", "filename": "gcc/testsuite/gcc.dg/vect/vect-120.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-120.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-120.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-120.c?ref=7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+/* { dg-require-effective-target vect_shift } */\n+\n+static inline float\n+i2f(int x)\n+{\n+  union { float f; int i; } tmp;\n+  tmp.i=x;\n+  return tmp.f;\n+}\n+static inline float\n+vect_ldexpf(float x, int n)\n+{\n+  n = (n+0x7f)<<23;\n+  return x * i2f(n);\n+}\n+\n+float __attribute__ ((aligned(16))) a[1024];\n+float __attribute__ ((aligned(16))) b[1024];\n+float __attribute__ ((aligned(16))) c[1024];\n+\n+void\n+tV()\n+{\n+  int i;\n+  for (i=0; i!=1024; ++i)\n+    {\n+      float z = a[i];\n+      int n = b[i];\n+      c[i] = vect_ldexpf(z,n);\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f9b963910816fb08fdd9dbcae163bd6f5085df33", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7ec6c51efe53786f0efdc7c9127ba8221331fd/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=7b7ec6c51efe53786f0efdc7c9127ba8221331fd", "patch": "@@ -2089,6 +2089,9 @@ vectorizable_assignment (gimple stmt, gimple_stmt_iterator *gsi,\n   else\n     return false;\n \n+  if (code == VIEW_CONVERT_EXPR)\n+    op = TREE_OPERAND (op, 0);\n+\n   if (!vect_is_simple_use_1 (op, loop_vinfo, bb_vinfo,\n \t\t\t     &def_stmt, &def, &dt[0], &vectype_in))\n     {\n@@ -2099,7 +2102,8 @@ vectorizable_assignment (gimple stmt, gimple_stmt_iterator *gsi,\n \n   /* We can handle NOP_EXPR conversions that do not change the number\n      of elements or the vector size.  */\n-  if (CONVERT_EXPR_CODE_P (code)\n+  if ((CONVERT_EXPR_CODE_P (code)\n+       || code == VIEW_CONVERT_EXPR)\n       && (!vectype_in\n \t  || TYPE_VECTOR_SUBPARTS (vectype_in) != nunits\n \t  || (GET_MODE_SIZE (TYPE_MODE (vectype))\n@@ -2134,7 +2138,8 @@ vectorizable_assignment (gimple stmt, gimple_stmt_iterator *gsi,\n       /* Arguments are ready. create the new vector stmt.  */\n       FOR_EACH_VEC_ELT (tree, vec_oprnds, i, vop)\n        {\n-\t if (CONVERT_EXPR_CODE_P (code))\n+\t if (CONVERT_EXPR_CODE_P (code)\n+\t     || code == VIEW_CONVERT_EXPR)\n \t   vop = build1 (VIEW_CONVERT_EXPR, vectype, vop);\n          new_stmt = gimple_build_assign (vec_dest, vop);\n          new_temp = make_ssa_name (vec_dest, new_stmt);"}]}