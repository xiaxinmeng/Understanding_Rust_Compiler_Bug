{"sha": "d7947e191bdfd580d7b8ddb2a72f050cbfc41913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5NDdlMTkxYmRmZDU4MGQ3YjhkZGIyYTcyZjA1MGNiZmM0MTkxMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-11-29T13:00:35Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-11-29T13:00:35Z"}, "message": "Properly handle function without arguments\n\n\tPR c/59309\n\t* cilk.c (gimplify_cilk_spawn): Properly handle function without\n\targuments.\n\nFrom-SVN: r205525", "tree": {"sha": "6cfb0c8004407472eafd8773114fe3983adc250c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cfb0c8004407472eafd8773114fe3983adc250c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7947e191bdfd580d7b8ddb2a72f050cbfc41913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7947e191bdfd580d7b8ddb2a72f050cbfc41913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7947e191bdfd580d7b8ddb2a72f050cbfc41913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7947e191bdfd580d7b8ddb2a72f050cbfc41913/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35814b034651b543b2521f9bd028c35f1fcaac1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35814b034651b543b2521f9bd028c35f1fcaac1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35814b034651b543b2521f9bd028c35f1fcaac1a"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "616a74209c04b4ad0956d323ac5e2225510f6f27", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7947e191bdfd580d7b8ddb2a72f050cbfc41913/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7947e191bdfd580d7b8ddb2a72f050cbfc41913/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d7947e191bdfd580d7b8ddb2a72f050cbfc41913", "patch": "@@ -1,3 +1,9 @@\n+2013-11-29   H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c/59309\n+\t* cilk.c (gimplify_cilk_spawn): Properly handle function without\n+\targuments.\n+\n 2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/59280"}, {"sha": "99d9c7e354d6a8aa5fe3ccdc596bb537e46b2e2a", "filename": "gcc/c-family/cilk.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7947e191bdfd580d7b8ddb2a72f050cbfc41913/gcc%2Fc-family%2Fcilk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7947e191bdfd580d7b8ddb2a72f050cbfc41913/gcc%2Fc-family%2Fcilk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fcilk.c?ref=d7947e191bdfd580d7b8ddb2a72f050cbfc41913", "patch": "@@ -757,7 +757,10 @@ gimplify_cilk_spawn (tree *spawn_p, gimple_seq *before ATTRIBUTE_UNUSED,\n \n   /* This should give the number of parameters.  */\n   total_args = list_length (new_args);\n-  arg_array = XNEWVEC (tree, total_args);\n+  if (total_args)\n+    arg_array = XNEWVEC (tree, total_args);\n+  else\n+    arg_array = NULL;\n \n   ii_args = new_args;\n   for (ii = 0; ii < total_args; ii++)\n@@ -771,7 +774,7 @@ gimplify_cilk_spawn (tree *spawn_p, gimple_seq *before ATTRIBUTE_UNUSED,\n \n   call1 = cilk_call_setjmp (cfun->cilk_frame_decl);\n \n-  if (*arg_array == NULL_TREE)\n+  if (arg_array == NULL || *arg_array == NULL_TREE)\n     call2 = build_call_expr (function, 0);\n   else \n     call2 = build_call_expr_loc_array (EXPR_LOCATION (*spawn_p), function, "}]}