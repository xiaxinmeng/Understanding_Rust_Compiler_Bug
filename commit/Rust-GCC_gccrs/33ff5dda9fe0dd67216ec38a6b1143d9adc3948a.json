{"sha": "33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNmZjVkZGE5ZmUwZGQ2NzIxNmVjMzhhNmIxMTQzZDlhZGMzOTQ4YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-03T11:24:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-03T11:24:39Z"}, "message": "re PR tree-optimization/82381 (internal compiler error: qsort checking failed)\n\n\tPR tree-optimization/82381\n\t* tree-ssa-reassoc.c (sort_by_operand_rank): Don't check\n\tstmt_to_insert nor wheather SSA_NAMEs are default defs.\n\tReturn 1 or -1 if one of bba and bbb is NULL. If bb_rank is equal,\n\tfallthrough into reassoc_stmt_dominates_stmt_p.\n\n\t* gcc.c-torture/compile/pr82381.c: New test.\n\nFrom-SVN: r253379", "tree": {"sha": "6bfb4c141e8732d6cc4922f7dc62b3fde1c8511a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bfb4c141e8732d6cc4922f7dc62b3fde1c8511a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb81a576f259256b38d46dd41d3bd5f5a36cfd6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb81a576f259256b38d46dd41d3bd5f5a36cfd6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb81a576f259256b38d46dd41d3bd5f5a36cfd6f"}], "stats": {"total": 66, "additions": 47, "deletions": 19}, "files": [{"sha": "25dcf02d04ab232412f42d3fd5797e08512e3a56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "patch": "@@ -1,5 +1,11 @@\n 2017-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/82381\n+\t* tree-ssa-reassoc.c (sort_by_operand_rank): Don't check\n+\tstmt_to_insert nor wheather SSA_NAMEs are default defs.\n+\tReturn 1 or -1 if one of bba and bbb is NULL. If bb_rank is equal,\n+\tfallthrough into reassoc_stmt_dominates_stmt_p.\n+\n \tPR target/82386\n \t* combine.c (combine_instructions): Don't combine in unreachable\n \tbasic blocks."}, {"sha": "70fde548d1c62dda990ebd9284929edb4dadb751", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "patch": "@@ -1,5 +1,8 @@\n 2017-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/82381\n+\t* gcc.c-torture/compile/pr82381.c: New test.\n+\n \tPR target/82386\n \t* gcc.dg/pr82386.c: New test.\n "}, {"sha": "3ff2c3afd4082abfbdfa77fd05adf42c752c246a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr82381.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82381.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82381.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82381.c?ref=33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/82381 */\n+/* { dg-do compile } */\n+\n+signed char b, h;\n+unsigned short c, e;\n+short int d, f, g;\n+\n+void\n+foo ()\n+{\n+  if (h)\n+    {\n+      short a = -(d + c - b);\n+      f = e - a - -d;\n+    }\n+  if (c)\n+    g = 0;\n+}"}, {"sha": "eff76d1c6c2be977d698029c8fa82a031c3c334a", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "patch": "@@ -514,36 +514,37 @@ sort_by_operand_rank (const void *pa, const void *pb)\n       && TREE_CODE (oea->op) == SSA_NAME\n       && TREE_CODE (oeb->op) == SSA_NAME)\n     {\n-      /* As SSA_NAME_VERSION is assigned pretty randomly, because we reuse\n-\t versions of removed SSA_NAMEs, so if possible, prefer to sort\n-\t based on basic block and gimple_uid of the SSA_NAME_DEF_STMT.\n-\t See PR60418.  */\n-      if (!SSA_NAME_IS_DEFAULT_DEF (oea->op)\n-\t  && !SSA_NAME_IS_DEFAULT_DEF (oeb->op)\n-\t  && !oea->stmt_to_insert\n-\t  && !oeb->stmt_to_insert\n-\t  && SSA_NAME_VERSION (oeb->op) != SSA_NAME_VERSION (oea->op))\n+      if (SSA_NAME_VERSION (oeb->op) != SSA_NAME_VERSION (oea->op))\n \t{\n+\t  /* As SSA_NAME_VERSION is assigned pretty randomly, because we reuse\n+\t     versions of removed SSA_NAMEs, so if possible, prefer to sort\n+\t     based on basic block and gimple_uid of the SSA_NAME_DEF_STMT.\n+\t     See PR60418.  */\n \t  gimple *stmta = SSA_NAME_DEF_STMT (oea->op);\n \t  gimple *stmtb = SSA_NAME_DEF_STMT (oeb->op);\n \t  basic_block bba = gimple_bb (stmta);\n \t  basic_block bbb = gimple_bb (stmtb);\n \t  if (bbb != bba)\n \t    {\n+\t      /* One of the SSA_NAMEs can be defined in oeN->stmt_to_insert\n+\t\t but the other might not.  */\n+\t      if (!bba)\n+\t\treturn 1;\n+\t      if (!bbb)\n+\t\treturn -1;\n+\t      /* If neither is, compare bb_rank.  */\n \t      if (bb_rank[bbb->index] != bb_rank[bba->index])\n \t\treturn bb_rank[bbb->index] - bb_rank[bba->index];\n \t    }\n-\t  else\n-\t    {\n-\t      bool da = reassoc_stmt_dominates_stmt_p (stmta, stmtb);\n-\t      bool db = reassoc_stmt_dominates_stmt_p (stmtb, stmta);\n-\t      if (da != db)\n-\t\treturn da ? 1 : -1;\n-\t    }\n-\t}\n \n-      if (SSA_NAME_VERSION (oeb->op) != SSA_NAME_VERSION (oea->op))\n-\treturn SSA_NAME_VERSION (oeb->op) > SSA_NAME_VERSION (oea->op) ? 1 : -1;\n+\t  bool da = reassoc_stmt_dominates_stmt_p (stmta, stmtb);\n+\t  bool db = reassoc_stmt_dominates_stmt_p (stmtb, stmta);\n+\t  if (da != db)\n+\t    return da ? 1 : -1;\n+\n+\t  return (SSA_NAME_VERSION (oeb->op) > SSA_NAME_VERSION (oea->op)\n+\t\t  ? 1 : -1);\n+\t}\n       else\n \treturn oeb->id > oea->id ? 1 : -1;\n     }"}]}