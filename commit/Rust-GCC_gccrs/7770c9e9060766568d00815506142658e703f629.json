{"sha": "7770c9e9060766568d00815506142658e703f629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3MGM5ZTkwNjA3NjY1NjhkMDA4MTU1MDYxNDI2NThlNzAzZjYyOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-01-09T21:29:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-01-09T21:29:07Z"}, "message": "re PR tree-optimization/55569 (ICE: in check_probability, at basic-block.h:944 with -ftree-vectorize)\n\n\n\tPR tree-optimization/55569\n\t* cfgloopmanip.c (scale_loop_profile): Make ITERATION_BOUND gcov_type.\n\t* cfgloop.h (scale_loop_profile): Likewise.\n\nFrom-SVN: r195067", "tree": {"sha": "c77375c482da17eb65c2be59bfe9f091ce996e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c77375c482da17eb65c2be59bfe9f091ce996e8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7770c9e9060766568d00815506142658e703f629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7770c9e9060766568d00815506142658e703f629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7770c9e9060766568d00815506142658e703f629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7770c9e9060766568d00815506142658e703f629/comments", "author": null, "committer": null, "parents": [{"sha": "a19b1432574df7f3c59b9668adc56141db4a3333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19b1432574df7f3c59b9668adc56141db4a3333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19b1432574df7f3c59b9668adc56141db4a3333"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "ddfbcffad435ca3f11872c36f8991d8c4e0a4ee2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7770c9e9060766568d00815506142658e703f629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7770c9e9060766568d00815506142658e703f629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7770c9e9060766568d00815506142658e703f629", "patch": "@@ -1,3 +1,9 @@\n+2013-01-09  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/55569\n+\t* cfgloopmanip.c (scale_loop_profile): Make ITERATION_BOUND gcov_type.\n+\t* cfgloop.h (scale_loop_profile): Likewise.\n+\n 2013-01-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/45375"}, {"sha": "2d90d38a738e278bfcefa404beada12803d708c7", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7770c9e9060766568d00815506142658e703f629/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7770c9e9060766568d00815506142658e703f629/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=7770c9e9060766568d00815506142658e703f629", "patch": "@@ -711,7 +711,7 @@ extern void unroll_and_peel_loops (int);\n extern void doloop_optimize_loops (void);\n extern void move_loop_invariants (void);\n extern bool finite_loop_p (struct loop *);\n-extern void scale_loop_profile (struct loop *loop, int scale, int iteration_bound);\n+extern void scale_loop_profile (struct loop *loop, int scale, gcov_type iteration_bound);\n extern vec<basic_block> get_loop_hot_path (const struct loop *loop);\n \n /* Returns the outermost loop of the loop nest that contains LOOP.*/"}, {"sha": "af29677da3c71e91f951511d8502d406dff15071", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7770c9e9060766568d00815506142658e703f629/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7770c9e9060766568d00815506142658e703f629/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=7770c9e9060766568d00815506142658e703f629", "patch": "@@ -481,7 +481,7 @@ scale_loop_frequencies (struct loop *loop, int num, int den)\n    to iterate too many times.  */\n \n void\n-scale_loop_profile (struct loop *loop, int scale, int iteration_bound)\n+scale_loop_profile (struct loop *loop, int scale, gcov_type iteration_bound)\n {\n   gcov_type iterations = expected_loop_iterations_unbounded (loop);\n   edge e;\n@@ -491,7 +491,7 @@ scale_loop_profile (struct loop *loop, int scale, int iteration_bound)\n     fprintf (dump_file, \";; Scaling loop %i with scale %f, \"\n \t     \"bounding iterations to %i from guessed %i\\n\",\n \t     loop->num, (double)scale / REG_BR_PROB_BASE,\n-\t     iteration_bound, (int)iterations);\n+\t     (int)iteration_bound, (int)iterations);\n \n   /* See if loop is predicted to iterate too many times.  */\n   if (iteration_bound && iterations > 0"}, {"sha": "56a6a487c8a2677b47ada4e5100951a979508d8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7770c9e9060766568d00815506142658e703f629/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7770c9e9060766568d00815506142658e703f629/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7770c9e9060766568d00815506142658e703f629", "patch": "@@ -1,3 +1,8 @@\n+2013-01-09  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/55569\n+\t* gcc.c-torture/compile/pr55569.c: New testcase.\n+\n 2013-01-09  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/47203"}, {"sha": "2a53c8039571ea3af08b67af455cdc42d9381b7e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr55569.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7770c9e9060766568d00815506142658e703f629/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55569.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7770c9e9060766568d00815506142658e703f629/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55569.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55569.c?ref=7770c9e9060766568d00815506142658e703f629", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-O1 -ftree-vectorize\" } */\n+int *bar (void);\n+\n+void\n+foo (void)\n+{\n+  long x;\n+  int *y = bar ();\n+    for (x = -1 / sizeof (int); x; --x, ++y)\n+       *y = 0;\n+}"}]}