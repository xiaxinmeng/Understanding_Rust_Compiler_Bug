{"sha": "9ffa621eadf61d2f13af900392d250870519d011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZmYTYyMWVhZGY2MWQyZjEzYWY5MDAzOTJkMjUwODcwNTE5ZDAxMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-01-25T12:01:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-25T12:01:54Z"}, "message": "re PR tree-optimization/47427 (ICE in process_constraint, at tree-ssa-structalias.c:2901)\n\n\tPR tree-optimization/47427\n\tPR tree-optimization/47428\n\t* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Don't\n\tcoalesce if the new root var would be TREE_READONLY.\n\n\t* gcc.c-torture/compile/pr47427.c: New test.\n\t* gcc.c-torture/compile/pr47428.c: New test.\n\nFrom-SVN: r169226", "tree": {"sha": "aefd73a972043ecfa734d44e4273ecdb145d0020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aefd73a972043ecfa734d44e4273ecdb145d0020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ffa621eadf61d2f13af900392d250870519d011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffa621eadf61d2f13af900392d250870519d011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ffa621eadf61d2f13af900392d250870519d011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffa621eadf61d2f13af900392d250870519d011/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae5b7e39b62c86ab13ad84a911d808f12e54a111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5b7e39b62c86ab13ad84a911d808f12e54a111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae5b7e39b62c86ab13ad84a911d808f12e54a111"}], "stats": {"total": 100, "additions": 98, "deletions": 2}, "files": [{"sha": "14a9052d340a1a7f05c56b3f1fea629a473745c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa621eadf61d2f13af900392d250870519d011/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa621eadf61d2f13af900392d250870519d011/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ffa621eadf61d2f13af900392d250870519d011", "patch": "@@ -1,3 +1,10 @@\n+2011-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47427\n+\tPR tree-optimization/47428\n+\t* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Don't\n+\tcoalesce if the new root var would be TREE_READONLY.\n+\n 2011-01-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47414"}, {"sha": "66ded377ce3109b59a73be4e6cfce7a4b3d06597", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ffa621eadf61d2f13af900392d250870519d011", "patch": "@@ -1,3 +1,10 @@\n+2011-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47427\n+\tPR tree-optimization/47428\n+\t* gcc.c-torture/compile/pr47427.c: New test.\n+\t* gcc.c-torture/compile/pr47428.c: New test.\n+\n 2011-01-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47411"}, {"sha": "4f0b98e20c67f69e15f75997c943b754815520df", "filename": "gcc/testsuite/gcc.c-torture/compile/pr47427.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47427.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47427.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47427.c?ref=9ffa621eadf61d2f13af900392d250870519d011", "patch": "@@ -0,0 +1,28 @@\n+/* PR tree-optimization/47427 */\n+\n+char *g, *h;\n+\n+int\n+bar (unsigned char x, const int y)\n+{\n+lab:\n+  for (; h; g = h)\n+    for (g = 0; h; h++)\n+      {\n+\tint a = 1;\n+\tif (h)\n+\t  {\n+\t    if (a)\n+\t      goto lab;\n+\t    return y;\n+\t  }\n+      }\n+  return x;\n+}\n+\n+void\n+foo (void)\n+{\n+  if (bar (0, 1))\n+    bar (1, 0);\n+}"}, {"sha": "0c4ccc9127d2b06de3ae6cfa14df74b0ee705871", "filename": "gcc/testsuite/gcc.c-torture/compile/pr47428.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47428.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47428.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47428.c?ref=9ffa621eadf61d2f13af900392d250870519d011", "patch": "@@ -0,0 +1,42 @@\n+/* PR tree-optimization/47428 */\n+\n+struct S\n+{\n+  int s;\n+} a;\n+int b;\n+\n+void bar (struct S);\n+\n+int\n+baz (int x __attribute__((unused)), int y)\n+{\n+  int i;\n+  for (i = 0; i < 1; i = 1)\n+    for (y = 0; y < 1; y = 1);\n+  return y;\n+}\n+\n+void\n+foo (void)\n+{\n+  fn (0);\n+}\n+\n+int\n+fn (const int x, int y __attribute__((unused)))\n+{\n+  if (baz (baz (0, x), 0))\n+    return 0;\n+  else\n+    bar (a);\n+  return 0;\n+}\n+\n+void\n+bar (struct S x)\n+{\n+  for (;;)\n+    for (; x.s;)\n+      b = 0 ? : baz (0, 0);\n+}"}, {"sha": "dfc0b4edbbe201298ffa60dcc50b9194ce0225b9", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa621eadf61d2f13af900392d250870519d011/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=9ffa621eadf61d2f13af900392d250870519d011", "patch": "@@ -1,5 +1,5 @@\n /* Rename SSA copies.\n-   Copyright (C) 2004, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2004, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod <amacleod@redhat.com>\n \n@@ -170,7 +170,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n       return false;\n     }\n \n-  /* Never attempt to coalesce 2 difference parameters.  */\n+  /* Never attempt to coalesce 2 different parameters.  */\n   if (TREE_CODE (root1) == PARM_DECL && TREE_CODE (root2) == PARM_DECL)\n     {\n       if (debug)\n@@ -226,6 +226,18 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n       ign2 = false;\n     }\n \n+  /* Don't coalesce if the new chosen root variable would be read-only.\n+     If both ign1 && ign2, then the root var of the larger partition\n+     wins, so reject in that case if any of the root vars is TREE_READONLY.\n+     Otherwise reject only if the root var, on which replace_ssa_name_symbol\n+     will be called below, is readonly.  */\n+  if ((TREE_READONLY (root1) && ign2) || (TREE_READONLY (root2) && ign1))\n+    {\n+      if (debug)\n+\tfprintf (debug, \" : Readonly variable.  No coalesce.\\n\");\n+      return false;\n+    }\n+\n   /* Don't coalesce if the two variables aren't type compatible .  */\n   if (!types_compatible_p (TREE_TYPE (root1), TREE_TYPE (root2))\n       /* There is a disconnect between the middle-end type-system and"}]}