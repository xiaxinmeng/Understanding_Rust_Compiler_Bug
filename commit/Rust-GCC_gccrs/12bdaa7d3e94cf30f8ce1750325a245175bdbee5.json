{"sha": "12bdaa7d3e94cf30f8ce1750325a245175bdbee5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJiZGFhN2QzZTk0Y2YzMGY4Y2UxNzUwMzI1YTI0NTE3NWJkYmVlNQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-01-27T23:59:41Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-05-09T01:48:52Z"}, "message": "cris.md: Post-reload, split/generate clobberless zero source moves\n\nA separated follow-up to the previous change: Also emit moves\nfrom zero as not clobbering condition-codes.\n\n(note: actually folded into the previous ChangeLog-entry)\ngcc:\n\t* config/cris/cris.md (\"movsi\"): For a zero-source post-reload,\n\tgenerate a clobberless variant.\n\t(\"*mov_fromzero<mode>_split\"): New split.\n\t(\"*mov_fromzero<mode>\"): New insn.", "tree": {"sha": "f943b7fe887870eb89d3e1bf05c5b06bf0072545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f943b7fe887870eb89d3e1bf05c5b06bf0072545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12bdaa7d3e94cf30f8ce1750325a245175bdbee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12bdaa7d3e94cf30f8ce1750325a245175bdbee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12bdaa7d3e94cf30f8ce1750325a245175bdbee5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12bdaa7d3e94cf30f8ce1750325a245175bdbee5/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49cee5c8dce341f688741e5b093f6b5560c8090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49cee5c8dce341f688741e5b093f6b5560c8090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e49cee5c8dce341f688741e5b093f6b5560c8090"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "b6f7d46adeb5beb4a1fefda09c95a5703f72c81f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12bdaa7d3e94cf30f8ce1750325a245175bdbee5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12bdaa7d3e94cf30f8ce1750325a245175bdbee5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12bdaa7d3e94cf30f8ce1750325a245175bdbee5", "patch": "@@ -43,11 +43,14 @@\n \t* config/cris/cris.h (REVERSIBLE_CC_MODE): Define to true.\n \n \t* config/cris/cris.md (\"movsi\"): For memory destination\n-\tpost-reload, generate clobberless variant.\n+\tpost-reload, generate clobberless variant.  Similarly for a\n+\tzero-source post-reload.\n \t(\"*mov_tomem<mode>_split\"): New split.\n \t(\"*mov_tomem<mode>\"): New insn.\n \t(\"enabled\", mov_tomem_enabled): Define and use to exclude \"x\" ->\n \t\"Q>m\" for less-than-SImode.\n+\t(\"*mov_fromzero<mode>_split\"): New split.\n+\t(\"*mov_fromzero<mode>\"): New insn.\n \n 2020-05-08  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "bf2cf96638766584ee172f2df21e47f615dbc5a8", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12bdaa7d3e94cf30f8ce1750325a245175bdbee5/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12bdaa7d3e94cf30f8ce1750325a245175bdbee5/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=12bdaa7d3e94cf30f8ce1750325a245175bdbee5", "patch": "@@ -449,8 +449,9 @@\n \n    /* At post-reload time, we'll get here for e.g. split multi-mode insns\n       with a memory destination.  Go directly to the clobber-less variant.\n-      FIXME: Also applies to zero source.  */\n-   if (MEM_P (operands[0]) && reload_completed)\n+      FIXME: Also applies to special-register source or destination.  */\n+   if (reload_completed\n+       && (MEM_P (operands[0]) || operands[1] == const0_rtx))\n      {\n         emit_insn (gen_rtx_SET (operands[0], operands[1]));\n         DONE;\n@@ -697,6 +698,20 @@\n    move %1,%0\"\n   [(set_attr \"slottable\" \"yes,yes,yes,no,no,no\")\n    (set_attr \"enabled\" \"<mov_tomem_enabled>\")])\n+\n+(define_split ;; \"*mov_fromzero<mode>_split\"\n+  [(set (match_operand:BWD 0 \"register_operand\") (const_int 0))\n+   (clobber (reg:CC CRIS_CC0_REGNUM))]\n+  \"reload_completed\n+   && REGNO(operands[0]) <= CRIS_LAST_GENERAL_REGISTER\"\n+  [(set (match_dup 0) (const_int 0))]\n+  \"\")\n+\n+(define_insn \"*mov_fromzero<mode>\"\n+  [(set (match_operand:BWD 0 \"register_operand\" \"=r\") (const_int 0))]\n+  \"reload_completed\"\n+  \"clear<m> %0\"\n+  [(set_attr \"slottable\" \"yes\")])\n \f\n ;; Movem patterns.  Primarily for use in function prologue and epilogue.\n ;; Unfortunately, movem stores R0 in the highest memory location, thus"}]}