{"sha": "688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4YTEwYzJiOTM0NmI3YzhkM2Q5YzVjY2IxMGIzNThlYWMzNzcwZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-04T15:17:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-04T15:17:10Z"}, "message": "lto-symtab.c (lto_cgraph_replace_node): Do not remove edges; node will be removed anyway.\n\n\n\t* lto-symtab.c (lto_cgraph_replace_node): Do not remove edges;\n\tnode will be removed anyway.\n\t(lto_varpool_replace_node): Allow also unanalyzed nodes;\n\trelink aliases of node into prevailing node.\n\t* varpool.c (varpool_remove_node): Remove aliases properly;\n\twhen removing node, remove all its aliases too; remove DECL_INITIAL\n\tof removed node; ggc_free the varpool node.\n\nFrom-SVN: r159031", "tree": {"sha": "1ff2112e47dbaf74edf8d3aa4173f865ba20cc41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ff2112e47dbaf74edf8d3aa4173f865ba20cc41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/comments", "author": null, "committer": null, "parents": [{"sha": "4ac4b596988312f096f860d3e10579af438e3085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac4b596988312f096f860d3e10579af438e3085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac4b596988312f096f860d3e10579af438e3085"}], "stats": {"total": 61, "additions": 47, "deletions": 14}, "files": [{"sha": "fb76cf632d1beda491fdeccd43843dd642cd72b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "patch": "@@ -1,3 +1,13 @@\n+2010-05-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-symtab.c (lto_cgraph_replace_node): Do not remove edges;\n+\tnode will be removed anyway.\n+\t(lto_varpool_replace_node): Allow also unanalyzed nodes;\n+\trelink aliases of node into prevailing node.\n+\t* varpool.c (varpool_remove_node): Remove aliases properly;\n+\twhen removing node, remove all its aliases too; remove DECL_INITIAL\n+\tof removed node; ggc_free the varpool node.\n+\n 2010-05-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43879"}, {"sha": "bd7022b31fd30342ddeee75d860bbeefd5ee658f", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "patch": "@@ -215,15 +215,6 @@ lto_cgraph_replace_node (struct cgraph_node *node,\n       cgraph_redirect_edge_callee (e, prevailing_node);\n     }\n \n-  /* There are not supposed to be any outgoing edges from a node we\n-     replace.  Still this can happen for multiple instances of weak\n-     functions.  */\n-  for (e = node->callees; e; e = next)\n-    {\n-      next = e->next_callee;\n-      cgraph_remove_edge (e);\n-    }\n-\n   if (node->same_body)\n     {\n       struct cgraph_node *alias;\n@@ -257,9 +248,28 @@ lto_varpool_replace_node (struct varpool_node *vnode,\n   /* Merge node flags.  */\n   if (vnode->needed)\n     {\n-      gcc_assert (prevailing_node->analyzed);\n+      gcc_assert (!vnode->analyzed || prevailing_node->analyzed);\n       varpool_mark_needed_node (prevailing_node);\n     }\n+  /* Relink aliases.  */\n+  if (vnode->extra_name && !vnode->alias)\n+    {\n+      struct varpool_node *alias, *last;\n+      for (alias = vnode->extra_name;\n+\t   alias; alias = alias->next)\n+\t{\n+\t  last = alias;\n+\t  alias->extra_name = prevailing_node;\n+\t}\n+\n+      if (prevailing_node->extra_name)\n+\t{\n+\t  last->next = prevailing_node->extra_name;\n+\t  prevailing_node->extra_name->prev = last;\n+\t}\n+      prevailing_node->extra_name = vnode->extra_name;\n+      vnode->extra_name = NULL;\n+    }\n   gcc_assert (!vnode->finalized || prevailing_node->finalized);\n   gcc_assert (!vnode->analyzed || prevailing_node->analyzed);\n "}, {"sha": "76d8f724bcb6ada3904a1f332908a714561268e9", "filename": "gcc/varpool.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a10c2b9346b7c8d3d9c5ccb10b358eac3770f/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=688a10c2b9346b7c8d3d9c5ccb10b358eac3770f", "patch": "@@ -157,14 +157,25 @@ varpool_remove_node (struct varpool_node *node)\n   gcc_assert (*slot == node);\n   htab_clear_slot (varpool_hash, slot);\n   gcc_assert (!varpool_assembled_nodes_queue);\n+  if (!node->alias)\n+    while (node->extra_name)\n+      varpool_remove_node (node->extra_name);\n   if (node->next)\n     node->next->prev = node->prev;\n   if (node->prev)\n     node->prev->next = node->next;\n-  else if (node->next)\n+  else\n     {\n-      gcc_assert (varpool_nodes == node);\n-      varpool_nodes = node->next;\n+      if (node->alias)\n+\t{\n+          gcc_assert (node->extra_name->extra_name == node);\n+\t  node->extra_name->extra_name = node->next;\n+\t}\n+      else\n+\t{\n+          gcc_assert (varpool_nodes == node);\n+          varpool_nodes = node->next;\n+\t}\n     }\n   if (varpool_first_unanalyzed_node == node)\n     varpool_first_unanalyzed_node = node->next_needed;\n@@ -182,7 +193,9 @@ varpool_remove_node (struct varpool_node *node)\n       gcc_assert (varpool_nodes_queue == node);\n       varpool_nodes_queue = node->next_needed;\n     }\n-  node->decl = NULL;\n+  if (DECL_INITIAL (node->decl))\n+    DECL_INITIAL (node->decl) = error_mark_node;\n+  ggc_free (node);\n }\n \n /* Dump given cgraph node.  */"}]}