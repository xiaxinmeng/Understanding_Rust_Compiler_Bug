{"sha": "68c0ef75f351958c900e278f7fe8577274cf621f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjMGVmNzVmMzUxOTU4YzkwMGUyNzhmN2ZlODU3NzI3NGNmNjIxZg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2011-10-07T13:50:01Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2011-10-07T13:50:01Z"}, "message": "s390.c (s390_emit_tls_call_insn): Remove assertion.\n\n2011-10-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.c (s390_emit_tls_call_insn): Remove assertion.\n\tLoad GOT pointer for non-pic builds.\n\t(s390_load_got): Replace pic_offset_table_rtx with hardcoded r12.\n\t(s390_emit_call): Likewise.\n\nFrom-SVN: r179658", "tree": {"sha": "0f5f655d1af6d1b7a11d136b7c845feef28c4a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f5f655d1af6d1b7a11d136b7c845feef28c4a3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c0ef75f351958c900e278f7fe8577274cf621f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c0ef75f351958c900e278f7fe8577274cf621f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c0ef75f351958c900e278f7fe8577274cf621f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c0ef75f351958c900e278f7fe8577274cf621f/comments", "author": null, "committer": null, "parents": [{"sha": "8be5e1cc7d2c6d8fbc9a9ca8b199b1ae258fd180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be5e1cc7d2c6d8fbc9a9ca8b199b1ae258fd180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be5e1cc7d2c6d8fbc9a9ca8b199b1ae258fd180"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "695ba66b8fad09773215173e109d3a5403f711ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c0ef75f351958c900e278f7fe8577274cf621f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c0ef75f351958c900e278f7fe8577274cf621f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68c0ef75f351958c900e278f7fe8577274cf621f", "patch": "@@ -1,3 +1,10 @@\n+2011-10-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_emit_tls_call_insn): Remove assertion.\n+\tLoad GOT pointer for non-pic builds.\n+\t(s390_load_got): Replace pic_offset_table_rtx with hardcoded r12.\n+\t(s390_emit_call): Likewise.\n+\n 2011-10-07  Tom de Vries  <tom@codesourcery.com>\n \n \tPR middle-end/50527"}, {"sha": "ffca91a107a6413984b9cc8d7a642dfb728b64a9", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c0ef75f351958c900e278f7fe8577274cf621f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c0ef75f351958c900e278f7fe8577274cf621f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=68c0ef75f351958c900e278f7fe8577274cf621f", "patch": "@@ -3604,7 +3604,8 @@ s390_emit_tls_call_insn (rtx result_reg, rtx tls_call)\n {\n   rtx insn;\n \n-  gcc_assert (flag_pic);\n+  if (!flag_pic)\n+    emit_insn (s390_load_got ());\n \n   if (!s390_tls_symbol)\n     s390_tls_symbol = gen_rtx_SYMBOL_REF (Pmode, \"__tls_get_offset\");\n@@ -7859,6 +7860,12 @@ s390_load_got (void)\n {\n   rtx insns;\n \n+  /* We cannot use pic_offset_table_rtx here since we use this\n+     function also for non-pic if __tls_get_offset is called and in\n+     that case PIC_OFFSET_TABLE_REGNUM as well as pic_offset_table_rtx\n+     aren't usable.  */\n+  rtx got_rtx = gen_rtx_REG (Pmode, 12);\n+\n   if (!got_symbol)\n     {\n       got_symbol = gen_rtx_SYMBOL_REF (Pmode, \"_GLOBAL_OFFSET_TABLE_\");\n@@ -7869,7 +7876,7 @@ s390_load_got (void)\n \n   if (TARGET_CPU_ZARCH)\n     {\n-      emit_move_insn (pic_offset_table_rtx, got_symbol);\n+      emit_move_insn (got_rtx, got_symbol);\n     }\n   else\n     {\n@@ -7880,13 +7887,13 @@ s390_load_got (void)\n       offset = gen_rtx_CONST (Pmode, offset);\n       offset = force_const_mem (Pmode, offset);\n \n-      emit_move_insn (pic_offset_table_rtx, offset);\n+      emit_move_insn (got_rtx, offset);\n \n       offset = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, XEXP (offset, 0)),\n \t\t\t       UNSPEC_LTREL_BASE);\n-      offset = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, offset);\n+      offset = gen_rtx_PLUS (Pmode, got_rtx, offset);\n \n-      emit_move_insn (pic_offset_table_rtx, offset);\n+      emit_move_insn (got_rtx, offset);\n     }\n \n   insns = get_insns ();\n@@ -9827,8 +9834,7 @@ s390_emit_call (rtx addr_location, rtx tls_call, rtx result_reg,\n       /* s390_function_ok_for_sibcall should\n \t have denied sibcalls in this case.  */\n       gcc_assert (retaddr_reg != NULL_RTX);\n-\n-      use_reg (&CALL_INSN_FUNCTION_USAGE (insn), pic_offset_table_rtx);\n+      use_reg (&CALL_INSN_FUNCTION_USAGE (insn), gen_rtx_REG (Pmode, 12));\n     }\n   return insn;\n }"}]}