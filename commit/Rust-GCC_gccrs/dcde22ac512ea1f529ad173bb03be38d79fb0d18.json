{"sha": "dcde22ac512ea1f529ad173bb03be38d79fb0d18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNkZTIyYWM1MTJlYTFmNTI5YWQxNzNiYjAzYmUzOGQ3OWZiMGQxOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-07-03T18:57:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-07-03T18:57:11Z"}, "message": "re PR target/36710 (FAIL: gcc.dg/torture/fp-int-convert-float128.c  -Os  (internal compiler error))\n\n\tPR target/36710\n\t* config/i386/i386.md (mode): Add TF to mode attribute.\n\t(*pushtf_sse): New insn pattern.\n\t(pushtf splitters): New splitters.\n\ntestsuite/ChangeLog:\n\n\tPR target/36710\n\t* gcc.target/i386/float128-2.c: New test.\n\nFrom-SVN: r137427", "tree": {"sha": "c5a1a915eabc2d520c8e2d5dd97621bc25d52c92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5a1a915eabc2d520c8e2d5dd97621bc25d52c92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcde22ac512ea1f529ad173bb03be38d79fb0d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcde22ac512ea1f529ad173bb03be38d79fb0d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcde22ac512ea1f529ad173bb03be38d79fb0d18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcde22ac512ea1f529ad173bb03be38d79fb0d18/comments", "author": null, "committer": null, "parents": [{"sha": "9d7e5c4d3f033377b19c3865a5c4a336c8b1a7cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7e5c4d3f033377b19c3865a5c4a336c8b1a7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7e5c4d3f033377b19c3865a5c4a336c8b1a7cb"}], "stats": {"total": 93, "additions": 74, "deletions": 19}, "files": [{"sha": "da6051d1fda5d5e97a582b9ed11b51d793528ba3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcde22ac512ea1f529ad173bb03be38d79fb0d18", "patch": "@@ -1,3 +1,10 @@\n+2008-07-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/36710\n+\t* config/i386/i386.md (mode): Add TF to \"mode\" attribute.\n+\t(*pushtf_sse): New insn pattern.\n+\t(pushtf splitters): New splitters.\n+\n 2008-07-03  Michael Meissner  <gnu@the-meissners.org>\n \n \tPR middle-end/35736\n@@ -292,19 +299,19 @@\n \n 2008-07-01  Martin Jambor  <mjambor@suse.cz>\n \n-        * Makefile.in (tree-switch-conversion.o): Add.\n-        (OBJS-common): Add tree-swtch-conversion.o.\n-        * passes.c (init_optimization_passes): Add pass_convert_switch.\n-        * tree-pass.h: (pass_convert_switch): Add.\n-        * tree-switch-conversion.c: New file.\n-        * gcc.dg/tree-ssa/cswtch.c: New testcase.\n-        * common.opt (ftree-cswtch): New option.\n-        * params.h (PARAM_SWITCH_CONVERSION_BRANCH_RATIO): New parameter.\n-        * params.def (PARAM_SWITCH_CONVERSION_BRANCH_RATIO): New parameter.\n-        * opts.c (decode_options): Set flag_tree_switch_conversion when\n-        optimization level is >= 2.\n-        * doc/invoke.texi (Optimize Options): Added description of\n-        -ftree-swtch-conversion and switch-conversion-max-branch-ratio.\n+\t* Makefile.in (tree-switch-conversion.o): Add.\n+\t(OBJS-common): Add tree-swtch-conversion.o.\n+\t* passes.c (init_optimization_passes): Add pass_convert_switch.\n+\t* tree-pass.h: (pass_convert_switch): Add.\n+\t* tree-switch-conversion.c: New file.\n+\t* gcc.dg/tree-ssa/cswtch.c: New testcase.\n+\t* common.opt (ftree-cswtch): New option.\n+\t* params.h (PARAM_SWITCH_CONVERSION_BRANCH_RATIO): New parameter.\n+\t* params.def (PARAM_SWITCH_CONVERSION_BRANCH_RATIO): New parameter.\n+\t* opts.c (decode_options): Set flag_tree_switch_conversion when\n+\toptimization level is >= 2.\n+\t* doc/invoke.texi (Optimize Options): Added description of\n+\t-ftree-swtch-conversion and switch-conversion-max-branch-ratio.\n \n 2008-06-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -324,7 +331,7 @@\n \n \tPR rtl-optimization/34744\n \t* df-scan.c (df_scan_free_ref_vec, df_scan_free_mws_vec): New macros.\n-       \t(df_scan_free_internal): Free data structures not\n+\t(df_scan_free_internal): Free data structures not\n \tallocated in storage pools.\n \t(df_mw_hardreg_chain_delete_eq_uses): Use df_scan_free_mws_vec.\n \t(df_refs_add_to_chains): Use df_scan_free_ref_vec and"}, {"sha": "6c06184f8796ce504217c435786e01c653dc7f89", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=dcde22ac512ea1f529ad173bb03be38d79fb0d18", "patch": "@@ -289,7 +289,7 @@\n \n ;; Main data type used by the insn\n (define_attr \"mode\"\n-  \"unknown,none,QI,HI,SI,DI,SF,DF,XF,TI,V4SF,V2DF,V2SF,V1DF\"\n+  \"unknown,none,QI,HI,SI,DI,TI,SF,DF,XF,TF,V4SF,V2DF,V2SF,V1DF\"\n   (const_string \"unknown\"))\n \n ;; The CPU unit operations uses.\n@@ -3311,6 +3311,34 @@\n \t\t   (const_string \"TI\"))]\n \t       (const_string \"DI\")))])\n \n+(define_insn \"*pushtf_sse\"\n+  [(set (match_operand:TF 0 \"push_operand\" \"=<,<,<\")\n+\t(match_operand:TF 1 \"general_no_elim_operand\" \"x,Fo,*r\"))]\n+  \"TARGET_SSE2\"\n+{\n+  /* This insn should be already split before reg-stack.  */\n+  gcc_unreachable ();\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"sse,*,*\")\n+   (set_attr \"mode\" \"TF,SI,SI\")])\n+\n+(define_split\n+  [(set (match_operand:TF 0 \"push_operand\" \"\")\n+\t(match_operand:TF 1 \"general_operand\" \"\"))]\n+  \"TARGET_SSE2 && reload_completed\n+   && !SSE_REG_P (operands[1])\"\n+  [(const_int 0)]\n+  \"ix86_split_long_move (operands); DONE;\")\n+\n+(define_split\n+  [(set (match_operand:TF 0 \"push_operand\" \"\")\n+\t(match_operand:TF 1 \"any_fp_register_operand\" \"\"))]\n+  \"TARGET_SSE2\"\n+  [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (const_int -16)))\n+   (set (mem:TF (reg:P SP_REG)) (match_dup 1))]\n+  \"\")\n+\n (define_split\n   [(set (match_operand 0 \"nonimmediate_operand\" \"\")\n \t(match_operand 1 \"general_operand\" \"\"))]"}, {"sha": "4f4e3b92fdf3e642ab7bce6a67acee6b892da3f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcde22ac512ea1f529ad173bb03be38d79fb0d18", "patch": "@@ -1,3 +1,8 @@\n+2008-07-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/36710\n+\t* gcc.target/i386/float128-2.c: New test.\n+\n 2008-07-03  Michael Meissner  <gnu@the-meissners.org>\n \n \tPR middle-end/35736\n@@ -14,8 +19,7 @@\n \n 2008-07-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* gcc.dg/compat/struct-by-value-17a_main.c: Remove duplicated\n-\tcode.\n+\t* gcc.dg/compat/struct-by-value-17a_main.c: Remove duplicated code.\n \n 2008-07-03  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n@@ -40,8 +44,7 @@\n \n 2008-07-02  Joseph Myers  <joseph@codesourcery.com>\n \n-\t* g++.dg/compat/struct-layout-1.exp: Compile generator on build\n-\tsystem.\n+\t* g++.dg/compat/struct-layout-1.exp: Compile generator on build system.\n \t* gcc.dg/compat/struct-layout-1.exp: Likewise.\n \t* objc.dg/gnu-encoding/gnu-encoding.exp: Likewise.\n "}, {"sha": "94408d2ef35b3a913ccbf927a7d9eb1897a9fad7", "filename": "gcc/testsuite/gcc.target/i386/float128-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffloat128-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcde22ac512ea1f529ad173bb03be38d79fb0d18/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffloat128-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffloat128-2.c?ref=dcde22ac512ea1f529ad173bb03be38d79fb0d18", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/36710 */\n+\n+/* { dg-do run { target *-*-linux* *-*-darwin* } } */\n+/* { dg-options \"-Os -msse2\" } */\n+\n+#include \"sse2-check.h\"\n+\n+extern void abort (void);\n+\n+static void\n+sse2_test (void)\n+{\n+  static volatile __float128 a = 123.0q;\n+\n+  if ((int) a != 123)\n+    abort ();\n+}"}]}