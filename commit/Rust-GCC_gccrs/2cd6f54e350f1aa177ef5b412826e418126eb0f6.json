{"sha": "2cd6f54e350f1aa177ef5b412826e418126eb0f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNkNmY1NGUzNTBmMWFhMTc3ZWY1YjQxMjgyNmU0MTgxMjZlYjBmNg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-10-15T13:55:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:55:07Z"}, "message": "exp_dist.adb (Add_RACW_Primitive_Declarations_And_Bodies): Do not attempt to generate stubs for hidden primitive operations.\n\n2007-10-15  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb (Add_RACW_Primitive_Declarations_And_Bodies): Do not\n\tattempt to generate stubs for hidden primitive operations.\n\nFrom-SVN: r129325", "tree": {"sha": "6b1c6fe4e055d266993eeb30688a4fd1640d570f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b1c6fe4e055d266993eeb30688a4fd1640d570f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cd6f54e350f1aa177ef5b412826e418126eb0f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd6f54e350f1aa177ef5b412826e418126eb0f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd6f54e350f1aa177ef5b412826e418126eb0f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd6f54e350f1aa177ef5b412826e418126eb0f6/comments", "author": null, "committer": null, "parents": [{"sha": "3c2c15ab48de03a93bd80283b122977e9c04bf45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2c15ab48de03a93bd80283b122977e9c04bf45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2c15ab48de03a93bd80283b122977e9c04bf45"}], "stats": {"total": 138, "additions": 74, "deletions": 64}, "files": [{"sha": "455cdb19e8baafa4889e85d1b7d802eb5730e180", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 74, "deletions": 64, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd6f54e350f1aa177ef5b412826e418126eb0f6/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd6f54e350f1aa177ef5b412826e418126eb0f6/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=2cd6f54e350f1aa177ef5b412826e418126eb0f6", "patch": "@@ -877,6 +877,8 @@ package body Exp_Dist is\n       Subp_Stubs          : Node_Id;\n       Subp_Str            : String_Id;\n \n+      pragma Warnings (Off, Subp_Str);\n+\n    begin\n       --  The first thing added is an instantiation of the generic package\n       --  System.Partition_Interface.RCI_Locator with the name of this remote\n@@ -900,15 +902,14 @@ package body Exp_Dist is\n       PolyORB_Support.Reserve_NamingContext_Methods;\n \n       Current_Declaration := First (Visible_Declarations (Pkg_Spec));\n-\n       while Present (Current_Declaration) loop\n          if Nkind (Current_Declaration) = N_Subprogram_Declaration\n            and then Comes_From_Source (Current_Declaration)\n          then\n-            Assign_Subprogram_Identifier (\n-              Defining_Unit_Name (Specification (Current_Declaration)),\n-              Current_Subprogram_Number,\n-              Subp_Str);\n+            Assign_Subprogram_Identifier\n+              (Defining_Unit_Name (Specification (Current_Declaration)),\n+               Current_Subprogram_Number,\n+               Subp_Str);\n \n             Subp_Stubs :=\n               Build_Subprogram_Calling_Stubs (\n@@ -952,9 +953,9 @@ package body Exp_Dist is\n         (Loc         : Source_Ptr;\n          Parameter   : Entity_Id;\n          Constrained : Boolean) return Node_Id;\n-      --  Return an expression that denotes the parameter passing\n-      --  mode to be used for Parameter in distribution stubs,\n-      --  where Constrained is Parameter's constrained status.\n+      --  Return an expression that denotes the parameter passing mode to be\n+      --  used for Parameter in distribution stubs, where Constrained is\n+      --  Parameter's constrained status.\n \n       ----------------------------\n       -- Parameter_Passing_Mode --\n@@ -1263,7 +1264,9 @@ package body Exp_Dist is\n             Current_Primitive := Node (Current_Primitive_Elmt);\n \n             --  Copy the primitive of all the parents, except predefined ones\n-            --  that are not remotely dispatching.\n+            --  that are not remotely dispatching. Also omit hidden primitives\n+            --  (occurs in the case of primitives of interface progenitors\n+            --  other than immediate ancestors of the Designated_Type).\n \n             if Chars (Current_Primitive) /= Name_uSize\n               and then Chars (Current_Primitive) /= Name_uAlignment\n@@ -1273,6 +1276,7 @@ package body Exp_Dist is\n                  Is_TSS (Current_Primitive, TSS_Stream_Output) or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Read)   or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Write))\n+              and then not Is_Hidden (Current_Primitive)\n             then\n                --  The first thing to do is build an up-to-date copy of the\n                --  spec with all the formals referencing Designated_Type\n@@ -2447,6 +2451,8 @@ package body Exp_Dist is\n             Current_Subp_Str    : String_Id;\n             Current_Subp_Number : Int := First_RCI_Subprogram_Id;\n \n+            pragma Warnings (Off, Current_Subp_Str);\n+\n          begin\n             --  Build_Subprogram_Id is called outside of the context of\n             --  generating calling or receiving stubs. Hence we are processing\n@@ -3748,8 +3754,9 @@ package body Exp_Dist is\n          --  case statement will be made on the Subprogram_Id to dispatch\n          --  to the right subprogram.\n \n-         All_Calls_Remote_E := Boolean_Literals (\n-           Has_All_Calls_Remote (Defining_Entity (Pkg_Spec)));\n+         All_Calls_Remote_E :=\n+           Boolean_Literals\n+             (Has_All_Calls_Remote (Defining_Entity (Pkg_Spec)));\n \n          Overload_Counter_Table.Reset;\n \n@@ -3759,8 +3766,7 @@ package body Exp_Dist is\n               and then Comes_From_Source (Current_Declaration)\n             then\n                declare\n-                  Loc : constant Source_Ptr :=\n-                          Sloc (Current_Declaration);\n+                  Loc : constant Source_Ptr := Sloc (Current_Declaration);\n                   --  While specifically processing Current_Declaration, use\n                   --  its Sloc as the location of all generated nodes.\n \n@@ -3769,6 +3775,7 @@ package body Exp_Dist is\n                                  (Specification (Current_Declaration));\n \n                   Subp_Val : String_Id;\n+                  pragma Warnings (Off, Subp_Val);\n \n                begin\n                   --  Build receiving stub\n@@ -3787,22 +3794,19 @@ package body Exp_Dist is\n                   --  Build RAS proxy\n \n                   Add_RAS_Proxy_And_Analyze (Decls,\n-                    Vis_Decl           =>\n-                      Current_Declaration,\n-                    All_Calls_Remote_E =>\n-                      All_Calls_Remote_E,\n-                    Proxy_Object_Addr  =>\n-                      Proxy_Object_Addr);\n+                    Vis_Decl           => Current_Declaration,\n+                    All_Calls_Remote_E => All_Calls_Remote_E,\n+                    Proxy_Object_Addr  => Proxy_Object_Addr);\n \n                   --  Compute distribution identifier\n \n-                  Assign_Subprogram_Identifier (\n-                    Subp_Def,\n-                    Current_Subprogram_Number,\n-                    Subp_Val);\n+                  Assign_Subprogram_Identifier\n+                    (Subp_Def,\n+                     Current_Subprogram_Number,\n+                     Subp_Val);\n \n-                  pragma Assert (Current_Subprogram_Number =\n-                    Get_Subprogram_Id (Subp_Def));\n+                  pragma Assert\n+                    (Current_Subprogram_Number = Get_Subprogram_Id (Subp_Def));\n \n                   --  Add subprogram descriptor (RCI_Subp_Info) to the\n                   --  subprograms table for this receiver. The aggregate\n@@ -7029,8 +7033,7 @@ package body Exp_Dist is\n               and then Comes_From_Source (Current_Declaration)\n             then\n                declare\n-                  Loc : constant Source_Ptr :=\n-                          Sloc (Current_Declaration);\n+                  Loc : constant Source_Ptr := Sloc (Current_Declaration);\n                   --  While specifically processing Current_Declaration, use\n                   --  its Sloc as the location of all generated nodes.\n \n@@ -7455,7 +7458,6 @@ package body Exp_Dist is\n \n          Current_Parameter := First (Ordered_Parameters_List);\n          while Present (Current_Parameter) loop\n-\n             if Is_RACW_Controlling_Formal (Current_Parameter, Stub_Type) then\n                Is_Controlling_Formal := True;\n                Is_First_Controlling_Formal :=\n@@ -8522,10 +8524,12 @@ package body Exp_Dist is\n             Item := First (CI);\n             while Present (Item) loop\n                Def := Defining_Identifier (Item);\n+\n                if not Is_Internal_Name (Chars (Def)) then\n                   Add_Process_Element\n                     (Stmts, Container, Counter, Rec, Def);\n                end if;\n+\n                Next (Item);\n             end loop;\n \n@@ -8861,7 +8865,6 @@ package body Exp_Dist is\n                                       Alt_List));\n \n                               Variant := First_Non_Pragma (Variants (Field));\n-\n                               while Present (Variant) loop\n                                  Choice_List := New_Copy_List_Tree\n                                    (Discrete_Choices (Variant));\n@@ -8898,15 +8901,17 @@ package body Exp_Dist is\n                      --  First all discriminants\n \n                      if Has_Discriminants (Typ) then\n-                        Disc := First_Discriminant (Typ);\n                         Discriminant_Associations := New_List;\n \n+                        Disc := First_Discriminant (Typ);\n                         while Present (Disc) loop\n                            declare\n                               Disc_Var_Name : constant Entity_Id :=\n-                                Make_Defining_Identifier (Loc, Chars (Disc));\n-                              Disc_Type : constant Entity_Id :=\n-                                Etype (Disc);\n+                                                Make_Defining_Identifier (Loc,\n+                                                  Chars => Chars (Disc));\n+                              Disc_Type     : constant Entity_Id :=\n+                                                Etype (Disc);\n+\n                            begin\n                               Append_To (Decls,\n                                 Make_Object_Declaration (Loc,\n@@ -8936,11 +8941,12 @@ package body Exp_Dist is\n                            Next_Discriminant (Disc);\n                         end loop;\n \n-                        Res_Definition := Make_Subtype_Indication (Loc,\n-                          Subtype_Mark => Res_Definition,\n-                          Constraint   =>\n-                            Make_Index_Or_Discriminant_Constraint (Loc,\n-                              Discriminant_Associations));\n+                        Res_Definition :=\n+                          Make_Subtype_Indication (Loc,\n+                            Subtype_Mark => Res_Definition,\n+                            Constraint   =>\n+                              Make_Index_Or_Discriminant_Constraint (Loc,\n+                                Discriminant_Associations));\n                      end if;\n \n                      --  Now we have all the discriminants in variables, we can\n@@ -9000,12 +9006,12 @@ package body Exp_Dist is\n                          Expression => Empty);\n \n                      Element_Any : Node_Id;\n-                  begin\n \n+                  begin\n                      declare\n                         Element_TC : Node_Id;\n-                     begin\n \n+                     begin\n                         if Etype (Datum) = RTE (RE_Any) then\n \n                            --  When Datum is an Any the Etype field is not\n@@ -9066,10 +9072,15 @@ package body Exp_Dist is\n                         else\n                            Set_Expression (Assignment, Element_Any);\n                         end if;\n+\n                         Prepend_To (Stmts, Assignment);\n                      end if;\n                   end FA_Ary_Add_Process_Element;\n \n+                  ------------------------\n+                  -- Local Declarations --\n+                  ------------------------\n+\n                   Counter : constant Entity_Id :=\n                               Make_Defining_Identifier (Loc, Name_J);\n \n@@ -9350,14 +9361,14 @@ package body Exp_Dist is\n             Start_String;\n             Store_String_Chars (\"DSA:\");\n             Get_Library_Unit_Name_String (Scope (E));\n-            Store_String_Chars (\n-              Name_Buffer (Name_Buffer'First\n-                .. Name_Buffer'First + Name_Len - 1));\n+            Store_String_Chars\n+              (Name_Buffer (Name_Buffer'First ..\n+               Name_Buffer'First + Name_Len - 1));\n             Store_String_Char ('.');\n             Get_Name_String (Chars (E));\n-            Store_String_Chars (\n-              Name_Buffer (Name_Buffer'First\n-                .. Name_Buffer'First + Name_Len - 1));\n+            Store_String_Chars\n+              (Name_Buffer (Name_Buffer'First ..\n+               Name_Buffer'First + Name_Len - 1));\n             Store_String_Chars (\":1.0\");\n             Repo_Id_Str := End_String;\n             Name_Str    := String_From_Name_Buffer;\n@@ -9375,22 +9386,19 @@ package body Exp_Dist is\n \n             Typ     : Entity_Id := Etype (N);\n             U_Type  : Entity_Id;\n-\n             Fnam    : Entity_Id := Empty;\n             Lib_RE  : RE_Id := RE_Null;\n \n          begin\n             --  If N is a selected component, then maybe its Etype has not been\n-            --  set yet: try to use the Etype of the selector_name in that\n-            --  case.\n+            --  set yet: try to use Etype of the selector_name in that case.\n \n             if No (Typ) and then Nkind (N) = N_Selected_Component then\n                Typ := Etype (Selector_Name (N));\n             end if;\n             pragma Assert (Present (Typ));\n \n-            --  The full view, if Typ is private; the completion, if Typ is\n-            --  incomplete.\n+            --  Get full view for private type, completion for incomplete type\n \n             U_Type := Underlying_Type (Typ);\n \n@@ -9824,19 +9832,20 @@ package body Exp_Dist is\n \n                   begin\n                      --  Records are encoded in a TC_STRUCT aggregate:\n+\n                      --  -- Outer aggregate (TC_STRUCT)\n                      --  | [discriminant1]\n                      --  | [discriminant2]\n                      --  | ...\n-                     --\n+                     --  |\n                      --  | [component1]\n                      --  | [component2]\n                      --  | ...\n-                     --\n-                     --  A component can be a common component or a variant\n-                     --  part.\n-                     --\n+\n+                     --  A component can be a common component or variant part\n+\n                      --  A variant part is encoded as a TC_UNION aggregate:\n+\n                      --  -- Variant Part Aggregate (TC_UNION)\n                      --  | [discriminant choice for this Variant Part]\n                      --  |\n@@ -9845,20 +9854,20 @@ package body Exp_Dist is\n                      --  | |  [component2]\n                      --  | |  ...\n \n-                     --  Let's start by building the outer aggregate\n-                     --  First we construct an Elements array containing all\n-                     --  the discriminants.\n+                     --  Let's start by building the outer aggregate. First we\n+                     --  construct Elements array containing all discriminants.\n \n                      if Has_Discriminants (Typ) then\n                         Disc := First_Discriminant (Typ);\n-\n                         while Present (Disc) loop\n-\n                            declare\n                               Discriminant : constant Entity_Id :=\n-                                 Make_Selected_Component (Loc,\n-                                     Prefix        => Expr_Parameter,\n-                                     Selector_Name => Chars (Disc));\n+                                               Make_Selected_Component (Loc,\n+                                                 Prefix        =>\n+                                                   Expr_Parameter,\n+                                                 Selector_Name =>\n+                                                   Chars (Disc));\n+\n                            begin\n                               Set_Etype (Discriminant, Etype (Disc));\n \n@@ -9869,6 +9878,7 @@ package body Exp_Dist is\n                                   Expression =>\n                                     Build_To_Any_Call (Discriminant, Decls)));\n                            end;\n+\n                            Counter := Counter + 1;\n                            Next_Discriminant (Disc);\n                         end loop;"}]}