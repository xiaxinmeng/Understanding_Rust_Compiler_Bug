{"sha": "c2651d6650caf16ae1f0ce58689e2f50acb037b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI2NTFkNjY1MGNhZjE2YWUxZjBjZTU4Njg5ZTJmNTBhY2IwMzdiOA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-12-22T08:00:00Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-12-22T08:00:00Z"}, "message": "mknumeric_limits: Output to temporary files, and rename them at the end.\n\n* mknumeric_limits: Output to temporary files, and rename them at\nthe end.\n\nFrom-SVN: r38443", "tree": {"sha": "65b9835d195948d192f9ad00d78d02707a520616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65b9835d195948d192f9ad00d78d02707a520616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2651d6650caf16ae1f0ce58689e2f50acb037b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2651d6650caf16ae1f0ce58689e2f50acb037b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2651d6650caf16ae1f0ce58689e2f50acb037b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2651d6650caf16ae1f0ce58689e2f50acb037b8/comments", "author": null, "committer": null, "parents": [{"sha": "86a42a5f2443414d63765a4bc84df0530bc32557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a42a5f2443414d63765a4bc84df0530bc32557", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a42a5f2443414d63765a4bc84df0530bc32557"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "acda82529d9b8f7ae2f57d09cf7cf9ea262b8050", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2651d6650caf16ae1f0ce58689e2f50acb037b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2651d6650caf16ae1f0ce58689e2f50acb037b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c2651d6650caf16ae1f0ce58689e2f50acb037b8", "patch": "@@ -1,3 +1,8 @@\n+2000-12-22  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* mknumeric_limits: Output to temporary files, and rename them at\n+\tthe end.\n+\n 2000-12-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.in: Change GLIBCPP_ENABLE_SHADOW to"}, {"sha": "25d8a27f71865b82a41fab7add63ee61942462b1", "filename": "libstdc++-v3/mknumeric_limits", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2651d6650caf16ae1f0ce58689e2f50acb037b8/libstdc%2B%2B-v3%2Fmknumeric_limits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2651d6650caf16ae1f0ce58689e2f50acb037b8/libstdc%2B%2B-v3%2Fmknumeric_limits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmknumeric_limits?ref=c2651d6650caf16ae1f0ce58689e2f50acb037b8", "patch": "@@ -45,7 +45,7 @@ OUT_H=\"$BUILD_DIR/include/bits/std_limits.h\"\n OUT_C=\"$BUILD_DIR/src/limitsMEMBERS.cc\"\n \n if [ -f $OUT_C ]; then\n-    rm -f $OUT_H OUT_C\n+    rm -f $OUT_H $OUT_C $OUT_H-t $OUT_C-t\n fi\n \n SRC_DIR=$2\n@@ -64,7 +64,9 @@ fi\n \n : ${CXX:=\"$BUILD_DIR/../../gcc/g++ -B$BUILD_DIR/../../gcc/\"}\n \n-cat <<EOF > $OUT_H\n+# We output to a temporary file, so that we don't appear to have\n+# succeeded unless we actually do.\n+cat <<EOF > $OUT_H-t\n // The template and inlines for the -*- C++ -*- numeric_limits classes.\n \n // Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n@@ -189,9 +191,9 @@ if [ ! -f \"$BUILD_DIR/src/gen-num-limits\" ]; then\n   exit 1\n fi\n \n-\"$BUILD_DIR/src/gen-num-limits\" >> $OUT_H\n+\"$BUILD_DIR/src/gen-num-limits\" >> $OUT_H-t\n \n-cat <<EOF >> $OUT_H\n+cat <<EOF >> $OUT_H-t\n } // namespace std\n \n #endif // _CPP_NUMERIC_LIMITS\n@@ -245,8 +247,8 @@ for type_name in bool char 'signed char' 'unsigned char' \\\n \t    long 'unsigned long' 'long long' 'unsigned long long' \\\n \t    float double 'long double'\n     do\n-     grep \"<$type_name>\" $OUT_H >/dev/null 2>&1 || continue\n-     cat <<EOF >> $OUT_C\n+     grep \"<$type_name>\" $OUT_H-t >/dev/null 2>&1 || continue\n+     cat <<EOF >> $OUT_C-t\n \n     const bool $trait_name<$type_name>::is_specialized;\n     const int  $trait_name<$type_name>::digits;\n@@ -274,8 +276,11 @@ EOF\n \n done\n \n-cat <<EOF >> $OUT_C\n+cat <<EOF >> $OUT_C-t\n } // namespace std\n \n \n EOF\n+\n+mv $OUT_C-t $OUT_C\n+mv $OUT_H-t $OUT_H"}]}