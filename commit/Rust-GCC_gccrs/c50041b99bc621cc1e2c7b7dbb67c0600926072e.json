{"sha": "c50041b99bc621cc1e2c7b7dbb67c0600926072e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUwMDQxYjk5YmM2MjFjYzFlMmM3YjdkYmI2N2MwNjAwOTI2MDcyZQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-02-17T22:32:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-16T08:42:58Z"}, "message": "[Ada] Reorder code for validity checks of unchecked conversions\n\ngcc/ada/\n\n\t* sem_ch13.adb (Validate_Unchecked_Conversion): Move detection\n\tof generic types before switching to their private views; fix\n\tstyle in using AND THEN.", "tree": {"sha": "9cecd021617db28ba14155d4451dad4c0803d757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cecd021617db28ba14155d4451dad4c0803d757"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c50041b99bc621cc1e2c7b7dbb67c0600926072e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50041b99bc621cc1e2c7b7dbb67c0600926072e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c50041b99bc621cc1e2c7b7dbb67c0600926072e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50041b99bc621cc1e2c7b7dbb67c0600926072e/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "331170392082ccfb782a6edb263fc2a32d058c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331170392082ccfb782a6edb263fc2a32d058c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331170392082ccfb782a6edb263fc2a32d058c70"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "8aa62c89debcb11aa5172f699a687f6d8e0ebf6e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c50041b99bc621cc1e2c7b7dbb67c0600926072e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c50041b99bc621cc1e2c7b7dbb67c0600926072e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c50041b99bc621cc1e2c7b7dbb67c0600926072e", "patch": "@@ -16578,18 +16578,7 @@ package body Sem_Ch13 is\n       --  here because the processing for generic instantiation always makes\n       --  subtypes, and we want the original frozen actual types.\n \n-      --  If we are dealing with private types, then do the check on their\n-      --  fully declared counterparts if the full declarations have been\n-      --  encountered (they don't have to be visible, but they must exist).\n-\n       Source := Ancestor_Subtype (Etype (First_Formal (Act_Unit)));\n-\n-      if Is_Private_Type (Source)\n-        and then Present (Underlying_Type (Source))\n-      then\n-         Source := Underlying_Type (Source);\n-      end if;\n-\n       Target := Ancestor_Subtype (Etype (Act_Unit));\n \n       --  If either type is generic, the instantiation happens within a generic\n@@ -16600,6 +16589,16 @@ package body Sem_Ch13 is\n          return;\n       end if;\n \n+      --  If we are dealing with private types, then do the check on their\n+      --  fully declared counterparts if the full declarations have been\n+      --  encountered (they don't have to be visible, but they must exist).\n+\n+      if Is_Private_Type (Source)\n+        and then Present (Underlying_Type (Source))\n+      then\n+         Source := Underlying_Type (Source);\n+      end if;\n+\n       if Is_Private_Type (Target)\n         and then Present (Underlying_Type (Target))\n       then\n@@ -16692,8 +16691,8 @@ package body Sem_Ch13 is\n       --  in the same unit as the unchecked conversion, then set the flag\n       --  No_Strict_Aliasing (no strict aliasing is implicit here)\n \n-      if Is_Access_Type (Target) and then\n-        In_Same_Source_Unit (Target, N)\n+      if Is_Access_Type (Target)\n+        and then In_Same_Source_Unit (Target, N)\n       then\n          Set_No_Strict_Aliasing (Implementation_Base_Type (Target));\n       end if;"}]}