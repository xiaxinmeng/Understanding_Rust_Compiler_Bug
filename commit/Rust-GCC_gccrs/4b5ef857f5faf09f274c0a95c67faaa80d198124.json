{"sha": "4b5ef857f5faf09f274c0a95c67faaa80d198124", "node_id": "C_kwDOANBUbNoAKDRiNWVmODU3ZjVmYWYwOWYyNzRjMGE5NWM2N2ZhYWE4MGQxOTgxMjQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-28T08:43:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-28T08:43:08Z"}, "message": "i386: Require just 32-bit alignment for SLOT_FLOATxFDI_387 -m32 -mpreferred-stack-boundary=2 DImode temporaries [PR109276]\n\nThe following testcase ICEs since r11-2259 because assign_386_stack_local\n-> assign_stack_local -> ix86_local_alignment now uses 64-bit alignment\nfor DImode temporaries rather than 32-bit as before.\nMost of the spots in the backend which ask for DImode temporaries are during\nexpansion and those apparently are handled fine with -m32\n-mpreferred-stack-boundary=2, we dynamically realign the stack in that case\n(most of the spots actually don't need that alignment but at least one\ndoes), then 2 spots are in STV which I assume also work correctly.\nBut during splitting we can create a DImode slot which doesn't need to be\n64-bit alignment (it is nicer for performance though), when we apparently\naren't able to detect it for dynamic stack realignment purposes.\n\nThe following patch just makes the slot 32-bit aligned in that rare case.\n\n2023-03-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/109276\n\t* config/i386/i386.cc (assign_386_stack_local): For DImode\n\twith SLOT_FLOATxFDI_387 and -m32 -mpreferred-stack-boundary=2 pass\n\talign 32 rather than 0 to assign_stack_local.\n\n\t* gcc.target/i386/pr109276.c: New test.", "tree": {"sha": "548066d9669ab3225dbbf31fb3536ea825958e70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/548066d9669ab3225dbbf31fb3536ea825958e70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b5ef857f5faf09f274c0a95c67faaa80d198124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5ef857f5faf09f274c0a95c67faaa80d198124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5ef857f5faf09f274c0a95c67faaa80d198124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5ef857f5faf09f274c0a95c67faaa80d198124/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a21bd7faba67997a6da457dbda16f15bca1a9156", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21bd7faba67997a6da457dbda16f15bca1a9156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21bd7faba67997a6da457dbda16f15bca1a9156"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "2cc8e9548a9535c591fce0d6a002387c81a9e8b4", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b5ef857f5faf09f274c0a95c67faaa80d198124/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b5ef857f5faf09f274c0a95c67faaa80d198124/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=4b5ef857f5faf09f274c0a95c67faaa80d198124", "patch": "@@ -16682,10 +16682,18 @@ assign_386_stack_local (machine_mode mode, enum ix86_stack_slot n)\n     if (s->mode == mode && s->n == n)\n       return validize_mem (copy_rtx (s->rtl));\n \n+  int align = 0;\n+  /* For DImode with SLOT_FLOATxFDI_387 use 32-bit\n+     alignment with -m32 -mpreferred-stack-boundary=2.  */\n+  if (mode == DImode\n+      && !TARGET_64BIT\n+      && n == SLOT_FLOATxFDI_387\n+      && ix86_preferred_stack_boundary < GET_MODE_ALIGNMENT (DImode))\n+    align = 32;\n   s = ggc_alloc<stack_local_entry> ();\n   s->n = n;\n   s->mode = mode;\n-  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), 0);\n+  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), align);\n \n   s->next = ix86_stack_locals;\n   ix86_stack_locals = s;"}, {"sha": "5d0827aa2801eb10e06af2390312d3cf9f9f30fa", "filename": "gcc/testsuite/gcc.target/i386/pr109276.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b5ef857f5faf09f274c0a95c67faaa80d198124/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109276.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b5ef857f5faf09f274c0a95c67faaa80d198124/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109276.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109276.c?ref=4b5ef857f5faf09f274c0a95c67faaa80d198124", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/109276 */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=x86-64\" } */\n+/* { dg-additional-options \"-mpreferred-stack-boundary=2\" { target ia32 } } */\n+\n+long long a;\n+long double b;\n+\n+void\n+foo (void)\n+{\n+  b += a;\n+}"}]}