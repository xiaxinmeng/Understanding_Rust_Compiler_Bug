{"sha": "6d1ea02a6c3423a000c0d894b2ff673757042398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQxZWEwMmE2YzM0MjNhMDAwYzBkODk0YjJmZjY3Mzc1NzA0MjM5OA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2017-06-12T19:30:45Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2017-06-12T19:30:45Z"}, "message": "More refinements to fixing sparc's PR target/80968.\n\ngcc/\n\n\tPR target/80968\n\t* config/sparc/sparc.md (return expander): Emit frame blockage if\n\tfunction uses alloca.\n\nFrom-SVN: r249134", "tree": {"sha": "bef8cf067829fb3f544923af035849ade9907bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bef8cf067829fb3f544923af035849ade9907bd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d1ea02a6c3423a000c0d894b2ff673757042398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1ea02a6c3423a000c0d894b2ff673757042398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1ea02a6c3423a000c0d894b2ff673757042398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1ea02a6c3423a000c0d894b2ff673757042398/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20d5c8731f4bc1aa72ced6cf61016407b74109d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d5c8731f4bc1aa72ced6cf61016407b74109d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d5c8731f4bc1aa72ced6cf61016407b74109d5"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "9be291e3d2a28c01132113166c1939def07af22b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1ea02a6c3423a000c0d894b2ff673757042398/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1ea02a6c3423a000c0d894b2ff673757042398/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d1ea02a6c3423a000c0d894b2ff673757042398", "patch": "@@ -1,3 +1,9 @@\n+2017-06-12  David S. Miller  <davem@davemloft.net>\n+\n+\tPR target/80968\n+\t* config/sparc/sparc.md (return expander): Emit frame blockage if\n+\tfunction uses alloca.\n+\n 2017-06-12  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* combine.c (make_field_assignment): Check len rather than the mode"}, {"sha": "5c5096bca2a9a3b0e1c251ce8ba1d380cf47b459", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1ea02a6c3423a000c0d894b2ff673757042398/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1ea02a6c3423a000c0d894b2ff673757042398/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=6d1ea02a6c3423a000c0d894b2ff673757042398", "patch": "@@ -7098,7 +7098,10 @@\n (define_expand \"return\"\n   [(return)]\n   \"sparc_can_use_return_insn_p ()\"\n-  \"\")\n+{\n+  if (cfun->calls_alloca)\n+    emit_insn (gen_frame_blockage ());\n+})\n \n (define_insn \"*return_internal\"\n   [(return)]"}]}