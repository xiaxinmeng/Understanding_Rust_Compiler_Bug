{"sha": "50d38551eeee9c225bd1af2e2a403de9ea298a7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBkMzg1NTFlZWVlOWMyMjViZDFhZjJlMmE0MDNkZTllYTI5OGE3ZQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2013-05-24T14:54:15Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-05-24T14:54:15Z"}, "message": "AArch64 - allow insv_imm to handle bigger immediates via masking to 16 bits\n\nFrom-SVN: r199293", "tree": {"sha": "f55d00c76bf19b868107c5a7a52d6b98e46974ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55d00c76bf19b868107c5a7a52d6b98e46974ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50d38551eeee9c225bd1af2e2a403de9ea298a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d38551eeee9c225bd1af2e2a403de9ea298a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d38551eeee9c225bd1af2e2a403de9ea298a7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d38551eeee9c225bd1af2e2a403de9ea298a7e/comments", "author": null, "committer": null, "parents": [{"sha": "f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "f607fdfb4f919a2348fd0ccc672c2c7ea63afce3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d38551eeee9c225bd1af2e2a403de9ea298a7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d38551eeee9c225bd1af2e2a403de9ea298a7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50d38551eeee9c225bd1af2e2a403de9ea298a7e", "patch": "@@ -1,3 +1,10 @@\n+2013-05-24  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_print_operand): Change the\n+\tX format specifier to only display bottom 16 bits.\n+\t* config/aarch64/aarch64.md (insv_imm<mode>): Allow any size of\n+\timmediate to match for operand 2, since it will be masked.\n+\n 2013-05-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/57287"}, {"sha": "e580a1bcafc144d390182b1cf102c3324b090db9", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d38551eeee9c225bd1af2e2a403de9ea298a7e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d38551eeee9c225bd1af2e2a403de9ea298a7e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=50d38551eeee9c225bd1af2e2a403de9ea298a7e", "patch": "@@ -3428,13 +3428,13 @@ aarch64_print_operand (FILE *f, rtx x, char code)\n       break;\n \n     case 'X':\n-      /* Print integer constant in hex.  */\n+      /* Print bottom 16 bits of integer constant in hex.  */\n       if (GET_CODE (x) != CONST_INT)\n \t{\n \t  output_operand_lossage (\"invalid operand for '%%%c'\", code);\n \t  return;\n \t}\n-      asm_fprintf (f, \"0x%wx\", UINTVAL (x));\n+      asm_fprintf (f, \"0x%wx\", UINTVAL (x) & 0xffff);\n       break;\n \n     case 'w':"}, {"sha": "2bdbfa90bf7fcfcaca740ab09c4b7e9f9c34def9", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d38551eeee9c225bd1af2e2a403de9ea298a7e/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d38551eeee9c225bd1af2e2a403de9ea298a7e/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=50d38551eeee9c225bd1af2e2a403de9ea298a7e", "patch": "@@ -858,9 +858,8 @@\n \t\t\t  (const_int 16)\n \t\t\t  (match_operand:GPI 1 \"const_int_operand\" \"n\"))\n \t(match_operand:GPI 2 \"const_int_operand\" \"n\"))]\n-  \"INTVAL (operands[1]) < GET_MODE_BITSIZE (<MODE>mode)\n-   && INTVAL (operands[1]) % 16 == 0\n-   && UINTVAL (operands[2]) <= 0xffff\"\n+  \"UINTVAL (operands[1]) < GET_MODE_BITSIZE (<MODE>mode)\n+   && UINTVAL (operands[1]) % 16 == 0\"\n   \"movk\\\\t%<w>0, %X2, lsl %1\"\n   [(set_attr \"v8type\" \"movk\")\n    (set_attr \"mode\" \"<MODE>\")]"}]}