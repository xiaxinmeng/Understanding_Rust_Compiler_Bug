{"sha": "860ad33f3adab6683c23bec8d0a94df5b4e59799", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwYWQzM2YzYWRhYjY2ODNjMjNiZWM4ZDBhOTRkZjViNGU1OTc5OQ==", "commit": {"author": {"name": "Naveen H.S", "email": "Naveen.Hurugalawadi@caviumnetworks.com", "date": "2013-04-17T05:11:55Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2013-04-17T05:11:55Z"}, "message": "aarch64.md (*adds_mul_imm_<mode>): New pattern.\n\ngcc/\n\n2013-04-16   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* config/aarch64/aarch64.md (*adds_mul_imm_<mode>): New pattern.\n\t(*subs_mul_imm_<mode>): New pattern.\n\ngcc/testsuite/\n\n2013-04-16   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* gcc.target/aarch64/adds1.c: New.\n\t* gcc.target/aarch64/adds2.c: New.\n\t* gcc.target/aarch64/subs1.c: New.\n\t* gcc.target/aarch64/subs2.c: New.\n\nFrom-SVN: r198019", "tree": {"sha": "86d8d17f6a3f24954de5f1397d8cd1f53f85788e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86d8d17f6a3f24954de5f1397d8cd1f53f85788e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/860ad33f3adab6683c23bec8d0a94df5b4e59799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860ad33f3adab6683c23bec8d0a94df5b4e59799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860ad33f3adab6683c23bec8d0a94df5b4e59799", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860ad33f3adab6683c23bec8d0a94df5b4e59799/comments", "author": null, "committer": null, "parents": [{"sha": "3a8d9ab15448911199ac24e7e23206e0a7e12696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8d9ab15448911199ac24e7e23206e0a7e12696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8d9ab15448911199ac24e7e23206e0a7e12696"}], "stats": {"total": 654, "additions": 654, "deletions": 0}, "files": [{"sha": "2a9d001e255dfbe799b41a9d2bc5ca40396784a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -1,3 +1,8 @@\n+2013-04-16   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* config/aarch64/aarch64.md (*adds_mul_imm_<mode>): New pattern.\n+\t(*subs_mul_imm_<mode>): New pattern.\n+\n 2013-04-16  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/56948"}, {"sha": "715a3727a8b36a61987b0711623c509f3a775345", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -1291,6 +1291,40 @@\n    (set_attr \"mode\" \"SI\")]\n )\n \n+(define_insn \"*adds_mul_imm_<mode>\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (plus:GPI (mult:GPI\n+\t\t    (match_operand:GPI 1 \"register_operand\" \"r\")\n+\t\t    (match_operand:QI 2 \"aarch64_pwr_2_<mode>\" \"n\"))\n+\t\t   (match_operand:GPI 3 \"register_operand\" \"rk\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(plus:GPI (mult:GPI (match_dup 1) (match_dup 2))\n+\t\t  (match_dup 3)))]\n+  \"\"\n+  \"adds\\\\t%<w>0, %<w>3, %<w>1, lsl %p2\"\n+  [(set_attr \"v8type\" \"alus_shift\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n+(define_insn \"*subs_mul_imm_<mode>\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (minus:GPI (match_operand:GPI 1 \"register_operand\" \"rk\")\n+\t\t    (mult:GPI\n+\t\t     (match_operand:GPI 2 \"register_operand\" \"r\")\n+\t\t     (match_operand:QI 3 \"aarch64_pwr_2_<mode>\" \"n\")))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(minus:GPI (match_dup 1)\n+\t\t   (mult:GPI (match_dup 2) (match_dup 3))))]\n+  \"\"\n+  \"subs\\\\t%<w>0, %<w>1, %<w>2, lsl %p3\"\n+  [(set_attr \"v8type\" \"alus_shift\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n (define_insn \"*add<mode>3nr_compare0\"\n   [(set (reg:CC_NZ CC_REGNUM)\n \t(compare:CC_NZ"}, {"sha": "27eb83008651dde746bae82139444b2e0f0f4d6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -1,3 +1,10 @@\n+2013-04-16   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* gcc.target/aarch64/adds1.c: New.\n+\t* gcc.target/aarch64/adds2.c: New.\n+\t* gcc.target/aarch64/subs1.c: New.\n+\t* gcc.target/aarch64/subs2.c: New.\n+\n 2013-04-16  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement n3599 - Literal operator templates for strings."}, {"sha": "eb19bbfd61645107373931d5bc748e53117726a7", "filename": "gcc/testsuite/gcc.target/aarch64/adds1.c", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds1.c?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -0,0 +1,149 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+adds_si_test1 (int a, int b, int c)\n+{\n+  int d = a + b;\n+\n+  /* { dg-final { scan-assembler \"adds\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+adds_si_test2 (int a, int b, int c)\n+{\n+  int d = a + 0xff;\n+\n+  /* { dg-final { scan-assembler \"adds\\tw\\[0-9\\]+, w\\[0-9\\]+, 255\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+adds_si_test3 (int a, int b, int c)\n+{\n+  int d = a + (b << 3);\n+\n+  /* { dg-final { scan-assembler \"adds\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+adds_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a + b;\n+\n+  /* { dg-final { scan-assembler \"adds\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+adds_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a + 0xff;\n+\n+  /* { dg-final { scan-assembler \"adds\\tx\\[0-9\\]+, x\\[0-9\\]+, 255\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+adds_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a + (b << 3);\n+\n+  /* { dg-final { scan-assembler \"adds\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = adds_si_test1 (29, 4, 5);\n+  if (x != 42)\n+    abort ();\n+\n+  x = adds_si_test1 (5, 2, 20);\n+  if (x != 29)\n+    abort ();\n+\n+  x = adds_si_test2 (29, 4, 5);\n+  if (x != 293)\n+    abort ();\n+\n+  x = adds_si_test2 (1024, 2, 20);\n+  if (x != 1301)\n+    abort ();\n+\n+  x = adds_si_test3 (35, 4, 5);\n+  if (x != 76)\n+    abort ();\n+\n+  x = adds_si_test3 (5, 2, 20);\n+  if (x != 43)\n+    abort ();\n+\n+  y = adds_di_test1 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+\n+  if (y != 0xc75050536)\n+    abort ();\n+\n+  y = adds_di_test1 (0x5000500050005ll,\n+\t\t     0x2111211121112ll,\n+\t\t     0x0000000002020ll);\n+  if (y != 0x9222922294249)\n+    abort ();\n+\n+  y = adds_di_test2 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x955050631)\n+    abort ();\n+\n+  y = adds_di_test2 (0x130002900ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x955052f08)\n+    abort ();\n+\n+  y = adds_di_test3 (0x130000029ll,\n+\t\t     0x064000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x9b9050576)\n+    abort ();\n+\n+  y = adds_di_test3 (0x130002900ll,\n+\t\t     0x088000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0xafd052e4d)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "bd130a99aa53617d44731d91b77169ba11b9aa04", "filename": "gcc/testsuite/gcc.target/aarch64/adds2.c", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds2.c?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -0,0 +1,155 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+adds_si_test1 (int a, int b, int c)\n+{\n+  int d = a + b;\n+\n+  /* { dg-final { scan-assembler-not \"adds\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler \"add\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+adds_si_test2 (int a, int b, int c)\n+{\n+  int d = a + 0xfff;\n+\n+  /* { dg-final { scan-assembler-not \"adds\\tw\\[0-9\\]+, w\\[0-9\\]+, 4095\" } } */\n+  /* { dg-final { scan-assembler \"add\\tw\\[0-9\\]+, w\\[0-9\\]+, 4095\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+adds_si_test3 (int a, int b, int c)\n+{\n+  int d = a + (b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"adds\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"add\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+adds_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a + b;\n+\n+  /* { dg-final { scan-assembler-not \"adds\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler \"add\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+adds_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a + 0x1000ll;\n+\n+  /* { dg-final { scan-assembler-not \"adds\\tx\\[0-9\\]+, x\\[0-9\\]+, 4096\" } } */\n+  /* { dg-final { scan-assembler \"add\\tx\\[0-9\\]+, x\\[0-9\\]+, 4096\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+adds_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a + (b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"adds\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"add\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = adds_si_test1 (29, 4, 5);\n+  if (x != 42)\n+    abort ();\n+\n+  x = adds_si_test1 (5, 2, 20);\n+  if (x != 29)\n+    abort ();\n+\n+  x = adds_si_test2 (29, 4, 5);\n+  if (x != 4133)\n+    abort ();\n+\n+  x = adds_si_test2 (1024, 2, 20);\n+  if (x != 5141)\n+    abort ();\n+\n+  x = adds_si_test3 (35, 4, 5);\n+  if (x != 76)\n+    abort ();\n+\n+  x = adds_si_test3 (5, 2, 20);\n+  if (x != 43)\n+    abort ();\n+\n+  y = adds_di_test1 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+\n+  if (y != 0xc75050536)\n+    abort ();\n+\n+  y = adds_di_test1 (0x5000500050005ll,\n+\t\t     0x2111211121112ll,\n+\t\t     0x0000000002020ll);\n+  if (y != 0x9222922294249)\n+    abort ();\n+\n+  y = adds_di_test2 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x955051532)\n+    abort ();\n+\n+  y = adds_di_test2 (0x540004100ll,\n+\t\t     0x320000004ll,\n+\t\t     0x805050205ll);\n+  if (y != 0x1065055309)\n+    abort ();\n+\n+  y = adds_di_test3 (0x130000029ll,\n+\t\t     0x064000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x9b9050576)\n+    abort ();\n+\n+  y = adds_di_test3 (0x130002900ll,\n+\t\t     0x088000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0xafd052e4d)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "7e4b2b812c0e91f7d3894ed9f3cafb73e5381cd6", "filename": "gcc/testsuite/gcc.target/aarch64/subs1.c", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs1.c?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -0,0 +1,149 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+subs_si_test1 (int a, int b, int c)\n+{\n+  int d = a - c;\n+\n+  /* { dg-final { scan-assembler \"subs\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+subs_si_test2 (int a, int b, int c)\n+{\n+  int d = a - 0xff;\n+\n+  /* { dg-final { scan-assembler \"subs\\tw\\[0-9\\]+, w\\[0-9\\]+, #255\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+subs_si_test3 (int a, int b, int c)\n+{\n+  int d = a - (b << 3);\n+\n+  /* { dg-final { scan-assembler \"subs\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+subs_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a - c;\n+\n+  /* { dg-final { scan-assembler \"subs\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+subs_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a - 0xff;\n+\n+  /* { dg-final { scan-assembler \"subs\\tx\\[0-9\\]+, x\\[0-9\\]+, #255\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+subs_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a - (b << 3);\n+\n+  /* { dg-final { scan-assembler \"subs\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = subs_si_test1 (29, 4, 5);\n+  if (x != 33)\n+    abort ();\n+\n+  x = subs_si_test1 (5, 2, 20);\n+  if (x != 7)\n+    abort ();\n+\n+  x = subs_si_test2 (29, 4, 5);\n+  if (x != -217)\n+    abort ();\n+\n+  x = subs_si_test2 (1024, 2, 20);\n+  if (x != 791)\n+    abort ();\n+\n+  x = subs_si_test3 (35, 4, 5);\n+  if (x != 12)\n+    abort ();\n+\n+  x = subs_si_test3 (5, 2, 20);\n+  if (x != 11)\n+    abort ();\n+\n+  y = subs_di_test1 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+\n+  if (y != 0x45000002d)\n+    abort ();\n+\n+  y = subs_di_test1 (0x5000500050005ll,\n+\t\t     0x2111211121112ll,\n+\t\t     0x0000000002020ll);\n+  if (y != 0x7111711171117)\n+    abort ();\n+\n+  y = subs_di_test2 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x955050433)\n+    abort ();\n+\n+  y = subs_di_test2 (0x130002900ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x955052d0a)\n+    abort ();\n+\n+  y = subs_di_test3 (0x130000029ll,\n+\t\t     0x064000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x3790504f6)\n+    abort ();\n+\n+  y = subs_di_test3 (0x130002900ll,\n+\t\t     0x088000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x27d052dcd)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "d90ead5144b2214d6393a5a6891896863b68642a", "filename": "gcc/testsuite/gcc.target/aarch64/subs2.c", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860ad33f3adab6683c23bec8d0a94df5b4e59799/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs2.c?ref=860ad33f3adab6683c23bec8d0a94df5b4e59799", "patch": "@@ -0,0 +1,155 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+subs_si_test1 (int a, int b, int c)\n+{\n+  int d = a - b;\n+\n+  /* { dg-final { scan-assembler-not \"subs\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler \"sub\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+subs_si_test2 (int a, int b, int c)\n+{\n+  int d = a - 0xfff;\n+\n+  /* { dg-final { scan-assembler-not \"subs\\tw\\[0-9\\]+, w\\[0-9\\]+, #4095\" } } */\n+  /* { dg-final { scan-assembler \"sub\\tw\\[0-9\\]+, w\\[0-9\\]+, #4095\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+subs_si_test3 (int a, int b, int c)\n+{\n+  int d = a - (b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"subs\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"sub\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+subs_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a - b;\n+\n+  /* { dg-final { scan-assembler-not \"subs\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler \"sub\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+subs_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a - 0x1000ll;\n+\n+  /* { dg-final { scan-assembler-not \"subs\\tx\\[0-9\\]+, x\\[0-9\\]+, #4096\" } } */\n+  /* { dg-final { scan-assembler \"sub\\tx\\[0-9\\]+, x\\[0-9\\]+, #4096\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+subs_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a - (b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"subs\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"sub\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = subs_si_test1 (29, 4, 5);\n+  if (x != 34)\n+    abort ();\n+\n+  x = subs_si_test1 (5, 2, 20);\n+  if (x != 25)\n+    abort ();\n+\n+  x = subs_si_test2 (29, 4, 5);\n+  if (x != 34)\n+    abort ();\n+\n+  x = subs_si_test2 (1024, 2, 20);\n+  if (x != 1044)\n+    abort ();\n+\n+  x = subs_si_test3 (35, 4, 5);\n+  if (x != 12)\n+    abort ();\n+\n+  x = subs_si_test3 (5, 2, 20);\n+  if (x != 25)\n+    abort ();\n+\n+  y = subs_di_test1 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+\n+  if (y != 0x63505052e)\n+    abort ();\n+\n+  y = subs_di_test1 (0x5000500050005ll,\n+\t\t     0x2111211121112ll,\n+\t\t     0x0000000002020ll);\n+  if (y != 0x5000500052025)\n+    abort ();\n+\n+  y = subs_di_test2 (0x130000029ll,\n+\t\t     0x320000004ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x95504f532)\n+    abort ();\n+\n+  y = subs_di_test2 (0x540004100ll,\n+\t\t     0x320000004ll,\n+\t\t     0x805050205ll);\n+  if (y != 0x1065053309)\n+    abort ();\n+\n+  y = subs_di_test3 (0x130000029ll,\n+\t\t     0x064000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x63505052e)\n+    abort ();\n+\n+  y = subs_di_test3 (0x130002900ll,\n+\t\t     0x088000008ll,\n+\t\t     0x505050505ll);\n+  if (y != 0x635052e05)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}