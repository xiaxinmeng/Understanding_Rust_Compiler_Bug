{"sha": "768505569c3634f2e726599a7532a7badf74f38c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY4NTA1NTY5YzM2MzRmMmU3MjY1OTlhNzUzMmE3YmFkZjc0ZjM4Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-09-19T13:41:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-19T13:41:33Z"}, "message": "configure.ac (GCC_HEADER_STDINT): Invoke.\n\n        * configure.ac (GCC_HEADER_STDINT): Invoke.\n        * backtrace.h: If we can't find <stdint.h>, use \"gstdint.h\".\n        * btest.c: Don't include <stdint.h>.\n        * dwarf.c: Likewise.\n        * configure, aclocal.m4, Makefile.in, config.h.in: Rebuild.\n\nCo-Authored-By: Ian Lance Taylor <iant@google.com>\n\nFrom-SVN: r191474", "tree": {"sha": "7eb53bd9949cc41b470853ad54dbf4ddda0c39c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb53bd9949cc41b470853ad54dbf4ddda0c39c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/768505569c3634f2e726599a7532a7badf74f38c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768505569c3634f2e726599a7532a7badf74f38c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/768505569c3634f2e726599a7532a7badf74f38c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768505569c3634f2e726599a7532a7badf74f38c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb522d96cc3cd7192f92f6b7fe3ff8d659fe4d1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb522d96cc3cd7192f92f6b7fe3ff8d659fe4d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb522d96cc3cd7192f92f6b7fe3ff8d659fe4d1b"}], "stats": {"total": 1083, "additions": 1078, "deletions": 5}, "files": [{"sha": "ea9ff2fa59f1b5a9f708d27c8f43283462cdce46", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -1,3 +1,12 @@\n+2012-09-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Ian Lance Taylor  <iant@google.com>\n+\n+        * configure.ac (GCC_HEADER_STDINT): Invoke.\n+        * backtrace.h: If we can't find <stdint.h>, use \"gstdint.h\".\n+        * btest.c: Don't include <stdint.h>.\n+        * dwarf.c: Likewise.\n+        * configure, aclocal.m4, Makefile.in, config.h.in: Rebuild.\n+\n 2012-09-18  Ian Lance Taylor  <iant@google.com>\n \n \tPR bootstrap/54623"}, {"sha": "6559868ac111da69e9d142542d7bdcb75e8e5201", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -79,6 +79,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\"}, {"sha": "a59188ac460c13a74b20b0c1a1338c406904d5d6", "filename": "libbacktrace/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Faclocal.m4?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -972,6 +972,7 @@ m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/stdint.m4])\n m4_include([../config/unwind_ipinfo.m4])\n m4_include([../config/warnings.m4])\n m4_include([../libtool.m4])"}, {"sha": "b8404eaefb5d0c4ed322a3bf2f97bb7ddb05e3e1", "filename": "libbacktrace/backtrace.h", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fbacktrace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fbacktrace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fbacktrace.h?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -34,9 +34,26 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #define BACKTRACE_H\n \n #include <stddef.h>\n-#include <stdint.h>\n #include <stdio.h>\n \n+/* We want to get a definition for uintptr_t, but we still care about\n+   systems that don't have <stdint.h>.  */\n+#if defined(__GLIBC__) && __GLIBC__ >= 2\n+\n+#include <stdint.h>\n+\n+#elif defined(HAVE_STDINT_H)\n+\n+#include <stdint.h>\n+\n+#else\n+\n+/* Systems that don't have <stdint.h> must provide gstdint.h, e.g.,\n+   from GCC_HEADER_STDINT in configure.ac.  */\n+#include \"gstdint.h\"\n+\n+#endif\n+\n #ifdef __cplusplus\n extern \"C\" {\n #endif"}, {"sha": "085891a6e69666317a1a988f27172e33f6693b80", "filename": "libbacktrace/btest.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fbtest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fbtest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fbtest.c?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -34,7 +34,6 @@ POSSIBILITY OF SUCH DAMAGE.  */\n    libbacktrace library.  */\n \n #include <assert.h>\n-#include <stdint.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>"}, {"sha": "656c2ee5a8f3db5f1d407c541013537338b48b91", "filename": "libbacktrace/config.h.in", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfig.h.in?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -71,6 +71,21 @@\n /* Define to the version of this package. */\n #undef PACKAGE_VERSION\n \n+/* The size of `char', as computed by sizeof. */\n+#undef SIZEOF_CHAR\n+\n+/* The size of `int', as computed by sizeof. */\n+#undef SIZEOF_INT\n+\n+/* The size of `long', as computed by sizeof. */\n+#undef SIZEOF_LONG\n+\n+/* The size of `short', as computed by sizeof. */\n+#undef SIZEOF_SHORT\n+\n+/* The size of `void *', as computed by sizeof. */\n+#undef SIZEOF_VOID_P\n+\n /* Define to 1 if you have the ANSI C header files. */\n #undef STDC_HEADERS\n "}, {"sha": "bbd5d1182d352e9b499ca0319c8f5b85cc565efc", "filename": "libbacktrace/configure", "status": "modified", "additions": 1032, "deletions": 2, "changes": 1034, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -1828,6 +1828,238 @@ $as_echo \"$ac_res\" >&6; }\n \n } # ac_fn_c_check_func\n \n+# ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n+# -------------------------------------------\n+# Tests whether TYPE exists after having included INCLUDES, setting cache\n+# variable VAR accordingly.\n+ac_fn_c_check_type ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n+$as_echo_n \"checking for $2... \" >&6; }\n+if { as_var=$3; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  eval \"$3=no\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+if (sizeof ($2))\n+\t return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+if (sizeof (($2)))\n+\t    return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  eval \"$3=yes\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+eval ac_res=\\$$3\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+\n+} # ac_fn_c_check_type\n+\n+# ac_fn_c_compute_int LINENO EXPR VAR INCLUDES\n+# --------------------------------------------\n+# Tries to find the compile-time value of EXPR in a program that includes\n+# INCLUDES, setting VAR accordingly. Returns whether the value could be\n+# computed\n+ac_fn_c_compute_int ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  if test \"$cross_compiling\" = yes; then\n+    # Depending upon the size, compute the lo and hi bounds.\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) >= 0)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_lo=0 ac_mid=0\n+  while :; do\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) <= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hi=$ac_mid; break\n+else\n+  as_fn_arith $ac_mid + 1 && ac_lo=$as_val\n+\t\t\tif test $ac_lo -le $ac_mid; then\n+\t\t\t  ac_lo= ac_hi=\n+\t\t\t  break\n+\t\t\tfi\n+\t\t\tas_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  done\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) < 0)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hi=-1 ac_mid=-1\n+  while :; do\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) >= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_lo=$ac_mid; break\n+else\n+  as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val\n+\t\t\tif test $ac_mid -le $ac_hi; then\n+\t\t\t  ac_lo= ac_hi=\n+\t\t\t  break\n+\t\t\tfi\n+\t\t\tas_fn_arith 2 '*' $ac_mid && ac_mid=$as_val\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  done\n+else\n+  ac_lo= ac_hi=\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+# Binary search between lo and hi bounds.\n+while test \"x$ac_lo\" != \"x$ac_hi\"; do\n+  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) <= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hi=$ac_mid\n+else\n+  as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+done\n+case $ac_lo in #((\n+?*) eval \"$3=\\$ac_lo\"; ac_retval=0 ;;\n+'') ac_retval=1 ;;\n+esac\n+  else\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+static long int longval () { return $2; }\n+static unsigned long int ulongval () { return $2; }\n+#include <stdio.h>\n+#include <stdlib.h>\n+int\n+main ()\n+{\n+\n+  FILE *f = fopen (\"conftest.val\", \"w\");\n+  if (! f)\n+    return 1;\n+  if (($2) < 0)\n+    {\n+      long int i = longval ();\n+      if (i != ($2))\n+\treturn 1;\n+      fprintf (f, \"%ld\", i);\n+    }\n+  else\n+    {\n+      unsigned long int i = ulongval ();\n+      if (i != ($2))\n+\treturn 1;\n+      fprintf (f, \"%lu\", i);\n+    }\n+  /* Do not output a trailing newline, as this causes \\r\\n confusion\n+     on some platforms.  */\n+  return ferror (f) || fclose (f) != 0;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  echo >>conftest.val; read $3 <conftest.val; ac_retval=0\n+else\n+  ac_retval=1\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+rm -f conftest.val\n+\n+  fi\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+  return $ac_retval\n+\n+} # ac_fn_c_compute_int\n+\n # ac_fn_c_check_decl LINENO SYMBOL VAR\n # ------------------------------------\n # Tests whether SYMBOL is declared, setting cache variable VAR accordingly.\n@@ -11040,7 +11272,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11043 \"configure\"\n+#line 11275 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11146,7 +11378,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11149 \"configure\"\n+#line 11381 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11654,6 +11886,413 @@ if test \"$backtrace_supported\" = \"yes\"; then\n fi\n \n \n+\n+\n+inttype_headers=`echo inttypes.h sys/inttypes.h  | sed -e 's/,/ /g'`\n+\n+acx_cv_header_stdint=stddef.h\n+acx_cv_header_stdint_kind=\"(already complete)\"\n+for i in stdint.h $inttype_headers; do\n+  unset ac_cv_type_uintptr_t\n+  unset ac_cv_type_uintmax_t\n+  unset ac_cv_type_int_least32_t\n+  unset ac_cv_type_int_fast32_t\n+  unset ac_cv_type_uint64_t\n+  $as_echo_n \"looking for a compliant stdint.h in $i, \" >&6\n+  ac_fn_c_check_type \"$LINENO\" \"uintmax_t\" \"ac_cv_type_uintmax_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_uintmax_t\" = x\"\"yes; then :\n+  acx_cv_header_stdint=$i\n+else\n+  continue\n+fi\n+\n+  ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_uintptr_t\" = x\"\"yes; then :\n+\n+else\n+  acx_cv_header_stdint_kind=\"(mostly complete)\"\n+fi\n+\n+  ac_fn_c_check_type \"$LINENO\" \"int_least32_t\" \"ac_cv_type_int_least32_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_int_least32_t\" = x\"\"yes; then :\n+\n+else\n+  acx_cv_header_stdint_kind=\"(mostly complete)\"\n+fi\n+\n+  ac_fn_c_check_type \"$LINENO\" \"int_fast32_t\" \"ac_cv_type_int_fast32_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_int_fast32_t\" = x\"\"yes; then :\n+\n+else\n+  acx_cv_header_stdint_kind=\"(mostly complete)\"\n+fi\n+\n+  ac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_uint64_t\" = x\"\"yes; then :\n+\n+else\n+  acx_cv_header_stdint_kind=\"(lacks uint64_t)\"\n+fi\n+\n+  break\n+done\n+if test \"$acx_cv_header_stdint\" = stddef.h; then\n+  acx_cv_header_stdint_kind=\"(lacks uintmax_t)\"\n+  for i in stdint.h $inttype_headers; do\n+    unset ac_cv_type_uintptr_t\n+    unset ac_cv_type_uint32_t\n+    unset ac_cv_type_uint64_t\n+    $as_echo_n \"looking for an incomplete stdint.h in $i, \" >&6\n+    ac_fn_c_check_type \"$LINENO\" \"uint32_t\" \"ac_cv_type_uint32_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_uint32_t\" = x\"\"yes; then :\n+  acx_cv_header_stdint=$i\n+else\n+  continue\n+fi\n+\n+    ac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_uint64_t\" = x\"\"yes; then :\n+\n+fi\n+\n+    ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_uintptr_t\" = x\"\"yes; then :\n+\n+fi\n+\n+    break\n+  done\n+fi\n+if test \"$acx_cv_header_stdint\" = stddef.h; then\n+  acx_cv_header_stdint_kind=\"(u_intXX_t style)\"\n+  for i in sys/types.h $inttype_headers; do\n+    unset ac_cv_type_u_int32_t\n+    unset ac_cv_type_u_int64_t\n+    $as_echo_n \"looking for u_intXX_t types in $i, \" >&6\n+    ac_fn_c_check_type \"$LINENO\" \"u_int32_t\" \"ac_cv_type_u_int32_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_u_int32_t\" = x\"\"yes; then :\n+  acx_cv_header_stdint=$i\n+else\n+  continue\n+fi\n+\n+    ac_fn_c_check_type \"$LINENO\" \"u_int64_t\" \"ac_cv_type_u_int64_t\" \"#include <sys/types.h>\n+#include <$i>\n+\"\n+if test \"x$ac_cv_type_u_int64_t\" = x\"\"yes; then :\n+\n+fi\n+\n+    break\n+  done\n+fi\n+if test \"$acx_cv_header_stdint\" = stddef.h; then\n+  acx_cv_header_stdint_kind=\"(using manual detection)\"\n+fi\n+\n+test -z \"$ac_cv_type_uintptr_t\" && ac_cv_type_uintptr_t=no\n+test -z \"$ac_cv_type_uint64_t\" && ac_cv_type_uint64_t=no\n+test -z \"$ac_cv_type_u_int64_t\" && ac_cv_type_u_int64_t=no\n+test -z \"$ac_cv_type_int_least32_t\" && ac_cv_type_int_least32_t=no\n+test -z \"$ac_cv_type_int_fast32_t\" && ac_cv_type_int_fast32_t=no\n+\n+# ----------------- Summarize what we found so far\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking what to include in gstdint.h\" >&5\n+$as_echo_n \"checking what to include in gstdint.h... \" >&6; }\n+\n+case `$as_basename -- gstdint.h ||\n+$as_expr X/gstdint.h : '.*/\\([^/][^/]*\\)/*$' \\| \\\n+\t Xgstdint.h : 'X\\(//\\)$' \\| \\\n+\t Xgstdint.h : 'X\\(/\\)' \\| . 2>/dev/null ||\n+$as_echo X/gstdint.h |\n+    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\/\\(\\/\\/\\)$/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  /^X\\/\\(\\/\\).*/{\n+\t    s//\\1/\n+\t    q\n+\t  }\n+\t  s/.*/./; q'` in\n+  stdint.h) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?\" >&5\n+$as_echo \"$as_me: WARNING: are you sure you want it there?\" >&2;} ;;\n+  inttypes.h) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?\" >&5\n+$as_echo \"$as_me: WARNING: are you sure you want it there?\" >&2;} ;;\n+  *) ;;\n+esac\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_header_stdint $acx_cv_header_stdint_kind\" >&5\n+$as_echo \"$acx_cv_header_stdint $acx_cv_header_stdint_kind\" >&6; }\n+\n+# ----------------- done included file, check C basic types --------\n+\n+# Lacking an uintptr_t?  Test size of void *\n+case \"$acx_cv_header_stdint:$ac_cv_type_uintptr_t\" in\n+  stddef.h:* | *:no) # The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of void *\" >&5\n+$as_echo_n \"checking size of void *... \" >&6; }\n+if test \"${ac_cv_sizeof_void_p+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (void *))\" \"ac_cv_sizeof_void_p\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_void_p\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (void *)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_void_p=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p\" >&5\n+$as_echo \"$ac_cv_sizeof_void_p\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_VOID_P $ac_cv_sizeof_void_p\n+_ACEOF\n+\n+ ;;\n+esac\n+\n+# Lacking an uint64_t?  Test size of long\n+case \"$acx_cv_header_stdint:$ac_cv_type_uint64_t:$ac_cv_type_u_int64_t\" in\n+  stddef.h:*:* | *:no:no) # The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of long\" >&5\n+$as_echo_n \"checking size of long... \" >&6; }\n+if test \"${ac_cv_sizeof_long+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (long))\" \"ac_cv_sizeof_long\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_long\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (long)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_long=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long\" >&5\n+$as_echo \"$ac_cv_sizeof_long\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_LONG $ac_cv_sizeof_long\n+_ACEOF\n+\n+ ;;\n+esac\n+\n+if test $acx_cv_header_stdint = stddef.h; then\n+  # Lacking a good header?  Test size of everything and deduce all types.\n+  # The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of int\" >&5\n+$as_echo_n \"checking size of int... \" >&6; }\n+if test \"${ac_cv_sizeof_int+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (int))\" \"ac_cv_sizeof_int\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_int\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (int)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_int=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_int\" >&5\n+$as_echo \"$ac_cv_sizeof_int\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_INT $ac_cv_sizeof_int\n+_ACEOF\n+\n+\n+  # The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of short\" >&5\n+$as_echo_n \"checking size of short... \" >&6; }\n+if test \"${ac_cv_sizeof_short+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (short))\" \"ac_cv_sizeof_short\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_short\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (short)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_short=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_short\" >&5\n+$as_echo \"$ac_cv_sizeof_short\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_SHORT $ac_cv_sizeof_short\n+_ACEOF\n+\n+\n+  # The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of char\" >&5\n+$as_echo_n \"checking size of char... \" >&6; }\n+if test \"${ac_cv_sizeof_char+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (char))\" \"ac_cv_sizeof_char\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_char\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (char)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_char=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_char\" >&5\n+$as_echo \"$ac_cv_sizeof_char\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_CHAR $ac_cv_sizeof_char\n+_ACEOF\n+\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int8_t\" >&5\n+$as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n+  case \"$ac_cv_sizeof_char\" in\n+    1) acx_cv_type_int8_t=char ;;\n+    *) as_fn_error \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n+  esac\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n+$as_echo \"$acx_cv_type_int8_t\" >&6; }\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int16_t\" >&5\n+$as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n+  case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n+    2:*) acx_cv_type_int16_t=int ;;\n+    *:2) acx_cv_type_int16_t=short ;;\n+    *) as_fn_error \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n+  esac\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n+$as_echo \"$acx_cv_type_int16_t\" >&6; }\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int32_t\" >&5\n+$as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n+  case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n+    4:*) acx_cv_type_int32_t=int ;;\n+    *:4) acx_cv_type_int32_t=long ;;\n+    *) as_fn_error \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n+  esac\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n+$as_echo \"$acx_cv_type_int32_t\" >&6; }\n+fi\n+\n+# These tests are here to make the output prettier\n+\n+if test \"$ac_cv_type_uint64_t\" != yes && test \"$ac_cv_type_u_int64_t\" != yes; then\n+  case \"$ac_cv_sizeof_long\" in\n+    8) acx_cv_type_int64_t=long ;;\n+  esac\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int64_t\" >&5\n+$as_echo_n \"checking for type equivalent to int64_t... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${acx_cv_type_int64_t-'using preprocessor symbols'}\" >&5\n+$as_echo \"${acx_cv_type_int64_t-'using preprocessor symbols'}\" >&6; }\n+fi\n+\n+# Now we can use the above types\n+\n+if test \"$ac_cv_type_uintptr_t\" != yes; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to intptr_t\" >&5\n+$as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n+  case $ac_cv_sizeof_void_p in\n+    2) acx_cv_type_intptr_t=int16_t ;;\n+    4) acx_cv_type_intptr_t=int32_t ;;\n+    8) acx_cv_type_intptr_t=int64_t ;;\n+    *) as_fn_error \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n+  esac\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n+$as_echo \"$acx_cv_type_intptr_t\" >&6; }\n+fi\n+\n+# ----------------- done all checks, emit header -------------\n+ac_config_commands=\"$ac_config_commands gstdint.h\"\n+\n+\n+\n+\n for ac_header in sys/mman.h\n do :\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"sys/mman.h\" \"ac_cv_header_sys_mman_h\" \"$ac_includes_default\"\n@@ -12779,6 +13418,24 @@ CXX=\"$CXX\"\n GFORTRAN=\"$GFORTRAN\"\n GCJ=\"$GCJ\"\n \n+GCC=\"$GCC\"\n+CC=\"$CC\"\n+acx_cv_header_stdint=\"$acx_cv_header_stdint\"\n+acx_cv_type_int8_t=\"$acx_cv_type_int8_t\"\n+acx_cv_type_int16_t=\"$acx_cv_type_int16_t\"\n+acx_cv_type_int32_t=\"$acx_cv_type_int32_t\"\n+acx_cv_type_int64_t=\"$acx_cv_type_int64_t\"\n+acx_cv_type_intptr_t=\"$acx_cv_type_intptr_t\"\n+ac_cv_type_uintmax_t=\"$ac_cv_type_uintmax_t\"\n+ac_cv_type_uintptr_t=\"$ac_cv_type_uintptr_t\"\n+ac_cv_type_uint64_t=\"$ac_cv_type_uint64_t\"\n+ac_cv_type_u_int64_t=\"$ac_cv_type_u_int64_t\"\n+ac_cv_type_u_int32_t=\"$ac_cv_type_u_int32_t\"\n+ac_cv_type_int_least32_t=\"$ac_cv_type_int_least32_t\"\n+ac_cv_type_int_fast32_t=\"$ac_cv_type_int_fast32_t\"\n+ac_cv_sizeof_void_p=\"$ac_cv_sizeof_void_p\"\n+\n+\n # Variables needed in config.status (file generation) which aren't already\n # passed by autoconf.\n SUBDIRS=\"$SUBDIRS\"\n@@ -12796,6 +13453,7 @@ do\n     \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n+    \"gstdint.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS gstdint.h\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n     \"backtrace-supported.h\") CONFIG_FILES=\"$CONFIG_FILES backtrace-supported.h\" ;;\n     \"default\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n@@ -14125,6 +14783,378 @@ case \" $CONFIG_FILES \" in\n    ac_file=Makefile . ${multi_basedir}/config-ml.in\n    ;;\n esac ;;\n+    \"gstdint.h\":C)\n+if test \"$GCC\" = yes; then\n+  echo \"/* generated for \" `$CC --version | sed 1q` \"*/\" > tmp-stdint.h\n+else\n+  echo \"/* generated for $CC */\" > tmp-stdint.h\n+fi\n+\n+sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+  #ifndef GCC_GENERATED_STDINT_H\n+  #define GCC_GENERATED_STDINT_H 1\n+\n+  #include <sys/types.h>\n+EOF\n+\n+if test \"$acx_cv_header_stdint\" != stdint.h; then\n+  echo \"#include <stddef.h>\" >> tmp-stdint.h\n+fi\n+if test \"$acx_cv_header_stdint\" != stddef.h; then\n+  echo \"#include <$acx_cv_header_stdint>\" >> tmp-stdint.h\n+fi\n+\n+sed 's/^ *//' >> tmp-stdint.h <<EOF\n+  /* glibc uses these symbols as guards to prevent redefinitions.  */\n+  #ifdef __int8_t_defined\n+  #define _INT8_T\n+  #define _INT16_T\n+  #define _INT32_T\n+  #endif\n+  #ifdef __uint32_t_defined\n+  #define _UINT32_T\n+  #endif\n+\n+EOF\n+\n+# ----------------- done header, emit basic int types -------------\n+if test \"$acx_cv_header_stdint\" = stddef.h; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    #ifndef _UINT8_T\n+    #define _UINT8_T\n+    #ifndef __uint8_t_defined\n+    #define __uint8_t_defined\n+    #ifndef uint8_t\n+    typedef unsigned $acx_cv_type_int8_t uint8_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _UINT16_T\n+    #define _UINT16_T\n+    #ifndef __uint16_t_defined\n+    #define __uint16_t_defined\n+    #ifndef uint16_t\n+    typedef unsigned $acx_cv_type_int16_t uint16_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _UINT32_T\n+    #define _UINT32_T\n+    #ifndef __uint32_t_defined\n+    #define __uint32_t_defined\n+    #ifndef uint32_t\n+    typedef unsigned $acx_cv_type_int32_t uint32_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _INT8_T\n+    #define _INT8_T\n+    #ifndef __int8_t_defined\n+    #define __int8_t_defined\n+    #ifndef int8_t\n+    typedef $acx_cv_type_int8_t int8_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _INT16_T\n+    #define _INT16_T\n+    #ifndef __int16_t_defined\n+    #define __int16_t_defined\n+    #ifndef int16_t\n+    typedef $acx_cv_type_int16_t int16_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _INT32_T\n+    #define _INT32_T\n+    #ifndef __int32_t_defined\n+    #define __int32_t_defined\n+    #ifndef int32_t\n+    typedef $acx_cv_type_int32_t int32_t;\n+    #endif\n+    #endif\n+    #endif\n+EOF\n+elif test \"$ac_cv_type_u_int32_t\" = yes; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* int8_t int16_t int32_t defined by inet code, we do the u_intXX types */\n+    #ifndef _INT8_T\n+    #define _INT8_T\n+    #endif\n+    #ifndef _INT16_T\n+    #define _INT16_T\n+    #endif\n+    #ifndef _INT32_T\n+    #define _INT32_T\n+    #endif\n+\n+    #ifndef _UINT8_T\n+    #define _UINT8_T\n+    #ifndef __uint8_t_defined\n+    #define __uint8_t_defined\n+    #ifndef uint8_t\n+    typedef u_int8_t uint8_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _UINT16_T\n+    #define _UINT16_T\n+    #ifndef __uint16_t_defined\n+    #define __uint16_t_defined\n+    #ifndef uint16_t\n+    typedef u_int16_t uint16_t;\n+    #endif\n+    #endif\n+    #endif\n+\n+    #ifndef _UINT32_T\n+    #define _UINT32_T\n+    #ifndef __uint32_t_defined\n+    #define __uint32_t_defined\n+    #ifndef uint32_t\n+    typedef u_int32_t uint32_t;\n+    #endif\n+    #endif\n+    #endif\n+EOF\n+else\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* Some systems have guard macros to prevent redefinitions, define them.  */\n+    #ifndef _INT8_T\n+    #define _INT8_T\n+    #endif\n+    #ifndef _INT16_T\n+    #define _INT16_T\n+    #endif\n+    #ifndef _INT32_T\n+    #define _INT32_T\n+    #endif\n+    #ifndef _UINT8_T\n+    #define _UINT8_T\n+    #endif\n+    #ifndef _UINT16_T\n+    #define _UINT16_T\n+    #endif\n+    #ifndef _UINT32_T\n+    #define _UINT32_T\n+    #endif\n+EOF\n+fi\n+\n+# ------------- done basic int types, emit int64_t types ------------\n+if test \"$ac_cv_type_uint64_t\" = yes; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* system headers have good uint64_t and int64_t */\n+    #ifndef _INT64_T\n+    #define _INT64_T\n+    #endif\n+    #ifndef _UINT64_T\n+    #define _UINT64_T\n+    #endif\n+EOF\n+elif test \"$ac_cv_type_u_int64_t\" = yes; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* system headers have an u_int64_t (and int64_t) */\n+    #ifndef _INT64_T\n+    #define _INT64_T\n+    #endif\n+    #ifndef _UINT64_T\n+    #define _UINT64_T\n+    #ifndef __uint64_t_defined\n+    #define __uint64_t_defined\n+    #ifndef uint64_t\n+    typedef u_int64_t uint64_t;\n+    #endif\n+    #endif\n+    #endif\n+EOF\n+elif test -n \"$acx_cv_type_int64_t\"; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n+    #ifndef _INT64_T\n+    #define _INT64_T\n+    #ifndef int64_t\n+    typedef $acx_cv_type_int64_t int64_t;\n+    #endif\n+    #endif\n+    #ifndef _UINT64_T\n+    #define _UINT64_T\n+    #ifndef __uint64_t_defined\n+    #define __uint64_t_defined\n+    #ifndef uint64_t\n+    typedef unsigned $acx_cv_type_int64_t uint64_t;\n+    #endif\n+    #endif\n+    #endif\n+EOF\n+else\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* some common heuristics for int64_t, using compiler-specific tests */\n+    #if defined __STDC_VERSION__ && (__STDC_VERSION__-0) >= 199901L\n+    #ifndef _INT64_T\n+    #define _INT64_T\n+    #ifndef __int64_t_defined\n+    #ifndef int64_t\n+    typedef long long int64_t;\n+    #endif\n+    #endif\n+    #endif\n+    #ifndef _UINT64_T\n+    #define _UINT64_T\n+    #ifndef uint64_t\n+    typedef unsigned long long uint64_t;\n+    #endif\n+    #endif\n+\n+    #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n+    /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n+       does not implement __extension__.  But that compiler doesn't define\n+       __GNUC_MINOR__.  */\n+    # if __GNUC__ < 2 || (__NeXT__ && !__GNUC_MINOR__)\n+    # define __extension__\n+    # endif\n+\n+    # ifndef _INT64_T\n+    # define _INT64_T\n+    # ifndef int64_t\n+    __extension__ typedef long long int64_t;\n+    # endif\n+    # endif\n+    # ifndef _UINT64_T\n+    # define _UINT64_T\n+    # ifndef uint64_t\n+    __extension__ typedef unsigned long long uint64_t;\n+    # endif\n+    # endif\n+\n+    #elif !defined __STRICT_ANSI__\n+    # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n+\n+    #  ifndef _INT64_T\n+    #  define _INT64_T\n+    #  ifndef int64_t\n+    typedef __int64 int64_t;\n+    #  endif\n+    #  endif\n+    #  ifndef _UINT64_T\n+    #  define _UINT64_T\n+    #  ifndef uint64_t\n+    typedef unsigned __int64 uint64_t;\n+    #  endif\n+    #  endif\n+    # endif /* compiler */\n+\n+    #endif /* ANSI version */\n+EOF\n+fi\n+\n+# ------------- done int64_t types, emit intptr types ------------\n+if test \"$ac_cv_type_uintptr_t\" != yes; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n+    #ifndef __uintptr_t_defined\n+    #ifndef uintptr_t\n+    typedef u$acx_cv_type_intptr_t uintptr_t;\n+    #endif\n+    #endif\n+    #ifndef __intptr_t_defined\n+    #ifndef intptr_t\n+    typedef $acx_cv_type_intptr_t  intptr_t;\n+    #endif\n+    #endif\n+EOF\n+fi\n+\n+# ------------- done intptr types, emit int_least types ------------\n+if test \"$ac_cv_type_int_least32_t\" != yes; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* Define int_least types */\n+    typedef int8_t     int_least8_t;\n+    typedef int16_t    int_least16_t;\n+    typedef int32_t    int_least32_t;\n+    #ifdef _INT64_T\n+    typedef int64_t    int_least64_t;\n+    #endif\n+\n+    typedef uint8_t    uint_least8_t;\n+    typedef uint16_t   uint_least16_t;\n+    typedef uint32_t   uint_least32_t;\n+    #ifdef _UINT64_T\n+    typedef uint64_t   uint_least64_t;\n+    #endif\n+EOF\n+fi\n+\n+# ------------- done intptr types, emit int_fast types ------------\n+if test \"$ac_cv_type_int_fast32_t\" != yes; then\n+      sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* Define int_fast types.  short is often slow */\n+    typedef int8_t       int_fast8_t;\n+    typedef int          int_fast16_t;\n+    typedef int32_t      int_fast32_t;\n+    #ifdef _INT64_T\n+    typedef int64_t      int_fast64_t;\n+    #endif\n+\n+    typedef uint8_t      uint_fast8_t;\n+    typedef unsigned int uint_fast16_t;\n+    typedef uint32_t     uint_fast32_t;\n+    #ifdef _UINT64_T\n+    typedef uint64_t     uint_fast64_t;\n+    #endif\n+EOF\n+fi\n+\n+if test \"$ac_cv_type_uintmax_t\" != yes; then\n+  sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+    /* Define intmax based on what we found */\n+    #ifndef intmax_t\n+    #ifdef _INT64_T\n+    typedef int64_t       intmax_t;\n+    #else\n+    typedef long          intmax_t;\n+    #endif\n+    #endif\n+    #ifndef uintmax_t\n+    #ifdef _UINT64_T\n+    typedef uint64_t      uintmax_t;\n+    #else\n+    typedef unsigned long uintmax_t;\n+    #endif\n+    #endif\n+EOF\n+fi\n+\n+sed 's/^ *//' >> tmp-stdint.h <<EOF\n+\n+  #endif /* GCC_GENERATED_STDINT_H */\n+EOF\n+\n+if test -r gstdint.h && cmp -s tmp-stdint.h gstdint.h; then\n+  rm -f tmp-stdint.h\n+else\n+  mv -f tmp-stdint.h gstdint.h\n+fi\n+\n+ ;;\n     \"default\":C) if test -n \"$CONFIG_FILES\"; then\n    if test -n \"${with_target_subdir}\"; then\n      # Multilibs need MULTISUBDIR defined correctly in certain makefiles so"}, {"sha": "4e0abbab720714a249ef2477f834cf295d226682", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -168,6 +168,8 @@ if test \"$backtrace_supported\" = \"yes\"; then\n fi\n AC_SUBST(BACKTRACE_SUPPORTED)\n \n+GCC_HEADER_STDINT(gstdint.h)\n+\n AC_CHECK_HEADERS(sys/mman.h)\n if test \"$ac_cv_header_sys_mman_h\" = \"no\"; then\n   have_mmap=no"}, {"sha": "68ebb4e3ad16d40b7c69684c54a801c756e0b070", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768505569c3634f2e726599a7532a7badf74f38c/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=768505569c3634f2e726599a7532a7badf74f38c", "patch": "@@ -33,7 +33,6 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include \"config.h\"\n \n #include <errno.h>\n-#include <stdint.h>\n #include <stdlib.h>\n #include <string.h>\n #include <sys/types.h>"}]}