{"sha": "af4142d50b403bbb06da55f464e0ddebf22854d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY0MTQyZDUwYjQwM2JiYjA2ZGE1NWY0NjRlMGRkZWJmMjI4NTRkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-15T17:19:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-15T17:19:40Z"}, "message": "restore dwarf2 prototypes\n\nFrom-SVN: r15912", "tree": {"sha": "239ba07b462f2c4d830082dbf1f0cafa733aa128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/239ba07b462f2c4d830082dbf1f0cafa733aa128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af4142d50b403bbb06da55f464e0ddebf22854d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4142d50b403bbb06da55f464e0ddebf22854d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af4142d50b403bbb06da55f464e0ddebf22854d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4142d50b403bbb06da55f464e0ddebf22854d9/comments", "author": null, "committer": null, "parents": [{"sha": "0e52c1777d3095e5fb9016de8508b249aa0e3a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e52c1777d3095e5fb9016de8508b249aa0e3a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e52c1777d3095e5fb9016de8508b249aa0e3a5b"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "217015d2c10cbcc7d6b9128dc5b6ccbaf73fde2c", "filename": "gcc/tree.h", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4142d50b403bbb06da55f464e0ddebf22854d9/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4142d50b403bbb06da55f464e0ddebf22854d9/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=af4142d50b403bbb06da55f464e0ddebf22854d9", "patch": "@@ -1843,3 +1843,49 @@ extern void pop_obstacks PROTO((void));\n /* If KIND=='I', return a suitable global initializer (constructor) name.\n    If KIND=='D', return a suitable global clean-up (destructor) name.  */\n extern tree get_file_function_name PROTO((int));\n+\f\n+/* Interface of the DWARF2 unwind info support.  */\n+\n+/* Decide whether we want to emit frame unwind information for the current\n+   translation unit.  */\n+\n+extern int dwarf2out_do_frame\t\tPROTO((void));\n+\n+/* Generate a new label for the CFI info to refer to.  */\n+\n+extern char *dwarf2out_cfi_label\tPROTO((void));\n+\n+/* Entry point to update the canonical frame address (CFA).  */\n+\n+extern void dwarf2out_def_cfa\t\tPROTO((char *, unsigned, long));\n+\n+/* Add the CFI for saving a register window.  */\n+\n+extern void dwarf2out_window_save\tPROTO((char *));\n+\n+/* Add a CFI to update the running total of the size of arguments pushed\n+   onto the stack.  */\n+\n+extern void dwarf2out_args_size\t\tPROTO((char *, long));\n+\n+/* Entry point for saving a register to the stack.  */\n+\n+extern void dwarf2out_reg_save\t\tPROTO((char *, unsigned, long));\n+\n+/* Entry point for saving the return address in the stack.  */\n+\n+extern void dwarf2out_return_save\tPROTO((char *, long));\n+\n+/* Entry point for saving the return address in a register.  */\n+\n+extern void dwarf2out_return_reg\tPROTO((char *, unsigned));\n+\n+/* Output a marker (i.e. a label) for the beginning of a function, before\n+   the prologue.  */\n+\n+extern void dwarf2out_begin_prologue\tPROTO((void));\n+\n+/* Output a marker (i.e. a label) for the absolute end of the generated\n+   code for a function definition.  */\n+\n+extern void dwarf2out_end_epilogue\tPROTO((void));"}]}