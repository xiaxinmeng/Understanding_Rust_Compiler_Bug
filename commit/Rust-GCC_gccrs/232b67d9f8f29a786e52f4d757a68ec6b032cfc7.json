{"sha": "232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMyYjY3ZDlmOGYyOWE3ODZlNTJmNGQ3NTdhNjhlYzZiMDMyY2ZjNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-05-08T10:13:19Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-05-08T10:13:19Z"}, "message": "Makefile.in (cs-tconfig.h): Pass USED_FOR_TARGET to mkconfig.sh\n\n\t* Makefile.in (cs-tconfig.h): Pass USED_FOR_TARGET to mkconfig.sh\n\t* aclocal.m4 (GCC_TARGET_TEMPLATE, AH_TEMPLATE): New.\n\t* configure.ac (enable_checking): Fix typos in runtime_checking.\n\t(ENABLE_RUNTIME_CHECKING): Mark as target template.\n\t(xm_file): Prepend auto-host.h\n\t(HAVE_GAS_HIDDEN, HAVE_LD_EH_FRAME_HDR): Mark as target template.\n\t* mkconfig.sh: Do not automatically define USED_FOR_TARGET in\n\ttconfig.h.\n\t* crtstuff.c: Do not include auto-host.h.\n\t(IN_LIBGCC2): Do not define.\n\t* gcov-io.h: Include tconfig.h, not auto-host.h.\n\t* libgcc2.c: Do not include auto-host.h.\n\t(abort): Do not undefine.\n\t* libgcov.c: Remove unneeded comment about config.h.\n\t* unwind-dw2-fde-glibc.c: Do not inlude auto-host.h.\n\t* config.in, configure: Regenerated.\n\nCo-Authored-By: Paolo Bonzini <bonzini@gnu.org>\n\nFrom-SVN: r99386", "tree": {"sha": "379e548ad7e6cdc8908ed197771e9b289b60574f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/379e548ad7e6cdc8908ed197771e9b289b60574f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/comments", "author": null, "committer": null, "parents": [{"sha": "56daab84ad1d63680d4f3b80fadec6a3c7b40fe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56daab84ad1d63680d4f3b80fadec6a3c7b40fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56daab84ad1d63680d4f3b80fadec6a3c7b40fe8"}], "stats": {"total": 731, "additions": 685, "deletions": 46}, "files": [{"sha": "38b08bdb2a78710675b635676a4c302dc87893e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -1,3 +1,23 @@\n+2005-05-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\t    Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* Makefile.in (cs-tconfig.h): Pass USED_FOR_TARGET to mkconfig.sh\n+\t* aclocal.m4 (GCC_TARGET_TEMPLATE, AH_TEMPLATE): New.\n+\t* configure.ac (enable_checking): Fix typos in runtime_checking.\n+\t(ENABLE_RUNTIME_CHECKING): Mark as target template.\n+\t(xm_file): Prepend auto-host.h\n+\t(HAVE_GAS_HIDDEN, HAVE_LD_EH_FRAME_HDR): Mark as target template.\n+\t* mkconfig.sh: Do not automatically define USED_FOR_TARGET in\n+\ttconfig.h.\n+\t* crtstuff.c: Do not include auto-host.h.\n+\t(IN_LIBGCC2): Do not define.\n+\t* gcov-io.h: Include tconfig.h, not auto-host.h.\n+\t* libgcc2.c: Do not include auto-host.h.\n+\t(abort): Do not undefine.\n+\t* libgcov.c: Remove unneeded comment about config.h.\n+\t* unwind-dw2-fde-glibc.c: Do not inlude auto-host.h.\n+\t* config.in, configure: Regenerated.\n+\t\n 2005-05-08  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Falk Hueffner  <falk@debian.org>\n "}, {"sha": "531c003efd043db635afb94839d4787f5bc4c32c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -1086,7 +1086,7 @@ cs-bconfig.h: Makefile\n \n cs-tconfig.h: Makefile\n \tTARGET_CPU_DEFAULT=\"\" \\\n-\tHEADERS=\"$(xm_include_list)\" DEFINES=\"$(xm_defines)\" \\\n+\tHEADERS=\"$(xm_include_list)\" DEFINES=\"USED_FOR_TARGET $(xm_defines)\" \\\n \t$(SHELL) $(srcdir)/mkconfig.sh tconfig.h\n \n cs-tm.h: Makefile"}, {"sha": "98c56a47af09375c20f58bebc45379c1ff0adb40", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -654,3 +654,25 @@ AC_PREREQ([2.50])dnl\n # expand $ac_aux_dir to an absolute path\n am_aux_dir=`cd $ac_aux_dir && pwd`\n ])\n+\n+\n+dnl GCC_TARGET_TEMPLATE(KEY)\n+dnl ------------------------\n+dnl Define KEY as a valid configure key on the target machine.\n+\n+m4_define([GCC_TARGET_TEMPLATE],\n+[m4_define([GCC_TARGET_TEMPLATE($1)],[])])\n+\n+dnl AH_TEMPLATE(KEY, DESCRIPTION)\n+dnl -----------------------------\n+dnl Issue an autoheader template for KEY, i.e., a comment composed of\n+dnl DESCRIPTION (properly wrapped), and then #undef KEY.  Redefinition\n+dnl of the macro in autoheader.m4, to support definition of only a few\n+dnl keys while compiling target libraries.\n+\n+m4_define([AH_TEMPLATE],\n+[AH_VERBATIM([$1],m4_text_wrap([$2 */], [   ], [/* ])\n+m4_ifdef([GCC_TARGET_TEMPLATE($1)],[],[#ifndef USED_FOR_TARGET\n+])[#undef $1]m4_ifdef([GCC_TARGET_TEMPLATE($1)],[],[\n+#endif\n+]))])"}, {"sha": "f1d33c087eed35d996a55dad90a45272f88eea6b", "filename": "gcc/config.in", "status": "modified", "additions": 624, "deletions": 0, "changes": 624, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -1,55 +1,94 @@\n /* config.in.  Generated from configure.ac by autoheader.  */\n \n /* Define as the number of bits in a byte, if \\`limits.h' doesn't. */\n+#ifndef USED_FOR_TARGET\n #undef CHAR_BIT\n+#endif\n+\n \n /* Define 0/1 to force the choice for exception handling model. */\n+#ifndef USED_FOR_TARGET\n #undef CONFIG_SJLJ_EXCEPTIONS\n+#endif\n+\n \n /* Define to enable the use of a default assembler. */\n+#ifndef USED_FOR_TARGET\n #undef DEFAULT_ASSEMBLER\n+#endif\n+\n \n /* Define to enable the use of a default linker. */\n+#ifndef USED_FOR_TARGET\n #undef DEFAULT_LINKER\n+#endif\n+\n \n /* Define if you want to use __cxa_atexit, rather than atexit, to register C++\n    destructors for local statics and global objects. This is essential for\n    fully standards-compliant handling of destructors, but requires\n    __cxa_atexit in libc. */\n+#ifndef USED_FOR_TARGET\n #undef DEFAULT_USE_CXA_ATEXIT\n+#endif\n+\n \n /* Define if you want assertions enabled. This is a cheap check. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_ASSERT_CHECKING\n+#endif\n+\n \n /* Define if you want more run-time sanity checks. This one gets a grab bag of\n    miscellaneous but relatively cheap checks. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_CHECKING\n+#endif\n+\n \n /* Define if you want fold checked that it never destructs its argument. This\n    is quite expensive. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_FOLD_CHECKING\n+#endif\n+\n \n /* Define if you want the garbage collector to operate in maximally paranoid\n    mode, validating the entire heap and collecting garbage at every\n    opportunity. This is extremely expensive. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_GC_ALWAYS_COLLECT\n+#endif\n+\n \n /* Define if you want the garbage collector to do object poisoning and other\n    memory allocation checks. This is quite expensive. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_GC_CHECKING\n+#endif\n+\n \n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_NLS\n+#endif\n+\n \n /* Define if you want all operations on RTL (the basic data structure of the\n    optimizer and back end) to be checked for dynamic type safety at runtime.\n    This is quite expensive. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_RTL_CHECKING\n+#endif\n+\n \n /* Define if you want RTL flag accesses to be checked against the RTL codes\n    that are supported for each access macro. This is relatively cheap. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_RTL_FLAG_CHECKING\n+#endif\n+\n \n /* Define if you want runtime assertions enabled. This is a cheap check. */\n #undef ENABLE_RUNTIME_CHECKING\n@@ -58,639 +97,1209 @@\n    front ends) to be checked for dynamic type safety at runtime. This is\n    moderately expensive. The tree browser debugging routines will also be\n    enabled by this option. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_TREE_CHECKING\n+#endif\n+\n \n /* Define if you want to run subprograms and generated programs through\n    valgrind (a memory checker). This is extremely expensive. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_VALGRIND_CHECKING\n+#endif\n+\n \n /* Define to 1 if installation paths should be looked up in the Windows\n    Registry. Ignored on non-Windows hosts. */\n+#ifndef USED_FOR_TARGET\n #undef ENABLE_WIN32_REGISTRY\n+#endif\n+\n \n /* Define to the name of a file containing a list of extra machine modes for\n    this architecture. */\n+#ifndef USED_FOR_TARGET\n #undef EXTRA_MODES_FILE\n+#endif\n+\n \n /* Define to enable detailed memory allocation stats gathering. */\n+#ifndef USED_FOR_TARGET\n #undef GATHER_STATISTICS\n+#endif\n+\n \n /* Define to the type of elements in the array set by `getgroups'. Usually\n    this is either `int' or `gid_t'. */\n+#ifndef USED_FOR_TARGET\n #undef GETGROUPS_T\n+#endif\n+\n \n /* Define if the zone collector is in use */\n+#ifndef USED_FOR_TARGET\n #undef GGC_ZONE\n+#endif\n+\n \n /* Define to 1 if you have the `alphasort' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_ALPHASORT\n+#endif\n+\n \n /* Define if your assembler supports dwarf2 .file/.loc directives, and\n    preserves file table indices exactly as given. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_DWARF2_DEBUG_LINE\n+#endif\n+\n \n /* Define if your assembler supports explicit relocations. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_EXPLICIT_RELOCS\n+#endif\n+\n \n /* Define if your assembler supports the --gdwarf2 option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_GDWARF2_DEBUG_FLAG\n+#endif\n+\n \n /* Define true if the assembler supports '.long foo@GOTOFF'. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_GOTOFF_IN_DATA\n+#endif\n+\n \n /* Define if your assembler supports the --gstabs option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_GSTABS_DEBUG_FLAG\n+#endif\n+\n \n /* Define if your assembler supports the Sun syntax for cmov. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_IX86_CMOV_SUN_SYNTAX\n+#endif\n+\n \n /* Define if your assembler supports .sleb128 and .uleb128. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_LEB128\n+#endif\n+\n \n /* Define if your assembler supports ltoffx and ldxmov relocations. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_LTOFFX_LDXMOV_RELOCS\n+#endif\n+\n \n /* Define if your assembler supports mfcr field. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_MFCRF\n+#endif\n+\n \n /* Define if your assembler supports the -no-mul-bug-abort option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_NO_MUL_BUG_ABORT_OPTION\n+#endif\n+\n \n /* Define if your assembler supports offsetable %lo(). */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_OFFSETABLE_LO10\n+#endif\n+\n \n /* Define if your assembler supports popcntb field. */\n #undef HAVE_AS_POPCNTB\n \n /* Define if your assembler supports .register. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_REGISTER_PSEUDO_OP\n+#endif\n+\n \n /* Define if your assembler supports -relax option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_RELAX_OPTION\n+#endif\n+\n \n /* Define if your assembler and linker support unaligned PC relative relocs.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_SPARC_UA_PCREL\n+#endif\n+\n \n /* Define if your assembler and linker support unaligned PC relative relocs\n    against hidden symbols. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_SPARC_UA_PCREL_HIDDEN\n+#endif\n+\n \n /* Define if your assembler supports thread-local storage. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_AS_TLS\n+#endif\n+\n \n /* Define to 1 if you have the `atoll' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_ATOLL\n+#endif\n+\n \n /* Define to 1 if you have the `atoq' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_ATOQ\n+#endif\n+\n \n /* Define to 1 if you have the `clearerr_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_CLEARERR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `clock' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_CLOCK\n+#endif\n+\n \n /* Define if <time.h> defines clock_t. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_CLOCK_T\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'abort', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_ABORT\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'atof', otherwise define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_ATOF\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'atol', otherwise define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_ATOL\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'basename', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_BASENAME\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'calloc', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_CALLOC\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'clearerr_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_CLEARERR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'clock', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_CLOCK\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'errno', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_ERRNO\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'feof_unlocked', otherwise define\n    to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FEOF_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'ferror_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FERROR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fflush_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FFLUSH_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fgetc_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FGETC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fgets_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FGETS_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fileno_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FILENO_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fprintf_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FPRINTF_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fputc_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FPUTC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fputs_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FPUTS_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fread_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FREAD_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'free', otherwise define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FREE\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'fwrite_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_FWRITE_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getchar_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETCHAR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getcwd', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETCWD\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getc_unlocked', otherwise define\n    to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getenv', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETENV\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getopt', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETOPT\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getpagesize', otherwise define\n    to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETPAGESIZE\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getrlimit', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETRLIMIT\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getrusage', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETRUSAGE\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'getwd', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_GETWD\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'ldgetname', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_LDGETNAME\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'malloc', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_MALLOC\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'putchar_unlocked', otherwise\n    define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_PUTCHAR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'putc_unlocked', otherwise define\n    to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_PUTC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'realloc', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_REALLOC\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'sbrk', otherwise define to 0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_SBRK\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'setrlimit', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_SETRLIMIT\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'snprintf', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_SNPRINTF\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'strsignal', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_STRSIGNAL\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'strstr', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_STRSTR\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'times', otherwise define to 0.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_TIMES\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'vasprintf', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_VASPRINTF\n+#endif\n+\n \n /* Define to 1 if we found a declaration for 'vsnprintf', otherwise define to\n    0. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DECL_VSNPRINTF\n+#endif\n+\n \n /* Define to 1 if you have the <direct.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DIRECT_H\n+#endif\n+\n \n /* Define to 1 if you have the `dup2' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_DUP2\n+#endif\n+\n \n /* Define to 1 if you have the <fcntl.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FCNTL_H\n+#endif\n+\n \n /* Define to 1 if you have the `feof_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FEOF_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `ferror_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FERROR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fflush_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FFLUSH_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fgetc_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FGETC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fgets_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FGETS_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fileno_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FILENO_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fork' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FORK\n+#endif\n+\n \n /* Define to 1 if you have the `fprintf_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FPRINTF_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fputc_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FPUTC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fputs_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FPUTS_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fread_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FREAD_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `fwrite_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_FWRITE_UNLOCKED\n+#endif\n+\n \n /* Define if your assembler supports .balign and .p2align. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_BALIGN_AND_P2ALIGN\n+#endif\n+\n \n /* Define 0/1 if your assembler supports COMDAT group. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_COMDAT_GROUP\n+#endif\n+\n \n /* Define if your assembler uses the new HImode fild and fist notation. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_FILDS_FISTS\n+#endif\n+\n \n /* Define if your assembler and linker support .hidden. */\n #undef HAVE_GAS_HIDDEN\n \n /* Define if your assembler supports specifying the maximum number of bytes to\n    skip when using the GAS .p2align command. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_MAX_SKIP_P2ALIGN\n+#endif\n+\n \n /* Define if your assembler supports .nsubspa comdat option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_NSUBSPA_COMDAT\n+#endif\n+\n \n /* Define if your assembler and linker support 32-bit section relative relocs\n    via '.secrel32 label'. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_PE_SECREL32_RELOC\n+#endif\n+\n \n /* Define 0/1 if your assembler supports marking sections with SHF_MERGE flag.\n    */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_SHF_MERGE\n+#endif\n+\n \n /* Define if your assembler supports .subsection and .subsection -1 starts\n    emitting at the beginning of your section. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_SUBSECTION_ORDERING\n+#endif\n+\n \n /* Define if your assembler supports .weak. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GAS_WEAK\n+#endif\n+\n \n /* Define to 1 if you have the `getchar_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GETCHAR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `getc_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GETC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `getrlimit' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GETRLIMIT\n+#endif\n+\n \n /* Define to 1 if you have the `getrusage' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GETRUSAGE\n+#endif\n+\n \n /* Define to 1 if you have the `gettimeofday' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GETTIMEOFDAY\n+#endif\n+\n \n /* Define if you have the iconv() function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_ICONV\n+#endif\n+\n \n /* Define to 1 if you have the <iconv.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_ICONV_H\n+#endif\n+\n \n /* Define .init_array/.fini_array sections are available and working. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_INITFINI_ARRAY\n+#endif\n+\n \n /* Define if you have a working <inttypes.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_INTTYPES_H\n+#endif\n+\n \n /* Define to 1 if you have the `kill' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_KILL\n+#endif\n+\n \n /* Define if you have <langinfo.h> and nl_langinfo(CODESET). */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LANGINFO_CODESET\n+#endif\n+\n \n /* Define to 1 if you have the <langinfo.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LANGINFO_H\n+#endif\n+\n \n /* Define if your <locale.h> file defines LC_MESSAGES. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LC_MESSAGES\n+#endif\n+\n \n /* Define to 1 if you have the <ldfcn.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LDFCN_H\n+#endif\n+\n \n /* Define if your linker supports --as-needed and --no-as-needed options. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_AS_NEEDED\n+#endif\n+\n \n /* Define if your linker supports --demangle option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_DEMANGLE\n+#endif\n+\n \n /* Define if your linker supports --eh-frame-hdr option. */\n #undef HAVE_LD_EH_FRAME_HDR\n \n /* Define if your PowerPC64 linker only needs function descriptor syms. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_NO_DOT_SYMS\n+#endif\n+\n \n /* Define if your linker supports -pie option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_PIE\n+#endif\n+\n \n /* Define if your linker links a mix of read-only and read-write sections into\n    a read-write section. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_RO_RW_SECTION_MIXING\n+#endif\n+\n \n /* Define if your linker supports -Bstatic/-Bdynamic option. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_STATIC_DYNAMIC\n+#endif\n+\n \n /* Define if your linker supports --sysroot. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LD_SYSROOT\n+#endif\n+\n \n /* Define to 1 if you have the <limits.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LIMITS_H\n+#endif\n+\n \n /* Define to 1 if you have the <locale.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LOCALE_H\n+#endif\n+\n \n /* Define if your compiler supports the \\`long long' type. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_LONG_LONG\n+#endif\n+\n \n /* Define to 1 if you have the <malloc.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MALLOC_H\n+#endif\n+\n \n /* Define to 1 if you have the `mbstowcs' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MBSTOWCS\n+#endif\n+\n \n /* Define if valgrind's memcheck.h header is installed. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MEMCHECK_H\n+#endif\n+\n \n /* Define to 1 if you have the <memory.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MEMORY_H\n+#endif\n+\n \n /* Define to 1 if you have the `mincore' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MINCORE\n+#endif\n+\n \n /* Define to 1 if you have the `mmap' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MMAP\n+#endif\n+\n \n /* Define if mmap with MAP_ANON(YMOUS) works. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MMAP_ANON\n+#endif\n+\n \n /* Define if mmap of /dev/zero works. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MMAP_DEV_ZERO\n+#endif\n+\n \n /* Define if read-only mmap of a plain file works. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_MMAP_FILE\n+#endif\n+\n \n /* Define to 1 if you have the `nl_langinfo' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_NL_LANGINFO\n+#endif\n+\n \n /* Define if printf supports \"%p\". */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_PRINTF_PTR\n+#endif\n+\n \n /* Define to 1 if you have the `putchar_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_PUTCHAR_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `putc_unlocked' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_PUTC_UNLOCKED\n+#endif\n+\n \n /* Define to 1 if you have the `scandir' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SCANDIR\n+#endif\n+\n \n /* Define to 1 if you have the `setlocale' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SETLOCALE\n+#endif\n+\n \n /* Define to 1 if you have the `setrlimit' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SETRLIMIT\n+#endif\n+\n \n /* Define to 1 if you have the <stddef.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STDDEF_H\n+#endif\n+\n \n /* Define to 1 if you have the <stdint.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STDINT_H\n+#endif\n+\n \n /* Define to 1 if you have the <stdlib.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STDLIB_H\n+#endif\n+\n \n /* Define to 1 if you have the <strings.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STRINGS_H\n+#endif\n+\n \n /* Define to 1 if you have the <string.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STRING_H\n+#endif\n+\n \n /* Define to 1 if you have the `strsignal' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STRSIGNAL\n+#endif\n+\n \n /* Define if <sys/times.h> defines struct tms. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_STRUCT_TMS\n+#endif\n+\n \n /* Define to 1 if you have the `sysconf' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYSCONF\n+#endif\n+\n \n /* Define to 1 if you have the <sys/file.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_FILE_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/mman.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_MMAN_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/param.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_PARAM_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/resource.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_RESOURCE_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/stat.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_STAT_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/times.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_TIMES_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/time.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_TIME_H\n+#endif\n+\n \n /* Define to 1 if you have the <sys/types.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_TYPES_H\n+#endif\n+\n \n /* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_SYS_WAIT_H\n+#endif\n+\n \n /* Define to 1 if you have the `times' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_TIMES\n+#endif\n+\n \n /* Define to 1 if you have the <time.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_TIME_H\n+#endif\n+\n \n /* Define to 1 if you have the <unistd.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_UNISTD_H\n+#endif\n+\n \n /* Define if valgrind's valgrind/memcheck.h header is installed. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_VALGRIND_MEMCHECK_H\n+#endif\n+\n \n /* Define to 1 if you have the `vfork' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_VFORK\n+#endif\n+\n \n /* Define to 1 if you have the <vfork.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_VFORK_H\n+#endif\n+\n \n /* Define to 1 if you have the <wchar.h> header file. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_WCHAR_H\n+#endif\n+\n \n /* Define to 1 if you have the `wcswidth' function. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_WCSWIDTH\n+#endif\n+\n \n /* Define to 1 if `fork' works. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_WORKING_FORK\n+#endif\n+\n \n /* Define this macro if mbstowcs does not crash when its first argument is\n    NULL. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_WORKING_MBSTOWCS\n+#endif\n+\n \n /* Define to 1 if `vfork' works. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_WORKING_VFORK\n+#endif\n+\n \n /* Define if your compiler supports the \\`__int64' type. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE___INT64\n+#endif\n+\n \n /* Define as const if the declaration of iconv() needs const. */\n+#ifndef USED_FOR_TARGET\n #undef ICONV_CONST\n+#endif\n+\n \n /* Define if host mkdir takes a single argument. */\n+#ifndef USED_FOR_TARGET\n #undef MKDIR_TAKES_ONE_ARG\n+#endif\n+\n \n /* Define to 1 if HOST_WIDE_INT must be 64 bits wide (see hwint.h). */\n+#ifndef USED_FOR_TARGET\n #undef NEED_64BIT_HOST_WIDE_INT\n+#endif\n+\n \n /* Define to 1 if your C compiler doesn't accept -c and -o together. */\n+#ifndef USED_FOR_TARGET\n #undef NO_MINUS_C_MINUS_O\n+#endif\n+\n \n /* Define to the address where bug reports for this package should be sent. */\n+#ifndef USED_FOR_TARGET\n #undef PACKAGE_BUGREPORT\n+#endif\n+\n \n /* Define to the full name of this package. */\n+#ifndef USED_FOR_TARGET\n #undef PACKAGE_NAME\n+#endif\n+\n \n /* Define to the full name and version of this package. */\n+#ifndef USED_FOR_TARGET\n #undef PACKAGE_STRING\n+#endif\n+\n \n /* Define to the one symbol short name of this package. */\n+#ifndef USED_FOR_TARGET\n #undef PACKAGE_TARNAME\n+#endif\n+\n \n /* Define to the version of this package. */\n+#ifndef USED_FOR_TARGET\n #undef PACKAGE_VERSION\n+#endif\n+\n \n /* Define to PREFIX/include if cpp should also search that directory. */\n+#ifndef USED_FOR_TARGET\n #undef PREFIX_INCLUDE_DIR\n+#endif\n+\n \n /* The size of a `int', as computed by sizeof. */\n+#ifndef USED_FOR_TARGET\n #undef SIZEOF_INT\n+#endif\n+\n \n /* The size of a `long', as computed by sizeof. */\n+#ifndef USED_FOR_TARGET\n #undef SIZEOF_LONG\n+#endif\n+\n \n /* The size of a `long long', as computed by sizeof. */\n+#ifndef USED_FOR_TARGET\n #undef SIZEOF_LONG_LONG\n+#endif\n+\n \n /* The size of a `short', as computed by sizeof. */\n+#ifndef USED_FOR_TARGET\n #undef SIZEOF_SHORT\n+#endif\n+\n \n /* The size of a `void *', as computed by sizeof. */\n+#ifndef USED_FOR_TARGET\n #undef SIZEOF_VOID_P\n+#endif\n+\n \n /* The size of a `__int64', as computed by sizeof. */\n+#ifndef USED_FOR_TARGET\n #undef SIZEOF___INT64\n+#endif\n+\n \n /* Define to 1 if you have the ANSI C header files. */\n+#ifndef USED_FOR_TARGET\n #undef STDC_HEADERS\n+#endif\n+\n \n /* Define if you can safely include both <string.h> and <strings.h>. */\n+#ifndef USED_FOR_TARGET\n #undef STRING_WITH_STRINGS\n+#endif\n+\n \n /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */\n+#ifndef USED_FOR_TARGET\n #undef TIME_WITH_SYS_TIME\n+#endif\n+\n \n /* Define if your assembler mis-optimizes .eh_frame data. */\n+#ifndef USED_FOR_TARGET\n #undef USE_AS_TRADITIONAL_FORMAT\n+#endif\n+\n \n /* Define to 1 if the 'long long' (or '__int64') is wider than 'long' but\n    still efficiently supported by the host hardware. */\n+#ifndef USED_FOR_TARGET\n #undef USE_LONG_LONG_FOR_WIDEST_FAST_INT\n+#endif\n+\n \n /* Define if location_t is fileline integer cookie. */\n+#ifndef USED_FOR_TARGET\n #undef USE_MAPPED_LOCATION\n+#endif\n+\n \n /* Define to be the last component of the Windows registry key under which to\n    look for installation paths. The full key used will be\n    HKEY_LOCAL_MACHINE/SOFTWARE/Free Software Foundation/{WIN32_REGISTRY_KEY}.\n    The default is the GCC version number. */\n+#ifndef USED_FOR_TARGET\n #undef WIN32_REGISTRY_KEY\n+#endif\n+\n \n /* Define to 1 if your processor stores words with the most significant byte\n    first (like Motorola and SPARC, unlike Intel and VAX). */\n+#ifndef USED_FOR_TARGET\n #undef WORDS_BIGENDIAN\n+#endif\n+\n \n /* Always define this when using the GNU C Library */\n+#ifndef USED_FOR_TARGET\n #undef _GNU_SOURCE\n+#endif\n+\n \n /* Define to `int' if <sys/types.h> doesn't define. */\n+#ifndef USED_FOR_TARGET\n #undef gid_t\n+#endif\n+\n \n /* Define to `__inline__' or `__inline' if that's what the C compiler\n    calls it, or to nothing if 'inline' is not supported under any name.  */\n@@ -699,16 +1308,31 @@\n #endif\n \n /* Define to `int' if <sys/types.h> does not define. */\n+#ifndef USED_FOR_TARGET\n #undef pid_t\n+#endif\n+\n \n /* Define to \\`long' if <sys/resource.h> doesn't define. */\n+#ifndef USED_FOR_TARGET\n #undef rlim_t\n+#endif\n+\n \n /* Define to `int' if <sys/types.h> does not define. */\n+#ifndef USED_FOR_TARGET\n #undef ssize_t\n+#endif\n+\n \n /* Define to `int' if <sys/types.h> doesn't define. */\n+#ifndef USED_FOR_TARGET\n #undef uid_t\n+#endif\n+\n \n /* Define as `fork' if `vfork' does not work. */\n+#ifndef USED_FOR_TARGET\n #undef vfork\n+#endif\n+"}, {"sha": "169cbad5232a974914b1ac0663af331e12f08b6e", "filename": "gcc/configure", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -6292,12 +6292,12 @@ do\n \tyes)\t\tac_assert_checking=1 ; ac_checking=1 ;\n \t\t\tac_fold_checking= ; ac_gc_checking=1 ;\n \t\t\tac_gc_always_collect= ; ac_rtl_checking= ;\n-\t\t\tac_rtlflag_checking=1 ; ac_runtime_chacking=1 ;\n+\t\t\tac_rtlflag_checking=1 ; ac_runtime_checking=1 ;\n \t\t\tac_tree_checking=1 ; ac_valgrind_checking= ;;\n \tno|none)\tac_assert_checking= ; ac_checking= ;\n \t\t\tac_fold_checking= ; ac_gc_checking= ;\n \t\t\tac_gc_always_collect= ; ac_rtl_checking= ;\n-\t\t\tac_rtlflag_checking= ; ac_runtime_chacking= ;\n+\t\t\tac_rtlflag_checking= ; ac_runtime_checking= ;\n \t\t\tac_tree_checking= ; ac_valgrind_checking= ;;\n \tall)\t\tac_assert_checking=1 ; ac_checking=1 ;\n \t\t\tac_fold_checking=1 ; ac_gc_checking=1 ;\n@@ -6344,6 +6344,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n fi\n+\n if test x$ac_runtime_checking != x ; then\n \n cat >>confdefs.h <<\\_ACEOF\n@@ -7399,7 +7400,7 @@ if test \"${gcc_cv_prog_makeinfo_modern+set}\" = set; then\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:7402: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:7403: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.[2-9]*)\n@@ -12256,7 +12257,7 @@ host_xm_file=\"auto-host.h ansidecl.h ${host_xm_file}\"\n build_xm_file=\"${build_auto} ansidecl.h ${build_xm_file}\"\n # We don't want ansidecl.h in target files, write code there in ISO/GNU C.\n # put this back in temporarily.\n-xm_file=\"ansidecl.h ${xm_file}\"\n+xm_file=\"auto-host.h ansidecl.h ${xm_file}\"\n \n # --------\n # UNSORTED\n@@ -13394,6 +13395,7 @@ echo \"$as_me:$LINENO: result: $gcc_cv_ld_hidden\" >&5\n echo \"${ECHO_T}$gcc_cv_ld_hidden\" >&6\n libgcc_visibility=no\n \n+\n if test $gcc_cv_as_hidden = yes && test $gcc_cv_ld_hidden = yes; then\n   libgcc_visibility=yes\n \n@@ -15001,6 +15003,7 @@ elif test x$gcc_cv_ld != x; then\n \t\tgcc_cv_ld_eh_frame_hdr=yes\n \tfi\n fi\n+\n if test x\"$gcc_cv_ld_eh_frame_hdr\" = xyes; then\n \n cat >>confdefs.h <<\\_ACEOF"}, {"sha": "5327e56392b155f730ad60851e4bf9d111c16430", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -421,12 +421,12 @@ do\n \tyes)\t\tac_assert_checking=1 ; ac_checking=1 ;\n \t\t\tac_fold_checking= ; ac_gc_checking=1 ;\n \t\t\tac_gc_always_collect= ; ac_rtl_checking= ;\n-\t\t\tac_rtlflag_checking=1 ; ac_runtime_chacking=1 ;\n+\t\t\tac_rtlflag_checking=1 ; ac_runtime_checking=1 ;\n \t\t\tac_tree_checking=1 ; ac_valgrind_checking= ;;\n \tno|none)\tac_assert_checking= ; ac_checking= ;\n \t\t\tac_fold_checking= ; ac_gc_checking= ;\n \t\t\tac_gc_always_collect= ; ac_rtl_checking= ;\n-\t\t\tac_rtlflag_checking= ; ac_runtime_chacking= ;\n+\t\t\tac_rtlflag_checking= ; ac_runtime_checking= ;\n \t\t\tac_tree_checking= ; ac_valgrind_checking= ;;\n \tall)\t\tac_assert_checking=1 ; ac_checking=1 ;\n \t\t\tac_fold_checking=1 ; ac_gc_checking=1 ;\n@@ -466,6 +466,7 @@ if test x$ac_assert_checking != x ; then\n   AC_DEFINE(ENABLE_ASSERT_CHECKING, 1,\n [Define if you want assertions enabled.  This is a cheap check.])\n fi\n+GCC_TARGET_TEMPLATE(ENABLE_RUNTIME_CHECKING)\n if test x$ac_runtime_checking != x ; then\n   AC_DEFINE(ENABLE_RUNTIME_CHECKING, 1,\n [Define if you want runtime assertions enabled.  This is a cheap check.])\n@@ -1402,7 +1403,7 @@ host_xm_file=\"auto-host.h ansidecl.h ${host_xm_file}\"\n build_xm_file=\"${build_auto} ansidecl.h ${build_xm_file}\"\n # We don't want ansidecl.h in target files, write code there in ISO/GNU C.\n # put this back in temporarily.\n-xm_file=\"ansidecl.h ${xm_file}\"\n+xm_file=\"auto-host.h ansidecl.h ${xm_file}\"\n \n # --------\n # UNSORTED\n@@ -2140,6 +2141,7 @@ changequote([,])dnl\n fi])\n libgcc_visibility=no\n AC_SUBST(libgcc_visibility)\n+GCC_TARGET_TEMPLATE([HAVE_GAS_HIDDEN])\n if test $gcc_cv_as_hidden = yes && test $gcc_cv_ld_hidden = yes; then\n   libgcc_visibility=yes\n   AC_DEFINE(HAVE_GAS_HIDDEN, 1,\n@@ -2951,6 +2953,7 @@ elif test x$gcc_cv_ld != x; then\n \t\tgcc_cv_ld_eh_frame_hdr=yes\n \tfi\n fi\n+GCC_TARGET_TEMPLATE([HAVE_LD_EH_FRAME_HDR])\n if test x\"$gcc_cv_ld_eh_frame_hdr\" = xyes; then\n \tAC_DEFINE(HAVE_LD_EH_FRAME_HDR, 1,\n [Define if your linker supports --eh-frame-hdr option.])"}, {"sha": "9695851e7d14c7a4ca0a4c2d1edd7437da28eb2a", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -51,15 +51,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n    This file must be compiled with gcc.  */\n \n-/* It is incorrect to include config.h here, because this file is being\n-   compiled for the target, and hence definitions concerning only the host\n-   do not apply.  */\n-\n-#define IN_LIBGCC2\n-\n-/* We include auto-host.h here to get HAVE_GAS_HIDDEN.  This is\n-   supposedly valid even though this is a \"target\" file.  */\n-#include \"auto-host.h\"\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include \"coretypes.h\""}, {"sha": "76c0c9f06ddeecdcadcba6bfb540ba6c45057740", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -232,7 +232,7 @@ typedef HOST_WIDEST_INT gcov_type;\n    is not also used in a DSO.  */\n #if IN_LIBGCOV\n \n-#include \"auto-host.h\"   /* for HAVE_GAS_HIDDEN */\n+#include \"tconfig.h\"\n \n #define gcov_var __gcov_var\n #define gcov_open __gcov_open"}, {"sha": "a303d0bce25fdadf99744b5d0c4d414f8e805eb6", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -29,24 +29,11 @@ along with GCC; see the file COPYING.  If not, write to the Free\n Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-\n-/* We include auto-host.h here to get HAVE_GAS_HIDDEN.  This is\n-   supposedly valid even though this is a \"target\" file.  */\n-#include \"auto-host.h\"\n-\n-/* It is incorrect to include config.h here, because this file is being\n-   compiled for the target, and hence definitions concerning only the host\n-   do not apply.  */\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-/* Don't use `fancy_abort' here even if config.h says to use it.  */\n-#ifdef abort\n-#undef abort\n-#endif\n-\n #ifdef HAVE_GAS_HIDDEN\n #define ATTRIBUTE_HIDDEN  __attribute__ ((__visibility__ (\"hidden\")))\n #else"}, {"sha": "8061383ff7e91ee139015b21dba2aaeac9e8651a", "filename": "gcc/libgcov.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Flibgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Flibgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcov.c?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -29,10 +29,6 @@ along with GCC; see the file COPYING.  If not, write to the Free\n Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-/* It is incorrect to include config.h here, because this file is being\n-   compiled for the target, and hence definitions concerning only the host\n-   do not apply.  */\n-\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include \"coretypes.h\""}, {"sha": "8fd9de2941985cf23aa0c0ad791be89d9dd9fc25", "filename": "gcc/mkconfig.sh", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fmkconfig.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Fmkconfig.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkconfig.sh?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -54,7 +54,7 @@ for def in $DEFINES; do\n     echo \"#endif\" >> ${output}T\n done\n \n-# The first entry in HEADERS may be auto-host.h or auto-build.h;\n+# The first entry in HEADERS may be auto-FOO.h ;\n # it wants to be included even when not -DIN_GCC.\n if [ -n \"$HEADERS\" ]; then\n     set $HEADERS\n@@ -72,17 +72,11 @@ if [ -n \"$HEADERS\" ]; then\n     fi\n fi\n \n-# If this is tconfig.h, now define USED_FOR_TARGET.  If this is tm.h,\n-# now include insn-constants.h and insn-flags.h only if IN_GCC is\n-# defined but neither GENERATOR_FILE nor USED_FOR_TARGET is defined.\n-# (Much of this is temporary.)\n+# If this is tm.h, now include insn-constants.h and insn-flags.h only\n+# if IN_GCC is defined but neither GENERATOR_FILE nor USED_FOR_TARGET\n+# is defined.  (Much of this is temporary.)\n \n case $output in\n-    tconfig.h )\n-\tcat >> ${output}T <<EOF\n-#define USED_FOR_TARGET\n-EOF\n-    ;;\n     tm.h )\n         cat >> ${output}T <<EOF\n #if defined IN_GCC && !defined GENERATOR_FILE && !defined USED_FOR_TARGET"}, {"sha": "ebdbc168a4b2343f1c702766bdf87f6656017d7c", "filename": "gcc/unwind-dw2-fde-glibc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Funwind-dw2-fde-glibc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/232b67d9f8f29a786e52f4d757a68ec6b032cfc7/gcc%2Funwind-dw2-fde-glibc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde-glibc.c?ref=232b67d9f8f29a786e52f4d757a68ec6b032cfc7", "patch": "@@ -33,7 +33,6 @@\n #define _GNU_SOURCE 1\n #endif\n \n-#include \"auto-host.h\" /* For HAVE_LD_EH_FRAME_HDR.  */\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #ifndef inhibit_libc"}]}