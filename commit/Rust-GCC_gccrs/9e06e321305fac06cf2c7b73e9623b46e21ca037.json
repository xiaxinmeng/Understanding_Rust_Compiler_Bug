{"sha": "9e06e321305fac06cf2c7b73e9623b46e21ca037", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwNmUzMjEzMDVmYWMwNmNmMmM3YjczZTk2MjNiNDZlMjFjYTAzNw==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-10-12T03:26:02Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-10-12T03:26:02Z"}, "message": "(PRINT_REG): Make register name arrays static within this macro.\n\nFrom-SVN: r2401", "tree": {"sha": "766006fbbe6af4a728b3936a95cdfe10de445563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/766006fbbe6af4a728b3936a95cdfe10de445563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e06e321305fac06cf2c7b73e9623b46e21ca037", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e06e321305fac06cf2c7b73e9623b46e21ca037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e06e321305fac06cf2c7b73e9623b46e21ca037", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e06e321305fac06cf2c7b73e9623b46e21ca037/comments", "author": null, "committer": null, "parents": [{"sha": "4805ff591cb13d2aa49228f014e598dea3d80664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4805ff591cb13d2aa49228f014e598dea3d80664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4805ff591cb13d2aa49228f014e598dea3d80664"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "02f3f78760653a87bf2bbbf04613930cd5a60684", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e06e321305fac06cf2c7b73e9623b46e21ca037/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e06e321305fac06cf2c7b73e9623b46e21ca037/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9e06e321305fac06cf2c7b73e9623b46e21ca037", "patch": "@@ -1280,8 +1280,7 @@ extern struct rtx_def *(*i386_compare_gen)(), *(*i386_compare_gen_eq)();\n    For non floating point regs, the following are the HImode names.\n \n    For float regs, the stack top is sometimes referred to as \"%st(0)\"\n-   instead of just \"%st\".  PRINT_REG in i386.c handles with with the\n-   \"y\" code.  */\n+   instead of just \"%st\".  PRINT_REG handles this with the \"y\" code.  */\n \n #define HI_REGISTER_NAMES \\\n {\"ax\",\"dx\",\"cx\",\"bx\",\"si\",\"di\",\"bp\",\"sp\",          \\\n@@ -1461,13 +1460,11 @@ do { union { float f; long l;} tem;\t\t\t\\\n    If CODE is 'h', pretend the reg is the `high' byte register.\n    If CODE is 'y', print \"st(0)\" instead of \"st\", if the reg is stack op. */\n \n-extern char *hi_reg_name[];\n-extern char *qi_reg_name[];\n-extern char *qi_high_reg_name[];\n-\n #define PRINT_REG(X, CODE, FILE) \\\n-  do { if (REGNO (X) == ARG_POINTER_REGNUM)\t\t\\\n-\t abort ();\t\t\t\t\t\\\n+  do { static char *hi_reg_name[] = HI_REGISTER_NAMES;\t\\\n+       static char *qi_reg_name[] = QI_REGISTER_NAMES;\t\\\n+       static char *qi_high_reg_name[] = QI_HIGH_REGISTER_NAMES;\t\\\n+       if (REGNO (X) == ARG_POINTER_REGNUM) abort ();\t\\\n        fprintf (FILE, \"%s\", RP);\t\t\t\\\n        switch ((CODE == 'w' ? 2 \t\t\t\\\n \t\t: CODE == 'b' ? 1\t\t\t\\\n@@ -1478,13 +1475,9 @@ extern char *qi_high_reg_name[];\n \t {\t\t\t\t\t\t\\\n \t case 3:\t\t\t\t\t\\\n \t   if (STACK_TOP_P (X))\t\t\t\t\\\n-\t     {\t\t\t\t\t\t\\\n-\t       fputs (\"st(0)\", FILE);\t\t\t\\\n-\t       break;\t\t\t\t\t\\\n-\t     }\t\t\t\t\t\t\\\n-\t case 4:\t\t\t\t\t\\\n-\t case 8:\t\t\t\t\t\\\n-\t   if (!FP_REG_P (X)) fputs (\"e\", FILE);\t\\\n+\t     { fputs (\"st(0)\", FILE); break; }\t\t\\\n+\t case 4: case 8:\t\t\t\t\\\n+\t   if (! FP_REG_P (X)) fputs (\"e\", FILE);\t\\\n \t case 2:\t\t\t\t\t\\\n \t   fputs (hi_reg_name[REGNO (X)], FILE);\t\\\n \t   break;\t\t\t\t\t\\"}]}