{"sha": "9251d66467c0b6e62110282450b1d9ef62ecfdb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1MWQ2NjQ2N2MwYjZlNjIxMTAyODI0NTBiMWQ5ZWY2MmVjZmRiNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2007-07-11T14:03:37Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2007-07-11T14:03:37Z"}, "message": "* config/m32r/m32r.h (INITIALIZE_TRAMPOLINE): Revert previous delta and use gen_int_mode in place of GET_INT instead.\n\nFrom-SVN: r126552", "tree": {"sha": "e07f23eb140108a911a50158cd0b4ff554093b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e07f23eb140108a911a50158cd0b4ff554093b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9251d66467c0b6e62110282450b1d9ef62ecfdb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9251d66467c0b6e62110282450b1d9ef62ecfdb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9251d66467c0b6e62110282450b1d9ef62ecfdb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9251d66467c0b6e62110282450b1d9ef62ecfdb4/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "942ca20a7020e6b4debd99b1d84f556733facacf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942ca20a7020e6b4debd99b1d84f556733facacf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/942ca20a7020e6b4debd99b1d84f556733facacf"}], "stats": {"total": 61, "additions": 17, "deletions": 44}, "files": [{"sha": "81a530b5e7dc3bf2a578a91d84bf6d89a886d940", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251d66467c0b6e62110282450b1d9ef62ecfdb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251d66467c0b6e62110282450b1d9ef62ecfdb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9251d66467c0b6e62110282450b1d9ef62ecfdb4", "patch": "@@ -1,3 +1,8 @@\n+2007-07-11  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/m32r/m32r.h (INITIALIZE_TRAMPOLINE): Revert previous\n+\tdelta and use gen_int_mode in place of GET_INT instead.\n+\n 2007-07-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* reg-stack.c (struct tree_opt_pass pass_stack_regs): Nullify name"}, {"sha": "87a5f3e13cade5fe138a2a88e9e800d28b5a3044", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 12, "deletions": 44, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251d66467c0b6e62110282450b1d9ef62ecfdb4/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251d66467c0b6e62110282450b1d9ef62ecfdb4/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=9251d66467c0b6e62110282450b1d9ef62ecfdb4", "patch": "@@ -1006,67 +1006,35 @@ L2:     .word STATIC\n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n-#if HOST_BITS_PER_WIDE_INT > 32\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \t\t\t\t\\\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\t\\\n       emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 0)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0x017e8e17 : 0x178e7e01));\t\\\n+\t\t      gen_int_mode (TARGET_LITTLE_ENDIAN ?\t\t\t\\\n+\t\t\t\t    0x017e8e17 : 0x178e7e01, SImode));\t\t\\\n       emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 4)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0x0c00ae86 : 0xffffffff86ae000c));\\\n+\t\t      gen_int_mode (TARGET_LITTLE_ENDIAN ?\t\t\t\\\n+\t\t\t\t    0x0c00ae86 : 0x86ae000c, SImode));\t\t\\\n       emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 8)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0xffffffffe627871e : 0x1e8727e6));\\\n+\t\t      gen_int_mode (TARGET_LITTLE_ENDIAN ?\t\t\t\\\n+\t\t\t\t    0xe627871e : 0x1e8727e6, SImode));\t\t\\\n       emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 12)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0xffffffffc616c626 : 0x26c61fc6));\\\n+\t\t      gen_int_mode (TARGET_LITTLE_ENDIAN ?\t\t\t\\\n+\t\t\t\t    0xc616c626 : 0x26c61fc6, SImode));\t\t\\\n       emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 16)),\t\t\\\n \t\t      (CXT));\t\t\t\t\t\t\t\\\n       emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 20)),\t\t\\\n \t\t      (FNADDR));\t\t\t\t\t\t\\\n       if (m32r_cache_flush_trap >= 0)\t\t\t\t\t\t\\\n \temit_insn (gen_flush_icache (validize_mem (gen_rtx_MEM (SImode, TRAMP)),\\\n-\t\t\t\t     GEN_INT (m32r_cache_flush_trap) ));\t\\\n+\t\t\t\t     gen_int_mode (m32r_cache_flush_trap, SImode))); \\\n       else if (m32r_cache_flush_func && m32r_cache_flush_func[0])\t\t\\\n-\temit_library_call (m32r_function_symbol (m32r_cache_flush_func), \t\\\n+\temit_library_call (m32r_function_symbol (m32r_cache_flush_func),\t\\\n \t\t\t   0, VOIDmode, 3, TRAMP, Pmode,\t\t\t\\\n-\t\t\t   GEN_INT (TRAMPOLINE_SIZE), SImode,\t\t\t\\\n+\t\t\t   gen_int_mode (TRAMPOLINE_SIZE, SImode), SImode,\t\\\n \t\t\t   GEN_INT (3), SImode);\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\t\\\n   while (0)\n-#else\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\t\\\n-      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 0)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0x017e8e17 : 0x178e7e01));\t\\\n-      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 4)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0x0c00ae86 : 0x86ae000c));\t\\\n-      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 8)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0xe627871e : 0x1e8727e6));\t\\\n-      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 12)),\t\t\\\n-\t\t      GEN_INT\t\t\t\t\t\t\t\\\n-\t\t      (TARGET_LITTLE_ENDIAN ? 0xc616c626 : 0x26c61fc6));\t\\\n-      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 16)),\t\t\\\n-\t\t      (CXT));\t\t\t\t\t\t\t\\\n-      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 20)),\t\t\\\n-\t\t      (FNADDR));\t\t\t\t\t\t\\\n-      if (m32r_cache_flush_trap >= 0)\t\t\t\t\t\t\\\n-\temit_insn (gen_flush_icache (validize_mem (gen_rtx_MEM (SImode, TRAMP)),\\\n-\t\t\t\t     GEN_INT (m32r_cache_flush_trap) ));\t\\\n-      else if (m32r_cache_flush_func && m32r_cache_flush_func[0])\t\t\\\n-\temit_library_call (m32r_function_symbol (m32r_cache_flush_func), \t\\\n-\t\t\t   0, VOIDmode, 3, TRAMP, Pmode,\t\t\t\\\n-\t\t\t   GEN_INT (TRAMPOLINE_SIZE), SImode,\t\t\t\\\n-\t\t\t   GEN_INT (3), SImode);\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-#endif\n \f\n #define RETURN_ADDR_RTX(COUNT, FRAME) m32r_return_addr (COUNT)\n "}]}