{"sha": "263a5944fc806396ecc3eff3d96277602e88ae2b", "node_id": "C_kwDOANBUbNoAKDI2M2E1OTQ0ZmM4MDYzOTZlY2MzZWZmM2Q5NjI3NzYwMmU4OGFlMmI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-31T09:30:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-31T09:30:58Z"}, "message": "testsuite: Fix up tree-ssa/pr103514.c testcase [PR103514]\n\n> > PR tree-optimization/103514\n> >     * match.pd (a & b) ^ (a == b) -> !(a | b): New optimization.\n> >     * match.pd (a & b) == (a ^ b) -> !(a | b): New optimization.\n> >     * gcc.dg/tree-ssa/pr103514.c: Testcase for this optimization.\n> >\n> > 1) https://gcc.gnu.org/bugzilla/show_bug.cgi?id=103514\n> Note the bug was filed an fixed during stage3, review just didn't happen in\n> a reasonable timeframe.\n>\n> I'm going to ACK this for the trunk and go ahead and commit it for you.\n\nThe testcase FAILs on short-circuit targets like powerpc64le-linux.\nWhile the first 2 functions are identical, the last two look like:\n  <bb 2> :\n  if (a_5(D) != 0)\n    goto <bb 3>; [INV]\n  else\n    goto <bb 4>; [INV]\n\n  <bb 3> :\n  if (b_6(D) != 0)\n    goto <bb 5>; [INV]\n  else\n    goto <bb 4>; [INV]\n\n  <bb 4> :\n\n  <bb 5> :\n  # iftmp.1_4 = PHI <1(3), 0(4)>\n  _1 = a_5(D) == b_6(D);\n  _2 = (int) _1;\n  _3 = _2 ^ iftmp.1_4;\n  _9 = _2 != iftmp.1_4;\n  return _9;\ninstead of the expected:\n  <bb 2> :\n  _3 = a_8(D) & b_9(D);\n  _4 = (int) _3;\n  _5 = a_8(D) == b_9(D);\n  _6 = (int) _5;\n  _1 = a_8(D) | b_9(D);\n  _2 = ~_1;\n  _7 = (int) _2;\n  _10 = ~_1;\n  return _10;\nso no wonder it doesn't match.  E.g. x86_64-linux will also use jumps\nif it isn't just a && b but a && b && c && d (will do\na & b and c & d tests and jump based on those.\n\nAs it is too late to implement this optimization even for the short\ncircuiting targets this late (not even sure which pass would be best),\nthis patch just forces non-short-circuiting for the test.\n\n2022-01-31  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/103514\n\t* gcc.dg/tree-ssa/pr103514.c: Add\n\t--param logical-op-non-short-circuit=1 to dg-options.", "tree": {"sha": "85320612fd67c358de13b62346b0de33637f2613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85320612fd67c358de13b62346b0de33637f2613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/263a5944fc806396ecc3eff3d96277602e88ae2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263a5944fc806396ecc3eff3d96277602e88ae2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/263a5944fc806396ecc3eff3d96277602e88ae2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263a5944fc806396ecc3eff3d96277602e88ae2b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e97cfaa9f61429f6717fd35d73309b02f9c02e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97cfaa9f61429f6717fd35d73309b02f9c02e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97cfaa9f61429f6717fd35d73309b02f9c02e95"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2e813353d986cb3954eeb45784e699fbf441ef54", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr103514.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/263a5944fc806396ecc3eff3d96277602e88ae2b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr103514.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/263a5944fc806396ecc3eff3d96277602e88ae2b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr103514.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr103514.c?ref=263a5944fc806396ecc3eff3d96277602e88ae2b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-optimized\" } */\n+/* { dg-options \"-O --param logical-op-non-short-circuit=1 -fdump-tree-optimized\" } */\n #include <stdbool.h>\n \n bool\n@@ -30,4 +30,4 @@ h (bool a, bool b)\n /* Make sure we have removed \"==\" and \"^\" and \"&\". */\n /* { dg-final { scan-tree-dump-not \"&\" \"optimized\"} } */\n /* { dg-final { scan-tree-dump-not \"\\\\^\"  \"optimized\"} } */\n-/* { dg-final { scan-tree-dump-not \"==\" \"optimized\"} } */\n\\ No newline at end of file\n+/* { dg-final { scan-tree-dump-not \"==\" \"optimized\"} } */"}]}