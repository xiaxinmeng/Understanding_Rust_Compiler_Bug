{"sha": "2d6aa71558f460ef00af8420e81e01f46d95da84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ2YWE3MTU1OGY0NjBlZjAwYWY4NDIwZTgxZTAxZjQ2ZDk1ZGE4NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:50:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:50:36Z"}, "message": "[multiple changes]\n\n2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch5.adb: Minor reformatting.\n\n2016-04-21  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_ch2.adb (Expand_Current_Value): Make an appropriate\n\tcharacter literal if the entity is of a character type.\n\n2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_aggr.adb (Backend_Processing_Possible): Return False\n\twhen generating C and aggregate contains function calls.\n\n2016-04-21  Tristan Gingold  <gingold@adacore.com>\n\n\t* krunch.adb (Krunch): Only partially krunch children of\n\tInterfaces that aren't known.\n\n2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Make_Inline): Handle properly the instantiation\n\tof a generic subpprogram that carries an Inline aspect. Place\n\tinline info on the anonymous subprogram that is constructed in\n\tthe wrapper package.\n\t(Analyze_Pragma, case Pure): Do not check placement if pragma\n\tappears within an instantiation, which can be nested at any level.\n\t* sem_ch12.adb (Analyze_Instance_And_Renamings): Do not copy Freeze\n\tnode from anonymous subprogram to its visible renaming. The\n\tfreeze node will be constructed if the subprogram carries\n\tdelayed aspects.\n\t(Set_Global): Preserve dimension information if present (from\n\tcode reading).\n\n2016-04-21  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* gnatlink.adb: Change wording of the warning message on\n\tproblematic filenames to be more neutral. Add a new substring\n\t\"patch\" introduced on Windows 10.\n\nFrom-SVN: r235313", "tree": {"sha": "ea8cc0c200b4dbee8969f7837027839c0ce74ed7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8cc0c200b4dbee8969f7837027839c0ce74ed7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d6aa71558f460ef00af8420e81e01f46d95da84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6aa71558f460ef00af8420e81e01f46d95da84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d6aa71558f460ef00af8420e81e01f46d95da84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6aa71558f460ef00af8420e81e01f46d95da84/comments", "author": null, "committer": null, "parents": [{"sha": "08f52d9f8462f6d35a82fe51818929fc563b4285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f52d9f8462f6d35a82fe51818929fc563b4285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f52d9f8462f6d35a82fe51818929fc563b4285"}], "stats": {"total": 166, "additions": 135, "deletions": 31}, "files": [{"sha": "f52d8e3a9d951cf5ecad1b6855bf2ebe1baaf0af", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -1,3 +1,43 @@\n+2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch5.adb: Minor reformatting.\n+\n+2016-04-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch2.adb (Expand_Current_Value): Make an appropriate\n+\tcharacter literal if the entity is of a character type.\n+\n+2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_aggr.adb (Backend_Processing_Possible): Return False\n+\twhen generating C and aggregate contains function calls.\n+\n+2016-04-21  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* krunch.adb (Krunch): Only partially krunch children of\n+\tInterfaces that aren't known.\n+\n+2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Make_Inline): Handle properly the instantiation\n+\tof a generic subpprogram that carries an Inline aspect. Place\n+\tinline info on the anonymous subprogram that is constructed in\n+\tthe wrapper package.\n+\t(Analyze_Pragma, case Pure): Do not check placement if pragma\n+\tappears within an instantiation, which can be nested at any level.\n+\t* sem_ch12.adb (Analyze_Instance_And_Renamings): Do not copy Freeze\n+\tnode from anonymous subprogram to its visible renaming. The\n+\tfreeze node will be constructed if the subprogram carries\n+\tdelayed aspects.\n+\t(Set_Global): Preserve dimension information if present (from\n+\tcode reading).\n+\n+2016-04-21  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gnatlink.adb: Change wording of the warning message on\n+\tproblematic filenames to be more neutral. Add a new substring\n+\t\"patch\" introduced on Windows 10.\n+\n 2016-04-21  Philippe Gil  <gil@adacore.com>\n \n \t* tracebak.c (__gnat_backtrace): handle bad RIP values (win64 only)"}, {"sha": "20932d306ddd8efb89cd49a7b9335ea9d53c2ad2", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -547,14 +547,16 @@ package body Exp_Aggr is\n \n    --   11. When generating C code, N must be part of a N_Object_Declaration\n \n+   --   12. When generating C code, N must not include function calls\n+\n    function Backend_Processing_Possible (N : Node_Id) return Boolean is\n       Typ : constant Entity_Id := Etype (N);\n       --  Typ is the correct constrained array subtype of the aggregate\n \n       function Component_Check (N : Node_Id; Index : Node_Id) return Boolean;\n       --  This routine checks components of aggregate N, enforcing checks\n-      --  1, 7, 8, and 9. In the multi-dimensional case, these checks are\n-      --  performed on subaggregates. The Index value is the current index\n+      --  1, 7, 8, 9, 11 and 12. In the multi-dimensional case, these checks\n+      --  are performed on subaggregates. The Index value is the current index\n       --  being checked in the multi-dimensional case.\n \n       ---------------------\n@@ -573,7 +575,7 @@ package body Exp_Aggr is\n \n          --  Checks 11: (part of an object declaration)\n \n-         if Generate_C_Code\n+         if Modify_Tree_For_C\n            and then Nkind (Parent (N)) /= N_Object_Declaration\n            and then\n              (Nkind (Parent (N)) /= N_Qualified_Expression\n@@ -613,6 +615,12 @@ package body Exp_Aggr is\n                return False;\n             end if;\n \n+            --  Checks 12: (no function call)\n+\n+            if Modify_Tree_For_C and then Nkind (Expr) = N_Function_Call then\n+               return False;\n+            end if;\n+\n             --  Recursion to following indexes for multiple dimension case\n \n             if Present (Next_Index (Index))\n@@ -4106,7 +4114,7 @@ package body Exp_Aggr is\n          Analyze_And_Resolve (N, Typ);\n       end if;\n \n-      --  Is Static_Eaboration_Desired has been specified, diagnose aggregates\n+      --  If Static_Eaboration_Desired has been specified, diagnose aggregates\n       --  that will still require initialization code.\n \n       if (Ekind (Current_Scope) = E_Package"}, {"sha": "a46580acf26cc6ade2c274bf522ee57aaeb747aa", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1680,10 +1680,10 @@ begin\n \n    --  Special warnings for worrisome file names on windows\n \n-   --  Windows-7 will not allow an executable file whose name contains any\n-   --  of the substrings \"install\", \"setup\", or \"update\" to load without\n-   --  special administration privileges. This rather incredible behavior\n-   --  is Microsoft's idea of a useful security precaution.\n+   --  Recent versions of Windows by default cause privilege escalation if an\n+   --  executable file name contains substrings \"install\", \"setup\", \"update\"\n+   --  or \"patch\". A console application will typically fail to load as a\n+   --  result, so we should warn the user.\n \n    Bad_File_Names_On_Windows : declare\n       FN : String := Output_File_Name.all;\n@@ -1696,13 +1696,10 @@ begin\n          for J in 1 .. FN'Length - (S'Length - 1) loop\n             if FN (J .. J + (S'Length - 1)) = S then\n                Error_Msg\n-                 (\"warning: possible problem with executable name \"\"\"\n-                  & Output_File_Name.all & '\"');\n+                 (\"warning: executable file name \"\"\" & Output_File_Name.all\n+                  & \"\"\" contains substring \"\"\" & S & '\"');\n                Error_Msg\n-                 (\"file name contains substring \"\"\" & S & '\"');\n-               Error_Msg\n-                 (\"admin privileges may be required on Windows 7 \"\n-                  & \"to load this file\");\n+                 (\"admin privileges may be required to run this file\");\n             end if;\n          end loop;\n       end Check_File_Name;\n@@ -1723,6 +1720,7 @@ begin\n          Check_File_Name (\"install\");\n          Check_File_Name (\"setup\");\n          Check_File_Name (\"update\");\n+         Check_File_Name (\"patch\");\n       end if;\n    end Bad_File_Names_On_Windows;\n "}, {"sha": "6c3b785452a0368163ec40729e8fce333e6a0b15", "filename": "gcc/ada/krunch.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fkrunch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fkrunch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.adb?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,7 +95,23 @@ begin\n       Startloc := 3;\n       Buffer (2 .. Len - 9) := Buffer (11 .. Len);\n       Curlen := Len - 9;\n-      Krlen  := 8;\n+\n+      --  Only fully krunch historical units. For new units, simply use\n+      --  the 'i-' prefix instead of 'interfaces-'. Packages Interfaces.C\n+      --  and Interfaces.Cobol are already in the right form. Package\n+      --  Interfaces.Definitions is krunched for backward compatibility.\n+\n+      if        (Curlen >  3 and then Buffer (3 ..  4) = \"c-\")\n+        or else (Curlen >  3 and then Buffer (3 ..  4) = \"c_\")\n+        or else (Curlen = 13 and then Buffer (3 .. 13) = \"definitions\")\n+        or else (Curlen =  9 and then Buffer (3 ..  9) = \"fortran\")\n+        or else (Curlen = 16 and then Buffer (3 .. 16) = \"packed_decimal\")\n+        or else (Curlen >  9 and then Buffer (3 ..  9) = \"vxworks\")\n+      then\n+         Krlen := 8;\n+      else\n+         Krlen := Maxlen;\n+      end if;\n \n    --  For the renamings in the obsolescent section, we also force krunching\n    --  to 8 characters, but no other special processing is required here."}, {"sha": "1d4d5c0bdf678d19afe735c9302781c0cb89a8eb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4947,9 +4947,13 @@ package body Sem_Ch12 is\n             Set_Cunit_Entity (Current_Sem_Unit, Pack_Id);\n          end if;\n \n-         --  The instance is not a freezing point for the new subprogram\n+         --  The instance is not a freezing point for the new subprogram.\n+         --  The anonymous subprogram may have a freeze node, created for\n+         --  some delayed aspects. This freeze node must not be inherited\n+         --  by the visible subprogram entity.\n \n-         Set_Is_Frozen (Act_Decl_Id, False);\n+         Set_Is_Frozen   (Act_Decl_Id, False);\n+         Set_Freeze_Node (Act_Decl_Id, Empty);\n \n          if Nkind (Defining_Entity (N)) = N_Defining_Operator_Symbol then\n             Valid_Operator_Definition (Act_Decl_Id);\n@@ -7690,6 +7694,18 @@ package body Sem_Ch12 is\n          end if;\n       end if;\n \n+      --  Propagate dimensions if present, so that they are reflected in the\n+      --  instance.\n+\n+      if Nkind (N) in N_Has_Etype\n+        and then (Nkind (N) in N_Op or else Is_Entity_Name (N))\n+        and then Present (Etype (N))\n+        and then Is_Floating_Point_Type (Etype (N))\n+        and then Has_Dimension_System (Etype (N))\n+      then\n+         Copy_Dimensions (N, New_N);\n+      end if;\n+\n       return New_N;\n    end Copy_Generic_Node;\n \n@@ -14140,6 +14156,13 @@ package body Sem_Ch12 is\n                   Set_Etype (N2, Full_View (Typ));\n                end if;\n             end if;\n+\n+            if Is_Floating_Point_Type (Typ)\n+              and then Has_Dimension_System (Typ)\n+            then\n+               Copy_Dimensions (N2, N);\n+            end if;\n+\n          end Set_Global_Type;\n \n          ------------------"}, {"sha": "9b4d589eb0fb40e05a09cc182305c9669d64d78c", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -2201,9 +2201,11 @@ package body Sem_Ch5 is\n                         Error_Msg_N (\"variable container expected\", N);\n                      end if;\n \n-                     --  It could be a function, which\n-                     --  Is_Dependent_Component_Of_Mutable_Object doesn't like,\n-                     --  so check that it's a component.\n+                     --  Detect a case where the iterator denotes a component\n+                     --  of a mutable object which depends on a discriminant.\n+                     --  Note that the iterator may denote a function call in\n+                     --  qualified form, in which case this check should not\n+                     --  be performed.\n \n                      if Nkind (Orig_Iter_Name) = N_Selected_Component\n                        and then Ekind_In"}, {"sha": "4d1b2b1b52623d41e04d66d76d8f0b7ee824ad89", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6aa71558f460ef00af8420e81e01f46d95da84/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2d6aa71558f460ef00af8420e81e01f46d95da84", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -8610,9 +8610,16 @@ package body Sem_Prag is\n             --  Processing for procedure, operator or function. If subprogram\n             --  is aliased (as for an instance) indicate that the renamed\n             --  entity (if declared in the same unit) is inlined.\n+            --  If this is the anonymous subprogram created for a subprogram\n+            --  instance, the inlining applies to it directly. Otherwise we\n+            --  retrieve it as the alias of the visible subprogram instance.\n \n             if Is_Subprogram (Subp) then\n-               Inner_Subp := Ultimate_Alias (Inner_Subp);\n+               if Is_Wrapper_Package (Scope (Subp)) then\n+                  Inner_Subp := Subp;\n+               else\n+                  Inner_Subp := Ultimate_Alias (Inner_Subp);\n+               end if;\n \n                if In_Same_Source_Unit (Subp, Inner_Subp) then\n                   Set_Inline_Flags (Inner_Subp);\n@@ -8624,18 +8631,20 @@ package body Sem_Prag is\n                   then\n                      Set_Inline_Flags (Corresponding_Body (Decl));\n \n-                  elsif Is_Generic_Instance (Subp) then\n-\n+                  elsif Is_Generic_Instance (Subp)\n+                    and then Comes_From_Source (Subp)\n+                  then\n                      --  Indicate that the body needs to be created for\n                      --  inlining subsequent calls. The instantiation node\n                      --  follows the declaration of the wrapper package\n-                     --  created for it.\n+                     --  created for it. The subprogram that requires the\n+                     --  body is the anonymous one in the wrapper package.\n \n                      if Scope (Subp) /= Standard_Standard\n                        and then\n                          Need_Subprogram_Instance_Body\n-                          (Next (Unit_Declaration_Node (Scope (Alias (Subp)))),\n-                              Subp)\n+                           (Next (Unit_Declaration_Node\n+                             (Scope (Alias (Subp)))), Subp)\n                      then\n                         null;\n                      end if;\n@@ -19397,7 +19406,15 @@ package body Sem_Prag is\n \n          begin\n             Check_Ada_83_Warning;\n-            Check_Valid_Library_Unit_Pragma;\n+\n+            --  If the pragma comes from a subprogram instantiation, nothing to\n+            --  check, this can happen at any level of nesting.\n+\n+            if Is_Wrapper_Package (Current_Scope) then\n+               return;\n+            else\n+               Check_Valid_Library_Unit_Pragma;\n+            end if;\n \n             if Nkind (N) = N_Null_Statement then\n                return;"}]}