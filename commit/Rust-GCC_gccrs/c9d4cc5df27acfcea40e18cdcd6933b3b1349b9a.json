{"sha": "c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlkNGNjNWRmMjdhY2ZjZWE0MGUxOGNkY2Q2OTMzYjNiMTM0OWI5YQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-11-20T20:01:25Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-11-20T20:01:25Z"}, "message": "PR 92463 MPFR modernization in GFortran\n\nNow that we require a minimum of MPFR 3.1.0+ to build GCC, we can do\nsome modernization of the MPFR usage in the GFortran frontend.\n\nThis patch replaces\n\n1) GMP_RND* with MPFR_RND*\n\n2) mp_exp_t with mpfr_exp_t\n\n3) mp_prec_t with mpfr_prec_t\n\n4) mp_rnd_t with mpfr_rnd_t\n\ngcc/fortran/ChangeLog:\n\n2019-11-20  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/92463\n\t* arith.c (gfc_mpfr_to_mpz): Change mp_exp_t to mpfr_exp_t.\n\t(gfc_check_real_range): Likewise.\n\t* gfortran.h (GFC_RND_MODE): Change GMP_RNDN to MPFR_RNDN.\n\t* module.c (mio_gmp_real): Change mp_exp_t to mpfr_exp_t.\n\t* simplify.c (degrees_f): Change mp_rnd_t to mpfr_rnd_t.\n\t(radians_f): Likewise.\n\t(fullprec_erfc_scaled): Change mp_prec_t to mpfr_prec_t.\n\t(asympt_erfc_scaled): Likewise.\n\t(gfc_simplify_nearest): Change mp_exp_t to mpfr_exp_t, and\n\tGMP_RND* to MPFR_RND*.\n\nFrom-SVN: r278523", "tree": {"sha": "e8fd26d7def5f8f2d1792b2063da1a8ed5b9ba6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8fd26d7def5f8f2d1792b2063da1a8ed5b9ba6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/comments", "author": null, "committer": null, "parents": [{"sha": "64eb1c8239dd73e1ded3a1ef2d6f080164cd4ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64eb1c8239dd73e1ded3a1ef2d6f080164cd4ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64eb1c8239dd73e1ded3a1ef2d6f080164cd4ce9"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "62c7c921d277a1f68a5ec4a001ddf67e7851b669", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "patch": "@@ -1,3 +1,17 @@\n+2019-11-20  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/92463\n+\t* arith.c (gfc_mpfr_to_mpz): Change mp_exp_t to mpfr_exp_t.\n+\t(gfc_check_real_range): Likewise.\n+\t* gfortran.h (GFC_RND_MODE): Change GMP_RNDN to MPFR_RNDN.\n+\t* module.c (mio_gmp_real): Change mp_exp_t to mpfr_exp_t.\n+\t* simplify.c (degrees_f): Change mp_rnd_t to mpfr_rnd_t.\n+\t(radians_f): Likewise.\n+\t(fullprec_erfc_scaled): Change mp_prec_t to mpfr_prec_t.\n+\t(asympt_erfc_scaled): Likewise.\n+\t(gfc_simplify_nearest): Change mp_exp_t to mpfr_exp_t, and\n+\tGMP_RND* to MPFR_RND*.\n+\n 2019-11-15  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/69654"}, {"sha": "cf48077970927f4d7b9555d1918645340d778bff", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "patch": "@@ -38,7 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n void\n gfc_mpfr_to_mpz (mpz_t z, mpfr_t x, locus *where)\n {\n-  mp_exp_t e;\n+  mpfr_exp_t e;\n \n   if (mpfr_inf_p (x) || mpfr_nan_p (x))\n     {\n@@ -376,7 +376,7 @@ gfc_check_real_range (mpfr_t p, int kind)\n     }\n   else if (mpfr_cmp (q, gfc_real_kinds[i].tiny) < 0)\n     {\n-      mp_exp_t emin, emax;\n+      mpfr_exp_t emin, emax;\n       int en;\n \n       /* Save current values of emin and emax.  */\n@@ -396,9 +396,9 @@ gfc_check_real_range (mpfr_t p, int kind)\n \n       /* Copy sign if needed.  */\n       if (mpfr_sgn (p) < 0)\n-\tmpfr_neg (p, q, GMP_RNDN);\n+\tmpfr_neg (p, q, MPFR_RNDN);\n       else\n-\tmpfr_set (p, q, GMP_RNDN);\n+\tmpfr_set (p, q, MPFR_RNDN);\n     }\n \n   mpfr_clear (q);"}, {"sha": "f4a2b99bdc4110fb820d8d6a5cb03833040f5422", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "patch": "@@ -2130,7 +2130,7 @@ gfc_intrinsic_sym;\n \n #include <mpfr.h>\n #include <mpc.h>\n-#define GFC_RND_MODE GMP_RNDN\n+#define GFC_RND_MODE MPFR_RNDN\n #define GFC_MPC_RND_MODE MPC_RNDNN\n \n typedef splay_tree gfc_constructor_base;"}, {"sha": "b11a30bea73282f9f8c6f110f7c1b6c4cd72c3b1", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "patch": "@@ -3343,7 +3343,7 @@ mio_gmp_integer (mpz_t *integer)\n static void\n mio_gmp_real (mpfr_t *real)\n {\n-  mp_exp_t exponent;\n+  mpfr_exp_t exponent;\n   char *p;\n \n   if (iomode == IO_INPUT)"}, {"sha": "a5c940ca2d57e41b79e3bc1f4242876555545728", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=c9d4cc5df27acfcea40e18cdcd6933b3b1349b9a", "patch": "@@ -1768,7 +1768,7 @@ simplify_trig_call (gfc_expr *icall)\n /* Convert a floating-point number from radians to degrees.  */\n \n static void\n-degrees_f (mpfr_t x, mp_rnd_t rnd_mode)\n+degrees_f (mpfr_t x, mpfr_rnd_t rnd_mode)\n {\n   mpfr_t tmp;\n   mpfr_init (tmp);\n@@ -1791,7 +1791,7 @@ degrees_f (mpfr_t x, mp_rnd_t rnd_mode)\n /* Convert a floating-point number from degrees to radians.  */\n \n static void\n-radians_f (mpfr_t x, mp_rnd_t rnd_mode)\n+radians_f (mpfr_t x, mpfr_rnd_t rnd_mode)\n {\n   mpfr_t tmp;\n   mpfr_init (tmp);\n@@ -2681,7 +2681,7 @@ gfc_simplify_erfc (gfc_expr *x)\n static void\n fullprec_erfc_scaled (mpfr_t res, mpfr_t arg)\n {\n-  mp_prec_t prec;\n+  mpfr_prec_t prec;\n   mpfr_t a, b;\n \n   prec = mpfr_get_default_prec ();\n@@ -2718,7 +2718,7 @@ asympt_erfc_scaled (mpfr_t res, mpfr_t arg)\n {\n   mpfr_t sum, x, u, v, w, oldsum, sumtrunc;\n   mpz_t num;\n-  mp_prec_t prec;\n+  mpfr_prec_t prec;\n   unsigned i;\n \n   prec = mpfr_get_default_prec ();\n@@ -5914,7 +5914,7 @@ gfc_expr *\n gfc_simplify_nearest (gfc_expr *x, gfc_expr *s)\n {\n   gfc_expr *result;\n-  mp_exp_t emin, emax;\n+  mpfr_exp_t emin, emax;\n   int kind;\n \n   if (x->expr_type != EXPR_CONSTANT || s->expr_type != EXPR_CONSTANT)\n@@ -5928,20 +5928,20 @@ gfc_simplify_nearest (gfc_expr *x, gfc_expr *s)\n \n   /* Set emin and emax for the current model number.  */\n   kind = gfc_validate_kind (BT_REAL, x->ts.kind, 0);\n-  mpfr_set_emin ((mp_exp_t) gfc_real_kinds[kind].min_exponent -\n+  mpfr_set_emin ((mpfr_exp_t) gfc_real_kinds[kind].min_exponent -\n \t\tmpfr_get_prec(result->value.real) + 1);\n-  mpfr_set_emax ((mp_exp_t) gfc_real_kinds[kind].max_exponent - 1);\n-  mpfr_check_range (result->value.real, 0, GMP_RNDU);\n+  mpfr_set_emax ((mpfr_exp_t) gfc_real_kinds[kind].max_exponent - 1);\n+  mpfr_check_range (result->value.real, 0, MPFR_RNDU);\n \n   if (mpfr_sgn (s->value.real) > 0)\n     {\n       mpfr_nextabove (result->value.real);\n-      mpfr_subnormalize (result->value.real, 0, GMP_RNDU);\n+      mpfr_subnormalize (result->value.real, 0, MPFR_RNDU);\n     }\n   else\n     {\n       mpfr_nextbelow (result->value.real);\n-      mpfr_subnormalize (result->value.real, 0, GMP_RNDD);\n+      mpfr_subnormalize (result->value.real, 0, MPFR_RNDD);\n     }\n \n   mpfr_set_emin (emin);"}]}