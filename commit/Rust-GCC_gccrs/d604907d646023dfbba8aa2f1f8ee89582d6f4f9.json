{"sha": "d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwNDkwN2Q2NDYwMjNkZmJiYThhYTJmMWY4ZWU4OTU4MmQ2ZjRmOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-09-14T13:26:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-09-14T13:26:27Z"}, "message": "Fix --enable-gather-detailed-mem-stats.\n\n\t* hash-table.c (hash_table_usage): Change from variable to function.\n\t* hash-table.h: Adjust.\n\t* Makefile.in: Add missing dependencies on hash-table.h.\n\nFrom-SVN: r264313", "tree": {"sha": "23e946bd3970287410ac9c8c7c5e22b946bd843c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e946bd3970287410ac9c8c7c5e22b946bd843c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "115b470829a7d3ad0c60ea0e09fefef61d50b437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115b470829a7d3ad0c60ea0e09fefef61d50b437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115b470829a7d3ad0c60ea0e09fefef61d50b437"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "0b685b4f442e86bae7b8e5ed8b4296c46826a660", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "patch": "@@ -1,3 +1,10 @@\n+2018-09-14  Jason Merrill  <jason@redhat.com>\n+\n+\tFix --enable-gather-detailed-mem-stats.\n+\t* hash-table.c (hash_table_usage): Change from variable to function.\n+\t* hash-table.h: Adjust.\n+\t* Makefile.in: Add missing dependencies on hash-table.h.\n+\n 2018-09-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR tree-optimization/87259"}, {"sha": "4b7cec8238201aaf691a17738b6a1ca4a4fd73d4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "patch": "@@ -2665,7 +2665,7 @@ build/version.o:  version.c version.h \\\n build/errors.o : errors.c $(BCONFIG_H) $(SYSTEM_H) errors.h\n build/gensupport.o: gensupport.c $(BCONFIG_H) $(SYSTEM_H) \t\t\\\n   $(CORETYPES_H) $(GTM_H) $(RTL_BASE_H) $(OBSTACK_H) errors.h\t\t\\\n-  $(HASHTAB_H) $(READ_MD_H) $(GENSUPPORT_H)\n+  $(HASHTAB_H) $(READ_MD_H) $(GENSUPPORT_H) $(HASH_TABLE_H)\n build/ggc-none.o : ggc-none.c $(BCONFIG_H) $(SYSTEM_H) $(CORETYPES_H) \t\\\n   $(GGC_H)\n build/min-insn-modes.o : min-insn-modes.c $(BCONFIG_H) $(SYSTEM_H)\t\\\n@@ -2680,7 +2680,7 @@ build/read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) $(CORETYPES_H)\t\\\n build/rtl.o: rtl.c $(BCONFIG_H) $(CORETYPES_H) $(GTM_H) $(SYSTEM_H)\t\\\n   $(RTL_H) $(GGC_H) errors.h\n build/vec.o : vec.c $(BCONFIG_H) $(SYSTEM_H) $(CORETYPES_H) $(VEC_H)\t\\\n-  $(GGC_H) toplev.h $(DIAGNOSTIC_CORE_H)\n+  $(GGC_H) toplev.h $(DIAGNOSTIC_CORE_H) $(HASH_TABLE_H)\n build/hash-table.o : hash-table.c $(BCONFIG_H) $(SYSTEM_H)\t\t\\\n   $(CORETYPES_H) $(HASH_TABLE_H) $(GGC_H) toplev.h $(DIAGNOSTIC_CORE_H)\n build/sort.o : sort.cc $(BCONFIG_H) $(SYSTEM_H)"}, {"sha": "bff9644ae8137ebaf0af4b00979dce6643857016", "filename": "gcc/hash-table.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2Fhash-table.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2Fhash-table.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.c?ref=d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "patch": "@@ -98,7 +98,16 @@ hash_table_higher_prime_index (unsigned long n)\n   return low;\n }\n \n-mem_alloc_description<mem_usage> hash_table_usage;\n+/* Return a reference to the lazily initialized hash-table usage description.\n+   This needs to be a function rather than a simple global variable so that it\n+   is reliably initialized before hash table variables in other files such as\n+   sem_item::m_type_hash_cache.  */\n+mem_alloc_description<mem_usage>&\n+hash_table_usage ()\n+{\n+  static mem_alloc_description<mem_usage> usage;\n+  return usage;\n+}\n \n /* Support function for statistics.  */\n void dump_hash_table_loc_statistics (void)\n@@ -109,7 +118,6 @@ void dump_hash_table_loc_statistics (void)\n   for (unsigned i = HASH_TABLE_ORIGIN; i <= HASH_SET_ORIGIN; i++)\n     {\n       mem_alloc_origin origin = (mem_alloc_origin) i;\n-      hash_table_usage.dump (origin);\n+      hash_table_usage ().dump (origin);\n     }\n }\n-"}, {"sha": "bd83345c7b83d081cc9a19dc3bdca107a7192b56", "filename": "gcc/hash-table.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d604907d646023dfbba8aa2f1f8ee89582d6f4f9/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "patch": "@@ -561,7 +561,7 @@ class hash_table\n #include \"mem-stats.h\"\n #include \"hash-map.h\"\n \n-extern mem_alloc_description<mem_usage> hash_table_usage;\n+extern mem_alloc_description<mem_usage>& hash_table_usage (void);\n \n /* Support function for statistics.  */\n extern void dump_hash_table_loc_statistics (void);\n@@ -580,7 +580,7 @@ hash_table<Descriptor, Allocator>::hash_table (size_t size, bool ggc, bool\n   size = prime_tab[size_prime_index].prime;\n \n   if (m_gather_mem_stats)\n-    hash_table_usage.register_descriptor (this, origin, ggc\n+    hash_table_usage ().register_descriptor (this, origin, ggc\n \t\t\t\t\t  FINAL_PASS_MEM_STAT);\n \n   m_entries = alloc_entries (size PASS_MEM_STAT);\n@@ -600,7 +600,7 @@ hash_table<Descriptor, Allocator>::hash_table (const hash_table &h, bool ggc,\n   size_t size = h.m_size;\n \n   if (m_gather_mem_stats)\n-    hash_table_usage.register_descriptor (this, origin, ggc\n+    hash_table_usage ().register_descriptor (this, origin, ggc\n \t\t\t\t\t  FINAL_PASS_MEM_STAT);\n \n   value_type *nentries = alloc_entries (size PASS_MEM_STAT);\n@@ -630,7 +630,7 @@ hash_table<Descriptor, Allocator>::~hash_table ()\n     ggc_free (m_entries);\n \n   if (m_gather_mem_stats)\n-    hash_table_usage.release_instance_overhead (this,\n+    hash_table_usage ().release_instance_overhead (this,\n \t\t\t\t\t\tsizeof (value_type) * m_size,\n \t\t\t\t\t\ttrue);\n }\n@@ -644,7 +644,7 @@ hash_table<Descriptor, Allocator>::alloc_entries (size_t n MEM_STAT_DECL) const\n   value_type *nentries;\n \n   if (m_gather_mem_stats)\n-    hash_table_usage.register_instance_overhead (sizeof (value_type) * n, this);\n+    hash_table_usage ().register_instance_overhead (sizeof (value_type) * n, this);\n \n   if (!m_ggc)\n     nentries = Allocator <value_type> ::data_alloc (n);\n@@ -736,7 +736,7 @@ hash_table<Descriptor, Allocator>::expand ()\n   value_type *nentries = alloc_entries (nsize);\n \n   if (m_gather_mem_stats)\n-    hash_table_usage.release_instance_overhead (this, sizeof (value_type)\n+    hash_table_usage ().release_instance_overhead (this, sizeof (value_type)\n \t\t\t\t\t\t    * osize);\n \n   m_entries = nentries;"}]}