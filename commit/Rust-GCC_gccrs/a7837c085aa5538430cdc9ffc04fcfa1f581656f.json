{"sha": "a7837c085aa5538430cdc9ffc04fcfa1f581656f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4MzdjMDg1YWE1NTM4NDMwY2RjOWZmYzA0ZmNmYTFmNTgxNjU2Zg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2020-03-28T18:52:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-15T08:04:35Z"}, "message": "[Ada] Crash in tagged type constructor with task components\n\n2020-06-15  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* restrict.ads (Set_Global_No_Tasking, Global_No_Tasking): New\n\tsubprograms.\n\t* restrict.adb (Set_Global_No_Tasking, Global_No_Tasking): New\n\tsubprograms.\n\t* sem_ch3.adb (Access_Definition): Do not skip building masters\n\tsince they may be required for BIP calls.\n\t(Analyze_Subtype_Declaration): Propagate attribute\n\tIs_Limited_Record in class-wide subtypes and subtypes with\n\tcloned subtype attribute; propagate attribute\n\tIs_Limited_Interface.\n\t* sem_ch6.adb (Check_Anonymous_Return): Do not skip building\n\tmasters since they may be required for BIP calls. Use\n\tBuild_Master_Declaration to declare the _master variable.\n\t(Create_Extra_Formals): Add decoration of Has_Master_Entity when\n\tthe _master formal is added.\n\t* exp_ch3.adb (Init_Formals): Adding formal to decorate it with\n\tattribute Has_Master_Entity when the _master formal is added.\n\t(Build_Master): Do not skip building masters since they may be\n\trequired for BIP calls.\n\t(Expand_N_Object_Declaration): Ensure activation chain and\n\tmaster entity for objects initialized with BIP function calls.\n\t* sem_prag.adb (Process_Restrictions_Or_Restriction_Warnings):\n\tAdding support to detect and save restriction No_Tasking when\n\tset in the run-time package System or in a global configuration\n\tpragmas file.\n\t* sem_util.adb (Current_Entity_In_Scope): Overload this\n\tsubprogram to allow searching for an entity by its Name.\n\t* sem_util.ads (Current_Entity_In_Scope): Update comment.\n\t* exp_ch4.adb (Expand_N_Allocator): Do not skip building masters\n\tsince they may be required for BIP calls.\n\t* exp_ch6.ads (Might_Have_Tasks): New subprogram.\n\t* exp_ch6.adb (Make_Build_In_Place_Call_In_Allocator): Add\n\tsupport for BIP calls returning objects that may have tasks.\n\t(Make_Build_In_Place_Call_In_Allocator): Build the activation\n\tchain if the result might have tasks.\n\t(Make_Build_In_Place_Iface_Call_In_Allocator): Build the class\n\twide master for the result type.\n\t(Might_Have_Tasks): New subprogram.\n\t(Needs_BIP_Task_Actuals): Returns False when restriction\n\tNo_Tasking is globally set.\n\t* exp_ch9.ads (Build_Master_Declaration): New subprogram.\n\t* exp_ch9.adb (Build_Activation_Chain_Entity): No action\n\tperformed when restriction No_Tasking is globally set.\n\t(Build_Class_Wide_Master): No action performed when restriction\n\tNo_Tasking is globally set; use Build_Master_Declaration to\n\tdeclare the _master variable.\n\t(Build_Master_Declaration): New subprogram.\n\t(Build_Master_Entity): No action performed when restriction\n\tNo_Tasking is globally set; added support to handle transient\n\tscopes and _finalizer routines.\n\t(Build_Master_Renaming): No action performed when restriction\n\tNo_Tasking is globally set.\n\t(Build_Task_Activation_Call): Skip generating the call when\n\tthe chain is an ignored ghost entity.\n\t(Find_Master_Scope): Generalize the code that detects transient\n\tscopes with master entity.\n\t* einfo.ads (Has_Nested_Subprogram): Minor comment reformatting.", "tree": {"sha": "0f6113c2b59a1fb8d32236b6fc268c8f978d2d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f6113c2b59a1fb8d32236b6fc268c8f978d2d3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7837c085aa5538430cdc9ffc04fcfa1f581656f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7837c085aa5538430cdc9ffc04fcfa1f581656f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7837c085aa5538430cdc9ffc04fcfa1f581656f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7837c085aa5538430cdc9ffc04fcfa1f581656f/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98376aab0368fd9a1a3c7393f302002cc5d30506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98376aab0368fd9a1a3c7393f302002cc5d30506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98376aab0368fd9a1a3c7393f302002cc5d30506"}], "stats": {"total": 399, "additions": 299, "deletions": 100}, "files": [{"sha": "35efe5919f076c422d8f7fbf267d26259e955e29", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -1813,8 +1813,8 @@ package Einfo is\n --       See documentation in backend for further details.\n \n --    Has_Nested_Subprogram (Flag282)\n---      Defined in subprogram entities. Set for a subprogram which contains at\n---      least one nested subprogram.\n+--       Defined in subprogram entities. Set for a subprogram which contains at\n+--       least one nested subprogram.\n \n --    Has_Non_Limited_View (synth)\n --       Defined in E_Incomplete_Type, E_Incomplete_Subtype, E_Class_Wide_Type,"}, {"sha": "b207a1f1c920adb281ddabd3d7155df2c3082807", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 47, "deletions": 18, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -184,11 +184,11 @@ package body Exp_Ch3 is\n    --  E is a type, it has components that have no static initialization.\n    --  if E is an entity, its initial expression is not compile-time known.\n \n-   function Init_Formals (Typ : Entity_Id) return List_Id;\n+   function Init_Formals (Typ : Entity_Id; Proc_Id : Entity_Id) return List_Id;\n    --  This function builds the list of formals for an initialization routine.\n    --  The first formal is always _Init with the given type. For task value\n    --  record types and types containing tasks, three additional formals are\n-   --  added:\n+   --  added and Proc_Id is decorated with attribute Has_Master_Entity:\n    --\n    --    _Master    : Master_Id\n    --    _Chain     : in out Activation_Chain\n@@ -730,7 +730,7 @@ package body Exp_Ch3 is\n          end if;\n \n          Body_Stmts := Init_One_Dimension (1);\n-         Parameters := Init_Formals (A_Type);\n+         Parameters := Init_Formals (A_Type, Proc_Id);\n \n          Discard_Node (\n            Make_Subprogram_Body (Loc,\n@@ -2438,7 +2438,7 @@ package body Exp_Ch3 is\n          Proc_Spec_Node := New_Node (N_Procedure_Specification, Loc);\n          Set_Defining_Unit_Name (Proc_Spec_Node, Proc_Id);\n \n-         Parameters := Init_Formals (Rec_Type);\n+         Parameters := Init_Formals (Rec_Type, Proc_Id);\n          Append_List_To (Parameters,\n            Build_Discriminant_Formals (Rec_Type, True));\n \n@@ -5720,7 +5720,7 @@ package body Exp_Ch3 is\n          --  record parameter for an entry declaration. No master is created\n          --  for such a type.\n \n-         if Comes_From_Source (N) and then Has_Task (Desig_Typ) then\n+         if Has_Task (Desig_Typ) then\n             Build_Master_Entity (Ptr_Typ);\n             Build_Master_Renaming (Ptr_Typ);\n \n@@ -5734,12 +5734,11 @@ package body Exp_Ch3 is\n          --  Suppress the master creation for access types created for entry\n          --  formal parameters (parameter block component types). Seems like\n          --  suppression should be more general for compiler-generated types,\n-         --  but testing Comes_From_Source, like the code above does, may be\n-         --  too general in this case (affects some test output)???\n+         --  but testing Comes_From_Source may be too general in this case\n+         --  (affects some test output)???\n \n          elsif not Is_Param_Block_Component_Type (Ptr_Typ)\n            and then Is_Limited_Class_Wide_Type (Desig_Typ)\n-           and then Tasking_Allowed\n          then\n             Build_Class_Wide_Master (Ptr_Typ);\n          end if;\n@@ -6666,14 +6665,39 @@ package body Exp_Ch3 is\n          Init_After := Make_Shared_Var_Procs (N);\n       end if;\n \n-      --  If tasks being declared, make sure we have an activation chain\n+      --  If tasks are being declared, make sure we have an activation chain\n       --  defined for the tasks (has no effect if we already have one), and\n-      --  also that a Master variable is established and that the appropriate\n-      --  enclosing construct is established as a task master.\n+      --  also that a Master variable is established (and that the appropriate\n+      --  enclosing construct is established as a task master).\n \n-      if Has_Task (Typ) then\n+      if Has_Task (Typ) or else Might_Have_Tasks (Typ) then\n          Build_Activation_Chain_Entity (N);\n-         Build_Master_Entity (Def_Id);\n+\n+         if Has_Task (Typ) then\n+            Build_Master_Entity (Def_Id);\n+\n+         --  Handle objects initialized with BIP function calls\n+\n+         elsif Present (Expr) then\n+            declare\n+               Expr_Q : Node_Id := Expr;\n+\n+            begin\n+               if Nkind (Expr) = N_Qualified_Expression then\n+                  Expr_Q := Expression (Expr);\n+               end if;\n+\n+               if Is_Build_In_Place_Function_Call (Expr_Q)\n+                 or else Present (Unqual_BIP_Iface_Function_Call (Expr_Q))\n+                 or else\n+                   (Nkind (Expr_Q) = N_Reference\n+                      and then\n+                    Is_Build_In_Place_Function_Call (Prefix (Expr_Q)))\n+               then\n+                  Build_Master_Entity (Def_Id);\n+               end if;\n+            end;\n+         end if;\n       end if;\n \n       --  If No_Implicit_Heap_Allocations or No_Implicit_Task_Allocations\n@@ -6691,7 +6715,7 @@ package body Exp_Ch3 is\n       --  of the stacks in this scenario, the stacks of the first array are\n       --  not counted.\n \n-      if Has_Task (Typ)\n+      if (Has_Task (Typ) or else Might_Have_Tasks (Typ))\n         and then not Restriction_Active (No_Secondary_Stack)\n         and then (Restriction_Active (No_Implicit_Heap_Allocations)\n           or else Restriction_Active (No_Implicit_Task_Allocations))\n@@ -8862,7 +8886,8 @@ package body Exp_Ch3 is\n    -- Init_Formals --\n    ------------------\n \n-   function Init_Formals (Typ : Entity_Id) return List_Id is\n+   function Init_Formals (Typ : Entity_Id; Proc_Id : Entity_Id) return List_Id\n+   is\n       Loc        : constant Source_Ptr := Sloc (Typ);\n       Unc_Arr    : constant Boolean :=\n                      Is_Array_Type (Typ) and then not Is_Constrained (Typ);\n@@ -8871,9 +8896,11 @@ package body Exp_Ch3 is\n                        or else (Is_Record_Type (Typ)\n                                  and then Is_Protected_Record_Type (Typ));\n       With_Task  : constant Boolean :=\n-                     Has_Task (Typ)\n-                       or else (Is_Record_Type (Typ)\n-                                 and then Is_Task_Record_Type (Typ));\n+                     not Global_No_Tasking\n+                       and then\n+                     (Has_Task (Typ)\n+                        or else (Is_Record_Type (Typ)\n+                                   and then Is_Task_Record_Type (Typ)));\n       Formals : List_Id;\n \n    begin\n@@ -8902,6 +8929,8 @@ package body Exp_Ch3 is\n              Parameter_Type      =>\n                New_Occurrence_Of (RTE (RE_Master_Id), Loc)));\n \n+         Set_Has_Master_Entity (Proc_Id);\n+\n          --  Add _Chain (not done for sequential elaboration policy, see\n          --  comment for Create_Restricted_Task_Sequential in s-tarest.ads).\n "}, {"sha": "27410ffe934297fcf71c34b4df47322d6426ea3c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -5031,20 +5031,18 @@ package body Exp_Ch4 is\n                      --  The designated type was an incomplete type, and the\n                      --  access type did not get expanded. Salvage it now.\n \n-                     if not Restriction_Active (No_Task_Hierarchy) then\n-                        if Present (Parent (Base_Type (PtrT))) then\n-                           Expand_N_Full_Type_Declaration\n-                             (Parent (Base_Type (PtrT)));\n+                     if Present (Parent (Base_Type (PtrT))) then\n+                        Expand_N_Full_Type_Declaration\n+                          (Parent (Base_Type (PtrT)));\n \n-                        --  The only other possibility is an itype. For this\n-                        --  case, the master must exist in the context. This is\n-                        --  the case when the allocator initializes an access\n-                        --  component in an init-proc.\n+                     --  The only other possibility is an itype. For this\n+                     --  case, the master must exist in the context. This is\n+                     --  the case when the allocator initializes an access\n+                     --  component in an init-proc.\n \n-                        else\n-                           pragma Assert (Is_Itype (PtrT));\n-                           Build_Master_Renaming (PtrT, N);\n-                        end if;\n+                     else\n+                        pragma Assert (Is_Itype (PtrT));\n+                        Build_Master_Renaming (PtrT, N);\n                      end if;\n                   end if;\n "}, {"sha": "1dd4493c785b8a31f8d04444dbc04347150175fc", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -8616,7 +8616,7 @@ package body Exp_Ch6 is\n          --  rather than some outer chain.\n \n       begin\n-         if Has_Task (Result_Subt) then\n+         if Has_Task (Result_Subt) or else Might_Have_Tasks (Result_Subt) then\n             Actions := New_List;\n             Build_Task_Allocate_Block_With_Init_Stmts\n               (Actions, Allocator, Init_Stmts => New_List (Assign));\n@@ -9393,6 +9393,7 @@ package body Exp_Ch6 is\n       Anon_Type := Create_Itype (E_Anonymous_Access_Type, Function_Call);\n       Set_Directly_Designated_Type (Anon_Type, Etype (BIP_Func_Call));\n       Set_Etype (Anon_Type, Anon_Type);\n+      Build_Class_Wide_Master (Anon_Type);\n \n       Tmp_Decl :=\n         Make_Object_Declaration (Loc,\n@@ -9627,6 +9628,18 @@ package body Exp_Ch6 is\n       Analyze_And_Resolve (Allocator, Acc_Type);\n    end Make_CPP_Constructor_Call_In_Allocator;\n \n+   ----------------------\n+   -- Might_Have_Tasks --\n+   ----------------------\n+\n+   function Might_Have_Tasks (Typ : Entity_Id) return Boolean is\n+   begin\n+      return not Global_No_Tasking\n+        and then not No_Run_Time_Mode\n+        and then Is_Class_Wide_Type (Typ)\n+        and then Is_Limited_Record (Typ);\n+   end Might_Have_Tasks;\n+\n    ----------------------------\n    -- Needs_BIP_Task_Actuals --\n    ----------------------------\n@@ -9635,7 +9648,8 @@ package body Exp_Ch6 is\n       pragma Assert (Is_Build_In_Place_Function (Func_Id));\n       Func_Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n    begin\n-      return Has_Task (Func_Typ);\n+      return not Global_No_Tasking\n+        and then (Has_Task (Func_Typ) or else Might_Have_Tasks (Func_Typ));\n    end Needs_BIP_Task_Actuals;\n \n    -----------------------------------"}, {"sha": "1c30219cbada67783e9abf991391eae8900af216", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -234,6 +234,10 @@ package Exp_Ch6 is\n    --  the constructor, and the allocator is rewritten to refer to that access\n    --  object. Function_Call must denote a call to a CPP_Constructor function.\n \n+   function Might_Have_Tasks (Typ : Entity_Id) return Boolean;\n+   --  Return True if Typ is a limited class-wide type (or subtype), since it\n+   --  might have task components.\n+\n    function Needs_BIP_Alloc_Form (Func_Id : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Return True if the function needs an implicit\n    --  BIP_Alloc_Form parameter (see type BIP_Formal_Kind)."}, {"sha": "da6e3095b27f41c780fb263283ea06e3aade5e6d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 107, "deletions": 45, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -928,6 +928,12 @@ package body Exp_Ch9 is\n    --  Start of processing for Build_Activation_Chain_Entity\n \n    begin\n+      --  No action needed if the run-time has no tasking support\n+\n+      if Global_No_Tasking then\n+         return;\n+      end if;\n+\n       --  Activation chain is never used for sequential elaboration policy, see\n       --  comment for Create_Restricted_Task_Sequential in s-tarest.ads).\n \n@@ -1127,9 +1133,9 @@ package body Exp_Ch9 is\n       Ren_Decl     : Node_Id;\n \n    begin\n-      --  Nothing to do if there is no task hierarchy\n+      --  No action needed if the run-time has no tasking support\n \n-      if Restriction_Active (No_Task_Hierarchy) then\n+      if Global_No_Tasking then\n          return;\n       end if;\n \n@@ -1168,21 +1174,7 @@ package body Exp_Ch9 is\n       then\n          begin\n             Set_Has_Master_Entity (Master_Scope);\n-\n-            --  Generate:\n-            --    _master : constant Integer := Current_Master.all;\n-\n-            Master_Decl :=\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, Name_uMaster),\n-                Constant_Present    => True,\n-                Object_Definition   =>\n-                  New_Occurrence_Of (Standard_Integer, Loc),\n-                Expression          =>\n-                  Make_Explicit_Dereference (Loc,\n-                    New_Occurrence_Of (RTE (RE_Current_Master), Loc)));\n-\n+            Master_Decl := Build_Master_Declaration (Loc);\n             Insert_Action (Find_Hook_Context (Related_Node), Master_Decl);\n             Analyze (Master_Decl);\n \n@@ -1695,6 +1687,65 @@ package body Exp_Ch9 is\n       return Ecount;\n    end Build_Entry_Count_Expression;\n \n+   ------------------------------\n+   -- Build_Master_Declaration --\n+   ------------------------------\n+\n+   function Build_Master_Declaration (Loc : Source_Ptr) return Node_Id is\n+      Master_Decl : Node_Id;\n+\n+   begin\n+      --  Generate a dummy master if tasks or tasking hierarchies are\n+      --  prohibited.\n+\n+      --    _Master : constant Master_Id := 3;\n+\n+      if not Tasking_Allowed\n+        or else Restrictions.Set (No_Task_Hierarchy)\n+        or else not RTE_Available (RE_Current_Master)\n+      then\n+         declare\n+            Expr : Node_Id;\n+\n+         begin\n+            --  RE_Library_Task_Level is not always available in configurable\n+            --  RunTime\n+\n+            if not RTE_Available (RE_Library_Task_Level) then\n+               Expr := Make_Integer_Literal (Loc, Uint_3);\n+            else\n+               Expr := New_Occurrence_Of (RTE (RE_Library_Task_Level), Loc);\n+            end if;\n+\n+            Master_Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier =>\n+                  Make_Defining_Identifier (Loc, Name_uMaster),\n+                Constant_Present    => True,\n+                Object_Definition   =>\n+                  New_Occurrence_Of (Standard_Integer, Loc),\n+                Expression          => Expr);\n+         end;\n+\n+      --  Generate:\n+      --    _master : constant Integer := Current_Master.all;\n+\n+      else\n+         Master_Decl :=\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier =>\n+               Make_Defining_Identifier (Loc, Name_uMaster),\n+             Constant_Present    => True,\n+             Object_Definition   =>\n+               New_Occurrence_Of (Standard_Integer, Loc),\n+             Expression          =>\n+               Make_Explicit_Dereference (Loc,\n+                 New_Occurrence_Of (RTE (RE_Current_Master), Loc)));\n+      end if;\n+\n+      return Master_Decl;\n+   end Build_Master_Declaration;\n+\n    ---------------------------\n    -- Build_Parameter_Block --\n    ---------------------------\n@@ -3345,12 +3396,40 @@ package body Exp_Ch9 is\n       Par        : Node_Id;\n \n    begin\n+      --  No action needed if the run-time has no tasking support\n+\n+      if Global_No_Tasking then\n+         return;\n+      end if;\n+\n       if Is_Itype (Obj_Or_Typ) then\n          Par := Associated_Node_For_Itype (Obj_Or_Typ);\n       else\n          Par := Parent (Obj_Or_Typ);\n       end if;\n \n+      --  For transient scopes check if the master entity is already defined\n+\n+      if Is_Type (Obj_Or_Typ)\n+        and then Ekind (Scope (Obj_Or_Typ)) = E_Block\n+        and then Is_Internal (Scope (Obj_Or_Typ))\n+      then\n+         declare\n+            Master_Scope : constant Entity_Id :=\n+                             Find_Master_Scope (Obj_Or_Typ);\n+         begin\n+            if Has_Master_Entity (Master_Scope)\n+              or else Is_Finalizer (Master_Scope)\n+            then\n+               return;\n+            end if;\n+\n+            if Present (Current_Entity_In_Scope (Name_uMaster)) then\n+               return;\n+            end if;\n+         end;\n+      end if;\n+\n       --  When creating a master for a record component which is either a task\n       --  or access-to-task, the enclosing record is the master scope and the\n       --  proper insertion point is the component list.\n@@ -3368,31 +3447,16 @@ package body Exp_Ch9 is\n          Find_Enclosing_Context (Par, Context, Context_Id, Decls);\n       end if;\n \n-      --  Nothing to do if the context already has a master\n+      --  Nothing to do if the context already has a master; internally build\n+      --  finalizers don't need a master.\n \n-      if Has_Master_Entity (Context_Id) then\n-         return;\n-\n-      --  Nothing to do if tasks or tasking hierarchies are prohibited\n-\n-      elsif Restriction_Active (No_Tasking)\n-        or else Restriction_Active (No_Task_Hierarchy)\n+      if Has_Master_Entity (Context_Id)\n+        or else Is_Finalizer (Context_Id)\n       then\n          return;\n       end if;\n \n-      --  Create a master, generate:\n-      --    _Master : constant Master_Id := Current_Master.all;\n-\n-      Decl :=\n-        Make_Object_Declaration (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, Name_uMaster),\n-          Constant_Present    => True,\n-          Object_Definition   => New_Occurrence_Of (RTE (RE_Master_Id), Loc),\n-          Expression          =>\n-            Make_Explicit_Dereference (Loc,\n-              New_Occurrence_Of (RTE (RE_Current_Master), Loc)));\n+      Decl := Build_Master_Declaration (Loc);\n \n       --  The master is inserted at the start of the declarative list of the\n       --  context.\n@@ -3448,11 +3512,9 @@ package body Exp_Ch9 is\n       Master_Id   : Entity_Id;\n \n    begin\n-      --  Nothing to do if tasks or tasking hierarchies are prohibited\n+      --  No action needed if the run-time has no tasking support\n \n-      if Restriction_Active (No_Tasking)\n-        or else Restriction_Active (No_Task_Hierarchy)\n-      then\n+      if Global_No_Tasking then\n          return;\n       end if;\n \n@@ -4794,9 +4856,10 @@ package body Exp_Ch9 is\n       Chain := Activation_Chain_Entity (Owner);\n \n       --  Nothing to do when there are no tasks to activate. This is indicated\n-      --  by a missing activation chain entity.\n+      --  by a missing activation chain entity; skip also generating it when\n+      --  it is a ghost entity.\n \n-      if No (Chain) then\n+      if No (Chain) or else Is_Ignored_Ghost_Entity (Chain) then\n          return;\n       end if;\n \n@@ -13312,8 +13375,7 @@ package body Exp_Ch9 is\n       if Ada_Version >= Ada_2005 then\n          while Is_Internal (S) loop\n             if Nkind (Parent (S)) = N_Block_Statement\n-              and then\n-                Nkind (Original_Node (Parent (S))) = N_Procedure_Call_Statement\n+              and then Has_Master_Entity (S)\n             then\n                exit;\n "}, {"sha": "3656ac7cdaa6f33bbe2f6ac5e1060bf8941a16d3", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -55,6 +55,12 @@ package Exp_Ch9 is\n    --  interface, ensure that the designated type has a _master and generate\n    --  a renaming of the said master to service the access type.\n \n+   function Build_Master_Declaration (Loc : Source_Ptr) return Node_Id;\n+   --  For targets supporting tasks generate:\n+   --      _Master : constant Integer := Current_Master.all;\n+   --  For targets where tasks or tasking hierarchies are prohibited generate:\n+   --      _Master : constant Master_Id := 3;\n+\n    procedure Build_Master_Entity (Obj_Or_Typ : Entity_Id);\n    --  Given the name of an object or a type which is either a task, contains\n    --  tasks or designates tasks, create a _master in the appropriate scope"}, {"sha": "ebdc7ce1c237e064ccb3b1e88d5bdbd15350fb9a", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -39,6 +39,10 @@ with Uname;    use Uname;\n \n package body Restrict is\n \n+   Global_Restriction_No_Tasking : Boolean := False;\n+   --  Set to True when No_Tasking is set in the run-time package System\n+   --  or in a configuration pragmas file (for example, gnat.adc).\n+\n    --------------------------------\n    -- Package Local Declarations --\n    --------------------------------\n@@ -898,6 +902,15 @@ package body Restrict is\n       return Not_A_Restriction_Id;\n    end Get_Restriction_Id;\n \n+   -----------------------\n+   -- Global_No_Tasking --\n+   -----------------------\n+\n+   function Global_No_Tasking return Boolean is\n+   begin\n+      return Global_Restriction_No_Tasking;\n+   end Global_No_Tasking;\n+\n    -------------------------------\n    -- No_Exception_Handlers_Set --\n    -------------------------------\n@@ -1574,6 +1587,15 @@ package body Restrict is\n       No_Use_Of_Pragma_Warning (A_Id) := False;\n    end Set_Restriction_No_Use_Of_Pragma;\n \n+   ---------------------------\n+   -- Set_Global_No_Tasking --\n+   ---------------------------\n+\n+   procedure Set_Global_No_Tasking is\n+   begin\n+      Global_Restriction_No_Tasking := True;\n+   end Set_Global_No_Tasking;\n+\n    ----------------------------------\n    -- Suppress_Restriction_Message --\n    ----------------------------------"}, {"sha": "bcea1158e9b788db62c45d30f35bc1dfc30b1bc8", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -422,6 +422,10 @@ package Restrict is\n    --  of individual Restrictions pragmas). Returns True only if all the\n    --  required restrictions are set.\n \n+   procedure Set_Global_No_Tasking;\n+   --  Used in call from Sem_Prag when restriction No_Tasking is set in the\n+   --  run-time package System or in a configuration pragmas file.\n+\n    procedure Set_Profile_Restrictions\n      (P    : Profile_Name;\n       N    : Node_Id;\n@@ -505,6 +509,10 @@ package Restrict is\n    --  Tests if tasking operations are allowed by the current restrictions\n    --  settings. For tasking to be allowed Max_Tasks must be non-zero.\n \n+   function Global_No_Tasking return Boolean;\n+   --  Returns True if the restriction No_Tasking is set in the run-time\n+   --  package System or in a configuration pragmas file.\n+\n    ----------------------------------------------\n    -- Handling of Boolean Compilation Switches --\n    ----------------------------------------------"}, {"sha": "149776c212a5a2c144a91d5139e90aa56e414dc3", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -924,7 +924,6 @@ package body Sem_Ch3 is\n       then\n          if Is_Limited_Record (Desig_Type)\n            and then Is_Class_Wide_Type (Desig_Type)\n-           and then Tasking_Allowed\n          then\n             Build_Class_Wide_Master (Anon_Type);\n \n@@ -5418,6 +5417,7 @@ package body Sem_Ch3 is\n                Set_Class_Wide_Type      (Id, Class_Wide_Type    (T));\n                Set_Cloned_Subtype       (Id, T);\n                Set_Is_Tagged_Type       (Id, True);\n+               Set_Is_Limited_Record    (Id, Is_Limited_Record  (T));\n                Set_Has_Unknown_Discriminants\n                                         (Id, True);\n                Set_No_Tagged_Streams_Pragma\n@@ -5701,6 +5701,7 @@ package body Sem_Ch3 is\n \n       if Is_Interface (T) then\n          Set_Is_Interface (Id);\n+         Set_Is_Limited_Interface (Id, Is_Limited_Interface (T));\n       end if;\n \n       if Present (Generic_Parent_Type (N))\n@@ -12358,6 +12359,7 @@ package body Sem_Ch3 is\n          --  Show Full is simply a renaming of Full_Base\n \n          Set_Cloned_Subtype (Full, Full_Base);\n+         Set_Is_Limited_Record (Full, Is_Limited_Record (Full_Base));\n \n          --  Propagate predicates\n \n@@ -12393,11 +12395,18 @@ package body Sem_Ch3 is\n \n       if Is_Tagged_Type (Full_Base) then\n          Set_Is_Tagged_Type (Full);\n+         Set_Is_Limited_Record (Full, Is_Limited_Record (Full_Base));\n+\n          Set_Direct_Primitive_Operations\n            (Full, Direct_Primitive_Operations (Full_Base));\n          Set_No_Tagged_Streams_Pragma\n            (Full, No_Tagged_Streams_Pragma (Full_Base));\n \n+         if Is_Interface (Full_Base) then\n+            Set_Is_Interface (Full);\n+            Set_Is_Limited_Interface (Full, Is_Limited_Interface (Full_Base));\n+         end if;\n+\n          --  Inherit class_wide type of full_base in case the partial view was\n          --  not tagged. Otherwise it has already been created when the private\n          --  subtype was analyzed."}, {"sha": "8ded5ad0553aa4698c62cd39aba509e598552354", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -51,7 +51,6 @@ with Nmake;     use Nmake;\n with Opt;       use Opt;\n with Output;    use Output;\n with Restrict;  use Restrict;\n-with Rident;    use Rident;\n with Rtsfind;   use Rtsfind;\n with Sem;       use Sem;\n with Sem_Aux;   use Sem_Aux;\n@@ -2928,22 +2927,8 @@ package body Sem_Ch6 is\n                            and then\n                          Is_Limited_Record (Designated_Type (Etype (Scop)))))\n            and then Expander_Active\n-\n-           --  Avoid cases with no tasking support\n-\n-           and then RTE_Available (RE_Current_Master)\n-           and then not Restriction_Active (No_Task_Hierarchy)\n          then\n-            Decl :=\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier =>\n-                  Make_Defining_Identifier (Loc, Name_uMaster),\n-                Constant_Present => True,\n-                Object_Definition =>\n-                  New_Occurrence_Of (RTE (RE_Master_Id), Loc),\n-                Expression =>\n-                  Make_Explicit_Dereference (Loc,\n-                    New_Occurrence_Of (RTE (RE_Current_Master), Loc)));\n+            Decl := Build_Master_Declaration (Loc);\n \n             if Present (Declarations (N)) then\n                Prepend (Decl, Declarations (N));\n@@ -8566,6 +8551,9 @@ package body Sem_Ch6 is\n                  Add_Extra_Formal\n                    (E, RTE (RE_Master_Id),\n                     E, BIP_Formal_Suffix (BIP_Task_Master));\n+\n+               Set_Has_Master_Entity (E);\n+\n                Discard :=\n                  Add_Extra_Formal\n                    (E, RTE (RE_Activation_Chain_Access),"}, {"sha": "eb374c4bb7ad8d682273b81fbfad3a8ff4e2a8a8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -10679,6 +10679,55 @@ package body Sem_Prag is\n                   else\n                      Add_To_Config_Boolean_Restrictions (No_Elaboration_Code);\n                   end if;\n+\n+               --  Special processing for No_Tasking restriction\n+\n+               elsif R_Id = No_Tasking then\n+\n+                  --  Handle global configuration pragmas\n+\n+                  if No (Cunit (Main_Unit)) then\n+                     Set_Global_No_Tasking;\n+\n+                  --  Handle package System, which may be loaded by rtsfind as\n+                  --  a consequence of loading some other run-time unit.\n+\n+                  else\n+                     declare\n+                        C_Node : constant Entity_Id :=\n+                                   Cunit (Current_Sem_Unit);\n+                        C_Ent  : constant Entity_Id :=\n+                                   Cunit_Entity (Current_Sem_Unit);\n+                        Loc_Str : constant String :=\n+                                    Build_Location_String (Sloc (C_Ent));\n+                        Ref_Str : constant String := \"system.ads\";\n+                        Ref_Len : constant Positive := Ref_Str'Length;\n+\n+                     begin\n+                        pragma Assert (Loc_Str'First = 1);\n+                        pragma Assert (Loc_Str'First = Ref_Str'First);\n+\n+                        if Nkind (Unit (C_Node)) = N_Package_Declaration\n+                          and then Chars (C_Ent) = Name_System\n+\n+                           --  Handle child packages named foo-system.ads\n+\n+                          and then Loc_Str'Length > Ref_Str'Length\n+                          and then Loc_Str (Loc_Str'First .. Ref_Len)\n+                                     = Ref_Str (Ref_Str'First .. Ref_Len)\n+\n+                           --  ... and ensure that package System has not\n+                           --  been previously loaded. Done to ensure that\n+                           --  the above checks do not have any corner case\n+                           --  (since they are performed without semantic\n+                           --  information).\n+\n+                          and then not RTU_Loaded (Rtsfind.System)\n+                        then\n+                           Set_Global_No_Tasking;\n+                        end if;\n+                     end;\n+                  end if;\n                end if;\n \n                --  If this is a warning, then set the warning unless we already"}, {"sha": "31e03fda4dd288e02f0a195581a8df56e4f51c9a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -6119,14 +6119,14 @@ package body Sem_Util is\n    -- Current_Entity_In_Scope --\n    -----------------------------\n \n-   function Current_Entity_In_Scope (N : Node_Id) return Entity_Id is\n+   function Current_Entity_In_Scope (N : Name_Id) return Entity_Id is\n       E  : Entity_Id;\n       CS : constant Entity_Id := Current_Scope;\n \n       Transient_Case : constant Boolean := Scope_Is_Transient;\n \n    begin\n-      E := Get_Name_Entity_Id (Chars (N));\n+      E := Get_Name_Entity_Id (N);\n       while Present (E)\n         and then Scope (E) /= CS\n         and then (not Transient_Case or else Scope (E) /= Scope (CS))\n@@ -6137,6 +6137,15 @@ package body Sem_Util is\n       return E;\n    end Current_Entity_In_Scope;\n \n+   -----------------------------\n+   -- Current_Entity_In_Scope --\n+   -----------------------------\n+\n+   function Current_Entity_In_Scope (N : Node_Id) return Entity_Id is\n+   begin\n+      return Current_Entity_In_Scope (Chars (N));\n+   end Current_Entity_In_Scope;\n+\n    -------------------\n    -- Current_Scope --\n    -------------------"}, {"sha": "a7ca0f7a09228584c37ddd9ee4e6389a2e7b72bb", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7837c085aa5538430cdc9ffc04fcfa1f581656f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=a7837c085aa5538430cdc9ffc04fcfa1f581656f", "patch": "@@ -574,9 +574,10 @@ package Sem_Util is\n    --  Find the currently visible definition for a given identifier, that is to\n    --  say the first entry in the visibility chain for the Chars of N.\n \n+   function Current_Entity_In_Scope (N : Name_Id) return Entity_Id;\n    function Current_Entity_In_Scope (N : Node_Id) return Entity_Id;\n-   --  Find whether there is a previous definition for identifier N in the\n-   --  current scope. Because declarations for a scope are not necessarily\n+   --  Find whether there is a previous definition for name or identifier N in\n+   --  the current scope. Because declarations for a scope are not necessarily\n    --  contiguous (e.g. for packages) the first entry on the visibility chain\n    --  for N is not necessarily in the current scope.\n "}]}