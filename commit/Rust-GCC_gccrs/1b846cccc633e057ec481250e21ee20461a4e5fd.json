{"sha": "1b846cccc633e057ec481250e21ee20461a4e5fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4NDZjY2NjNjMzZTA1N2VjNDgxMjUwZTIxZWUyMDQ2MWE0ZTVmZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-05-06T15:52:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-05-06T15:52:11Z"}, "message": "rtti.c (ptmd_initializer): Set non-public, if class is incomplete.\n\n\t* rtti.c (ptmd_initializer): Set non-public, if class is\n\tincomplete.\n\n\t* inc/cxxabi.h (__dynamic_cast): Explicitly say extern \"C++\".\n\t(__cxa_vec_new, __cxa_vec_ctor, __cxa_vec_dtor,\n\t__cxa_vec_delete): Likewise.\n\t* tinfo.cc (__dynamic_cast): Likewise.\n\t* vec.cc (__cxa_vec_new, __cxa_vec_ctor, __cxa_vec_dtor,\n\t__cxa_vec_delete): Likewise.\n\nFrom-SVN: r33726", "tree": {"sha": "df6ce9401647fcde37a1205382c2b1b7672eeba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6ce9401647fcde37a1205382c2b1b7672eeba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b846cccc633e057ec481250e21ee20461a4e5fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b846cccc633e057ec481250e21ee20461a4e5fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b846cccc633e057ec481250e21ee20461a4e5fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b846cccc633e057ec481250e21ee20461a4e5fd/comments", "author": null, "committer": null, "parents": [{"sha": "a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47fed553cca4889ecffc6f6b075b4a403ad0cc5"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "fd182b6c15202c7ea357cc87f72a204d5a47871d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1b846cccc633e057ec481250e21ee20461a4e5fd", "patch": "@@ -1,3 +1,15 @@\n+2000-05-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* rtti.c (ptmd_initializer): Set non-public, if class is\n+\tincomplete.\n+\t\n+\t* inc/cxxabi.h (__dynamic_cast): Explicitly say extern \"C++\".\n+\t(__cxa_vec_new, __cxa_vec_ctor, __cxa_vec_dtor,\n+\t__cxa_vec_delete): Likewise.\n+\t* tinfo.cc (__dynamic_cast): Likewise.\n+\t* vec.cc (__cxa_vec_new, __cxa_vec_ctor, __cxa_vec_dtor,\n+\t__cxa_vec_delete): Likewise.\n+\n 2000-05-04  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (DELTA_FROM_VTABLE_ENTRY): Remove."}, {"sha": "959d23fae81d1845184a378cda4335d72e2a0d06", "filename": "gcc/cp/inc/cxxabi.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Finc%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Finc%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finc%2Fcxxabi.h?ref=1b846cccc633e057ec481250e21ee20461a4e5fd", "patch": "@@ -394,6 +394,7 @@ class __vmi_class_type_info : public __class_type_info {\n };\n \n /* dynamic cast runtime */\n+extern \"C++\"\n void *__dynamic_cast (const void *__src_ptr,    /* object started from */\n                       const __class_type_info *__src_type, /* static type of object */\n                       const __class_type_info *__dst_type, /* desired target type */\n@@ -409,26 +410,30 @@ void *__dynamic_cast (const void *__src_ptr,    /* object started from */\n /* array ctor/dtor routines */\n \n /* allocate and construct array */\n+extern \"C++\"\n void *__cxa_vec_new (size_t __element_count,\n                      size_t __element_size,\n                      size_t __padding_size,\n                      void (*__constructor) (void *),\n                      void (*__destructor) (void *));\n \n /* construct array */\n+extern \"C++\"\n void __cxa_vec_ctor (void *__array_address,\n                      size_t __element_count,\n                      size_t __element_size,\n                      void (*__constructor) (void *),\n                      void (*__destructor) (void *));\n \n /* destruct array */\n+extern \"C++\"\n void __cxa_vec_dtor (void *__array_address,\n                      size_t __element_count,\n                      size_t __element_size,\n                      void (*__destructor) (void *));\n \n /* destruct and release array */\n+extern \"C++\"\n void __cxa_vec_delete (void *__array_address,\n                        size_t __element_size,\n                        size_t __padding_size,"}, {"sha": "426c5c3eedfd364efb4d25a66e2f897e317d6564", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=1b846cccc633e057ec481250e21ee20461a4e5fd", "patch": "@@ -1440,7 +1440,10 @@ ptmd_initializer (desc, target, non_public_ptr)\n       *non_public_ptr = 1;\n     }\n   if (!COMPLETE_TYPE_P (klass))\n-    flags |= 0x10;\n+    {\n+      flags |= 0x10;\n+      *non_public_ptr = 1;\n+    }\n   init = tree_cons (NULL_TREE, build_int_2 (flags, 0), init);\n   init = tree_cons (NULL_TREE,\n                     build_unary_op (ADDR_EXPR,"}, {"sha": "ec2d26209d095eab710fa62b59405a3e9c756bb1", "filename": "gcc/cp/tinfo.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo.cc?ref=1b846cccc633e057ec481250e21ee20461a4e5fd", "patch": "@@ -1137,7 +1137,7 @@ __do_upcast (__sub_kind access_path,\n }\n \n // this is the external interface to the dynamic cast machinery\n-void *\n+extern \"C++\" void *\n __dynamic_cast (const void *src_ptr,    // object started from\n                 const __class_type_info *src_type, // type of the starting object\n                 const __class_type_info *dst_type, // desired target type"}, {"sha": "e88e48dbcd20a1514de66acd5c9fc69b56acd477", "filename": "gcc/cp/vec.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b846cccc633e057ec481250e21ee20461a4e5fd/gcc%2Fcp%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fvec.cc?ref=1b846cccc633e057ec481250e21ee20461a4e5fd", "patch": "@@ -40,7 +40,7 @@ namespace __cxxabiv1\n {\n \n /* allocate and construct array */\n-void *\n+extern \"C++\" void *\n __cxa_vec_new (size_t element_count,\n                size_t element_size,\n                size_t padding_size,\n@@ -70,7 +70,7 @@ __cxa_vec_new (size_t element_count,\n }\n \n /* construct array */\n-void\n+extern \"C++\" void\n __cxa_vec_ctor (void *array_address,\n                 size_t element_count,\n                 size_t element_size,\n@@ -95,7 +95,7 @@ __cxa_vec_ctor (void *array_address,\n }\n \n /* destruct array */\n-void\n+extern \"C++\" void\n __cxa_vec_dtor (void *array_address,\n                 size_t element_count,\n                 size_t element_size,\n@@ -131,7 +131,7 @@ __cxa_vec_dtor (void *array_address,\n }\n \n /* destruct and release array */\n-void\n+extern \"C++\" void\n __cxa_vec_delete (void *array_address,\n                   size_t element_size,\n                   size_t padding_size,"}]}