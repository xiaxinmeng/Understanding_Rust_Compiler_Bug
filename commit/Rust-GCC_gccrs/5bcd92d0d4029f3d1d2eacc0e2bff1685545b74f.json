{"sha": "5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f", "node_id": "C_kwDOANBUbNoAKDViY2Q5MmQwZDQwMjlmM2QxZDJlYWNjMGUyYmZmMTY4NTU0NWI3NGY", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-24T10:37:25Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-24T13:33:43Z"}, "message": "[PR tree-optimization/107355] Handle NANs in abs range-op entry.\n\nThe problem here is that the threader is coming up with a path where\nthe only valid result is a NAN.  When the abs op1_range entry is\ntrying to add the negative posibility, it attempts to get the bounds\nof the working range.  NANs don't have bounds so they need to be\nspecial cased.\n\n\tPR tree-optimization/107355\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_abs::op1_range): Handle NAN.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr107355.c: New test.", "tree": {"sha": "68f2f856bf8e594612e3fd2725c0d2d38b167fc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68f2f856bf8e594612e3fd2725c0d2d38b167fc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "178ac530fe67e4f2fc439cc4ce89bc19d571ca31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178ac530fe67e4f2fc439cc4ce89bc19d571ca31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178ac530fe67e4f2fc439cc4ce89bc19d571ca31"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "04208c88dd1e41466f3327934df20429626428ef", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f", "patch": "@@ -1269,6 +1269,15 @@ foperator_abs::op1_range (frange &r, tree type,\n   positives.update_nan (/*sign=*/false);\n   positives.intersect (lhs);\n   r = positives;\n+  // Add -NAN if relevant.\n+  if (r.maybe_isnan ())\n+    {\n+      frange neg_nan;\n+      neg_nan.set_nan (type, true);\n+      r.union_ (neg_nan);\n+    }\n+  if (r.known_isnan ())\n+    return true;\n   // Then add the negative of each pair:\n   // ABS(op1) = [5,20] would yield op1 => [-20,-5][5,20].\n   r.union_ (frange (type,"}, {"sha": "40796344bfbdf1619c9dd745ea0f4fa0cdaee9d2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107355.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107355.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107355.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107355.c?ref=5bcd92d0d4029f3d1d2eacc0e2bff1685545b74f", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fno-guess-branch-probability -fsanitize=float-cast-overflow --param=max-jump-thread-duplication-stmts=240\" }\n+\n+float f;\n+\n+void\n+foo (double d)\n+{\n+  (char) f;\n+  long l = __builtin_fabs (d);\n+  (char) f;\n+  (long) d;\n+}"}]}