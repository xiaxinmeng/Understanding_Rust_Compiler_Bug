{"sha": "cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JlZTk4MGU4MmI3NWY3NzNiZDlhZjE2YmE1ZTZhZDZiMzRkMThjNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-04T19:39:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-04T19:39:42Z"}, "message": "(finish_enum): Undo previous change.\n\nFrom-SVN: r5997", "tree": {"sha": "49c25e9f7c13615210be2b987cd9f271619d5e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49c25e9f7c13615210be2b987cd9f271619d5e32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7/comments", "author": null, "committer": null, "parents": [{"sha": "5c28da2454101fb1e45eb9b89985b0f15a0e58b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c28da2454101fb1e45eb9b89985b0f15a0e58b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c28da2454101fb1e45eb9b89985b0f15a0e58b5"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "bb2ad125c1a06c81cd84a887fcca9771d287bb50", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "patch": "@@ -5566,12 +5566,8 @@ finish_enum (enumtype, values)\n   TYPE_SIZE (enumtype) = 0;\n   layout_type (enumtype);\n \n-  /* If an enum has no negative values, and it goes beyond the range\n-     of the signed integral type, make it unsigned.  */\n-  TREE_UNSIGNED (enumtype)\n-    = (! tree_int_cst_lt (minnode, integer_zero_node)\n-       && ! tree_int_cst_lt (maxnode,\n-\t\t\t     TYPE_MAX_VALUE (type_for_size (precision, 0))));\n+  /* An enum can have some negative values; then it is signed.  */\n+  TREE_UNSIGNED (enumtype) = ! tree_int_cst_lt (minnode, integer_zero_node);\n \n   /* Change the type of the enumerators to be the enum type.\n      Formerly this was done only for enums that fit in an int,"}]}