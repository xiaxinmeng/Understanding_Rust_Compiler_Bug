{"sha": "1ecad98e4de3280e8e9951706f2e5251819fb92a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVjYWQ5OGU0ZGUzMjgwZThlOTk1MTcwNmYyZTUyNTE4MTlmYjkyYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-01-18T21:29:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-01-18T21:29:11Z"}, "message": "re PR middle-end/46894 (vector tests fail on powerpc 32-bit)\n\n\tPR middle-end/46894\n\t* explow.c (allocate_dynamic_stack_space): Do not assume more than\n\tBITS_PER_UNIT alignment if STACK_DYNAMIC_OFFSET or STACK_POINTER_OFFSET\n\tare defined.\n\nFrom-SVN: r168968", "tree": {"sha": "8cc1b63baa2f41820df5c80ec6e17cbd79ac56dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cc1b63baa2f41820df5c80ec6e17cbd79ac56dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ecad98e4de3280e8e9951706f2e5251819fb92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ecad98e4de3280e8e9951706f2e5251819fb92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ecad98e4de3280e8e9951706f2e5251819fb92a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ecad98e4de3280e8e9951706f2e5251819fb92a/comments", "author": null, "committer": null, "parents": [{"sha": "d4f2460a1bbcf6be3414aa26e79fa4a3fbb3716c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f2460a1bbcf6be3414aa26e79fa4a3fbb3716c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f2460a1bbcf6be3414aa26e79fa4a3fbb3716c"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "736051cab1f64d9e470c838b28cf895e93ea55c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ecad98e4de3280e8e9951706f2e5251819fb92a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ecad98e4de3280e8e9951706f2e5251819fb92a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ecad98e4de3280e8e9951706f2e5251819fb92a", "patch": "@@ -1,3 +1,10 @@\n+2011-01-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/46894\n+\t* explow.c (allocate_dynamic_stack_space): Do not assume more than\n+\tBITS_PER_UNIT alignment if STACK_DYNAMIC_OFFSET or STACK_POINTER_OFFSET\n+\tare defined.\n+\n 2011-01-18  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tPR tree-optimization/47179"}, {"sha": "2a182065bca258e08fb5660eb2625b2fae7d487a", "filename": "gcc/explow.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ecad98e4de3280e8e9951706f2e5251819fb92a/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ecad98e4de3280e8e9951706f2e5251819fb92a/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=1ecad98e4de3280e8e9951706f2e5251819fb92a", "patch": "@@ -1148,6 +1148,7 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n {\n   HOST_WIDE_INT stack_usage_size = -1;\n   rtx final_label, final_target, target;\n+  unsigned extra_align = 0;\n   bool must_align;\n \n   /* If we're asking for zero bytes, it doesn't matter what we point\n@@ -1231,21 +1232,25 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n      that might result from the alignment operation.  */\n \n   must_align = (crtl->preferred_stack_boundary < required_align);\n-#if defined (STACK_DYNAMIC_OFFSET) || defined (STACK_POINTER_OFFSET)\n-  must_align = true;\n-#endif\n-\n   if (must_align)\n     {\n-      unsigned extra, extra_align;\n-\n       if (required_align > PREFERRED_STACK_BOUNDARY)\n \textra_align = PREFERRED_STACK_BOUNDARY;\n       else if (required_align > STACK_BOUNDARY)\n \textra_align = STACK_BOUNDARY;\n       else\n \textra_align = BITS_PER_UNIT;\n-      extra = (required_align - extra_align) / BITS_PER_UNIT;\n+    }\n+\n+  /* ??? STACK_POINTER_OFFSET is always defined now.  */\n+#if defined (STACK_DYNAMIC_OFFSET) || defined (STACK_POINTER_OFFSET)\n+  must_align = true;\n+  extra_align = BITS_PER_UNIT;\n+#endif\n+\n+  if (must_align)\n+    {\n+      unsigned extra = (required_align - extra_align) / BITS_PER_UNIT;\n \n       size = plus_constant (size, extra);\n       size = force_operand (size, NULL_RTX);"}]}