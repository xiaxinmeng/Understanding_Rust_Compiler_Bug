{"sha": "ca24c5ad7371a5b1947ccd01d4b163d666179669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyNGM1YWQ3MzcxYTViMTk0N2NjZDAxZDRiMTYzZDY2NjE3OTY2OQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-06-01T14:39:17Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-06-01T14:39:17Z"}, "message": "t-slibgcc-darwin: Move to ...\n\n\tgcc:\n\t* config/t-slibgcc-darwin: Move to ...\n\t* config/t-slibgcc-dummy: .. this.\n\tClarify comments.\n\t* config.gcc (i[34567]86-*-darwin*, x86_64-*-darwin*,\n\tpowerpc-*-darwin*, powerpc64-*-darwin*): Reflect this.\n\t(i[3456x]86-*-netware*): Add t-slibgcc-dummy to tmake_file.\n\t(i[34567]86-*-rtems*): Remove extra_parts.\n\tUse i386/t-rtems.\n\tRemove i386/t-crtstuff from tmake_file.\n\t(i[34567]86-*-solaris2*): Remove t-svr4,\n\tt-slibgcc-elf-ver, t-slibgcc-sld from tmake_file, add\n\tt-slibgcc-dummy.\n\t(sparc-*-elf*, sparc64-*-elf*): Remove tmake_file, extra_parts.\n\t(sparc-*-rtems*, sparc64-*-rtems*): Remove sparc/t-crtin,\n\tsparc/t-crtfm from tmake_file.\n\t(sparc*-*-solaris2*): Remove sparc/t-sol2, sparc/t-crtfm,\n\tt-slibgcc-elf-ver, t-slibgcc-sld, add t-slibgcc-dummy.\n\tRemove extra_parts.\n\t* config/t-sol2 (TARGET_LIBGCC2_CFLAGS): Define.\n\t* config/i386/t-nwld (SHLIB_LINK): Remove.\n\t* config/i386/t-rtems-i386: Rename to ...\n\t* config/i386/t-rtems: ... this.\n\t($(T)crti.o, $(T)crtn.o): Remove.\n\t(FPBIT, DPBIT, LIB2FUNCS_EXTRA): Remove.\n\t(dp-bit.c, fp-bit.c, xp-bit.c): Remove.\n\t(EXTRA_MULTILIB_PARTS, LIBGCC, INSTALL_LIBGCC): Remove.\n\t* config/i386/t-sol2-10 (LIBGCC, INSTALL_LIBGCC,\n\tEXTRA_MULTILIB_PARTS): Remove.\n\t* config/sparc/t-sol2-64: Likewise.\n\t* config/sparc/t-sol2: Remove.\n\t* config/sparc/t-crtin: Remove.\n\t* config/sparc/gmon-sol2.c: Move to ../libgcc/config.\n\t* config/i386/gmon-sol2.c: Remove.\n\t* config/i386/sol2-c1.asm: Move to ../libgcc/config/i386/sol2-c1.S.\n\t* config/i386/sol2-ci.asm: Move to ../libgcc/config/i386/sol2-ci.S.\n\t* config/i386/sol2-cn.asm: Move to ../libgcc/config/i386/sol2-cn.S.\n\t* config/i386/sol2-gc1.asm: Remove.\n\t* config/sparc/sol2-c1.asm: Move to ../libgcc/config/sparc/sol2-c1.S.\n\t* config/sparc/sol2-ci.asm: Move to ../libgcc/config/sparc/sol2-ci.S.\n\t* config/sparc/sol2-cn.asm: Move to ../libgcc/config/sparc/sol2-cn.S.\n\t* config/t-slibgcc-sld: Remove.\n\n\tlibgcc:\n\t* Makefile.in (cpu_type): Define.\n\t* config.host (i[34567]86-*-rtems*): Handle it.\n\t(i[34567]86-*-solaris2*): Move body ...\n\t(*-*-solaris2*): ... here.\n\tNew case, generalize.\n\t(sparc-*-elf*): Handle it.\n\t(sparc-*-linux*, sparc64-*-linux*): Replace sparc/t-crtfm by t-crtfm.\n\t(sparc-*-rtems*, sparc64-*-rtems*); Handle it.\n\t(sparc64-*-solaris2*, sparcv9-*-solaris2*, sparc-*-solaris2*):\n\tFold into ...\n\t(sparc*-*-solaris2*): ... this.\n\tNew case.\n\t(sparc64-*-elf*): Handle it.\n\t* config/gmon-sol2.c: Move from ../gcc/config/sparc.\n\tMerge ../gcc/config/i386/gmon-sol2.c.\n\t* config/i386/sol2-c1.S: Move from ../gcc/config/i386/sol2-c1.asm.\n\tUse C comments.\n\tMerge ../gcc/config/i386/sol2-gc1.asm.\n\t* config/i386/sol2-ci.S: Move from ../gcc/config/i386/sol2-ci.asm.\n\tUse C comments.\n\t* config/i386/sol2-cn.S: Move from ../gcc/config/i386/sol2-cn.asm.\n\tUse C comments.\n\t* config/i386/t-crtfm (crtfastmath.o): Use $<.\n\t* config/i386/t-crtstuff: New file.\n\t* config/i386/t-softfp: New file.\n\t* config/i386/t-sol2 ($(T)gmon.o, $(T)gcrt1.o, $(T)crt1.o),\n\t$(T)crti.o, $(T)crtn.o): Remove.\n\t(gcrt1.o): New rule.\n\t(TARGET_LIBGCC2_CFLAGS): Remove.\n\t* config/sparc/sol2-c1.S: Move from ../gcc/config/sparc/sol2-c1.asm.\n\t* config/sparc/sol2-ci.S: Move from ../gcc/config/sparc/sol2-ci.asm.\n\t* config/sparc/sol2-cn.S: Move from ../gcc/config/sparc/sol2-cn.asm.\n\t* config/sparc/t-sol2: New file.\n\t* config/sparc/t-crtfm: Move to ...\n\t* config/t-crtfm: ... this.\n\tUse $(cpu_type), $<.\n\t* config/t-crtin: New file.\n\t* config/sparc/t-softfp: New file.\n\t* config/sparc/t-softmul: New file.\n\t* config/t-rtems: New file.\n\t* config/t-slibgcc: New file.\n\t* config/t-slibgcc-elf-ver: New file.\n\t* config/t-slibgcc-gld: New file.\n\t* config/t-slibgcc-sld: New file.\n\t* config/t-sol2: New file.\n\t* configure.ac: Include ../config/lib-ld.m4.\n\tCall AC_LIB_PROG_LD_GNU.\n\tSubstitute cpu_type.\n\t* configure: Regenerate.\n\nFrom-SVN: r174529", "tree": {"sha": "dc80a01f55c46d4ecd769e8fd03fb169ba2688e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc80a01f55c46d4ecd769e8fd03fb169ba2688e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca24c5ad7371a5b1947ccd01d4b163d666179669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca24c5ad7371a5b1947ccd01d4b163d666179669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca24c5ad7371a5b1947ccd01d4b163d666179669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca24c5ad7371a5b1947ccd01d4b163d666179669/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce4fc506085489152bce27da53f172c4681ae450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4fc506085489152bce27da53f172c4681ae450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4fc506085489152bce27da53f172c4681ae450"}], "stats": {"total": 1792, "additions": 713, "deletions": 1079}, "files": [{"sha": "72fc84bbc1c3f6658d0df363fd1cfe9ea876800f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,3 +1,47 @@\n+2011-06-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/t-slibgcc-darwin: Move to ...\n+\t* config/t-slibgcc-dummy: .. this.\n+\tClarify comments.\n+\t* config.gcc (i[34567]86-*-darwin*, x86_64-*-darwin*,\n+\tpowerpc-*-darwin*, powerpc64-*-darwin*): Reflect this.\n+\t(i[3456x]86-*-netware*): Add t-slibgcc-dummy to tmake_file.\n+\t(i[34567]86-*-rtems*): Remove extra_parts.\n+\tUse i386/t-rtems.\n+\tRemove i386/t-crtstuff from tmake_file.\n+\t(i[34567]86-*-solaris2*): Remove t-svr4,\n+\tt-slibgcc-elf-ver, t-slibgcc-sld from tmake_file, add\n+\tt-slibgcc-dummy.\n+\t(sparc-*-elf*, sparc64-*-elf*): Remove tmake_file, extra_parts.\n+\t(sparc-*-rtems*, sparc64-*-rtems*): Remove sparc/t-crtin,\n+\tsparc/t-crtfm from tmake_file.\n+\t(sparc*-*-solaris2*): Remove sparc/t-sol2, sparc/t-crtfm,\n+\tt-slibgcc-elf-ver, t-slibgcc-sld, add t-slibgcc-dummy.\n+\tRemove extra_parts.\n+\t* config/t-sol2 (TARGET_LIBGCC2_CFLAGS): Define.\n+\t* config/i386/t-nwld (SHLIB_LINK): Remove.\n+\t* config/i386/t-rtems-i386: Rename to ...\n+\t* config/i386/t-rtems: ... this.\n+\t($(T)crti.o, $(T)crtn.o): Remove.\n+\t(FPBIT, DPBIT, LIB2FUNCS_EXTRA): Remove.\n+\t(dp-bit.c, fp-bit.c, xp-bit.c): Remove.\n+\t(EXTRA_MULTILIB_PARTS, LIBGCC, INSTALL_LIBGCC): Remove.\n+\t* config/i386/t-sol2-10 (LIBGCC, INSTALL_LIBGCC,\n+\tEXTRA_MULTILIB_PARTS): Remove.\n+\t* config/sparc/t-sol2-64: Likewise.\n+\t* config/sparc/t-sol2: Remove.\n+\t* config/sparc/t-crtin: Remove.\n+\t* config/sparc/gmon-sol2.c: Move to ../libgcc/config.\n+\t* config/i386/gmon-sol2.c: Remove.\n+\t* config/i386/sol2-c1.asm: Move to ../libgcc/config/i386/sol2-c1.S.\n+\t* config/i386/sol2-ci.asm: Move to ../libgcc/config/i386/sol2-ci.S.\n+\t* config/i386/sol2-cn.asm: Move to ../libgcc/config/i386/sol2-cn.S.\n+\t* config/i386/sol2-gc1.asm: Remove.\n+\t* config/sparc/sol2-c1.asm: Move to ../libgcc/config/sparc/sol2-c1.S.\n+\t* config/sparc/sol2-ci.asm: Move to ../libgcc/config/sparc/sol2-ci.S.\n+\t* config/sparc/sol2-cn.asm: Move to ../libgcc/config/sparc/sol2-cn.S.\n+\t* config/t-slibgcc-sld: Remove.\n+\n 2011-06-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (mem_loc_descriptor) <do_ucompare>: Call"}, {"sha": "c4915baabbe80133d181e9134140ae7ca7f21ca3", "filename": "gcc/config.gcc", "status": "modified", "additions": 10, "deletions": 29, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1172,12 +1172,12 @@ i[34567]86-*-darwin*)\n \tneed_64bit_isa=yes\n \t# Baseline choice for a machine that allows m64 support.\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} t-slibgcc-darwin i386/t-crtpc i386/t-crtfm\"\n+\ttmake_file=\"${tmake_file} t-slibgcc-dummy i386/t-crtpc i386/t-crtfm\"\n \tlibgcc_tm_file=\"$libgcc_tm_file i386/darwin-lib.h\"\n \t;;\n x86_64-*-darwin*)\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-darwin i386/t-crtpc i386/t-crtfm\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-dummy i386/t-crtpc i386/t-crtfm\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin64.h\"\n \tlibgcc_tm_file=\"$libgcc_tm_file i386/darwin-lib.h\"\n \t;;\n@@ -1301,7 +1301,7 @@ i[3456x]86-*-netware*)\n \t*/nwld)\n \t\textra_objs=\"$extra_objs nwld.o\"\n \t\ttm_file=\"${tm_file} i386/nwld.h\"\n-\t \ttmake_file=\"${tmake_file} i386/t-nwld\"\n+\t \ttmake_file=\"${tmake_file} i386/t-nwld t-slibgcc-dummy\"\n \t\textra_parts=\"crt0.o libgcc.def libc.def libcpre.def posixpre.def\"\n \t\t;;\n \tesac\n@@ -1321,8 +1321,7 @@ i[34567]86-*-nto-qnx*)\n \t;;\n i[34567]86-*-rtems*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/rtemself.h rtems.h newlib-stdint.h\"\n-\textra_parts=\"crtbegin.o crtend.o crti.o crtn.o\"\n-\ttmake_file=\"${tmake_file} i386/t-rtems-i386 i386/t-crtstuff t-rtems\"\n+\ttmake_file=\"${tmake_file} i386/t-rtems t-rtems\"\n \t;;\n i[34567]86-*-solaris2*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/sysv4.h sol2.h\"\n@@ -1351,16 +1350,13 @@ i[34567]86-*-solaris2*)\n \tif test x$gas = xyes; then\n \t\ttm_file=\"${tm_file} i386/sol2-gas.h\"\n \tfi\n-\ttmake_file=\"${tmake_file} t-sol2 t-svr4\"\n+\ttmake_file=\"${tmake_file} t-sol2 t-slibgcc-dummy\"\n \tc_target_objs=\"${c_target_objs} sol2-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} sol2-c.o\"\n \textra_objs=\"sol2.o\"\n \ttm_p_file=\"${tm_p_file} sol2-protos.h\"\n \tif test x$gnu_ld = xyes; then\n-\t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n \t\ttm_defines=\"${tm_defines} TARGET_GNU_LD=1\"\n-\telse\n-\t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n \tif test x$gas = xyes; then\n \t\ttm_file=\"usegas.h ${tm_file}\"\n@@ -1371,9 +1367,6 @@ i[34567]86-*-solaris2*)\n \t\ttm_file=\"${tm_file} i386/x86-64.h i386/sol2-10.h\"\n \t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n \t\ttmake_file=\"$tmake_file i386/t-sol2-10\"\n-\t\t# i386/t-crtstuff only affects libgcc.  Its inclusion\n-\t\t# depends on a runtime test and is thus performed in\n-\t\t# libgcc/configure.ac instead.\n \t\tneed_64bit_hwint=yes\n \t\tneed_64bit_isa=yes\n \t\tuse_gcc_stdint=wrap\n@@ -2010,13 +2003,13 @@ powerpc-*-darwin*)\n \t  *-darwin[0-6]*)\n \t    ;;\n \tesac\n-\ttmake_file=\"${tmake_file} t-slibgcc-darwin\"\n+\ttmake_file=\"${tmake_file} t-slibgcc-dummy\"\n \textra_headers=altivec.h\n \t;;\n powerpc64-*-darwin*)\n \textra_options=\"${extra_options} ${cpu_type}/darwin.opt\"\n \textra_parts=\"crt2.o\"\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-darwin\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-dummy\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin8.h ${cpu_type}/darwin64.h\"\n \textra_headers=altivec.h\n \t;;\n@@ -2442,13 +2435,10 @@ sparc-*-elf*)\n \t\ttmake_file=\"sparc/t-elf\"\n \t\t;;\n \tesac\n-\ttmake_file=\"${tmake_file} sparc/t-crtin sparc/t-crtfm\"\n-\textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h sparc/sp-elf.h sparc/rtemself.h rtems.h newlib-stdint.h\"\n-\ttmake_file=\"sparc/t-elf sparc/t-crtin sparc/t-crtfm t-rtems\"\n-\textra_parts=\"crtbegin.o crtend.o\"\n+\ttmake_file=\"sparc/t-elf t-rtems\"\n \t;;\n sparc-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h\"\n@@ -2505,20 +2495,14 @@ sparc*-*-solaris2*)\n \t\ttm_file=\"${tm_file} sol2-gld.h sparc/sol2-gld-bi.h\"\n \tfi\n \ttm_file=\"${tm_file} tm-dwarf2.h\"\n-\ttmake_file=\"t-sol2 sparc/t-sol2 sparc/t-sol2-64 sparc/t-crtin sparc/t-crtfm\"\n-\tif test x$gnu_ld = xyes; then\n-\t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n-\telse\n-\t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n-\tfi\n+\ttmake_file=\"t-sol2 t-slibgcc-dummy sparc/t-sol2-64\"\n \tif test x$gas = xyes; then\n \t\ttm_file=\"usegas.h ${tm_file}\"\n \tfi\n \tc_target_objs=\"sol2-c.o\"\n \tcxx_target_objs=\"sol2-c.o\"\n \textra_objs=\"sol2.o\"\n \ttm_p_file=\"${tm_p_file} sol2-protos.h\"\n-\textra_parts=\"crt1.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \tcase ${enable_threads}:${have_pthread_h}:${have_thread_h} in\n \t  \"\":yes:* | yes:yes:* )\n \t\tthread_file=posix\n@@ -2532,14 +2516,11 @@ sparc-wrs-vxworks)\n sparc64-*-elf*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp64-elf.h\"\n \textra_options=\"${extra_options} sparc/little-endian.opt\"\n-\ttmake_file=\"${tmake_file} sparc/t-crtin sparc/t-crtfm\"\n-\textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc64-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp64-elf.h sparc/rtemself.h rtems.h\"\n \textra_options=\"${extra_options} sparc/little-endian.opt\"\n-\ttmake_file=\"${tmake_file} sparc/t-crtin sparc/t-crtfm t-rtems\"\n-\textra_parts=\"crtbegin.o crtend.o\"\n+\ttmake_file=\"${tmake_file} t-rtems\"\n \t;;\n sparc64-*-linux*)\n \ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/linux64.h\""}, {"sha": "44bbb44488fe74065481362b3803114680537d7d", "filename": "gcc/config/i386/gmon-sol2.c", "status": "removed", "additions": 0, "deletions": 459, "changes": 459, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,459 +0,0 @@\n-/*-\n- * Copyright (c) 1991 The Regents of the University of California.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in the\n- *    documentation and/or other materials provided with the distribution.\n- * 3. [rescinded 22 July 1999]\n- * 4. Neither the name of the University nor the names of its contributors\n- *    may be used to endorse or promote products derived from this software\n- *    without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n- */\n-\n-/*\n- * This is a modified gmon.c by J.W.Hawtin <oolon@ankh.org>,\n- * 14/8/96 based on the original gmon.c in GCC and the hacked version\n- * solaris 2 sparc version (config/sparc/gmon-sol.c) by Mark Eichin. To do\n- * process profiling on solaris 2.X X86\n- *\n- * It must be used in conjunction with sol2-gc1.asm, which is used to start\n- * and stop process monitoring.\n- *\n- * Differences.\n- *\n- * On Solaris 2 _mcount is called by library functions not mcount, so support\n- * has been added for both.\n- *\n- * Also the prototype for profil() is different\n- *\n- * Solaris 2 does not seem to have char *minbrk whcih allows the setting of\n- * the minimum SBRK region so this code has been removed and lets pray malloc\n- * does not mess it up.\n- *\n- * Notes\n- *\n- * This code could easily be integrated with the original gmon.c and perhaps\n- * should be.\n- */\n-#include \"tconfig.h\"\n-#include \"tsystem.h\"\n-#include <fcntl.h> /* for creat() */\n-\n-#ifdef DEBUG\n-#include <stdio.h>\n-#endif\n-\n-static void moncontrol (int);\n-extern void monstartup (char *, char *);\n-extern void _mcleanup (void);\n-extern void internal_mcount (\n-#ifdef __x86_64__\n-\t\t\t     char *, unsigned short *\n-#else\n-\t\t\t     void\n-#endif\n-\t\t\t     );\n-\n-\n-struct phdr {\n-                char    *lpc;\n-                char    *hpc;\n-                int     ncnt;\n-};\n-\n-\n-#define HISTFRACTION 2\n-#define HISTCOUNTER unsigned short\n-#define HASHFRACTION 1\n-#define ARCDENSITY 2\n-#define MINARCS 50\n-#define BASEADDRESS 0x8000000 /* On Solaris 2 X86 all executables start here\n-\t\t\t\t and not at 0 */ \n-\n-struct tostruct {\n-  char *selfpc;\n-  long count;\n-  unsigned short link;\n-};\n-\n-struct rawarc {\n-    unsigned long       raw_frompc;\n-    unsigned long       raw_selfpc;\n-    long                raw_count;\n-};\n-#define ROUNDDOWN(x,y)  (((x)/(y))*(y))\n-#define ROUNDUP(x,y)    ((((x)+(y)-1)/(y))*(y))\n-\n-/* char *minbrk; */\n-\n-typedef __SIZE_TYPE__ size_t;\n-typedef __PTRDIFF_TYPE__ intptr_t;\n-\n-    /*\n-     *\tfroms is actually a bunch of unsigned shorts indexing tos\n-     */\n-static int\t\tprofiling = 3;\n-static unsigned short\t*froms;\n-static struct tostruct\t*tos = 0;\n-static long\t\ttolimit = 0;\n-static char\t\t*s_lowpc = 0;\n-static char\t\t*s_highpc = 0;\n-static size_t\t\ts_textsize = 0;\n-\n-static int\tssiz;\n-static char\t*sbuf;\n-static int\ts_scale;\n-    /* see profil(2) where this is describe (incorrectly) */\n-#define\t\tSCALE_1_TO_1\t0x10000L\n-\n-#define\tMSG \"No space for profiling buffer(s)\\n\"\n-\n-extern int errno;\n-\n-extern void *sbrk (intptr_t);\n-\n-void\n-monstartup(char *lowpc, char *highpc)\n-{\n-    size_t\t\tmonsize;\n-    char\t\t*buffer;\n-    register size_t\to;\n-\n-\t/*\n-\t *\tround lowpc and highpc to multiples of the density we're using\n-\t *\tso the rest of the scaling (here and in gprof) stays in ints.\n-\t */\n-    lowpc = (char *)\n-\t    ROUNDDOWN((size_t)lowpc, HISTFRACTION*sizeof(HISTCOUNTER));\n-    s_lowpc = lowpc;\n-    highpc = (char *)\n-\t    ROUNDUP((size_t)highpc, HISTFRACTION*sizeof(HISTCOUNTER));\n-    s_highpc = highpc;\n-    s_textsize = highpc - lowpc;\n-    monsize = (s_textsize / HISTFRACTION) + sizeof(struct phdr);\n-    buffer = (char *) sbrk( monsize );\n-    if ( buffer == (char *) -1 ) {\n-\twrite( 2 , MSG , sizeof(MSG) );\n-\treturn;\n-    }\n-    froms = (unsigned short *) sbrk( s_textsize / HASHFRACTION );\n-    if ( froms == (unsigned short *) -1 ) {\n-\twrite( 2 , MSG , sizeof(MSG) );\n-\tfroms = 0;\n-\treturn;\n-    }\n-    tolimit = s_textsize * ARCDENSITY / 100;\n-    if ( tolimit < MINARCS ) {\n-\ttolimit = MINARCS;\n-    } else if ( tolimit > 65534 ) {\n-\ttolimit = 65534;\n-    }\n-    tos = (struct tostruct *) sbrk( tolimit * sizeof( struct tostruct ) );\n-    if ( tos == (struct tostruct *) -1 ) {\n-\twrite( 2 , MSG , sizeof(MSG) );\n-\tfroms = 0;\n-\ttos = 0;\n-\treturn;\n-    }\n-/*    minbrk = (char *) sbrk(0);*/\n-    tos[0].link = 0;\n-    sbuf = buffer;\n-    ssiz = monsize;\n-    ( (struct phdr *) buffer ) -> lpc = lowpc;\n-    ( (struct phdr *) buffer ) -> hpc = highpc;\n-    ( (struct phdr *) buffer ) -> ncnt = ssiz;\n-    monsize -= sizeof(struct phdr);\n-    if ( monsize <= 0 )\n-\treturn;\n-    o = highpc - lowpc;\n-    if( monsize < o )\n-#ifndef hp300\n-\ts_scale = ( (float) monsize / o ) * SCALE_1_TO_1;\n-#else /* avoid floating point */\n-    {\n-\tint quot = o / monsize;\n-\n-\tif (quot >= 0x10000)\n-\t\ts_scale = 1;\n-\telse if (quot >= 0x100)\n-\t\ts_scale = 0x10000 / quot;\n-\telse if (o >= 0x800000)\n-\t\ts_scale = 0x1000000 / (o / (monsize >> 8));\n-\telse\n-\t\ts_scale = 0x1000000 / ((o << 8) / monsize);\n-    }\n-#endif\n-    else\n-\ts_scale = SCALE_1_TO_1;\n-    moncontrol(1);\n-}\n-\n-void\n-_mcleanup (void)\n-{\n-    int\t\t\tfd;\n-    int\t\t\tfromindex;\n-    int\t\t\tendfrom;\n-    char\t\t*frompc;\n-    int\t\t\ttoindex;\n-    struct rawarc\trawarc;\n-\n-    moncontrol(0);\n-    fd = creat( \"gmon.out\" , 0666 );\n-    if ( fd < 0 ) {\n-\tperror( \"mcount: gmon.out\" );\n-\treturn;\n-    }\n-#   ifdef DEBUG\n-\tfprintf( stderr , \"[mcleanup] sbuf %#x ssiz %d\\n\" , sbuf , ssiz );\n-#   endif /* DEBUG */\n-\n-    write( fd , sbuf , ssiz );\n-    endfrom = s_textsize / (HASHFRACTION * sizeof(*froms));\n-    for ( fromindex = 0 ; fromindex < endfrom ; fromindex++ ) {\n-\tif ( froms[fromindex] == 0 ) {\n-\t    continue;\n-\t}\n-\tfrompc = s_lowpc + (fromindex * HASHFRACTION * sizeof(*froms));\n-\tfor (toindex=froms[fromindex]; toindex!=0; toindex=tos[toindex].link) {\n-#\t    ifdef DEBUG\n-\t\tfprintf( stderr ,\n-\t\t\t\"[mcleanup] frompc %#x selfpc %#x count %d\\n\" ,\n-\t\t\tfrompc , tos[toindex].selfpc , tos[toindex].count );\n-#\t    endif /* DEBUG */\n-\t    rawarc.raw_frompc = (unsigned long) frompc;\n-\t    rawarc.raw_selfpc = (unsigned long) tos[toindex].selfpc;\n-\t    rawarc.raw_count = tos[toindex].count;\n-\t    write( fd , &rawarc , sizeof rawarc );\n-\t}\n-    }\n-    close( fd );\n-}\n-\n-#ifdef __x86_64__\n-/* See GLIBC for additional information about this technique.  */\n-asm(\".globl _mcount\\n\" \n-    \"\\t.type\\t_mcount, @function\\n\"\n-    \"_mcount:\\n\"\n-    /* The compiler calls _mcount after the prologue, and does not\n-       save any of the registers.  Therefore we must preserve all\n-       seven registers which may contain function arguments.  */\n-    \"\\tsubq\\t$0x38,%rsp\\n\"\n-    \"\\tmovq\\t%rax,(%rsp)\\n\"\n-    \"\\tmovq\\t%rcx,0x08(%rsp)\\n\"\n-    \"\\tmovq\\t%rdx,0x10(%rsp)\\n\"\n-    \"\\tmovq\\t%rsi,0x18(%rsp)\\n\"\n-    \"\\tmovq\\t%rdi,0x20(%rsp)\\n\"\n-    \"\\tmovq\\t%r8,0x28(%rsp)\\n\"\n-    \"\\tmovq\\t%r9,0x30(%rsp)\\n\"\n-    /* Get SELFPC (pushed by the call to this function) and\n-       FROMPCINDEX (via the frame pointer.  */\n-    \"\\tmovq\\t0x38(%rsp),%rdi\\n\"\n-    \"\\tmovq\\t0x8(%rbp),%rsi\\n\"\n-    \"\\tcall\\tinternal_mcount\\n\"\n-    /* Restore the saved registers.  */\n-    \"\\tmovq\\t0x30(%rsp),%r9\\n\"\n-    \"\\tmovq\\t0x28(%rsp),%r8\\n\"\n-    \"\\tmovq\\t0x20(%rsp),%rdi\\n\"\n-    \"\\tmovq\\t0x18(%rsp),%rsi\\n\"\n-    \"\\tmovq\\t0x10(%rsp),%rdx\\n\"\n-    \"\\tmovq\\t0x08(%rsp),%rcx\\n\"\n-    \"\\tmovq\\t(%rsp),%rax\\n\"\n-    \"\\taddq\\t$0x38,%rsp\\n\"\n-    \"\\tretq\\n\"\n-    );\n-#else\n-/* Solaris 2 libraries use _mcount.  */\n-asm(\".globl _mcount; _mcount: jmp internal_mcount\");\n-/* This is for compatibility with old versions of gcc which used mcount.  */\n-asm(\".globl mcount; mcount: jmp internal_mcount\");\n-#endif\n-\n-void\n-internal_mcount (\n-#ifdef __x86_64__\n-\t\t char *selfpc,\n-\t\t unsigned short *frompcindex\n-#else\n-\t\t void\n-#endif\n-\t\t )\n-{\n-#ifndef __x86_64__\n-\tregister char\t\t\t*selfpc;\n-\tregister unsigned short\t\t*frompcindex;\n-#endif\n-\tregister struct tostruct\t*top;\n-\tregister struct tostruct\t*prevtop;\n-\tregister long\t\t\ttoindex;\n-\tstatic char already_setup;\n-\n-#ifndef __x86_64__\n-\t/*\n-\t *\tfind the return address for mcount,\n-\t *\tand the return address for mcount's caller.\n-\t */\n-\n-\t/* selfpc = pc pushed by mcount call.\n-\t   This identifies the function that was just entered.  */\n-\tselfpc = (void *) __builtin_return_address (0);\n-\t/* frompcindex = pc in preceding frame.\n-\t   This identifies the caller of the function just entered.  */\n-\tfrompcindex = (void *) __builtin_return_address (1);\n-#endif\n-\n-\tif(!already_setup) {\n-          extern char etext[];\n-\t  already_setup = 1;\n-#ifdef __x86_64__\n-\t  monstartup(0, etext);\n-#else\n-\t  monstartup((char*)0x08040000, etext);\n-#endif\n-#ifdef USE_ONEXIT\n-\t  on_exit(_mcleanup, 0);\n-#else\n-\t  atexit(_mcleanup);\n-#endif\n-\t}\n-\t/*\n-\t *\tcheck that we are profiling\n-\t *\tand that we aren't recursively invoked.\n-\t */\n-\tif (profiling) {\n-\t\tgoto out;\n-\t}\n-\tprofiling++;\n-\t/*\n-\t *\tcheck that frompcindex is a reasonable pc value.\n-\t *\tfor example:\tsignal catchers get called from the stack,\n-\t *\t\t\tnot from text space.  too bad.\n-\t */\n-\tfrompcindex = (unsigned short *)((long)frompcindex - (long)s_lowpc);\n-\tif ((unsigned long)frompcindex > s_textsize) {\n-\t\tgoto done;\n-\t}\n-\tfrompcindex =\n-\t    &froms[((long)frompcindex) / (HASHFRACTION * sizeof(*froms))];\n-\ttoindex = *frompcindex;\n-\tif (toindex == 0) {\n-\t\t/*\n-\t\t *\tfirst time traversing this arc\n-\t\t */\n-\t\ttoindex = ++tos[0].link;\n-\t\tif (toindex >= tolimit) {\n-\t\t\tgoto overflow;\n-\t\t}\n-\t\t*frompcindex = toindex;\n-\t\ttop = &tos[toindex];\n-\t\ttop->selfpc = selfpc;\n-\t\ttop->count = 1;\n-\t\ttop->link = 0;\n-\t\tgoto done;\n-\t}\n-\ttop = &tos[toindex];\n-\tif (top->selfpc == selfpc) {\n-\t\t/*\n-\t\t *\tarc at front of chain; usual case.\n-\t\t */\n-\t\ttop->count++;\n-\t\tgoto done;\n-\t}\n-\t/*\n-\t *\thave to go looking down chain for it.\n-\t *\ttop points to what we are looking at,\n-\t *\tprevtop points to previous top.\n-\t *\twe know it is not at the head of the chain.\n-\t */\n-\tfor (; /* goto done */; ) {\n-\t\tif (top->link == 0) {\n-\t\t\t/*\n-\t\t\t *\ttop is end of the chain and none of the chain\n-\t\t\t *\thad top->selfpc == selfpc.\n-\t\t\t *\tso we allocate a new tostruct\n-\t\t\t *\tand link it to the head of the chain.\n-\t\t\t */\n-\t\t\ttoindex = ++tos[0].link;\n-\t\t\tif (toindex >= tolimit) {\n-\t\t\t\tgoto overflow;\n-\t\t\t}\n-\t\t\ttop = &tos[toindex];\n-\t\t\ttop->selfpc = selfpc;\n-\t\t\ttop->count = 1;\n-\t\t\ttop->link = *frompcindex;\n-\t\t\t*frompcindex = toindex;\n-\t\t\tgoto done;\n-\t\t}\n-\t\t/*\n-\t\t *\totherwise, check the next arc on the chain.\n-\t\t */\n-\t\tprevtop = top;\n-\t\ttop = &tos[top->link];\n-\t\tif (top->selfpc == selfpc) {\n-\t\t\t/*\n-\t\t\t *\tthere it is.\n-\t\t\t *\tincrement its count\n-\t\t\t *\tmove it to the head of the chain.\n-\t\t\t */\n-\t\t\ttop->count++;\n-\t\t\ttoindex = prevtop->link;\n-\t\t\tprevtop->link = top->link;\n-\t\t\ttop->link = *frompcindex;\n-\t\t\t*frompcindex = toindex;\n-\t\t\tgoto done;\n-\t\t}\n-\n-\t}\n-done:\n-\tprofiling--;\n-\t/* and fall through */\n-out:\n-\treturn;\t\t/* normal return restores saved registers */\n-\n-overflow:\n-\tprofiling++; /* halt further profiling */\n-#   define\tTOLIMIT\t\"mcount: tos overflow\\n\"\n-\twrite(2, TOLIMIT, sizeof(TOLIMIT));\n-\tgoto out;\n-}\n-\n-/*\n- * Control profiling\n- *\tprofiling is what mcount checks to see if\n- *\tall the data structures are ready.\n- */\n-static void\n-moncontrol(int mode)\n-{\n-    if (mode)\n-    {\n-      /* start */\n-      profil((unsigned short *)(sbuf + sizeof(struct phdr)),\n-\t     ssiz - sizeof(struct phdr),\n-\t     (size_t)s_lowpc, s_scale);\n-      \n-      profiling = 0;\n-    } else {\n-      /* stop */\n-      profil((unsigned short *)0, 0, 0, 0);\n-      profiling = 3;\n-    }\n-}"}, {"sha": "4a89530cc5ff120aa2d764dd4690e18c126c2f3a", "filename": "gcc/config/i386/sol2-c1.asm", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-c1.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-c1.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-c1.asm?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,151 +0,0 @@\n-! crt1.s for Solaris 2, x86\n-\n-!   Copyright (C) 1993, 1998, 2008, 2009 Free Software Foundation, Inc.\n-!   Written By Fred Fish, Nov 1992\n-! \n-! This file is free software; you can redistribute it and/or modify it\n-! under the terms of the GNU General Public License as published by the\n-! Free Software Foundation; either version 3, or (at your option) any\n-! later version.\n-! \n-! This file is distributed in the hope that it will be useful, but\n-! WITHOUT ANY WARRANTY; without even the implied warranty of\n-! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-! General Public License for more details.\n-! \n-! Under Section 7 of GPL version 3, you are granted additional\n-! permissions described in the GCC Runtime Library Exception, version\n-! 3.1, as published by the Free Software Foundation.\n-!\n-! You should have received a copy of the GNU General Public License and\n-! a copy of the GCC Runtime Library Exception along with this program;\n-! see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-! <http://www.gnu.org/licenses/>.\n-\n-\n-! This file takes control of the process from the kernel, as specified\n-! in section 3 of the System V Application Binary Interface, Intel386\n-! Processor Supplement.  It has been constructed from information obtained\n-! from the ABI, information obtained from single stepping existing\n-! Solaris executables through their startup code with gdb, and from\n-! information obtained by single stepping executables on other i386 SVR4\n-! implementations.  This file is the first thing linked into any executable.\n-\n-\t.ident\t\"GNU C crt1.s\"\n-\t.weak\t_cleanup\n-\t.weak\t_DYNAMIC\n-\t.text\n-\n-! Start creating the initial frame by pushing a NULL value for the return\n-! address of the initial frame, and mark the end of the stack frame chain\n-! (the innermost stack frame) with a NULL value, per page 3-32 of the ABI.\n-! Initialize the first stack frame pointer in %ebp (the contents of which\n-! are unspecified at process initialization).\n-\n-\t.globl\t_start\n-_start:\n-\tpushl\t$0x0\n-\tpushl\t$0x0\n-\tmovl\t%esp,%ebp\n-\n-! As specified per page 3-32 of the ABI, %edx contains a function \n-! pointer that should be registered with atexit(), for proper\n-! shared object termination.  Just push it onto the stack for now\n-! to preserve it.  We want to register _cleanup() first.\n-\n-\tpushl\t%edx\n-\n-! Check to see if there is an _cleanup() function linked in, and if\n-! so, register it with atexit() as the last thing to be run by\n-! atexit().\n-\n-\tmovl\t$_cleanup,%eax\n-\ttestl\t%eax,%eax\n-\tje\t.L1\n-\tpushl\t$_cleanup\n-\tcall\tatexit\n-\taddl\t$0x4,%esp\n-.L1:\n-\n-! Now check to see if we have an _DYNAMIC table, and if so then\n-! we need to register the function pointer previously in %edx, but\n-! now conveniently saved on the stack as the argument to pass to\n-! atexit().\n-\n-\tmovl\t$_DYNAMIC,%eax\n-\ttestl\t%eax,%eax\n-\tje\t.L2\n-\tcall\tatexit\n-.L2:\n-\n-! Register _fini() with atexit().  We will take care of calling _init()\n-! directly.\n-\n-\tpushl\t$_fini\n-\tcall\tatexit\n-\n-! Compute the address of the environment vector on the stack and load\n-! it into the global variable _environ.  Currently argc is at 8 off\n-! the frame pointer.  Fetch the argument count into %eax, scale by the\n-! size of each arg (4 bytes) and compute the address of the environment\n-! vector which is 16 bytes (the two zero words we pushed, plus argc,\n-! plus the null word terminating the arg vector) further up the stack,\n-! off the frame pointer (whew!).\n-\n-\tmovl\t8(%ebp),%eax\n-\tleal\t16(%ebp,%eax,4),%edx\n-\tmovl\t%edx,_environ\n-\n-! Push the environment vector pointer, the argument vector pointer,\n-! and the argument count on to the stack to set up the arguments\n-! for _init(), _fpstart(), and main().  Note that the environment\n-! vector pointer and the arg count were previously loaded into\n-! %edx and %eax respectively.  The only new value we need to compute\n-! is the argument vector pointer, which is at a fixed address off\n-! the initial frame pointer.\n-\n-!\n-! Make sure the stack is properly aligned.\n-!\n-\tandl $0xfffffff0,%esp\n-\tsubl $4,%esp\n-\t\n-\tpushl\t%edx\n-\tleal\t12(%ebp),%edx\n-\tpushl\t%edx\n-\tpushl\t%eax\n-\n-! Call _init(argc, argv, environ), _fpstart(argc, argv, environ), and\n-! main(argc, argv, environ).\n-\n-\tcall\t_init\n-\tcall\t__fpstart\n-\tcall\tmain\n-\n-! Pop the argc, argv, and environ arguments off the stack, push the\n-! value returned from main(), and call exit().\n-\n-\taddl\t$12,%esp\n-\tpushl\t%eax\n-\tcall\texit\n-\n-! An inline equivalent of _exit, as specified in Figure 3-26 of the ABI.\n-\n-\tpushl\t$0x0\n-\tmovl\t$0x1,%eax\n-\tlcall\t$7,$0\n-\n-! If all else fails, just try a halt!\n-\n-\thlt\n-\t.type\t_start,@function\n-\t.size\t_start,.-_start\n-\n-! A dummy profiling support routine for non-profiling executables,\n-! in case we link in some objects that have been compiled for profiling.\n-\n-\t.weak\t_mcount\n-_mcount:\n-\tret\n-\t.type\t_mcount,@function\n-\t.size\t_mcount,.-_mcount"}, {"sha": "f2ff2025d45f7b774790955b0e73f40405a7a207", "filename": "gcc/config/i386/sol2-ci.asm", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-ci.asm?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,40 +0,0 @@\n-! crti.s for Solaris 2, x86.\n-\n-!   Copyright (C) 1993, 2008, 2009 Free Software Foundation, Inc.\n-!   Written By Fred Fish, Nov 1992\n-! \n-! This file is free software; you can redistribute it and/or modify it\n-! under the terms of the GNU General Public License as published by the\n-! Free Software Foundation; either version 3, or (at your option) any\n-! later version.\n-! \n-! This file is distributed in the hope that it will be useful, but\n-! WITHOUT ANY WARRANTY; without even the implied warranty of\n-! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-! General Public License for more details.\n-! \n-! Under Section 7 of GPL version 3, you are granted additional\n-! permissions described in the GCC Runtime Library Exception, version\n-! 3.1, as published by the Free Software Foundation.\n-!\n-! You should have received a copy of the GNU General Public License and\n-! a copy of the GCC Runtime Library Exception along with this program;\n-! see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-! <http://www.gnu.org/licenses/>.\n-\n-\n-! This file just supplies labeled starting points for the .init and .fini\n-! sections.  It is linked in before the values-Xx.o files and also before\n-! crtbegin.o.\n- \n-\t.ident\t\"GNU C crti.s\"\n-\n-\t.section .init\n-\t.globl\t_init\n-\t.type\t_init,@function\n-_init:\n-\n-\t.section .fini\n-\t.globl\t_fini\n-\t.type\t_fini,@function\n-_fini:"}, {"sha": "217f0409147e835bae62b449b4c5171ad660f489", "filename": "gcc/config/i386/sol2-cn.asm", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-cn.asm?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,35 +0,0 @@\n-! crtn.s for Solaris 2, x86.\n-\n-!   Copyright (C) 1993, 2008, 2009 Free Software Foundation, Inc.\n-!   Written By Fred Fish, Nov 1992\n-! \n-! This file is free software; you can redistribute it and/or modify it\n-! under the terms of the GNU General Public License as published by the\n-! Free Software Foundation; either version 3, or (at your option) any\n-! later version.\n-! \n-! This file is distributed in the hope that it will be useful, but\n-! WITHOUT ANY WARRANTY; without even the implied warranty of\n-! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-! General Public License for more details.\n-! \n-! Under Section 7 of GPL version 3, you are granted additional\n-! permissions described in the GCC Runtime Library Exception, version\n-! 3.1, as published by the Free Software Foundation.\n-!\n-! You should have received a copy of the GNU General Public License and\n-! a copy of the GCC Runtime Library Exception along with this program;\n-! see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-! <http://www.gnu.org/licenses/>.\n-\n-\n-! This file just supplies returns for the .init and .fini sections.  It is\n-! linked in after all other files.\n-\n-\t.ident\t\"GNU C crtn.o\"\n-\n-\t.section .init\n-\tret    $0x0\n-\n-\t.section .fini\n-\tret    $0x0"}, {"sha": "8cb989a9c252080bbb2107d29976ed87eaf4f1fd", "filename": "gcc/config/i386/sol2-gc1.asm", "status": "removed", "additions": 0, "deletions": 155, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-gc1.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Fsol2-gc1.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-gc1.asm?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,155 +0,0 @@\n-! gcrt1.s for Solaris 2, x86\n-\n-!   Copyright (C) 1993, 2008, 2009 Free Software Foundation, Inc.\n-!   Written By Fred Fish, Nov 1992\n-! \n-! This file is free software; you can redistribute it and/or modify it\n-! under the terms of the GNU General Public License as published by the\n-! Free Software Foundation; either version 3, or (at your option) any\n-! later version.\n-! \n-! This file is distributed in the hope that it will be useful, but\n-! WITHOUT ANY WARRANTY; without even the implied warranty of\n-! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-! General Public License for more details.\n-! \n-! Under Section 7 of GPL version 3, you are granted additional\n-! permissions described in the GCC Runtime Library Exception, version\n-! 3.1, as published by the Free Software Foundation.\n-!\n-! You should have received a copy of the GNU General Public License and\n-! a copy of the GCC Runtime Library Exception along with this program;\n-! see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-! <http://www.gnu.org/licenses/>.\n-\n-\n-! This file takes control of the process from the kernel, as specified\n-! in section 3 of the System V Application Binary Interface, Intel386\n-! Processor Supplement.  It has been constructed from information obtained\n-! from the ABI, information obtained from single stepping existing\n-! Solaris executables through their startup code with gdb, and from\n-! information obtained by single stepping executables on other i386 SVR4\n-! implementations.  This file is the first thing linked into any executable.\n-\n-! This is a modified crt1.s by J.W.Hawtin <oolon@ankh.org> 15/8/96, \n-! to allow program profiling, by calling monstartup on entry and _mcleanup \n-! on exit\n-\n-\t.ident\t\"GNU C gcrt1.s\"\n-\t.weak\t_DYNAMIC\n-\t.text\n-\n-! Start creating the initial frame by pushing a NULL value for the return\n-! address of the initial frame, and mark the end of the stack frame chain\n-! (the innermost stack frame) with a NULL value, per page 3-32 of the ABI.\n-! Initialize the first stack frame pointer in %ebp (the contents of which\n-! are unspecified at process initialization).\n-\n-\t.globl\t_start\n-_start:\n-\tpushl\t$0x0\n-\tpushl\t$0x0\n-\tmovl\t%esp,%ebp\n-\n-! As specified per page 3-32 of the ABI, %edx contains a function \n-! pointer that should be registered with atexit(), for proper\n-! shared object termination.  Just push it onto the stack for now\n-! to preserve it.  We want to register _cleanup() first.\n-\n-\tpushl\t%edx\n-\n-! Check to see if there is an _cleanup() function linked in, and if\n-! so, register it with atexit() as the last thing to be run by\n-! atexit().\n-\n-\tmovl\t$_mcleanup,%eax\n-\ttestl\t%eax,%eax\n-\tje\t.L1\n-\tpushl\t$_mcleanup\n-\tcall\tatexit\n-\taddl\t$0x4,%esp\n-.L1:\n-\n-! Now check to see if we have an _DYNAMIC table, and if so then\n-! we need to register the function pointer previously in %edx, but\n-! now conveniently saved on the stack as the argument to pass to\n-! atexit().\n-\n-\tmovl\t$_DYNAMIC,%eax\n-\ttestl\t%eax,%eax\n-\tje\t.L2\n-\tcall\tatexit\n-.L2:\n-\n-! Register _fini() with atexit().  We will take care of calling _init()\n-! directly.\n-\n-\tpushl\t$_fini\n-\tcall\tatexit\n-\n-! Start profiling\n-\n-        pushl %ebp\n-        movl %esp,%ebp\n-        pushl $_etext\n-        pushl $_start\n-        call monstartup\n-        addl $8,%esp\n-\tpopl %ebp\n-\n-! Compute the address of the environment vector on the stack and load\n-! it into the global variable _environ.  Currently argc is at 8 off\n-! the frame pointer.  Fetch the argument count into %eax, scale by the\n-! size of each arg (4 bytes) and compute the address of the environment\n-! vector which is 16 bytes (the two zero words we pushed, plus argc,\n-! plus the null word terminating the arg vector) further up the stack,\n-! off the frame pointer (whew!).\n-\n-\tmovl\t8(%ebp),%eax\n-\tleal\t16(%ebp,%eax,4),%edx\n-\tmovl\t%edx,_environ\n-\n-! Push the environment vector pointer, the argument vector pointer,\n-! and the argument count on to the stack to set up the arguments\n-! for _init(), _fpstart(), and main().  Note that the environment\n-! vector pointer and the arg count were previously loaded into\n-! %edx and %eax respectively.  The only new value we need to compute\n-! is the argument vector pointer, which is at a fixed address off\n-! the initial frame pointer.\n-\n-!\n-! Make sure the stack is properly aligned.\n-!\n-\tandl $0xfffffff0,%esp\n-\tsubl $4,%esp\n-\n-\tpushl\t%edx\n-\tleal\t12(%ebp),%edx\n-\tpushl\t%edx\n-\tpushl\t%eax\n-\n-! Call _init(argc, argv, environ), _fpstart(argc, argv, environ), and\n-! main(argc, argv, environ).\n-\n-\tcall\t_init\n-\tcall\t__fpstart\n-\tcall\tmain\n-\n-! Pop the argc, argv, and environ arguments off the stack, push the\n-! value returned from main(), and call exit().\n-\n-\taddl\t$12,%esp\n-\tpushl\t%eax\n-\tcall\texit\n-\n-! An inline equivalent of _exit, as specified in Figure 3-26 of the ABI.\n-\n-\tpushl\t$0x0\n-\tmovl\t$0x1,%eax\n-\tlcall\t$7,$0\n-\n-! If all else fails, just try a halt!\n-\n-\thlt\n-\t.type\t_start,@function\n-\t.size\t_start,.-_start"}, {"sha": "a468533c1d15d301fedfe2f181ffa0735dffe1c7", "filename": "gcc/config/i386/t-nwld", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-nwld?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -45,6 +45,3 @@ nwld.o: $(srcdir)/config/i386/nwld.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n \n \n s-crt0: $(srcdir)/unwind-dw2-fde.h\n-\n-# To keep DRIVER_DEFINES correct.\n-SHLIB_LINK = dummy"}, {"sha": "07d7e5f6a792da405888eb36f56fd6d927da1068", "filename": "gcc/config/i386/t-rtems", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fi386%2Ft-rtems", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fi386%2Ft-rtems", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-rtems?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,28 @@\n+# Copyright (C) 1999, 2001, 2002, 2005, 2007, 2011\n+# Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+#\n+\n+MULTILIB_OPTIONS = mtune=i486/mtune=pentium/mtune=pentiumpro \\\n+msoft-float\n+MULTILIB_DIRNAMES= m486 mpentium mpentiumpro soft-float\n+MULTILIB_MATCHES = msoft-float=mno-m80387\n+MULTILIB_MATCHES += mtune?pentium=mtune?k6 mtune?pentiumpro=mtune?mathlon\n+MULTILIB_EXCEPTIONS = \\\n+mtune=pentium/*msoft-float* \\\n+mtune=pentiumpro/*msoft-float*"}, {"sha": "47dfc7e1132066d7581d5ea1b6a52c7c894cb6fe", "filename": "gcc/config/i386/t-rtems-i386", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Ft-rtems-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fi386%2Ft-rtems-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-rtems-i386?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,69 +0,0 @@\n-# Copyright (C) 1999, 2001, 2002, 2005, 2007 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-#\n-#\n-# This file was based on t-sol2 - x68 Solaris implementation. Actually,\n-# the source code to create crti.o anf crtn.o are exactly the same \n-# as the ones for Solaris. Later, we might want to have a RTEMS's \n-# version of these files.\n-#\n-\n-$(T)crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s\n-\t$(GCC_FOR_TARGET) -c -o $(T)crti.o crti.s\n-$(T)crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-cn.asm >crtn.s\n-\t$(GCC_FOR_TARGET) -c -o $(T)crtn.o crtn.s\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-LIB2FUNCS_EXTRA = xp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#ifdef __LITTLE_ENDIAN__' > dp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >>dp-bit.c\n-\techo '#endif'           >> dp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\techo '#ifdef __LITTLE_ENDIAN__' >> fp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >>fp-bit.c\n-\techo '#endif'           >> fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-xp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> xp-bit.c\n-\n-MULTILIB_OPTIONS = mtune=i486/mtune=pentium/mtune=pentiumpro \\\n-msoft-float\n-MULTILIB_DIRNAMES= m486 mpentium mpentiumpro soft-float\n-MULTILIB_MATCHES = msoft-float=mno-m80387\n-MULTILIB_MATCHES += mtune?pentium=mtune?k6 mtune?pentiumpro=mtune?mathlon\n-MULTILIB_EXCEPTIONS = \\\n-mtune=pentium/*msoft-float* \\\n-mtune=pentiumpro/*msoft-float*\n-\n-EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}, {"sha": "c86870934e5693efd3d2b39f006b0fe940fb43b2", "filename": "gcc/config/i386/t-sol2-10", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fi386%2Ft-sol2-10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fi386%2Ft-sol2-10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sol2-10?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2004 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -19,11 +19,3 @@\n MULTILIB_OPTIONS = m32/m64\n MULTILIB_DIRNAMES = 32 amd64\n MULTILIB_OSDIRNAMES = . amd64\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n-\n-# GCC contains i386 assembler sources for some of the startfiles\n-# which aren't appropriate for amd64.  Just use the installed\n-# versions of: crt1.o crti.o crtn.o gcrt1.o\n-EXTRA_MULTILIB_PARTS=gmon.o crtbegin.o crtend.o"}, {"sha": "2612bac89f663d988378a07cd107970fecbd2cc5", "filename": "gcc/config/sparc/t-crtin", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fsparc%2Ft-crtin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fsparc%2Ft-crtin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-crtin?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,6 +0,0 @@\n-EXTRA_PARTS += crti.o crtn.o\n-\n-$(T)crti.o: $(srcdir)/config/sparc/sol2-ci.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/sparc/sol2-ci.asm\n-$(T)crtn.o: $(srcdir)/config/sparc/sol2-cn.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/sparc/sol2-cn.asm"}, {"sha": "b7f665b1b7b2c2800b04f1b9eea03b864dcf982b", "filename": "gcc/config/sparc/t-sol2", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fsparc%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Fsparc%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sol2?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,39 +0,0 @@\n-# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001,\n-# 2002 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# gmon build rule:\n-$(T)gmon.o:\t$(srcdir)/config/sparc/gmon-sol2.c $(GCC_PASSES) \\\n-  $(TCONFIG_H) tsystem.h coretypes.h $(TM_H) stmp-int-hdrs\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) \\\n-\t\t-c $(srcdir)/config/sparc/gmon-sol2.c -o $(T)gmon.o\n-\n-# Assemble startup files.\n-$(T)crt1.o: $(srcdir)/config/sparc/sol2-c1.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crt1.o -x assembler-with-cpp $(srcdir)/config/sparc/sol2-c1.asm\n-$(T)gcrt1.o: $(srcdir)/config/sparc/sol2-c1.asm $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -DGCRT1 -o $(T)gcrt1.o -x assembler-with-cpp $(srcdir)/config/sparc/sol2-c1.asm\n-\n-# We need to use -fPIC when we are using gcc to compile the routines in\n-# crtstuff.c.  This is only really needed when we are going to use gcc/g++\n-# to produce a shared library, but since we don't know ahead of time when\n-# we will be doing that, we just always use -fPIC when compiling the\n-# routines in crtstuff.c.\n-\n-CRTSTUFF_T_CFLAGS = -fPIC\n-TARGET_LIBGCC2_CFLAGS = -fPIC"}, {"sha": "ec7e4eba6fd94ce91a8dc5f17bd4dd8408273777", "filename": "gcc/config/sparc/t-sol2-64", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fsparc%2Ft-sol2-64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Fsparc%2Ft-sol2-64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sol2-64?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -2,6 +2,3 @@ MULTILIB_OPTIONS = m32/m64\n MULTILIB_DIRNAMES = sparcv8plus sparcv9\n MULTILIB_MATCHES =\n MULTILIB_OSDIRNAMES = . sparcv9\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}, {"sha": "b957b353296289c8ef3046e9afc2684a0e36da5f", "filename": "gcc/config/t-slibgcc-darwin", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/gcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-darwin?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,2 +0,0 @@\n-# To keep DRIVER_DEFINES correct.\n-SHLIB_LINK = dummy"}, {"sha": "e68ce5eb24a40a67378966624b0ed42f09958708", "filename": "gcc/config/t-slibgcc-dummy", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Ft-slibgcc-dummy", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Ft-slibgcc-dummy", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-dummy?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,3 @@\n+# SHLIB_LINK must be non-empty so ENABLE_SHARED_LIBGCC is defined correctly\n+# in DRIVER_DEFINES if libgcc configuration has been moved to toplevel.\n+SHLIB_LINK = dummy"}, {"sha": "4f1c67e919b0ee28a8f48f0b279f1be6a32d4f2c", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -29,6 +29,9 @@ sol2.o: $(srcdir)/config/sol2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2.c\n \n+# This is required by gcc/ada/gcc-interface/Makefile.in.\n+TARGET_LIBGCC2_CFLAGS = -fPIC\n+\n # Use unwind-dw2-fde-glibc.c.  Unless linker support and dl_iterate_phdr\n # are present, automatically falls back to unwind-dw2-fde.c.\n LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde-glibc.c \\"}, {"sha": "1a44c76f23c3c4e7eda04bf19614b453460c37b0", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,3 +1,55 @@\n+2011-06-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in (cpu_type): Define.\n+\t* config.host (i[34567]86-*-rtems*): Handle it.\n+\t(i[34567]86-*-solaris2*): Move body ...\n+\t(*-*-solaris2*): ... here.\n+\tNew case, generalize.\n+\t(sparc-*-elf*): Handle it.\n+\t(sparc-*-linux*, sparc64-*-linux*): Replace sparc/t-crtfm by t-crtfm.\n+\t(sparc-*-rtems*, sparc64-*-rtems*); Handle it.\n+\t(sparc64-*-solaris2*, sparcv9-*-solaris2*, sparc-*-solaris2*):\n+\tFold into ...\n+\t(sparc*-*-solaris2*): ... this.\n+\tNew case.\n+\t(sparc64-*-elf*): Handle it.\n+\t* config/gmon-sol2.c: Move from ../gcc/config/sparc.\n+\tMerge ../gcc/config/i386/gmon-sol2.c.\n+\t* config/i386/sol2-c1.S: Move from ../gcc/config/i386/sol2-c1.asm.\n+\tUse C comments.\n+\tMerge ../gcc/config/i386/sol2-gc1.asm.\n+\t* config/i386/sol2-ci.S: Move from ../gcc/config/i386/sol2-ci.asm.\n+\tUse C comments.\n+\t* config/i386/sol2-cn.S: Move from ../gcc/config/i386/sol2-cn.asm.\n+\tUse C comments.\n+\t* config/i386/t-crtfm (crtfastmath.o): Use $<.\n+\t* config/i386/t-crtstuff: New file.\n+\t* config/i386/t-softfp: New file.\n+\t* config/i386/t-sol2 ($(T)gmon.o, $(T)gcrt1.o, $(T)crt1.o),\n+\t$(T)crti.o, $(T)crtn.o): Remove.\n+\t(gcrt1.o): New rule.\n+\t(TARGET_LIBGCC2_CFLAGS): Remove.\n+\t* config/sparc/sol2-c1.S: Move from ../gcc/config/sparc/sol2-c1.asm.\n+\t* config/sparc/sol2-ci.S: Move from ../gcc/config/sparc/sol2-ci.asm.\n+\t* config/sparc/sol2-cn.S: Move from ../gcc/config/sparc/sol2-cn.asm.\n+\t* config/sparc/t-sol2: New file.\n+\t* config/sparc/t-crtfm: Move to ...\n+\t* config/t-crtfm: ... this.\n+\tUse $(cpu_type), $<.\n+\t* config/t-crtin: New file.\n+\t* config/sparc/t-softfp: New file.\n+\t* config/sparc/t-softmul: New file.\n+\t* config/t-rtems: New file.\n+\t* config/t-slibgcc: New file.\n+\t* config/t-slibgcc-elf-ver: New file.\n+\t* config/t-slibgcc-gld: New file.\n+\t* config/t-slibgcc-sld: New file.\n+\t* config/t-sol2: New file.\n+\t* configure.ac: Include ../config/lib-ld.m4.\n+\tCall AC_LIB_PROG_LD_GNU.\n+\tSubstitute cpu_type.\n+\t* configure: Regenerate.\n+\n 2011-05-27  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR bootstrap/49173"}, {"sha": "4a075ff8f291ad7f6d410824ca333a11f8d89bab", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,6 +1,6 @@\n # Makefile.in\n \n-# Copyright (C) 2005, 2006, 2009, 2010 Free Software Foundation\n+# Copyright (C) 2005, 2006, 2009, 2010, 2011 Free Software Foundation\n #\n # This file is part of GCC.\n #\n@@ -35,6 +35,7 @@ shlib_slibdir = @slibdir@\n \n SHELL = @SHELL@\n \n+cpu_type = @cpu_type@\n enable_shared = @enable_shared@\n decimal_float = @decimal_float@\n enable_decimal_float = @enable_decimal_float@"}, {"sha": "8b1113b9067dbd12d428a933d4496b65b6c1e23f", "filename": "libgcc/config.host", "status": "modified", "additions": 46, "deletions": 17, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,6 +1,6 @@\n # libgcc host-specific configuration file.\n # Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n-# 2008, 2009, 2010 Free Software Foundation, Inc.\n+# 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -168,6 +168,31 @@ case ${host} in\n   ;;\n *-*-rtems*)\n   ;;\n+*-*-solaris2*)\n+  tmake_file=\"$tmake_file t-sol2 t-slibgcc t-slibgcc-elf-ver\"\n+  if test $with_gnu_ld = yes; then\n+    tmake_file=\"$tmake_file t-slibgcc-gld\"\n+  else\n+    tmake_file=\"$tmake_file t-slibgcc-sld\"\n+  fi\n+  # Add cpu-specific t-sol2 after t-slibgcc-* so it can augment SHLIB_MAPFILES.\n+  tmake_file=\"$tmake_file $cpu_type/t-sol2\"\n+  extra_parts=\"gmon.o crtbegin.o crtend.o\"\n+  case ${host} in\n+    i?86-*-solaris2.1[0-9]*)\n+      # Solaris 10+/x86 provides crt1.o, crti.o, crtn.o, and gcrt1.o as\n+      # part of the base system.\n+      ;;\n+    sparc*-*-solaris2.1[0-9]*)\n+      # Solaris 10+/SPARC lacks crt1.o and gcrt1.o.\n+      extra_parts=\"$extra_parts crt1.o gcrt1.o\"\n+      ;;\n+    *)\n+      tmake_file=\"$tmake_file t-crtin\"\n+      extra_parts=\"$extra_parts crt1.o crti.o crtn.o gcrt1.o\"\n+      ;;\n+  esac\n+  ;;\n *-*-vxworks*)\n   ;;\n *-*-elf)\n@@ -309,19 +334,10 @@ i[3456x]86-*-netware*)\n i[34567]86-*-nto-qnx*)\n \t;;\n i[34567]86-*-rtems*)\n+\textra_parts=\"crtbegin.o crtend.o crti.o crtn.o\"\n+\ttmake_file=\"${tmake_file} t-crtin i386/t-softfp i386/t-crtstuff t-rtems\"\n \t;;\n i[34567]86-*-solaris2*)\n-\ttmake_file=\"${tmake_file} i386/t-sol2\"\n-\tcase ${host} in\n-\t*-*-solaris2.1[0-9]*)\n-\t\t# Solaris 2.10 provides crt1.o, crti.o, crtn.o, and gcrt1.o as\n-\t\t# part of the base system.\n-\t\textra_parts=\"gmon.o crtbegin.o crtend.o\"\n-\t\t;;\n-\t*)\n-\t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n-\t\t;;\n-\tesac\n \t;;\n i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n \t;;\n@@ -519,26 +535,39 @@ sparc-*-netbsdelf*)\n sparc64-*-openbsd*)\n \t;;\n sparc-*-elf*)\n+\tcase ${host} in\n+\t*-leon[3-9]*)\n+\t\t;;\n+\t*)\n+\t  \ttmake_file=\"sparc/t-softmul\"\n+\t  \t;;\n+\tesac\n+\ttmake_file=\"${tmake_file} sparc/t-softfp t-crtin t-crtfm\"\n+\textra_parts=\"crtbegin.o crtend.o crti.o crtn.o crtfastmath.o\"\n \t;;\n sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} sparc/t-crtfm\"\n+\ttmake_file=\"${tmake_file} t-crtfm\"\n \t;;\n sparc-*-rtems* | sparc64-*-rtems* )\n+\ttmake_file=\"sparc/t-elf t-crtin t-crtfm t-rtems\"\n+\textra_parts=\"crtbegin.o crtend.o crti.o crtn.o crtfastmath.o\"\n \t;;\n-sparc64-*-solaris2* | sparcv9-*-solaris2*)\n-\t;;\n-sparc-*-solaris2*)\n+sparc*-*-solaris2*)\n+\ttmake_file=\"$tmake_file t-crtfm\"\n+\textra_parts=\"$extra_parts crtfastmath.o\"\n \t;;\n sparc64-*-elf*)\n+\ttmake_file=\"${tmake_file} t-crtin t-crtfm\"\n+\textra_parts=\"crtbegin.o crtend.o crti.o crtn.o crtfastmath.o\"\n \t;;\n sparc-wrs-vxworks)\n \t;;\n sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \t;;\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} sparc/t-crtfm\"\n+\ttmake_file=\"${tmake_file} t-crtfm\"\n \t;;\n sparc64-*-netbsd*)\n \t;;"}, {"sha": "614a1126b1eb39b412bd88fc10cf30ad466cc87c", "filename": "libgcc/config/gmon-sol2.c", "status": "renamed", "additions": 132, "deletions": 16, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fgmon-sol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fgmon-sol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgmon-sol2.c?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -28,32 +28,67 @@\n  * SUCH DAMAGE.\n  */\n \n+/* FIXME: Check comment.  */\n /* Mangled into a form that works on SPARC Solaris 2 by Mark Eichin\n  * for Cygnus Support, July 1992.\n+ *\n+ * This is a modified gmon.c by J.W.Hawtin <oolon@ankh.org>,\n+ * 14/8/96 based on the original gmon.c in GCC and the hacked version\n+ * solaris 2 sparc version (config/sparc/gmon-sol.c) by Mark Eichin. To do\n+ * process profiling on solaris 2.X X86\n+ *\n+ * It must be used in conjunction with sol2-gc1.asm, which is used to start\n+ * and stop process monitoring.\n+ *\n+ * Differences.\n+ *\n+ * On Solaris 2 _mcount is called by library functions not mcount, so support\n+ * has been added for both.\n+ *\n+ * Also the prototype for profil() is different\n+ *\n+ * Solaris 2 does not seem to have char *minbrk whcih allows the setting of\n+ * the minimum SBRK region so this code has been removed and lets pray malloc\n+ * does not mess it up.\n+ *\n+ * Notes\n+ *\n+ * This code could easily be integrated with the original gmon.c and perhaps\n+ * should be.\n  */\n-\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include <fcntl.h> /* for creat() */\n \n-#if 0\n-#include \"sparc/gmon.h\"\n-#else\n+#ifdef DEBUG\n+#include <stdio.h>\n+#endif\n+\n+static void moncontrol (int);\n+extern void monstartup (char *, char *);\n+extern void _mcleanup (void);\n+\n struct phdr {\n   char *lpc;\n   char *hpc;\n   int ncnt;\n };\n+\n+\n #define HISTFRACTION 2\n #define HISTCOUNTER unsigned short\n #define HASHFRACTION 1\n #define ARCDENSITY 2\n #define MINARCS 50\n+#define BASEADDRESS 0x8000000 /* On Solaris 2 X86 all executables start here\n+\t\t\t\t and not at 0 */ \n+\n struct tostruct {\n   char *selfpc;\n   long count;\n   unsigned short link;\n };\n+\n struct rawarc {\n     unsigned long       raw_frompc;\n     unsigned long       raw_selfpc;\n@@ -62,10 +97,14 @@ struct rawarc {\n #define ROUNDDOWN(x,y)  (((x)/(y))*(y))\n #define ROUNDUP(x,y)    ((((x)+(y)-1)/(y))*(y))\n \n-#endif\n-\n /* extern mcount() asm (\"mcount\"); */\n /*extern*/ char *minbrk /* asm (\"minbrk\") */;\n+typedef __SIZE_TYPE__ size_t;\n+typedef __PTRDIFF_TYPE__ intptr_t;\n+\n+extern int errno;\n+\n+extern void *sbrk (intptr_t);\n \n     /*\n      *\tfroms is actually a bunch of unsigned shorts indexing tos\n@@ -76,7 +115,7 @@ static struct tostruct\t*tos = 0;\n static long\t\ttolimit = 0;\n static char\t\t*s_lowpc = 0;\n static char\t\t*s_highpc = 0;\n-static unsigned long\ts_textsize = 0;\n+static size_t\t\ts_textsize = 0;\n \n static int\tssiz;\n static char\t*sbuf;\n@@ -92,23 +131,23 @@ extern void _mcleanup (void);\n \n void monstartup(char *lowpc, char *highpc)\n {\n-    int\t\t\tmonsize;\n+    size_t\t\tmonsize;\n     char\t\t*buffer;\n-    register int\to;\n+    register size_t\to;\n \n \t/*\n \t *\tround lowpc and highpc to multiples of the density we're using\n \t *\tso the rest of the scaling (here and in gprof) stays in ints.\n \t */\n     lowpc = (char *)\n-\t    ROUNDDOWN((unsigned long)lowpc, HISTFRACTION*sizeof(HISTCOUNTER));\n+\t    ROUNDDOWN((size_t)lowpc, HISTFRACTION*sizeof(HISTCOUNTER));\n     s_lowpc = lowpc;\n     highpc = (char *)\n-\t    ROUNDUP((unsigned long)highpc, HISTFRACTION*sizeof(HISTCOUNTER));\n+\t    ROUNDUP((size_t)highpc, HISTFRACTION*sizeof(HISTCOUNTER));\n     s_highpc = highpc;\n     s_textsize = highpc - lowpc;\n     monsize = (s_textsize / HISTFRACTION) + sizeof(struct phdr);\n-    buffer = sbrk( monsize );\n+    buffer = (char *) sbrk( monsize );\n     if ( buffer == (char *) -1 ) {\n \twrite( 2 , MSG , sizeof(MSG) );\n \treturn;\n@@ -206,8 +245,9 @@ _mcleanup(void)\n \treturn;\n     }\n #   ifdef DEBUG\n-\tfprintf( stderr , \"[mcleanup] sbuf 0x%x ssiz %d\\n\" , sbuf , ssiz );\n+\tfprintf( stderr , \"[mcleanup] sbuf %#x ssiz %d\\n\" , sbuf , ssiz );\n #   endif /* DEBUG */\n+\n     write( fd , sbuf , ssiz );\n     endfrom = s_textsize / (HASHFRACTION * sizeof(*froms));\n     for ( fromindex = 0 ; fromindex < endfrom ; fromindex++ ) {\n@@ -218,7 +258,7 @@ _mcleanup(void)\n \tfor (toindex=froms[fromindex]; toindex!=0; toindex=tos[toindex].link) {\n #\t    ifdef DEBUG\n \t\tfprintf( stderr ,\n-\t\t\t\"[mcleanup] frompc 0x%x selfpc 0x%x count %d\\n\" ,\n+\t\t\t\"[mcleanup] frompc %#x selfpc %#x count %d\\n\" ,\n \t\t\tfrompc , tos[toindex].selfpc , tos[toindex].count );\n #\t    endif /* DEBUG */\n \t    rawarc.raw_frompc = (unsigned long) frompc;\n@@ -230,6 +270,7 @@ _mcleanup(void)\n     close( fd );\n }\n \n+#ifdef __sparc__\n /*\n  * The SPARC stack frame is only held together by the frame pointers\n  * in the register windows. According to the SVR4 SPARC ABI\n@@ -273,25 +314,99 @@ static void internal_mcount (char *, unsigned short *) __attribute__ ((used));\n asm(\".global _mcount; _mcount: mov %i7,%o1; mov %o7,%o0;b,a internal_mcount\");\n /* This is for compatibility with old versions of gcc which used mcount.  */\n asm(\".global mcount; mcount: mov %i7,%o1; mov %o7,%o0;b,a internal_mcount\");\n+#elif defined __x86_64__\n+extern void internal_mcount (char *, unsigned short *);\n \n-static void internal_mcount(char *selfpc, unsigned short *frompcindex)\n+/* See GLIBC for additional information about this technique.  */\n+asm(\".globl _mcount\\n\" \n+    \"\\t.type\\t_mcount, @function\\n\"\n+    \"_mcount:\\n\"\n+    /* The compiler calls _mcount after the prologue, and does not\n+       save any of the registers.  Therefore we must preserve all\n+       seven registers which may contain function arguments.  */\n+    \"\\tsubq\\t$0x38,%rsp\\n\"\n+    \"\\tmovq\\t%rax,(%rsp)\\n\"\n+    \"\\tmovq\\t%rcx,0x08(%rsp)\\n\"\n+    \"\\tmovq\\t%rdx,0x10(%rsp)\\n\"\n+    \"\\tmovq\\t%rsi,0x18(%rsp)\\n\"\n+    \"\\tmovq\\t%rdi,0x20(%rsp)\\n\"\n+    \"\\tmovq\\t%r8,0x28(%rsp)\\n\"\n+    \"\\tmovq\\t%r9,0x30(%rsp)\\n\"\n+    /* Get SELFPC (pushed by the call to this function) and\n+       FROMPCINDEX (via the frame pointer.  */\n+    \"\\tmovq\\t0x38(%rsp),%rdi\\n\"\n+    \"\\tmovq\\t0x8(%rbp),%rsi\\n\"\n+    \"\\tcall\\tinternal_mcount\\n\"\n+    /* Restore the saved registers.  */\n+    \"\\tmovq\\t0x30(%rsp),%r9\\n\"\n+    \"\\tmovq\\t0x28(%rsp),%r8\\n\"\n+    \"\\tmovq\\t0x20(%rsp),%rdi\\n\"\n+    \"\\tmovq\\t0x18(%rsp),%rsi\\n\"\n+    \"\\tmovq\\t0x10(%rsp),%rdx\\n\"\n+    \"\\tmovq\\t0x08(%rsp),%rcx\\n\"\n+    \"\\tmovq\\t(%rsp),%rax\\n\"\n+    \"\\taddq\\t$0x38,%rsp\\n\"\n+    \"\\tretq\\n\"\n+    );\n+#else\n+extern void internal_mcount (void);\n+\n+ /* Solaris 2 libraries use _mcount.  */\n+asm(\".globl _mcount; _mcount: jmp internal_mcount\");\n+ /* This is for compatibility with old versions of gcc which used mcount.  */\n+asm(\".globl mcount; mcount: jmp internal_mcount\");\n+#endif\n+\n+#ifdef __sparc__\n+static\n+#endif\n+void\n+internal_mcount (\n+#if defined __sparc__ || defined __x86_64__\n+\t\t char *selfpc,\n+\t\t unsigned short *frompcindex\n+#else\n+\t\t void\n+#endif\n+\t\t )\n {\n+#if !defined __sparc__ && !defined __x86_64__\n+\tregister char\t\t\t*selfpc;\n+\tregister unsigned short\t\t*frompcindex;\n+#endif\n \tregister struct tostruct\t*top;\n \tregister struct tostruct\t*prevtop;\n \tregister long\t\t\ttoindex;\n \tstatic char already_setup;\n \n+#if !defined __sparc__ && !defined __x86_64__\n \t/*\n \t *\tfind the return address for mcount,\n \t *\tand the return address for mcount's caller.\n \t */\n \n+\t/* selfpc = pc pushed by mcount call.\n+\t   This identifies the function that was just entered.  */\n+\tselfpc = (void *) __builtin_return_address (0);\n+\t/* frompcindex = pc in preceding frame.\n+\t   This identifies the caller of the function just entered.  */\n+\tfrompcindex = (void *) __builtin_return_address (1);\n+#endif\n+\n \tif(!already_setup) {\n           extern char etext[];\n+#ifdef __sparc__\n \t  extern char _start[];\n \t  extern char _init[];\n+#endif\n \t  already_setup = 1;\n+#if defined __sparc__\n \t  monstartup(_start < _init ? _start : _init, etext);\n+#elif defined __x86_64__\n+\t  monstartup(0, etext);\n+#else\n+\t  monstartup((char*)0x08040000, etext);\n+#endif\n #ifdef USE_ONEXIT\n \t  on_exit(_mcleanup, 0);\n #else\n@@ -410,7 +525,8 @@ static void moncontrol(int mode)\n \t/* start */\n \tprofil((unsigned short *)(sbuf + sizeof(struct phdr)),\n \t       ssiz - sizeof(struct phdr),\n-\t       (long)s_lowpc, s_scale);\n+\t       (size_t)s_lowpc, s_scale);\n+\n \tprofiling = 0;\n     } else {\n \t/* stop */", "previous_filename": "gcc/config/sparc/gmon-sol2.c"}, {"sha": "b2e473f5b9c98ba87b9374b5a4d7707d5010cd88", "filename": "libgcc/config/i386/sol2-c1.S", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Fsol2-c1.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Fsol2-c1.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsol2-c1.S?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,173 @@\n+/* crt1.s for Solaris 2, x86\n+\n+   Copyright (C) 1993, 1998, 2008, 2009, 2011 Free Software Foundation, Inc.\n+   Written By Fred Fish, Nov 1992\n+\n+This file is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 3, or (at your option) any\n+later version.\n+\n+This file is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+\n+/* This file takes control of the process from the kernel, as specified\n+   in section 3 of the System V Application Binary Interface, Intel386\n+   Processor Supplement.  It has been constructed from information obtained\n+   from the ABI, information obtained from single stepping existing\n+   Solaris executables through their startup code with gdb, and from\n+   information obtained by single stepping executables on other i386 SVR4\n+   implementations.  This file is the first thing linked into any\n+   executable.  */\n+\n+#ifndef GCRT1\n+\t.ident\t\"GNU C crt1.s\"\n+#define CLEANUP\t_cleanup\n+#else\n+/* This is a modified crt1.s by J.W.Hawtin <oolon@ankh.org> 15/8/96, \n+   to allow program profiling, by calling monstartup on entry and _mcleanup \n+   on exit.  */\n+\t.ident\t\"GNU C gcrt1.s\"\n+#define CLEANUP _mcleanup\n+#endif\n+\t.weak\t_cleanup\n+\t.weak\t_DYNAMIC\n+\t.text\n+\n+/* Start creating the initial frame by pushing a NULL value for the return\n+   address of the initial frame, and mark the end of the stack frame chain\n+   (the innermost stack frame) with a NULL value, per page 3-32 of the ABI.\n+   Initialize the first stack frame pointer in %ebp (the contents of which\n+   are unspecified at process initialization).  */\n+\n+\t.globl\t_start\n+_start:\n+\tpushl\t$0x0\n+\tpushl\t$0x0\n+\tmovl\t%esp,%ebp\n+\n+/* As specified per page 3-32 of the ABI, %edx contains a function \n+   pointer that should be registered with atexit(), for proper\n+   shared object termination.  Just push it onto the stack for now\n+   to preserve it.  We want to register _cleanup() first.  */\n+\n+\tpushl\t%edx\n+\n+/* Check to see if there is an _cleanup() function linked in, and if\n+   so, register it with atexit() as the last thing to be run by\n+   atexit().  */\n+\n+\tmovl\t$CLEANUP,%eax\n+\ttestl\t%eax,%eax\n+\tje\t.L1\n+\tpushl\t$CLEANUP\n+\tcall\tatexit\n+\taddl\t$0x4,%esp\n+.L1:\n+\n+/* Now check to see if we have an _DYNAMIC table, and if so then\n+   we need to register the function pointer previously in %edx, but\n+   now conveniently saved on the stack as the argument to pass to\n+   atexit().  */\n+\n+\tmovl\t$_DYNAMIC,%eax\n+\ttestl\t%eax,%eax\n+\tje\t.L2\n+\tcall\tatexit\n+.L2:\n+\n+/* Register _fini() with atexit().  We will take care of calling _init()\n+   directly.  */\n+\n+\tpushl\t$_fini\n+\tcall\tatexit\n+\n+#ifdef GCRT1\n+/* Start profiling.  */\n+\n+        pushl %ebp\n+        movl %esp,%ebp\n+        pushl $_etext\n+        pushl $_start\n+        call monstartup\n+        addl $8,%esp\n+\tpopl %ebp\n+#endif\n+\n+/* Compute the address of the environment vector on the stack and load\n+   it into the global variable _environ.  Currently argc is at 8 off\n+   the frame pointer.  Fetch the argument count into %eax, scale by the\n+   size of each arg (4 bytes) and compute the address of the environment\n+   vector which is 16 bytes (the two zero words we pushed, plus argc,\n+   plus the null word terminating the arg vector) further up the stack,\n+   off the frame pointer (whew!).  */\n+\n+\tmovl\t8(%ebp),%eax\n+\tleal\t16(%ebp,%eax,4),%edx\n+\tmovl\t%edx,_environ\n+\n+/* Push the environment vector pointer, the argument vector pointer,\n+   and the argument count on to the stack to set up the arguments\n+   for _init(), _fpstart(), and main().  Note that the environment\n+   vector pointer and the arg count were previously loaded into\n+   %edx and %eax respectively.  The only new value we need to compute\n+   is the argument vector pointer, which is at a fixed address off\n+   the initial frame pointer.  */\n+\n+/* Make sure the stack is properly aligned.  */\n+\tandl $0xfffffff0,%esp\n+\tsubl $4,%esp\n+\n+\tpushl\t%edx\n+\tleal\t12(%ebp),%edx\n+\tpushl\t%edx\n+\tpushl\t%eax\n+\n+/* Call _init(argc, argv, environ), _fpstart(argc, argv, environ), and\n+   main(argc, argv, environ).  */\n+\n+\tcall\t_init\n+\tcall\t__fpstart\n+\tcall\tmain\n+\n+/* Pop the argc, argv, and environ arguments off the stack, push the\n+   value returned from main(), and call exit().  */\n+\n+\taddl\t$12,%esp\n+\tpushl\t%eax\n+\tcall\texit\n+\n+/* An inline equivalent of _exit, as specified in Figure 3-26 of the ABI.  */\n+\n+\tpushl\t$0x0\n+\tmovl\t$0x1,%eax\n+\tlcall\t$7,$0\n+\n+/* If all else fails, just try a halt!  */\n+\n+\thlt\n+\t.type\t_start,@function\n+\t.size\t_start,.-_start\n+\n+#ifndef GCRT1\n+/* A dummy profiling support routine for non-profiling executables,\n+   in case we link in some objects that have been compiled for profiling.  */\n+\n+\t.weak\t_mcount\n+_mcount:\n+\tret\n+\t.type\t_mcount,@function\n+\t.size\t_mcount,.-_mcount\n+#endif"}, {"sha": "61e1436f56068802e7d4479db6817ac09f59f772", "filename": "libgcc/config/i386/sol2-ci.S", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Fsol2-ci.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Fsol2-ci.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsol2-ci.S?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,40 @@\n+/* crti.s for Solaris 2, x86.\n+\n+   Copyright (C) 1993, 2008, 2009 Free Software Foundation, Inc.\n+   Written By Fred Fish, Nov 1992\n+ \n+This file is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 3, or (at your option) any\n+later version.\n+\n+This file is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+\n+/* This file just supplies labeled starting points for the .init and .fini\n+   sections.  It is linked in before the values-Xx.o files and also before\n+   crtbegin.o.  */\n+ \n+\t.ident\t\"GNU C crti.s\"\n+\n+\t.section .init\n+\t.globl\t_init\n+\t.type\t_init,@function\n+_init:\n+\n+\t.section .fini\n+\t.globl\t_fini\n+\t.type\t_fini,@function\n+_fini:"}, {"sha": "993675d2341e14c41fe5867489e2934d0341fe47", "filename": "libgcc/config/i386/sol2-cn.S", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Fsol2-cn.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Fsol2-cn.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsol2-cn.S?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,35 @@\n+/* crtn.s for Solaris 2, x86.\n+\n+   Copyright (C) 1993, 2008, 2009 Free Software Foundation, Inc.\n+   Written By Fred Fish, Nov 1992\n+ \n+This file is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 3, or (at your option) any\n+later version.\n+\n+This file is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+\n+/* This file just supplies returns for the .init and .fini sections.  It is\n+   linked in after all other files.  */\n+\n+\t.ident\t\"GNU C crtn.o\"\n+\n+\t.section .init\n+\tret    $0x0\n+\n+\t.section .fini\n+\tret    $0x0"}, {"sha": "f71f99a7123cab69293db40d20e340a76cfb53df", "filename": "libgcc/config/i386/t-crtfm", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-crtfm?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,5 +1,4 @@\n # This is an endfile, Use -minline-all-stringops to ensure\n # that __builtin_memset doesn't refer to the lib function memset().\n crtfastmath.o: $(gcc_srcdir)/config/i386/crtfastmath.c\n-\t$(gcc_compile) -msse -minline-all-stringops -c \\\n-\t$(gcc_srcdir)/config/i386/crtfastmath.c\n+\t$(gcc_compile) -msse -minline-all-stringops -c $<"}, {"sha": "c14dd9411ae436d4e977f64795411539a78fa363", "filename": "libgcc/config/i386/t-crtstuff", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Ft-crtstuff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Ft-crtstuff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-crtstuff?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,7 @@\n+# The pushl in CTOR initialization interferes with frame pointer elimination.\n+# crtend*.o cannot be compiled without -fno-asynchronous-unwind-tables,\n+# because then __FRAME_END__ might not be the last thing in .eh_frame\n+# section.  -fno-asynchronous-unwind-tables is off by default for i386\n+# and is on by default for x86-64.  We turn it off for both i386 and\n+# x86-64.\n+CRTSTUFF_T_CFLAGS += -fno-omit-frame-pointer -fno-asynchronous-unwind-tables"}, {"sha": "1102146a5899115e907f636f75df0f672cd62373", "filename": "libgcc/config/i386/t-sol2", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fi386%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-sol2?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,25 +1,3 @@\n-# gmon build rule:\n-$(T)gmon.o:\t$(gcc_srcdir)/config/i386/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(CFLAGS) \\\n-\t\t-c $(gcc_srcdir)/config/i386/gmon-sol2.c -o $(T)gmon.o\n-\n-# Assemble startup files.\n-# Apparently Sun believes that assembler files don't need comments, because no\n-# single ASCII character is valid (tried them all).  So we manually strip out\n-# the comments with sed.  This bug may only be in the Early Access releases.\n-$(T)gcrt1.o: $(gcc_srcdir)/config/i386/sol2-gc1.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-gc1.asm >gcrt1.s\n-\t$(GCC_FOR_TARGET) $(CFLAGS) -c -o $(T)gcrt1.o gcrt1.s\n-$(T)crt1.o: $(gcc_srcdir)/config/i386/sol2-c1.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-c1.asm >crt1.s\n-\t$(GCC_FOR_TARGET) $(CFLAGS) -c -o $(T)crt1.o crt1.s\n-$(T)crti.o: $(gcc_srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-ci.asm >crti.s\n-\t$(GCC_FOR_TARGET) $(CFLAGS) -c -o $(T)crti.o crti.s\n-$(T)crtn.o: $(gcc_srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(gcc_srcdir)/config/i386/sol2-cn.asm >crtn.s\n-\t$(GCC_FOR_TARGET) $(CFLAGS) -c -o $(T)crtn.o crtn.s\n-\n # We need to use -fPIC when we are using gcc to compile the routines in\n # crtstuff.c.  This is only really needed when we are going to use gcc/g++\n # to produce a shared library, but since we don't know ahead of time when\n@@ -29,9 +7,7 @@ $(T)crtn.o: $(gcc_srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n # We must also enable optimization to avoid having any code appear after\n # the call & alignment statement, but before we switch back to the\n # .text section.\n-\n CRTSTUFF_T_CFLAGS = -fPIC -O2\n-TARGET_LIBGCC2_CFLAGS = -fPIC\n \n # Add support for the introduction of 128-bit long double.\n SHLIB_MAPFILES += $(srcdir)/config/i386/libgcc-sol2.ver"}, {"sha": "63aa748e8796c4bbb27c595ce8d6475360f0f52e", "filename": "libgcc/config/sparc/sol2-c1.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Fsol2-c1.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Fsol2-c1.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-c1.S?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "previous_filename": "gcc/config/sparc/sol2-c1.asm"}, {"sha": "8825f79583489dba5a2a22edbc5d1f94586af566", "filename": "libgcc/config/sparc/sol2-ci.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Fsol2-ci.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Fsol2-ci.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-ci.S?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "previous_filename": "gcc/config/sparc/sol2-ci.asm"}, {"sha": "b92f3cf08d679d7e6f56130008b7cec45af3348c", "filename": "libgcc/config/sparc/sol2-cn.S", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Fsol2-cn.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Fsol2-cn.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-cn.S?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "previous_filename": "gcc/config/sparc/sol2-cn.asm"}, {"sha": "d6d616f1713ca8f01c82d6c0ffe2ef30e2ea33e7", "filename": "libgcc/config/sparc/t-crtfm", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4fc506085489152bce27da53f172c4681ae450/libgcc%2Fconfig%2Fsparc%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4fc506085489152bce27da53f172c4681ae450/libgcc%2Fconfig%2Fsparc%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-crtfm?ref=ce4fc506085489152bce27da53f172c4681ae450", "patch": "@@ -1,2 +0,0 @@\n-crtfastmath.o: $(gcc_srcdir)/config/sparc/crtfastmath.c\n-\t$(gcc_compile) -c $(gcc_srcdir)/config/sparc/crtfastmath.c"}, {"sha": "94dfcfae0a17573aefb1e87feacfe1050425d247", "filename": "libgcc/config/sparc/t-softfp", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Ft-softfp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Ft-softfp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-softfp?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,29 @@\n+# Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+$(gcc_objdir)/dp-bit.c: $(gcc_srcdir)/config/fp-bit.c\n+\tcat $<\t\t\t> $@\n+\n+$(gcc_objdir)/fp-bit.c: $(gcc_srcdir)/config/fp-bit.c\n+\techo '#define FLOAT'\t> $@\n+\tcat $<\t\t\t>> $@"}, {"sha": "49faae47c534e2b27de5f1383e29777305cdb206", "filename": "libgcc/config/sparc/t-softmul", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Ft-softmul", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Ft-softmul", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-softmul?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,2 @@\n+LIB1ASMSRC = sparc/lb1spc.asm\n+LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3"}, {"sha": "372522bd0e42e4994b5bea8ae62980b78276aada", "filename": "libgcc/config/sparc/t-sol2", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Fsparc%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-sol2?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,6 @@\n+# We need to use -fPIC when we are using gcc to compile the routines in\n+# crtstuff.c.  This is only really needed when we are going to use gcc/g++\n+# to produce a shared library, but since we don't know ahead of time when\n+# we will be doing that, we just always use -fPIC when compiling the\n+# routines in crtstuff.c.\n+CRTSTUFF_T_CFLAGS = -fPIC"}, {"sha": "6b9d84cf768a6f881244afe6068b1dd43bb17ebe", "filename": "libgcc/config/t-crtfm", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-crtfm?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,2 @@\n+crtfastmath.o: $(gcc_srcdir)/config/$(cpu_type)/crtfastmath.c\n+\t$(gcc_compile) -c $<"}, {"sha": "b30e0d52e2f6ff323d0a785ae91a6594978cad0c", "filename": "libgcc/config/t-crtin", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-crtin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-crtin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-crtin?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,4 @@\n+crti.o: $(srcdir)/config/$(cpu_type)/sol2-ci.S\n+\t$(crt_compile) -c $<\n+crtn.o: $(srcdir)/config/$(cpu_type)/sol2-cn.S\n+\t$(crt_compile) -c $<"}, {"sha": "85e931e60f6e5d896a06d01733141b4b53118625", "filename": "libgcc/config/t-rtems", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-rtems", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-rtems", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-rtems?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,4 @@\n+# If we are building next to newlib, this will let us find the RTEMS\n+# limits.h when building libgcc2.  Otherwise, newlib must be installed\n+# first.\n+HOST_LIBGCC2_CFLAGS = -I$(srcdir)/../newlib/libc/sys/rtems/include"}, {"sha": "0b5cc4bfc50de14cd965c6be10b1454e4df7d283", "filename": "libgcc/config/t-slibgcc", "status": "renamed", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2011\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -16,35 +17,35 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Build a shared libgcc library with the Solaris linker.\n+# Build a shared libgcc library.\n \n SHLIB_EXT = .so\n SHLIB_SOLINK = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_base_name@.so.1\n+SHLIB_SOVERSION = 1\n+SHLIB_SONAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n SHLIB_DIR = @multilib_dir@\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n+SHLIB_LC = -lc\n+SHLIB_MAKE_SOLINK = $(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n+SHLIB_INSTALL_SOLINK = $(LN_S) $(SHLIB_SONAME) \\\n+\t$(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n \n-SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,-h,$(SHLIB_SONAME) -Wl,-z,text -Wl,-z,defs \\\n-\t-Wl,-M,$(SHLIB_MAP) -o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp \\\n-\t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n+SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n+\t$(SHLIB_LDFLAGS) \\\n+\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n+\t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n \trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n \tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n \t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n \tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n-\t$(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n-# $(slibdir) double quoted to protect it from expansion while building\n-# libgcc.mk.  We want this delayed until actual install time.\n+\t$(SHLIB_MAKE_SOLINK)\n SHLIB_INSTALL = \\\n-\t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n+\t$(mkinstalldirs) $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n \t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n-\t$(LN_S) $(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n-SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n-SHLIB_MAPFILES = $$(libgcc_objdir)/libgcc-std.ver\n+\t  $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n+\trm -f $(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n+\t$(SHLIB_INSTALL_SOLINK)", "previous_filename": "gcc/config/t-slibgcc-sld"}, {"sha": "2616d31cae56d9df85d1993d84ebf87d0b31f877", "filename": "libgcc/config/t-slibgcc-elf-ver", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-elf-ver?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,4 @@\n+# Build a shared libgcc library for ELF with symbol versioning.\n+\n+SHLIB_MKMAP = $(gcc_srcdir)/mkmap-symver.awk\n+SHLIB_MAPFILES = libgcc-std.ver"}, {"sha": "7e77e0a0b2707be2af1a2ab36ad824df066b1e25", "filename": "libgcc/config/t-slibgcc-gld", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc-gld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc-gld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-gld?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,5 @@\n+# Build a shared libgcc library for ELF with symbol versioning\n+# with the GNU linker.\n+\n+SHLIB_LDFLAGS = -Wl,--soname=$(SHLIB_SONAME) \\\n+\t-Wl,--version-script=$(SHLIB_MAP)"}, {"sha": "178700047cc770625c2bdfb96f42c37fc867b265", "filename": "libgcc/config/t-slibgcc-sld", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc-sld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-slibgcc-sld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-sld?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,5 @@\n+# Build a shared libgcc library for ELF with symbol versioning\n+# with the Solaris linker.\n+\n+SHLIB_LDFLAGS = -Wl,-h,$(SHLIB_SONAME) -Wl,-z,text -Wl,-z,defs \\\n+\t-Wl,-M,$(SHLIB_MAP)"}, {"sha": "2adcb13a82032ade1fb42ceb2b54f81d8d7a619e", "filename": "libgcc/config/t-sol2", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-sol2?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -0,0 +1,34 @@\n+# Copyright (C) 2004, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Use unwind-dw2-fde-glibc.c.  Unless linker support and dl_iterate_phdr\n+# are present, automatically falls back to unwind-dw2-fde.c.\n+LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde-glibc.c \\\n+  $(srcdir)/unwind-sjlj.c $(srcdir)/unwind-c.c\n+\n+# gmon build rule:\n+gmon.o:\t$(srcdir)/config/gmon-sol2.c\n+\t$(gcc_compile) -c $<\n+\n+# Assemble startup files.\n+crt1.o: $(srcdir)/config/$(cpu_type)/sol2-c1.S\n+\t$(crt_compile) -c $<\n+gcrt1.o: $(srcdir)/config/$(cpu_type)/sol2-c1.S\n+\t$(crt_compile) -c -DGCRT1 $<\n+\n+HOST_LIBGCC2_CFLAGS = -fPIC"}, {"sha": "5acee3a63b17422f263a421a1ed777deb642d719", "filename": "libgcc/configure", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -555,6 +555,7 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n asm_hidden_op\n extra_parts\n+cpu_type\n tmake_file\n set_use_emutls\n set_have_cc_tls\n@@ -3742,6 +3743,23 @@ $as_echo \"$libgcc_cv_fixed_point\" >&6; }\n fixed_point=$libgcc_cv_fixed_point\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\n+$as_echo_n \"checking if the linker ($LD) is GNU ld... \" >&6; }\n+if test \"${acl_cv_prog_gnu_ld+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  # I'd rather use --version here, but apparently some GNU ld's only accept -v.\n+if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then\n+  acl_cv_prog_gnu_ld=yes\n+else\n+  acl_cv_prog_gnu_ld=no\n+fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acl_cv_prog_gnu_ld\" >&5\n+$as_echo \"$acl_cv_prog_gnu_ld\" >&6; }\n+with_gnu_ld=$acl_cv_prog_gnu_ld\n+\n+\n # Check for assembler CFI support.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether assembler supports CFI directives\" >&5\n $as_echo_n \"checking whether assembler supports CFI directives... \" >&6; }\n@@ -3938,6 +3956,7 @@ tmake_file=\"${tmake_file_}\"\n \n \n \n+\n # We need multilib support.\n ac_config_files=\"$ac_config_files Makefile\"\n "}, {"sha": "a81e20943bf242e3457201eb720446ae7faaf81a", "filename": "libgcc/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca24c5ad7371a5b1947ccd01d4b163d666179669/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=ca24c5ad7371a5b1947ccd01d4b163d666179669", "patch": "@@ -4,6 +4,7 @@ sinclude(../config/enable.m4)\n sinclude(../config/tls.m4)\n sinclude(../config/acx.m4)\n sinclude(../config/no-executables.m4)\n+sinclude(../config/lib-ld.m4)\n sinclude(../config/override.m4)\n sinclude(../config/dfp.m4)\n \n@@ -166,6 +167,8 @@ AC_CACHE_CHECK([whether fixed-point is supported], [libgcc_cv_fixed_point],\n fixed_point=$libgcc_cv_fixed_point\n AC_SUBST(fixed_point)\n \n+AC_LIB_PROG_LD_GNU\n+\n # Check for assembler CFI support.\n AC_CACHE_CHECK([whether assembler supports CFI directives], [libgcc_cv_cfi],\n \t       [AC_COMPILE_IFELSE(\n@@ -268,6 +271,7 @@ tmake_file=\"${tmake_file_}\"\n AC_SUBST(tmake_file)\n \n # Substitute configuration variables\n+AC_SUBST(cpu_type)\n AC_SUBST(extra_parts)\n AC_SUBST(asm_hidden_op)\n "}]}