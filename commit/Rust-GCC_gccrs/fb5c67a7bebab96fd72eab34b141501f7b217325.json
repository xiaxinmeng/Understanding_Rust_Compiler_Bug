{"sha": "fb5c67a7bebab96fd72eab34b141501f7b217325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1YzY3YTdiZWJhYjk2ZmQ3MmVhYjM0YjE0MTUwMWY3YjIxNzMyNQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-09-10T18:56:10Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-09-10T18:56:10Z"}, "message": "rs6000.c (print_operand): Use fputs instead of fprintf for register names.\n\n\t* gcc/config/rs6000/rs6000.c (print_operand): Use fputs instead\n\tof fprintf for register names.\n\nFrom-SVN: r87314", "tree": {"sha": "55f1e4c347a0131e9c036e0ca1581b68415d9486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f1e4c347a0131e9c036e0ca1581b68415d9486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5c67a7bebab96fd72eab34b141501f7b217325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c67a7bebab96fd72eab34b141501f7b217325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5c67a7bebab96fd72eab34b141501f7b217325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c67a7bebab96fd72eab34b141501f7b217325/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f11bc8b45cd3beac4fa60f5bad0ee43dde266af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f11bc8b45cd3beac4fa60f5bad0ee43dde266af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f11bc8b45cd3beac4fa60f5bad0ee43dde266af"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "e0a2cae8a21ae84abbb238964ff45de5d2c30fc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c67a7bebab96fd72eab34b141501f7b217325/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c67a7bebab96fd72eab34b141501f7b217325/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb5c67a7bebab96fd72eab34b141501f7b217325", "patch": "@@ -1,5 +1,8 @@\n 2004-09-10  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* gcc/config/rs6000/rs6000.c (print_operand): Use fputs instead\n+\tof fprintf for register names.\n+\t\n \t* output.h (unlikely_section_label): Delete declaration.\n \t(unlikely_text_section_name): Likewise.\n \t* varasm.c (unlikely_section_label_printed): Make static."}, {"sha": "dede50f41bc23990c6acc2e0de61ccf9a3599996", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5c67a7bebab96fd72eab34b141501f7b217325/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5c67a7bebab96fd72eab34b141501f7b217325/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=fb5c67a7bebab96fd72eab34b141501f7b217325", "patch": "@@ -10062,7 +10062,7 @@ print_operand (FILE *file, rtx x, int code)\n       /* Write second word of DImode or DFmode reference.  Works on register\n \t or non-indexed memory only.  */\n       if (GET_CODE (x) == REG)\n-\tfprintf (file, \"%s\", reg_names[REGNO (x) + 1]);\n+\tfputs (reg_names[REGNO (x) + 1], file);\n       else if (GET_CODE (x) == MEM)\n \t{\n \t  /* Handle possible auto-increment.  Since it is pre-increment and\n@@ -10133,7 +10133,7 @@ print_operand (FILE *file, rtx x, int code)\n \t  || REGNO (XEXP (x, 0)) >= 32)\n \toutput_operand_lossage (\"invalid %%P value\");\n       else\n-\tfprintf (file, \"%s\", reg_names[REGNO (XEXP (x, 0))]);\n+\tfputs (reg_names[REGNO (XEXP (x, 0))], file);\n       return;\n \n     case 'q':\n@@ -10368,7 +10368,7 @@ print_operand (FILE *file, rtx x, int code)\n     case 'Y':\n       /* Like 'L', for third word of TImode  */\n       if (GET_CODE (x) == REG)\n-\tfprintf (file, \"%s\", reg_names[REGNO (x) + 2]);\n+\tfputs (reg_names[REGNO (x) + 2], file);\n       else if (GET_CODE (x) == MEM)\n \t{\n \t  if (GET_CODE (XEXP (x, 0)) == PRE_INC\n@@ -10415,7 +10415,7 @@ print_operand (FILE *file, rtx x, int code)\n     case 'Z':\n       /* Like 'L', for last word of TImode.  */\n       if (GET_CODE (x) == REG)\n-\tfprintf (file, \"%s\", reg_names[REGNO (x) + 3]);\n+\tfputs (reg_names[REGNO (x) + 3], file);\n       else if (GET_CODE (x) == MEM)\n \t{\n \t  if (GET_CODE (XEXP (x, 0)) == PRE_INC"}]}