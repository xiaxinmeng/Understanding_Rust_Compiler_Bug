{"sha": "7c791b139c5143cc357c0c48c14af5a962197503", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M3OTFiMTM5YzUxNDNjYzM1N2MwYzQ4YzE0YWY1YTk2MjE5NzUwMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-08T02:43:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-08T02:43:55Z"}, "message": "(eliminate_regs_in_insn): Make another copy of all the RTL if we\nchanged something and we aren't permanently replacing.\n\nFrom-SVN: r2845", "tree": {"sha": "f02a2e58e54c9983eab4d5c447113e0bef1d5989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f02a2e58e54c9983eab4d5c447113e0bef1d5989"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c791b139c5143cc357c0c48c14af5a962197503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c791b139c5143cc357c0c48c14af5a962197503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c791b139c5143cc357c0c48c14af5a962197503", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c791b139c5143cc357c0c48c14af5a962197503/comments", "author": null, "committer": null, "parents": [{"sha": "df6c0bdc911b40b90dd9d29a7cb2cebcfe9fc5dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6c0bdc911b40b90dd9d29a7cb2cebcfe9fc5dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df6c0bdc911b40b90dd9d29a7cb2cebcfe9fc5dc"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "7458018b81cf996c991382a2900e2186e94778bd", "filename": "gcc/reload1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c791b139c5143cc357c0c48c14af5a962197503/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c791b139c5143cc357c0c48c14af5a962197503/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=7c791b139c5143cc357c0c48c14af5a962197503", "patch": "@@ -2996,6 +2996,14 @@ eliminate_regs_in_insn (insn, replace)\n   new_body = eliminate_regs (old_body, 0, replace ? insn : NULL_RTX);\n   if (new_body != old_body)\n     {\n+      /* If we aren't replacing things permanently and we changed something,\n+\t make another copy to ensure that all the RTL is new.  Otherwise\n+\t things can go wrong if find_reload swaps commutative operands\n+\t and one is inside RTL that has been copied while the other is not. */\n+\n+      if (! replace)\n+\tnew_body = copy_rtx (new_body);\n+\n       /* If we had a move insn but now we don't, rerecognize it.  */\n       if ((GET_CODE (old_body) == SET && GET_CODE (SET_SRC (old_body)) == REG\n \t   && (GET_CODE (new_body) != SET"}]}