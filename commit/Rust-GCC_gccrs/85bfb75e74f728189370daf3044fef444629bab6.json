{"sha": "85bfb75e74f728189370daf3044fef444629bab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODViZmI3NWU3NGY3MjgxODkzNzBkYWYzMDQ0ZmVmNDQ0NjI5YmFiNg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-04-06T12:18:12Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-04-06T12:18:12Z"}, "message": "configure.ac (build_tools): Remove build-byacc.\n\n\t* configure.ac (build_tools): Remove build-byacc.\n\t(host_libs): Remove mmalloc.\n\t(host_tools): Remove byacc make patch prms send-pr ash bash bzip2\n\tautoconf automake libtool diff rcs fileutils shellutils time\n\ttextutils wdiff find uudecode hello tar gzip indent recode release\n\tsed perl gawk findutils gettext zip.\n\t(libgcj): Remove target-qthreads.\n\t(target_tools): Remove target-examples target-gperf.\n\t(YACC): Don't handle building byacc.\n\t* configure: Regenerate.\n\t* Makefile.def (ash, autoconf, automake, bash, byacc, bzip2, diff,\n\tdosutils, examples, fileutils, find, findutils, gawk, gettext,\n\tgnuserv, gperf, gzip, hello, indent, libtool, make, mmalloc,\n\tpatch, perl, prms, qthreads, rcs, recode, release, sed, send-pr,\n\tshellutils, tar, textutils, time, uudecode, wdiff, zip): Don't\n\thandle building components.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r172042", "tree": {"sha": "caf8d34b64a17b5088e296b951a83369212d9edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf8d34b64a17b5088e296b951a83369212d9edc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85bfb75e74f728189370daf3044fef444629bab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85bfb75e74f728189370daf3044fef444629bab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85bfb75e74f728189370daf3044fef444629bab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85bfb75e74f728189370daf3044fef444629bab6/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe84628425a9b784688e5e7fbbd081acd6261e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe84628425a9b784688e5e7fbbd081acd6261e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe84628425a9b784688e5e7fbbd081acd6261e90"}], "stats": {"total": 52674, "additions": 17513, "deletions": 35161}, "files": [{"sha": "37eb913d8d61f7f2b565bfdc3154911846e9522f", "filename": "ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85bfb75e74f728189370daf3044fef444629bab6/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85bfb75e74f728189370daf3044fef444629bab6/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=85bfb75e74f728189370daf3044fef444629bab6", "patch": "@@ -1,3 +1,23 @@\n+2011-04-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac (build_tools): Remove build-byacc.\n+\t(host_libs): Remove mmalloc.\n+\t(host_tools): Remove byacc make patch prms send-pr ash bash bzip2\n+\tautoconf automake libtool diff rcs fileutils shellutils time\n+\ttextutils wdiff find uudecode hello tar gzip indent recode release\n+\tsed perl gawk findutils gettext zip.\n+\t(libgcj): Remove target-qthreads.\n+\t(target_tools): Remove target-examples target-gperf.\n+\t(YACC): Don't handle building byacc.\n+\t* configure: Regenerate.\n+\t* Makefile.def (ash, autoconf, automake, bash, byacc, bzip2, diff,\n+\tdosutils, examples, fileutils, find, findutils, gawk, gettext,\n+\tgnuserv, gperf, gzip, hello, indent, libtool, make, mmalloc,\n+\tpatch, perl, prms, qthreads, rcs, recode, release, sed, send-pr,\n+\tshellutils, tar, textutils, time, uudecode, wdiff, zip): Don't\n+\thandle building components.\n+\t* Makefile.in: Regenerate.\n+\n 2011-04-05  Sterling Augustine <augustine.sterling@gmail.com>\n \n \t* MAINTAINERS: Update my email address as Xtensa maintainer."}, {"sha": "f499180de0d6024d69c8dff08545a336e5a24f33", "filename": "Makefile.def", "status": "modified", "additions": 1, "deletions": 78, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85bfb75e74f728189370daf3044fef444629bab6/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85bfb75e74f728189370daf3044fef444629bab6/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=85bfb75e74f728189370daf3044fef444629bab6", "patch": "@@ -4,7 +4,7 @@ AutoGen definitions Makefile.tpl;\n // Makefile.in is generated from Makefile.tpl by 'autogen Makefile.def'.\n // This file was originally written by Nathanael Nerode.\n //\n-//   Copyright 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+//   Copyright 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n //   Free Software Foundation\n //\n // This file is free software; you can redistribute it and/or modify\n@@ -27,39 +27,25 @@ AutoGen definitions Makefile.tpl;\n \n build_modules= { module= libiberty; };\n build_modules= { module= bison; };\n-build_modules= { module= byacc; };\n build_modules= { module= flex; };\n build_modules= { module= m4; };\n build_modules= { module= texinfo; };\n build_modules= { module= fixincludes; };\n \n-host_modules= { module= ash; };\n-host_modules= { module= autoconf; };\n-host_modules= { module= automake; };\n-host_modules= { module= bash; };\n host_modules= { module= bfd; lib_path=.libs; bootstrap=true; };\n host_modules= { module= opcodes; lib_path=.libs; bootstrap=true; };\n host_modules= { module= binutils; bootstrap=true; };\n host_modules= { module= bison; no_check_cross= true; };\n-host_modules= { module= byacc; no_check_cross= true; };\n-host_modules= { module= bzip2; };\n host_modules= { module= cgen; };\n host_modules= { module= dejagnu; };\n-host_modules= { module= diff; };\n-host_modules= { module= dosutils; no_check= true; };\n host_modules= { module= etc; };\n host_modules= { module= fastjar; no_check_cross= true; };\n-host_modules= { module= fileutils; };\n-host_modules= { module= findutils; };\n-host_modules= { module= find; };\n host_modules= { module= fixincludes;\n \t\tmissing= TAGS; };\n host_modules= { module= flex; no_check_cross= true; };\n host_modules= { module= gas; bootstrap=true; };\n host_modules= { module= gcc; bootstrap=true; \n \t\textra_make_flags=\"$(EXTRA_GCC_FLAGS)\"; };\n-host_modules= { module= gawk; };\n-host_modules= { module= gettext; };\n host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared';\n \t\tno_install= true;\n@@ -86,12 +72,8 @@ host_modules= { module= cloog; lib_path=.libs; bootstrap=true;\n host_modules= { module= libelf; lib_path=.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared';\n \t\tno_install= true; };\n-host_modules= { module= gnuserv; };\n host_modules= { module= gold; bootstrap=true; };\n host_modules= { module= gprof; };\n-host_modules= { module= gzip; };\n-host_modules= { module= hello; };\n-host_modules= { module= indent; };\n host_modules= { module= intl; bootstrap=true; };\n host_modules= { module= tcl;\n                 missing=mostlyclean; };\n@@ -110,29 +92,11 @@ host_modules= { module= libiconv;\n \t\tmissing= install-pdf;\n \t\tmissing= install-html;\n \t\tmissing= install-info; };\n-host_modules= { module= libtool; };\n host_modules= { module= m4; };\n-host_modules= { module= make; };\n-host_modules= { module= mmalloc; no_check=true; };\n-host_modules= { module= patch; };\n-host_modules= { module= perl; };\n-host_modules= { module= prms; };\n-host_modules= { module= rcs; };\n host_modules= { module= readline; };\n-host_modules= { module= release; no_install= true; no_check= true; };\n-host_modules= { module= recode; };\n-host_modules= { module= sed; };\n-host_modules= { module= send-pr; };\n-host_modules= { module= shellutils; };\n host_modules= { module= sid; };\n host_modules= { module= sim; };\n-host_modules= { module= tar; };\n host_modules= { module= texinfo; no_install= true; };\n-host_modules= { module= textutils; };\n-host_modules= { module= time; };\n-host_modules= { module= uudecode; };\n-host_modules= { module= wdiff; };\n-host_modules= { module= zip; no_check_cross=true; };\n host_modules= { module= zlib; no_install=true; no_check=true; bootstrap=true; };\n host_modules= { module= gdb; };\n host_modules= { module= expect; };\n@@ -168,13 +132,10 @@ target_modules = { module= libtermcap; no_check=true;\n target_modules = { module= winsup; };\n target_modules = { module= libgloss; no_check=true; };\n target_modules = { module= libiberty; };\n-target_modules = { module= gperf; };\n-target_modules = { module= examples; no_check=true; no_install=true; };\n target_modules = { module= libffi; };\n target_modules = { module= libjava; raw_cxx=true; };\n target_modules = { module= zlib; };\n target_modules = { module= boehm-gc; };\n-target_modules = { module= qthreads; };\n target_modules = { module= rda; };\n target_modules = { module= libada; };\n target_modules = { module= libgomp; bootstrap= true; lib_path=.libs; };\n@@ -311,10 +272,8 @@ flags_to_pass = { flag= LEAN ; };\n \n // Build modules\n dependencies = { module=all-build-bison; on=all-build-texinfo; };\n-dependencies = { module=all-build-byacc; on=all-build-texinfo; };\n dependencies = { module=all-build-flex; on=all-build-texinfo; };\n dependencies = { module=all-build-flex; on=all-build-bison; };\n-dependencies = { module=all-build-flex; on=all-build-byacc; };\n dependencies = { module=all-build-flex; on=all-build-m4; };\n dependencies = { module=all-build-libiberty; on=all-build-texinfo; };\n dependencies = { module=all-build-m4; on=all-build-texinfo; };\n@@ -337,7 +296,6 @@ dependencies = { module=all-gcc; on=all-ppl; };\n dependencies = { module=all-gcc; on=all-cloog; };\n dependencies = { module=all-gcc; on=all-build-texinfo; };\n dependencies = { module=all-gcc; on=all-build-bison; };\n-dependencies = { module=all-gcc; on=all-build-byacc; };\n dependencies = { module=all-gcc; on=all-build-flex; };\n dependencies = { module=all-gcc; on=all-build-libiberty; };\n dependencies = { module=all-gcc; on=all-build-fixincludes; };\n@@ -386,7 +344,6 @@ dependencies = { module=all-gdb; on=all-libiconv; };\n dependencies = { module=all-gdb; on=all-opcodes; };\n dependencies = { module=all-gdb; on=all-readline; };\n dependencies = { module=all-gdb; on=all-build-bison; };\n-dependencies = { module=all-gdb; on=all-build-byacc; };\n dependencies = { module=all-gdb; on=all-sim; };\n dependencies = { module=all-gdb; on=all-libdecnumber; };\n dependencies = { module=all-gdb; on=all-libtermcap; };\n@@ -411,7 +368,6 @@ dependencies = { module=all-binutils; on=all-opcodes; };\n dependencies = { module=all-binutils; on=all-bfd; };\n dependencies = { module=all-binutils; on=all-build-flex; };\n dependencies = { module=all-binutils; on=all-build-bison; };\n-dependencies = { module=all-binutils; on=all-build-byacc; };\n dependencies = { module=all-binutils; on=all-intl; };\n \n // We put install-opcodes before install-binutils because the installed\n@@ -439,7 +395,6 @@ dependencies = { module=all-ld; on=all-libiberty; };\n dependencies = { module=all-ld; on=all-bfd; };\n dependencies = { module=all-ld; on=all-opcodes; };\n dependencies = { module=all-ld; on=all-build-bison; };\n-dependencies = { module=all-ld; on=all-build-byacc; };\n dependencies = { module=all-ld; on=all-build-flex; };\n dependencies = { module=all-ld; on=all-intl; };\n dependencies = { module=install-ld; on=install-gold; };\n@@ -449,7 +404,6 @@ dependencies = { module=all-gold; on=all-libiberty; };\n dependencies = { module=all-gold; on=all-intl; };\n dependencies = { module=all-gold; on=all-bfd; };\n dependencies = { module=all-gold; on=all-build-bison; };\n-dependencies = { module=all-gold; on=all-build-byacc; };\n dependencies = { module=check-gold; on=all-binutils; };\n dependencies = { module=check-gold; on=all-gas; };\n \n@@ -503,44 +457,18 @@ dependencies = { module=all-fastjar; on=all-build-texinfo; };\n dependencies = { module=all-fastjar; on=all-libiberty; };\n \n // Warning, these are not well tested.\n-dependencies = { module=all-autoconf; on=all-m4; };\n-dependencies = { module=all-autoconf; on=all-build-texinfo; };\n-dependencies = { module=all-automake; on=all-m4; };\n-dependencies = { module=all-automake; on=all-build-texinfo; };\n-dependencies = { module=all-automake; on=all-autoconf; };\n dependencies = { module=all-bison; on=all-intl; };\n dependencies = { module=all-bison; on=all-build-texinfo; };\n-dependencies = { module=all-diff; on=all-intl; };\n-dependencies = { module=all-diff; on=all-build-texinfo; };\n-dependencies = { module=all-fileutils; on=all-intl; };\n-dependencies = { module=all-fileutils; on=all-build-texinfo; };\n dependencies = { module=all-flex; on=all-build-bison; };\n-dependencies = { module=all-flex; on=all-build-byacc; };\n dependencies = { module=all-flex; on=all-intl; };\n dependencies = { module=all-flex; on=all-m4; };\n dependencies = { module=all-flex; on=all-build-texinfo; };\n-dependencies = { module=all-gzip; on=all-intl; };\n-dependencies = { module=all-gzip; on=all-zlib; };\n-dependencies = { module=all-gzip; on=all-build-texinfo; };\n-dependencies = { module=all-hello; on=all-intl; };\n-dependencies = { module=all-hello; on=all-build-texinfo; };\n dependencies = { module=all-m4; on=all-intl; };\n dependencies = { module=all-m4; on=all-build-texinfo; };\n-dependencies = { module=all-make; on=all-intl; };\n-dependencies = { module=all-make; on=all-build-texinfo; };\n-dependencies = { module=all-patch; on=all-build-texinfo; };\n-dependencies = { module=all-make; on=all-build-texinfo; };\n-dependencies = { module=all-prms; on=all-libiberty; };\n-dependencies = { module=all-recode; on=all-build-texinfo; };\n-dependencies = { module=all-sed; on=all-build-texinfo; };\n-dependencies = { module=all-send-pr; on=all-prms; };\n-dependencies = { module=all-tar; on=all-build-texinfo; };\n-dependencies = { module=all-uudecode; on=all-build-texinfo; };\n \n // Target modules.  These can also have dependencies on the language\n // environment (e.g. on libstdc++).  By default target modules depend\n // on libgcc and newlib/libgloss.\n-lang_env_dependencies = { module=gperf; cxx=true; };\n lang_env_dependencies = { module=libjava; cxx=true; };\n lang_env_dependencies = { module=newlib; no_c=true; };\n lang_env_dependencies = { module=libgloss; no_c=true; };\n@@ -550,7 +478,6 @@ lang_env_dependencies = { module=libgcc; no_gcc=true; no_c=true; };\n // a dependency on libgcc for native targets to configure.\n lang_env_dependencies = { module=libiberty; no_c=true; };\n \n-dependencies = { module=configure-target-boehm-gc; on=configure-target-qthreads; };\n dependencies = { module=configure-target-boehm-gc; on=all-target-libstdc++-v3; };\n dependencies = { module=configure-target-fastjar; on=configure-target-zlib; };\n dependencies = { module=all-target-fastjar; on=all-target-zlib; };\n@@ -560,12 +487,10 @@ dependencies = { module=configure-target-libgo; on=all-target-libstdc++-v3; };\n dependencies = { module=all-target-libgo; on=all-target-libffi; };\n dependencies = { module=configure-target-libjava; on=configure-target-zlib; };\n dependencies = { module=configure-target-libjava; on=configure-target-boehm-gc; };\n-dependencies = { module=configure-target-libjava; on=configure-target-qthreads; };\n dependencies = { module=configure-target-libjava; on=configure-target-libffi; };\n dependencies = { module=all-target-libjava; on=all-fastjar; };\n dependencies = { module=all-target-libjava; on=all-target-zlib; };\n dependencies = { module=all-target-libjava; on=all-target-boehm-gc; };\n-dependencies = { module=all-target-libjava; on=all-target-qthreads; };\n dependencies = { module=all-target-libjava; on=all-target-libffi; };\n dependencies = { module=configure-target-libobjc; on=configure-target-boehm-gc; };\n dependencies = { module=all-target-libobjc; on=all-target-libiberty; };\n@@ -578,11 +503,9 @@ dependencies = { module=configure-target-libstdc++-v3; on=configure-target-libgo\n dependencies = { module=all-target-libstdc++-v3; on=configure-target-libgomp; };\n \n // Target modules in the 'src' repository.\n-lang_env_dependencies = { module=examples; };\n lang_env_dependencies = { module=libtermcap; };\n lang_env_dependencies = { module=rda; };\n lang_env_dependencies = { module=winsup; };\n-lang_env_dependencies = { module=qthreads; };\n \n dependencies = { module=all-target-libgloss; on=all-target-newlib; };\n dependencies = { module=all-target-winsup; on=all-target-libiberty; };"}, {"sha": "5cc03562a076c3856a67c231ad5718b95f265663", "filename": "Makefile.in", "status": "modified", "additions": 17484, "deletions": 35071, "changes": 52555, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85bfb75e74f728189370daf3044fef444629bab6/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85bfb75e74f728189370daf3044fef444629bab6/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=85bfb75e74f728189370daf3044fef444629bab6"}, {"sha": "8a146e2bfd010468401dacacdd52ab2fd7a21bed", "filename": "configure", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85bfb75e74f728189370daf3044fef444629bab6/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85bfb75e74f728189370daf3044fef444629bab6/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=85bfb75e74f728189370daf3044fef444629bab6", "patch": "@@ -2646,24 +2646,23 @@ extra_host_args=\n build_libs=\"build-libiberty\"\n \n # these tools are built for the build environment\n-build_tools=\"build-texinfo build-byacc build-flex build-bison build-m4 build-fixincludes\"\n+build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #\n-host_libs=\"intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libelf libiconv\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libelf libiconv\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n # know that we are building the simulator.\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools\"\n \n # libgcj represents the runtime libraries only used by gcj.\n libgcj=\"target-libffi \\\n \ttarget-zlib \\\n-\ttarget-qthreads \\\n \ttarget-libjava\"\n \n # these libraries are built for the target environment, and are built after\n@@ -2691,7 +2690,7 @@ target_libraries=\"target-libgcc \\\n # note: any program that *uses* libraries that are in the \"target_libraries\"\n # list belongs in this list.\n #\n-target_tools=\"target-examples target-gperf target-rda\"\n+target_tools=\"target-rda\"\n \n ################################################################################\n \n@@ -7518,7 +7517,6 @@ test -n \"$YACC\" || YACC=\"$MISSING bison -y\"\n \n case \" $build_configdirs \" in\n   *\" bison \"*) YACC='$$r/$(BUILD_SUBDIR)/bison/tests/bison -y' ;;\n-  *\" byacc \"*) YACC='$$r/$(BUILD_SUBDIR)/byacc/byacc' ;;\n esac\n \n for ac_prog in bison"}, {"sha": "68208dcefbc3c5bcb83e90dd3dafba62ea9ad4de", "filename": "configure.ac", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85bfb75e74f728189370daf3044fef444629bab6/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85bfb75e74f728189370daf3044fef444629bab6/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=85bfb75e74f728189370daf3044fef444629bab6", "patch": "@@ -128,24 +128,23 @@ extra_host_args=\n build_libs=\"build-libiberty\"\n \n # these tools are built for the build environment\n-build_tools=\"build-texinfo build-byacc build-flex build-bison build-m4 build-fixincludes\"\n+build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #\n-host_libs=\"intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libelf libiconv\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libelf libiconv\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n # know that we are building the simulator.\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools\"\n \n # libgcj represents the runtime libraries only used by gcj.\n libgcj=\"target-libffi \\\n \ttarget-zlib \\\n-\ttarget-qthreads \\\n \ttarget-libjava\"\n \n # these libraries are built for the target environment, and are built after\n@@ -173,7 +172,7 @@ target_libraries=\"target-libgcc \\\n # note: any program that *uses* libraries that are in the \"target_libraries\"\n # list belongs in this list.\n #\n-target_tools=\"target-examples target-gperf target-rda\"\n+target_tools=\"target-rda\"\n \n ################################################################################\n \n@@ -2956,7 +2955,6 @@ MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing\n AC_CHECK_PROGS([YACC], ['bison -y' byacc yacc], [$MISSING bison -y])\n case \" $build_configdirs \" in\n   *\" bison \"*) YACC='$$r/$(BUILD_SUBDIR)/bison/tests/bison -y' ;;\n-  *\" byacc \"*) YACC='$$r/$(BUILD_SUBDIR)/byacc/byacc' ;;\n esac\n \n AC_CHECK_PROGS([BISON], [bison], [$MISSING bison])"}]}