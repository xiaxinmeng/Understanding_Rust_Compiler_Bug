{"sha": "312f3fa49dd446fc42b3783102a7f956aa0856e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyZjNmYTQ5ZGQ0NDZmYzQyYjM3ODMxMDJhN2Y5NTZhYTA4NTZlNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-10-14T11:29:33Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-10-14T11:29:33Z"}, "message": "decl.c (check_tag_decl): Use DECL_SOURCE_LOCATION.\n\n/cp\n2019-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (check_tag_decl): Use DECL_SOURCE_LOCATION.\n\n/testsuite\n2019-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/constexpr-union5.C: Test location(s) too.\n\t* g++.dg/diagnostic/bitfld2.C: Likewise.\n\t* g++.dg/ext/anon-struct1.C: Likewise.\n\t* g++.dg/ext/anon-struct6.C: Likewise.\n\t* g++.dg/ext/flexary19.C: Likewise.\n\t* g++.dg/ext/flexary9.C: Likewise.\n\t* g++.dg/template/error17.C: Likewise.\n\nFrom-SVN: r276958", "tree": {"sha": "cff74acc74af1aea1f893294b2c3c981a3d4f4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cff74acc74af1aea1f893294b2c3c981a3d4f4f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/312f3fa49dd446fc42b3783102a7f956aa0856e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312f3fa49dd446fc42b3783102a7f956aa0856e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312f3fa49dd446fc42b3783102a7f956aa0856e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312f3fa49dd446fc42b3783102a7f956aa0856e7/comments", "author": null, "committer": null, "parents": [{"sha": "77ef339456ff898de80654000f519cbd80735fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ef339456ff898de80654000f519cbd80735fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77ef339456ff898de80654000f519cbd80735fd3"}], "stats": {"total": 108, "additions": 61, "deletions": 47}, "files": [{"sha": "286410717579af9bf2b5caf169f7ac07a7efbac1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -1,3 +1,7 @@\n+2019-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (check_tag_decl): Use DECL_SOURCE_LOCATION.\n+\n 2019-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/92084"}, {"sha": "a9ff4275a6707ae1c0f04a47b67025473ebda863", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -4990,9 +4990,9 @@ check_tag_decl (cp_decl_specifier_seq *declspecs,\n       /* Anonymous unions are objects, so they can have specifiers.  */;\n       SET_ANON_AGGR_TYPE_P (declared_type);\n \n-      if (TREE_CODE (declared_type) != UNION_TYPE\n-\t  && !in_system_header_at (input_location))\n-\tpedwarn (input_location, OPT_Wpedantic, \"ISO C++ prohibits anonymous structs\");\n+      if (TREE_CODE (declared_type) != UNION_TYPE)\n+\tpedwarn (DECL_SOURCE_LOCATION (TYPE_MAIN_DECL (declared_type)),\n+\t\t OPT_Wpedantic, \"ISO C++ prohibits anonymous structs\");\n     }\n \n   else"}, {"sha": "13988f87736f5712f899b08db16378bbc2bdc35f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -1,3 +1,13 @@\n+2019-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/constexpr-union5.C: Test location(s) too.\n+\t* g++.dg/diagnostic/bitfld2.C: Likewise.\n+\t* g++.dg/ext/anon-struct1.C: Likewise.\n+\t* g++.dg/ext/anon-struct6.C: Likewise.\n+\t* g++.dg/ext/flexary19.C: Likewise.\n+\t* g++.dg/ext/flexary9.C: Likewise.\n+\t* g++.dg/template/error17.C: Likewise.\n+\n 2019-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/92084"}, {"sha": "53182e6506312ebbcd1133559a72b63c62550aaa", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union5.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union5.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -23,16 +23,16 @@ SA((a.i == 42));\n \n struct B\n {\n-  struct {\n+  struct {\t\t        // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n     int h;\n-    struct {\n+    struct {\t\t\t// { dg-warning \"12:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n       union {\n \tunsigned char i;\n \tint j;\n       };\n       int k;\n-    };\t\t\t\t// { dg-warning \"anonymous struct\" }\n-  };\t\t\t\t// { dg-warning \"anonymous struct\" }\n+    };\n+  };\n   int l;\n \n   constexpr B(): h(1), i(2), k(3), l(4) {}"}, {"sha": "88e7ebf77ab78b0b4b6204cb33c2910c9b078e32", "filename": "gcc/testsuite/g++.dg/diagnostic/bitfld2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fbitfld2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fbitfld2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fbitfld2.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -6,4 +6,4 @@ template<int> struct A\n   struct {} : 2;   // { dg-error \"expected ';' after struct\" \"expected\" }\n };\n // { dg-error \"ISO C.. forbids declaration\" \"declaration\" { target *-*-* } 6 }\n-// { dg-error \"ISO C.. prohibits anonymous\" \"anonymous\" { target *-*-* } 6 }\n+// { dg-error \"10:ISO C.. prohibits anonymous\" \"anonymous\" { target *-*-* } 6 }"}, {"sha": "ceeb8e177c1dde2fe98c14cf21ce14241f91e17b", "filename": "gcc/testsuite/g++.dg/ext/anon-struct1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct1.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -19,7 +19,7 @@ char testD[sizeof(C::D) == sizeof(A) ? 1 : -1];\n \n /* GNU extension.  */\n struct E {\n-  struct { char z; };\t\t/* { dg-error \"prohibits anonymous structs\" } */\n+  struct { char z; };\t\t/* { dg-error \"10:ISO C\\\\+\\\\+ prohibits anonymous structs\" } */\n   char e;\n };\n \n@@ -45,6 +45,6 @@ char testH[sizeof(H) == 2 * sizeof(A) ? 1 : -1];\n \n /* Make sure __extension__ gets turned back off.  */\n struct I {\n-  struct { char z; };\t\t/* { dg-error \"prohibits anonymous structs\" } */\n+  struct { char z; };\t\t/* { dg-error \"10:ISO C\\\\+\\\\+ prohibits anonymous structs\" } */\n   char i;\n };"}, {"sha": "fad508a5d2fc7fac0ef50fd000e4f013ae68625e", "filename": "gcc/testsuite/g++.dg/ext/anon-struct6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct6.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -3,8 +3,8 @@\n struct A\n {\n   struct\n-  {\n+  { // { dg-error \"3:ISO C\\\\+\\\\+ prohibits anonymous structs\" }\n     struct { static int i; }; // { dg-error \"prohibits anonymous structs|non-static data members|unnamed class\" }\n     void foo() { i; } // { dg-error \"public non-static data\" }\n-  }; // { dg-error \"prohibits anonymous structs\" }\n+  };\n };"}, {"sha": "abfbc43028afb0389cc79ba29b4cd808aacdb947", "filename": "gcc/testsuite/g++.dg/ext/flexary19.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary19.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -146,13 +146,13 @@ struct S16\n {\n   int i;\n \n-  struct {          // { dg-warning \"invalid use\" }\n+  struct {          // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use\" }\n     // A flexible array as a sole member of an anonymous struct is\n     // rejected with an error in C mode but emits just a pedantic\n     // warning in C++.  Other than excessive pedantry there is no\n     // reason to reject it.\n     int a[];\n-  };                // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n struct S17\n@@ -177,9 +177,9 @@ struct S19\n {\n   int i;\n \n-  struct {          // { dg-warning \"invalid use\" }\n+  struct {          // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use\" }\n     int j, a[];     // { dg-message \"declared here\" }\n-  };                // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n struct S20\n@@ -198,10 +198,10 @@ struct S21\n   static int i;\n   typedef int A[];\n \n-  struct {          // { dg-warning \"invalid use\" }\n+  struct {          // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use\" }\n     int j;\n     A a;            // { dg-message \"declared here\" }\n-  };                // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n struct S22\n@@ -215,11 +215,11 @@ struct S22\n \n struct S23\n {\n-  struct {\n+  struct {          // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n     static int i;   // { dg-error \"static data member\" }\n \n     int a[];        // { dg-error \"in an otherwise empty\" }\n-  };                // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n struct S24\n@@ -296,11 +296,11 @@ union A\n \n union B\n {\n-  struct {\n-    struct {        // { dg-warning \"invalid use\" }\n+  struct {          // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n+    struct {        // { dg-warning \"12:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use\" }\n       int i, a[];   // { dg-message \"declared here\" }\n-    };              // { dg-warning \"anonymous struct\" }\n-  };                // { dg-warning \"anonymous struct\" }\n+    };\n+  };\n   int j;\n };\n "}, {"sha": "b31e84b5fce81760a1ef208728d67273b0f86837", "filename": "gcc/testsuite/g++.dg/ext/flexary9.C", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary9.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -282,64 +282,64 @@ struct S_S_S_x {\n \n struct Anon1 {\n   int n;\n-  struct {                  // { dg-warning \"invalid use \\[^\\n\\r\\]* with a zero-size array\" }\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use \\[^\\n\\r\\]* with a zero-size array\" }\n     int good[0];            // { dg-warning \"forbids zero-size array\" }\n-  };                        // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n ASSERT_AT_END (Anon1, good);\n \n struct Anon2 {\n-  struct {                  // { dg-warning \"invalid use\" }\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use\" }\n     int n;\n-    struct {\n+    struct {                // { dg-warning \"12:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n       int good[0];          // { dg-warning \"zero-size array\" }\n-    };                      // { dg-warning \"anonymous struct\" }\n-  };                        // { dg-warning \"anonymous struct\" }\n+    };\n+  };\n };\n \n ASSERT_AT_END (Anon2, good);\n \n struct Anon3 {\n-  struct {                  // { dg-warning \"invalid use\" }\n-    struct {\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct|invalid use\" }\n+    struct {                // { dg-warning \"12:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n       int n;\n       int good[0];          // { dg-warning \"zero-size array\" }\n-    };                      // { dg-warning \"anonymous struct\" }\n-  };                        // { dg-warning \"anonymous struct\" }\n+    };\n+  };\n };\n \n ASSERT_AT_END (Anon3, good);\n \n struct Anon4 {\n-  struct {\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n     int in_empty_struct[0]; // { dg-warning \"zero-size array|in an otherwise empty\" }\n-  };                        // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n struct Anon5 {\n-  struct {\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n     int not_at_end[0];      // { dg-warning \"zero-size array|not at end\" }\n-  };                        // { dg-warning \"anonymous struct\" }\n+  };\n   int n;\n };\n \n struct Anon6 {\n-  struct {\n-    struct {\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n+    struct {                // { dg-warning \"12:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n       int not_at_end[0];    // { dg-warning \"zero-size array|not at end\" }\n-    };                      // { dg-warning \"anonymous struct\" }\n+    };\n     int n;\n-  };                        // { dg-warning \"anonymous struct\" }\n+  };\n };\n \n \n struct Anon7 {\n-  struct {\n-    struct {\n+  struct {                  // { dg-warning \"10:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n+    struct {                // { dg-warning \"12:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n       int not_at_end[0];    // { dg-warning \"zero-size array|not at end\" }\n-    };                      // { dg-warning \"anonymous struct\" }\n-  };                        // { dg-warning \"anonymous struct\" }\n+    };\n+  };\n   int n;\n };\n "}, {"sha": "7803a1e89efdd0f4eb418c3cc9127ab61ce349ab", "filename": "gcc/testsuite/g++.dg/template/error17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f3fa49dd446fc42b3783102a7f956aa0856e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror17.C?ref=312f3fa49dd446fc42b3783102a7f956aa0856e7", "patch": "@@ -4,6 +4,6 @@ template <typename T>\n void\n foo()\n {\n-  union { struct { }; }; // { dg-error \"prohibits anonymous struct\" \"anon\" }\n+  union { struct { }; }; // { dg-error \"18:ISO C\\\\+\\\\+ prohibits anonymous struct\" }\n   // { dg-error \"18:anonymous struct not inside\" \"not inside\" { target *-*-* } .-1 }\n }"}]}