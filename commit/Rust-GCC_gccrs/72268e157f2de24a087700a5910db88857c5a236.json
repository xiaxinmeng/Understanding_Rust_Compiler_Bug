{"sha": "72268e157f2de24a087700a5910db88857c5a236", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyNjhlMTU3ZjJkZTI0YTA4NzcwMGE1OTEwZGI4ODg1N2M1YTIzNg==", "commit": {"author": {"name": "Kyle Galloway", "email": "kgallowa@redhat.com", "date": "2007-02-08T18:01:56Z"}, "committer": {"name": "Kyle Galloway", "email": "kgallowa@gcc.gnu.org", "date": "2007-02-08T18:01:56Z"}, "message": "java-interp.h (_Jv_InterpFrame): obj_ptr field added to hold \"this\" pointer for frame.\n\n2007-02-06  Kyle Galloway  <kgallowa@redhat.com>\n\n    * include/java-interp.h (_Jv_InterpFrame): obj_ptr field added\n    to hold \"this\" pointer for frame.\n    (_Jv_InterpFrame::get_this_ptr): New method.\n    * interpret-run.cc: Copy the \"this\" pointer into obj_ptr.\n\nFrom-SVN: r121717", "tree": {"sha": "62949050654147577945d70db07dfdbfacbe1feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62949050654147577945d70db07dfdbfacbe1feb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72268e157f2de24a087700a5910db88857c5a236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72268e157f2de24a087700a5910db88857c5a236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72268e157f2de24a087700a5910db88857c5a236", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72268e157f2de24a087700a5910db88857c5a236/comments", "author": null, "committer": null, "parents": [{"sha": "9f05adb09fd35252136f4d28182e5d60cc03fb36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f05adb09fd35252136f4d28182e5d60cc03fb36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f05adb09fd35252136f4d28182e5d60cc03fb36"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "e3fc13254958bc4478d84ef5b3195a6544a7f35a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72268e157f2de24a087700a5910db88857c5a236/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72268e157f2de24a087700a5910db88857c5a236/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=72268e157f2de24a087700a5910db88857c5a236", "patch": "@@ -1,3 +1,10 @@\n+2007-02-07  Kyle Galloway  <kgallowa@redhat.com>\n+\n+    * include/java-interp.h (_Jv_InterpFrame): obj_ptr field added\n+    to hold \"this\" pointer for frame.\n+    (_Jv_InterpFrame::get_this_ptr): New method.\n+    * interpret-run.cc: Copy the \"this\" pointer into obj_ptr.\n+\n 2007-02-07  Keith Seitz  <keiths@redhat.com>\n \n \t* include/java-interp.h (_Jv_Frame::depth):"}, {"sha": "2b3ae7cd6f7b6ab643827242abe6b16c93e269b7", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72268e157f2de24a087700a5910db88857c5a236/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72268e157f2de24a087700a5910db88857c5a236/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=72268e157f2de24a087700a5910db88857c5a236", "patch": "@@ -387,19 +387,28 @@ class _Jv_InterpFrame : public _Jv_Frame\n   _Jv_word *locals;\n   char *locals_type;\n \n+  // Object pointer for this frame (\"this\")\n+  jobject obj_ptr;\n+\n   _Jv_InterpFrame (void *meth, java::lang::Thread *thr, jclass proxyCls = NULL)\n   : _Jv_Frame (reinterpret_cast<_Jv_MethodBase *> (meth), thr,\n \t             frame_interpreter)\n   {\n     next_interp = (_Jv_InterpFrame *) thr->interp_frame;\n     proxyClass = proxyCls;\n     thr->interp_frame = (gnu::gcj::RawData *) this;\n+    obj_ptr = NULL;\n   }\n \n   ~_Jv_InterpFrame ()\n   {\n     thread->interp_frame = (gnu::gcj::RawData *) next_interp;\n   }\n+\n+  jobject get_this_ptr ()\n+  {\n+    return obj_ptr;\n+  } \n };\n \n // A native frame in the call stack really just a placeholder"}, {"sha": "8a4d204090f89f2668bb6f2c8bd5e414438412ff", "filename": "libjava/interpret-run.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72268e157f2de24a087700a5910db88857c5a236/libjava%2Finterpret-run.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72268e157f2de24a087700a5910db88857c5a236/libjava%2Finterpret-run.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret-run.cc?ref=72268e157f2de24a087700a5910db88857c5a236", "patch": "@@ -349,6 +349,15 @@ details.  */\n   */\n   memcpy ((void*) locals, (void*) args, meth->args_raw_size);\n \n+#ifdef DEBUG\n+  // Get the object pointer for this method, after checking that it is\n+  // non-static.\n+  _Jv_Method *method = meth->get_method ();\n+   \n+  if ((method->accflags & java::lang::reflect::Modifier::STATIC) == 0)\n+    frame_desc.obj_ptr = locals[0].o;\n+#endif\n+\n   _Jv_word *pool_data = meth->defining_class->constants.data;\n \n   /* These three are temporaries for common code used by several"}]}