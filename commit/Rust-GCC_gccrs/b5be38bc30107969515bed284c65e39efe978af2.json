{"sha": "b5be38bc30107969515bed284c65e39efe978af2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViZTM4YmMzMDEwNzk2OTUxNWJlZDI4NGM2NWUzOWVmZTk3OGFmMg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-04-28T21:24:00Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-04-28T21:24:00Z"}, "message": "Replace absolute linenrs in objc.dg,obj-c++.dg\n\n2017-04-28  Tom de Vries  <tom@codesourcery.com>\n\n\tPR testsuite/80557\n\t* obj-c++.dg/bitfield-1.mm: Replace absolute linenrs.\n\t* obj-c++.dg/bitfield-4.mm: Same.\n\t* obj-c++.dg/bitfield-5.mm: Same.\n\t* obj-c++.dg/exceptions-3.mm: Same.\n\t* obj-c++.dg/exceptions-5.mm: Same.\n\t* obj-c++.dg/method-1.mm: Same.\n\t* obj-c++.dg/method-12.mm: Same.\n\t* obj-c++.dg/method-13.mm: Same.\n\t* obj-c++.dg/method-15.mm: Same.\n\t* obj-c++.dg/method-16.mm: Same.\n\t* obj-c++.dg/property/at-property-18.mm: Same.\n\t* obj-c++.dg/property/at-property-25.mm: Same.\n\t* obj-c++.dg/property/at-property-5.mm: Same.\n\t* obj-c++.dg/property/dynamic-2.mm: Same.\n\t* obj-c++.dg/property/property-neg-3.mm: Same.\n\t* obj-c++.dg/protocol-inheritance-1.mm: Same.\n\t* obj-c++.dg/protocol-inheritance-2.mm: Same.\n\t* obj-c++.dg/syntax-error-1.mm: Same.\n\t* obj-c++.dg/try-catch-13.mm: Same.\n\t* objc.dg/bitfield-4.m: Same.\n\t* objc.dg/class-1.m: Same.\n\t* objc.dg/method-11.m: Same.\n\t* objc.dg/method-6.m: Same.\n\t* objc.dg/method-7.m: Same.\n\t* objc.dg/method-9.m: Same.\n\t* objc.dg/missing-proto-3.m: Same.\n\t* objc.dg/naming-2.m: Same.\n\t* objc.dg/property/at-property-16.m: Same.\n\t* objc.dg/property/at-property-18.m: Same.\n\t* objc.dg/property/at-property-25.m: Same.\n\t* objc.dg/property/at-property-5.m: Same.\n\t* objc.dg/property/dynamic-2.m: Same.\n\t* objc.dg/property/property-neg-3.m: Same.\n\t* objc.dg/protocol-inheritance-1.m: Same.\n\t* objc.dg/protocol-inheritance-2.m: Same.\n\nFrom-SVN: r247399", "tree": {"sha": "235a15c41a80da029a3997575d7140d5e5a0ce7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/235a15c41a80da029a3997575d7140d5e5a0ce7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5be38bc30107969515bed284c65e39efe978af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5be38bc30107969515bed284c65e39efe978af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5be38bc30107969515bed284c65e39efe978af2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5be38bc30107969515bed284c65e39efe978af2/comments", "author": null, "committer": null, "parents": [{"sha": "d35256b6c1c2d52d3539ef8a1c700b69342acd19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35256b6c1c2d52d3539ef8a1c700b69342acd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35256b6c1c2d52d3539ef8a1c700b69342acd19"}], "stats": {"total": 437, "additions": 235, "deletions": 202}, "files": [{"sha": "589da6df3d1259cbb6ee5ac99ddef77adbda6f83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -1,3 +1,42 @@\n+2017-04-28  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/80557\n+\t* obj-c++.dg/bitfield-1.mm: Replace absolute linenrs.\n+\t* obj-c++.dg/bitfield-4.mm: Same.\n+\t* obj-c++.dg/bitfield-5.mm: Same.\n+\t* obj-c++.dg/exceptions-3.mm: Same.\n+\t* obj-c++.dg/exceptions-5.mm: Same.\n+\t* obj-c++.dg/method-1.mm: Same.\n+\t* obj-c++.dg/method-12.mm: Same.\n+\t* obj-c++.dg/method-13.mm: Same.\n+\t* obj-c++.dg/method-15.mm: Same.\n+\t* obj-c++.dg/method-16.mm: Same.\n+\t* obj-c++.dg/property/at-property-18.mm: Same.\n+\t* obj-c++.dg/property/at-property-25.mm: Same.\n+\t* obj-c++.dg/property/at-property-5.mm: Same.\n+\t* obj-c++.dg/property/dynamic-2.mm: Same.\n+\t* obj-c++.dg/property/property-neg-3.mm: Same.\n+\t* obj-c++.dg/protocol-inheritance-1.mm: Same.\n+\t* obj-c++.dg/protocol-inheritance-2.mm: Same.\n+\t* obj-c++.dg/syntax-error-1.mm: Same.\n+\t* obj-c++.dg/try-catch-13.mm: Same.\n+\t* objc.dg/bitfield-4.m: Same.\n+\t* objc.dg/class-1.m: Same.\n+\t* objc.dg/method-11.m: Same.\n+\t* objc.dg/method-6.m: Same.\n+\t* objc.dg/method-7.m: Same.\n+\t* objc.dg/method-9.m: Same.\n+\t* objc.dg/missing-proto-3.m: Same.\n+\t* objc.dg/naming-2.m: Same.\n+\t* objc.dg/property/at-property-16.m: Same.\n+\t* objc.dg/property/at-property-18.m: Same.\n+\t* objc.dg/property/at-property-25.m: Same.\n+\t* objc.dg/property/at-property-5.m: Same.\n+\t* objc.dg/property/dynamic-2.m: Same.\n+\t* objc.dg/property/property-neg-3.m: Same.\n+\t* objc.dg/protocol-inheritance-1.m: Same.\n+\t* objc.dg/protocol-inheritance-2.m: Same.\n+\n 2017-04-28  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/cmpexactdiv-2.c: Update for X-Z OP Y-Z."}, {"sha": "a63761904b535c3ea4e8e9843816030f7a9e23f2", "filename": "gcc/testsuite/obj-c++.dg/bitfield-1.mm", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-1.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -39,10 +39,10 @@ @interface Derived: Base {\n   signed e: 5;\n   unsigned f: 4;\n   enum Enum g: 3;\n-}\n+} /* { dg-line interface_Derived } */\n @end\n \n-struct Derived_0 {\n+struct Derived_0 { /* { dg-line struct_Derived_0 } */\n   Class isa;\n   unsigned a: 2;\n   int b: 3;\n@@ -56,10 +56,10 @@ @interface Derived: Base {\n @interface Leaf: Derived {\n @public\n   signed h: 2;\n-}\n+} /* { dg-line interface_Leaf } */\n @end\n \n-struct Leaf_0 {\n+struct Leaf_0 { /* { dg-line struct_Leaf_0 } */\n   Class isa;\n   unsigned a: 2;\n   int b: 3;\n@@ -74,8 +74,8 @@ @interface Leaf: Derived {\n /* Note that the semicolon after @defs(...) is optional.  */\n \n typedef struct { @defs(Base) } Base_t; /* { dg-warning \"padding struct size to alignment boundary\" } */\n-typedef struct { @defs(Derived); } Derived_t;\n-typedef struct { @defs(Leaf); } Leaf_t;\n+typedef struct { @defs(Derived); } Derived_t; /* { dg-line Derived_t_def } */\n+typedef struct { @defs(Leaf); } Leaf_t; /* { dg-line Leaf_t_def } */\n \n int main(void)\n {\n@@ -116,9 +116,9 @@ int main(void)\n \n /* { dg-prune-output \"In file included from\" }  Ignore this message.  */\n /* { dg-bogus \"padding struct to align\" \"PR23610\" { target *-*-* } 0 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 42 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 45 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 59 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 62 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 77 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 78 } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } interface_Derived } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } struct_Derived_0 } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } interface_Leaf } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } struct_Leaf_0 } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } Derived_t_def } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } Leaf_t_def } */"}, {"sha": "1fd6d3a16688013edbdff69d6bf2421326427dd3", "filename": "gcc/testsuite/obj-c++.dg/bitfield-4.mm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-4.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -25,13 +25,13 @@ @interface Derived: Base {\n   signed e: 5;\n   int f: 4;\n   enum Enum g: 3;\n-}\n+} /* { dg-line interface_Derived } */\n @end\n   \n /* Note that the semicolon after @defs(...) is optional.  */\n \n typedef struct { @defs(Base) } Base_t;  /* { dg-warning \"padding struct size to alignment boundary\" } */\n-typedef struct { @defs(Derived); } Derived_t;\n+typedef struct { @defs(Derived); } Derived_t; /* { dg-line Derived_t_def } */\n \n int main(void)\n {\n@@ -52,5 +52,5 @@ int main(void)\n /* { dg-prune-output \"In file included from\" }  Ignore this message.  */\n /* { dg-bogus \"padding struct to align\" \"PR23610\" { target *-*-* } 0 } */\n \n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 28 } */\n-/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } 34 } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } interface_Derived } */\n+/* { dg-bogus \"padding struct size\" \"PR23610\" { xfail lp64 } Derived_t_def } */"}, {"sha": "3b0065d7f61847262d170b53087ca86c26d726eb", "filename": "gcc/testsuite/obj-c++.dg/bitfield-5.mm", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-5.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -10,20 +10,20 @@ @interface Base {\n @end\n \n @interface WithBitfields: Base {\n-  void *isa;\n-  unsigned a: 3;\n+  void *isa;     /* { dg-line WithBitfields_isa } */\n+  unsigned a: 3; /* { dg-line WithBitfields_a } */\n   signed b: 4;\n-  int c: 5;\n+  int c: 5;      /* { dg-line WithBitfields_c } */\n }\n @end\n \n @implementation WithBitfields {\n   char *isa;  /* { dg-error \"conflicting instance variable type .char \\\\*isa.\" } */\n-  /* { dg-error \"previous declaration of .void \\\\*isa.\" \"\" { target *-*-* } 13 } */\n+  /* { dg-error \"previous declaration of .void \\\\*isa.\" \"\" { target *-*-* } WithBitfields_isa } */\n   unsigned a: 5;  /* { dg-error \"conflicting instance variable type .unsigned( int)? a: 5.\" } */\n-  /* { dg-error \"previous declaration of .unsigned( int)? a: 3.\" \"\" { target *-*-* } 14 } */                     \n+  /* { dg-error \"previous declaration of .unsigned( int)? a: 3.\" \"\" { target *-*-* } WithBitfields_a } */\n   signed b: 4;  /* This one is fine. */\n   int c: 3;  /* { dg-error \"conflicting instance variable type .int c: 3.\" } */\n-  /* { dg-error \"previous declaration of .int c: 5.\" \"\" { target *-*-* } 16 } */ \n+  /* { dg-error \"previous declaration of .int c: 5.\" \"\" { target *-*-* } WithBitfields_c } */ \n }\n @end"}, {"sha": "c29752d13999ea7b3f76308a51f030b35f98178f", "filename": "gcc/testsuite/obj-c++.dg/exceptions-3.mm", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-3.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -10,7 +10,7 @@\n @interface MyObject\n {\n   Class isa;\n-}\n+} /* { dg-line interface_MyObject } */\n @end\n \n @implementation MyObject\n@@ -71,8 +71,8 @@ int test (id object)\n   @try { @throw object; }\n   @catch (MyObject x)     /* { dg-error \"@catch parameter is not a known Objective-C class type\" } */\n     {                     /* { dg-error \"no matching function\" \"\" { target *-*-* } .-1 } */\n-      dummy++;            /* { dg-message \"MyObject\" \"\" { target *-*-* } 13 } */\n-    }                     /* { dg-message \"candidate\" \"\" { target *-*-* } 13 } */\n+      dummy++;            /* { dg-message \"MyObject\" \"\" { target *-*-* } interface_MyObject } */\n+    }                     /* { dg-message \"candidate\" \"\" { target *-*-* } interface_MyObject } */\n   @try { @throw object; }\n   @catch (static MyObject *x) /* { dg-error \"storage class\" } */\n     {"}, {"sha": "9e733a79055835ee58549ddaffc72df2218cdfb2", "filename": "gcc/testsuite/obj-c++.dg/exceptions-5.mm", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-5.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -10,7 +10,7 @@\n @interface MyObject\n {\n   Class isa;\n-}\n+} /* { dg-line interface_MyObject } */\n @end\n \n @implementation MyObject\n@@ -71,8 +71,8 @@ int test (id object)\n   @try { @throw object; }\n   @catch (MyObject)     /* { dg-error \"@catch parameter is not a known Objective-C class type\" } */\n     {                     /* { dg-error \"no matching function\" \"\" { target *-*-* } .-1 } */\n-      dummy++;            /* { dg-message \"MyObject\" \"\" { target *-*-* } 13 } */\n-    }                     /* { dg-message \"candidate\" \"\" { target *-*-* } 13 } */\n+      dummy++;            /* { dg-message \"MyObject\" \"\" { target *-*-* } interface_MyObject } */\n+    }                     /* { dg-message \"candidate\" \"\" { target *-*-* } interface_MyObject } */\n \n   @try { @throw object; }\n   @catch (static MyObject *) /* { dg-error \"storage class\" } */"}, {"sha": "7317ae2aa87c9359f24e7a58e7b23f74a950fd8e", "filename": "gcc/testsuite/obj-c++.dg/method-1.mm", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-1.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -22,9 +22,10 @@ - (int)instanceMethod:(int)arg;  /* { dg-bogus \"also found\" } */\n @end\n \n int main(void) {\n-  id i = [(Int2 *)[Int1 classMethod1] int2Method];   /* { dg-bogus \"may not respond to\" } */\n+  id i = [(Int2 *)[Int1 classMethod1] int2Method]; /* { dg-line i_def } */\n+\t/* { dg-bogus \"may not respond to\" \"\" { target *-*-* } i_def } */\n   int j = [(Int2 *)[Int2 classMethod2] instanceMethod: 45];  /* { dg-bogus \"multiple methods\" } */\n-\t/* { dg-bogus \"invalid conversion\" \"\" { target *-*-* } 25 } */\n-\t/* { dg-bogus \"invalid conversion\" \"\" { target *-*-* } 25 } */\n+\t/* { dg-bogus \"invalid conversion\" \"\" { target *-*-* } i_def } */\n+\t/* { dg-bogus \"invalid conversion\" \"\" { target *-*-* } i_def } */\n   return j;\n }"}, {"sha": "2282dec5b151509692c3b2c24c4ed21d1323a63c", "filename": "gcc/testsuite/obj-c++.dg/method-12.mm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-12.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-12.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-12.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -7,21 +7,21 @@\n #include <objc/Protocol.h>\n \n @interface Base\n-- (unsigned)port;\n+- (unsigned)port; /* { dg-line Base_port } */\n @end\n \n @interface Derived: Base\n - (Object *)port;\n-+ (Protocol *)port;\n++ (Protocol *)port; /* { dg-line Derived_port_last } */\n - (id)starboard;\n @end\n \n void foo(void) {\n   Class receiver;\n \n   [receiver port];  /* { dg-warning \"multiple methods named .\\\\+port. found\" } */\n-       /* { dg-message \"using .\\\\-\\\\(unsigned( int)?\\\\)port.\" \"\" { target *-*-* } 10 } */\n-       /* { dg-message \"also found .\\\\+\\\\(Protocol \\\\*\\\\)port.\" \"\" { target *-*-* } 15 } */\n+       /* { dg-message \"using .\\\\-\\\\(unsigned( int)?\\\\)port.\" \"\" { target *-*-* } Base_port } */\n+       /* { dg-message \"also found .\\\\+\\\\(Protocol \\\\*\\\\)port.\" \"\" { target *-*-* } Derived_port_last } */\n \n   [receiver starboard];  /* { dg-warning \"no .\\\\+starboard. method found\" } */\n        /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } .-1 } */"}, {"sha": "b0a1f59111740ddf2ef579ddfb726f991e768a03", "filename": "gcc/testsuite/obj-c++.dg/method-13.mm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-13.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-13.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-13.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -5,11 +5,11 @@\n #include \"../objc-obj-c++-shared/TestsuiteObject.h\"\n \n @interface Class1\n-- (void)setWindow:(TestsuiteObject *)wdw;\n+- (void)setWindow:(TestsuiteObject *)wdw; /* { dg-line Class1_setWindow } */\n @end\n \n @interface Class2\n-- (void)setWindow:(Class1 *)window;\n+- (void)setWindow:(Class1 *)window; /* { dg-line Class2_setWindow } */\n @end\n \n id foo(void) {\n@@ -20,8 +20,8 @@ id foo(void) {\n        /* { dg-warning \"will be assumed to return .id. and accept\" \"\" { target *-*-* } .-2 } */\n        /* { dg-warning \".\\.\\.\\.. as arguments\" \"\" { target *-*-* } .-3 } */\n   [obj2 setWindow:nil]; /* { dg-warning \"multiple methods named .\\\\-setWindow:. found\" } */\n-       /* { dg-message \"using .\\\\-\\\\(void\\\\)setWindow:\\\\(TestsuiteObject \\\\*\\\\)wdw.\" \"\" { target *-*-* } 8 } */\n-       /* { dg-message \"also found .\\\\-\\\\(void\\\\)setWindow:\\\\(Class1 \\\\*\\\\)window.\" \"\" { target *-*-* } 12 } */\n+       /* { dg-message \"using .\\\\-\\\\(void\\\\)setWindow:\\\\(TestsuiteObject \\\\*\\\\)wdw.\" \"\" { target *-*-* } Class1_setWindow } */\n+       /* { dg-message \"also found .\\\\-\\\\(void\\\\)setWindow:\\\\(Class1 \\\\*\\\\)window.\" \"\" { target *-*-* } Class2_setWindow } */\n \n   return obj;\n }"}, {"sha": "da851c931a43d2daf974c17bbc1f7c159c7ac139", "filename": "gcc/testsuite/obj-c++.dg/method-15.mm", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-15.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-15.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-15.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -6,15 +6,15 @@\n #include \"../objc-obj-c++-shared/TestsuiteObject.h\"\n \n @protocol MyObject\n-- (id)initWithData:(TestsuiteObject *)data;\n+- (id)initWithData:(TestsuiteObject *)data; /* { dg-line MyObject_initWithData } */\n @end\n \n @protocol SomeOther\n-- (id)initWithData:(int)data;\n+- (id)initWithData:(int)data; /* { dg-line SomeOther_initWithData } */\n @end\n \n @protocol MyCoding\n-- (id)initWithData:(id<MyObject, MyCoding>)data;\n+- (id)initWithData:(id<MyObject, MyCoding>)data; /* { dg-line MyCoding_initWithData } */\n @end\n \n @interface NTGridDataObject: TestsuiteObject <MyCoding>\n@@ -30,14 +30,14 @@ - (id)initWithData:(id<MyObject, MyCoding>)data {\n }\n + (NTGridDataObject*)dataObject:(id<MyObject, MyCoding>)data\n {\n-    NTGridDataObject *result = [[NTGridDataObject alloc] initWithData:data];\n+    NTGridDataObject *result = [[NTGridDataObject alloc] initWithData:data]; /* { dg-line result_init } */\n      /* { dg-warning \"multiple methods named .\\\\-initWithData:. found\" \"\" { target *-*-* } .-1 } */\n-     /* { dg-message \"using .\\\\-\\\\(id\\\\)initWithData:\\\\(TestsuiteObject \\\\*\\\\)data.\" \"\" { target *-*-* } 9 } */\n-     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(id <MyObject, MyCoding>\\\\)data.\" \"\" { target *-*-* } 17 } */\n-     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(int\\\\)data.\" \"\" { target *-*-* } 13 } */\n+     /* { dg-message \"using .\\\\-\\\\(id\\\\)initWithData:\\\\(TestsuiteObject \\\\*\\\\)data.\" \"\" { target *-*-* } MyObject_initWithData } */\n+     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(id <MyObject, MyCoding>\\\\)data.\" \"\" { target *-*-* } MyCoding_initWithData } */\n+     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(int\\\\)data.\" \"\" { target *-*-* } SomeOther_initWithData } */\n \n      /* The following warning is a consequence of picking the \"wrong\" method signature.  */\n-     /* { dg-warning \"passing argument 1 of .initWithData:. from distinct Objective\\\\-C type\" \"\" { target *-*-* } 33 } */\n+     /* { dg-warning \"passing argument 1 of .initWithData:. from distinct Objective\\\\-C type\" \"\" { target *-*-* } result_init } */\n     return result;\n }\n @end"}, {"sha": "4b691d81d1a3b6e9586fe0928e702fe0e3b9f58a", "filename": "gcc/testsuite/obj-c++.dg/method-16.mm", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-16.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-16.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-16.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -10,25 +10,25 @@\n #include <objc/objc.h>\n \n @interface Object1\n-- (void)initWithData:(Object1 *)data;\n+- (void)initWithData:(Object1 *)data; /* { dg-line Object1_initWithData } */\n @end\n \n @interface Object2\n-- (id)initWithData:(Object1 *)data;\n+- (id)initWithData:(Object1 *)data; /* { dg-line Object2_initWithData } */\n @end\n \n @interface Object3\n-- (id)initWithData:(Object2 *)data;\n+- (id)initWithData:(Object2 *)data; /* { dg-line Object3_initWithData } */\n @end\n \n void foo(void) {\n   id obj1, obj2 = 0;\n-  obj2 = [obj1 initWithData: obj2];\n+  obj2 = [obj1 initWithData: obj2]; /* { dg-line obj2_assign } */\n      /* { dg-warning \"multiple methods named .\\\\-initWithData:. found\" \"\" { target *-*-* } .-1 } */\n-     /* { dg-message \"using .\\\\-\\\\(void\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } 13 } */\n-     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } 17 } */\n-     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object2 \\\\*\\\\)data.\" \"\" { target *-*-* } 21 } */\n+     /* { dg-message \"using .\\\\-\\\\(void\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } Object1_initWithData } */\n+     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } Object2_initWithData } */\n+     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object2 \\\\*\\\\)data.\" \"\" { target *-*-* } Object3_initWithData } */\n \n      /* The following error is a consequence of picking the \"wrong\" method signature.  */\n-     /* { dg-error \"void value not ignored as it ought to be\" \"\" { target *-*-* } 26 } */\n+     /* { dg-error \"void value not ignored as it ought to be\" \"\" { target *-*-* } obj2_assign } */\n }"}, {"sha": "efd6f21cd6ec96a1a8eae229ffee3645d0cb9392", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-18.mm", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-18.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-18.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-18.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -13,34 +13,34 @@ @interface MyRootClass\n {\n   Class isa;\n }\n-@property (assign) id a;\n-@property (retain) id b;\n-@property int c;\n-@property (nonatomic) int d;\n-@property int e;\n-@property int f;\n-@property int g;\n+@property (assign) id a;     /* { dg-line MyRootClass_a } */\n+@property (retain) id b;     /* { dg-line MyRootClass_b } */\n+@property int c;             /* { dg-line MyRootClass_c } */\n+@property (nonatomic) int d; /* { dg-line MyRootClass_d } */\n+@property int e;             /* { dg-line MyRootClass_e } */\n+@property int f;             /* { dg-line MyRootClass_f } */\n+@property int g;             /* { dg-line MyRootClass_g } */\n @property (readonly) int h;\n-@property (readonly,getter=getMe) int i;\n+@property (readonly,getter=getMe) int i; /* { dg-line MyRootClass_i } */\n @property (nonatomic) float j;\n @end\n @interface MyRootClass (Category)\n @property (retain) id a;         /* { dg-warning \"assign semantics attributes of property .a. conflict with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 16 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_a } */\n @property (assign) id b;         /* { dg-warning \"assign semantics attributes of property .b. conflict with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 17 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_b } */\n @property (nonatomic) int c;     /* { dg-warning \".nonatomic. attribute of property .c. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 18 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_c } */\n @property int d;                 /* { dg-warning \".nonatomic. attribute of property .d. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 19 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_d } */\n @property (setter=setX:) int e;  /* { dg-warning \".setter. attribute of property .e. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 20 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_e } */\n @property (getter=x) int f;      /* { dg-warning \".getter. attribute of property .f. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 21 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_f } */\n @property (readonly) int g;      /* { dg-warning \".readonly. attribute of property .g. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 22 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_g } */\n @property (readwrite) int h;     /* Ok */\n @property (readonly) int i;      /* { dg-warning \".getter. attribute of property .i. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 24 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_i } */\n @property (nonatomic) float j;   /* Ok */\n @end"}, {"sha": "f5f4988d478f6771200c79e70c5b054dc181f3cc", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-25.mm", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-25.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-25.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-25.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -79,9 +79,8 @@ @interface MySubClass4 : MyRootClass <count2>\n \n @implementation MySubClass4\n @end\n-\n-/* { dg-warning \"incomplete implementation of class\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"method definition for ..setCount1:. not found\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"method definition for ..count1. not found\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"method definition for ..count2. not found\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"class .MySubClass4. does not fully implement the .count2. protocol\" \"\" { target *-*-* } 81 } */\n+/* { dg-warning \"incomplete implementation of class\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for ..setCount1:. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"method definition for ..count1. not found\" \"\" { target *-*-* } .-3 } */\n+/* { dg-warning \"method definition for ..count2. not found\" \"\" { target *-*-* } .-4 } */\n+/* { dg-warning \"class .MySubClass4. does not fully implement the .count2. protocol\" \"\" { target *-*-* } .-5 } */"}, {"sha": "d4b33d9cf4768b24d9733c568dceaa3ca3b5d799", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-5.mm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-5.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -23,12 +23,12 @@ @interface MyRootClass\n @property (retain) int property_c; /* { dg-error \".retain. attribute is only valid for Objective-C objects\" } */\n @property (copy) int property_d; /* { dg-error \".copy. attribute is only valid for Objective-C objects\" } */\n \n-@property (retain) id property_e;\n+@property (retain) id property_e; /* { dg-line property_e_first } */\n @property (retain) id property_f;\n @property (retain) id property_g;\n @property (retain) id property_h;\n @property (retain) id property_e; /* { dg-error \"redeclaration of property .property_e.\" } */\n-   \t\t\t          /* { dg-message \"originally specified here\" \"\" { target *-*-* } 26 } */\n+   \t\t\t          /* { dg-message \"originally specified here\" \"\" { target *-*-* } property_e_first } */\n @end\n \n @property id test; /* { dg-error \"misplaced .@property. Objective-C.. construct\" } */"}, {"sha": "6a12c7fdb7f12b999089819c0cec6a3cb51904b7", "filename": "gcc/testsuite/obj-c++.dg/property/dynamic-2.mm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdynamic-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdynamic-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdynamic-2.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -38,8 +38,8 @@ @interface AnotherTest : MyRootClass\n @end\n \n @implementation AnotherTest\n-@dynamic one;\n+@dynamic one; /* { dg-line dynamic_one_first } */\n @dynamic one; /* { dg-error \"property .one. already specified in .@dynamic.\" } */\n-              /* { dg-message \"originally specified here\" \"\" { target *-*-* } 41 } */\n+              /* { dg-message \"originally specified here\" \"\" { target *-*-* } dynamic_one_first } */\n @dynamic three; /* { dg-error \"no declaration of property .three. found in the interface\" } */\n @end"}, {"sha": "cc9b0689c53680c12caaa9450a0b18e75e08116e", "filename": "gcc/testsuite/obj-c++.dg/property/property-neg-3.mm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-neg-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-neg-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-neg-3.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -8,7 +8,7 @@ @interface Person\n @end\t\n \n @implementation  Person\n-@dynamic firstName;\n+@dynamic firstName;    /* { dg-line firstName_first } */\n @synthesize firstName; /* { dg-error \"property .firstName. already specified in .@dynamic.\" } */\n-                       /* { dg-message \"originally specified here\" \"\" { target *-*-* } 11 } */\n+                       /* { dg-message \"originally specified here\" \"\" { target *-*-* } firstName_first } */\n @end"}, {"sha": "5241b29abbd404045d7704de083f0e8ccad3a598", "filename": "gcc/testsuite/obj-c++.dg/protocol-inheritance-1.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-inheritance-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-inheritance-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-inheritance-1.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -48,7 +48,6 @@ @interface MySubClass2 : MyRootClass <MyProtocol2>\n \n @implementation MySubClass2\n @end /* Warnings here, below.  */\n-\n-/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } 50 } */\n-/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } 50 } */\n-/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } 50 } */\n+/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } .-3 } */"}, {"sha": "74c9174b5de71d6210ee17a252a89472a15ff973", "filename": "gcc/testsuite/obj-c++.dg/protocol-inheritance-2.mm", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-inheritance-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-inheritance-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-inheritance-2.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -37,10 +37,9 @@ @interface MySubClass : MyRootClass <MyProtocol>\n \n @implementation MySubClass\n @end\n-\n-/* { dg-warning \"incomplete implementation of class .MySubClass.\" \"\" { target *-*-* } 39 } */\n-/* { dg-warning \"method definition for .\\\\-method. not found\" \"\" { target *-*-* } 39 } */\n-/* { dg-warning \"class .MySubClass. does not fully implement the .MyProtocol. protocol\" \"\" { target *-*-* } 39 } */\n+/* { dg-warning \"incomplete implementation of class .MySubClass.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-method. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MySubClass. does not fully implement the .MyProtocol. protocol\" \"\" { target *-*-* } .-3 } */\n \n \n /* The subclass instead does not inherit the method method2 (and does\n@@ -51,7 +50,6 @@ @interface MySubClass2 : MyRootClass <MyProtocol2>\n \n @implementation MySubClass2\n @end /* Warnings here, below.  */\n-\n-/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } 53 } */\n-/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } 53 } */\n-/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } 53 } */\n+/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } .-3 } */"}, {"sha": "320d56c5ec13a5cd050bf56abc296a8299784dd9", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-1.mm", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -25,8 +25,9 @@ - (void) foo2;\n \n @implementation Test2\n - (void) foo2\n-  NXLog(\"Hello, world!\"); /* { dg-error \"expected .\\{. before .NXLog.\" } */\n+  NXLog(\"Hello, world!\"); /* { dg-line Test2_foo2_body } */\n+  /* { dg-error \"expected .\\{. before .NXLog.\" \"\" { target *-*-* } Test2_foo2_body } */\n } /* { dg-error \"stray .\\}. between Objective\\\\-C\\\\+\\\\+ methods\" } */\n @end\n \n-/* { dg-error \"expected constructor, destructor, or type conversion before\" \"\" { target *-*-* } 28 } */\n+/* { dg-error \"expected constructor, destructor, or type conversion before\" \"\" { target *-*-* } Test2_foo2_body } */"}, {"sha": "050d81135556f92d8b8a7846452d2d4a799ef503", "filename": "gcc/testsuite/obj-c++.dg/try-catch-13.mm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-13.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-13.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-13.mm?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -9,7 +9,7 @@ @interface TestMyTests\n - (void) testSpoon;\n @end\n \n-extern void some_func (int *);\n+extern void some_func (int *); /* { dg-line some_func_decl } */\n \n @implementation TestMyTests\n - (void) testSpoon {\n@@ -22,7 +22,7 @@ - (void) testSpoon {\n       typeof(q) k = 66;\n       some_func (&j);\n /* { dg-error \"invalid conversion\" \"\" { target *-*-* } .-1 } */ \n-/* { dg-message \"initializing argument\" \"\" { target *-*-* } 12 } */\n+/* { dg-message \"initializing argument\" \"\" { target *-*-* } some_func_decl } */\n       some_func (&k);\n     }\n     @catch (id exc) {\n@@ -39,7 +39,7 @@ - (void) testSpoon {\n /* { dg-error \"invalid conversion\" \"\" { target *-*-* } .-1 } */\n /* The following is disabled as it is already checked above and the testsuites seems \n    to count multiple different identical errors on the same line only once */\n-/*  dg-message \"initializing argument\" \"\" { target *-*-* } 12  */\n+/*  dg-message \"initializing argument\" \"\" { target *-*-* } some_func_decl  */\n     }\n     @catch (id exc) {\n       @throw;\n@@ -54,7 +54,7 @@ - (void) testSpoon {\n /* { dg-error \"invalid conversion\" \"\" { target *-*-* } .-1 } */\n /* The following is disabled as it is already checked above and the testsuites seems \n    to count multiple different identical errors on the same line only once */\n-/*  dg-message \"initializing argument\" \"\" { target *-*-* } 12  */\n+/*  dg-message \"initializing argument\" \"\" { target *-*-* } some_func_decl  */\n       some_func (&k);\n     }\n     @catch (id exc) {"}, {"sha": "0f78e0b1f650db00e07bb36d5e61c57ec540ecd0", "filename": "gcc/testsuite/objc.dg/bitfield-4.m", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fbitfield-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fbitfield-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fbitfield-4.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -9,20 +9,20 @@ @interface Base {\n @end\n \n @interface WithBitfields: Base {\n-  void *isa;\n-  unsigned a: 3;\n+  void *isa;     /* { dg-line WithBitFields_isa } */\n+  unsigned a: 3; /* { dg-line WithBitFields_a } */\n   signed b: 4;\n-  int c: 5;\n+  int c: 5;      /* { dg-line WithBitFields_c } */\n }\n @end\n \n @implementation WithBitfields {\n   char *isa;  /* { dg-error \"conflicting instance variable type .char \\\\*isa.\" } */\n-  /* { dg-error \"previous declaration of .void \\\\*isa.\" \"\" { target *-*-* } 12 } */\n+  /* { dg-error \"previous declaration of .void \\\\*isa.\" \"\" { target *-*-* } WithBitFields_isa } */\n   unsigned a: 5;  /* { dg-error \"conflicting instance variable type .unsigned( int)? a: 5.\" } */\n-  /* { dg-error \"previous declaration of .unsigned( int)? a: 3.\" \"\" { target *-*-* } 13 } */                     \n+  /* { dg-error \"previous declaration of .unsigned( int)? a: 3.\" \"\" { target *-*-* } WithBitFields_a } */\n   signed b: 4;  /* This one is fine. */\n   int c: 3;  /* { dg-error \"conflicting instance variable type .int c: 3.\" } */\n-  /* { dg-error \"previous declaration of .int c: 5.\" \"\" { target *-*-* } 15 } */ \n+  /* { dg-error \"previous declaration of .int c: 5.\" \"\" { target *-*-* } WithBitFields_c } */ \n }\n @end"}, {"sha": "05049373fa4fcac3c0c15db78ae85f545dce82cc", "filename": "gcc/testsuite/objc.dg/class-1.m", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fclass-1.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -1,20 +1,21 @@\n /* Redeclarations of class names.  */\n /* { dg-do compile } */\n \n-typedef int foo;\n+typedef int foo; /* { dg-line foo_def } */\n \n @class foo;  /* { dg-error \"redeclared as different kind of symbol\" } */\n-/* { dg-error \"previous declaration of\" \"\" { target *-*-* } 4 } */\n+/* { dg-error \"previous declaration of\" \"\" { target *-*-* } foo_def } */\n \n-typedef int bar;\n+typedef int bar; /* { dg-line bar_def } */\n \n @interface bar\n @end  /* { dg-error \"redeclared as different kind of symbol\" } */\n-/* { dg-error \"previous declaration of\" \"\" { target *-*-* } 9 } */\n+/* { dg-error \"previous declaration of\" \"\" { target *-*-* } bar_def } */\n \n-int glob;\n+int glob; /* { dg-line glob_def } */\n \n @implementation glob\n-@end  /* { dg-error \"redeclared as different kind of symbol\" } */\n-/* { dg-error \"previous declaration of\" \"\" { target *-*-* } 15 } */\n-/* { dg-warning \"annot find interface declaration\" \"\" { target *-*-* } 18 } */\n+@end /* { dg-line glob_impl_end } */\n+/* { dg-error \"redeclared as different kind of symbol\" \"\" { target *-*-* } glob_impl_end } */\n+/* { dg-error \"previous declaration of\" \"\" { target *-*-* } glob_def } */\n+/* { dg-warning \"annot find interface declaration\" \"\" { target *-*-* } glob_impl_end } */"}, {"sha": "60198803e661d1b5aab5f19f7fde9eb5150cc11e", "filename": "gcc/testsuite/objc.dg/method-11.m", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-11.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-11.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-11.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -9,25 +9,25 @@\n #include <objc/objc.h>\n \n @interface Object1\n-- (void)initWithData:(Object1 *)data;\n+- (void)initWithData:(Object1 *)data; /* { dg-line Object1_initWithData } */\n @end\n \n @interface Object2\n-- (id)initWithData:(Object1 *)data;\n+- (id)initWithData:(Object1 *)data; /* { dg-line Object2_initWithData } */\n @end\n \n @interface Object3\n-- (id)initWithData:(Object2 *)data;\n+- (id)initWithData:(Object2 *)data; /* { dg-line Object3_initWithData } */\n @end\n \n void foo(void) {\n   id obj1, obj2 = 0;\n-  obj2 = [obj1 initWithData: obj2];\n+  obj2 = [obj1 initWithData: obj2]; /* { dg-line initWithData_message } */\n      /* { dg-warning \"multiple methods named .\\\\-initWithData:. found\" \"\" { target *-*-* } .-1 } */\n-     /* { dg-message \"using .\\\\-\\\\(void\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } 12 } */\n-     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } 16 } */\n-     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object2 \\\\*\\\\)data.\" \"\" { target *-*-* } 20 } */\n+     /* { dg-message \"using .\\\\-\\\\(void\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } Object1_initWithData } */\n+     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object1 \\\\*\\\\)data.\" \"\" { target *-*-* } Object2_initWithData } */\n+     /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(Object2 \\\\*\\\\)data.\" \"\" { target *-*-* } Object3_initWithData } */\n \n      /* The following error is a consequence of picking the \"wrong\" method signature.  */\n-     /* { dg-error \"void value not ignored as it ought to be\" \"\" { target *-*-* } 25 } */\n+     /* { dg-error \"void value not ignored as it ought to be\" \"\" { target *-*-* } initWithData_message } */\n }"}, {"sha": "35676b18f0675d3e7b50f9087a4e68c8c817adfd", "filename": "gcc/testsuite/objc.dg/method-6.m", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -14,21 +14,21 @@\n #endif\n \n @interface Base\n-- (unsigned)port;\n+- (unsigned)port; /* { dg-line Base_port } */\n @end\n \n @interface Derived: Base\n - (OBJECT *)port;\n-+ (Protocol *)port;\n++ (Protocol *)port; /* { dg-line Derived_port_last } */\n - (id)starboard;\n @end\n \n void foo(void) {\n   Class receiver;\n \n   [receiver port];  /* { dg-warning \"multiple methods named .\\\\+port. found\" } */\n-       /* { dg-message \"using .\\\\-\\\\(unsigned( int)?\\\\)port.\" \"\" { target *-*-* } 17 } */\n-       /* { dg-message \"also found .\\\\+\\\\(Protocol \\\\*\\\\)port.\" \"\" { target *-*-* } 22 } */\n+       /* { dg-message \"using .\\\\-\\\\(unsigned( int)?\\\\)port.\" \"\" { target *-*-* } Base_port } */\n+       /* { dg-message \"also found .\\\\+\\\\(Protocol \\\\*\\\\)port.\" \"\" { target *-*-* } Derived_port_last } */\n \n   [receiver starboard];  /* { dg-warning \"no .\\\\+starboard. method found\" } */\n        /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } .-1 } */"}, {"sha": "a5957aedbaa3b0bc2af02aaae88d70b3a8d9c255", "filename": "gcc/testsuite/objc.dg/method-7.m", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-7.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-7.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-7.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -7,11 +7,11 @@\n #include \"../objc-obj-c++-shared/TestsuiteObject.h\"\n \n @interface Class1\n-- (void)setWindow:(TestsuiteObject *)wdw;\n+- (void)setWindow:(TestsuiteObject *)wdw; /* { dg-line Class1_setWindow } */\n @end\n \n @interface Class2\n-- (void)setWindow:(Class1 *)window;\n+- (void)setWindow:(Class1 *)window;       /* { dg-line Class2_setWindow } */\n @end\n \n id foo(void) {\n@@ -22,8 +22,8 @@ id foo(void) {\n   /* { dg-warning \"will be assumed to return .id. and accept\" \"\" { target *-*-* } .-2 } */\n   /* { dg-warning \".\\.\\.\\.. as arguments\" \"\" { target *-*-* } .-3 } */\n   [obj2 setWindow:nil]; /* { dg-warning \"multiple methods named .\\\\-setWindow:. found\" } */\n-  /* { dg-message \"using .\\\\-\\\\(void\\\\)setWindow:\\\\(TestsuiteObject \\\\*\\\\)wdw.\" \"\" { target *-*-* } 10 } */\n-  /* { dg-message \"also found .\\\\-\\\\(void\\\\)setWindow:\\\\(Class1 \\\\*\\\\)window.\" \"\" { target *-*-* } 14 } */\n+  /* { dg-message \"using .\\\\-\\\\(void\\\\)setWindow:\\\\(TestsuiteObject \\\\*\\\\)wdw.\" \"\" { target *-*-* } Class1_setWindow } */\n+  /* { dg-message \"also found .\\\\-\\\\(void\\\\)setWindow:\\\\(Class1 \\\\*\\\\)window.\" \"\" { target *-*-* } Class2_setWindow } */\n \n   return obj;\n }"}, {"sha": "ce2d19b2cd170ef66e8c87f75ed711be1ee80748", "filename": "gcc/testsuite/objc.dg/method-9.m", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-9.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-9.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-9.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -8,15 +8,15 @@ when method lookup succeeds (see also method-7.m).  */\n #include \"../objc-obj-c++-shared/TestsuiteObject.h\"\n \n @protocol MyObject\n-- (id)initWithData:(TestsuiteObject *)data;\n+- (id)initWithData:(TestsuiteObject *)data; /* { dg-line MyObject_initWithData } */\n @end\n \n @protocol SomeOther\n-- (id)initWithData:(int)data;\n+- (id)initWithData:(int)data; /* { dg-line SomeOther_initWithData } */\n @end\n \n @protocol MyCoding\n-- (id)initWithData:(id<MyObject, MyCoding>)data;\n+- (id)initWithData:(id<MyObject, MyCoding>)data; /* { dg-line MyCoding_initWithData } */\n @end\n \n @interface NTGridDataObject: TestsuiteObject <MyCoding>\n@@ -32,14 +32,14 @@ - (id)initWithData:(id<MyObject, MyCoding>)data {\n }\n + (NTGridDataObject*)dataObject:(id<MyObject, MyCoding>)data\n {\n-    NTGridDataObject *result = [[NTGridDataObject alloc] initWithData:data];\n+  NTGridDataObject *result = [[NTGridDataObject alloc] initWithData:data]; /* { dg-line initWithData_message } */\n     /* { dg-warning \"multiple methods named .\\\\-initWithData:. found\" \"\" { target *-*-* } .-1 } */\n-    /* { dg-message \"using .\\\\-\\\\(id\\\\)initWithData:\\\\(TestsuiteObject \\\\*\\\\)data.\" \"\" { target *-*-* } 11 } */\n-    /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(id <MyObject, MyCoding>\\\\)data.\" \"\" { target *-*-* } 19 } */\n-    /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(int\\\\)data.\" \"\" { target *-*-* } 15 } */\n+    /* { dg-message \"using .\\\\-\\\\(id\\\\)initWithData:\\\\(TestsuiteObject \\\\*\\\\)data.\" \"\" { target *-*-* } MyObject_initWithData } */\n+    /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(id <MyObject, MyCoding>\\\\)data.\" \"\" { target *-*-* } MyCoding_initWithData } */\n+    /* { dg-message \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(int\\\\)data.\" \"\" { target *-*-* } SomeOther_initWithData } */\n \n     /* The following warning is a consequence of picking the \"wrong\" method signature.  */\n-    /* { dg-warning \"passing argument 1 of .initWithData:. from distinct Objective\\\\-C type\" \"\" { target *-*-* } 35 } */\n+    /* { dg-warning \"passing argument 1 of .initWithData:. from distinct Objective\\\\-C type\" \"\" { target *-*-* } initWithData_message } */\n     return result;\n }\n @end"}, {"sha": "05e1a258183c9a8df6e3ce0d354917d4a726c9fd", "filename": "gcc/testsuite/objc.dg/missing-proto-3.m", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmissing-proto-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fmissing-proto-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmissing-proto-3.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -19,8 +19,7 @@ +(Class)class\n   return self;\n }\n @end\n-\n-/* { dg-warning \"incomplete implementation of class .MyClass.\" \"\" { target *-*-* } 21 } */\n-/* { dg-warning \"method definition for .\\\\-missingMethod1. not found\" \"\" { target *-*-* } 21 } */\n-/* { dg-warning \"class .MyClass. does not fully implement the .DefinedProtocol. protocol\" \"\" { target *-*-* } 21 } */\n+/* { dg-warning \"incomplete implementation of class .MyClass.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-missingMethod1. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MyClass. does not fully implement the .DefinedProtocol. protocol\" \"\" { target *-*-* } .-3 } */\n "}, {"sha": "3dd59f9948d639a94589bed2a437a6ffafa8c03d", "filename": "gcc/testsuite/objc.dg/naming-2.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-2.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -6,7 +6,7 @@ @interface Foo\n @end\n float Foo;  /* { dg-error \"parse error|syntax error|expected|redeclaration\" } */\n \n-double Bar;\n+double Bar; /* { dg-line Bar_decl } */\n @interface Bar\n @end  /* { dg-error \"redeclared as different kind of symbol\" } */\n-/* { dg-error \"previous declaration of\" \"\" { target *-*-* } 9 } */\n+/* { dg-error \"previous declaration of\" \"\" { target *-*-* } Bar_decl } */"}, {"sha": "d61373a95392d62f5f0d1958f5de9c67e77a27a2", "filename": "gcc/testsuite/objc.dg/property/at-property-16.m", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-16.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-16.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-16.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -10,15 +10,15 @@ @interface MyRootClass\n {\n   Class isa;\n }\n-@property (assign) id a;\n-@property (retain) id b;\n-@property int c;\n-@property (nonatomic) int d;\n-@property int e;\n-@property int f;\n-@property int g;\n-@property (readonly) int h;\n-@property (readonly,getter=getMe) int i;\n+@property (assign) id a;     /* { dg-line MyRootClass_property_a } */\n+@property (retain) id b;     /* { dg-line MyRootClass_property_b } */\n+@property int c;             /* { dg-line MyRootClass_property_c } */\n+@property (nonatomic) int d; /* { dg-line MyRootClass_property_d } */\n+@property int e;             /* { dg-line MyRootClass_property_e } */\n+@property int f;             /* { dg-line MyRootClass_property_f } */\n+@property int g;             /* { dg-line MyRootClass_property_g } */\n+@property (readonly) int h; \n+@property (readonly,getter=getMe) int i; /* { dg-line MyRootClass_property_i } */\n @end\n \n @interface MyClass : MyRootClass\n@@ -35,21 +35,21 @@ @interface MyClass : MyRootClass\n \n @interface MyClass2 : MyRootClass\n @property (retain) id a;         /* { dg-warning \"assign semantics attributes of property .a. conflict with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 13 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_a } */\n @property (assign) id b;         /* { dg-warning \"assign semantics attributes of property .b. conflict with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 14 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_b } */\n @property (nonatomic) int c;     /* { dg-warning \".nonatomic. attribute of property .c. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 15 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_c } */\n @property int d;                 /* { dg-warning \".nonatomic. attribute of property .d. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 16 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_d } */\n @property (setter=setX:) int e;  /* { dg-warning \".setter. attribute of property .e. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 17 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_e } */\n @property (getter=x) int f;      /* { dg-warning \".getter. attribute of property .f. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 18 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_f } */\n @property (readonly) int g;      /* { dg-warning \".readonly. attribute of property .g. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 19 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_g } */\n @property (readwrite) int h;     /* Ok */\n @property (readonly) int i;      /* { dg-warning \".getter. attribute of property .i. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 21 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_i } */\n @end\n "}, {"sha": "20edb9b4d51739d444f6d2a9a3b749cb4e94ce37", "filename": "gcc/testsuite/objc.dg/property/at-property-18.m", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-18.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-18.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-18.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -13,35 +13,35 @@ @interface MyRootClass\n {\n   Class isa;\n }\n-@property (assign) id a;\n-@property (retain) id b;\n-@property int c;\n-@property (nonatomic) int d;\n-@property int e;\n-@property int f;\n-@property int g;\n+@property (assign) id a;     /* { dg-line MyRootClass_property_a } */\n+@property (retain) id b;     /* { dg-line MyRootClass_property_b } */\n+@property int c;             /* { dg-line MyRootClass_property_c } */\n+@property (nonatomic) int d; /* { dg-line MyRootClass_property_d } */\n+@property int e;             /* { dg-line MyRootClass_property_e } */\n+@property int f;             /* { dg-line MyRootClass_property_f } */\n+@property int g;             /* { dg-line MyRootClass_property_g } */\n @property (readonly) int h;\n-@property (readonly,getter=getMe) int i;\n+@property (readonly,getter=getMe) int i; /* { dg-line MyRootClass_property_i } */\n @property (nonatomic) float j;\n @end\n \n @interface MyRootClass (Category)\n @property (retain) id a;         /* { dg-warning \"assign semantics attributes of property .a. conflict with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 16 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_a } */\n @property (assign) id b;         /* { dg-warning \"assign semantics attributes of property .b. conflict with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 17 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_b } */\n @property (nonatomic) int c;     /* { dg-warning \".nonatomic. attribute of property .c. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 18 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_c } */\n @property int d;                 /* { dg-warning \".nonatomic. attribute of property .d. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 19 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_d } */\n @property (setter=setX:) int e;  /* { dg-warning \".setter. attribute of property .e. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 20 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_e } */\n @property (getter=x) int f;      /* { dg-warning \".getter. attribute of property .f. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 21 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_f } */\n @property (readonly) int g;      /* { dg-warning \".readonly. attribute of property .g. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 22 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_g } */\n @property (readwrite) int h;     /* Ok */\n @property (readonly) int i;      /* { dg-warning \".getter. attribute of property .i. conflicts with previous declaration\" } */\n-                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } 24 } */\n+                                 /* { dg-message \"originally specified here\" \"\" { target *-*-* } MyRootClass_property_i } */\n @property (nonatomic) float j;   /* Ok */\n @end"}, {"sha": "f5f4988d478f6771200c79e70c5b054dc181f3cc", "filename": "gcc/testsuite/objc.dg/property/at-property-25.m", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-25.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-25.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-25.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -79,9 +79,8 @@ @interface MySubClass4 : MyRootClass <count2>\n \n @implementation MySubClass4\n @end\n-\n-/* { dg-warning \"incomplete implementation of class\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"method definition for ..setCount1:. not found\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"method definition for ..count1. not found\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"method definition for ..count2. not found\" \"\" { target *-*-* } 81 } */\n-/* { dg-warning \"class .MySubClass4. does not fully implement the .count2. protocol\" \"\" { target *-*-* } 81 } */\n+/* { dg-warning \"incomplete implementation of class\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for ..setCount1:. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"method definition for ..count1. not found\" \"\" { target *-*-* } .-3 } */\n+/* { dg-warning \"method definition for ..count2. not found\" \"\" { target *-*-* } .-4 } */\n+/* { dg-warning \"class .MySubClass4. does not fully implement the .count2. protocol\" \"\" { target *-*-* } .-5 } */"}, {"sha": "1267df318ede19a663024e4f562a31fb3ac0b645", "filename": "gcc/testsuite/objc.dg/property/at-property-5.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fat-property-5.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -23,12 +23,12 @@ @interface MyRootClass\n @property (retain) int property_c; /* { dg-error \".retain. attribute is only valid for Objective-C objects\" } */\n @property (copy) int property_d; /* { dg-error \".copy. attribute is only valid for Objective-C objects\" } */\n \n-@property (retain) id property_e;\n+@property (retain) id property_e; /* { dg-line property_e_first } */\n @property (retain) id property_f;\n @property (retain) id property_g;\n @property (retain) id property_h;\n @property (retain) id property_e; /* { dg-error \"redeclaration of property .property_e.\" } */\n-   \t\t\t          /* { dg-message \"originally specified here\" \"\" { target *-*-* } 26 } */\n+   \t\t\t          /* { dg-message \"originally specified here\" \"\" { target *-*-* } property_e_first } */\n @end\n \n @property id test; /* { dg-error \"property declaration not in .interface or .protocol context\" } */"}, {"sha": "9866a3942ef18765e46bfe1cedfcf4fcc183ad80", "filename": "gcc/testsuite/objc.dg/property/dynamic-2.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdynamic-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdynamic-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdynamic-2.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -38,8 +38,8 @@ @interface AnotherTest : MyRootClass\n @end\n \n @implementation AnotherTest\n-@dynamic one;\n+@dynamic one; /* { dg-line dynamic_one_first } */\n @dynamic one; /* { dg-error \"property .one. already specified in .@dynamic.\" } */\n-              /* { dg-message \"originally specified here\" \"\" { target *-*-* } 41 } */\n+              /* { dg-message \"originally specified here\" \"\" { target *-*-* } dynamic_one_first } */\n @dynamic three; /* { dg-error \"no declaration of property .three. found in the interface\" } */\n @end"}, {"sha": "1902018d5b67550d43ffec5834aab56ab9b70c15", "filename": "gcc/testsuite/objc.dg/property/property-neg-3.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty-neg-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty-neg-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fproperty-neg-3.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -8,7 +8,7 @@ @interface Person\n @end\t\n \n @implementation  Person\n-@dynamic firstName;\n+@dynamic firstName;    /* { dg-line dynamic_firstName } */\n @synthesize firstName; /* { dg-error \"property .firstName. already specified in .@dynamic.\" } */\n-                       /* { dg-message \"originally specified here\" \"\" { target *-*-* } 11 } */\n+                       /* { dg-message \"originally specified here\" \"\" { target *-*-* } dynamic_firstName } */\n @end"}, {"sha": "5241b29abbd404045d7704de083f0e8ccad3a598", "filename": "gcc/testsuite/objc.dg/protocol-inheritance-1.m", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-1.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -48,7 +48,6 @@ @interface MySubClass2 : MyRootClass <MyProtocol2>\n \n @implementation MySubClass2\n @end /* Warnings here, below.  */\n-\n-/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } 50 } */\n-/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } 50 } */\n-/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } 50 } */\n+/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } .-3 } */"}, {"sha": "74c9174b5de71d6210ee17a252a89472a15ff973", "filename": "gcc/testsuite/objc.dg/protocol-inheritance-2.m", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5be38bc30107969515bed284c65e39efe978af2/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-inheritance-2.m?ref=b5be38bc30107969515bed284c65e39efe978af2", "patch": "@@ -37,10 +37,9 @@ @interface MySubClass : MyRootClass <MyProtocol>\n \n @implementation MySubClass\n @end\n-\n-/* { dg-warning \"incomplete implementation of class .MySubClass.\" \"\" { target *-*-* } 39 } */\n-/* { dg-warning \"method definition for .\\\\-method. not found\" \"\" { target *-*-* } 39 } */\n-/* { dg-warning \"class .MySubClass. does not fully implement the .MyProtocol. protocol\" \"\" { target *-*-* } 39 } */\n+/* { dg-warning \"incomplete implementation of class .MySubClass.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-method. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MySubClass. does not fully implement the .MyProtocol. protocol\" \"\" { target *-*-* } .-3 } */\n \n \n /* The subclass instead does not inherit the method method2 (and does\n@@ -51,7 +50,6 @@ @interface MySubClass2 : MyRootClass <MyProtocol2>\n \n @implementation MySubClass2\n @end /* Warnings here, below.  */\n-\n-/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } 53 } */\n-/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } 53 } */\n-/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } 53 } */\n+/* { dg-warning \"incomplete implementation of class .MySubClass2.\" \"\" { target *-*-* } .-1 } */\n+/* { dg-warning \"method definition for .\\\\-method2. not found\" \"\" { target *-*-* } .-2 } */\n+/* { dg-warning \"class .MySubClass2. does not fully implement the .MyProtocol2. protocol\" \"\" { target *-*-* } .-3 } */"}]}