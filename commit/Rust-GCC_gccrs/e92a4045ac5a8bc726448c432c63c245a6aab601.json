{"sha": "e92a4045ac5a8bc726448c432c63c245a6aab601", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkyYTQwNDVhYzVhOGJjNzI2NDQ4YzQzMmM2M2MyNDVhNmFhYjYwMQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-05-01T22:57:59Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-05-01T22:57:59Z"}, "message": "std_bitset.h: Fix doxygen comments.\n\n2002-05-01  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* include/std/std_bitset.h:  Fix doxygen comments.\n\t* docs/html/documentation.html:  Minor tweaks for 3.1.\n\t* docs/html/27_io/howto.html:  Likewise.\n\t* docs/html/ext/howto.html:  Likewise, mention stdio_filebuf.\n\t* docs/html/faq/index.html:  Likewise.\n\t* docs/html/faq/index.txt:  Regenerated.\n\nFrom-SVN: r53025", "tree": {"sha": "921bb6c536974b82a62c20a56ca6bfd90f5d4d8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/921bb6c536974b82a62c20a56ca6bfd90f5d4d8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e92a4045ac5a8bc726448c432c63c245a6aab601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92a4045ac5a8bc726448c432c63c245a6aab601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92a4045ac5a8bc726448c432c63c245a6aab601", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92a4045ac5a8bc726448c432c63c245a6aab601/comments", "author": null, "committer": null, "parents": [{"sha": "9875ea057d92d0efcc232b6e1595d7c4c48974e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9875ea057d92d0efcc232b6e1595d7c4c48974e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9875ea057d92d0efcc232b6e1595d7c4c48974e4"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "045cb8353f353258567d08792aefd10861ee8d07", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -1,3 +1,12 @@\n+2002-05-01  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* include/std/std_bitset.h:  Fix doxygen comments.\n+\t* docs/html/documentation.html:  Minor tweaks for 3.1.\n+\t* docs/html/27_io/howto.html:  Likewise.\n+\t* docs/html/ext/howto.html:  Likewise, mention stdio_filebuf.\n+\t* docs/html/faq/index.html:  Likewise.\n+\t* docs/html/faq/index.txt:  Regenerated.\n+\n 2002-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/6533"}, {"sha": "bf235560dfa3678db3bbfa7b19115418b45d641b", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -377,7 +377,8 @@ <h2><a name=\"6\">Deriving a stream buffer</a></h2>\n \treturn 0;\n     }\n    </pre>\n-      Try it yourself!\n+      Try it yourself!  More examples can be found in 3.1.x code, in\n+      <code>include/ext/*_filebuf.h</code>.\n    </p>\n \n <hr>\n@@ -432,8 +433,8 @@ <h2><a name=\"8\">Pathetic performance?  Ditch C.</a></h2>\n       The upside is that correctness is ensured.  The downside is that\n       writing through <code>cout</code> can quite easily lead to awful\n       performance when the C++ I/O library is layered on top of the C I/O\n-      library (as it is for 3.0 by default).  Some patches are in the\n-      works which should improve the situation for 3.1.\n+      library (as it is for 3.0 by default).  Some patches have been applied\n+      which improve the situation for 3.1.\n    </p>\n    <p>However, the C and C++ standard streams only need to be kept in sync\n       when both libraries' facilities are in use.  If your program only uses\n@@ -447,7 +448,7 @@ <h2><a name=\"8\">Pathetic performance?  Ditch C.</a></h2>\n    </p>\n    <p>You must do this before performing any I/O via the C++ stream objects.\n       Once you call this, the C++ streams will operate independently of the\n-      (unused) C streams.  For GCC 3.0, this means that <code>cout</code> and\n+      (unused) C streams.  For GCC 3.x, this means that <code>cout</code> and\n       company will become fully buffered on their own.\n    </p>\n    <p>Note, by the way, that the synchronization requirement only applies to"}, {"sha": "d5fc8ac6f82b82cb6e0397e6a0275f126e14e192", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -29,11 +29,11 @@ <h2><a name=\"4\">Source Documentation</a></h2>\n </p>\n <p>The available user-level collections are also viewable online:\n    <ul>\n-   <li><a href=\"libstdc++-doxygen-3.0/index.html\">docs for the 3.0 release</a>\n+   <li><a href=\"libstdc++-doxygen-3.1/index.html\">docs for the 3.1 release</a>\n    <li><a href=\"libstdc++-html-USERS-3.0.96/index.html\">docs for the most\n        recent libstdc++ snapshot (3.0.96)</a>\n    <li><a href=\"latest-doxygen/index.html\">&quot;the latest collection&quot;</a>\n-       (snapshot collection or later; see the date on the first page)\n+       (usually the snapshot collection or later; see the date on the first page)\n    </ul>\n    Other collections (man pages, maintainer docs) are only available on the\n    FTP sites.\n@@ -52,9 +52,8 @@ <h2><a name=\"2\">Configuring, Building, Installing</a></h2>\n \n <hr>\n <h2><a name=\"1\">Introductory notes for libstdc++</a></h2>\n-   <p>This is a short list of text files pertaining to this\n-   implementation of ISO 14882. A brief description follows the name\n-   of the file.\n+   <p>This is a short list of text files pertaining to this implementation of\n+      ISO 14882. A brief description follows the name of the file.\n    </p>\n    <p>\n       <ul>"}, {"sha": "cbea1f583958cd8c9701a98871280b9646a48096", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -119,7 +119,7 @@ <h2><a name=\"2\">Added members and types</a></h2>\n          <a href=\"sgiexts.html\">their own page</a>.  Since the SGI STL is no\n          longer actively maintained, we will try and keep this code working\n          ourselves.</li>\n-     <li><code>filebuf</code>s have another ctor with this signature:<br>\n+     <li>3.0.x <code>filebuf</code>s have another ctor with this signature:<br>\n <code>basic_filebuf(__c_file_type*, ios_base::openmode, int_type);</code>\n          <br>This comes in very handy in a number of places, such as\n          attaching Unix sockets, pipes, and anything else which uses file\n@@ -143,6 +143,10 @@ <h2><a name=\"2\">Added members and types</a></h2>\n          library cannot track what you do on your own with a file descriptor,\n          so if you perform any I/O directly, don't expect the library to be\n          aware of it.\n+     <li>Beginning with 3.1, the extra <code>filebuf</code> constructor and\n+         the <code>fd()</code> function were removed from the standard\n+         filebuf.  Instead, <code>&lt;ext/stdio_filebuf.h&gt;</code> contains\n+         a derived class called <code>__gnu_cxx::stdio_filebuf</code>.\n     </ul>\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n@@ -226,7 +230,7 @@ <h3>Available allocators in namespace std</h3>\n       (If you decide to be unportable, then you're free do do what you want,\n       but it's not our fault if stuff breaks.)  They are presented here for\n       information for maintainers and contributors in addition to users, but\n-      we will probably make them available for users in 3.1 somehow.\n+      we will probably make them available for users in 3.2 somehow.\n    </p>\n    <p>These classes are always available:\n      <ul>"}, {"sha": "149d3712e83dd92c24fa9254d5c1b9afd8dfbd69", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -142,7 +142,7 @@ <h2><a name=\"1_2\">1.2 Why should I use libstdc++?</a></h2>\n          has recently been taken over by the \n          <a href=\"http://gcc.gnu.org/\">GCC team</a>.  All of\n          the rapid development and near-legendary\n-         <a href=\"http://gcc.gnu.org/gcc-2.95/buildstat.html\">portability</a>\n+         <a href=\"http://gcc.gnu.org/gcc-3.0/buildstat.html\">portability</a>\n          that are the hallmarks of an open-source project are being\n          applied to libstdc++.\n       </p>\n@@ -617,7 +617,8 @@ <h2><a name=\"4_4\">4.4 Things in libstdc++ that only look like bugs</a></h2>\n            then you will suddenly be faced with huge numbers of ambiguity\n            errors.  This was discussed on the -v3 list; Nathan Myers\n            <a href=\"http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\">sums\n-           things up here</a>.\n+           things up here</a>.  The collisions with vector/string iterator\n+           types have been fixed for 3.1.  <!-- more links to email here -->\n         </p>\n       </a>\n       <a name=\"4_4_interface\"><h3>The g++-3 headers are\n@@ -758,7 +759,7 @@ <h2><a name=\"5_2\">5.2 What's next after libstdc++-v3?</a></h2>\n          expansion in container classes and buffer usage in synchronized\n          stream objects.\n       </p>\n-      <li><p>An ABI for libstdc++ will eventually be developed, so that\n+      <li><p>An ABI for libstdc++ is being developed, so that\n          multiple binary-incompatible copies of the library can be replaced\n          with a single backwards-compatible library, like libgcc_s.so is.\n       </p>"}, {"sha": "91a510fed7044c5b8992abefc1dea04515de6e57", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -501,7 +501,8 @@ New in 3.0.97:\n    same namespace as other comparison functions (e.g., 'using' them and\n    the <iterator> header), then you will suddenly be faced with huge\n    numbers of ambiguity errors. This was discussed on the -v3 list;\n-   Nathan Myers [79]sums things up here.\n+   Nathan Myers [79]sums things up here. The collisions with\n+   vector/string iterator types have been fixed for 3.1.\n \n   The g++-3 headers are not ours\n \n@@ -615,9 +616,9 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        already underway for post-3.0 releases, starting with memory\n        expansion in container classes and buffer usage in synchronized\n        stream objects.\n-    3. An ABI for libstdc++ will eventually be developed, so that\n-       multiple binary-incompatible copies of the library can be replaced\n-       with a single backwards-compatible library, like libgcc_s.so is.\n+    3. An ABI for libstdc++ is being developed, so that multiple\n+       binary-incompatible copies of the library can be replaced with a\n+       single backwards-compatible library, like libgcc_s.so is.\n     4. The current libstdc++ contains extensions to the Library which\n        must be explicitly requested by client code (for example, the hash\n        tables from SGI). Other extensions may be added to libstdc++-v3 if\n@@ -825,7 +826,7 @@ References\n   50. ../faq/index.html#4_4_interface\n   51. ../17_intro/DESIGN\n   52. http://gcc.gnu.org/\n-  53. http://gcc.gnu.org/gcc-2.95/buildstat.html\n+  53. http://gcc.gnu.org/gcc-3.0/buildstat.html\n   54. http://gcc.gnu.org/libstdc++/\n   55. http://gcc.gnu.org/libstdc++/download.html\n   56. http://gcc.gnu.org/libstdc++/"}, {"sha": "0945c90f5fca6da2efbc0500705c6c082baf09ab", "filename": "libstdc++-v3/include/std/std_bitset.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92a4045ac5a8bc726448c432c63c245a6aab601/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h?ref=e92a4045ac5a8bc726448c432c63c245a6aab601", "patch": "@@ -480,7 +480,8 @@ namespace std\n    *\n    *  @ingroup Containers\n    *\n-   *  Meets the requirements of a <a href=\"tables.html#65\">container</a>.\n+   *  (Note that %bitset does @e not meet the formal requirements of a\n+   *  <a href=\"tables.html#65\">container</a>.  Mainly, it lacks iterators.)\n    *\n    *  The template argument, @a _Nb, may be any nonzero number of type\n    *  size_t.\n@@ -973,6 +974,7 @@ namespace std\n \n     /**\n      *  @brief  Finds the index of the first \"on\" bit.\n+     *  @return  The index of the first bit set, or size() if not found.\n      *  @ingroup SGIextensions\n      *  @sa  _Find_next\n     */\n@@ -982,6 +984,7 @@ namespace std\n \n     /**\n      *  @brief  Finds the index of the next \"on\" bit after prev.\n+     *  @return  The index of the next bit set, or size() if not found.\n      *  @param  prev  Where to start searching.\n      *  @ingroup SGIextensions\n      *  @sa  _Find_first"}]}