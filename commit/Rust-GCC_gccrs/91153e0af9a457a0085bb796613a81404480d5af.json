{"sha": "91153e0af9a457a0085bb796613a81404480d5af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExNTNlMGFmOWE0NTdhMDA4NWJiNzk2NjEzYTgxNDA0NDgwZDVhZg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-10-02T16:41:35Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-10-02T16:41:35Z"}, "message": "ipa-cp: Add dumping of overall_size after cloning\n\nWhen experimenting with IPA-CP parameters, especially when looking\ninto exchange2_r, it has been very useful to know what the value of\noverall_size is at different stages of the decision process.  This\npatch therefore adds it to the generated dumps.\n\ngcc/ChangeLog:\n\n2020-09-07  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-cp.c (estimate_local_effects): Add overeall_size to dumped\n\tstring.\n\t(decide_about_value): Add dumping new overall_size.", "tree": {"sha": "5bd9fe1369c50bc470e4181e5a02d472ba61d01c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bd9fe1369c50bc470e4181e5a02d472ba61d01c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91153e0af9a457a0085bb796613a81404480d5af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91153e0af9a457a0085bb796613a81404480d5af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91153e0af9a457a0085bb796613a81404480d5af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91153e0af9a457a0085bb796613a81404480d5af/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67ce9099bc953f22e6c9e9ee4c64329fdb08286a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ce9099bc953f22e6c9e9ee4c64329fdb08286a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67ce9099bc953f22e6c9e9ee4c64329fdb08286a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "12acf24c553b575684776de74d5c37e5209014a4", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91153e0af9a457a0085bb796613a81404480d5af/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91153e0af9a457a0085bb796613a81404480d5af/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=91153e0af9a457a0085bb796613a81404480d5af", "patch": "@@ -3517,7 +3517,8 @@ estimate_local_effects (struct cgraph_node *node)\n \n \t      if (dump_file)\n \t\tfprintf (dump_file, \"     Decided to specialize for all \"\n-\t\t\t \"known contexts, growth deemed beneficial.\\n\");\n+\t\t\t \"known contexts, growth (to %li) deemed \"\n+\t\t\t \"beneficial.\\n\", overall_size);\n \t    }\n \t  else if (dump_file && (dump_flags & TDF_DETAILS))\n \t    fprintf (dump_file, \"  Not cloning for all contexts because \"\n@@ -5506,6 +5507,9 @@ decide_about_value (struct cgraph_node *node, int index, HOST_WIDE_INT offset,\n   val->spec_node = create_specialized_node (node, known_csts, known_contexts,\n \t\t\t\t\t    aggvals, callers);\n   overall_size += val->local_size_cost;\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    fprintf (dump_file, \"     overall size reached %li\\n\",\n+\t     overall_size);\n \n   /* TODO: If for some lattice there is only one other known value\n      left, make a special node for it too. */"}]}