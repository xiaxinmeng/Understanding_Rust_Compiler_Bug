{"sha": "42ae51f40ec3816094cc48b6e46623d1701f98d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhZTUxZjQwZWMzODE2MDk0Y2M0OGI2ZTQ2NjIzZDE3MDFmOThkNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-09-12T19:25:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-12T19:25:39Z"}, "message": "mips.c (mips16e_save_restore_reg): Add a reg_parm_p argument.\n\ngcc/\n\t* config/mips/mips.c (mips16e_save_restore_reg): Add a reg_parm_p\n\targument.\n\t(mips16e_build_save_restore): Update accordingly.\n\nFrom-SVN: r178793", "tree": {"sha": "98c6a9fe26fa7bee9171d2187ff16c6889e3cd1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98c6a9fe26fa7bee9171d2187ff16c6889e3cd1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42ae51f40ec3816094cc48b6e46623d1701f98d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ae51f40ec3816094cc48b6e46623d1701f98d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ae51f40ec3816094cc48b6e46623d1701f98d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ae51f40ec3816094cc48b6e46623d1701f98d7/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8580138b04cb4f8167a7dd2f7240479a5d45ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8580138b04cb4f8167a7dd2f7240479a5d45ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8580138b04cb4f8167a7dd2f7240479a5d45ffa"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "29c86fb984d1467f9533c76470df72a2412ba08d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ae51f40ec3816094cc48b6e46623d1701f98d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ae51f40ec3816094cc48b6e46623d1701f98d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42ae51f40ec3816094cc48b6e46623d1701f98d7", "patch": "@@ -1,3 +1,9 @@\n+2011-09-12  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips16e_save_restore_reg): Add a reg_parm_p\n+\targument.\n+\t(mips16e_build_save_restore): Update accordingly.\n+\n 2011-09-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/50212"}, {"sha": "a5fed3dc89d7bf3ad8cedebda6c963ec61d98f10", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ae51f40ec3816094cc48b6e46623d1701f98d7/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ae51f40ec3816094cc48b6e46623d1701f98d7/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=42ae51f40ec3816094cc48b6e46623d1701f98d7", "patch": "@@ -8365,20 +8365,22 @@ mips16e_collect_argument_saves (void)\n }\n \n /* Return a move between register REGNO and memory location SP + OFFSET.\n-   Make the move a load if RESTORE_P, otherwise make it a frame-related\n-   store.  */\n+   REG_PARM_P is true if SP + OFFSET belongs to REG_PARM_STACK_SPACE.\n+   Make the move a load if RESTORE_P, otherwise make it a store.  */\n \n static rtx\n-mips16e_save_restore_reg (bool restore_p, HOST_WIDE_INT offset,\n-\t\t\t  unsigned int regno)\n+mips16e_save_restore_reg (bool restore_p, bool reg_parm_p,\n+\t\t\t  HOST_WIDE_INT offset, unsigned int regno)\n {\n   rtx reg, mem;\n \n   mem = gen_frame_mem (SImode, plus_constant (stack_pointer_rtx, offset));\n   reg = gen_rtx_REG (SImode, regno);\n-  return (restore_p\n-\t  ? gen_rtx_SET (VOIDmode, reg, mem)\n-\t  : mips_frame_set (mem, reg));\n+  if (restore_p)\n+    return gen_rtx_SET (VOIDmode, reg, mem);\n+  if (reg_parm_p)\n+    return gen_rtx_SET (VOIDmode, mem, reg);\n+  return mips_frame_set (mem, reg);\n }\n \n /* Return RTL for a MIPS16e SAVE or RESTORE instruction; RESTORE_P says which.\n@@ -8440,7 +8442,8 @@ mips16e_build_save_restore (bool restore_p, unsigned int *mask_ptr,\n   for (i = 0; i < nargs; i++)\n     {\n       offset = top_offset + i * UNITS_PER_WORD;\n-      set = mips16e_save_restore_reg (restore_p, offset, GP_ARG_FIRST + i);\n+      set = mips16e_save_restore_reg (restore_p, true, offset,\n+\t\t\t\t      GP_ARG_FIRST + i);\n       XVECEXP (pattern, 0, n++) = set;\n     }\n \n@@ -8452,7 +8455,7 @@ mips16e_build_save_restore (bool restore_p, unsigned int *mask_ptr,\n       if (BITSET_P (*mask_ptr, regno))\n \t{\n \t  offset -= UNITS_PER_WORD;\n-\t  set = mips16e_save_restore_reg (restore_p, offset, regno);\n+\t  set = mips16e_save_restore_reg (restore_p, false, offset, regno);\n \t  XVECEXP (pattern, 0, n++) = set;\n \t  *mask_ptr &= ~(1 << regno);\n \t}"}]}