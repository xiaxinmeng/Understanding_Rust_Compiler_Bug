{"sha": "57809813b459dc5926d3d2f8d89dba41a73bad1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4MDk4MTNiNDU5ZGM1OTI2ZDNkMmY4ZDg5ZGJhNDFhNzNiYWQxZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-12-22T12:06:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-12-22T12:06:01Z"}, "message": "svr4.h: Remove.\n\n\t* config/svr4.h: Remove.\n\t* system.h (USING_SVR4_H, SVR4_ASM_SPEC): Poison.\n\t* config.gcc, config/bfin/bfin.h, config/cris/cris.h,\n\tconfig/fr30/fr30.h, config/frv/frv.h, config/i386/openbsdelf.h,\n\tconfig/i386/vx-common.h, config/ia64/elf.h, config/ia64/ia64.h,\n\tconfig/ia64/sysv4.h, config/iq2000/iq2000.h, config/m68k/linux.h,\n\tconfig/m68k/m68kelf.h, config/mips/mips.h, config/mips/vxworks.h,\n\tconfig/moxie/moxie.h, config/netbsd-aout.h, config/openbsd.h,\n\tconfig/rs6000/sysv4.h, config/sh/elf.h, config/sh/sh.h,\n\tconfig/sol2.h, config/sparc/sysv4.h, config/stormy16/stormy16.h,\n\tconfig/v850/v850.h, config/vxworks.h: Remove or update comments\n\treferring to svr4.h.\n\nFrom-SVN: r168166", "tree": {"sha": "a92085fa56630420fbd714a86cd4883b809f5416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92085fa56630420fbd714a86cd4883b809f5416"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57809813b459dc5926d3d2f8d89dba41a73bad1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57809813b459dc5926d3d2f8d89dba41a73bad1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57809813b459dc5926d3d2f8d89dba41a73bad1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57809813b459dc5926d3d2f8d89dba41a73bad1e/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e30705627f75583735d7e04d1a162ee4afbe838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e30705627f75583735d7e04d1a162ee4afbe838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e30705627f75583735d7e04d1a162ee4afbe838"}], "stats": {"total": 473, "additions": 40, "deletions": 433}, "files": [{"sha": "a88274e4bcd2d5186372ecfeaf1c11d6884b0765", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -1,3 +1,18 @@\n+2010-12-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/svr4.h: Remove.\n+\t* system.h (USING_SVR4_H, SVR4_ASM_SPEC): Poison.\n+\t* config.gcc, config/bfin/bfin.h, config/cris/cris.h,\n+\tconfig/fr30/fr30.h, config/frv/frv.h, config/i386/openbsdelf.h,\n+\tconfig/i386/vx-common.h, config/ia64/elf.h, config/ia64/ia64.h,\n+\tconfig/ia64/sysv4.h, config/iq2000/iq2000.h, config/m68k/linux.h,\n+\tconfig/m68k/m68kelf.h, config/mips/mips.h, config/mips/vxworks.h,\n+\tconfig/moxie/moxie.h, config/netbsd-aout.h, config/openbsd.h,\n+\tconfig/rs6000/sysv4.h, config/sh/elf.h, config/sh/sh.h,\n+\tconfig/sol2.h, config/sparc/sysv4.h, config/stormy16/stormy16.h,\n+\tconfig/v850/v850.h, config/vxworks.h: Remove or update comments\n+\treferring to svr4.h.\n+\n 2010-12-22  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/45352"}, {"sha": "d316e113b3c201ed146e78ec31b101189e104259", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -72,7 +72,7 @@\n #  tm_file\t\tA list of target macro files, if different from\n #\t\t\t\"$cpu_type/$cpu_type.h\". Usually it's constructed\n #\t\t\tper target in a way like this:\n-#\t\t\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h ${cpu_type.h}/elf.h\"\n+#\t\t\ttm_file=\"${tm_file} dbxelf.h elfos.h ${cpu_type.h}/elf.h\"\n #\t\t\tNote that the preferred order is:\n #\t\t\t- specific target header \"${cpu_type}/${cpu_type.h}\"\n #\t\t\t- generic headers like dbxelf.h elfos.h, etc."}, {"sha": "5ebc1ebd98b1aa7488e23c51c1e8d35e9f23514a", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -238,14 +238,6 @@ extern unsigned int bfin_workarounds;\n   %{mfast-fp:-lbffastfp} %G %L %{mfast-fp:-lbffastfp} %G \\\n \"\n \n-/* A C string constant that tells the GCC driver program options to pass to\n-   the assembler.  It can also specify how to translate options you give to GNU\n-   CC into options for GCC to pass to the assembler.  See the file `sun3.h'\n-   for an example of this.\n-\n-   Do not define this macro if it does not need to do anything.\n-\n-   Defined in svr4.h.  */\n #undef  ASM_SPEC\n #define ASM_SPEC \"\\\n %{Ym,*} %{Yd,*} \\"}, {"sha": "92ba88d54bcc61334a391d7f9869ddfc1e819e73", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -211,7 +211,6 @@ extern int cris_cpu_version;\n    to avoid *only* picking up the linux multilib subdir from the \"-B./\"\n    option during build, while still giving it preference.  We'd need some\n    %s-variant that checked for existence of some specific file.  */\n-/* Override previous definitions (svr4.h).  */\n #undef LINK_SPEC\n #define LINK_SPEC \\\n  \"%{v:--verbose}\\"}, {"sha": "549c9275c2d8b20c179f368e9b95edae985de539", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -97,7 +97,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #define STRICT_ALIGNMENT 1\n \n-/* Defined in svr4.h.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n /*}}}*/ \f\n@@ -850,12 +849,6 @@ enum reg_class\n \n #define PRINT_OPERAND_ADDRESS(STREAM, X) fr30_print_operand_address (STREAM, X)\n \n-/* If defined, C string expressions to be used for the `%R', `%L', `%U', and\n-   `%I' options of `asm_fprintf' (see `final.c').  These are useful when a\n-   single `md' file must support multiple assembler formats.  In that case, the\n-   various `tm.h' files can define these macros differently.\n-\n-   USER_LABEL_PREFIX is defined in svr4.h.  */\n #define REGISTER_PREFIX \"%\"\n #define LOCAL_LABEL_PREFIX \".\"\n #define USER_LABEL_PREFIX \"\""}, {"sha": "d7bc0828c1622fc888dd6a5ecb4b0dd775bb4fb7", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -55,14 +55,6 @@\n # define SUBTARGET_DRIVER_SELF_SPECS\n #endif\n \n-/* A C string constant that tells the GCC driver program options to pass to\n-   the assembler.  It can also specify how to translate options you give to GNU\n-   CC into options for GCC to pass to the assembler.  See the file `sun3.h'\n-   for an example of this.\n-\n-   Do not define this macro if it does not need to do anything.\n-\n-   Defined in svr4.h.  */\n #undef  ASM_SPEC\n #define ASM_SPEC \"\\\n %{G*} %{Ym,*} %{Yd,*} \\\n@@ -79,24 +71,9 @@\n     %{mno-fdpic:-mnopic} %{mfdpic} \\\n     %{fpic|fpie: -mpic} %{fPIC|fPIE: -mPIC} %{mlibrary-pic}}\"\n \n-/* Another C string constant used much like `LINK_SPEC'.  The difference\n-   between the two is that `STARTFILE_SPEC' is used at the very beginning of\n-   the command given to the linker.\n-\n-   If this macro is not defined, a default is provided that loads the standard\n-   C startup file from the usual place.  See `gcc.c'.\n-\n-   Defined in svr4.h.  */\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0%O%s frvbegin%O%s\"\n \n-/* Another C string constant used much like `LINK_SPEC'.  The difference\n-   between the two is that `ENDFILE_SPEC' is used at the very end of the\n-   command given to the linker.\n-\n-   Do not define this macro if it does not need to do anything.\n-\n-   Defined in svr4.h.  */\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \"frvend%O%s\"\n \n@@ -142,15 +119,6 @@\n /* For ABI compliance, we need to put bss data into the normal data section.  */\n #define CC1_SPEC \"%{G*}\"\n \n-/* A C string constant that tells the GCC driver program options to pass to\n-   the linker.  It can also specify how to translate options you give to GCC\n-   into options for GCC to pass to the linker.\n-\n-   Do not define this macro if it does not need to do anything.\n-\n-   Defined in svr4.h.  */\n-/* Override the svr4.h version with one that dispenses without the svr4\n-   shared library options, notably -G.  */\n #undef\tLINK_SPEC\n #define LINK_SPEC \"\\\n %{h*} %{v:-V} \\\n@@ -162,15 +130,6 @@\n %{YP,*} \\\n %{Qy:} %{!Qn:-Qy}\"\n \n-/* Another C string constant used much like `LINK_SPEC'.  The difference\n-   between the two is that `LIB_SPEC' is used at the end of the command given\n-   to the linker.\n-\n-   If this macro is not defined, a default is provided that loads the standard\n-   C library from the usual place.  See `gcc.c'.\n-\n-   Defined in svr4.h.  */\n-\n #undef  LIB_SPEC\n #define LIB_SPEC \"--start-group -lc -lsim --end-group\"\n \n@@ -428,67 +387,6 @@\n    slower in that case, define this macro as 0.  */\n #define STRICT_ALIGNMENT 1\n \n-/* Define this if you wish to imitate the way many other C compilers handle\n-   alignment of bitfields and the structures that contain them.\n-\n-   The behavior is that the type written for a bit-field (`int', `short', or\n-   other integer type) imposes an alignment for the entire structure, as if the\n-   structure really did contain an ordinary field of that type.  In addition,\n-   the bit-field is placed within the structure so that it would fit within such\n-   a field, not crossing a boundary for it.\n-\n-   Thus, on most machines, a bit-field whose type is written as `int' would not\n-   cross a four-byte boundary, and would force four-byte alignment for the\n-   whole structure.  (The alignment used may not be four bytes; it is\n-   controlled by the other alignment parameters.)\n-\n-   If the macro is defined, its definition should be a C expression; a nonzero\n-   value for the expression enables this behavior.\n-\n-   Note that if this macro is not defined, or its value is zero, some bitfields\n-   may cross more than one alignment boundary.  The compiler can support such\n-   references if there are `insv', `extv', and `extzv' insns that can directly\n-   reference memory.\n-\n-   The other known way of making bitfields work is to define\n-   `STRUCTURE_SIZE_BOUNDARY' as large as `BIGGEST_ALIGNMENT'.  Then every\n-   structure can be accessed with fullwords.\n-\n-   Unless the machine has bit-field instructions or you define\n-   `STRUCTURE_SIZE_BOUNDARY' that way, you must define\n-   `PCC_BITFIELD_TYPE_MATTERS' to have a nonzero value.\n-\n-   If your aim is to make GCC use the same conventions for laying out\n-   bitfields as are used by another compiler, here is how to investigate what\n-   the other compiler does.  Compile and run this program:\n-\n-        struct foo1\n-        {\n-          char x;\n-          char :0;\n-          char y;\n-        };\n-\n-        struct foo2\n-        {\n-          char x;\n-          int :0;\n-          char y;\n-        };\n-\n-        main ()\n-        {\n-          printf (\"Size of foo1 is %d\\n\",\n-                  sizeof (struct foo1));\n-          printf (\"Size of foo2 is %d\\n\",\n-                  sizeof (struct foo2));\n-          exit (0);\n-        }\n-\n-   If this prints 2 and 5, then the compiler's behavior is what you would get\n-   from `PCC_BITFIELD_TYPE_MATTERS'.\n-\n-   Defined in svr4.h.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n \f\n@@ -1855,15 +1753,6 @@ __asm__(\"\\n\"\t\t\t\t\t\t\t\t\\\n /* Short Data Support */\n #define SDATA_SECTION_ASM_OP\t\"\\t.section .sdata,\\\"aw\\\"\"\n \n-/* On svr4, we *do* have support for the .init and .fini sections, and we\n-   can put stuff in there to be executed before and after `main'.  We let\n-   crtstuff.c and other files know this by defining the following symbols.\n-   The definitions say how to change sections to the .init and .fini\n-   sections.  This is the same for all known svr4 assemblers.\n-\n-   The standard System V.4 macros will work, but they look ugly in the\n-   assembly output, so redefine them.  */\n-\n #undef\tINIT_SECTION_ASM_OP\n #undef\tFINI_SECTION_ASM_OP\n #define INIT_SECTION_ASM_OP\t\"\\t.section .init,\\\"ax\\\"\"\n@@ -1942,13 +1831,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    variables are output.  */\n #undef ASM_OUTPUT_LOCAL\n \n-/* Like `ASM_OUTPUT_LOCAL' except takes the required alignment as a separate,\n-   explicit argument.  If you define this macro, it is used in place of\n-   `ASM_OUTPUT_LOCAL', and gives you more flexibility in handling the required\n-   alignment of the variable.  The alignment is specified as the number of\n-   bits.\n-\n-   Defined in svr4.h.  */\n #undef ASM_OUTPUT_ALIGNED_LOCAL\n \n /* This is for final.c, because it is used by ASM_DECLARE_OBJECT_NAME.  */\n@@ -1989,21 +1871,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.globl \"\n \n-/* A C statement to store into the string STRING a label whose name is made\n-   from the string PREFIX and the number NUM.\n-\n-   This string, when output subsequently by `assemble_name', should produce the\n-   output that `(*targetm.asm_out.internal_label)' would produce with the same PREFIX\n-   and NUM.\n-\n-   If the string begins with `*', then `assemble_name' will output the rest of\n-   the string unchanged.  It is often convenient for\n-   `ASM_GENERATE_INTERNAL_LABEL' to use `*' in this way.  If the string doesn't\n-   start with `*', then `ASM_OUTPUT_LABELREF' gets to output the string, and\n-   may change it.  (Of course, `ASM_OUTPUT_LABELREF' is also part of your\n-   machine description, so you should know what it does on your machine.)\n-\n-   Defined in svr4.h.  */\n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n@@ -2013,13 +1880,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n /* Macros Controlling Initialization Routines.  */\n \n-/* If defined, a C string constant for the assembler operation to identify the\n-   following data as initialization code.  If not defined, GCC will assume\n-   such a section does not exist.  When you are using special sections for\n-   initialization and termination functions, this macro also controls how\n-   `crtstuff.c' and `libgcc2.c' arrange to run the initialization functions.\n-\n-   Defined in svr4.h.  */\n #undef INIT_SECTION_ASM_OP\n \n /* If defined, `main' will call `__main' despite the presence of\n@@ -2113,12 +1973,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define FINAL_PRESCAN_INSN(INSN, OPVEC, NOPERANDS)\\\n   frv_final_prescan_insn (INSN, OPVEC, NOPERANDS)\n \n-/* If defined, C string expressions to be used for the `%R', `%L', `%U', and\n-   `%I' options of `asm_fprintf' (see `final.c').  These are useful when a\n-   single `md' file must support multiple assembler formats.  In that case, the\n-   various `tm.h' files can define these macros differently.\n-\n-   USER_LABEL_PREFIX is defined in svr4.h.  */\n #undef USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"\"\n #define REGISTER_PREFIX \"\"\n@@ -2175,11 +2029,6 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n \f\n /* Assembler Commands for Alignment.  */\n \n-/* A C statement to output to the stdio stream STREAM an assembler instruction\n-   to advance the location counter by NBYTES bytes.  Those bytes should be zero\n-   when loaded.  NBYTES will be a C expression of type `int'.\n-\n-   Defined in svr4.h.  */\n #undef  ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(STREAM, NBYTES) \\\n   fprintf (STREAM, \"\\t.zero\\t%u\\n\", (int)(NBYTES))\n@@ -2215,17 +2064,6 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n    This declaration is required.  */\n #define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n \n-/* A C expression that returns the type of debugging output GCC produces\n-   when the user specifies `-g' or `-ggdb'.  Define this if you have arranged\n-   for GCC to support more than one format of debugging output.  Currently,\n-   the allowable values are `DBX_DEBUG', `SDB_DEBUG', `DWARF_DEBUG',\n-   `DWARF2_DEBUG', and `XCOFF_DEBUG'.\n-\n-   The value of this macro only affects the default debugging output; the user\n-   can always get a specific type of output by using `-gstabs', `-gcoff',\n-   `-gdwarf-1', `-gdwarf-2', or `-gxcoff'.\n-\n-   Defined in svr4.h.  */\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \f"}, {"sha": "53949e8ab08b05e3514976bdbb28b67acc16a823", "filename": "gcc/config/i386/openbsdelf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -18,8 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* This gets defined in tm.h->linux.h->svr4.h, and keeps us from using\n-   libraries compiled with the native cc, so undef it. */\n+/* This keeps us from using libraries compiled with the native cc, so\n+   undef it. */\n #undef NO_DOLLAR_IN_LABEL\n \n /* Override the default comment-starter of \"/\".  */"}, {"sha": "c5ec4ed79433815836786ab09199b4be6e519ca9", "filename": "gcc/config/i386/vx-common.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fi386%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fi386%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvx-common.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -26,8 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_SUBTARGET_DEFAULT \\\n \t(MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_VECT8_RETURNS)\n \n-/* Provide our target specific DBX_REGISTER_NUMBER, as advertised by the\n-   common svr4.h.  VxWorks relies on the SVR4 numbering.  */\n+/* Provide our target specific DBX_REGISTER_NUMBER.  VxWorks relies on\n+   the SVR4 numbering.  */\n \n #undef DBX_REGISTER_NUMBER\n #define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]"}, {"sha": "21415eee8eb2414fb422f1d55390e123ab86a2c0", "filename": "gcc/config/ia64/elf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fia64%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fia64%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Felf.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for embedded ia64-elf target.\n \n-Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+Copyright (C) 2000, 2001, 2002, 2003, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -59,8 +59,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LINK_SPEC \"%{!mgnu-ld:-dn -N so}\"\n #endif\n \n-/* svr4.h links with crti.o/crtn.o, but elfos.h does not.  We override elfos.h\n-   so that we can use the standard ELF Unix method.  */\n+/* elfos.h does not link with crti.o/crtn.o.  We override elfos.h so\n+   that we can use the standard ELF Unix method.  */\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \"crtend.o%s crtn.o%s\"\n "}, {"sha": "32fc9b9f59162470ec6cf29603af71fbfa5cb823", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -1321,11 +1321,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    group of consecutive ones.  */\n \n #define ASM_APP_OFF (TARGET_GNU_AS ? \"#NO_APP\\n\" : \"//NO_APP\\n\")\n-\f\n-/* Output of Uninitialized Variables.  */\n-\n-/* This is all handled by svr4.h.  */\n-\n \f\n /* Output and Generation of Labels.  */\n \n@@ -1383,7 +1378,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n /* Macros Controlling Initialization Routines.  */\n \n-/* This is handled by svr4.h and sysv4.h.  */\n+/* This is handled by sysv4.h.  */\n \n \f\n /* Output of Assembler Instructions.  */\n@@ -1656,12 +1651,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n /* Macros Affecting all Debug Formats.  */\n \n-/* This is handled in svr4.h and sysv4.h.  */\n+/* This is handled in sysv4.h.  */\n \n \f\n /* Specific Options for DBX Output.  */\n \n-/* This is handled by dbxelf.h which is included by svr4.h.  */\n+/* This is handled by dbxelf.h.  */\n \n \f\n /* Open ended Hooks for DBX Output.  */"}, {"sha": "25fd22489f985bef24f053dd16041317cda3fb0c", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -1,4 +1,4 @@\n-/* Override definitions in elfos.h/svr4.h to be correct for IA64.\n+/* Override definitions in elfos.h to be correct for IA64.\n \n Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005,\n 2007, 2010 Free Software Foundation, Inc.\n@@ -104,13 +104,9 @@ do {\t\t\t\t\t\t\\\n #undef FINI_SECTION_ASM_OP\n #define FINI_SECTION_ASM_OP\t\"\\t.section\\t.fini,\\\"ax\\\",\\\"progbits\\\"\"\n \n-/* svr4.h undefines this, so we need to define it here.  */\n #define DBX_REGISTER_NUMBER(REGNO) \\\n   ia64_dbx_register_number(REGNO)\n \n-/* Things that svr4.h defines to the wrong type, because it assumes 32-bit\n-   ints and 32-bit longs.  */\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE \"long unsigned int\"\n "}, {"sha": "95744b6e28ea01aa44c4de4e9578c1cd87d30a28", "filename": "gcc/config/iq2000/iq2000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -21,7 +21,7 @@\n \n /* Driver configuration.  */\n \n-/* The svr4.h LIB_SPEC with -leval and --*group tacked on */\n+/* A generic LIB_SPEC with -leval and --*group tacked on.  */\n #undef  LIB_SPEC\n #define LIB_SPEC \"%{!shared:%{!symbolic:--start-group -lc -leval -lgcc --end-group}}\"\n "}, {"sha": "9146024acbc045627b3622bbe7068dc8692c33b6", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (68k GNU/Linux with ELF)\");\n \n-/* Add %(asm_cpu_spec) to the svr4.h definition of ASM_SPEC.  */\n+/* Add %(asm_cpu_spec) to a generic definition of ASM_SPEC.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"%(asm_cpu_spec) %(asm_pcrel_spec) \\\n   %{Qy:} %{!Qn:-Qy} %{Ym,*} %{Yd,*}\""}, {"sha": "d3fc41a4e49f185fc795588884b3f838cbd5b4c7", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -1,7 +1,7 @@\n /* m68kelf support, derived from m68kv4.h */\n \n /* Target definitions for GNU compiler for mc680x0 running System V.4\n-   Copyright (C) 1991, 1993, 2000, 2002, 2003, 2004, 2007\n+   Copyright (C) 1991, 1993, 2000, 2002, 2003, 2004, 2007, 2010\n    Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com) and Fred Fish (fnf@cygnus.com).\n@@ -126,8 +126,8 @@ do {\t\t\t\t\t\t\t\t\\\n    \n #define JUMP_TABLES_IN_TEXT_SECTION 1\n \n-/* Override the definition in svr4.h. In m68k svr4, using swbeg is the \n-   standard way to do switch table.  */\n+/* In m68k svr4, using swbeg is the standard way to do switch\n+   table.  */\n #undef ASM_OUTPUT_BEFORE_CASE_LABEL\n #define ASM_OUTPUT_BEFORE_CASE_LABEL(FILE,PREFIX,NUM,TABLE)\t\t\\\n   fprintf ((FILE), \"%s&%d\\n\", SWBEG_ASM_OP, XVECLEN (PATTERN (TABLE), 1));"}, {"sha": "f8a1a251dc68c100ceb0d959226085ea570cccc5", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -2802,9 +2802,6 @@ while (0)\n #define ASM_COMMENT_START \" #\"\n #endif\n \f\n-/* Default definitions for size_t and ptrdiff_t.  We must override the\n-   definitions from ../svr4.h on mips-*-linux-gnu.  */\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE (POINTER_SIZE == 64 ? \"long unsigned int\" : \"unsigned int\")\n "}, {"sha": "438e25b9bd4ee9e3c8ad83e93f00d6c005e3005d", "filename": "gcc/config/mips/vxworks.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fmips%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fmips%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvxworks.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n %(subtarget_asm_spec)\"\n \n #undef LINK_SPEC\n-/* LINK_SPEC is clobbered in svr4.h. ugh!  */\n #define LINK_SPEC \"\\\n %(endian_spec) \\\n %{!G:-G 0} %{G*} %{mips1} %{mips2} %{mips3} %{mips4} %{mips32} %{mips64} \\"}, {"sha": "41f66cb6baa885babb96dc3f6e34ab0e407f7adf", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -21,14 +21,6 @@\n #ifndef GCC_MOXIE_H\n #define GCC_MOXIE_H\n \n-/* Another C string constant used much like `LINK_SPEC'.  The difference\n-   between the two is that `STARTFILE_SPEC' is used at the very beginning of\n-   the command given to the linker.\n-\n-   If this macro is not defined, a default is provided that loads the standard\n-   C startup file from the usual place.  See `gcc.c'.\n-\n-   Defined in svr4.h.  */\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0%O%s crti.o%s crtbegin.o%s\"\n "}, {"sha": "7306c156e68c5534dc52cb5343749ccbc123f73d", "filename": "gcc/config/netbsd-aout.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fnetbsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fnetbsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-aout.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -69,8 +69,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef LINK_SPEC\n #define LINK_SPEC NETBSD_LINK_SPEC_AOUT\n \n-/* Some imports from svr4.h in support of shared libraries.  */\n-\n /* Define the strings used for the .type, .size, and .set directives.\n    These strings generally do not vary from one system running NetBSD\n    to another, but if a given system needs to use different pseudo-op"}, {"sha": "ae08ed8b5e161c0235e5c0aa3420ad943c55ed3d", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -157,9 +157,7 @@ while (0)\n #define DBX_NO_XREFS\n \n \f\n-/* Support of shared libraries, mostly imported from svr4.h through netbsd.  */\n-/* Two differences from svr4.h:\n-   - we use . - _func instead of a local label,\n+/* - we use . - _func instead of a local label,\n    - we put extra spaces in expressions such as \n      .type _func , @function\n      This is more readable for a human being and confuses c++filt less.  */"}, {"sha": "34919189c3b7d5cc13f9d2034082211bb007b9cd", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -273,13 +273,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Type used for ptrdiff_t, as a string used in a declaration.  */\n #define PTRDIFF_TYPE \"int\"\n \n-/* Type used for wchar_t, as a string used in a declaration.  */\n-/* Override svr4.h definition.  */\n #undef\tWCHAR_TYPE\n #define WCHAR_TYPE \"long int\"\n \n-/* Width of wchar_t in bits.  */\n-/* Override svr4.h definition.  */\n #undef\tWCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n@@ -404,8 +400,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define\tLOCAL_LABEL_PREFIX \".\"\n #define\tUSER_LABEL_PREFIX \"\"\n \n-/* svr4.h overrides (*targetm.asm_out.internal_label).  */\n-\n #define\tASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n   asm_fprintf (FILE, \"%L%s\", PREFIX)\n \n@@ -550,8 +544,6 @@ extern int fixuplabelno;\n   while (0)\n #endif\n \n-/* Pass various options to the assembler.  */\n-/* Override svr4.h definition.  */\n #undef\tASM_SPEC\n #define\tASM_SPEC \"%(asm_cpu) \\\n %{,assembler|,assembler-with-cpp: %{mregnames} %{mno-regnames}} \\\n@@ -640,7 +632,6 @@ extern int fixuplabelno;\n \n #define LINK_START_DEFAULT_SPEC \"\"\n \n-/* Override svr4.h definition.  */\n #undef\tLINK_SPEC\n #define\tLINK_SPEC \"\\\n %{h*} %{v:-V} %{!msdata=none:%{G*}} %{msdata=none:-G0} \\\n@@ -716,7 +707,6 @@ extern int fixuplabelno;\n \n #define\tCPP_OS_DEFAULT_SPEC \"\"\n \n-/* Override svr4.h definition.  */\n #undef\tSTARTFILE_SPEC\n #define\tSTARTFILE_SPEC \"\\\n %{mads         : %(startfile_ads)         ; \\\n@@ -732,7 +722,6 @@ extern int fixuplabelno;\n \n #define\tSTARTFILE_DEFAULT_SPEC \"ecrti.o%s crtbegin.o%s\"\n \n-/* Override svr4.h definition.  */\n #undef\tLIB_SPEC\n #define\tLIB_SPEC \"\\\n %{mads         : %(lib_ads)         ; \\\n@@ -748,7 +737,6 @@ extern int fixuplabelno;\n \n #define LIB_DEFAULT_SPEC \"-lc\"\n \n-/* Override svr4.h definition.  */\n #undef\tENDFILE_SPEC\n #define\tENDFILE_SPEC \"\\\n %{mads         : %(endfile_ads)         ; \\"}, {"sha": "336743cc8afedc571103f2feb9e5cd60b1d27a2a", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for gcc for Renesas / SuperH SH using ELF.\n-   Copyright (C) 1996, 1997, 2000, 2001, 2002, 2004, 2005, 2007\n+   Copyright (C) 1996, 1997, 2000, 2001, 2002, 2004, 2005, 2007, 2010\n    Free Software Foundation, Inc.\n    Contributed by Ian Lance Taylor <ian@cygnus.com>.\n \n@@ -32,8 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n /* use a more compact format for line information */\n #define DWARF2_ASM_LINE_DEBUG_INFO 1\n \n-/* WCHAR_TYPE / WCHAR_TYPE_SIZE are defined to long int / BITS_PER_WORD in\n-   svr4.h, but these work out as 64 bit for shmedia64.  */\n #undef WCHAR_TYPE\n /* #define WCHAR_TYPE (TARGET_SH5 ? \"int\" : \"long int\") */\n #define WCHAR_TYPE SH_ELF_WCHAR_TYPE\n@@ -66,8 +64,6 @@ along with GCC; see the file COPYING3.  If not see\n #define LINK_EMUL_PREFIX \"sh%{ml:l}elf\"\n #endif\n \n-/* svr4.h undefined DBX_REGISTER_NUMBER, so we need to define it\n-   again.  */\n #define DBX_REGISTER_NUMBER(REGNO) SH_DBX_REGISTER_NUMBER (REGNO)\n \n #undef ASM_GENERATE_INTERNAL_LABEL"}, {"sha": "4579af32736573632dc9920127c258a024e313f4", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -405,8 +405,7 @@ do { \\\n #define SUBTARGET_LINK_EMUL_SUFFIX \"\"\n #define SUBTARGET_LINK_SPEC \"\"\n \n-/* svr4.h redefines LINK_SPEC inappropriately, so go via SH_LINK_SPEC,\n-   so that we can undo the damage without code replication.  */\n+/* Go via SH_LINK_SPEC to avoid code replication.  */\n #define LINK_SPEC SH_LINK_SPEC\n \n #define SH_LINK_SPEC \"\\\n@@ -2211,8 +2210,6 @@ struct sh_args {\n /* DBX register number for a given compiler register number.  */\n /* GDB has FPUL at 23 and FP0 at 25, so we must add one to all FP registers\n    to match gdb.  */\n-/* svr4.h undefines this macro, yet we really want to use the same numbers\n-   for coff as for elf, so we go via another macro: SH_DBX_REGISTER_NUMBER.  */\n /* expand_builtin_init_dwarf_reg_sizes uses this to test if a\n    register exists, so we should return -1 for invalid register numbers.  */\n #define DBX_REGISTER_NUMBER(REGNO) SH_DBX_REGISTER_NUMBER (REGNO)"}, {"sha": "75f4675242b5580e334d424920c1b2b29ce4d968", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -179,7 +179,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef LINK_ARCH_SPEC\n #define LINK_ARCH_SPEC LINK_ARCH32_SPEC\n \n-/* This should be the same as in svr4.h, except with -R added.  */\n #undef  LINK_SPEC\n #define LINK_SPEC \\\n   \"%{h*} %{v:-V} \\"}, {"sha": "8b3a77e6a7229e99bfa7fa007eb4d551f2b17b6b", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -24,19 +24,15 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_VERSION fprintf (stderr, \" (sparc ELF)\"); \n #endif\n \n-/* ??? Put back the SIZE_TYPE/PTRDIFF_TYPE definitions set by sparc.h.\n-   Why, exactly, is svr4.h messing with this?  Seems like the chip \n-   would know best.  */\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE (TARGET_ARCH64 ? \"long unsigned int\" : \"unsigned int\")\n \n #undef PTRDIFF_TYPE\n #define PTRDIFF_TYPE (TARGET_ARCH64 ? \"long int\" : \"int\")\n \n-/* Undefined some symbols which are defined in \"svr4.h\" but which are\n-   appropriate only for typical svr4 systems, but not for the specific\n-   case of svr4 running on a SPARC.  */\n+/* Undefined some symbols which are appropriate only for typical svr4\n+   systems, but not for the specific case of svr4 running on a\n+   SPARC.  */\n \n #undef INIT_SECTION_ASM_OP\n #undef FINI_SECTION_ASM_OP"}, {"sha": "8789d90105e6745a20ba8295c4c9808e31536dc0", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -514,7 +514,6 @@ enum reg_class\n \n #define PRINT_OPERAND_ADDRESS(STREAM, X) xstormy16_print_operand_address (STREAM, X)\n \n-/* USER_LABEL_PREFIX is defined in svr4.h.  */\n #define REGISTER_PREFIX \"\"\n #define LOCAL_LABEL_PREFIX \".\"\n #define USER_LABEL_PREFIX \"\"\n@@ -556,7 +555,6 @@ enum reg_class\n \f\n /* Macros Affecting all Debug Formats.  */\n \n-/* Defined in svr4.h.  */\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n "}, {"sha": "49bb9da601435fbb32dedb2411cdba5263405d1c", "filename": "gcc/config/svr4.h", "status": "removed", "additions": 0, "deletions": 177, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e30705627f75583735d7e04d1a162ee4afbe838/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e30705627f75583735d7e04d1a162ee4afbe838/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=6e30705627f75583735d7e04d1a162ee4afbe838", "patch": "@@ -1,177 +0,0 @@\n-/* Operating system specific defines to be used when targeting GCC for some\n-   generic System V Release 4 system.\n-   Copyright (C) 1991, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n-   Contributed by Ron Guilmette (rfg@monkeys.com).\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-\n-/* To use this file, make up a line like that in config.gcc:\n-\n-\ttm_file=\"$tm_file elfos.h svr4.h MACHINE/svr4.h\"\n-\n-   where MACHINE is replaced by the name of the basic hardware that you\n-   are targeting for.  Then, in the file MACHINE/svr4.h, put any really\n-   system-specific defines (or overrides of defines) which you find that\n-   you need.\n-*/\n-\n-/* Define a symbol indicating that we are using svr4.h.  */\n-#define USING_SVR4_H\n-\n-/* Cpp, assembler, linker, library, and startfile spec's.  */\n-\n-/* Provide an ASM_SPEC appropriate for svr4.\n-   If we're not using GAS, we try to support as\n-   many of the specialized svr4 assembler options as seems reasonable,\n-   given that there are certain options which we can't (or shouldn't)\n-   support directly due to the fact that they conflict with other options\n-   for other svr4 tools (e.g. ld) or with other options for GCC itself.\n-   For example, we don't support the -o (output file) or -R (remove\n-   input file) options because GCC already handles these things.  We\n-   also don't support the -m (run m4) option for the assembler because\n-   that conflicts with the -m (produce load map) option of the svr4\n-   linker.  We do however allow passing arbitrary options to the svr4\n-   assembler via the -Wa, option.\n-\n-   Note that gcc doesn't allow a space to follow -Y in a -Ym,* or -Yd,*\n-   option.\n-\n-   The svr4 assembler wants '-' on the command line if it's expected to\n-   read its stdin.\n-*/\n-\n-#ifdef USE_GAS\n-#define SVR4_ASM_SPEC \\\n-  \"\"\n-#else\n-#define SVR4_ASM_SPEC \\\n-  \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{Ym,*} %{Yd,*}\"\n-#endif\n-\n-#undef  ASM_SPEC\n-#define ASM_SPEC SVR4_ASM_SPEC\n-\n-/* Provide a LIB_SPEC appropriate for svr4.  Here we tack on the default\n-   standard C library (unless we are building a shared library).  */\n-\n-#undef\tLIB_SPEC\n-#define LIB_SPEC \"%{!shared:%{!symbolic:-lc}}\"\n-\n-/* Provide an ENDFILE_SPEC appropriate for svr4.  Here we tack on our own\n-   magical crtend.o file (see crtstuff.c) which provides part of the\n-   support for getting C++ file-scope static object constructed before\n-   entering `main', followed by the normal svr3/svr4 \"finalizer\" file,\n-   which is either `gcrtn.o' or `crtn.o'.  */\n-\n-#undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC \"crtend.o%s %{pg:gcrtn.o%s}%{!pg:crtn.o%s}\"\n-\n-/* Provide a LINK_SPEC appropriate for svr4.  Here we provide support\n-   for the special GCC options -static, -shared, and -symbolic which\n-   allow us to link things in one of these three modes by applying the\n-   appropriate combinations of options at link-time.  We also provide\n-   support here for as many of the other svr4 linker options as seems\n-   reasonable, given that some of them conflict with options for other\n-   svr4 tools (e.g. the assembler).  In particular, we do support the\n-   -z*, -V, -t, -Qy, -Qn, and -YP* options here, and the -e*, -l*,\n-   -o*, -r, -s, -u*, and -L* options are directly supported by gcc.c\n-   itself.  We don't directly support the -m (generate load map)\n-   option because that conflicts with the -m (run m4) option of the\n-   svr4 assembler.  We also don't directly support the svr4 linker's\n-   -I* or -M* options because these conflict with existing GCC\n-   options.  We do however allow passing arbitrary options to the svr4\n-   linker via the -Wl, option, in gcc.c.  We don't support the svr4\n-   linker's -a option at all because it is totally useless and because\n-   it conflicts with GCC's own -a option.\n-\n-   Note that gcc doesn't allow a space to follow -Y in a -YP,* option.\n-\n-   When the -G link option is used (-shared and -symbolic) a final link is\n-   not being done.  */\n-\n-#undef\tLINK_SPEC\n-#ifdef CROSS_DIRECTORY_STRUCTURE\n-#define LINK_SPEC \"%{h*} %{v:-V} \\\n-\t\t   %{static:-dn -Bstatic} \\\n-\t\t   %{shared:-G -dy -z text} \\\n-\t\t   %{symbolic:-Bsymbolic -G -dy -z text} \\\n-\t\t   %{G:-G} \\\n-\t\t   %{YP,*} \\\n-\t\t   %{Qy:} %{!Qn:-Qy}\"\n-#else\n-#define LINK_SPEC \"%{h*} %{v:-V} \\\n-\t\t   %{static:-dn -Bstatic} \\\n-\t\t   %{shared:-G -dy -z text} \\\n-\t\t   %{symbolic:-Bsymbolic -G -dy -z text} \\\n-\t\t   %{G:-G} \\\n-\t\t   %{YP,*} \\\n-\t\t   %{!YP,*:%{p:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n-\t\t    %{!p:-Y P,/usr/ccs/lib:/usr/lib}} \\\n-\t\t   %{Qy:} %{!Qn:-Qy}\"\n-#endif\n-\n-/* Gcc automatically adds in one of the files /usr/ccs/lib/values-Xc.o\n-   or /usr/ccs/lib/values-Xa.o for each final link step (depending\n-   upon the other gcc options selected, such as -ansi).  These files\n-   each contain one (initialized) copy of a special variable called\n-   `_lib_version'.  Each one of these files has `_lib_version' initialized\n-   to a different (enum) value.  The SVR4 library routines query the\n-   value of `_lib_version' at run to decide how they should behave.\n-   Specifically, they decide (based upon the value of `_lib_version')\n-   if they will act in a strictly ANSI conforming manner or not.  */\n-\n-#undef\tSTARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared: \\\n-\t\t\t %{!symbolic: \\\n-\t\t\t  %{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}}}\\\n-\t\t\t%{pg:gcrti.o%s}%{!pg:crti.o%s} \\\n-\t\t\t%{ansi:values-Xc.o%s} \\\n-\t\t\t%{!ansi:values-Xa.o%s} \\\n- \t\t\tcrtbegin.o%s\"\n-\n-/* The numbers used to denote specific machine registers in the System V\n-   Release 4 DWARF debugging information are quite likely to be totally\n-   different from the numbers used in BSD stabs debugging information\n-   for the same kind of target machine.  Thus, we undefine the macro\n-   DBX_REGISTER_NUMBER here as an extra inducement to get people to\n-   provide proper machine-specific definitions of DBX_REGISTER_NUMBER\n-   (which is also used to provide DWARF registers numbers in dwarfout.c)\n-   in their tm.h files which include this file.  */\n-\n-#undef DBX_REGISTER_NUMBER\n-\n-/* Define the actual types of some ANSI-mandated types.  (These\n-   definitions should work for most SVR4 systems).  */\n-\n-#undef  SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n-\n-#undef  PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n-\n-#undef  WCHAR_TYPE\n-#define WCHAR_TYPE \"long int\"\n-\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE BITS_PER_WORD"}, {"sha": "f7926f331210c4f7c8fc79d0b5dae2ecc6d1cd69", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -25,7 +25,6 @@\n extern GTY(()) rtx v850_compare_op0;\n extern GTY(()) rtx v850_compare_op1;\n \n-/* These are defined in svr4.h but we want to override them.  */\n #undef LIB_SPEC\n #define LIB_SPEC \"%{!shared:%{!symbolic:--start-group -lc -lgcc --end-group}}\"\n \n@@ -931,7 +930,6 @@ typedef enum\n    it.  */\n #define JUMP_TABLES_IN_TEXT_SECTION (!TARGET_JUMP_TABLES_IN_DATA_SECTION)\n \n-/* svr4.h defines this assuming that 4 byte alignment is required.  */\n #undef ASM_OUTPUT_BEFORE_CASE_LABEL\n #define ASM_OUTPUT_BEFORE_CASE_LABEL(FILE,PREFIX,NUM,TABLE) \\\n   ASM_OUTPUT_ALIGN ((FILE), (TARGET_BIG_SWITCH ? 2 : 1));"}, {"sha": "04ee945d65063e86a11ac85cac2763ef27f013dd", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -109,7 +109,6 @@ extern void vxworks_asm_out_destructor (rtx symbol, int priority);\n #undef VXWORKS_GOTT_INDEX\n #define VXWORKS_GOTT_INDEX \"__GOTT_INDEX__\"\n \n-/* As for svr4.h (which not all VxWorks targets include). */\n #undef PTRDIFF_TYPE\n #define PTRDIFF_TYPE \"int\"\n "}, {"sha": "a9a29f16b2140fac2dc270e3730a46eaa2ee8353", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57809813b459dc5926d3d2f8d89dba41a73bad1e/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=57809813b459dc5926d3d2f8d89dba41a73bad1e", "patch": "@@ -822,7 +822,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tSWITCH_CURTAILS_COMPILATION SWITCH_TAKES_ARG WORD_SWITCH_TAKES_ARG \\\n \tTARGET_OPTION_TRANSLATE_TABLE HANDLE_PRAGMA_PACK_PUSH_POP\t   \\\n \tHANDLE_SYSV_PRAGMA HANDLE_PRAGMA_WEAK CONDITIONAL_REGISTER_USAGE   \\\n-\tFUNCTION_ARG_BOUNDARY MUST_USE_SJLJ_EXCEPTIONS US_SOFTWARE_GOFAST\n+\tFUNCTION_ARG_BOUNDARY MUST_USE_SJLJ_EXCEPTIONS US_SOFTWARE_GOFAST  \\\n+\tUSING_SVR4_H SVR4_ASM_SPEC\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}