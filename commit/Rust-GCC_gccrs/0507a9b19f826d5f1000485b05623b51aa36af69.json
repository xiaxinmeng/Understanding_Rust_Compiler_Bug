{"sha": "0507a9b19f826d5f1000485b05623b51aa36af69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUwN2E5YjE5ZjgyNmQ1ZjEwMDA0ODViMDU2MjNiNTFhYTM2YWY2OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-01-26T00:55:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-01-26T00:55:50Z"}, "message": "field.h (struct _Jv_Field): Use \"jshort\" as type for nameIndex.\n\n\t* gcj/field.h (struct _Jv_Field): Use \"jshort\" as type for\n\tnameIndex.  Use \"jint\" as type for boffset.\n\t* java/lang/Class.h (struct _Jv_Method): Made accflags a\n\t_Jv_ushort.\n\t(Class): Likewise.  Also changed type of method_count,\n\tvtable_method_count, size_in_bytes, field_count,\n\tstatic_field_count, interface_count.\n\t* gcj/array.h (__JArray): Made `length' a const jsize, not an\n\tint.\n\nFrom-SVN: r31621", "tree": {"sha": "6c3038a38358879f55bd5b4e821d7309ad027cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c3038a38358879f55bd5b4e821d7309ad027cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0507a9b19f826d5f1000485b05623b51aa36af69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0507a9b19f826d5f1000485b05623b51aa36af69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0507a9b19f826d5f1000485b05623b51aa36af69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0507a9b19f826d5f1000485b05623b51aa36af69/comments", "author": null, "committer": null, "parents": [{"sha": "7554ad67e55b60098b0c2491e5966c0cff5d3d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7554ad67e55b60098b0c2491e5966c0cff5d3d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7554ad67e55b60098b0c2491e5966c0cff5d3d5f"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "29be1ccbb9e3533734a021ba2b32dcbafdeeb856", "filename": "libjava/gcj/array.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0507a9b19f826d5f1000485b05623b51aa36af69/libjava%2Fgcj%2Farray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0507a9b19f826d5f1000485b05623b51aa36af69/libjava%2Fgcj%2Farray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Farray.h?ref=0507a9b19f826d5f1000485b05623b51aa36af69", "patch": "@@ -18,7 +18,9 @@ extern \"Java\" {\n class __JArray : public java::lang::Object\n {\n public:\n-  int length;\n+  // FIXME: we'd like this to be `const' but that causes problems with\n+  // the C++ compiler.\n+  jsize length;\n   friend jsize JvGetArrayLength (__JArray*);\n };\n "}, {"sha": "5d2203e684dff5daf883d3bb8cf6f7c9f7c7772c", "filename": "libjava/gcj/field.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0507a9b19f826d5f1000485b05623b51aa36af69/libjava%2Fgcj%2Ffield.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0507a9b19f826d5f1000485b05623b51aa36af69/libjava%2Fgcj%2Ffield.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Ffield.h?ref=0507a9b19f826d5f1000485b05623b51aa36af69", "patch": "@@ -30,13 +30,13 @@ struct _Jv_Field\n   _Jv_ushort\t\tflags;\n \n #ifdef COMPACT_FIELDS\n-  short\t\t\tnameIndex;  /* offset in class's name table */\n+  jshort\t\tnameIndex;  /* offset in class's name table */\n #else\n   _Jv_ushort\t\tbsize;  /* not really needed ... */\n #endif\n \n   union {\n-    int\t\t\tboffset;  /* offset in bytes for instance field */\n+    jint\t\tboffset;  /* offset in bytes for instance field */\n     void*\t\taddr;  /* address of static field */\n   } u;\n "}, {"sha": "b7477c7e2725351d3597291d0cf196c34b15194a", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0507a9b19f826d5f1000485b05623b51aa36af69/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0507a9b19f826d5f1000485b05623b51aa36af69/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=0507a9b19f826d5f1000485b05623b51aa36af69", "patch": "@@ -58,7 +58,7 @@ struct _Jv_Method\n {\n   _Jv_Utf8Const *name;\n   _Jv_Utf8Const *signature;\n-  unsigned short accflags;\n+  _Jv_ushort accflags;\n   void *ncode;\n \n   _Jv_Method *getNextMethod ()\n@@ -229,7 +229,7 @@ class java::lang::Class : public java::lang::Object\n   // Name of class.\n   _Jv_Utf8Const *name;\n   // Access flags for class.\n-  unsigned short accflags;\n+  _Jv_ushort accflags;\n   // The superclass, or null for Object.\n   jclass superclass;\n   // Class constants.\n@@ -240,25 +240,25 @@ class java::lang::Class : public java::lang::Object\n   _Jv_Method *methods;\n   // Number of methods.  If this class is primitive, this holds the\n   // character used to represent this type in a signature.\n-  short method_count;\n+  jshort method_count;\n   // Number of methods in the vtable.\n-  short vtable_method_count;\n+  jshort vtable_method_count;\n   // The fields.\n   _Jv_Field *fields;\n   // Size of instance fields, in bytes.\n-  int size_in_bytes;\n+  jint size_in_bytes;\n   // Total number of fields (instance and static).\n-  short field_count;\n+  jshort field_count;\n   // Number of static fields.\n-  short static_field_count;\n+  jshort static_field_count;\n   // The vtbl for all objects of this class.\n   _Jv_VTable *vtable;\n   // Interfaces implemented by this class.\n   jclass *interfaces;\n   // The class loader for this class.\n   java::lang::ClassLoader *loader;\n   // Number of interfaces.\n-  short interface_count;\n+  jshort interface_count;\n   // State of this class.\n   jbyte state;\n   // The thread which has locked this class.  Used during class"}]}