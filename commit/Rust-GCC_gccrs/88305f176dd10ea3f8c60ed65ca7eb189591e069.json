{"sha": "88305f176dd10ea3f8c60ed65ca7eb189591e069", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgzMDVmMTc2ZGQxMGVhM2Y4YzYwZWQ2NWNhN2ViMTg5NTkxZTA2OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:39:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:39:37Z"}, "message": "[multiple changes]\n\n2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Generic_Package_Declaration): If there\n\tis a default storage pool, add a corresponding aspect to the\n\tgeneric unit, to be used at the point of instantiation.\n\t(Analyze_Package_Instantiation): If generic unit has aspect\n\tspecifications, propagate them to instance. If instance has a\n\tDefault_Storage_Pool aspect, make sure that it overrides the\n\tone that may be inherited from the generic.\n\n2014-10-31  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: Minor removal of attributes of package Linker\n\tthat have never been used and never been documented.\n\t* projects.texi: Add documentation for attribute Runtime.\n\t* prj-nmsc.adb (Check_Configuration): Do not report a warning\n\tfor unknown compilers when the project is externally built.\n\nFrom-SVN: r216968", "tree": {"sha": "99dd6b3aacfc4b19c85b33b4a8cc17bf902d7d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99dd6b3aacfc4b19c85b33b4a8cc17bf902d7d79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88305f176dd10ea3f8c60ed65ca7eb189591e069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88305f176dd10ea3f8c60ed65ca7eb189591e069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88305f176dd10ea3f8c60ed65ca7eb189591e069", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88305f176dd10ea3f8c60ed65ca7eb189591e069/comments", "author": null, "committer": null, "parents": [{"sha": "4a68b7c4d594e082b32da7e76a7cd7a472abb5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a68b7c4d594e082b32da7e76a7cd7a472abb5de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a68b7c4d594e082b32da7e76a7cd7a472abb5de"}], "stats": {"total": 141, "additions": 137, "deletions": 4}, "files": [{"sha": "db5c68182f591b63c6ac4fcb84cf3e078c41b388", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88305f176dd10ea3f8c60ed65ca7eb189591e069", "patch": "@@ -1,3 +1,21 @@\n+2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Generic_Package_Declaration): If there\n+\tis a default storage pool, add a corresponding aspect to the\n+\tgeneric unit, to be used at the point of instantiation.\n+\t(Analyze_Package_Instantiation): If generic unit has aspect\n+\tspecifications, propagate them to instance. If instance has a\n+\tDefault_Storage_Pool aspect, make sure that it overrides the\n+\tone that may be inherited from the generic.\n+\n+2014-10-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: Minor removal of attributes of package Linker\n+\tthat have never been used and never been documented.\n+\t* projects.texi: Add documentation for attribute Runtime.\n+\t* prj-nmsc.adb (Check_Configuration): Do not report a warning\n+\tfor unknown compilers when the project is externally built.\n+\n 2014-10-31  Vasiliy Fofanov  <fofanov@adacore.com>\n \n \t* prj-conf.adb (Do_Autoconf): Refactor the code so that empty"}, {"sha": "e356e72d2953c3a042b65fa7f496251839c143ce", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=88305f176dd10ea3f8c60ed65ca7eb189591e069", "patch": "@@ -280,9 +280,6 @@ package body Prj.Attr is\n    --  Configuration - Linking\n \n    \"SVdriver#\" &\n-   \"LVexecutable_switch#\" &\n-   \"SVlib_dir_switch#\" &\n-   \"SVlib_name_switch#\" &\n \n    --  Configuration - Response files\n "}, {"sha": "b4dd7985a3faea900fdf4043365f9ea074915c76", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=88305f176dd10ea3f8c60ed65ca7eb189591e069", "patch": "@@ -2572,6 +2572,7 @@ package body Prj.Nmsc is\n \n          if Data.Flags.Compiler_Driver_Mandatory\n            and then Lang_Index.Config.Compiler_Driver = No_File\n+           and then not Project.Externally_Built\n          then\n             Error_Msg_Name_1 := Lang_Index.Display_Name;\n             Error_Msg"}, {"sha": "da9511bff844419545fa5ef4f4745b20f7d88156", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=88305f176dd10ea3f8c60ed65ca7eb189591e069", "patch": "@@ -4109,7 +4109,14 @@ case-insensitive values are \"false\" and \"true\" (the default).\n \n @item @b{Target}: single\n \n-Value is the name of the target platform.\n+Value is the name of the target platform. Taken into account only in the main\n+project.\n+\n+@item @b{Runtime}: single, indexed, case-insensitive index\n+\n+Index is a language name. Indicates the runtime directory that is to be used\n+when using the compiler of the language. Taken into account only in the main\n+project.\n \n @end itemize\n \n@@ -4778,6 +4785,13 @@ Value is the directory used to generate the documentation of source code.\n \n @itemize @bullet\n \n+@item @b{Artifacts}: list, indexed\n+\n+An array attribute to declare a set of files not part of the sources\n+to be installed. The array discriminant is the directory where the\n+file is to be installed. If a relative directory then Prefix (see\n+below) is prepended.\n+\n @item @b{Prefix}: single\n \n Value is the install destination directory."}, {"sha": "0cf67c6fad295c4f6c9dfb9939e30e7bb34fe11c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88305f176dd10ea3f8c60ed65ca7eb189591e069/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=88305f176dd10ea3f8c60ed65ca7eb189591e069", "patch": "@@ -3437,6 +3437,27 @@ package body Sem_Ch12 is\n             Check_References (Id);\n          end if;\n       end if;\n+\n+      --  If there is a specified storage pool in the context, create an\n+      --  aspect on the package declaration, so that it is used in any\n+      --  instance that does not override it.\n+\n+      if Present (Default_Pool) then\n+         declare\n+            ASN : Node_Id;\n+\n+         begin\n+            ASN := Make_Aspect_Specification (Loc,\n+               Identifier => Make_Identifier (Loc, Name_Default_Storage_Pool),\n+               Expression => New_Copy (Default_Pool));\n+\n+            if No (Aspect_Specifications (Specification (N))) then\n+               Set_Aspect_Specifications (Specification (N), New_List (ASN));\n+            else\n+               Append (ASN, Aspect_Specifications (Specification (N)));\n+            end if;\n+         end;\n+      end if;\n    end Analyze_Generic_Package_Declaration;\n \n    --------------------------------------------\n@@ -3605,6 +3626,7 @@ package body Sem_Ch12 is\n       Act_Tree      : Node_Id;\n \n       Gen_Decl : Node_Id;\n+      Gen_Spec : Node_Id;\n       Gen_Unit : Entity_Id;\n \n       Is_Actual_Pack : constant Boolean :=\n@@ -3837,6 +3859,7 @@ package body Sem_Ch12 is\n          end if;\n \n          Gen_Decl := Unit_Declaration_Node (Gen_Unit);\n+         Gen_Spec := Specification (Gen_Decl);\n \n          --  Initialize renamings map, for error checking, and the list that\n          --  holds private entities whose views have changed between generic\n@@ -3910,6 +3933,52 @@ package body Sem_Ch12 is\n               New_Copy_List_Tree (Aspect_Specifications (Act_Tree)));\n          end if;\n \n+         --  The generic may have a generated Default_Storage_Pool aspect,\n+         --  set at the point of generic declaration. If the instance has\n+         --  that aspect, it overrides the one inherited from the generic.\n+\n+         if Has_Aspects (Gen_Spec) then\n+            if No (Aspect_Specifications (N)) then\n+               Set_Aspect_Specifications (N,\n+                 (New_Copy_List_Tree\n+                   (Aspect_Specifications (Gen_Spec))));\n+\n+            else\n+               declare\n+                  ASN1, ASN2 : Node_Id;\n+\n+               begin\n+                  ASN1 := First (Aspect_Specifications (N));\n+                  while Present (ASN1) loop\n+                     if Chars (Identifier (ASN1))\n+                        = Name_Default_Storage_Pool\n+                     then\n+                        --  If generic carries a default storage pool, remove\n+                        --  it in favor of the instance one.\n+\n+                        ASN2 := First (Aspect_Specifications (Gen_Spec));\n+                        while Present (ASN2) loop\n+                           if Chars (Identifier (ASN2))\n+                              = Name_Default_Storage_Pool\n+                           then\n+                              Remove (ASN2);\n+                              exit;\n+                           end if;\n+\n+                           Next (ASN2);\n+                        end loop;\n+                     end if;\n+\n+                     Next (ASN1);\n+                  end loop;\n+\n+                  Prepend_List_To (Aspect_Specifications (N),\n+                    (New_Copy_List_Tree\n+                      (Aspect_Specifications (Gen_Spec))));\n+               end;\n+            end if;\n+         end if;\n+\n          --  Save the instantiation node, for subsequent instantiation of the\n          --  body, if there is one and we are generating code for the current\n          --  unit. Mark unit as having a body (avoids premature error message).\n@@ -4212,6 +4281,40 @@ package body Sem_Ch12 is\n          if Nkind (Parent (N)) /= N_Compilation_Unit then\n             Mark_Rewrite_Insertion (Act_Decl);\n             Insert_Before (N, Act_Decl);\n+\n+            if Has_Aspects (N) then\n+               Analyze_Aspect_Specifications (N, Act_Decl_Id);\n+\n+               --  The pragma created for a Default_Storage_Pool aspect must\n+               --  appear ahead of the declarations in the instance spec.\n+               --  Analysis has placed it after the instance node, so remove\n+               --  it and reinsert it properly now.\n+\n+               declare\n+                  ASN : constant Node_Id := First (Aspect_Specifications (N));\n+                  A_Name : constant Name_Id := Chars (Identifier (ASN));\n+                  Decl : Node_Id;\n+\n+               begin\n+                  if A_Name = Name_Default_Storage_Pool then\n+                     if No (Visible_Declarations (Act_Spec)) then\n+                        Set_Visible_Declarations (Act_Spec, New_List);\n+                     end if;\n+\n+                     Decl := Next (N);\n+                     while Present (Decl) loop\n+                        if Nkind (Decl) = N_Pragma then\n+                           Remove (Decl);\n+                           Prepend (Decl, Visible_Declarations (Act_Spec));\n+                           exit;\n+                        end if;\n+\n+                        Next (Decl);\n+                     end loop;\n+                  end if;\n+               end;\n+            end if;\n+\n             Analyze (Act_Decl);\n \n          --  For an instantiation that is a compilation unit, place"}]}