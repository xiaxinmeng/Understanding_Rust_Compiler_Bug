{"sha": "c0b9be67989328e0ad6141537da0fd04972a4317", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiOWJlNjc5ODkzMjhlMGFkNjE0MTUzN2RhMGZkMDQ5NzJhNDMxNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-04-13T23:39:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-13T23:39:22Z"}, "message": "i386.md (neghi2): Do not output prefixed opcode when possible.\n\n\t* i386.md (neghi2): Do not output prefixed opcode when possible.\n\t(ashlhi3): Likewise.\n\nFrom-SVN: r26433", "tree": {"sha": "12a2a674198462af2bd6dce3781800965ec3fc48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a2a674198462af2bd6dce3781800965ec3fc48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b9be67989328e0ad6141537da0fd04972a4317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b9be67989328e0ad6141537da0fd04972a4317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b9be67989328e0ad6141537da0fd04972a4317", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b9be67989328e0ad6141537da0fd04972a4317/comments", "author": null, "committer": null, "parents": [{"sha": "fb693d4449e4997e2e26549313ef6115bc41d629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb693d4449e4997e2e26549313ef6115bc41d629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb693d4449e4997e2e26549313ef6115bc41d629"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "1d0c6e7bbba0719e12fac722af3faf06d245a6c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b9be67989328e0ad6141537da0fd04972a4317/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b9be67989328e0ad6141537da0fd04972a4317/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0b9be67989328e0ad6141537da0fd04972a4317", "patch": "@@ -1,3 +1,8 @@\n+Wed Apr 14 00:18:22 1999  Jan Hubicka <hubicka@freesoft.cz>\n+\n+\t* i386.md (neghi2): Do not output prefixed opcode when possible.\n+\t(ashlhi3): Likewise.\n+\n Wed Apr 14 00:08:46 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.c (memory_address_length): New function."}, {"sha": "270172424b05b4e3e03ad8fd96fa00ddb46e4d17", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b9be67989328e0ad6141537da0fd04972a4317/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b9be67989328e0ad6141537da0fd04972a4317/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c0b9be67989328e0ad6141537da0fd04972a4317", "patch": "@@ -4721,7 +4721,13 @@ byte_xor_operation:\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(neg:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")))]\n   \"\"\n-  \"neg%W0 %0\")\n+  \"*\n+    if (REG_P (operands[0]) && i386_cc_probably_useless_p (insn))\n+      {\n+\tCC_STATUS_INIT;\n+\treturn AS1(neg%L0,%0);\n+      }\n+    return AS1(neg%W0,%0);\")\n \n (define_insn \"negqi2\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm\")\n@@ -5053,11 +5059,30 @@ byte_xor_operation:\n   \"*\n {\n   if (REG_P (operands[2]))\n-    return AS2 (sal%W0,%b2,%0);\n+    {\n+      if (REG_P (operands[0]) && i386_cc_probably_useless_p (insn))\n+        {\n+          CC_STATUS_INIT;\n+          return AS2 (sal%L0,%b2,%k0);\n+        }\n+      return AS2 (sal%W0,%b2,%0);\n+    }\n \n   if (REG_P (operands[0]) && operands[2] == const1_rtx)\n-    return AS2 (add%W0,%0,%0);\n+    {\n+      if (i386_cc_probably_useless_p (insn))\n+        {\n+          CC_STATUS_INIT;\n+          return AS2 (add%L0,%k0,%k0);\n+        }\n+      return AS2 (add%W0,%0,%0);\n+    }\n \n+  if (REG_P (operands[0]) && i386_cc_probably_useless_p (insn))\n+    {\n+      CC_STATUS_INIT;\n+      return AS2 (sal%L0,%2,%k0);\n+    }\n   return AS2 (sal%W0,%2,%0);\n }\")\n "}]}