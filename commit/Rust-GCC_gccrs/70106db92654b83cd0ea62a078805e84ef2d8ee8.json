{"sha": "70106db92654b83cd0ea62a078805e84ef2d8ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAxMDZkYjkyNjU0YjgzY2QwZWE2MmEwNzg4MDVlODRlZjJkOGVlOA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:48:42Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:48:42Z"}, "message": "re PR d/90604 (ICE in sizemask, at d/dmd/mtype.c:2542)\n\n\tPR d/90604\nd/dmd: Merge upstream dmd f30c5dc79\n\nFixes internal compiler error in Type::sizemask.\n\nReviewed-on: https://github.com/dlang/dmd/pull/9998\n\nFrom-SVN: r272343", "tree": {"sha": "2e03c2d660192915711756cca92458e004d5c1ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e03c2d660192915711756cca92458e004d5c1ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70106db92654b83cd0ea62a078805e84ef2d8ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70106db92654b83cd0ea62a078805e84ef2d8ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70106db92654b83cd0ea62a078805e84ef2d8ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70106db92654b83cd0ea62a078805e84ef2d8ee8/comments", "author": null, "committer": null, "parents": [{"sha": "e7c6715ec82458cf0b9a362bf9b068d0574607f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c6715ec82458cf0b9a362bf9b068d0574607f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c6715ec82458cf0b9a362bf9b068d0574607f9"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "4cb2bbac46db424247fc1310d32ec7c413a589e8", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=70106db92654b83cd0ea62a078805e84ef2d8ee8", "patch": "@@ -1,4 +1,4 @@\n-420cce2a654f14b8de4a75cbb5d4203fce8d4e0f\n+f30c5dc790c17914463879157447acc671518735\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "e0e2472b5027604ebf2452404bf62e994a9a2884", "filename": "gcc/d/dmd/intrange.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Fd%2Fdmd%2Fintrange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Fd%2Fdmd%2Fintrange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fintrange.c?ref=70106db92654b83cd0ea62a078805e84ef2d8ee8", "patch": "@@ -278,7 +278,7 @@ IntRange IntRange::fromType(Type *type)\n \n IntRange IntRange::fromType(Type *type, bool isUnsigned)\n {\n-    if (!type->isintegral())\n+    if (!type->isintegral() || type->toBasetype()->ty == Tvector)\n         return widest();\n \n     uinteger_t mask = type->sizemask();\n@@ -404,7 +404,7 @@ IntRange& IntRange::castDchar()\n \n IntRange& IntRange::cast(Type *type)\n {\n-    if (!type->isintegral())\n+    if (!type->isintegral() || type->toBasetype()->ty == Tvector)\n         return *this;\n     else if (!type->isunsigned())\n         return castSigned(type->sizemask());\n@@ -416,7 +416,7 @@ IntRange& IntRange::cast(Type *type)\n \n IntRange& IntRange::castUnsigned(Type *type)\n {\n-    if (!type->isintegral())\n+    if (!type->isintegral() || type->toBasetype()->ty == Tvector)\n         return castUnsigned(UINT64_MAX);\n     else if (type->toBasetype()->ty == Tdchar)\n         return castDchar();"}, {"sha": "406e468ca00338b7bc3ab06a2b06dc3184a54206", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19898a.d", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19898a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19898a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19898a.d?ref=70106db92654b83cd0ea62a078805e84ef2d8ee8", "patch": "@@ -0,0 +1,14 @@\n+/*\n+PERMUTE_ARGS:\n+REQUIRED_ARGS: -m64\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19898a.d(11): Error: incompatible types for `(__key2) < (__limit3)`: both operands are of type `__vector(int[4])`\n+---\n+*/\n+void f (__vector(int[4]) n)\n+{\n+    foreach (i; 0 .. n)\n+        cast(void)n;\n+}\n+"}, {"sha": "0b47fb78944a83b7c96ff0af3b4b0a601e1d5630", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19898b.d", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19898b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70106db92654b83cd0ea62a078805e84ef2d8ee8/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19898b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19898b.d?ref=70106db92654b83cd0ea62a078805e84ef2d8ee8", "patch": "@@ -0,0 +1,21 @@\n+/*\n+PERMUTE_ARGS:\n+REQUIRED_ARGS: -m64\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19898b.d(18): Error: cannot implicitly convert expression `m` of type `S` to `__vector(int[4])`\n+fail_compilation/fail19898b.d(18): Error: incompatible types for `(__key2) != (__limit3)`: both operands are of type `__vector(int[4])`\n+fail_compilation/fail19898b.d(18): Error: cannot cast expression `__key2` of type `__vector(int[4])` to `S`\n+---\n+*/\n+struct S\n+{\n+    int a;\n+}\n+\n+void f (__vector(int[4]) n, S m)\n+{\n+    foreach (i; m .. n)\n+        cast(void)n;\n+}\n+"}]}