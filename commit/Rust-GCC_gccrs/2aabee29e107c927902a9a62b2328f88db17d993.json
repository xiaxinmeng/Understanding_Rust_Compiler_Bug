{"sha": "2aabee29e107c927902a9a62b2328f88db17d993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhYmVlMjllMTA3YzkyNzkwMmE5YTYyYjIzMjhmODhkYjE3ZDk5Mw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-02-18T12:20:49Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-02-18T12:20:49Z"}, "message": "re PR c++/20008 (internal compiler error: in expand_case, at stmt.c:2397)\n\ngcc/ChangeLog:\nPR c++/20008\n* stmt.c (expand_case): Don't assume cleanup_tree_cfg will remove\ncases that are out-of-range for the index type.\ngcc/testsuite/ChangeLog:\nPR c++/20008\n* g++.dg/opt/switch4.C: New.\n\nFrom-SVN: r95225", "tree": {"sha": "a9c7d9f0218df9d72684d8174c257d1e35351b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9c7d9f0218df9d72684d8174c257d1e35351b39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aabee29e107c927902a9a62b2328f88db17d993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aabee29e107c927902a9a62b2328f88db17d993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aabee29e107c927902a9a62b2328f88db17d993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aabee29e107c927902a9a62b2328f88db17d993/comments", "author": null, "committer": null, "parents": [{"sha": "aeba6c285a2b7da7ee090cc51d3e96838b567398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeba6c285a2b7da7ee090cc51d3e96838b567398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeba6c285a2b7da7ee090cc51d3e96838b567398"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "61ea0ad332c03504fbad122b480eb73a8e5228a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aabee29e107c927902a9a62b2328f88db17d993", "patch": "@@ -1,3 +1,9 @@\n+2005-02-18  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR c++/20008\n+\t* stmt.c (expand_case): Don't assume cleanup_tree_cfg will remove\n+\tcases that are out-of-range for the index type.\n+\n 2005-02-18  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* stmt.c (emit_case_bit_tests): Call fold_convert instead of convert."}, {"sha": "64e070b5a0a707bf5d578cd0c3a0455500e445a5", "filename": "gcc/stmt.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=2aabee29e107c927902a9a62b2328f88db17d993", "patch": "@@ -2394,8 +2394,14 @@ expand_case (tree exp)\n       BITMAP_FREE (label_bitmap);\n \n       /* cleanup_tree_cfg removes all SWITCH_EXPR with a single\n-\t destination, such as one with a default case only.  */\n-      gcc_assert (count != 0);\n+\t destination, such as one with a default case only.  However,\n+\t it doesn't remove cases that are out of range for the switch\n+\t type, so we may still get a zero here.  */\n+      if (count == 0)\n+\t{\n+\t  emit_jump (default_label);\n+\t  return;\n+\t}\n \n       /* Compute span of values.  */\n       range = fold (build2 (MINUS_EXPR, index_type, maxval, minval));"}, {"sha": "7d653eca38b69a325cf6b4536422d52ca1d905d0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2aabee29e107c927902a9a62b2328f88db17d993", "patch": "@@ -1,3 +1,8 @@\n+2005-02-18  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR c++/20008\n+\t* g++.dg/opt/switch4.C: New.\n+\n 2005-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/20023"}, {"sha": "231929fdf3d74bb31ac981c7d7025e0d731238d1", "filename": "gcc/testsuite/g++.dg/opt/switch4.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fswitch4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aabee29e107c927902a9a62b2328f88db17d993/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fswitch4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fswitch4.C?ref=2aabee29e107c927902a9a62b2328f88db17d993", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+\n+// PR c++/20008\n+\n+// We failed to compile this because CFG cleanup left the switch\n+// statement intact, whereas expand_case expected at least one\n+// in-range case to remain.\n+\n+typedef enum _SECStatus {\n+  SECWouldBlock = -2,\n+  SECFailure = -1,\n+  SECSuccess = 0\n+} SECStatus;\n+\n+typedef enum {\n+  SEC_ERROR_BAD_SIGNATURE = (-0x2000) + 10\n+} SECErrorCodes;\n+\n+void g(void);\n+void f(SECStatus status)\n+{\n+  switch( status )\n+    {\n+    case SEC_ERROR_BAD_SIGNATURE :\n+      // This case can be optimized away in C++ (but apparently not in\n+      // C), because the enum type is defined with a narrow range.\n+      g();\n+      break ;\n+    }\n+}"}]}