{"sha": "9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxYWUwYTA5Nzg5YmFhMTdlOTk1OWI1N2RiNzhmZmM3ZDRhN2ZhNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-12-24T01:47:56Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-12-24T01:47:56Z"}, "message": "basic-block.h: Remove the prototype for expected_value_to_br_prob.\n\n\t* basic-block.h: Remove the prototype for\n\texpected_value_to_br_prob.\n\t* rtl.h: Remove the prototypes for expand_builtin_expect_jump\n\tand purge_line_number_notes.\n\nFrom-SVN: r120186", "tree": {"sha": "a1e7ed9d6c6f2ef1f820c6eb58c0d821b7620407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1e7ed9d6c6f2ef1f820c6eb58c0d821b7620407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/comments", "author": null, "committer": null, "parents": [{"sha": "b79a9b90a64881e9a8714e67a9981e0e701989fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b79a9b90a64881e9a8714e67a9981e0e701989fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b79a9b90a64881e9a8714e67a9981e0e701989fb"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "61925fa37052e675b032029fa77a5a0aee367e56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "patch": "@@ -1,3 +1,10 @@\n+2006-12-24  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* basic-block.h: Remove the prototype for\n+\texpected_value_to_br_prob.\n+\t* rtl.h: Remove the prototypes for expand_builtin_expect_jump\n+\tand purge_line_number_notes.\n+\n 2006-12-23  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* tree-ssa-loop-niter.c (number_of_iterations_lt_to_ne,"}, {"sha": "79a02e19305151857e5a7582af7a3f938b395bae", "filename": "gcc/basic-block.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "patch": "@@ -869,7 +869,6 @@ extern struct edge_list *pre_edge_rev_lcm (int, sbitmap *,\n extern void compute_available (sbitmap *, sbitmap *, sbitmap *, sbitmap *);\n \n /* In predict.c */\n-extern void expected_value_to_br_prob (void);\n extern bool maybe_hot_bb_p (basic_block);\n extern bool probably_cold_bb_p (basic_block);\n extern bool probably_never_executed_bb_p (basic_block);"}, {"sha": "3772b37755a0f0c61d2285033c5ab53b67b86882", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=9b1ae0a09789baa17e9959b57db78ffc7d4a7fa6", "patch": "@@ -1434,9 +1434,6 @@ extern int currently_expanding_to_rtl;\n /* In expmed.c */\n extern int ceil_log2 (unsigned HOST_WIDE_INT);\n \n-/* In builtins.c */\n-extern rtx expand_builtin_expect_jump (tree, rtx, rtx);\n-\n /* In explow.c */\n extern void set_stack_check_libfunc (rtx);\n extern HOST_WIDE_INT trunc_int_for_mode\t(HOST_WIDE_INT, enum machine_mode);\n@@ -2031,7 +2028,6 @@ extern enum rtx_code reversed_comparison_code_parts (enum rtx_code,\n \t\t\t\t\t\t     rtx, rtx, rtx);\n extern void delete_for_peephole (rtx, rtx);\n extern int condjump_in_parallel_p (rtx);\n-extern unsigned int purge_line_number_notes (void);\n \n /* In emit-rtl.c.  */\n extern int max_reg_num (void);"}]}