{"sha": "9a946fd66c0d8504a8360b19c07cfe19f70748cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE5NDZmZDY2YzBkODUwNGE4MzYwYjE5YzA3Y2ZlMTlmNzA3NDhjYg==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2013-04-12T15:22:06Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2013-04-12T15:22:06Z"}, "message": "arm.md (mov_scc,mov_negscc,mov_notscc): Convert define_insn into define_insn_and_split and emit movsicc patterns.\n\n2013-04-12  Greta Yorsh  <Greta.Yorsh@arm.com>\n\n\t* config/arm/arm.md (mov_scc,mov_negscc,mov_notscc): Convert\n\tdefine_insn into define_insn_and_split and emit movsicc patterns.\n\nFrom-SVN: r197925", "tree": {"sha": "5b51f291a4a96dcc3998898c25dde1484d30289e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b51f291a4a96dcc3998898c25dde1484d30289e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a946fd66c0d8504a8360b19c07cfe19f70748cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a946fd66c0d8504a8360b19c07cfe19f70748cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a946fd66c0d8504a8360b19c07cfe19f70748cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a946fd66c0d8504a8360b19c07cfe19f70748cb/comments", "author": null, "committer": null, "parents": [{"sha": "0ea62378675fd1051cb45fbebf0df6ee69423128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea62378675fd1051cb45fbebf0df6ee69423128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea62378675fd1051cb45fbebf0df6ee69423128"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "26304ecd795059c825552a93d9c3bb0687c4b2f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a946fd66c0d8504a8360b19c07cfe19f70748cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a946fd66c0d8504a8360b19c07cfe19f70748cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a946fd66c0d8504a8360b19c07cfe19f70748cb", "patch": "@@ -1,3 +1,8 @@\n+2013-04-12  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+\t* config/arm/arm.md (mov_scc,mov_negscc,mov_notscc): Convert\n+\tdefine_insn into define_insn_and_split and emit movsicc patterns.\n+\n 2013-04-12  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* config/arm/arm.c (gen_operands_ldrd_strd): Initialize \"base\"."}, {"sha": "4284535304a9244331340ac0f1606a0c37c7e69d", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a946fd66c0d8504a8360b19c07cfe19f70748cb/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a946fd66c0d8504a8360b19c07cfe19f70748cb/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=9a946fd66c0d8504a8360b19c07cfe19f70748cb", "patch": "@@ -8259,36 +8259,56 @@\n    operands[3] = const0_rtx;\"\n )\n \n-(define_insn \"*mov_scc\"\n+(define_insn_and_split \"*mov_scc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(match_operator:SI 1 \"arm_comparison_operator\"\n \t [(match_operand 2 \"cc_register\" \"\") (const_int 0)]))]\n   \"TARGET_ARM\"\n-  \"mov%D1\\\\t%0, #0\\;mov%d1\\\\t%0, #1\"\n+  \"#\"   ; \"mov%D1\\\\t%0, #0\\;mov%d1\\\\t%0, #1\"\n+  \"TARGET_ARM\"\n+  [(set (match_dup 0)\n+        (if_then_else:SI (match_dup 1)\n+                         (const_int 1)\n+                         (const_int 0)))]\n+  \"\"\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"insn\" \"mov\")\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*mov_negscc\"\n+(define_insn_and_split \"*mov_negscc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(neg:SI (match_operator:SI 1 \"arm_comparison_operator\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_ARM\"\n-  \"mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\"\n+  \"#\"   ; \"mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\"\n+  \"TARGET_ARM\"\n+  [(set (match_dup 0)\n+        (if_then_else:SI (match_dup 1)\n+                         (match_dup 3)\n+                         (const_int 0)))]\n+  {\n+    operands[3] = GEN_INT (~0);\n+  }\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"insn\" \"mov\")\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*mov_notscc\"\n+(define_insn_and_split \"*mov_notscc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(not:SI (match_operator:SI 1 \"arm_comparison_operator\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_ARM\"\n-  \"mvn%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #1\"\n+  \"#\"   ; \"mvn%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #1\"\n+  \"TARGET_ARM\"\n+  [(set (match_dup 0)\n+        (if_then_else:SI (match_dup 1)\n+                         (match_dup 3)\n+                         (match_dup 4)))]\n+  {\n+    operands[3] = GEN_INT (~1);\n+    operands[4] = GEN_INT (~0);\n+  }\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"insn\" \"mov\")\n    (set_attr \"length\" \"8\")]\n )\n "}]}