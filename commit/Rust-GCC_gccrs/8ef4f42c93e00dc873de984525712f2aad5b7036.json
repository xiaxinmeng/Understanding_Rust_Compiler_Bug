{"sha": "8ef4f42c93e00dc873de984525712f2aad5b7036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVmNGY0MmM5M2UwMGRjODczZGU5ODQ1MjU3MTJmMmFhZDViNzAzNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-01-19T08:59:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-01-19T08:59:39Z"}, "message": "i386.md (*fpatanxf3_i387, [...]): New insn patterns.\n\n\t* config/i386/i386.md (*fpatanxf3_i387, fpatan_extend<mode>xf3_i387):\n\tNew insn patterns.\n\t(atan2sf3_1, atan2df3_1, atan2xf3_1): Remove insn patterns.\n\t(atan2xf3): Directly generate RTL pattern.\n\t(atan2<mode>3): Rename from atan2sf3 and atan2df3 and macroize insn\n\tpatterns using X87MODEF12 mode macro.  Use fpatan_extend<mode>xf3_i387\n\tand truncate result to requested mode.  Use SSE_FLOAT_MODE_P to\n\tdisable patterns for SSE math.\n\t(atan<mode>2): Rename from atansf2 and atandf2 and macroize insn\n\tpatterns using X87MODEF12 mode macro.  Use fpatan_extend<mode>xf3_i387\n\tand truncate result to requested mode.  Use SSE_FLOAT_MODE_P to\n\tdisable patterns for SSE math.\n\nFrom-SVN: r120950", "tree": {"sha": "7c5c08fe29319d0bc5cecb374b83a0dfbda55e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c5c08fe29319d0bc5cecb374b83a0dfbda55e54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ef4f42c93e00dc873de984525712f2aad5b7036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef4f42c93e00dc873de984525712f2aad5b7036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ef4f42c93e00dc873de984525712f2aad5b7036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef4f42c93e00dc873de984525712f2aad5b7036/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15e92535d343dd4ae92150270f6d393f74595d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e92535d343dd4ae92150270f6d393f74595d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e92535d343dd4ae92150270f6d393f74595d4d"}], "stats": {"total": 156, "additions": 68, "deletions": 88}, "files": [{"sha": "1843e84d23912384405de1d289a25ba39c78395c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef4f42c93e00dc873de984525712f2aad5b7036/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef4f42c93e00dc873de984525712f2aad5b7036/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ef4f42c93e00dc873de984525712f2aad5b7036", "patch": "@@ -1,3 +1,18 @@\n+2007-01-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*fpatanxf3_i387, fpatan_extend<mode>xf3_i387):\n+\tNew insn patterns.\n+\t(atan2sf3_1, atan2df3_1, atan2xf3_1): Remove insn patterns.\n+\t(atan2xf3): Directly generate RTL pattern.\n+\t(atan2<mode>3): Rename from atan2sf3 and atan2df3 and macroize insn\n+\tpatterns using X87MODEF12 mode macro.  Use fpatan_extend<mode>xf3_i387\n+\tand truncate result to requested mode.  Use SSE_FLOAT_MODE_P to\n+\tdisable patterns for SSE math.\n+\t(atan<mode>2): Rename from atansf2 and atandf2 and macroize insn\n+\tpatterns using X87MODEF12 mode macro.  Use fpatan_extend<mode>xf3_i387\n+\tand truncate result to requested mode.  Use SSE_FLOAT_MODE_P to\n+\tdisable patterns for SSE math.\n+\n 2007-01-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* libgcc-std.ver: Fix typo in %inherit for GCC_4.3.0."}, {"sha": "9766548ef0a989376de20ded28fa0ca1368b695c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 53, "deletions": 88, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef4f42c93e00dc873de984525712f2aad5b7036/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef4f42c93e00dc873de984525712f2aad5b7036/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8ef4f42c93e00dc873de984525712f2aad5b7036", "patch": "@@ -15927,118 +15927,65 @@\n   DONE;\n })\n \n-(define_insn \"atan2df3_1\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:DF 1 \"register_operand\" \"u\")]\n-\t\t   UNSPEC_FPATAN))\n-   (clobber (match_scratch:DF 3 \"=1\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-  \"fpatan\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_expand \"atan2df3\"\n-  [(use (match_operand:DF 0 \"register_operand\" \"\"))\n-   (use (match_operand:DF 2 \"register_operand\" \"\"))\n-   (use (match_operand:DF 1 \"register_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  rtx copy = gen_reg_rtx (DFmode);\n-  emit_move_insn (copy, operands[1]);\n-  emit_insn (gen_atan2df3_1 (operands[0], copy, operands[2]));\n-  DONE;\n-})\n-\n-(define_expand \"atandf2\"\n-  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t\t   (unspec:DF [(match_dup 2)\n-\t\t\t       (match_operand:DF 1 \"register_operand\" \"\")]\n-\t\t    UNSPEC_FPATAN))\n-\t      (clobber (match_scratch:DF 3 \"\"))])]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  operands[2] = gen_reg_rtx (DFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (DFmode));  /* fld1 */\n-})\n-\n-(define_insn \"atan2sf3_1\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:SF 1 \"register_operand\" \"u\")]\n-\t\t   UNSPEC_FPATAN))\n-   (clobber (match_scratch:SF 3 \"=1\"))]\n+(define_insn \"*fpatanxf3_i387\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+        (unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")\n+\t            (match_operand:XF 2 \"register_operand\" \"u\")]\n+\t           UNSPEC_FPATAN))\n+   (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_expand \"atan2sf3\"\n-  [(use (match_operand:SF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SF 2 \"register_operand\" \"\"))\n-   (use (match_operand:SF 1 \"register_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  rtx copy = gen_reg_rtx (SFmode);\n-  emit_move_insn (copy, operands[1]);\n-  emit_insn (gen_atan2sf3_1 (operands[0], copy, operands[2]));\n-  DONE;\n-})\n-\n-(define_expand \"atansf2\"\n-  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t\t   (unspec:SF [(match_dup 2)\n-\t\t\t       (match_operand:SF 1 \"register_operand\" \"\")]\n-\t\t    UNSPEC_FPATAN))\n-\t      (clobber (match_scratch:SF 3 \"\"))])]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  operands[2] = gen_reg_rtx (SFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (SFmode));  /* fld1 */\n-})\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"atan2xf3_1\"\n+(define_insn \"fpatan_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-        (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n-\t            (match_operand:XF 1 \"register_operand\" \"u\")]\n+        (unspec:XF [(float_extend:XF\n+\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))\n+\t\t    (float_extend:XF\n+\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"u\"))]\n \t           UNSPEC_FPATAN))\n-   (clobber (match_scratch:XF 3 \"=1\"))]\n+   (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n   \"fpatan\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n (define_expand \"atan2xf3\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 2 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t\t   (unspec:XF [(match_operand:XF 2 \"register_operand\" \"\")\n+\t\t\t       (match_operand:XF 1 \"register_operand\" \"\")]\n+\t\t\t      UNSPEC_FPATAN))\n+\t      (clobber (match_scratch:XF 3 \"\"))])]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"\")\n+\n+(define_expand \"atan2<mode>3\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 2 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx copy = gen_reg_rtx (XFmode);\n-  emit_move_insn (copy, operands[1]);\n-  emit_insn (gen_atan2xf3_1 (operands[0], copy, operands[2]));\n+  rtx op0 = gen_reg_rtx (XFmode);\n+\n+  emit_insn (gen_fpatan_extend<mode>xf3_i387 (op0, operands[2], operands[1]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n (define_expand \"atanxf2\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t\t   (unspec:XF [(match_dup 2)\n \t\t\t       (match_operand:XF 1 \"register_operand\" \"\")]\n-\t\t    UNSPEC_FPATAN))\n+\t\t\t      UNSPEC_FPATAN))\n \t      (clobber (match_scratch:XF 3 \"\"))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n@@ -16047,6 +15994,24 @@\n   emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n+(define_expand \"atan<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations\"\n+{\n+  rtx op0 = gen_reg_rtx (XFmode);\n+\n+  operands[2] = gen_reg_rtx (<MODE>mode);\n+  emit_move_insn (operands[2], CONST1_RTX (<MODE>mode));  /* fld1 */\n+\n+  emit_insn (gen_fpatan_extend<mode>xf3_i387 (op0, operands[2], operands[1]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n+})\n+\n (define_expand \"asindf2\"\n   [(set (match_dup 2)\n \t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))"}]}