{"sha": "bce623434fce35c3d515224b70e08d03fabce691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNlNjIzNDM0ZmNlMzVjM2Q1MTUyMjRiNzBlMDhkMDNmYWJjZTY5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-12-05T19:09:11Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-05T19:09:11Z"}, "message": "hashtable_policy.h (_Prime_rehash_policy:: _S_n_primes): Add.\n\n2007-12-05  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1_impl/hashtable_policy.h (_Prime_rehash_policy::\n\t_S_n_primes): Add.\n\t(_Prime_rehash_policy::_M_next_bkt, _M_bkt_for_elements,\n\t_M_need_rehash): Adjust.\n\nFrom-SVN: r130628", "tree": {"sha": "9e14d8026ae41f3db3c08657adc09c72ea15bbd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e14d8026ae41f3db3c08657adc09c72ea15bbd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bce623434fce35c3d515224b70e08d03fabce691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce623434fce35c3d515224b70e08d03fabce691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce623434fce35c3d515224b70e08d03fabce691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce623434fce35c3d515224b70e08d03fabce691/comments", "author": null, "committer": null, "parents": [{"sha": "3898fe8e7cdf79c37a476c2169b4386f33a9bee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3898fe8e7cdf79c37a476c2169b4386f33a9bee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3898fe8e7cdf79c37a476c2169b4386f33a9bee3"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "440930c5d0c93b932330571cd746056e570d0ec2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce623434fce35c3d515224b70e08d03fabce691/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce623434fce35c3d515224b70e08d03fabce691/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bce623434fce35c3d515224b70e08d03fabce691", "patch": "@@ -1,3 +1,10 @@\n+2007-12-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1_impl/hashtable_policy.h (_Prime_rehash_policy::\n+\t_S_n_primes): Add.\n+\t(_Prime_rehash_policy::_M_next_bkt, _M_bkt_for_elements,\n+\t_M_need_rehash): Adjust.\n+\n 2007-12-03  Paolo Carlini  <pcarlini@suse.de>\n \n \t* src/hashtable.cc (__prime_list): Use __SIZEOF_LONG__."}, {"sha": "514d444420eb395964f1b6df7bbebc1f787a723b", "filename": "libstdc++-v3/include/tr1_impl/hashtable_policy.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce623434fce35c3d515224b70e08d03fabce691/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce623434fce35c3d515224b70e08d03fabce691/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable_policy.h?ref=bce623434fce35c3d515224b70e08d03fabce691", "patch": "@@ -405,7 +405,9 @@ namespace __detail\n     std::pair<bool, std::size_t>\n     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,\n \t\t   std::size_t __n_ins) const;\n-    \n+\n+    enum { _S_n_primes = sizeof(unsigned long) != 8 ? 256 : 256 + 48 };\n+\n     float                _M_max_load_factor;\n     float                _M_growth_factor;\n     mutable std::size_t  _M_next_resize;\n@@ -421,9 +423,8 @@ namespace __detail\n   _Prime_rehash_policy::\n   _M_next_bkt(std::size_t __n) const\n   {\n-    const int __n_primes = sizeof(unsigned long) != 8 ? 256 : 256 + 48; \n     const unsigned long* __p = std::lower_bound(__prime_list, __prime_list\n-\t\t\t\t\t\t+ __n_primes, __n);\n+\t\t\t\t\t\t+ _S_n_primes, __n);\n     _M_next_resize = static_cast<std::size_t>(std::ceil(*__p\n \t\t\t\t\t\t\t* _M_max_load_factor));\n     return *__p;\n@@ -435,10 +436,9 @@ namespace __detail\n   _Prime_rehash_policy::\n   _M_bkt_for_elements(std::size_t __n) const\n   {\n-    const int __n_primes = sizeof(unsigned long) != 8 ? 256 : 256 + 48; \n     const float __min_bkts = __n / _M_max_load_factor;\n     const unsigned long* __p = std::lower_bound(__prime_list, __prime_list\n-\t\t\t\t\t\t+ __n_primes, __min_bkts);\n+\t\t\t\t\t\t+ _S_n_primes, __min_bkts);\n     _M_next_resize = static_cast<std::size_t>(std::ceil(*__p\n \t\t\t\t\t\t\t* _M_max_load_factor));\n     return *__p;\n@@ -465,9 +465,8 @@ namespace __detail\n \tif (__min_bkts > __n_bkt)\n \t  {\n \t    __min_bkts = std::max(__min_bkts, _M_growth_factor * __n_bkt);\n-\t    const int __n_primes = sizeof(unsigned long) != 8 ? 256 : 256 + 48; \n \t    const unsigned long* __p =\n-\t      std::lower_bound(__prime_list, __prime_list + __n_primes,\n+\t      std::lower_bound(__prime_list, __prime_list + _S_n_primes,\n \t\t\t       __min_bkts);\n \t    _M_next_resize =\n \t      static_cast<std::size_t>(std::ceil(*__p * _M_max_load_factor));"}]}