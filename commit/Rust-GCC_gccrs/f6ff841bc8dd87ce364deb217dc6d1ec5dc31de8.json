{"sha": "f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmZjg0MWJjOGRkODdjZTM2NGRlYjIxN2RjNmQxZWM1ZGMzMWRlOA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2019-10-18T19:03:11Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2019-10-18T19:03:11Z"}, "message": "[arm] Implement negscc using SBC when appropriate.\n\nWhen the carry flag is appropriately set by a comprison, negscc\npatterns can expand into a simple SBC of a register with itself.  This\nmeans we can convert two conditional instructions into a single\nnon-conditional instruction.  Furthermore, in Thumb2 we can avoid the\nneed for an IT instruction as well.  This patch also fixes the remaining\ntestcase that we initially XFAILed in the first patch of this series.\n\ngcc:\n\t* config/arm/arm.md (negscc_borrow): New pattern.\n\t(mov_negscc): Don't split if the insn would match negscc_borrow.\n\t* config/arm/thumb2.md (thumb2_mov_negscc): Likewise.\n\t(thumb2_mov_negscc_strict_it): Likewise.\n\ntestsuite:\n\t* gcc.target/arm/negdi-3.c: Remove XFAIL markers.\n\nFrom-SVN: r277175", "tree": {"sha": "f7fb49934234207a982110dc635c074c39ae023e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7fb49934234207a982110dc635c074c39ae023e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/comments", "author": null, "committer": null, "parents": [{"sha": "24d28a8778f4c7efcebea6c785806082eeacf9fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d28a8778f4c7efcebea6c785806082eeacf9fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24d28a8778f4c7efcebea6c785806082eeacf9fe"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "4d2812a08937cc8b2758135987be17d8aa9ed5f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "patch": "@@ -1,3 +1,10 @@\n+2019-10-18  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/arm.md (negscc_borrow): New pattern.\n+\t(mov_negscc): Don't split if the insn would match negscc_borrow.\n+\t* config/arm/thumb2.md (thumb2_mov_negscc): Likewise.\n+\t(thumb2_mov_negscc_strict_it): Likewise.\n+\n 2019-10-18  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/arm.c (arm_insn_cost): New function."}, {"sha": "74f417fbe4b20d390251e70acdeb0a08c6187745", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "patch": "@@ -6612,13 +6612,23 @@\n    (set_attr \"type\" \"multiple\")]\n )\n \n+(define_insn \"*negscc_borrow\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(neg:SI (match_operand:SI 1 \"arm_borrow_operation\" \"\")))]\n+  \"TARGET_32BIT\"\n+  \"sbc\\\\t%0, %0, %0\"\n+  [(set_attr \"conds\" \"use\")\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"type\" \"adc_reg\")]\n+)\n+\n (define_insn_and_split \"*mov_negscc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(neg:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n-  \"TARGET_ARM\"\n+  \"TARGET_ARM && !arm_borrow_operation (operands[1], SImode)\"\n   \"#\"   ; \"mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\"\n-  \"TARGET_ARM\"\n+  \"&& true\"\n   [(set (match_dup 0)\n         (if_then_else:SI (match_dup 1)\n                          (match_dup 3)"}, {"sha": "8d0b6be920518e891c1d3a88274b70395a44a124", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "patch": "@@ -368,7 +368,9 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(neg:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n-  \"TARGET_THUMB2 && !arm_restrict_it\"\n+  \"TARGET_THUMB2\n+   && !arm_restrict_it\n+   && !arm_borrow_operation (operands[1], SImode)\"\n   \"#\"   ; \"ite\\\\t%D1\\;mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\"\n   \"&& true\"\n   [(set (match_dup 0)\n@@ -387,7 +389,9 @@\n   [(set (match_operand:SI 0 \"low_register_operand\" \"=l\")\n \t(neg:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n-  \"TARGET_THUMB2 && arm_restrict_it\"\n+  \"TARGET_THUMB2\n+   && arm_restrict_it\n+   && !arm_borrow_operation (operands[1], SImode)\"\n   \"#\"   ; \";mvn\\\\t%0, #0 ;it\\\\t%D1\\;mov%D1\\\\t%0, #0\\\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)"}, {"sha": "d5d934d1b8623593b4b776b631006d8298a953c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "patch": "@@ -1,3 +1,7 @@\n+2019-10-18  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc.target/arm/negdi-3.c: Remove XFAIL markers.\n+\n 2019-10-18  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* gcc.target/arm/pr53447-1.c: Remove XFAIL."}, {"sha": "76ddf49fc0ddb8b0287b8e30f72962ea25d12438", "filename": "gcc/testsuite/gcc.target/arm/negdi-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fnegdi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fnegdi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fnegdi-3.c?ref=f6ff841bc8dd87ce364deb217dc6d1ec5dc31de8", "patch": "@@ -11,7 +11,7 @@ Expected output:\n         rsbs    r0, r0, #0\n         sbc     r1, r1, r1\n */\n-/* { dg-final { scan-assembler-times \"rsb\" 1 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times \"sbc\" 1 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times \"mov\" 0 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times \"rsc\" 0 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"rsb\" 1 } } */\n+/* { dg-final { scan-assembler-times \"sbc\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mov\" 0 } } */\n+/* { dg-final { scan-assembler-times \"rsc\" 0 } } */"}]}