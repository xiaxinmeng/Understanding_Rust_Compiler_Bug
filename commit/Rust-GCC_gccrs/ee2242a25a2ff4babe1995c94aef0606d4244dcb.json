{"sha": "ee2242a25a2ff4babe1995c94aef0606d4244dcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUyMjQyYTI1YTJmZjRiYWJlMTk5NWM5NGFlZjA2MDZkNDI0NGRjYg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@verizon.net", "date": "2005-08-01T05:13:08Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2005-08-01T05:13:08Z"}, "message": "intrinsic.texi: Add documentation for exponent...\n\n2005-07-31  Jerry DeLisle  <jvdelisle@verizon.net>\n\n        * intrinsic.texi: Add documentation for exponent, floor, and fnum and\n        fix description of ceiling in index.\n\nFrom-SVN: r102622", "tree": {"sha": "c79012e1b24c849faf7804f5893ef36cd4262cc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c79012e1b24c849faf7804f5893ef36cd4262cc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee2242a25a2ff4babe1995c94aef0606d4244dcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2242a25a2ff4babe1995c94aef0606d4244dcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee2242a25a2ff4babe1995c94aef0606d4244dcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2242a25a2ff4babe1995c94aef0606d4244dcb/comments", "author": null, "committer": null, "parents": [{"sha": "13a44ee0e26699b3ed255086e7fb7890001d2706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a44ee0e26699b3ed255086e7fb7890001d2706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a44ee0e26699b3ed255086e7fb7890001d2706"}], "stats": {"total": 142, "additions": 132, "deletions": 10}, "files": [{"sha": "1a04beb60584d6c2bf47ef60532212430885c21c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2242a25a2ff4babe1995c94aef0606d4244dcb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2242a25a2ff4babe1995c94aef0606d4244dcb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ee2242a25a2ff4babe1995c94aef0606d4244dcb", "patch": "@@ -1,3 +1,8 @@\n+2005-07-31  Jerry DeLisle  <jvdelisle@verizon.net>\n+\n+        * intrinsic.texi: Add documentation for exponent, floor, and fnum and\n+        fix description of ceiling in index.\n+\n 2005-07-31  Steven Bosscher  <stevenb@suse.de>\n \n \t* trans-decl.c (gfc_build_builtin_function_decls): Give the internal"}, {"sha": "ffdbd5e9b5f46b1637f4ec3c24dd53b5b244afa8", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 127, "deletions": 10, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2242a25a2ff4babe1995c94aef0606d4244dcb/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2242a25a2ff4babe1995c94aef0606d4244dcb/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=ee2242a25a2ff4babe1995c94aef0606d4244dcb", "patch": "@@ -83,7 +83,10 @@ and editing.  All contributions and corrections are strongly encouraged.\n * @code{ERFC}:          ERFC,      Complementary error function\n * @code{ETIME}:         ETIME,     Execution time subroutine (or function)\n * @code{EXIT}:          EXIT,      Exit the program with status.\n-* @code{EXP}:           EXP,       Cosine function\n+* @code{EXP}:           EXP,       Exponential function\n+* @code{EXPONENT}:      EXPONENT,  Exponent function\n+* @code{FLOOR}:         FLOOR,     Integer floor function\n+* @code{FNUM}:          FNUM,      File number function\n * @code{LOG}:           LOG,       Logarithm function\n * @code{LOG10}:         LOG10,     Base 10 logarithm function \n * @code{SQRT}:          SQRT,      Square-root function\n@@ -1322,7 +1325,7 @@ f95, gnu\n elemental function\n \n @item @emph{Syntax}:\n-@code{X = CEILING(X[,KIND])}\n+@code{I = CEILING(X[,KIND])}\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .80\n@@ -2593,6 +2596,128 @@ end program test_exp\n \n \n \n+@node EXPONENT\n+@section @code{EXPONENT} --- Exponent function \n+@findex @code{EXPONENT} intrinsic\n+@cindex exponent function\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{EXPONENT(X)} returns the value of the exponent part of @var{X}. If @var{X}\n+is zero the value returned is zero. \n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Class}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{I = EXPONENT(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type default @code{INTEGER}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_exponent\n+  real :: x = 1.0\n+  integer :: i\n+  i = exponent(x)\n+  print *, i\n+  print *, exponent(0.0)\n+end program test_exponent\n+@end smallexample\n+@end table\n+\n+\n+\n+@node FLOOR\n+@section @code{FLOOR} --- Integer floor function\n+@findex @code{FLOOR} intrinsic\n+@cindex floor\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{FLOOR(X)} returns the greatest integer less than or equal to @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Class}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{I = FLOOR(X[,KIND])}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be @code{REAL(*)}.\n+@item @var{KIND} @tab Optional scaler integer initialization expression.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{INTEGER(KIND)}\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_floor\n+    real :: x = 63.29\n+    real :: y = -63.59\n+    print *, floor(x) ! returns 63\n+    print *, floor(y) ! returns -64\n+end program test_floor\n+@end smallexample\n+@end table\n+\n+\n+\n+@node FNUM\n+@section @code{FNUM} --- File number function\n+@findex @code{FNUM} intrinsic\n+@cindex fnum\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{FNUM(UNIT)} returns the Posix file descriptor number coresponding to the\n+open Fortran I/O unit @code{UNIT}.\n+\n+@item @emph{Option}:\n+gnu\n+\n+@item @emph{Class}:\n+non-elemental function\n+\n+@item @emph{Syntax}:\n+@code{I = FNUM(UNIT)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{UNIT} @tab The type shall be @code{INTEGER}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{INTEGER}\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_fnum\n+  integer :: i\n+  open (unit=10, status = \"scratch\")\n+  i = fnum(10)\n+  print *, i\n+  close (10)\n+end program test_fnum\n+@end smallexample\n+@end table\n+\n+\n+\n @node LOG\n @section @code{LOG} --- Logarithm function\n @findex @code{LOG} intrinsic\n@@ -2935,16 +3060,8 @@ end program test_tanh\n \n \n \n-@comment sub   exit\n-@comment \n-@comment gen   exponent\n-@comment \n-@comment gen   floor\n-@comment \n @comment sub   flush\n @comment \n-@comment gen   fnum\n-@comment \n @comment gen   fraction\n @comment \n @comment gen   fstat"}]}