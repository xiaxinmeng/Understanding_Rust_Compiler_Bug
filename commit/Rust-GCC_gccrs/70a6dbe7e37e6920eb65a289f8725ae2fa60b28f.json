{"sha": "70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhNmRiZTdlMzdlNjkyMGViNjVhMjg5Zjg3MjVhZTJmYTYwYjI4Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-01-03T21:13:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-01-03T21:13:49Z"}, "message": "invoke.texi (SPARC options): Document -mlra as the default.\n\n\t* doc/invoke.texi (SPARC options): Document -mlra as the default.\n\t* config/sparc/sparc.c (sparc_option_override): Force LRA unless\n\t-mlra/-mno-lra was passed to the compiler.\n\nFrom-SVN: r244034", "tree": {"sha": "14cf22d769adfe965b499acfa3a4857ebe0b1e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cf22d769adfe965b499acfa3a4857ebe0b1e60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/comments", "author": null, "committer": null, "parents": [{"sha": "549a66a54dde40e643b26a8291efa041b165409f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/549a66a54dde40e643b26a8291efa041b165409f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/549a66a54dde40e643b26a8291efa041b165409f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "281a4a43a07382eb1d685a1200c3411cfc89a2e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "patch": "@@ -1,3 +1,9 @@\n+2017-01-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* doc/invoke.texi (SPARC options): Document -mlra as the default.\n+\t* config/sparc/sparc.c (sparc_option_override): Force LRA unless\n+\t-mlra/-mno-lra was passed to the compiler.\n+\n 2017-01-03  James Cowgill  <James.Cowgill@imgtec.com>\n \n \tPR rtl-optimization/65618"}, {"sha": "b9213c30bcb0e49826f319667bbf7fe4d7bac157", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "patch": "@@ -1523,6 +1523,10 @@ sparc_option_override (void)\n   if (TARGET_ARCH32)\n     target_flags &= ~MASK_STACK_BIAS;\n \n+  /* Use LRA instead of reload, unless otherwise instructed.  */\n+  if (!(target_flags_explicit & MASK_LRA))\n+    target_flags |= MASK_LRA;\n+\n   /* Supply a default value for align_functions.  */\n   if (align_functions == 0\n       && (sparc_cpu == PROCESSOR_ULTRASPARC"}, {"sha": "f1794bc0fe69230c008d7b06435ff07d87b66127", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6dbe7e37e6920eb65a289f8725ae2fa60b28f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=70a6dbe7e37e6920eb65a289f8725ae2fa60b28f", "patch": "@@ -23271,8 +23271,8 @@ in 64-bit mode.\n @itemx -mno-lra\n @opindex mlra\n @opindex mno-lra\n-Enable Local Register Allocation.  This is experimental for SPARC, so by\n-default the compiler uses standard reload (i.e. @option{-mno-lra}).\n+Enable Local Register Allocation.  This is the default for SPARC since GCC 7\n+so @option{-mno-lra} needs to be passed to get old Reload.\n \n @item -mcpu=@var{cpu_type}\n @opindex mcpu"}]}