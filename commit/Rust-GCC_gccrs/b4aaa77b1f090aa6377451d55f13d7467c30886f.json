{"sha": "b4aaa77b1f090aa6377451d55f13d7467c30886f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRhYWE3N2IxZjA5MGFhNjM3NzQ1MWQ1NWYxM2Q3NDY3YzMwODg2Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-05-08T21:26:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-05-08T21:26:29Z"}, "message": "emit-rtl.c (unshare_all_rtl_1): Don't copy DECL_RTL.\n\n\t* emit-rtl.c (unshare_all_rtl_1): Don't copy DECL_RTL.  Don't\n\tcall unshare_all_decls.\n\t(unshare_all_rtl): Adjust the call to unshare_all_rtl_1.\n\t(unshare_all_decls): Remove.\n\nFrom-SVN: r124556", "tree": {"sha": "d5ba13da8f9c8402241f233aea74c0aa9a6c5451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5ba13da8f9c8402241f233aea74c0aa9a6c5451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4aaa77b1f090aa6377451d55f13d7467c30886f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4aaa77b1f090aa6377451d55f13d7467c30886f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4aaa77b1f090aa6377451d55f13d7467c30886f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4aaa77b1f090aa6377451d55f13d7467c30886f/comments", "author": null, "committer": null, "parents": [{"sha": "bfa64d0e608e259094fc46674a0b430d1fa7970f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfa64d0e608e259094fc46674a0b430d1fa7970f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfa64d0e608e259094fc46674a0b430d1fa7970f"}], "stats": {"total": 40, "additions": 10, "deletions": 30}, "files": [{"sha": "1a9281cac3e9b0b75f18aa3d3232bdc696747270", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4aaa77b1f090aa6377451d55f13d7467c30886f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4aaa77b1f090aa6377451d55f13d7467c30886f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4aaa77b1f090aa6377451d55f13d7467c30886f", "patch": "@@ -1,3 +1,10 @@\n+2007-05-08  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* emit-rtl.c (unshare_all_rtl_1): Don't copy DECL_RTL.  Don't\n+\tcall unshare_all_decls.\n+\t(unshare_all_rtl): Adjust the call to unshare_all_rtl_1.\n+\t(unshare_all_decls): Remove.\n+\n 2007-05-08  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR 31847"}, {"sha": "cd6bf24d61104222635e9f9bfa6df3202d9ae6cb", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4aaa77b1f090aa6377451d55f13d7467c30886f/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4aaa77b1f090aa6377451d55f13d7467c30886f/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=b4aaa77b1f090aa6377451d55f13d7467c30886f", "patch": "@@ -167,7 +167,6 @@ static GTY ((if_marked (\"ggc_marked_p\"), param_is (struct rtx_def)))\n \n static rtx make_call_insn_raw (rtx);\n static rtx change_address_1 (rtx, enum machine_mode, rtx, int);\n-static void unshare_all_decls (tree);\n static void reset_used_decls (tree);\n static void mark_label_nuses (rtx);\n static hashval_t const_int_htab_hash (const void *);\n@@ -2115,17 +2114,8 @@ set_new_first_and_last_insn (rtx first, rtx last)\n    structure.  This routine should only be called once.  */\n \n static void\n-unshare_all_rtl_1 (tree fndecl, rtx insn)\n+unshare_all_rtl_1 (rtx insn)\n {\n-  tree decl;\n-\n-  /* Make sure that virtual parameters are not shared.  */\n-  for (decl = DECL_ARGUMENTS (fndecl); decl; decl = TREE_CHAIN (decl))\n-    SET_DECL_RTL (decl, copy_rtx_if_shared (DECL_RTL (decl)));\n-\n-  /* Make sure that virtual stack slots are not shared.  */\n-  unshare_all_decls (DECL_INITIAL (fndecl));\n-\n   /* Unshare just about everything else.  */\n   unshare_all_rtl_in_chain (insn);\n \n@@ -2166,13 +2156,13 @@ unshare_all_rtl_again (rtx insn)\n \n   reset_used_flags (stack_slot_list);\n \n-  unshare_all_rtl_1 (cfun->decl, insn);\n+  unshare_all_rtl_1 (insn);\n }\n \n unsigned int\n unshare_all_rtl (void)\n {\n-  unshare_all_rtl_1 (current_function_decl, get_insns ());\n+  unshare_all_rtl_1 (get_insns ());\n   return 0;\n }\n \n@@ -2358,23 +2348,6 @@ unshare_all_rtl_in_chain (rtx insn)\n       }\n }\n \n-/* Go through all virtual stack slots of a function and copy any\n-   shared structure.  */\n-static void\n-unshare_all_decls (tree blk)\n-{\n-  tree t;\n-\n-  /* Copy shared decls.  */\n-  for (t = BLOCK_VARS (blk); t; t = TREE_CHAIN (t))\n-    if (DECL_RTL_SET_P (t))\n-      SET_DECL_RTL (t, copy_rtx_if_shared (DECL_RTL (t)));\n-\n-  /* Now process sub-blocks.  */\n-  for (t = BLOCK_SUBBLOCKS (blk); t; t = TREE_CHAIN (t))\n-    unshare_all_decls (t);\n-}\n-\n /* Go through all virtual stack slots of a function and mark them as\n    not shared.  */\n static void"}]}