{"sha": "462da2af3d07b8e67cbf296744326dd7ba49772b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyZGEyYWYzZDA3YjhlNjdjYmYyOTY3NDQzMjZkZDdiYTQ5NzcyYg==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-05-06T21:01:51Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-05-06T21:01:51Z"}, "message": "(final_scan_insn): Modify conditional moves whose cc is nonstandard.\n\nFrom-SVN: r11943", "tree": {"sha": "8eb91183daaccdceae0385cee2f980a54d496f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb91183daaccdceae0385cee2f980a54d496f38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/462da2af3d07b8e67cbf296744326dd7ba49772b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462da2af3d07b8e67cbf296744326dd7ba49772b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/462da2af3d07b8e67cbf296744326dd7ba49772b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462da2af3d07b8e67cbf296744326dd7ba49772b/comments", "author": null, "committer": null, "parents": [{"sha": "17c1a44f7551462e48911ff83394ea9f828f0d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c1a44f7551462e48911ff83394ea9f828f0d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c1a44f7551462e48911ff83394ea9f828f0d00"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "47d46442b2c7fdaf2017182532fdb749eaf07eff", "filename": "gcc/final.c", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462da2af3d07b8e67cbf296744326dd7ba49772b/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462da2af3d07b8e67cbf296744326dd7ba49772b/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=462da2af3d07b8e67cbf296744326dd7ba49772b", "patch": "@@ -1869,12 +1869,29 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t  }\n \n \t/* Make same adjustments to instructions that examine the\n-\t   condition codes without jumping (if this machine has them).  */\n+\t   condition codes without jumping and instructions that\n+\t   handle conditional moves (if this machine has either one).  */\n \n \tif (cc_status.flags != 0\n \t    && GET_CODE (body) == SET)\n \t  {\n-\t    switch (GET_CODE (SET_SRC (body)))\n+\t    rtx cond_rtx, then_rtx, else_rtx;\n+\t    \n+\t    if (GET_CODE (insn) != JUMP_INSN\n+\t\t&& GET_CODE (SET_SRC (body)) == IF_THEN_ELSE)\n+\t      {\n+\t\tcond_rtx = XEXP (SET_SRC (body), 0);\n+\t\tthen_rtx = XEXP (SET_SRC (body), 1);\n+\t\telse_rtx = XEXP (SET_SRC (body), 2);\n+\t      }\n+\t    else\n+\t      {\n+\t\tcond_rtx = SET_SRC (body);\n+\t\tthen_rtx = const_true_rtx;\n+\t\telse_rtx = const0_rtx;\n+\t      }\n+\t    \n+\t    switch (GET_CODE (cond_rtx))\n \t      {\n \t      case GTU:\n \t      case GT:\n@@ -1888,18 +1905,26 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t      case NE:\n \t\t{\n \t\t  register int result;\n-\t\t  if (XEXP (SET_SRC (body), 0) != cc0_rtx)\n+\t\t  if (XEXP (cond_rtx, 0) != cc0_rtx)\n \t\t    break;\n-\t\t  result = alter_cond (SET_SRC (body));\n+\t\t  result = alter_cond (cond_rtx);\n \t\t  if (result == 1)\n-\t\t    validate_change (insn, &SET_SRC (body), const_true_rtx, 0);\n+\t\t    validate_change (insn, &SET_SRC (body), then_rtx, 0);\n \t\t  else if (result == -1)\n-\t\t    validate_change (insn, &SET_SRC (body), const0_rtx, 0);\n+\t\t    validate_change (insn, &SET_SRC (body), else_rtx, 0);\n \t\t  else if (result == 2)\n \t\t    INSN_CODE (insn) = -1;\n+\t\t  if (SET_DEST (body) == SET_SRC (body))\n+\t\t    {\n+\t\t      PUT_CODE (insn, NOTE);\n+\t\t      NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n+\t\t      NOTE_SOURCE_FILE (insn) = 0;\n+\t\t      break;\n+\t\t    }\n \t\t}\n \t      }\n \t  }\n+\n #endif\n \n \t/* Do machine-specific peephole optimizations if desired.  */"}]}