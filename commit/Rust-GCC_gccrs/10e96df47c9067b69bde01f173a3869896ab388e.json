{"sha": "10e96df47c9067b69bde01f173a3869896ab388e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBlOTZkZjQ3YzkwNjdiNjliZGUwMWYxNzNhMzg2OTg5NmFiMzg4ZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-02-09T13:47:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-02-09T13:47:25Z"}, "message": "200x-xx-xx Nathan Sidwell <nathan@codesourcery.com> Richard Sandiford <richard@codesourcery.com>\n\ngcc/\n200x-xx-xx  Nathan Sidwell  <nathan@codesourcery.com>\n\t    Richard Sandiford  <richard@codesourcery.com>\n\n\t* config.gcc (m68010-*-netbsdelf*, m68k*-*-netbsdelf*)\n\t(m68k*-*-openbsd*, m68k-*-linux*): Set default_cf_cpu.\n\t(m68k-*-aout*, m68k-*-coff*, m68k-*-uclinux*, m68k-*-rtems*): Add\n\tm68k/t-mlib to tmake_file.\n\t(m68020-*-elf*, m68k-*-elf*): Likewise.  Add t-m68kbare as well.\n\t(m68k*-*-*): Use --with-arch to pick a default for --with-cpu.\n\t(m680[012]0-*-*, m68k*-*-*): Add support for --with-arch.\n\tAllow it to be cf or m68k.  Set m68k_arch_family.  If that\n\tvariable is not empty, add t-$m68k_arch_family to tmake_file.\n\tAdd t-mlibs to tmake_file.\n\t* doc/install.texi: Document --with-arch=m68k and --with-arch=cf.\n\t* config/m68k/t-cf: New file.\n\t* config/m68k/t-m68k: Likewise.\n\t* config/m68k/t-mlibs: Likewise.\n\t* config/m68k/t-m68kbare (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Delete.\n\t(M68K_MLIB_DIRNAMES, M68K_MLIB_OPTIONS): Define.\n\t* config/m68k/t-m68kelf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS, LIBGCC, INSTALL_LIBGCC):\n\tDelete.\n\t* config/m68k/t-openbsd (MULTILIB_OPTIONS, LIBGCC): Delete.\n\t(INSTALL_LIBGCC): Delete.\n\t(M68K_MLIB_DIRNAMES, M68K_MLIB_OPTIONS): Define.\n\t* config/m68k/t-rtems (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Delete.\n\t(M68K_MLIB_CPU): Define.\n\t* config/m68k/t-uclinux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Delete.\n\t(M68K_MLIB_CPU, M68K_MLIB_OPTIONS, M68K_MLIB_DIRNAMES): Define.\n\nCo-Authored-By: Richard Sandiford <richard@codesourcery.com>\n\nFrom-SVN: r121743", "tree": {"sha": "4527096677ae7ba2446c6bd23836879869baca44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4527096677ae7ba2446c6bd23836879869baca44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10e96df47c9067b69bde01f173a3869896ab388e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e96df47c9067b69bde01f173a3869896ab388e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10e96df47c9067b69bde01f173a3869896ab388e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e96df47c9067b69bde01f173a3869896ab388e/comments", "author": null, "committer": null, "parents": [{"sha": "b44e7f07c5a8b8dfe7549583d3504f1a39208b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b44e7f07c5a8b8dfe7549583d3504f1a39208b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b44e7f07c5a8b8dfe7549583d3504f1a39208b03"}], "stats": {"total": 247, "additions": 204, "deletions": 43}, "files": [{"sha": "92903f55449fa6899e0bc4bfe4923bf45a79f8ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1,3 +1,36 @@\n+2007-02-09  Nathan Sidwell  <nathan@codesourcery.com>\n+\t    Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config.gcc (m68010-*-netbsdelf*, m68k*-*-netbsdelf*)\n+\t(m68k*-*-openbsd*, m68k-*-linux*): Set default_cf_cpu.\n+\t(m68k-*-aout*, m68k-*-coff*, m68k-*-uclinux*, m68k-*-rtems*): Add\n+\tm68k/t-mlib to tmake_file.\n+\t(m68020-*-elf*, m68k-*-elf*): Likewise.  Add t-m68kbare as well.\n+\t(m68k*-*-*): Use --with-arch to pick a default for --with-cpu.\n+\t(m680[012]0-*-*, m68k*-*-*): Add support for --with-arch.\n+\tAllow it to be cf or m68k.  Set m68k_arch_family.  If that\n+\tvariable is not empty, add t-$m68k_arch_family to tmake_file.\n+\tAdd t-mlibs to tmake_file.\n+\t* doc/install.texi: Document --with-arch=m68k and --with-arch=cf.\n+\t* config/m68k/t-cf: New file.\n+\t* config/m68k/t-m68k: Likewise.\n+\t* config/m68k/t-mlibs: Likewise.\n+\t* config/m68k/t-m68kbare (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n+\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Delete.\n+\t(M68K_MLIB_DIRNAMES, M68K_MLIB_OPTIONS): Define.\n+\t* config/m68k/t-m68kelf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n+\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS, LIBGCC, INSTALL_LIBGCC):\n+\tDelete.\n+\t* config/m68k/t-openbsd (MULTILIB_OPTIONS, LIBGCC): Delete.\n+\t(INSTALL_LIBGCC): Delete.\n+\t(M68K_MLIB_DIRNAMES, M68K_MLIB_OPTIONS): Define.\n+\t* config/m68k/t-rtems (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n+\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Delete.\n+\t(M68K_MLIB_CPU): Define.\n+\t* config/m68k/t-uclinux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES)\n+\t(MULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Delete.\n+\t(M68K_MLIB_CPU, M68K_MLIB_OPTIONS, M68K_MLIB_DIRNAMES): Define.\n+\n 2007-02-09  Zdenek Dvorak  <dvorakz@suse.cz>\n \tRichard Guenther  <rguenther@suse.de>\n "}, {"sha": "de39b9edeabc68b1f65574f6e22f227c90eeb21d", "filename": "gcc/config.gcc", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1479,30 +1479,35 @@ m68hc12-*-*|m6812-*-*)\n         ;;\n m68k-*-aout*)\n \tdefault_m68k_cpu=68020\n-\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare\"\n+\tdefault_cf_cpu=5206\n+\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare m68k/t-mlibs\"\n \ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kemb.h m68k/m68k-aout.h libgloss.h\"\n \t;;\n m68k-*-coff*)\n \tdefault_m68k_cpu=68020\n-\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare\"\n+\tdefault_cf_cpu=5206\n+\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare m68k/t-mlibs\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kemb.h dbxcoff.h m68k/coff.h dbx.h\"\n \tuse_fixproto=yes\n \t;;\n m68020-*-elf* | m68k-*-elf*)\n \tdefault_m68k_cpu=68020\n+\tdefault_cf_cpu=5206\n \ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n-\ttmake_file=\"m68k/t-floatlib m68k/t-m68kelf\"\n+\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare m68k/t-m68kelf m68k/t-mlibs\"\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n m68010-*-netbsdelf* | m68k*-*-netbsdelf*)\n \tdefault_m68k_cpu=68020\n+\tdefault_cf_cpu=5475\n \ttm_file=\"${tm_file} dbxelf.h elfos.h netbsd.h netbsd-elf.h m68k/netbsd-elf.h\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \t;;\n m68k*-*-openbsd*)\n \tdefault_m68k_cpu=68020\n+\tdefault_cf_cpu=5475\n \t# needed to unconfuse gdb\n \ttm_defines=\"${tm_defines} OBSD_OLD_GAS\"\n \ttm_file=\"${tm_file} openbsd.h m68k/openbsd.h\"\n@@ -1514,6 +1519,7 @@ m68k-*-uclinuxoldabi*)\t\t# Motorola m68k/ColdFire running uClinux\n \t\t\t\t# with uClibc, using the original\n \t\t\t\t# m68k-elf-based ABI\n \tdefault_m68k_cpu=68020\n+\tdefault_cf_cpu=5206\n \ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/uclinux-oldabi.h\"\n  \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \ttmake_file=\"m68k/t-floatlib m68k/t-uclinux\"\n@@ -1523,16 +1529,18 @@ m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux\n \t\t\t\t# with uClibc, using the new GNU/Linux-style\n \t\t\t\t# ABI.\n \tdefault_m68k_cpu=68020\n+\tdefault_cf_cpu=5206\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h flat.h m68k/linux.h m68k/uclinux.h\"\n  \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS UCLIBC_DEFAULT=1\"\n \textra_options=\"${extra_options} linux.opt\"\n-\ttmake_file=\"m68k/t-floatlib m68k/t-uclinux\"\n+\ttmake_file=\"m68k/t-floatlib m68k/t-uclinux m68k/t-mlibs\"\n \tuse_fixproto=no\n \t;;\n m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6.\n \tdefault_m68k_cpu=68020\n+\tdefault_cf_cpu=5475\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h m68k/linux.h\"\n \textra_options=\"${extra_options} m68k/ieee.opt\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n@@ -1544,7 +1552,8 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t;;\n m68k-*-rtems*)\n \tdefault_m68k_cpu=68020\n-\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare m68k/t-crtstuff t-rtems m68k/t-rtems\"\n+\tdefault_cf_cpu=5206\n+\ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare m68k/t-crtstuff t-rtems m68k/t-rtems m68k/t-mlibs\"\n \ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \textra_parts=\"crtbegin.o crtend.o\"\n@@ -2656,7 +2665,14 @@ if test x$with_cpu = x ; then\n       with_cpu=`echo ${target} | sed 's/-.*$//'`\n       ;;\n     m68k*-*-*)\n-      with_cpu=m${default_m68k_cpu}\n+      case \"$with_arch\" in\n+\t\"cf\")\n+\t  with_cpu=${default_cf_cpu}\n+\t  ;;\n+\t\"\" | \"m68k\")\n+\t  with_cpu=m${default_m68k_cpu}\n+\t  ;;\n+      esac\n       ;;\n     sparc*-*-*)\n       with_cpu=\"`echo ${target} | sed 's/-.*$//'`\"\n@@ -2807,7 +2823,16 @@ case \"${target}\" in\n \t\t;;\n \n \tm680[012]0-*-* | m68k*-*-*)\n-\t\tsupported_defaults=\"cpu\"\n+\t\tsupported_defaults=\"arch cpu\"\n+\t\tcase \"$with_arch\" in\n+\t\t\"\" | \"m68k\"| \"cf\")\n+\t\t\tm68k_arch_family=\"$with_arch\"\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Invalid --with-arch=$with_arch\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n \n \t\t# We always have a $with_cpu setting here.\n \t\tcase \"$with_cpu\" in\n@@ -3093,6 +3118,9 @@ case ${target} in\n \n \tm680[012]0-*-* | m68k*-*-*)\n \t\ttarget_cpu_default2=$m68k_cpu_ident\n+\t\tif [ x\"$m68k_arch_family\" != x ]; then\n+\t\t        tmake_file=\"m68k/t-$m68k_arch_family $tmake_file\"\n+\t\tfi\n \t\t;;\n \n \tmips*-*-*)"}, {"sha": "697946654af85148f986a26ebdac3db8d8f888c1", "filename": "gcc/config/m68k/t-cf", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-cf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-cf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-cf?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -0,0 +1,4 @@\n+# Select only ColdFire-specific CPUs.\n+\n+M68K_MLIB_CPU += && (CPU ~ \"^mcf\")\n+M68K_ARCH := cf"}, {"sha": "cbff34d6585bc03fc3325d0d6f8e3ef21a567e5c", "filename": "gcc/config/m68k/t-m68k", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-m68k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-m68k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-m68k?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -0,0 +1,4 @@\n+# Select only 680x0-specific CPUs.\n+\n+M68K_MLIB_CPU += && (CPU !~ \"^mcf\")\n+M68K_ARCH := m68k"}, {"sha": "0cbaead7d69ac242af562df0d3de2e2981653f72", "filename": "gcc/config/m68k/t-m68kbare", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-m68kbare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-m68kbare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-m68kbare?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1,7 +1,4 @@\n-MULTILIB_OPTIONS = m68000/m68020/m5200/mcpu32/m68040/m68060 m68881/msoft-float\n-MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m68020=mc68020 \n-MULTILIB_EXCEPTIONS = m68000/msoft-float m5200/m68881 m5200/msoft-float mcpu32/m68881 mcpu32/msoft-float m68040/m68881 m68060/m68881\n+# Add soft-float multilibs.\n+M68K_MLIB_DIRNAMES += softfp\n+M68K_MLIB_OPTIONS += msoft-float\n \n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}, {"sha": "bea01dc4f498778149c5ab12954ea44e1f7502f8", "filename": "gcc/config/m68k/t-m68kelf", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-m68kelf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-m68kelf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-m68kelf?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1,15 +1,3 @@\n-MULTILIB_OPTIONS = m68000/m68020/m5200/m5206e/m528x/m5307/m5407/mcfv4e/mcpu32/m68040/m68060 m68881/msoft-float\n-MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m68020=mc68020 m5206e=m5272\n-MULTILIB_EXCEPTIONS = m68000/msoft-float m5200/m68881 m5200/msoft-float \\\n-\t\t    m5206e/m68881 m5206e/msoft-float m528x/m68881 m528x/msoft-float \\\n-\t\t    m5307/m68881 m5307/msoft-float m5407/m68881 m5407/msoft-float \\\n-\t\t    mcpu32/m68881 mcpu32/msoft-float m68040/m68881 m68040/msoft-float \\\n-\t\t    m68060/m68881 m68060/msoft-float \\\n-\t\t    mcfv4e/msoft-float mcfv4e/m68881\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n-\n # from ../t-svr4\n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o\n # no pic for now"}, {"sha": "6ce35a1d251f6482908ee8bc3afb6d756ca359eb", "filename": "gcc/config/m68k/t-mlibs", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-mlibs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-mlibs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-mlibs?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -0,0 +1,97 @@\n+# multilibs  -*- mode:Makefile -*-\n+\n+# An awk command to extract lines from the m68k-devices.def file that\n+# match $1 and then print the string defined by $2.  Leading and\n+# trailing whitespace is removed.  $1 & $2 can make use of\n+# CPU -- the cpu identifier (has leading 'm'/'mcf')\n+# FLAGS -- the cpu capability flags\n+# CPU_NAME -- the cpu name (has no leading m/mcf)\n+# MLIB -- the multilib cpu name (no leading m/mcf)\n+# This is intended to be used as $(call M68K_AWK,predicate,string)\n+M68K_AWK = $(strip $(shell $(AWK) 'BEGIN { FS=\"[ \\t]*[,()][ \\t]*\"; ORS=\" \" }; \\\n+\t/^M68K_DEVICE/ { CPU=$$3; FLAGS=$$8; \\\n+\tCPU_NAME=substr($$2,2,length($$2)-2); \\\n+\tMLIB=substr($$5,2,length($$5)-2); \\\n+\tif ($1) print $2 }' $(srcdir)/config/m68k/m68k-devices.def))\n+\n+# Add a multilib for each distinct architecture.  M68K_MLIB_CPU, if defined,\n+# adds additional restrictions.\n+M68K_MLIB_CPUS := $(call M68K_AWK,\\\n+\t(CPU_NAME == MLIB) $(M68K_MLIB_CPU), \\\n+\t\"m\"MLIB)\n+\n+# Make the default cpu the default multilib.\n+M68K_MLIB_DEFAULT := $(call M68K_AWK, CPU == \"$(target_cpu_default)\", MLIB)\n+\n+ifeq ($(filter m$(M68K_MLIB_DEFAULT),$(M68K_MLIB_CPUS)),)\n+$(error Error default cpu '$(target_cpu_default)' is not in multilib set '$(M68K_MLIB_CPUS)')\n+endif\n+\n+# Sed arguments that convert mcpu=* arguments into canonical forms.\n+# We want to use the legacy m68* options instead of the new -mcpu=68*\n+# options when compiling multilibs because the former are recognised\n+# by older binutils.\n+CANONICALIZE_OPTIONS = -e 's|mcpu=68|m68|g' -e 's|mcpu=cpu32|mcpu32|g'\n+\n+MULTILIB_DIRNAMES := $(filter-out m$(M68K_MLIB_DEFAULT),$(M68K_MLIB_CPUS))\n+MULTILIB_OPTIONS := $(shell echo $(MULTILIB_DIRNAMES:m%=mcpu=%) \\\n+\t\t      | sed -e 's| |/|g' $(CANONICALIZE_OPTIONS))\n+\n+# Add subtarget specific options & dirs.\n+MULTILIB_DIRNAMES += $(M68K_MLIB_DIRNAMES)\n+MULTILIB_OPTIONS += $(M68K_MLIB_OPTIONS)\n+\n+MULTILIB_MATCHES :=\n+\n+ifneq ($(M68K_ARCH),cf)\n+# Map the new-style options to the legacy m68k ones.\n+MULTILIB_MATCHES += m68000=mcpu?68000 m68000=march?68000 m68000=mc68000 \\\n+\t\t    m68000=m68302 \\\n+\t\t    m68020=mcpu?68020 m68020=march?68020 m68020=mc68020 \\\n+\t\t    m68030=mcpu?68030 m68030=march?68030 \\\n+\t\t    m68040=mcpu?68040 m68040=march?68040 \\\n+\t\t    m68060=mcpu?68060 m68060=march?68060 \\\n+\t\t    mcpu32=mcpu?cpu32 mcpu32=march?cpu32 mcpu32=m68332\n+endif\n+\n+ifneq ($(M68K_ARCH),m68k)\n+# Map the legacy ColdFire options to the new ones.\n+MULTILIB_MATCHES += mcpu?5206=m5200 mcpu?5206e=m5206e mcpu?5208=m528x \\\n+\t\t    mcpu?5307=m5300 mcpu?5307=m5307 \\\n+\t\t    mcpu?5407=m5400 mcpu?5407=m5407 \\\n+\t\t    mcpu?5475=mcfv4e\n+# Map -march=* options to the representative -mcpu=* option.\n+MULTILIB_MATCHES += mcpu?5206e=march?isaa mcpu?5208=march?isaaplus \\\n+\t\t    mcpu?5407=march?isab\n+endif\n+\n+# Match non-representative -mcpu options to their representative option.\n+MULTILIB_MATCHES += \\\n+  $(call M68K_AWK, \\\n+\t (CPU_NAME != MLIB) $(M68K_MLIB_CPU), \\\n+\t (match(MLIB, \"^68\") || MLIB == \"cpu32\" \\\n+\t  ? \"m\"MLIB\"=mcpu?\"CPU_NAME \\\n+\t  : \"mcpu?\"MLIB\"=mcpu?\"CPU_NAME))\n+\n+MULTILIB_EXCEPTIONS :=\n+\n+ifeq ($(firstword $(M68K_MLIB_OPTIONS)),msoft-float)\n+# Exclude soft-float multilibs for targets that default to soft-float anyway.\n+MULTILIB_EXCEPTIONS += $(call M68K_AWK,\\\n+\t(CPU_NAME == MLIB) $(M68K_MLIB_CPU) \\\n+\t && (((CPU ~ \"^mcf\") && !match(FLAGS, \"FL_CF_FPU\")) \\\n+\t     || CPU == \"cpu32\" \\\n+\t     || CPU == \"m68000\"), \\\n+\t \"mcpu=\"MLIB\"/msoft-float*\")\n+endif\n+\n+# Remove the default CPU from the explicit exceptions.\n+MULTILIB_EXCEPTIONS := \\\n+\t$(patsubst mcpu=$(M68K_MLIB_DEFAULT)/%,%,$(MULTILIB_EXCEPTIONS))\n+\n+# Convert all options to canonical form.\n+MULTILIB_EXCEPTIONS := $(shell echo $(MULTILIB_EXCEPTIONS) | \\\n+\t\t\t sed $(CANONICALIZE_OPTIONS))\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "b295608deb6ad5a9d4fbad45e06cbba1a4c11434", "filename": "gcc/config/m68k/t-openbsd", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-openbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-openbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-openbsd?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1,5 +1,4 @@\n # gdb gets confused if pic code is linked with non pic\n # We cope by building all variants of libgcc.\n-MULTILIB_OPTIONS = fpic/fPIC\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n+M68K_MLIB_OPTIONS += fpic/fPIC\n+M68K_MLIB_DIRNAMES += fpic fPIC"}, {"sha": "1cf45f5a204d0d567888bb069d8ab2cbb38848b2", "filename": "gcc/config/m68k/t-rtems", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-rtems", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-rtems", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-rtems?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1,7 +1,4 @@\n # Custom multilibs for RTEMS\n-\n-MULTILIB_OPTIONS = m68000/m68020/m5200/mcpu32/m68030/m68040/m68060 m68881/msoft-float\n-MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m68020=mc68020 m68030=mc68030\n-MULTILIB_MATCHES += m5200=m528x\n-MULTILIB_EXCEPTIONS = m68000/msoft-float m5200/m68881 m5200/msoft-float mcpu32/m68881 mcpu32/msoft-float m68040/m68881 m68060/m68881\n+M68K_MLIB_CPU += && (match(MLIB, \"^68\") \\\n+\t\t     || MLIB == \"cpu32\" \\\n+\t\t     || MLIB == \"5206\")"}, {"sha": "f7053646c32d74a1f4eb4a090cf9c8a3fc810585", "filename": "gcc/config/m68k/t-uclinux", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-uclinux?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -1,10 +1,9 @@\n # crti and crtn are provided by uClibc.\n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o\n \n-MULTILIB_OPTIONS = m68000/m5200/m5206e/m528x/m5307/m5407/mcpu32 msep-data/mid-shared-library\n-MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m5206e=m5272\n-MULTILIB_EXCEPTIONS = m68000/msep-data* m68000/mid-shared-library* msep-data* mid-shared-library*\n+# Only include multilibs for the 68020 and for CPUs without an MMU.\n+M68K_MLIB_CPU += && (MLIB == \"68020\" || !match(FLAGS, \"FL_MMU\"))\n \n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n+# Add multilibs for execute-in-place and shared-library code.\n+M68K_MLIB_OPTIONS += msep-data/mid-shared-library\n+M68K_MLIB_DIRNAMES += msep-data mid-shared-library"}, {"sha": "9f236759100586c1779cefb9b9787bd400f0e019", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e96df47c9067b69bde01f173a3869896ab388e/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=10e96df47c9067b69bde01f173a3869896ab388e", "patch": "@@ -3426,9 +3426,24 @@ applications.  There are no standard Unix configurations.\n <hr />\n @end html\n @heading @anchor{m68k-x-x}m68k-*-*\n-You can specify a default target using @option{--with-cpu=@var{target}}.\n-This @var{target} can either be a @option{-mcpu} argument or one of the\n-following values: @samp{m68000}, @samp{m68010}, @samp{m68020}, @samp{m68030},\n+By default, @samp{m68k-*-aout}, @samp{m68k-*-coff*},\n+@samp{m68k-*-elf*}, @samp{m68k-*-rtems} and @samp{m68k-*-uclinux}\n+build libraries for both M680x0 and ColdFire processors.  If you only\n+need the M680x0 libraries, you can omit the ColdFire ones by passing\n+@option{--with-arch=m68k} to @command{configure}.  Alternatively, you\n+can omit the M680x0 libraries by passing @option{--with-arch=cf} to\n+@command{configure}.  These targets default to 5206 code when\n+configured with @option{--with-arch=cf} and 68020 code otherwise.\n+\n+The @samp{m68k-*-linux-gnu}, @samp{m68k-*-netbsd} and\n+@samp{m68k-*-openbsd} targets also support the @option{--with-arch}\n+option.  They will generate ColdFire CFV4e code when configured with\n+@option{--with-arch=cf} and 68020 code otherwise.\n+\n+You can override the default processors listed above by configuring\n+with @option{--with-cpu=@var{target}}.  This @var{target} can either\n+be a @option{-mcpu} argument or one of the following values:\n+@samp{m68000}, @samp{m68010}, @samp{m68020}, @samp{m68030},\n @samp{m68040}, @samp{m68060}, @samp{m68020-40} and @samp{m68020-60}.\n \n @html"}]}