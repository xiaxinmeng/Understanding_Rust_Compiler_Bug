{"sha": "e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "node_id": "C_kwDOANBUbNoAKGUxMzc5ZWVlYzExMDk4Y2Y4ZWMwMDZiYzBkM2FjOTViZWIyYWQyNzM", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-04-14T06:38:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:16Z"}, "message": "[Ada] Issue a warning on entity hidden in use_clause with -gnatwh\n\nAugment the warnings issued with switch -gnatwh, so that a warning is\nalso issued when an entity from the package of a use_clause ends up\nhidden due to an existing visible homonym.\n\ngcc/ada/\n\n\t* sem_ch8.adb (Use_One_Package): Possibly warn.\n\t* sem_util.adb (Enter_Name): Factor out warning on hidden entity.\n\t(Warn_On_Hiding_Entity): Extract warning logic from Enter_Name and\n\tgeneralize it to be applied also on use_clause.\n\t* sem_util.ads (Warn_On_Hiding_Entity): Add new procedure.", "tree": {"sha": "7ba7aeb604895113dc430484017806d99b538de7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ba7aeb604895113dc430484017806d99b538de7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e416d23b8cb2824d395230f23fac300ee6d496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e416d23b8cb2824d395230f23fac300ee6d496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e416d23b8cb2824d395230f23fac300ee6d496"}], "stats": {"total": 124, "additions": 83, "deletions": 41}, "files": [{"sha": "80950b846456dc212731dfb6b6d1c3c3b042f79e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "patch": "@@ -10326,6 +10326,11 @@ package body Sem_Ch8 is\n \n                   --  Potentially use-visible entity remains hidden\n \n+                  if Warn_On_Hiding then\n+                     Warn_On_Hiding_Entity (N, Hidden => Id, Visible => Prev,\n+                                            On_Use_Clause => True);\n+                  end if;\n+\n                   goto Next_Usable_Entity;\n \n                --  A use clause within an instance hides outer global entities,"}, {"sha": "92c663650fc6d5b6f870478adeab1aeaa1751d11", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 66, "deletions": 41, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "patch": "@@ -8825,47 +8825,9 @@ package body Sem_Util is\n \n       --  Warn if new entity hides an old one\n \n-      if Warn_On_Hiding and then Present (C)\n-\n-        --  Don't warn for record components since they always have a well\n-        --  defined scope which does not confuse other uses. Note that in\n-        --  some cases, Ekind has not been set yet.\n-\n-        and then Ekind (C) /= E_Component\n-        and then Ekind (C) /= E_Discriminant\n-        and then Nkind (Parent (C)) /= N_Component_Declaration\n-        and then Ekind (Def_Id) /= E_Component\n-        and then Ekind (Def_Id) /= E_Discriminant\n-        and then Nkind (Parent (Def_Id)) /= N_Component_Declaration\n-\n-        --  Don't warn for one character variables. It is too common to use\n-        --  such variables as locals and will just cause too many false hits.\n-\n-        and then Length_Of_Name (Chars (C)) /= 1\n-\n-        --  Don't warn for non-source entities\n-\n-        and then Comes_From_Source (C)\n-        and then Comes_From_Source (Def_Id)\n-\n-        --  Don't warn within a generic instantiation\n-\n-        and then not In_Instance\n-\n-        --  Don't warn unless entity in question is in extended main source\n-\n-        and then In_Extended_Main_Source_Unit (Def_Id)\n-\n-        --  Finally, the hidden entity must be either immediately visible or\n-        --  use visible (i.e. from a used package).\n-\n-        and then\n-          (Is_Immediately_Visible (C)\n-             or else\n-           Is_Potentially_Use_Visible (C))\n-      then\n-         Error_Msg_Sloc := Sloc (C);\n-         Error_Msg_N (\"declaration hides &#?h?\", Def_Id);\n+      if Warn_On_Hiding and then Present (C) then\n+         Warn_On_Hiding_Entity (Def_Id, Hidden => C, Visible => Def_Id,\n+                                On_Use_Clause => False);\n       end if;\n    end Enter_Name;\n \n@@ -30344,6 +30306,69 @@ package body Sem_Util is\n       return List_1;\n    end Visible_Ancestors;\n \n+   ---------------------------\n+   -- Warn_On_Hiding_Entity --\n+   ---------------------------\n+\n+   procedure Warn_On_Hiding_Entity\n+     (N               : Node_Id;\n+      Hidden, Visible : Entity_Id;\n+      On_Use_Clause   : Boolean)\n+   is\n+   begin\n+      --  Don't warn for record components since they always have a well\n+      --  defined scope which does not confuse other uses. Note that in\n+      --  some cases, Ekind has not been set yet.\n+\n+      if Ekind (Hidden) /= E_Component\n+        and then Ekind (Hidden) /= E_Discriminant\n+        and then Nkind (Parent (Hidden)) /= N_Component_Declaration\n+        and then Ekind (Visible) /= E_Component\n+        and then Ekind (Visible) /= E_Discriminant\n+        and then Nkind (Parent (Visible)) /= N_Component_Declaration\n+\n+        --  Don't warn for one character variables. It is too common to use\n+        --  such variables as locals and will just cause too many false hits.\n+\n+        and then Length_Of_Name (Chars (Hidden)) /= 1\n+\n+        --  Don't warn for non-source entities\n+\n+        and then Comes_From_Source (Hidden)\n+        and then Comes_From_Source (Visible)\n+\n+        --  Don't warn within a generic instantiation\n+\n+        and then not In_Instance\n+\n+        --  Don't warn unless entity in question is in extended main source\n+\n+        and then In_Extended_Main_Source_Unit (Visible)\n+\n+        --  Finally, in the case of a declaration, the hidden entity must\n+        --  be either immediately visible or use visible (i.e. from a used\n+        --  package). In the case of a use clause, the visible entity must\n+        --  be immediately visible.\n+\n+        and then\n+          (if On_Use_Clause then\n+             Is_Immediately_Visible (Visible)\n+           else\n+             (Is_Immediately_Visible (Hidden)\n+               or else\n+              Is_Potentially_Use_Visible (Hidden)))\n+      then\n+         if On_Use_Clause then\n+            Error_Msg_Sloc := Sloc (Visible);\n+            Error_Msg_NE (\"visible declaration of&# hides homonym \"\n+                          & \"from use clause?h?\", N, Hidden);\n+         else\n+            Error_Msg_Sloc := Sloc (Hidden);\n+            Error_Msg_NE (\"declaration hides &#?h?\", N, Visible);\n+         end if;\n+      end if;\n+   end Warn_On_Hiding_Entity;\n+\n    ----------------------\n    -- Within_Init_Proc --\n    ----------------------"}, {"sha": "bfd952a29477b587f6da4cbb962d71eca3fec577", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1379eeec11098cf8ec006bc0d3ac95beb2ad273/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=e1379eeec11098cf8ec006bc0d3ac95beb2ad273", "patch": "@@ -3453,6 +3453,18 @@ package Sem_Util is\n    function Within_Scope (E : Entity_Id; S : Entity_Id) return Boolean;\n    --  Returns True if entity E is declared within scope S\n \n+   procedure Warn_On_Hiding_Entity\n+     (N               : Node_Id;\n+      Hidden, Visible : Entity_Id;\n+      On_Use_Clause   : Boolean);\n+   --  Warn on hiding of an entity, either because a new declaration hides\n+   --  an entity directly visible or potentially visible through a use_clause\n+   --  (On_Use_Clause = False), or because the entity would be potentially\n+   --  visible through a use_clause if it was now hidden by a visible\n+   --  declaration (On_Use_Clause = True). N is the node on which the warning\n+   --  is potentially issued: it is the visible entity in the former case, and\n+   --  the use_clause in the latter case.\n+\n    procedure Wrong_Type (Expr : Node_Id; Expected_Type : Entity_Id);\n    --  Output error message for incorrectly typed expression. Expr is the node\n    --  for the incorrectly typed construct (Etype (Expr) is the type found),"}]}