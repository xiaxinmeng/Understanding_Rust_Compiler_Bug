{"sha": "711b299844b8eb77451d96a360f4525fc005279e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzExYjI5OTg0NGI4ZWI3NzQ1MWQ5NmEzNjBmNDUyNWZjMDA1Mjc5ZQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2008-07-17T14:03:50Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2008-07-17T14:03:50Z"}, "message": "decl2.c (determine_visibility): Allow target to override visibility of class data.\n\n    gcc/cp/\n    * decl2.c (determine_visibility): Allow target to override\n    visibility of class data.\n\n    gcc/\n    * config/arm/arm.c (arm_cxx_determine_class_data_visibility): Make\n    no-op for targets which don't use DLLs.\n\n    gcc/testsuite/\n    * g++.dg/ext/visibility/arm3.C: Add explanatory text. Skip on\n    non-DLL targets.\n    * g++.dg/ext/visibility/arm1.C: Skip on non-DLL targets.\n\n\nCo-Authored-By: Mark Mitchell <mark@codesourcery.com>\n\nFrom-SVN: r137922", "tree": {"sha": "227fab594ab803abac56d2e5bd12c689005f8eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/227fab594ab803abac56d2e5bd12c689005f8eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/711b299844b8eb77451d96a360f4525fc005279e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711b299844b8eb77451d96a360f4525fc005279e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711b299844b8eb77451d96a360f4525fc005279e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711b299844b8eb77451d96a360f4525fc005279e/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0eae6babe5d9101e825cb8f32bba494642db45af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eae6babe5d9101e825cb8f32bba494642db45af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eae6babe5d9101e825cb8f32bba494642db45af"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "41b5a4924e7898487ecd1542af621b08a41a3c8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -1,3 +1,8 @@\n+2008-07-17  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_cxx_determine_class_data_visibility): Make\n+\tno-op for targets which don't use DLLs.\n+\n 2008-07-17  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_print_all_lattices): New variable info, check"}, {"sha": "d64b6fda34f0a0c501f3474b5bb372a28119ecca", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -18318,7 +18318,8 @@ arm_cxx_key_method_may_be_inline (void)\n static void\n arm_cxx_determine_class_data_visibility (tree decl)\n {\n-  if (!TARGET_AAPCS_BASED)\n+  if (!TARGET_AAPCS_BASED\n+      || !TARGET_DLLIMPORT_DECL_ATTRIBUTES)\n     return;\n \n   /* In general, \\S 3.2.5.5 of the ARM EABI requires that class data"}, {"sha": "a664d0f9bc9e3af4cac5c239b04f6caae2fbe3c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -1,3 +1,9 @@\n+2008-07-17  Julian Brown  <julian@codesourcery.com>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl2.c (determine_visibility): Allow target to override\n+\tvisibility of class data.\n+\n 2008-07-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/36855"}, {"sha": "f14f94d16b51e15edbd2ab904a424e4320e50ad8", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -1963,6 +1963,14 @@ determine_visibility (tree decl)\n \t  /* tinfo visibility is based on the type it's for.  */\n \t  constrain_visibility\n \t    (decl, type_visibility (TREE_TYPE (DECL_NAME (decl))));\n+\n+\t  /* Give the target a chance to override the visibility associated\n+\t     with DECL.  */\n+\t  if (TREE_PUBLIC (decl)\n+\t      && !DECL_REALLY_EXTERN (decl)\n+\t      && CLASS_TYPE_P (TREE_TYPE (DECL_NAME (decl)))\n+\t      && !CLASSTYPE_VISIBILITY_SPECIFIED (TREE_TYPE (DECL_NAME (decl))))\n+\t    targetm.cxx.determine_class_data_visibility (decl);\n \t}\n       else if (use_template)\n \t/* Template instantiations and specializations get visibility based"}, {"sha": "55d0839c1838d1c0adb57059b99b8aca4ae3a75b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -1,3 +1,10 @@\n+2008-07-17  Julian Brown  <julian@codesourcery.com>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.dg/ext/visibility/arm3.C: Add explanatory text. Skip on\n+\tnon-DLL targets.\n+\t* g++.dg/ext/visibility/arm1.C: Skip on non-DLL targets.\n+\n 2008-07-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/36855"}, {"sha": "2c2e3d0664a0e722dbefe8837161a043d2ecdc67", "filename": "gcc/testsuite/g++.dg/ext/visibility/arm1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Farm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Farm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Farm1.C?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target arm*-*-eabi* arm*-*-symbianelf* } }\n+// { dg-require-dll \"\" }\n // { dg-options \"-fvisibility=hidden\" }\n // Most class data should be exported.\n // { dg-final { scan-not-hidden \"_ZTV1S\" } }"}, {"sha": "9be7082ce1ddba0080de0cd0d1aeb1adbeec89da", "filename": "gcc/testsuite/g++.dg/ext/visibility/arm3.C", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Farm3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711b299844b8eb77451d96a360f4525fc005279e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Farm3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Farm3.C?ref=711b299844b8eb77451d96a360f4525fc005279e", "patch": "@@ -1,6 +1,30 @@\n // { dg-do compile { target arm*-*-*eabi* } }\n+// { dg-require-dll \"\" }\n // { dg-options \"-fvisibility=hidden\" }\n-// Class data should be exported.\n+\n+/* From ARM C++ ABI \\S 3.2.5.5:\n+\n+     A class should be exported unless explicitly tagged otherwise.\n+\n+   This admonition applies even on DLL-based systems where hidden\n+   visibility is the default.  We want -fvisibility=hidden to behave\n+   identically to the situation where hidden visibility is the\n+   hard-wired default.  So, both A and B are exported classes.\n+\n+   Furthermore:\n+\n+     If CAG symbol Y names one of the impedimenta associated with an\n+     exported class X:\n+\n+     ... \n+\n+     * Otherwise, if X has no key function:\n+     \n+       - Y is exported from ... each DLL that refers to X and uses Y.\n+\n+   So, the type-info and virtual-table symbols associated with A and B\n+   must be exported.  */\n+\n // { dg-final { scan-not-hidden \"_ZTI1A\" } }\n // { dg-final { scan-not-hidden \"_ZTS1A\" } }\n // { dg-final { scan-not-hidden \"_ZTV1B\" } }"}]}