{"sha": "dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZiZTE2MGE4MjA3MmY5MGE5YmE1YjJhMTM4ZjNmYTgzZWRmN2JhMw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-09-05T07:50:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:50:46Z"}, "message": "fname-sf.adb, [...]: Remove redundant use_clauses.\n\n2005-09-01  Ed Schonberg  <schonberg@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\n\t* fname-sf.adb, mlib-tgt.ads,\n\tback_end.adb, casing.adb, g-debpoo.adb, g-excact.adb, g-spipat.adb,\n\tg-spipat.ads, g-thread.adb, lib-list.adb, makeutl.adb, mlib.adb,\n\tosint.adb, par-ch10.adb, par-load.adb, prep.adb, prj.adb, prj-attr.ads,\n\tprj-env.ads, prj-err.adb, prj-err.ads, prj-ext.adb, prj-ext.ads,\n\tprj-makr.adb, prj-makr.ads, prj-pars.ads, prj-part.adb, prj-strt.adb,\n\tprj-tree.ads, prj-util.ads, sem_dist.adb, sinput-c.ads, sinput-l.ads,\n\tsinput-p.ads, styleg-c.ads, xr_tabls.adb, prj-attr-pm.ads,\n\tmakegpr.adb: Remove redundant use_clauses.\n\nFrom-SVN: r103854", "tree": {"sha": "bd5a3ff7561737b1ee8c2009f67a1fa080e2c5a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd5a3ff7561737b1ee8c2009f67a1fa080e2c5a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "826757551170eec3ec794d961b5b6dc24d1244cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826757551170eec3ec794d961b5b6dc24d1244cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826757551170eec3ec794d961b5b6dc24d1244cd"}], "stats": {"total": 194, "additions": 60, "deletions": 134}, "files": [{"sha": "d6fd7cbed682066d5944d4fb5e21c21e36c9de25", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,6 @@ with Elists;    use Elists;\n with Lib;       use Lib;\n with Osint;     use Osint;\n with Opt;       use Opt;\n-with Osint;     use Osint;\n with Osint.C;   use Osint.C;\n with Namet;     use Namet;\n with Nlists;    use Nlists;"}, {"sha": "30db5459d897160fd75920a7caf284548cfa9e75", "filename": "gcc/ada/casing.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fcasing.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fcasing.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcasing.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -34,7 +34,6 @@\n with Csets;    use Csets;\n with Namet;    use Namet;\n with Opt;      use Opt;\n-with Types;    use Types;\n with Widechar; use Widechar;\n \n package body Casing is"}, {"sha": "5572037a847bcba93e0f8657dadb10d6911e11b4", "filename": "gcc/ada/fname-sf.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Ffname-sf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Ffname-sf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -30,7 +30,6 @@ with Fname.UF; use Fname.UF;\n with SFN_Scan; use SFN_Scan;\n with Namet;    use Namet;\n with Osint;    use Osint;\n-with Types;    use Types;\n \n with Unchecked_Conversion;\n "}, {"sha": "eeb36a2d5ddd11d1229b6d0c0325ef0d7e86402c", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -46,8 +46,6 @@ with GNAT.Traceback; use GNAT.Traceback;\n with Ada.Unchecked_Conversion;\n \n package body GNAT.Debug_Pools is\n-   use System;\n-   use System.Storage_Elements;\n \n    Default_Alignment : constant Storage_Offset := Standard'Maximum_Alignment;\n    --  Alignment used for the memory chunks returned by Allocate. Using this\n@@ -1289,7 +1287,6 @@ package body GNAT.Debug_Pools is\n       Display_Slots : Boolean := False;\n       Display_Leaks : Boolean := False)\n    is\n-      use System.Storage_Elements;\n \n       package Backtrace_Htable_Cumulate is new GNAT.HTable.Static_HTable\n         (Header_Num => Header,"}, {"sha": "c27ab08883324bd75dbaddcaa2bf8c204d8e89d3", "filename": "gcc/ada/g-excact.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-excact.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-excact.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-excact.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Exceptions;       use Ada.Exceptions;\n with Ada.Unchecked_Conversion;\n with System;\n with System.Soft_Links;       use System.Soft_Links;"}, {"sha": "43434738fae014e4944f74f76fb65324df9f9fa3", "filename": "gcc/ada/g-spipat.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -37,7 +37,6 @@\n --  we use the one stack approach developed in the SPITBOL implementation.\n \n with Ada.Exceptions;            use Ada.Exceptions;\n-with Ada.Strings.Maps;          use Ada.Strings.Maps;\n with Ada.Strings.Unbounded.Aux; use Ada.Strings.Unbounded.Aux;\n \n with GNAT.Debug_Utilities;      use GNAT.Debug_Utilities;\n@@ -218,7 +217,7 @@ package body GNAT.Spitbol.Patterns is\n    type PE (Pcode : Pattern_Code) is record\n \n       Index : IndexT;\n-      --  Serial index number of pattern element within pattern.\n+      --  Serial index number of pattern element within pattern\n \n       Pthen : PE_Ptr;\n       --  Successor element, to be matched after this one\n@@ -734,7 +733,7 @@ package body GNAT.Spitbol.Patterns is\n       --  pointer to Y node, which is the PC_Arb_Y node that matches one\n       --  extra character and restacks itself.\n \n-      --  The PC_Arb_X node is numbered 2, and the PC_Arb_Y node is 1.\n+      --  The PC_Arb_X node is numbered 2, and the PC_Arb_Y node is 1\n \n       -------------------------\n       -- Arbno (simple case) --\n@@ -1239,7 +1238,7 @@ package body GNAT.Spitbol.Patterns is\n \n    function Is_In (C : Character; Str : String) return Boolean;\n    pragma Inline (Is_In);\n-   --  Determines if the character C is in string Str.\n+   --  Determines if the character C is in string Str\n \n    procedure Logic_Error;\n    --  Called to raise Program_Error with an appropriate message if an\n@@ -1670,7 +1669,7 @@ package body GNAT.Spitbol.Patterns is\n    --    | Y |---->\n    --    +---+\n \n-   --  The PC_Arb_X element is numbered 2, and the PC_Arb_Y element is 1.\n+   --  The PC_Arb_X element is numbered 2, and the PC_Arb_Y element is 1\n \n    function Arb return Pattern is\n       Y : constant PE_Ptr := new PE'(PC_Arb_Y, 1, EOP);\n@@ -2028,7 +2027,7 @@ package body GNAT.Spitbol.Patterns is\n             --  References to elements in P, indexed by Index field\n \n             Copy : Ref_Array (1 .. P.Index);\n-            --  Holds copies of elements of P, indexed by Index field.\n+            --  Holds copies of elements of P, indexed by Index field\n \n             E : PE_Ptr;\n \n@@ -2090,7 +2089,7 @@ package body GNAT.Spitbol.Patterns is\n       E : PE_Ptr;\n \n       procedure Write_Node_Id (E : PE_Ptr);\n-      --  Writes out a string identifying the given pattern element.\n+      --  Writes out a string identifying the given pattern element\n \n       procedure Write_Node_Id (E : PE_Ptr) is\n       begin\n@@ -2428,7 +2427,7 @@ package body GNAT.Spitbol.Patterns is\n             when PC_Alt => Alt : declare\n \n                Elmts_In_L : constant IndexT := E.Pthen.Index - E.Alt.Index;\n-               --  Number of elements in left pattern of alternation.\n+               --  Number of elements in left pattern of alternation\n \n                Lowest_In_L : constant IndexT := E.Index - Elmts_In_L;\n                --  Number of lowest index in elements of left pattern\n@@ -3679,7 +3678,7 @@ package body GNAT.Spitbol.Patterns is\n       --  failure and popping a \"real\" cursor value from the stack.\n \n       PE_Unanchored : aliased PE := (PC_Unanchored, 0, Pat_P);\n-      --  Dummy pattern element used in the unanchored case.\n+      --  Dummy pattern element used in the unanchored case\n \n       Stack : Stack_Type;\n       --  The pattern matching failure stack for this call to Match\n@@ -4061,7 +4060,7 @@ package body GNAT.Spitbol.Patterns is\n          when PC_Assign =>\n             goto Fail;\n \n-         --  Assign immediate. This node performs the actual assignment.\n+         --  Assign immediate. This node performs the actual assignment\n \n          when PC_Assign_Imm =>\n             Set_String\n@@ -4976,7 +4975,7 @@ package body GNAT.Spitbol.Patterns is\n       --  failure and popping a \"real\" cursor value from the stack.\n \n       PE_Unanchored : aliased PE := (PC_Unanchored, 0, Pat_P);\n-      --  Dummy pattern element used in the unanchored case.\n+      --  Dummy pattern element used in the unanchored case\n \n       Region_Level : Natural := 0;\n       --  Keeps track of recursive region level. This is used only for\n@@ -5006,7 +5005,7 @@ package body GNAT.Spitbol.Patterns is\n       --  successful match.\n \n       procedure Dout (Str : String);\n-      --  Output string to standard error with bars indicating region level.\n+      --  Output string to standard error with bars indicating region level\n \n       procedure Dout (Str : String; A : Character);\n       --  Calls Dout with the string S ('A')\n@@ -5477,7 +5476,7 @@ package body GNAT.Spitbol.Patterns is\n             Dout (Img (Node) & \"deferred assign/write cancelled\");\n             goto Fail;\n \n-         --  Assign immediate. This node performs the actual assignment.\n+         --  Assign immediate. This node performs the actual assignment\n \n          when PC_Assign_Imm =>\n             Dout"}, {"sha": "4f66b0d726ad3c4d33ab2c49728d48d0c88fb12a", "filename": "gcc/ada/g-spipat.ads", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-spipat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-spipat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -65,12 +65,11 @@\n --       language is modeled on context free grammars, with context sensitive\n --       extensions that provide full (type 0) computational capabilities.\n \n-with Ada.Finalization; use Ada.Finalization;\n with Ada.Strings.Maps; use Ada.Strings.Maps;\n with Ada.Text_IO;      use Ada.Text_IO;\n \n package GNAT.Spitbol.Patterns is\n-pragma Elaborate_Body (Patterns);\n+   pragma Elaborate_Body;\n \n    -------------------------------\n    -- Pattern Matching Tutorial --\n@@ -631,7 +630,7 @@ pragma Elaborate_Body (Patterns);\n    --          Abort        Cancel\n    --          Rem          Rest\n \n-   --    where we have clashes with Ada reserved names.\n+   --    where we have clashes with Ada reserved names\n \n    --    Ada requires the use of 'Access to refer to functions used in the\n    --    pattern match, and often the use of 'Unrestricted_Access may be\n@@ -704,7 +703,7 @@ pragma Elaborate_Body (Patterns);\n    function \"&\"  (L : PChar;   R : Pattern) return Pattern;\n    function \"&\"  (L : Pattern; R : PChar)   return Pattern;\n \n-   --  Pattern concatenation. Matches L followed by R.\n+   --  Pattern concatenation. Matches L followed by R\n \n    function \"or\" (L : Pattern; R : Pattern) return Pattern;\n    function \"or\" (L : PString; R : Pattern) return Pattern;\n@@ -820,7 +819,7 @@ pragma Elaborate_Body (Patterns);\n    --  Constructs a pattern that immediately aborts the entire match\n \n    function Fail                                            return Pattern;\n-   --  Constructs a pattern that always fails.\n+   --  Constructs a pattern that always fails\n \n    function Fence                                           return Pattern;\n    --  Constructs a pattern that matches null on the first attempt, and then\n@@ -1095,12 +1094,11 @@ pragma Elaborate_Body (Patterns);\n    --  except that instead of setting the value of a variable, the matched\n    --  substring is written to the appropriate file. This can be useful in\n    --  following the progress of a match without generating the full amount\n-\n    --  of information obtained by setting Debug_Mode to True.\n \n    Terminal : constant File_Access := Standard_Error;\n    Output   : constant File_Access := Standard_Output;\n-   --  Two handy synonyms for use with the above pattern write operations.\n+   --  Two handy synonyms for use with the above pattern write operations\n \n    --  Finally we have some routines that are useful for determining what\n    --  patterns are in use, particularly if they are constructed dynamically.\n@@ -1149,7 +1147,7 @@ private\n       --  Maximum number of stack entries required for matching this\n       --  pattern. See description of pattern history stack in body.\n \n-      P   : PE_Ptr := null;\n+      P : PE_Ptr := null;\n       --  Pointer to initial pattern element for pattern\n    end record;\n \n@@ -1159,19 +1157,19 @@ private\n    --  Adjust routine used to copy pattern objects\n \n    procedure Finalize (Object : in out Pattern);\n-   --  Finalization routine used to release storage allocated for a pattern.\n+   --  Finalization routine used to release storage allocated for a pattern\n \n    type VString_Ptr is access all VString;\n \n    type Match_Result is record\n-      Var   : VString_Ptr;\n-      --  Pointer to subject string. Set to null if match failed.\n+      Var : VString_Ptr;\n+      --  Pointer to subject string. Set to null if match failed\n \n       Start : Natural := 1;\n       --  Starting index position (1's origin) of matched section of\n       --  subject string. Only valid if Var is non-null.\n \n-      Stop  : Natural := 0;\n+      Stop : Natural := 0;\n       --  Ending index position (1's origin) of matched section of\n       --  subject string. Only valid if Var is non-null.\n "}, {"sha": "b49ed2300fa895dee1b102bc18b42ab36844d084", "filename": "gcc/ada/g-thread.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fg-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-thread.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -163,7 +163,6 @@ package body GNAT.Threads is\n    ----------------\n \n    procedure Get_Thread (Id : Address; Thread : Address) is\n-      use System.OS_Interface;\n       Thr : constant Thread_Id_Ptr := To_Thread (Thread);\n    begin\n       Thr.all := Task_Primitives.Operations.Get_Thread_Id (To_Id (Id));"}, {"sha": "79029e3652bad98e3843e57f727de72688956a9c", "filename": "gcc/ada/lib-list.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Flib-list.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Flib-list.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-list.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,8 +31,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Output; use Output;\n-\n separate (Lib)\n procedure List (File_Names_Only : Boolean := False) is\n "}, {"sha": "951e77815fd2f13eae89ee1e50d35b7a499fbe32", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -1688,7 +1688,6 @@ package body Makegpr is\n \n          declare\n             Archive : Ada.Text_IO.File_Type;\n-            use Ada.Text_IO;\n          begin\n             Create (Archive, Out_File, Archive_Name);\n             Close (Archive);\n@@ -2754,7 +2753,6 @@ package body Makegpr is\n       Source_Id : Other_Source_Id := First_Source;\n       Source    : Other_Source;\n       Dep_File  : Ada.Text_IO.File_Type;\n-      use Ada.Text_IO;\n \n    begin\n       --  Create the file in Append mode, to avoid automatic insertion of\n@@ -2787,8 +2785,6 @@ package body Makegpr is\n       Source    : Other_Source;\n       Dep_File  : Ada.Text_IO.File_Type;\n \n-      use Ada.Text_IO;\n-\n    begin\n       --  Create the file in Append mode, to avoid automatic insertion of\n       --  an end of line if file is empty."}, {"sha": "d65dfea5cfff6c07409c55a6b69ee3270933830b", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -26,12 +26,10 @@\n \n with Namet;    use Namet;\n with Osint;    use Osint;\n-with Prj;      use Prj;\n with Prj.Ext;\n with Prj.Util;\n with Snames;   use Snames;\n with Table;\n-with Types;    use Types;\n \n with System.HTable;\n "}, {"sha": "4ae46ce62d67a70a6c2145af837902f62b1bedb8", "filename": "gcc/ada/mlib-tgt.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmlib-tgt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmlib-tgt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -32,7 +32,6 @@\n --  In the default version, libraries are not supported, so function\n --  Support_For_Libraries return None.\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n with Prj;         use Prj;\n \n package MLib.Tgt is"}, {"sha": "338a304ab1284cbc631a1571ec7881ee169a819a", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -35,7 +35,6 @@ with Namet;  use Namet;\n with MLib.Utl; use MLib.Utl;\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-with GNAT.OS_Lib;               use GNAT.OS_Lib;\n \n package body MLib is\n \n@@ -51,8 +50,6 @@ package body MLib is\n    is\n       pragma Warnings (Off, Afiles);\n \n-      use GNAT.OS_Lib;\n-\n    begin\n       if not Opt.Quiet_Output then\n          Write_Line (\"building a library...\");"}, {"sha": "8a9e81a2136061a2646f76d9e8efd259aac2548a", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -37,7 +37,6 @@ with System.Case_Util; use System.Case_Util;\n \n with Unchecked_Conversion;\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n with GNAT.HTable;\n \n package body Osint is"}, {"sha": "13d0fbd1f004d99472871f84fecbdea7b27a5781", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -28,7 +28,6 @@ pragma Style_Checks (All_Checks);\n --  Turn off subprogram body ordering check. Subprograms are in order\n --  by RM section rather than alphabetical\n \n-with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Uname;    use Uname;\n "}, {"sha": "0f5674b70d960af17042d8d203aa62f85979d243", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -30,13 +30,9 @@\n --  and parents of subunits. All these units are loaded and pointers installed\n --  in the tree as described in the spec of package Lib.\n \n-with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Lib.Load; use Lib.Load;\n with Uname;    use Uname;\n-with Namet;    use Namet;\n-with Casing;   use Casing;\n-with Opt;      use Opt;\n with Osint;    use Osint;\n with Sinput.L; use Sinput.L;\n with Stylesw;  use Stylesw;\n@@ -300,11 +296,10 @@ begin\n          return;\n       end if;\n \n-   --  If current unit is a child unit spec, load its parent\n-   --  If the child unit is loaded through a limited with, the parent\n-   --  must be as well.\n+   --  If current unit is a child unit spec, load its parent. If the child unit\n+   --  is loaded through a limited with, the parent must be as well.\n \n-   elsif Nkind (Unit (Curunit)) = N_Package_Declaration\n+   elsif     Nkind (Unit (Curunit)) = N_Package_Declaration\n      or else Nkind (Unit (Curunit)) =  N_Subprogram_Declaration\n      or else Nkind (Unit (Curunit)) in N_Generic_Declaration\n      or else Nkind (Unit (Curunit)) in N_Generic_Instantiation\n@@ -322,10 +317,10 @@ begin\n       if Spec_Name /= No_Name then\n          Unum :=\n            Load_Unit\n-             (Load_Name  => Spec_Name,\n-              Required   => True,\n-              Subunit    => False,\n-              Error_Node => Curunit,\n+             (Load_Name         => Spec_Name,\n+              Required          => True,\n+              Subunit           => False,\n+              Error_Node        => Curunit,\n               From_Limited_With => From_Limited_With);\n \n          if Unum /= No_Unit then"}, {"sha": "bbfb5b723e5c4abe86e74eb77a0b2527736c0967", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -35,7 +35,6 @@ with Snames;   use Snames;\n with Sinput;\n with Stringt;  use Stringt;\n with Table;\n-with Types;    use Types;\n \n with GNAT.Heap_Sort_G;\n "}, {"sha": "695e17fed24bbd520dfbc75eb012b92a458618a5", "filename": "gcc/ada/prj-attr-pm.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-attr-pm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-attr-pm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr-pm.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,8 +24,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Types; use Types;\n-\n package Prj.Attr.PM is\n    --  The following procedures are not secure and should only be used by the\n    --  Project Manager, that is the packages of the Prj or MLib hierarchies."}, {"sha": "142be80fd97a23282f7f0e25a4239cc62aed3b7d", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -29,7 +29,6 @@\n --  It is also possible to define new packages with their attributes.\n \n with Table;\n-with Types; use Types;\n \n package Prj.Attr is\n "}, {"sha": "76e85aeceea1776b66a7f86d15a6d69a84e779f6", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -27,8 +27,6 @@\n --  This package implements services for Project-aware tools, mostly related\n --  to the environment (configuration pragma files, path files, mapping files).\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n-\n package Prj.Env is\n \n    procedure Initialize;"}, {"sha": "3f4fd0c10e14324ec24c052b69741e6f18ac82d2", "filename": "gcc/ada/prj-err.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-err.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-err.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -26,7 +26,6 @@\n \n with Namet;   use Namet;\n with Output;  use Output;\n-with Scans;   use Scans;\n with Stringt; use Stringt;\n \n package body Prj.Err is"}, {"sha": "57d33f9be66904a977bff1ff6ec30ac49688021b", "filename": "gcc/ada/prj-err.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-err.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-err.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,7 +33,6 @@\n \n with Scng;\n with Errutil;\n-with Types; use Types;\n \n package Prj.Err is\n "}, {"sha": "53d47cd3365dfdbb40765a34c4c5ea6eed2889e5", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2000-2004 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2000-2005 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,10 +27,7 @@\n with Namet;   use Namet;\n with Osint;   use Osint;\n with Sdefault;\n-with Types;   use Types;\n-\n with GNAT.HTable;\n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n package body Prj.Ext is\n "}, {"sha": "e6e7188dfad2f911ae399897ee1d3383f97efc86", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2000-2004 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2000-2005 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,8 +27,6 @@\n --  Subprograms to set, get and cache external references, to be used as\n --  External functions in project files.\n \n-with Types; use Types;\n-\n package Prj.Ext is\n \n    function Project_Path return String;"}, {"sha": "569c85dccebb0b7499c046a2ade59aa4d66c8658", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -40,7 +40,6 @@ with Table;    use Table;\n \n with Ada.Characters.Handling;   use Ada.Characters.Handling;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-with GNAT.OS_Lib;               use GNAT.OS_Lib;\n with GNAT.Regexp;               use GNAT.Regexp;\n \n with System.Case_Util;          use System.Case_Util;"}, {"sha": "3947e89181915fe09b2c765393cb639d4f04f5f4", "filename": "gcc/ada/prj-makr.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-makr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-makr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2001-2003 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2001-2005 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,6 @@\n --  For arbitrary naming schemes, create or update a project file,\n --  or create a configuration pragmas file.\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n-\n package Prj.Makr is\n \n    procedure Make"}, {"sha": "15a17be3b456334584006c8c962363b4336ba0c5", "filename": "gcc/ada/prj-pars.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-pars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-pars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -26,8 +26,6 @@\n \n --  Implements the parsing of project files\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n-\n package Prj.Pars is\n \n    procedure Set_Verbosity (To : Verbosity);"}, {"sha": "1e711f813d7ff3af78f628e4c8d7554d1ced5fc3", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -33,23 +33,18 @@ with Prj.Com;  use Prj.Com;\n with Prj.Dect;\n with Prj.Err;  use Prj.Err;\n with Prj.Ext;  use Prj.Ext;\n-with Scans;    use Scans;\n with Sinput;   use Sinput;\n with Sinput.P; use Sinput.P;\n with Snames;\n with Table;\n-with Types;    use Types;\n \n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n with Ada.Exceptions;             use Ada.Exceptions;\n \n with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n-with GNAT.OS_Lib;                use GNAT.OS_Lib;\n \n with System.HTable;              use System.HTable;\n \n-pragma Elaborate_All (GNAT.OS_Lib);\n-\n package body Prj.Part is\n \n    Buffer      : String_Access;"}, {"sha": "d3615d144806d34b1d78a3a723571b894b7c17a7", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -28,11 +28,8 @@ with Err_Vars;  use Err_Vars;\n with Namet;     use Namet;\n with Prj.Attr;  use Prj.Attr;\n with Prj.Err;   use Prj.Err;\n-with Prj.Tree;  use Prj.Tree;\n-with Scans;     use Scans;\n with Snames;\n with Table;\n-with Types;     use Types;\n with Uintp;     use Uintp;\n \n package body Prj.Strt is"}, {"sha": "3a7decf49ec405339027f1d71b3918e241f92e02", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -30,7 +30,6 @@ with GNAT.Dynamic_HTables;\n with GNAT.Dynamic_Tables;\n \n with Prj.Attr; use Prj.Attr;\n-with Types;    use Types;\n \n package Prj.Tree is\n "}, {"sha": "667fb993c8e412703c022596bd05e41b478ed2d0", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -26,10 +26,6 @@\n \n --  Utilities for use in processing project files\n \n-with Types; use Types;\n-\n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n-\n package Prj.Util is\n \n    function Executable_Of"}, {"sha": "5a8c2996e83a095b7e4503d799e8e95274a91180", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -32,12 +32,10 @@ with Osint;    use Osint;\n with Prj.Attr;\n with Prj.Env;\n with Prj.Err;  use Prj.Err;\n-with Scans;    use Scans;\n with Snames;   use Snames;\n with Uintp;    use Uintp;\n \n with GNAT.Case_Util; use GNAT.Case_Util;\n-with GNAT.OS_Lib;    use GNAT.OS_Lib;\n \n package body Prj is\n "}, {"sha": "57998dbc485c6682d8fcfcdb0240eec460cac84c", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -39,7 +39,6 @@ with Sem;      use Sem;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n-with Snames;   use Snames;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n@@ -51,10 +50,10 @@ package body Sem_Dist is\n    -----------------------\n \n    procedure RAS_E_Dereference (Pref : Node_Id);\n-   --  Handles explicit dereference of Remote Access to Subprograms.\n+   --  Handles explicit dereference of Remote Access to Subprograms\n \n    function Full_Qualified_Name (E : Entity_Id) return String_Id;\n-   --  returns the full qualified name of the entity in lower case.\n+   --  returns the full qualified name of the entity in lower case\n \n    -------------------------\n    -- Add_Stub_Constructs --\n@@ -168,14 +167,14 @@ package body Sem_Dist is\n          Ent := Defining_Identifier (Ent);\n       end if;\n \n-      --  Compute recursively the qualification. Only \"Standard\" has no scope.\n+      --  Compute recursively the qualification (only \"Standard\" has no scope)\n \n       if Present (Scope (Scope (Ent))) then\n          Parent_Name := Full_Qualified_Name (Scope (Ent));\n       end if;\n \n-      --  Every entity should have a name except some expanded blocks\n-      --  don't bother about those.\n+      --  Every entity should have a name except some expanded blocks. Do not\n+      --  bother about those.\n \n       if Chars (Ent) = No_Name then\n          return Parent_Name;\n@@ -285,7 +284,7 @@ package body Sem_Dist is\n          Ety := Scope (Ety);\n       end loop;\n \n-      --  Retrieve the proper function to call.\n+      --  Retrieve the proper function to call\n \n       if Is_Remote_Call_Interface (Ety) then\n          Get_Pt_Id := New_Occurrence_Of\n@@ -454,27 +453,26 @@ package body Sem_Dist is\n       end loop;\n \n       if Is_Degenerate then\n-         Error_Msg_NE (\n-           \"remote access-to-subprogram type& can only be null?\",\n-           Defining_Identifier (Parameter), User_Type);\n+         Error_Msg_NE\n+           (\"remote access-to-subprogram type& can only be null?\",\n+            Defining_Identifier (Parameter), User_Type);\n+\n          --  The only legal value for a RAS with a formal parameter of an\n-         --  anonymous access type is null, because it cannot be\n-         --  subtype-Conformant with any legal remote subprogram declaration.\n-         --  In this case, we cannot generate a corresponding primitive\n-         --  operation.\n+         --  anonymous access type is null, because it cannot be subtype-\n+         --  conformant with any legal remote subprogram declaration. In this\n+         --  case, we cannot generate a corresponding primitive operation.\n       end if;\n \n       if Get_PCS_Name = Name_No_DSA then\n          return;\n       end if;\n \n-      --  The tagged private type, primitive operation and RACW\n-      --  type associated with a RAS need to all be declared in\n-      --  a subpackage of the one that contains the RAS declaration,\n-      --  because the primitive of the object type, and the associated\n-      --  primitive of the stub type, need to be dispatching operations\n-      --  of these types, and the profile of the RAS might contain\n-      --  tagged types declared in the same scope.\n+      --  The tagged private type, primitive operation and RACW type associated\n+      --  with a RAS need to all be declared in a subpackage of the one that\n+      --  contains the RAS declaration, because the primitive of the object\n+      --  type, and the associated primitive of the stub type, need to be\n+      --  dispatching operations of these types, and the profile of the RAS\n+      --  might contain tagged types declared in the same scope.\n \n       Append_To (Vis_Decls,\n         Make_Private_Type_Declaration (Loc,\n@@ -606,7 +604,7 @@ package body Sem_Dist is\n          end if;\n \n       else\n-         --  Context is not a call.\n+         --  Context is not a call\n \n          return;\n       end if;"}, {"sha": "608095cf0ed13462594f7632ee1e1242ca5b1202", "filename": "gcc/ada/sinput-c.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsinput-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsinput-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -29,8 +29,6 @@\n --  It is used by Sinput.P to load project files, and by GPrep to load\n --  preprocessor definition files and input files.\n \n-with Types; use Types;\n-\n package Sinput.C is\n \n    function Load_File (Path : String) return Source_File_Index;"}, {"sha": "7a4dda8f4de32b658fcaae97bd3587e17ec73534", "filename": "gcc/ada/sinput-l.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsinput-l.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsinput-l.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,8 +30,6 @@\n --  off into a child package to avoid a dependence of Sinput on Osint which\n --  would cause trouble in the tree read/write routines.\n \n-with Types; use Types;\n-\n package Sinput.L is\n \n    ------------------------------------------"}, {"sha": "fdcb3cf87e68fccd2e449b9c3a346c9a9b314a7e", "filename": "gcc/ada/sinput-p.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsinput-p.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fsinput-p.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -29,7 +29,6 @@\n --  routines to save and restore a project scan context.\n \n with Scans; use Scans;\n-with Types; use Types;\n \n package Sinput.P is\n "}, {"sha": "1ba9826a609e8b62044344696ae0efce1d4c9fd2", "filename": "gcc/ada/styleg-c.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fstyleg-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fstyleg-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg-c.ads?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,8 +28,6 @@\n --  used by the compiler for style checking. These routines are in a separate\n --  package because they depend on the GNAT tree (Atree, Sinfo, ...).\n \n-with Types;  use Types;\n-\n generic\n    with procedure Error_Msg_N (Msg : String; N : Node_Or_Entity_Id);\n    --  Output a message at the Sloc of the given node"}, {"sha": "5e8cbe34a0aebca58af191630a73ab6effcb8bcc", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -556,8 +556,6 @@ package body Xr_Tabls is\n    -------------------------\n \n    procedure Create_Project_File (Name : String) is\n-      use Ada.Strings.Unbounded;\n-\n       Obj_Dir     : Unbounded_String := Null_Unbounded_String;\n       Src_Dir     : Unbounded_String := Null_Unbounded_String;\n       Build_Dir   : GNAT.OS_Lib.String_Access := new String'(\"\");"}]}