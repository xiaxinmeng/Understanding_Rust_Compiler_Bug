{"sha": "4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiMGNhMmQxZTZhOGI2MjU3ODhhMTkxZmUyOGY1Njk4Y2FlMjM0NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-11-26T19:54:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-11-26T19:54:49Z"}, "message": "gcc.c (SANITIZER_SPEC): Don't error on -fsanitize=thread without -pie or -shared...\n\n\t* gcc.c (SANITIZER_SPEC): Don't error on -fsanitize=thread\n\twithout -pie or -shared, error on -fsanitize=thread -static instead.\n\n\t* lib/tsan-dg.exp (check_effective_target_fsanitize_thread,\n\ttsan_init): Don't use -fPIE or -pie.\n\nFrom-SVN: r218097", "tree": {"sha": "4890373cde717cbb4efea5468fbf0ab1385b156a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4890373cde717cbb4efea5468fbf0ab1385b156a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45c89690541ea6acd52c2dd417e90e5bd00b6071", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c89690541ea6acd52c2dd417e90e5bd00b6071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c89690541ea6acd52c2dd417e90e5bd00b6071"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "b05939e178933b5834a0ad88bb4af46ffa965e7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "patch": "@@ -1,3 +1,8 @@\n+2014-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c (SANITIZER_SPEC): Don't error on -fsanitize=thread\n+\twithout -pie or -shared, error on -fsanitize=thread -static instead.\n+\n 2014-11-26  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR ipa/61190"}, {"sha": "4cb4ba32618e1ea2a19d99297ad0692de29c2c14", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "patch": "@@ -794,7 +794,7 @@ proper position among the other output files.  */\n %{!nostdlib:%{!nodefaultlibs:%{%:sanitize(address):\" LIBASAN_SPEC \"\\\n     %{static:%ecannot specify -static with -fsanitize=address}}\\\n     %{%:sanitize(thread):\" LIBTSAN_SPEC \"\\\n-    %{!pie:%{!shared:%e-fsanitize=thread linking must be done with -pie or -shared}}}\\\n+    %{static:%ecannot specify -static with -fsanitize=thread}}\\\n     %{%:sanitize(undefined):\" LIBUBSAN_SPEC \"}\\\n     %{%:sanitize(leak):\" LIBLSAN_SPEC \"}}}\"\n #endif"}, {"sha": "b8239da914864e347c13b2435f51772571c558a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "patch": "@@ -1,3 +1,8 @@\n+2014-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lib/tsan-dg.exp (check_effective_target_fsanitize_thread,\n+\ttsan_init): Don't use -fPIE or -pie.\n+\n 2014-11-26  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR ipa/61190"}, {"sha": "db3c263c9ac2947edbbb9c87adaf55684c01b7f5", "filename": "gcc/testsuite/lib/tsan-dg.exp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb0ca2d1e6a8b625788a191fe28f5698cae2344/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp?ref=4bb0ca2d1e6a8b625788a191fe28f5698cae2344", "patch": "@@ -18,9 +18,9 @@\n # code, 0 otherwise.\n \n proc check_effective_target_fsanitize_thread {} {\n-    return [check_no_compiler_messages fanitize_thread executable {\n+    return [check_no_compiler_messages fsanitize_thread executable {\n \tint main (void) { return 0; }\n-    } \"-fPIE -pie -fsanitize=thread\"]\n+    } \"-fsanitize=thread\"]\n }\n \n #\n@@ -93,12 +93,12 @@ proc tsan_init { args } {\n     if [info exists ALWAYS_CXXFLAGS] {\n \tset tsan_saved_ALWAYS_CXXFLAGS $ALWAYS_CXXFLAGS\n \tset ALWAYS_CXXFLAGS [concat \"{ldflags=$link_flags}\" $ALWAYS_CXXFLAGS]\n-\tset ALWAYS_CXXFLAGS [concat \"{additional_flags=-fPIE -pie -fsanitize=thread -g}\" $ALWAYS_CXXFLAGS]\n+\tset ALWAYS_CXXFLAGS [concat \"{additional_flags=-fsanitize=thread -g}\" $ALWAYS_CXXFLAGS]\n     } else {\n \tif [info exists TEST_ALWAYS_FLAGS] {\n-\t    set TEST_ALWAYS_FLAGS \"$link_flags -fPIE -pie -fsanitize=thread -g $TEST_ALWAYS_FLAGS\"\n+\t    set TEST_ALWAYS_FLAGS \"$link_flags -fsanitize=thread -g $TEST_ALWAYS_FLAGS\"\n \t} else {\n-\t    set TEST_ALWAYS_FLAGS \"$link_flags -fPIE -pie -fsanitize=thread -g\"\n+\t    set TEST_ALWAYS_FLAGS \"$link_flags -fsanitize=thread -g\"\n \t}\n     }\n \n@@ -110,7 +110,7 @@ proc tsan_init { args } {\n \tset individual_timeout 20\n \tif [check_runtime_nocache tsan_works {\n \t\tint main () { return 0; }\n-\t    } \"-fPIE -pie -fsanitize=thread -g\"] {\n+\t    } \"-fsanitize=thread -g\"] {\n \t    set dg-do-what-default run\n \t} else {\n \t    set dg-do-what-default compile"}]}