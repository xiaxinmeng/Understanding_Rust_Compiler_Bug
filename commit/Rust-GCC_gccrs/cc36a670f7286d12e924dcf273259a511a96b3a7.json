{"sha": "cc36a670f7286d12e924dcf273259a511a96b3a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MzNmE2NzBmNzI4NmQxMmU5MjRkY2YyNzMyNTlhNTExYTk2YjNhNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-01T02:39:38Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-01T02:39:38Z"}, "message": "* g++.dg/opt/vtgc1.C: Adjust patterns for ia64.\n\nFrom-SVN: r50179", "tree": {"sha": "04b26e1898c62299340b32f75954e1eb2db7a2eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b26e1898c62299340b32f75954e1eb2db7a2eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc36a670f7286d12e924dcf273259a511a96b3a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc36a670f7286d12e924dcf273259a511a96b3a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc36a670f7286d12e924dcf273259a511a96b3a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc36a670f7286d12e924dcf273259a511a96b3a7/comments", "author": null, "committer": null, "parents": [{"sha": "6f30f1f13ccfb32f8a45daa3e6ac4599d9813b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f30f1f13ccfb32f8a45daa3e6ac4599d9813b8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f30f1f13ccfb32f8a45daa3e6ac4599d9813b8a"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "8071038f8a515ac2b373399bd923fe921ba38dd5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc36a670f7286d12e924dcf273259a511a96b3a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc36a670f7286d12e924dcf273259a511a96b3a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc36a670f7286d12e924dcf273259a511a96b3a7", "patch": "@@ -1,3 +1,7 @@\n+2002-02-28  Richard Henderson  <rth@redhat.com>\n+\n+\t* g++.dg/opt/vtgc1.C: Adjust patterns for ia64.\n+\n 2002-02-27  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* gcc.c-torture/execute/20020227-1.c: New test.\n@@ -85,7 +89,7 @@\n \n 2002-02-21  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/attr-alwaysinline.c: New.\n+\t* gcc.dg/attr-alwaysinline.c: New.\n \n 2002-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -162,7 +166,7 @@\n \n 2002-02-13  Stan Shebs  <shebs@apple.com>\n \n-        * gcc.dg/altivec-3.c: New.\n+\t* gcc.dg/altivec-3.c: New.\n \n 2002-02-12  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -268,13 +272,13 @@\n 2002-02-06  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* g++.dg/ext/align1.C: Do not use an explicit alignment value\n-        as certain file formats cannot support particularly large\n-        alignments.\n+\tas certain file formats cannot support particularly large\n+\talignments.\n \n \t* g++.dg/warn/weak1.C: Expect a warning from COFF toolchains,\n \tand do not expect to be able to link the executable.\n \n-        * g++.old-deja/g++.ext/attrib5.C: Expect the compilation to\n+\t* g++.old-deja/g++.ext/attrib5.C: Expect the compilation to\n \tfail because the COFF format does not support the weak attribute.\n \n 2002-02-05  David Billinghurst <David.Billinghurst@riotinto.com>\n@@ -283,8 +287,8 @@\n \n 2002-02-05  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/altivec-4.c: AltiVec builtin predicates changed format.\n-        Fix testcase accordingly.\n+\t* gcc.dg/altivec-4.c: AltiVec builtin predicates changed format.\n+\tFix testcase accordingly.\n \n 2002-02-04  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "511d45b36e7194bb56c41bdd025afd31521a9a1a", "filename": "gcc/testsuite/g++.dg/opt/vtgc1.C", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc36a670f7286d12e924dcf273259a511a96b3a7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvtgc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc36a670f7286d12e924dcf273259a511a96b3a7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvtgc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvtgc1.C?ref=cc36a670f7286d12e924dcf273259a511a96b3a7", "patch": "@@ -118,16 +118,19 @@ void x3 (Multivs1 *ii) { ii->f2();}\n void x4 (Multiss2 *ii) { ii->f2();}\n void x5 (Multivv3 *ii) { ii->f2();}\n \n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multivv3, 0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for Multivv3, 0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multiss2, vtable for Base2\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multivs1, vtable for Base2\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for Multivs1, vtable for Base2\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multisv0, vtable for Side0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for Multisv0, vtable for Side0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Side0, 0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for VbasedA, 0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for VbasedA, 0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Base2, vtable for Base1\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Base1, vtable for Base0\" } }\n-// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Base0, 0\" } }\n+// Use .* because of ia64's convention of marking symbols with \"#\", which\n+// makes it through the c++filt.\n+\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multivv3.*0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for Multivv3.*0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multiss2.*vtable for Base2\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multivs1.*vtable for Base2\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for Multivs1.*vtable for Base2\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Multisv0.*vtable for Side0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for Multisv0.*vtable for Side0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Side0.*0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for VbasedA.*0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*VTT for VbasedA.*0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Base2.*vtable for Base1\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Base1.*vtable for Base0\" } }\n+// { dg-final { scan-assembler-dem \"\\.vtable_inherit\\[ \\t\\]*vtable for Base0.*0\" } }"}]}