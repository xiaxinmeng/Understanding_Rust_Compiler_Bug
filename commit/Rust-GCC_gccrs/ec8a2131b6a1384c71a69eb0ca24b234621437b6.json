{"sha": "ec8a2131b6a1384c71a69eb0ca24b234621437b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM4YTIxMzFiNmExMzg0YzcxYTY5ZWIwY2EyNGIyMzQ2MjE0MzdiNg==", "commit": {"author": {"name": "Robert Suchanek", "email": "robert.suchanek@imgtec.com", "date": "2015-08-18T12:42:12Z"}, "committer": {"name": "Robert Suchanek", "email": "rts@gcc.gnu.org", "date": "2015-08-18T12:42:12Z"}, "message": "[MIPS] Fix register renaming in the interrupt handlers.\n\ngcc/\n\t* config/mips/mips-protos.h (mips_hard_regno_rename_ok): New prototype.\n\t* config/mips/mips.c (mips_hard_regno_rename_ok): New function.\n\t(mips_hard_regno_scratch_ok): Likewise.\n\t(TARGET_HARD_REGNO_SCRATCH_OK): Define macro.\n\t* config/mips/mips.h (HARD_REGNO_RENAME_OK): New.\n\ngcc/testsuite/\n\t* gcc.target/mips/interrupt_handler-bug-1.c: New test.\n\nFrom-SVN: r226968", "tree": {"sha": "086a2c0a88767149b195b4a2fb6395acd370962c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/086a2c0a88767149b195b4a2fb6395acd370962c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec8a2131b6a1384c71a69eb0ca24b234621437b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8a2131b6a1384c71a69eb0ca24b234621437b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8a2131b6a1384c71a69eb0ca24b234621437b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8a2131b6a1384c71a69eb0ca24b234621437b6/comments", "author": null, "committer": null, "parents": [{"sha": "7b008bbc0c4050da71786bb51de743964807aa44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b008bbc0c4050da71786bb51de743964807aa44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b008bbc0c4050da71786bb51de743964807aa44"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "dcd5d4768f529caddc7bef8743134b36a29ab20b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec8a2131b6a1384c71a69eb0ca24b234621437b6", "patch": "@@ -1,3 +1,11 @@\n+2015-08-18  Robert Suchanek  <robert.suchanek@imgtec.com>\n+\n+\t* config/mips/mips-protos.h (mips_hard_regno_rename_ok): New prototype.\n+\t* config/mips/mips.c (mips_hard_regno_rename_ok): New function.\n+\t(mips_hard_regno_scratch_ok): Likewise.\n+\t(TARGET_HARD_REGNO_SCRATCH_OK): Define macro.\n+\t* config/mips/mips.h (HARD_REGNO_RENAME_OK): New.\n+\n 2015-08-18  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-niter.c (refine_value_range_using_guard): New."}, {"sha": "d9ad9100f99616f8c722d369ac303993041554a0", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=ec8a2131b6a1384c71a69eb0ca24b234621437b6", "patch": "@@ -303,6 +303,7 @@ extern const char *mips_output_sync_loop (rtx_insn *, rtx *);\n extern unsigned int mips_sync_loop_insns (rtx_insn *, rtx *);\n extern const char *mips_output_division (const char *, rtx *);\n extern const char *mips_output_probe_stack_range (rtx, rtx);\n+extern bool mips_hard_regno_rename_ok (unsigned int, unsigned int);\n extern unsigned int mips_hard_regno_nregs (int, machine_mode);\n extern bool mips_linked_madd_p (rtx_insn *, rtx_insn *);\n extern bool mips_store_data_bypass_p (rtx_insn *, rtx_insn *);"}, {"sha": "401d73bfeaa72e10eac6d9a211c58c0c1bef6868", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ec8a2131b6a1384c71a69eb0ca24b234621437b6", "patch": "@@ -12281,6 +12281,33 @@ mips_hard_regno_mode_ok_p (unsigned int regno, machine_mode mode)\n   return false;\n }\n \n+/* Return nonzero if register OLD_REG can be renamed to register NEW_REG.  */\n+\n+bool\n+mips_hard_regno_rename_ok (unsigned int old_reg ATTRIBUTE_UNUSED,\n+\t\t\t   unsigned int new_reg)\n+{\n+  /* Interrupt functions can only use registers that have already been\n+     saved by the prologue, even if they would normally be call-clobbered.  */\n+  if (cfun->machine->interrupt_handler_p && !df_regs_ever_live_p (new_reg))\n+    return false;\n+\n+  return true;\n+}\n+\n+/* Return nonzero if register REGNO can be used as a scratch register\n+   in peephole2.  */\n+\n+bool\n+mips_hard_regno_scratch_ok (unsigned int regno)\n+{\n+  /* See mips_hard_regno_rename_ok.  */\n+  if (cfun->machine->interrupt_handler_p && !df_regs_ever_live_p (regno))\n+    return false;\n+\n+  return true;\n+}\n+\n /* Implement HARD_REGNO_NREGS.  */\n \n unsigned int\n@@ -19827,6 +19854,9 @@ mips_ira_change_pseudo_allocno_class (int regno, reg_class_t allocno_class)\n #undef TARGET_IRA_CHANGE_PSEUDO_ALLOCNO_CLASS\n #define TARGET_IRA_CHANGE_PSEUDO_ALLOCNO_CLASS mips_ira_change_pseudo_allocno_class\n \n+#undef TARGET_HARD_REGNO_SCRATCH_OK\n+#define TARGET_HARD_REGNO_SCRATCH_OK mips_hard_regno_scratch_ok\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n #include \"gt-mips.h\""}, {"sha": "da1de011fc99f1aa8c4a914174726d248a2745d8", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=ec8a2131b6a1384c71a69eb0ca24b234621437b6", "patch": "@@ -1876,6 +1876,9 @@ FP_ASM_SPEC \"\\\n #define HARD_REGNO_MODE_OK(REGNO, MODE)\t\t\t\t\t\\\n   mips_hard_regno_mode_ok[ (int)(MODE) ][ (REGNO) ]\n \n+#define HARD_REGNO_RENAME_OK(OLD_REG, NEW_REG)\t\t\t\t\\\n+  mips_hard_regno_rename_ok (OLD_REG, NEW_REG)\n+\n /* Select a register mode required for caller save of hard regno REGNO.  */\n #define HARD_REGNO_CALLER_SAVE_MODE(REGNO, NREGS, MODE) \\\n   mips_hard_regno_caller_save_mode (REGNO, NREGS, MODE)"}, {"sha": "aff223c8a1628b7da277f84e4cbcfd89373505db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec8a2131b6a1384c71a69eb0ca24b234621437b6", "patch": "@@ -1,3 +1,7 @@\n+2015-08-18  Robert Suchanek  <robert.suchanek@imgtec.com>\n+\n+\t* gcc.target/mips/interrupt_handler-bug-1.c: New test.\n+\n 2015-08-18  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/tree-ssa/loop-bound-1.c: New test."}, {"sha": "2784705b17696fe3bc4c4619954b304cf5724e92", "filename": "gcc/testsuite/gcc.target/mips/interrupt_handler-bug-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finterrupt_handler-bug-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8a2131b6a1384c71a69eb0ca24b234621437b6/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finterrupt_handler-bug-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Finterrupt_handler-bug-1.c?ref=ec8a2131b6a1384c71a69eb0ca24b234621437b6", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-funroll-loops\" } */\n+int foo;\n+int bar;\n+\n+void __attribute__ ((interrupt))\n+isr (void)\n+{\n+  if (!foo)\n+    while (bar & 0xFF30);\n+}\n+/* { dg-final { scan-assembler-not \"^isr:.*\\\\\\$8.*isr\" } } */"}]}