{"sha": "c83b9c54d9dee2dce5d8268472a745b013d166cc", "node_id": "C_kwDOANBUbNoAKGM4M2I5YzU0ZDlkZWUyZGNlNWQ4MjY4NDcyYTc0NWIwMTNkMTY2Y2M", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-04-26T01:49:00Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-04-26T01:49:00Z"}, "message": "c++: ICE with requires-expr and -Wsequence-point [PR105304]\n\nHere we're crashing from verify_sequence_points for this requires-expr\ncondition because it contains a templated CAST_EXPR with empty operand,\nand verify_tree doesn't ignore this empty operand only because the\nmanual tail recursion that it performs for unary expression trees skips\nthe NULL test.\n\n\tPR c++/105304\n\ngcc/c-family/ChangeLog:\n\n\t* c-common.cc (verify_tree) [restart]: Move up to before the\n\tNULL test.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/concepts-requires30.C: New test.", "tree": {"sha": "3f720156dc7cf3e2092ac714801181cbac50f425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f720156dc7cf3e2092ac714801181cbac50f425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c83b9c54d9dee2dce5d8268472a745b013d166cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83b9c54d9dee2dce5d8268472a745b013d166cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83b9c54d9dee2dce5d8268472a745b013d166cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83b9c54d9dee2dce5d8268472a745b013d166cc/comments", "author": null, "committer": null, "parents": [{"sha": "288e4c64f6b4806358aabc9b99b2fba72bf04bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288e4c64f6b4806358aabc9b99b2fba72bf04bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288e4c64f6b4806358aabc9b99b2fba72bf04bf6"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "bb0544eeaea798c786cb2aafd62275a172d2a63b", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83b9c54d9dee2dce5d8268472a745b013d166cc/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83b9c54d9dee2dce5d8268472a745b013d166cc/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=c83b9c54d9dee2dce5d8268472a745b013d166cc", "patch": "@@ -2009,12 +2009,12 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n   enum tree_code code;\n   enum tree_code_class cl;\n \n+ restart:\n   /* X may be NULL if it is the operand of an empty statement expression\n      ({ }).  */\n   if (x == NULL)\n     return;\n \n- restart:\n   code = TREE_CODE (x);\n   cl = TREE_CODE_CLASS (code);\n "}, {"sha": "f500af3f616405ac311a4d63d01a9b74d753c98e", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires30.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83b9c54d9dee2dce5d8268472a745b013d166cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83b9c54d9dee2dce5d8268472a745b013d166cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires30.C?ref=c83b9c54d9dee2dce5d8268472a745b013d166cc", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/105304\n+// { dg-do compile { target c++20 } }\n+// { dg-additional-options \"-Wall -Wsequence-point\" }\n+\n+struct A { };\n+\n+int main() {\n+  if (requires { A(); })\n+    ;\n+}"}]}