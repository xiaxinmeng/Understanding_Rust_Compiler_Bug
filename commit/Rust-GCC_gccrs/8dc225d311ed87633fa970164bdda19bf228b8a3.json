{"sha": "8dc225d311ed87633fa970164bdda19bf228b8a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjMjI1ZDMxMWVkODc2MzNmYTk3MDE2NGJkZGExOWJmMjI4YjhhMw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-10T00:16:43Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-10T00:16:43Z"}, "message": "Daily bump.", "tree": {"sha": "e9545ebe6132a4e01b943e05aa7fd6e4e6ac7454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9545ebe6132a4e01b943e05aa7fd6e4e6ac7454"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dc225d311ed87633fa970164bdda19bf228b8a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc225d311ed87633fa970164bdda19bf228b8a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc225d311ed87633fa970164bdda19bf228b8a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc225d311ed87633fa970164bdda19bf228b8a3/comments", "author": null, "committer": null, "parents": [{"sha": "63d74fed4566f1de583c368ecb9e2fc423fb1c87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d74fed4566f1de583c368ecb9e2fc423fb1c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d74fed4566f1de583c368ecb9e2fc423fb1c87"}], "stats": {"total": 142, "additions": 141, "deletions": 1}, "files": [{"sha": "7fea6dbe5dfc262e90101ef805a898d84b8c6eb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dc225d311ed87633fa970164bdda19bf228b8a3", "patch": "@@ -1,3 +1,84 @@\n+2021-03-09  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* ira.c (ira_setup_alts, ira_get_dup_out_num): Process digital\n+\tconstraints > 9.\n+\t* ira-lives.c (single_reg_class): Ditto.\n+\n+2021-03-09  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config.gcc (aarch64-*-rtems*): Include general rtems.h after\n+\tthe architecture-specific rtems.h.\n+\t(aarch64-*-rtems*): Likewise.\n+\t(arm*-*-rtems*): Likewise.\n+\t(epiphany-*-rtems*): Likewise.\n+\t(riscv*-*-rtems*): Likewise.\n+\n+2021-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99305\n+\t* tree-ssa-phiopt.c (conditional_replacement): Test integer_pow2p\n+\tbefore integer_all_onesp instead of vice versa.\n+\n+2021-03-09  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* common/config/arm/arm-common.c (arm_config_default): Change type\n+\tof 'i' to unsigned.\n+\n+2021-03-09  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99454\n+\t* lra-constraints.c (process_address_1): Process constraint 'g'\n+\tseparately and digital constraints containing more one digit.\n+\n+2021-03-09  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.h (DBX_DEBUGGING_INFO): Define.\n+\t(DWARF\"_DEBUGGING_INFO): Define.\n+\n+2021-03-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR c++/90448\n+\t* calls.c (initialize_argument_information): When the argument\n+\tis passed by reference, do not make a copy in a thunk only if\n+\tthe argument is already in memory.  Remove redundant test for\n+\tthe case of callee copy.\n+\n+2021-03-09  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99454\n+\t* lra-constraints.c (process_address_1): Process 0..9 constraints\n+\tin process_address_1.\n+\n+2021-03-09  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.c (struct s390_processor processor_table):\n+\tBinutils name string must not be empty.\n+\n+2021-03-09  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.c (arc_attr_type): Remove function.\n+\n+2021-03-09  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/99464\n+\t* config/i386/i386-options.c (ix86_option_override_internal):\n+\tSet isa_flags for OPTS argument and not for the global\n+\tglobal_options.\n+\n+2021-03-09  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* config/rs6000/predicates.md (ds_form_mem_operand): Check\n+\tin correct code.\n+\n+2021-03-09  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\tPR target/99070\n+\t* config/rs6000/predicates.md (ds_form_mem_operand) New\n+\tpredicate.\n+\t* config/rs6000/genfusion.pl (gen_ld_cmpi_p10) Use\n+\tds_form_mem_operand in ld/lwa patterns.\n+\t* config/rs6000/fusion.md: Regenerate file.\n+\n 2021-03-08  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/98266"}, {"sha": "3384f6c73254cfd9485dc509c8a0ba8d80630f2a", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=8dc225d311ed87633fa970164bdda19bf228b8a3", "patch": "@@ -1 +1 @@\n-20210309\n+20210310"}, {"sha": "c66c7fcaf050b022f721830695f65446bb9867fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8dc225d311ed87633fa970164bdda19bf228b8a3", "patch": "@@ -1,3 +1,8 @@\n+2021-03-09  Mikael Pettersson  <mikpelinux@gmail.com>\n+\n+\t* raise-gcc.c: On Cygwin include mingw32.h to prevent\n+\twindows.h from including x86intrin.h or emmintrin.h.\n+\n 2021-03-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/99264"}, {"sha": "145b4366b24c653417482b5c758db7ed114ac196", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8dc225d311ed87633fa970164bdda19bf228b8a3", "patch": "@@ -1,3 +1,16 @@\n+2021-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99459\n+\t* coroutines.cc (build_co_await): Look through NOP_EXPRs in\n+\tbuild_special_member_call return value to find the CALL_EXPR.\n+\tSimplify.\n+\n+2021-03-09  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99472\n+\t* parser.c (cp_parser_diagnose_invalid_type_name): Clarify\n+\tthat C++20 does not yet imply modules.\n+\n 2021-03-08  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99436"}, {"sha": "ca046f0d6c865b0798faa4a6ab09f801014275fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc225d311ed87633fa970164bdda19bf228b8a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8dc225d311ed87633fa970164bdda19bf228b8a3", "patch": "@@ -1,3 +1,44 @@\n+2021-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99305\n+\t* g++.dg/opt/pr99305.C: New test.\n+\n+2021-03-09  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* lib/target-supports.exp (check_effective_target_powerpc_sqrt): New.\n+\t(check_effective_target_sqrt_insn): Use it.\n+\n+2021-03-09  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99454\n+\t* gcc.target/i386/pr99454.c: New.\n+\n+2021-03-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/array-quals-1.c: Pass -fno-pie if supported.\n+\t* gcc.dg/loop-9.c: Likewise.\n+\t* gfortran.dg/pr95690.f90: Replace *-*-solaris* with sparc*-*-*.\n+\t* gnat.dg/opt39.adb: Pass --param option for Aarch64 too.\n+\n+2021-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/98920\n+\t* c-c++-common/asan/pr98920.c: Only include regex.h if the header\n+\texists.  If REG_STARTEND macro isn't defined, just return 0 from main\n+\tinstead of the actual test.\n+\n+2021-03-09  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/99464\n+\t* gcc.target/i386/pr99464.c: New test.\n+\n+2021-03-09  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* gcc.target/powerpc/undef-bool-2.c: Add\n+\tdg-require-effective-target powerpc_vsx_ok directive.\n+\t* g++.dg/ext/undef-bool-1.C: Add dg-require-effective-target\n+\tpowerpc_vsx_ok directive.\n+\n 2021-03-08  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/49278"}]}