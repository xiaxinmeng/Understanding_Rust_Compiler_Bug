{"sha": "69e09400911e0ced6a71873754ce736135458b4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllMDk0MDA5MTFlMGNlZDZhNzE4NzM3NTRjZTczNjEzNTQ1OGI0ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-10-28T19:37:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-10-28T19:37:46Z"}, "message": "* constexpr.c (cxx_eval_outermost_constant_expr): Tweak.\n\nFrom-SVN: r216809", "tree": {"sha": "4ab1f30cc051265bc25f933df07f4c1a2fe76b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ab1f30cc051265bc25f933df07f4c1a2fe76b98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69e09400911e0ced6a71873754ce736135458b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e09400911e0ced6a71873754ce736135458b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e09400911e0ced6a71873754ce736135458b4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e09400911e0ced6a71873754ce736135458b4d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a21b777bbaa8246e8cb138ffc28cf30b08d9950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a21b777bbaa8246e8cb138ffc28cf30b08d9950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a21b777bbaa8246e8cb138ffc28cf30b08d9950"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "e1ec24c485aa5b55622ece1efb6b5f1f71b22378", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e09400911e0ced6a71873754ce736135458b4d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e09400911e0ced6a71873754ce736135458b4d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=69e09400911e0ced6a71873754ce736135458b4d", "patch": "@@ -1,3 +1,7 @@\n+2014-10-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (cxx_eval_outermost_constant_expr): Tweak.\n+\n 2014-10-28  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* call.c: Adjust include files."}, {"sha": "225a9924e90369ba972f89e640f367b83a2480e9", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e09400911e0ced6a71873754ce736135458b4d/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e09400911e0ced6a71873754ce736135458b4d/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=69e09400911e0ced6a71873754ce736135458b4d", "patch": "@@ -2756,8 +2756,6 @@ cxx_eval_outermost_constant_expr (tree t, bool allow_non_constant,\n   hash_map<tree,tree> map;\n   ctx.values = &map;\n   tree type = initialized_type (t);\n-  if (!object && TREE_CODE (t) == TARGET_EXPR)\n-    object = TARGET_EXPR_SLOT (t);\n   tree r = t;\n   if (AGGREGATE_TYPE_P (type) || VECTOR_TYPE_P (type))\n     {\n@@ -2770,6 +2768,8 @@ cxx_eval_outermost_constant_expr (tree t, bool allow_non_constant,\n \t initialized.  */\n       ctx.ctor = build_constructor (type, NULL);\n       CONSTRUCTOR_NO_IMPLICIT_ZERO (ctx.ctor) = true;\n+      if (!object && TREE_CODE (t) == TARGET_EXPR)\n+\tobject = TARGET_EXPR_SLOT (t);\n       ctx.object = object;\n       if (object)\n \tgcc_assert (same_type_ignoring_top_level_qualifiers_p"}]}