{"sha": "dca52d8026885a3bfa6e67859a36b453bb41ead7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhNTJkODAyNjg4NWEzYmZhNmU2Nzg1OWEzNmI0NTNiYjQxZWFkNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T22:31:24Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T22:31:24Z"}, "message": "(operands_match_p): For WORDS_BIG_ENDIAN machines,\n\nmake multiple register operands equivalent if the last register of\nthe groups are the same.\n(subst_reloads): Use gen_lowpart_common to change mode of\nreloadreg.\n\nFrom-SVN: r3030", "tree": {"sha": "6fd25264c6d57f84455b69fc110aa73d7cf60c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd25264c6d57f84455b69fc110aa73d7cf60c5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dca52d8026885a3bfa6e67859a36b453bb41ead7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca52d8026885a3bfa6e67859a36b453bb41ead7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca52d8026885a3bfa6e67859a36b453bb41ead7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca52d8026885a3bfa6e67859a36b453bb41ead7/comments", "author": null, "committer": null, "parents": [{"sha": "3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3002e1601b13c6a4cd4382788d97ebbd789e4ce9"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "1b98a42854d57879c33f2e337d90e111054f8eb7", "filename": "gcc/reload.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca52d8026885a3bfa6e67859a36b453bb41ead7/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca52d8026885a3bfa6e67859a36b453bb41ead7/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=dca52d8026885a3bfa6e67859a36b453bb41ead7", "patch": "@@ -1592,6 +1592,16 @@ operands_match_p (x, y)\n       else\n \tj = REGNO (y);\n \n+      /* On a WORDS_BIG_ENDIAN machine, point to the last register of a\n+\t multiple hard register group, so that for example (reg:DI 0) and\n+\t (reg:SI 1) will be considered the same register.  */\n+      if (WORDS_BIG_ENDIAN && GET_MODE_SIZE (GET_MODE (x)) > UNITS_PER_WORD\n+\t  && i < FIRST_PSEUDO_REGISTER)\n+\ti += (GET_MODE_SIZE (GET_MODE (x)) / UNITS_PER_WORD) - 1;\n+      if (WORDS_BIG_ENDIAN && GET_MODE_SIZE (GET_MODE (y)) > UNITS_PER_WORD\n+\t  && j < FIRST_PSEUDO_REGISTER)\n+\tj += (GET_MODE_SIZE (GET_MODE (y)) / UNITS_PER_WORD) - 1;\n+\n       return i == j;\n     }\n   /* If two operands must match, because they are really a single\n@@ -4348,7 +4358,7 @@ subst_reloads ()\n \t  /* Encapsulate RELOADREG so its machine mode matches what\n \t     used to be there.  */\n \t  if (GET_MODE (reloadreg) != r->mode && r->mode != VOIDmode)\n-\t    reloadreg = gen_rtx (REG, r->mode, REGNO (reloadreg));\n+\t    reloadreg = gen_lowpart_common (r->mode, reloadreg);\n \n \t  /* If we are putting this into a SUBREG and RELOADREG is a\n \t     SUBREG, we would be making nested SUBREGs, so we have to fix"}]}