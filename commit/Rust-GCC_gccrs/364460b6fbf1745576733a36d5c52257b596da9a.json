{"sha": "364460b6fbf1745576733a36d5c52257b596da9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY0NDYwYjZmYmYxNzQ1NTc2NzMzYTM2ZDVjNTIyNTdiNTk2ZGE5YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-11-13T04:48:05Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-11-13T04:48:05Z"}, "message": "decl.c (cplus_expand_expr_stmt): Don't call break_out_cleanups here.\n\n\t* decl.c (cplus_expand_expr_stmt): Don't call break_out_cleanups\n\there.\n\t* semantics.c (finish_expr_stmt): Call it here instead.  Move\n\tdefault_conversion logic to semantic-analysis time.\n\nFrom-SVN: r30520", "tree": {"sha": "f91251d2f26a7a03b54bffd2af0f10e7e6f1ecdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f91251d2f26a7a03b54bffd2af0f10e7e6f1ecdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/364460b6fbf1745576733a36d5c52257b596da9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364460b6fbf1745576733a36d5c52257b596da9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/364460b6fbf1745576733a36d5c52257b596da9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364460b6fbf1745576733a36d5c52257b596da9a/comments", "author": null, "committer": null, "parents": [{"sha": "2cfcc23e7fa3c0f2fed4e3294794587ef61815ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cfcc23e7fa3c0f2fed4e3294794587ef61815ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cfcc23e7fa3c0f2fed4e3294794587ef61815ac"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "42737262298f68060363c26f20856df86ddaa5f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/364460b6fbf1745576733a36d5c52257b596da9a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/364460b6fbf1745576733a36d5c52257b596da9a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=364460b6fbf1745576733a36d5c52257b596da9a", "patch": "@@ -1,3 +1,10 @@\n+1999-11-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (cplus_expand_expr_stmt): Don't call break_out_cleanups\n+\there.\n+\t* semantics.c (finish_expr_stmt): Call it here instead.  Move\n+\tdefault_conversion logic to semantic-analysis time.\n+\n 1999-11-12  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* rtti.c (synthesize_tinfo_fn): Set DECL_DEFER_OUTPUT."}, {"sha": "fd4361a06ca4b6ae602f0497712caa36aa086230", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/364460b6fbf1745576733a36d5c52257b596da9a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/364460b6fbf1745576733a36d5c52257b596da9a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=364460b6fbf1745576733a36d5c52257b596da9a", "patch": "@@ -14155,7 +14155,7 @@ cplus_expand_expr_stmt (exp)\n      trying to do TYPE_MODE on the ERROR_MARK, and really\n      go outside the bounds of the type.  */\n   if (exp != error_mark_node)\n-    expand_expr_stmt (break_out_cleanups (exp));\n+    expand_expr_stmt (exp);\n }\n \n /* When a stmt has been parsed, this function is called.  */"}, {"sha": "83674d1e1e9bbf3fe4456386493cb067b861c937", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/364460b6fbf1745576733a36d5c52257b596da9a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/364460b6fbf1745576733a36d5c52257b596da9a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=364460b6fbf1745576733a36d5c52257b596da9a", "patch": "@@ -127,18 +127,25 @@ finish_expr_stmt (expr)\n   if (expr != NULL_TREE)\n     {\n       if (building_stmt_tree ())\n-\tadd_tree (build_min_nt (EXPR_STMT, expr));\n-      else\n \t{\n-\t  emit_line_note (input_filename, lineno);\n \t  /* Do default conversion if safe and possibly important,\n \t     in case within ({...}).  */\n-\t  if (!stmts_are_full_exprs_p &&\n-\t      ((TREE_CODE (TREE_TYPE (expr)) == ARRAY_TYPE\n-\t        && lvalue_p (expr))\n-\t       || TREE_CODE (TREE_TYPE (expr)) == FUNCTION_TYPE))\n+\t  if (!processing_template_decl\n+\t      && !stmts_are_full_exprs_p\n+\t      && ((TREE_CODE (TREE_TYPE (expr)) == ARRAY_TYPE\n+\t\t   && lvalue_p (expr))\n+\t\t  || TREE_CODE (TREE_TYPE (expr)) == FUNCTION_TYPE))\n \t    expr = default_conversion (expr);\n \n+\t  if (!processing_template_decl)\n+\t    expr = break_out_cleanups (expr);\n+\n+\t  add_tree (build_min_nt (EXPR_STMT, expr));\n+\t}\n+      else\n+\t{\n+\t  emit_line_note (input_filename, lineno);\n+\n \t  if (stmts_are_full_exprs_p)\n \t    expand_start_target_temps ();\n \t    "}]}