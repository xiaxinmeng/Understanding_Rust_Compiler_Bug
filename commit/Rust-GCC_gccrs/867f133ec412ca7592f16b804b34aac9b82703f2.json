{"sha": "867f133ec412ca7592f16b804b34aac9b82703f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3ZjEzM2VjNDEyY2E3NTkyZjE2YjgwNGIzNGFhYzliODI3MDNmMg==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2007-12-01T08:56:55Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2007-12-01T08:56:55Z"}, "message": "re PR c++/8171 (Cannot compare pointer to member function of base and derived class)\n\n\tPR c++/8171\n\n\tgcc/cp/\n\t* typeck.c (build_binary_op): Add conversion of pointers to function\n\tmembers appearing as operands to the equality operators.\n\n\tgcc/testsuite/\n\t* g++.dg/conversion/ptrmem9.C: New test.\n\nFrom-SVN: r130554", "tree": {"sha": "f21ad738b7b0305e3f87dff48b61d0d0961b1a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f21ad738b7b0305e3f87dff48b61d0d0961b1a69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867f133ec412ca7592f16b804b34aac9b82703f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867f133ec412ca7592f16b804b34aac9b82703f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867f133ec412ca7592f16b804b34aac9b82703f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867f133ec412ca7592f16b804b34aac9b82703f2/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c23ebce246998f20609482a675ac202f535c1676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23ebce246998f20609482a675ac202f535c1676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23ebce246998f20609482a675ac202f535c1676"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "494c98f418ada998e3ac011aff2c251cebfe9812", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=867f133ec412ca7592f16b804b34aac9b82703f2", "patch": "@@ -1,3 +1,9 @@\n+2007-12-01  Ollie Wild  <aaw@google.com>\n+\n+\tPR c++/8171\n+\t* typeck.c (build_binary_op): Add conversion of pointers to function\n+\tmembers appearing as operands to the equality operators.\n+\n 2007-11-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/34275"}, {"sha": "6a3405a6c364a98a8d7cfba1aefeb3af5bdaaecc", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=867f133ec412ca7592f16b804b34aac9b82703f2", "patch": "@@ -3394,9 +3394,9 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n \t}\n       else if (TYPE_PTRMEMFUNC_P (type1) && null_ptr_cst_p (op0))\n \treturn cp_build_binary_op (code, op1, op0);\n-      else if (TYPE_PTRMEMFUNC_P (type0) && TYPE_PTRMEMFUNC_P (type1)\n-\t       && same_type_p (type0, type1))\n+      else if (TYPE_PTRMEMFUNC_P (type0) && TYPE_PTRMEMFUNC_P (type1))\n \t{\n+\t  tree type;\n \t  /* E will be the final comparison.  */\n \t  tree e;\n \t  /* E1 and E2 are for scratch.  */\n@@ -3407,6 +3407,16 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n \t  tree delta0;\n \t  tree delta1;\n \n+\t  type = composite_pointer_type (type0, type1, op0, op1, \"comparison\");\n+\n+\t  if (!same_type_p (TREE_TYPE (op0), type))\n+\t    op0 = cp_convert_and_check (type, op0);\n+\t  if (!same_type_p (TREE_TYPE (op1), type))\n+\t    op1 = cp_convert_and_check (type, op1);\n+\n+\t  if (op0 == error_mark_node || op1 == error_mark_node)\n+\t    return error_mark_node;\n+\n \t  if (TREE_SIDE_EFFECTS (op0))\n \t    op0 = save_expr (op0);\n \t  if (TREE_SIDE_EFFECTS (op1))"}, {"sha": "272cba92c14a0ab9f3bf12ae9b6c3b6aee7ddeee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=867f133ec412ca7592f16b804b34aac9b82703f2", "patch": "@@ -1,3 +1,8 @@\n+2007-12-01  Ollie Wild  <aaw@google.com>\n+\n+\tPR c++/8171\n+\t* g++.dg/conversion/ptrmem9.C: New test.\n+\n 2007-11-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/34291"}, {"sha": "2ccd6837c4719ddd135ab4a93cdffaecc741c917", "filename": "gcc/testsuite/g++.dg/conversion/ptrmem9.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fptrmem9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867f133ec412ca7592f16b804b34aac9b82703f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fptrmem9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fptrmem9.C?ref=867f133ec412ca7592f16b804b34aac9b82703f2", "patch": "@@ -0,0 +1,26 @@\n+// Copyright (C) 2007 Free Software Foundation\n+// Contributed by Ollie Wild <aaw@google.com>\n+// { dg-do compile }\n+\n+// Test implicit conversion of pointers to member functions appearing as\n+// operands of the equality operators.\n+\n+struct B { };\n+\n+struct BV { };\n+\n+struct D : B, virtual BV { };\n+\n+struct C { };\n+\n+void f ()\n+{\n+  void (D::*pd) () = 0;\n+  void (B::*pb) () = 0;\n+  void (BV::*pbv) () = 0;\n+  void (C::*pc) () = 0;\n+\n+  pd == pb;\n+  pd == pbv;  // { dg-error \"\" }\n+  pd == pc;   // { dg-error \"\" }\n+}"}]}