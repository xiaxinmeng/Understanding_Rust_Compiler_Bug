{"sha": "59b31f0e2d187ebdb3d399661e22b28e4ebd8099", "node_id": "C_kwDOANBUbNoAKDU5YjMxZjBlMmQxODdlYmRiM2QzOTk2NjFlMjJiMjhlNGViZDgwOTk", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-02-09T05:14:43Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-02-09T09:14:35Z"}, "message": "ICE: QImode(not SImode) operand should be passed to gen_vec_initv16qiqi in ashlv16qi3.\n\nix86_expand_vector_init expects vals to be a parallel containing\nvalues of individual fields which should be either element mode of the\nvector mode, or a vector mode with the same element mode and smaller\nnumber of elements.\n\nBut in the expander ashlv16qi3, the second operand is SImode which\ncan't be directly passed to gen_vec_initv16qiqi.\n\ngcc/ChangeLog:\n\n\tPR target/104451\n\t* config/i386/sse.md (<insn><mode>3): lowpart_subreg\n\toperands[2] from SImode to QImode.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/104451\n\t* gcc.target/i386/pr104451.c: New test.", "tree": {"sha": "2c5f75ed7718e3de03be1a6bb0f36afd88c2527d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c5f75ed7718e3de03be1a6bb0f36afd88c2527d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59b31f0e2d187ebdb3d399661e22b28e4ebd8099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59b31f0e2d187ebdb3d399661e22b28e4ebd8099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59b31f0e2d187ebdb3d399661e22b28e4ebd8099", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59b31f0e2d187ebdb3d399661e22b28e4ebd8099/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "871afdc512be0510cbd4fa0928e5a1bd0681766e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/871afdc512be0510cbd4fa0928e5a1bd0681766e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/871afdc512be0510cbd4fa0928e5a1bd0681766e"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "36b35f68349252334191298c7fe8d183823429a7", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59b31f0e2d187ebdb3d399661e22b28e4ebd8099/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59b31f0e2d187ebdb3d399661e22b28e4ebd8099/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=59b31f0e2d187ebdb3d399661e22b28e4ebd8099", "patch": "@@ -24153,8 +24153,9 @@\n \t    negate = true;\n \t}\n       par = gen_rtx_PARALLEL (V16QImode, rtvec_alloc (16));\n+      tmp = lowpart_subreg (QImode, operands[2], SImode);\n       for (i = 0; i < 16; i++)\n-        XVECEXP (par, 0, i) = operands[2];\n+\tXVECEXP (par, 0, i) = tmp;\n \n       tmp = gen_reg_rtx (V16QImode);\n       emit_insn (gen_vec_initv16qiqi (tmp, par));"}, {"sha": "8b251ccf827c43ce0f75a0c3cf66e804c0c1aabe", "filename": "gcc/testsuite/gcc.target/i386/pr104451.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59b31f0e2d187ebdb3d399661e22b28e4ebd8099/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104451.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59b31f0e2d187ebdb3d399661e22b28e4ebd8099/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104451.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104451.c?ref=59b31f0e2d187ebdb3d399661e22b28e4ebd8099", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx2 -mxop -O\" } */\n+\n+typedef char __attribute__((__vector_size__ (16))) V;\n+typedef unsigned char __attribute__((__vector_size__ (16))) UV;\n+V v;\n+UV uv;\n+\n+V\n+foo (long c)\n+{\n+  return v << c;\n+}\n+\n+V\n+foo1 (long c)\n+{\n+  return v >> c;\n+}\n+\n+UV\n+foo2 (unsigned long uc)\n+{\n+  return uv >> uc;\n+}"}]}