{"sha": "eda38850a7980d78d966a39b58961349bea7c984", "node_id": "C_kwDOANBUbNoAKGVkYTM4ODUwYTc5ODBkNzhkOTY2YTM5YjU4OTYxMzQ5YmVhN2M5ODQ", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-02-01T11:19:27Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-02-01T11:19:27Z"}, "message": "libgomp.texi: Reverse-offload updates\n\nlibgomp/\n\t* libgomp.texi (5.0 Impl. Status): Update 'requires' and 'ancestor'.\n\t(GCN): Add item about 'omp requires'.\n\t(nvptx): Likewise; add item about reverse offload.", "tree": {"sha": "1e83b9259dd7fd4fe89af045b247ec02e933a189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e83b9259dd7fd4fe89af045b247ec02e933a189"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eda38850a7980d78d966a39b58961349bea7c984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda38850a7980d78d966a39b58961349bea7c984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda38850a7980d78d966a39b58961349bea7c984", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda38850a7980d78d966a39b58961349bea7c984/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cef9dca57ba70576dc387c40e600f00de5d55de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cef9dca57ba70576dc387c40e600f00de5d55de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cef9dca57ba70576dc387c40e600f00de5d55de"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "0aa653d3aceeb8faa06b44ce7183de515dde7557", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda38850a7980d78d966a39b58961349bea7c984/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda38850a7980d78d966a39b58961349bea7c984/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=eda38850a7980d78d966a39b58961349bea7c984", "patch": "@@ -192,8 +192,8 @@ The OpenMP 4.5 specification is fully supported.\n       env variable @tab Y @tab\n @item Nested-parallel changes to @emph{max-active-levels-var} ICV @tab Y @tab\n @item @code{requires} directive @tab P\n-      @tab complete but no non-host devices provides @code{unified_address},\n-      @code{unified_shared_memory} or @code{reverse_offload}\n+      @tab complete but no non-host devices provides @code{unified_address} or\n+      @code{unified_shared_memory}\n @item @code{teams} construct outside an enclosing target region @tab Y @tab\n @item Non-rectangular loop nests @tab P @tab Full support for C/C++, partial for Fortran\n @item @code{!=} as relational-op in canonical loop form for C/C++ @tab Y @tab\n@@ -228,7 +228,7 @@ The OpenMP 4.5 specification is fully supported.\n @item @code{allocate} clause @tab P @tab Initial support\n @item @code{use_device_addr} clause on @code{target data} @tab Y @tab\n @item @code{ancestor} modifier on @code{device} clause\n-      @tab Y @tab See comment for @code{requires}\n+      @tab Y @tab Host fallback with GCN devices\n @item Implicit declare target directive @tab Y @tab\n @item Discontiguous array section with @code{target update} construct\n       @tab N @tab\n@@ -288,7 +288,7 @@ The OpenMP 4.5 specification is fully supported.\n       @code{append_args} @tab N @tab\n @item @code{dispatch} construct @tab N @tab\n @item device-specific ICV settings with environment variables @tab Y @tab\n-@item @code{assume} directive @tab Y @tab\n+@item @code{assume} and @code{assumes} directives @tab Y @tab\n @item @code{nothing} directive @tab Y @tab\n @item @code{error} directive @tab Y @tab\n @item @code{masked} construct @tab Y @tab\n@@ -351,7 +351,7 @@ The OpenMP 4.5 specification is fully supported.\n to address of matching mapped list item per 5.1, Sect. 2.21.7.2 @tab N @tab\n @item For Fortran, diagnose placing declarative before/between @code{USE},\n       @code{IMPORT}, and @code{IMPLICIT} as invalid @tab N @tab\n-@item Optional comma beween directive and clause in the @code{#pragma} form @tab Y @tab\n+@item Optional comma between directive and clause in the @code{#pragma} form @tab Y @tab\n @item @code{indirect} clause in @code{declare target} @tab N @tab\n @item @code{device_type(nohost)}/@code{device_type(host)} for variables @tab N @tab\n @end multitable\n@@ -3956,7 +3956,7 @@ same context.\n @section First invocation: OpenACC library API\n \n In this second use case (see below), a function in the OpenACC library is\n-called prior to any of the functions in the CUBLAS library. More specificially,\n+called prior to any of the functions in the CUBLAS library. More specifically,\n the function @code{acc_set_device_num()}.\n \n In the use case presented here, the function @code{acc_set_device_num()}\n@@ -4456,6 +4456,9 @@ The implementation remark:\n @item I/O within OpenMP target regions and OpenACC parallel/kernels is supported\n       using the C library @code{printf} functions and the Fortran\n       @code{print}/@code{write} statements.\n+@item OpenMP code that has a requires directive with @code{unified_address},\n+      @code{unified_shared_memory} or @code{reverse_offload} will remove\n+      any GCN device from the list of available devices (``host fallback'').\n @end itemize\n \n \n@@ -4496,7 +4499,7 @@ which caches the JIT in the user's directory (see CUDA documentation; can be\n tuned by the environment variables @code{CUDA_CACHE_@{DISABLE,MAXSIZE,PATH@}}.\n \n Note: While PTX ISA is generic, the @code{-mptx=} and @code{-march=} commandline\n-options still affect the used PTX ISA code and, thus, the requirments on\n+options still affect the used PTX ISA code and, thus, the requirements on\n CUDA version and hardware.\n \n The implementation remark:\n@@ -4507,6 +4510,15 @@ The implementation remark:\n @item Compilation OpenMP code that contains @code{requires reverse_offload}\n       requires at least @code{-march=sm_35}, compiling for @code{-march=sm_30}\n       is not supported.\n+@item For code containing reverse offload (i.e. @code{target} regions with\n+      @code{device(ancestor:1)}), there is a slight performance penalty\n+      for @emph{all} target regions, consisting mostly of shutdown delay\n+      Per device, reverse offload regions are processed serially such that\n+      the next reverse offload region is only executed after the previous\n+      one returned.\n+@item OpenMP code that has a requires directive with @code{unified_address}\n+      or @code{unified_shared_memory} will remove any nvptx device from the\n+      list of available devices (``host fallback'').\n @end itemize\n \n "}]}