{"sha": "4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2OGU0Y2ZhMmUzNzIwNTI1ZTY4YjliNDI3N2NjMGJjY2U1YWM1Yw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-05-04T16:27:21Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-05-04T16:27:21Z"}, "message": "tm.texi (Target Hooks): Document TARGET_RESOLVE_OVERLOADED_BUILTIN.\n\n2005-05-04  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* doc/tm.texi (Target Hooks): Document\n\tTARGET_RESOLVE_OVERLOADED_BUILTIN.\n\nFrom-SVN: r99219", "tree": {"sha": "ac711ea0814240515bd708e37a106f0ca73bc984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac711ea0814240515bd708e37a106f0ca73bc984"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce4065374b97d6ee7309d3f38de5ee3f87c69b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4065374b97d6ee7309d3f38de5ee3f87c69b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4065374b97d6ee7309d3f38de5ee3f87c69b43"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "12872d86a2020cd145b763bff8a9b2f0fd6c2bb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c", "patch": "@@ -1,3 +1,8 @@\n+2005-05-04  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* doc/tm.texi (Target Hooks): Document\n+\tTARGET_RESOLVE_OVERLOADED_BUILTIN.\n+\n 2005-05-04  Paul Brook  <paul@codesourcery.com>\n \n \t* Makefile.in: Change dependencies on target.h to $(TARGET_H)."}, {"sha": "9e755aaf8af87d65476337adccb7c06bcace1a8b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=4268e4cfa2e3720525e68b9b4277cc0bcce5ac5c", "patch": "@@ -9489,6 +9489,18 @@ ignored.  This function should return the result of the call to the\n built-in function.\n @end deftypefn\n \n+@deftypefn {Target Hook} tree TARGET_RESOLVE_OVERLOADED_BUILTIN (tree @var{fndecl}, tree @var{arglist})\n+\n+Select a replacement for a machine specific built-in function that\n+was set up by @samp{TARGET_INIT_BUILTINS}.  This is done\n+@emph{before} regular type checking, and so allows the target to\n+implement a crude form of function overloading.  @var{fndecl} is the\n+declaration of the built-in function.  @var{arglist} is the list of\n+arguments passed to the built-in function.  The result is a\n+complete expression that implements the operation, usually\n+another @code{CALL_EXPR}.\n+@end deftypefn\n+\n @deftypefn {Target Hook} tree TARGET_FOLD_BUILTIN (tree @var{fndecl}, tree @var{arglist}, bool @var{ignore})\n \n Fold a call to a machine specific built-in function that was set up by"}]}