{"sha": "e6f58fb6196ba16ce070e3722451f040a13f963b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZmNThmYjYxOTZiYTE2Y2UwNzBlMzcyMjQ1MWYwNDBhMTNmOTYzYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-21T14:51:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-21T14:54:04Z"}, "message": "tree-optimization/97139 - fix BB SLP live lane extraction\n\nThis fixes SLP live lane extraction with pattern stmts.\n\n2020-09-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97139\n\t* tree-vect-slp.c (vect_bb_slp_mark_live_stmts): Only mark the\n\tpattern root, track visited vectorized stmts.\n\n\t* gcc.dg/vect/pr97139.c: New testcase.", "tree": {"sha": "5002dfc3bf0db9e8c32733172c4646345fba7eb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5002dfc3bf0db9e8c32733172c4646345fba7eb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6f58fb6196ba16ce070e3722451f040a13f963b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f58fb6196ba16ce070e3722451f040a13f963b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f58fb6196ba16ce070e3722451f040a13f963b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f58fb6196ba16ce070e3722451f040a13f963b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6ff694e592669e7865d39a884100dd677e7ceec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ff694e592669e7865d39a884100dd677e7ceec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ff694e592669e7865d39a884100dd677e7ceec"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "1b9f31c7db396e84cce9138585dee733dbc06ab8", "filename": "gcc/testsuite/gcc.dg/vect/pr97139.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f58fb6196ba16ce070e3722451f040a13f963b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f58fb6196ba16ce070e3722451f040a13f963b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97139.c?ref=e6f58fb6196ba16ce070e3722451f040a13f963b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include \"tree-vect.h\"\n+\n+int pix[4];\n+\n+int __attribute__((noipa)) foo (void)\n+{\n+  pix[0] = pix[0] / 4;\n+  pix[1] = pix[1] / 4;\n+  pix[2] = pix[2] / 4;\n+  pix[3] = pix[3] / 4;\n+  return pix[0] + pix[1] + pix[2] + pix[3];\n+}\n+\n+int main ()\n+{\n+  check_vect ();\n+\n+  pix[0] = 8;\n+  pix[1] = 16;\n+  pix[2] = 32;\n+  pix[3] = 64;\n+  if (foo () != 30)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c44fd396bf0b69a4153e46026c545bebb3797551", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f58fb6196ba16ce070e3722451f040a13f963b/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f58fb6196ba16ce070e3722451f040a13f963b/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=e6f58fb6196ba16ce070e3722451f040a13f963b", "patch": "@@ -3021,10 +3021,14 @@ vect_bb_slp_mark_live_stmts (bb_vec_info bb_vinfo, slp_tree node,\n   bool all_visited = true;\n   FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (node), i, stmt_info)\n     {\n-      stmt_vec_info orig_stmt_info = vect_orig_stmt (stmt_info);\n-      if (svisited.contains (orig_stmt_info))\n+      if (svisited.contains (stmt_info))\n \tcontinue;\n       all_visited = false;\n+      stmt_vec_info orig_stmt_info = vect_orig_stmt (stmt_info);\n+      if (STMT_VINFO_IN_PATTERN_P (orig_stmt_info)\n+\t  && STMT_VINFO_RELATED_STMT (orig_stmt_info) != stmt_info)\n+\t/* Only the pattern root stmt computes the original scalar value.  */\n+\tcontinue;\n       bool mark_visited = true;\n       gimple *orig_stmt = orig_stmt_info->stmt;\n       ssa_op_iter op_iter;\n@@ -3091,7 +3095,7 @@ vect_bb_slp_mark_live_stmts (bb_vec_info bb_vinfo, slp_tree node,\n \t\t}\n \t}\n       if (mark_visited)\n-\tsvisited.add (orig_stmt_info);\n+\tsvisited.add (stmt_info);\n     }\n   if (all_visited)\n     return;"}]}