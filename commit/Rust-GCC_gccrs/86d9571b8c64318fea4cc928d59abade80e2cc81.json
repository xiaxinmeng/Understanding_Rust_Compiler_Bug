{"sha": "86d9571b8c64318fea4cc928d59abade80e2cc81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkOTU3MWI4YzY0MzE4ZmVhNGNjOTI4ZDU5YWJhZGU4MGUyY2M4MQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-05-13T12:25:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-05-13T12:25:28Z"}, "message": "re PR rtl-optimization/20756 (Clobbers of deleted insns are processed, but left out)\n\n\tPR rtl-optimization/20756:\n\t* basic-block.h (PROP_DEAD_INSN): Define.\n\t* flow.c (propagate_one_insn): Set during mark_set_regs call\n\tfor a dead insn.\n\t(mark_set_1): Emit a clobber when we are about to delete a dead insn\n\tthat kills a live register.\n\nFrom-SVN: r99655", "tree": {"sha": "d0c2231c504647c3430df625b25f132830d3501f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0c2231c504647c3430df625b25f132830d3501f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86d9571b8c64318fea4cc928d59abade80e2cc81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d9571b8c64318fea4cc928d59abade80e2cc81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d9571b8c64318fea4cc928d59abade80e2cc81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d9571b8c64318fea4cc928d59abade80e2cc81/comments", "author": null, "committer": null, "parents": [{"sha": "a1aed706562a160e9d304a6806ce5ac70de89910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1aed706562a160e9d304a6806ce5ac70de89910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1aed706562a160e9d304a6806ce5ac70de89910"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "d11964b54809050693e0edc19a70e19cab67233e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d9571b8c64318fea4cc928d59abade80e2cc81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d9571b8c64318fea4cc928d59abade80e2cc81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86d9571b8c64318fea4cc928d59abade80e2cc81", "patch": "@@ -1,3 +1,12 @@\n+2005-05-13  J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\tPR rtl-optimization/20756:\n+\t* basic-block.h (PROP_DEAD_INSN): Define.\n+\t* flow.c (propagate_one_insn): Set during mark_set_regs call\n+\tfor a dead insn.\n+\t(mark_set_1): Emit a clobber when we are about to delete a dead insn\n+\tthat kills a live register.\n+\n 2005-05-13  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390.md: (\"DBL\"): New mode attribute."}, {"sha": "9eae74b4ad0fce3c86fbcf11246c1bdf32cd2147", "filename": "gcc/flow.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d9571b8c64318fea4cc928d59abade80e2cc81/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d9571b8c64318fea4cc928d59abade80e2cc81/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=86d9571b8c64318fea4cc928d59abade80e2cc81", "patch": "@@ -1692,8 +1692,12 @@ propagate_one_insn (struct propagate_block_info *pbi, rtx insn)\n \tfatal_insn (\"Attempt to delete prologue/epilogue insn:\", insn);\n \n       /* Record sets.  Do this even for dead instructions, since they\n-\t would have killed the values if they hadn't been deleted.  */\n+\t would have killed the values if they hadn't been deleted.  To\n+\t be consistent, we also have to emit a clobber when we delete\n+\t an insn that clobbers a live register.  */\n+      pbi->flags |= PROP_DEAD_INSN;\n       mark_set_regs (pbi, PATTERN (insn), insn);\n+      pbi->flags &= ~PROP_DEAD_INSN;\n \n       /* CC0 is now known to be dead.  Either this insn used it,\n \t in which case it doesn't anymore, or clobbered it,\n@@ -2960,6 +2964,8 @@ mark_set_1 (struct propagate_block_info *pbi, enum rtx_code code, rtx reg, rtx c\n \t\t  }\n \t\tCLEAR_REGNO_REG_SET (pbi->reg_live, i);\n \t      }\n+\t  if (flags & PROP_DEAD_INSN)\n+\t    emit_insn_after (gen_rtx_CLOBBER (VOIDmode, reg), insn);\n \t}\n     }\n   else if (REG_P (reg))"}]}