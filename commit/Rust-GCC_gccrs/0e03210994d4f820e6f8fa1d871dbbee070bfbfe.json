{"sha": "0e03210994d4f820e6f8fa1d871dbbee070bfbfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUwMzIxMDk5NGQ0ZjgyMGU2ZjhmYTFkODcxZGJiZWUwNzBiZmJmZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-23T02:03:14Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-23T02:03:14Z"}, "message": "(set_init_index): Handle and allow CONST_DECL.\n\n(build_c_cast): When making a CONSTRUCTOR for a union cast,\nspecify its type.\n\n(default_conversion): Implement -fallow-single-precision.\n\nFrom-SVN: r5424", "tree": {"sha": "add7ae013ff4913b89f5bd7ff3f63c5ef3680bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add7ae013ff4913b89f5bd7ff3f63c5ef3680bec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e03210994d4f820e6f8fa1d871dbbee070bfbfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e03210994d4f820e6f8fa1d871dbbee070bfbfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e03210994d4f820e6f8fa1d871dbbee070bfbfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e03210994d4f820e6f8fa1d871dbbee070bfbfe/comments", "author": null, "committer": null, "parents": [{"sha": "27f32a5400bc4949662ed57282bb33ec5d4d43db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f32a5400bc4949662ed57282bb33ec5d4d43db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f32a5400bc4949662ed57282bb33ec5d4d43db"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "4cdbc2cf01c6f1065b16cf88410728790a21a145", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e03210994d4f820e6f8fa1d871dbbee070bfbfe/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e03210994d4f820e6f8fa1d871dbbee070bfbfe/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=0e03210994d4f820e6f8fa1d871dbbee070bfbfe", "patch": "@@ -960,7 +960,8 @@ default_conversion (exp)\n \treturn convert (unsigned_type_node, exp);\n       return convert (integer_type_node, exp);\n     }\n-  if (flag_traditional && TYPE_MAIN_VARIANT (type) == float_type_node)\n+  if (flag_traditional && !flag_allow_single_precision\n+      && TYPE_MAIN_VARIANT (type) == float_type_node)\n     return convert (double_type_node, exp);\n   if (code == VOID_TYPE)\n     {\n@@ -4016,8 +4017,8 @@ build_c_cast (type, expr)\n \t    }\n \t  else\n \t    name = \"\";\n-\t  return digest_init (type, build_nt (CONSTRUCTOR, NULL_TREE,\n-\t\t\t\t\t      build_tree_list (field, value)),\n+\t  return digest_init (type, build (CONSTRUCTOR, type,\n+\t\t\t\t\t   build_tree_list (field, value)),\n \t\t\t      0, 0);\n \t}\n       error (\"cast to union type from type not present in union\");\n@@ -5824,6 +5825,20 @@ void\n set_init_index (first, last)\n      tree first, last;\n {\n+  while ((TREE_CODE (first) == NOP_EXPR\n+\t  || TREE_CODE (first) == CONVERT_EXPR\n+\t  || TREE_CODE (first) == NON_LVALUE_EXPR)\n+\t && (TYPE_MODE (TREE_TYPE (first))\n+\t     == TYPE_MODE (TREE_TYPE (TREE_OPERAND (first, 0)))))\n+    (first) = TREE_OPERAND (first, 0);\n+  if (last)\n+    while ((TREE_CODE (last) == NOP_EXPR\n+\t    || TREE_CODE (last) == CONVERT_EXPR\n+\t    || TREE_CODE (last) == NON_LVALUE_EXPR)\n+\t   && (TYPE_MODE (TREE_TYPE (last))\n+\t       == TYPE_MODE (TREE_TYPE (TREE_OPERAND (last, 0)))))\n+      (last) = TREE_OPERAND (last, 0);\n+\n   if (TREE_CODE (first) != INTEGER_CST)\n     error_init (\"nonconstant array index in initializer%s\", \" for `%s'\", NULL);\n   else if (last != 0 && TREE_CODE (last) != INTEGER_CST)"}]}