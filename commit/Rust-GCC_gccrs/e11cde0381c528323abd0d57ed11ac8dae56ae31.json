{"sha": "e11cde0381c528323abd0d57ed11ac8dae56ae31", "node_id": "C_kwDOANBUbNoAKGUxMWNkZTAzODFjNTI4MzIzYWJkMGQ1N2VkMTFhYzhkYWU1NmFlMzE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-01T00:17:38Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-01T00:17:38Z"}, "message": "Daily bump.", "tree": {"sha": "d8cdf4ae136a0e4110cc70cf1930de3e2c139408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8cdf4ae136a0e4110cc70cf1930de3e2c139408"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e11cde0381c528323abd0d57ed11ac8dae56ae31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11cde0381c528323abd0d57ed11ac8dae56ae31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11cde0381c528323abd0d57ed11ac8dae56ae31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11cde0381c528323abd0d57ed11ac8dae56ae31/comments", "author": null, "committer": null, "parents": [{"sha": "4969dcd2b7a94ce6c0d07225b21b5f3c040a4902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4969dcd2b7a94ce6c0d07225b21b5f3c040a4902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4969dcd2b7a94ce6c0d07225b21b5f3c040a4902"}], "stats": {"total": 140, "additions": 139, "deletions": 1}, "files": [{"sha": "6a6ff51cd0de81668a95837d4ae02f8a76b4dd9d", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11cde0381c528323abd0d57ed11ac8dae56ae31/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11cde0381c528323abd0d57ed11ac8dae56ae31/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=e11cde0381c528323abd0d57ed11ac8dae56ae31", "patch": "@@ -1,3 +1,12 @@\n+2023-03-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR bootstrap/101834\n+\t* Makefile.in (INSTALL): Set variable.\n+\t(mostlyclean): Mark as a phony target.\n+\t(clean): Add mostlyclean as a prerequisite.\n+\t(distclean): Add clean as a prerequisite and remove more files.\n+\t(maintainer-clean): Add distclean as a prerequisite.\n+\n 2023-01-09  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR other/107616"}, {"sha": "8b18bc99f4a64d4111429c5f933e4e775e91f7db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11cde0381c528323abd0d57ed11ac8dae56ae31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11cde0381c528323abd0d57ed11ac8dae56ae31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e11cde0381c528323abd0d57ed11ac8dae56ae31", "patch": "@@ -1,3 +1,78 @@\n+2023-03-31  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* lra-constraints.cc: (combine_reload_insn): New function.\n+\n+2023-03-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/91645\n+\t* range-op-float.cc (foperator_unordered_lt::fold_range,\n+\tfoperator_unordered_le::fold_range,\n+\tfoperator_unordered_gt::fold_range,\n+\tfoperator_unordered_ge::fold_range,\n+\tfoperator_unordered_equal::fold_range): Call the ordered\n+\tfold_range on ranges with cleared NaNs.\n+\t* value-query.cc (range_query::get_tree_range): Handle also\n+\tCOMPARISON_CLASS_P trees.\n+\n+2023-03-31  Kito Cheng  <kito.cheng@sifive.com>\n+\t    Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR target/109328\n+\t* config/riscv/t-riscv: Add missing dependencies.\n+\n+2023-03-31  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/i386.cc (inline_memory_move_cost): Return 100\n+\tfor MASK_REGS when MODE_SIZE > 8.\n+\n+2023-03-31  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/85048\n+\t* config/i386/i386-builtin.def (BDESC): Adjust icode name from\n+\tufloat/ufix to floatuns/fixuns.\n+\t* config/i386/i386-expand.cc\n+\t(ix86_expand_vector_convert_uns_vsivsf): Adjust comments.\n+\t* config/i386/sse.md\n+\t(ufloat<sseintvecmodelower><mode>2<mask_name><round_name>):\n+\tRenamed\tto ..\n+\t(<mask_codefor>floatuns<sseintvecmodelower><mode>2<mask_name><round_name>):.. this.\n+\t(<mask_codefor><avx512>_ufix_notrunc<sf2simodelower><mode><mask_name><round_name>):\n+\tRenamed to ..\n+\t(<mask_codefor><avx512>_fixuns_notrunc<sf2simodelower><mode><mask_name><round_name>):\n+\t.. this.\n+\t(<fixsuffix>fix_truncv16sfv16si2<mask_name><round_saeonly_name>):\n+\tRenamed to ..\n+\t(fix<fixunssuffix>_truncv16sfv16si2<mask_name><round_saeonly_name>):.. this.\n+\t(ufloat<si2dfmodelower><mode>2<mask_name>): Renamed to ..\n+\t(floatuns<si2dfmodelower><mode>2<mask_name>): .. this.\n+\t(ufloatv2siv2df2<mask_name>): Renamed to ..\n+\t(<mask_codefor>floatunsv2siv2df2<mask_name>): .. this.\n+\t(ufix_notrunc<mode><si2dfmodelower>2<mask_name><round_name>):\n+\tRenamed to ..\n+\t(fixuns_notrunc<mode><si2dfmodelower>2<mask_name><round_name>):\n+\t.. this.\n+\t(ufix_notruncv2dfv2si2): Renamed to ..\n+\t(fixuns_notruncv2dfv2si2):.. this.\n+\t(ufix_notruncv2dfv2si2_mask): Renamed to ..\n+\t(fixuns_notruncv2dfv2si2_mask): .. this.\n+\t(*ufix_notruncv2dfv2si2_mask_1): Renamed to ..\n+\t(*fixuns_notruncv2dfv2si2_mask_1): .. this.\n+\t(ufix_truncv2dfv2si2): Renamed to ..\n+\t(*fixuns_truncv2dfv2si2): .. this.\n+\t(ufix_truncv2dfv2si2_mask): Renamed to ..\n+\t(fixuns_truncv2dfv2si2_mask): .. this.\n+\t(*ufix_truncv2dfv2si2_mask_1): Renamed to ..\n+\t(*fixuns_truncv2dfv2si2_mask_1): .. this.\n+\t(ufix_truncv4dfv4si2<mask_name>): Renamed to ..\n+\t(fixuns_truncv4dfv4si2<mask_name>): .. this.\n+\t(ufix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>):\n+\tRenamed to ..\n+\t(fixuns_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>):\n+\t.. this.\n+\t(ufix_trunc<mode><sseintvecmodelower>2<mask_name>): Renamed to ..\n+\t(<mask_codefor>fixuns_trunc<mode><sseintvecmodelower>2<mask_name>):\n+\t.. this.\n+\n 2023-03-30  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/109154"}, {"sha": "7e68af43686037b12afb0dff7b2538a31a705495", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11cde0381c528323abd0d57ed11ac8dae56ae31/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11cde0381c528323abd0d57ed11ac8dae56ae31/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e11cde0381c528323abd0d57ed11ac8dae56ae31", "patch": "@@ -1 +1 @@\n-20230331\n+20230401"}, {"sha": "e48288a30820e2d016c67d65659ff8b25510e760", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11cde0381c528323abd0d57ed11ac8dae56ae31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11cde0381c528323abd0d57ed11ac8dae56ae31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e11cde0381c528323abd0d57ed11ac8dae56ae31", "patch": "@@ -1,3 +1,35 @@\n+2023-03-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR analyzer/107396\n+\t* gcc.dg/analyzer/pipe-glibc.c (read_from_pie, write_to_pipe): Exit\n+\tif fdopen returns NULL.\n+\n+2023-03-31  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* g++.dg/warn/Wstringop-overflow-4.C: Always check bogus message.\n+\t* gcc.dg/tree-ssa/pr23109.c: Disable better recomputations.\n+\n+2023-03-31  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/i386/pr109052-2.c: New.\n+\n+2023-03-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/91645\n+\t* gcc.target/i386/pr103559-1.c: New test.\n+\t* gcc.target/i386/pr103559-2.c: New test.\n+\t* gcc.target/i386/pr103559-3.c: New test.\n+\t* gcc.target/i386/pr103559-4.c: New test.\n+\n+2023-03-31  Jonathan Yong  <10walls@gmail.com>\n+\n+\t* c-c++-common/Warray-bounds.c: Fix excess warnings on\n+\tLLP64.\n+\n+2023-03-31  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* g++.target/i386/pr85048.C: New test.\n+\n 2023-03-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/105452"}, {"sha": "d4ba35e2dc9484ae590d214122f86f344f927bf5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11cde0381c528323abd0d57ed11ac8dae56ae31/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11cde0381c528323abd0d57ed11ac8dae56ae31/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e11cde0381c528323abd0d57ed11ac8dae56ae31", "patch": "@@ -1,3 +1,25 @@\n+2023-03-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR tree-optimization/107087\n+\t* include/bits/cow_string.h (basic_string::size()): Add\n+\toptimizer hint that _S_empty_rep()._M_length is always zero.\n+\t(basic_string::length()): Call size().\n+\n+2023-03-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/109339\n+\t* include/std/stop_token (_Stop_state_ptr(const stop_source&)):\n+\tAdd attribute access with access-mode 'none'.\n+\t* testsuite/30_threads/stop_token/stop_source/109339.cc: New test.\n+\n+2023-03-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/experimental/internet (ip::basic_endpoint::_M_if_v6):\n+\tRevert change from member function to data member. Fix for\n+\tconstant evaluation by detecting which union member is active.\n+\t(ip::basic_endpoint::resize): Revert changes to update _M_is_v6\n+\tflag.\n+\n 2023-03-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/109242"}]}