{"sha": "7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VkNzYwYzc5Mzk5YzJkMGEzNDA2ZjI4YzZmZDg1Zjk1YmY2MDk3Yw==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2018-12-03T15:42:51Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2018-12-03T15:42:51Z"}, "message": "re PR fortran/87919 (Incorrect fortran handling of -fno-* options)\n\n2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n            Mark Eggleston <mark.eggleston@codethink.co.uk>\n\n    PR fortran/87919\n\n    gcc/fortran/ChangeLog:\n\n\tPR fortran/87919\n\t* options.c (SET_FLAG, SET_BITFLAG, SET_BITFLAG2): New macros.\n\t(set_dec_flags): Set/unset DEC and std flags according to value.\n\t(set_init_local_zero): New helper for -finit-local-zero flag group.\n\t(gfc_init_options): Fix disabling of init flags, array temporaries\n\tcheck, and dec flags when value is zero (from -fno-*).\n\n    gcc/testsuite/ChangeLog:\n\n\tPR fortran/87919\n\t* gfortran.dg/array_temporaries_5.f90: New test.\n\t* gfortran.dg/dec_bitwise_ops_3.f90: Ditto.\n\t* gfortran.dg/dec_d_lines_3.f: Ditto.\n\t* gfortran.dg/dec_exp_4.f90: Ditto.\n\t* gfortran.dg/dec_exp_5.f90: Ditto.\n\t* gfortran.dg/dec_io_7.f90: Ditto.\n\t* gfortran.dg/dec_structure_24.f90: Ditto.\n\t* gfortran.dg/dec_structure_25.f90: Ditto.\n\t* gfortran.dg/dec_structure_26.f90: Ditto.\n\t* gfortran.dg/dec_structure_27.f90: Ditto.\n\t* gfortran.dg/dec_type_print_3.f90: Ditto.\n\t* gfortran.dg/init_flag_20.f90: Ditto.\n\n\nCo-Authored-By: Mark Eggleston <mark.eggleston@codethink.co.uk>\n\nFrom-SVN: r266745", "tree": {"sha": "65e401cb045d5ba626f4aeea61a1eb510b9ec1cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65e401cb045d5ba626f4aeea61a1eb510b9ec1cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "509f987074e247f84afbd37af0d13a9179870d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509f987074e247f84afbd37af0d13a9179870d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509f987074e247f84afbd37af0d13a9179870d74"}], "stats": {"total": 335, "additions": 322, "deletions": 13}, "files": [{"sha": "1101507bae1cc8de6d2a315d45f3de7e9bb6728e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -1,3 +1,13 @@\n+2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n+            Mark Eggleston <mark.eggleston@codethink.co.uk>\n+\n+\tPR fortran/87919\n+\t* options.c (SET_FLAG, SET_BITFLAG, SET_BITFLAG2): New macros.\n+\t(set_dec_flags): Set/unset DEC and std flags according to value.\n+\t(set_init_local_zero): New helper for -finit-local-zero flag group.\n+\t(gfc_init_options): Fix disabling of init flags, array temporaries\n+\tcheck, and dec flags when value is zero (from -fno-*).\n+\n 2018-11-30  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* gfortran.h (struct gfc_omp_clauses): Remove \"wait\".  Adjust all"}, {"sha": "b35bed3297401db7d5672e768917baffa3e64758", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 52, "deletions": 13, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -32,6 +32,20 @@ along with GCC; see the file COPYING3.  If not see\n \n gfc_option_t gfc_option;\n \n+#define SET_FLAG(flag, condition, on_value, off_value) \\\n+  do \\\n+    { \\\n+      if (condition) \\\n+\tflag = (on_value); \\\n+      else \\\n+\tflag = (off_value); \\\n+    } while (0)\n+\n+#define SET_BITFLAG2(m) m\n+\n+#define SET_BITFLAG(flag, condition, value) \\\n+  SET_BITFLAG2 (SET_FLAG (flag, condition, (flag | (value)), (flag & ~(value))))\n+\n \n /* Set flags that control warnings and errors for different\n    Fortran standards to their default values.  Keep in sync with\n@@ -47,30 +61,55 @@ set_default_std_flags (void)\n   gfc_option.warn_std = GFC_STD_F2018_DEL | GFC_STD_F95_DEL | GFC_STD_LEGACY;\n }\n \n-\n-/* Set all the DEC extension flags.  */\n+/* Set (or unset) the DEC extension flags.  */\n \n static void\n set_dec_flags (int value)\n {\n+  /* Set (or unset) other DEC compatibility extensions.  */\n+  SET_BITFLAG (flag_dollar_ok, value, value);\n+  SET_BITFLAG (flag_cray_pointer, value, value);\n+  SET_BITFLAG (flag_dec_structure, value, value);\n+  SET_BITFLAG (flag_dec_intrinsic_ints, value, value);\n+  SET_BITFLAG (flag_dec_static, value, value);\n+  SET_BITFLAG (flag_dec_math, value, value);\n+  SET_BITFLAG (flag_dec_include, value, value);\n+}\n+\n+/* Finalize DEC flags.  */\n+\n+static void\n+post_dec_flags (int value)\n+{\n+  /* Don't warn for legacy code if -fdec is given; however, setting -fno-dec\n+     does not force these warnings.  We make one final determination on this\n+     at the end because -std= is always set first; thus, we can avoid\n+     clobbering the user's desired standard settings in gfc_handle_option\n+     e.g. when -fdec and -fno-dec are both given.  */\n   if (value)\n     {\n-      /* Allow legacy code without warnings.  */\n       gfc_option.allow_std |= GFC_STD_F95_OBS | GFC_STD_F95_DEL\n-        | GFC_STD_GNU | GFC_STD_LEGACY;\n+\t| GFC_STD_GNU | GFC_STD_LEGACY;\n       gfc_option.warn_std &= ~(GFC_STD_LEGACY | GFC_STD_F95_DEL);\n     }\n-\n-  /* Set other DEC compatibility extensions.  */\n-  flag_dollar_ok |= value;\n-  flag_cray_pointer |= value;\n-  flag_dec_structure |= value;\n-  flag_dec_intrinsic_ints |= value;\n-  flag_dec_static |= value;\n-  flag_dec_math |= value;\n-  flag_dec_include |= value;\n }\n \n+/* Enable (or disable) -finit-local-zero.  */\n+\n+static void\n+set_init_local_zero (int value)\n+{\n+  gfc_option.flag_init_integer_value = 0;\n+  gfc_option.flag_init_character_value = (char)0;\n+\n+  SET_FLAG (gfc_option.flag_init_integer, value, GFC_INIT_INTEGER_ON,\n+\t    GFC_INIT_INTEGER_OFF);\n+  SET_FLAG (gfc_option.flag_init_logical, value, GFC_INIT_LOGICAL_FALSE,\n+\t    GFC_INIT_LOGICAL_OFF);\n+  SET_FLAG (gfc_option.flag_init_character, value, GFC_INIT_CHARACTER_ON,\n+\t    GFC_INIT_CHARACTER_OFF);\n+  SET_FLAG (flag_init_real, value, GFC_INIT_REAL_ZERO, GFC_INIT_REAL_OFF);\n+}\n \n /* Return language mask for Fortran options.  */\n "}, {"sha": "fdb6f8b75cab449a5d70b9124cd2992b24929774", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -1,3 +1,20 @@\n+2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n+            Mark Eggleston <mark.eggleston@codethink.co.uk>\n+\n+\tPR fortran/87919\n+\t* gfortran.dg/array_temporaries_5.f90: New test.\n+\t* gfortran.dg/dec_bitwise_ops_3.f90: Ditto.\n+\t* gfortran.dg/dec_d_lines_3.f: Ditto.\n+\t* gfortran.dg/dec_exp_4.f90: Ditto.\n+\t* gfortran.dg/dec_exp_5.f90: Ditto.\n+\t* gfortran.dg/dec_io_7.f90: Ditto.\n+\t* gfortran.dg/dec_structure_24.f90: Ditto.\n+\t* gfortran.dg/dec_structure_25.f90: Ditto.\n+\t* gfortran.dg/dec_structure_26.f90: Ditto.\n+\t* gfortran.dg/dec_structure_27.f90: Ditto.\n+\t* gfortran.dg/dec_type_print_3.f90: Ditto.\n+\t* gfortran.dg/init_flag_20.f90: Ditto.\n+\n 2018-12-03  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/pr59963-2.c: Make testnames unique."}, {"sha": "dd147ba38ed60908be71d3472e0c4e0796ef9947", "filename": "gcc/testsuite/gfortran.dg/array_temporaries_5.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_temporaries_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_temporaries_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_temporaries_5.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck-array-temporaries -fno-check-array-temporaries\" }\n+!\n+! PR fortran/87919\n+!\n+! Ensure -fno-check-array-temporaries disables array temporary checking.\n+!\n+\n+! Note that 'include' drops the dg-output check from the original test case.\n+include 'array_temporaries_2.f90'"}, {"sha": "c28cf81fc042c1d80eaec65eaf0bc48601e4b046", "filename": "gcc/testsuite/gfortran.dg/dec_bitwise_ops_3.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_bitwise_ops_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_bitwise_ops_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_bitwise_ops_3.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-std=legacy -fdec -fno-dec\" }\n+!\n+! PR fortran/87919\n+!\n+! Make sure -fno-dec disables bitwise ops and check for the right errors.\n+! -std=legacy is added to avoid the .XOR. extension warning.\n+!\n+\n+include 'dec_bitwise_ops_1.f90'\n+\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 33 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 34 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 35 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 46 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 47 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 48 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 59 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 60 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 61 }\n+! { dg-error \"Operand of .not. operator\" \" \" { target *-*-* } 72 }\n+! { dg-error \"Operand of .not. operator\" \" \" { target *-*-* } 73 }\n+! { dg-error \"Operand of .not. operator\" \" \" { target *-*-* } 74 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 85 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 86 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 87 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 98 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 99 }\n+! { dg-error \"Operands of logical operator\" \" \" { target *-*-* } 100 }"}, {"sha": "2df4341c0e483c514ecf57a7fce432b326e53053", "filename": "gcc/testsuite/gfortran.dg/dec_d_lines_3.f", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_d_lines_3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_d_lines_3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_d_lines_3.f?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-ffixed-form -fdec -fno-dec\" }\n+!\n+! PR fortran/87919\n+!\n+! Ensure -fno-dec disables -fdec, leaving d-lines as code by default.\n+!\n+\n+include 'dec_d_lines_2.f'\n+\n+! { dg-error \"character in statement label\" \" \" { target *-*-*} 6 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-*} 6 }\n+! { dg-error \"character in statement label\" \" \" { target *-*-*} 7 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-*} 7 }"}, {"sha": "9d8b10db6a71fdb52db2917a33f1515a44107c4a", "filename": "gcc/testsuite/gfortran.dg/dec_exp_4.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_4.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec -fno-dec\" }\n+!\n+! PR fortran/87919\n+!\n+! Make sure -fno-dec disables -fdec as with dec_exp_2.\n+!\n+\n+include 'dec_exp_2.f90'\n+\n+! { dg-error \"Missing exponent\" \"\" { target *-*-* } 9 }\n+! { dg-error \"Missing exponent\" \"\" { target *-*-* } 11 }"}, {"sha": "faf3a9b306bacb2ca412e0ef40e020e53c51109b", "filename": "gcc/testsuite/gfortran.dg/dec_exp_5.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_5.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run \"xfail *-*-*\" }\n+! { dg-options \"-fdec -fno-dec\" }\n+!\n+! PR fortran/87919\n+!\n+! Make sure -fno-dec disables -fdec as with dec_exp_3.\n+!\n+\n+include 'dec_exp_3.f90'\n+\n+! { XFAIL \"Bad real number\" \"\" { target *-*-* } 13 }"}, {"sha": "4a931c15fe79197553418a500d738dd490ae9a49", "filename": "gcc/testsuite/gfortran.dg/dec_io_7.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_io_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_io_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_io_7.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec -fno-dec\" }\n+!\n+! PR fortran/87919\n+!\n+! Make sure -fno-dec rejects -fdec I/O specifiers as with dec_io_1.\n+!\n+\n+include 'dec_io_1.f90'\n+\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 12 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 24 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 58 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 64 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 68 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 74 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 78 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 84 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 90 }\n+! { dg-error \"is a DEC extension\" \"\" { target *-*-* } 96 }"}, {"sha": "02842b315dceabd1f764165ab8ff966f7f0d4a92", "filename": "gcc/testsuite/gfortran.dg/dec_structure_24.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_24.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+!\n+! PR fortran/87919\n+!\n+! Should fail to compile without the -fdec or -fdec-structure options.\n+!\n+! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n+\n+include 'dec_structure_1.f90'\n+\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 19 }\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 21 }\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 22 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 25 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 26 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 27 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 28 }\n+! { dg-error \"is not a variable\" \" \" { target *-*-* } 30 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 32 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 34 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 36 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 38 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 40 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 42 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 44 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 46 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 48 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 50 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 52 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 54 }\n+! { dg-error \"function result\" \" \" { target *-*-* } 29 }"}, {"sha": "a64d85a88a473ac9dad043197762b37a85633ff7", "filename": "gcc/testsuite/gfortran.dg/dec_structure_25.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_25.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_25.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_25.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! PR fortran/87919\n+!\n+! Should compile and run with the -fdec option.\n+!\n+! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n+!\n+\n+include 'dec_structure_1.f90'"}, {"sha": "7829103b995235eb02e0ff13fa867df8449d665c", "filename": "gcc/testsuite/gfortran.dg/dec_structure_26.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_26.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec -fno-dec-structure\" }\n+!\n+! PR fortran/87919\n+!\n+! Should fail to compile with -fdec and -fno-dec-structure.\n+!\n+! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n+!\n+\n+include 'dec_structure_1.f90'\n+\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 19 }\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 21 }\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 22 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 25 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 26 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 27 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 28 }\n+! { dg-error \"is not a variable\" \" \" { target *-*-* } 30 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 32 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 34 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 36 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 38 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 40 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 42 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 44 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 46 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 48 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 50 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 52 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 54 }\n+! { dg-error \"function result\" \" \" { target *-*-* } 29 }"}, {"sha": "1257365deb86d791cc8b8cdda4110d38ef577f80", "filename": "gcc/testsuite/gfortran.dg/dec_structure_27.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_27.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec-structure -fno-dec-structure\" }\n+!\n+! PR fortran/87919\n+!\n+! Should fail to compile with -fdec-structure and -fno-dec-structure.\n+!\n+! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n+!\n+\n+include 'dec_structure_1.f90'\n+\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 19 }\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 21 }\n+! { dg-error \"-fdec-structure\" \" \" { target *-*-* } 22 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 25 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 26 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 27 }\n+! { dg-error \"Unclassifiable statement\" \" \" { target *-*-* } 28 }\n+! { dg-error \"is not a variable\" \" \" { target *-*-* } 30 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 32 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 34 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 36 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 38 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 40 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 42 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 44 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 46 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 48 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 50 }\n+! { dg-error \"Bad character\" \" \" { target *-*-* } 52 }\n+! { dg-error \"Expecting END PROGRAM\" \" \" { target *-*-* } 54 }\n+! { dg-error \"function result\" \" \" { target *-*-* } 29 }"}, {"sha": "f766bdf0022383967d6fcd60658576f055b406cf", "filename": "gcc/testsuite/gfortran.dg/dec_type_print_3.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_type_print_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_type_print_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_type_print_3.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec -fno-dec\" }\n+!\n+! PR fortran/87919\n+!\n+! Ensure that -fno-dec disables the usage of TYPE as an alias for PRINT.\n+!\n+\n+include 'dec_type_print.f90'\n+\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 52 }\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 53 }\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 54 }\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 55 }\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 56 }\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 57 }\n+! { dg-error \"Invalid character in name\" \"\" { target *-*-* } 58 }\n+! { dg-error \"Unclassifiable statement\" \"\" { target *-*-* } 59 }\n+! { dg-error \"conflicts with PROCEDURE\" \"\" { target *-*-* } 60 }\n+! { dg-error \"Cannot assign to a named constant\" \"\" { target *-*-* } 80 }\n+"}, {"sha": "6f15c1ace0dedd3fff942cd535175a88a67e8de9", "filename": "gcc/testsuite/gfortran.dg/init_flag_20.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed760c79399c2d0a3406f28c6fd85f95bf6097c/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finit_flag_20.f90?ref=7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-fbackslash -finit-local-zero -fno-init-local-zero -fdump-tree-original\" }\n+!\n+! PR fortran/87919\n+!\n+! Make sure -fno-init-local-zero disables -finit-local-zero.\n+!\n+\n+include 'init_flag_1.f90'\n+\n+! Make sure no initialization code is generated.\n+! { dg-final { scan-tree-dump-times \"r\\[1-4] *= *\\[0\\{]\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"l\\[12] *= *\\[0\\{]\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"i\\[1-4] *= *\\[0\\{]\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"memmove *\\[(]\\[^,]*c\\[1-4]\" 0 \"original\" } }"}]}