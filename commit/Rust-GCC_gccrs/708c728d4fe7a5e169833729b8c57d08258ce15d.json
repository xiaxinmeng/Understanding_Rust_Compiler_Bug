{"sha": "708c728d4fe7a5e169833729b8c57d08258ce15d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA4YzcyOGQ0ZmU3YTVlMTY5ODMzNzI5YjhjNTdkMDgyNThjZTE1ZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-09-24T17:20:58Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-09-24T17:20:58Z"}, "message": "i386: Insert ENDBR before the profiling counter call\n\nENDBR must be the first instruction of a function.  This patch queues\nENDBR if we need to put the profiling counter call before the prologue\nand generate ENDBR before the profiling counter call.\n\ngcc/\n\n\tPR target/82699\n\t* config/i386/i386.c (rest_of_insert_endbranch): Set\n\tendbr_queued_at_entrance to true and don't insert ENDBR if\n\tx86_function_profiler will be called.\n\t(x86_function_profiler): Insert ENDBR if endbr_queued_at_entrance\n\tis true.\n\t* config/i386/i386.h (machine_function): Add\n\tendbr_queued_at_entrance.\n\ngcc/testsuite/\n\n\tPR target/82699\n\t* gcc.target/i386/pr82699-1.c: New file.\n\t* gcc.target/i386/pr82699-2.c: Likewise.\n\t* gcc.target/i386/pr82699-3.c: Likewise.\n\t* gcc.target/i386/pr82699-4.c: Likewise.\n\t* gcc.target/i386/pr82699-5.c: Likewise.\n\t* gcc.target/i386/pr82699-6.c: Likewise.\n\nFrom-SVN: r264540", "tree": {"sha": "cc14a50725b71deb8e2c9e1582ed5578b1338180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc14a50725b71deb8e2c9e1582ed5578b1338180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/708c728d4fe7a5e169833729b8c57d08258ce15d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708c728d4fe7a5e169833729b8c57d08258ce15d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/708c728d4fe7a5e169833729b8c57d08258ce15d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708c728d4fe7a5e169833729b8c57d08258ce15d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c109362313623d83fe0a5194bceaf994cf0c6ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c109362313623d83fe0a5194bceaf994cf0c6ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c109362313623d83fe0a5194bceaf994cf0c6ce0"}], "stats": {"total": 108, "additions": 104, "deletions": 4}, "files": [{"sha": "b3d14b95530d82fae355d4b5ee508e2757bbd958", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -1,3 +1,14 @@\n+2018-09-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/82699\n+\t* config/i386/i386.c (rest_of_insert_endbranch): Set\n+\tendbr_queued_at_entrance to true and don't insert ENDBR if\n+\tx86_function_profiler will be called.\n+\t(x86_function_profiler): Insert ENDBR if endbr_queued_at_entrance\n+\tis true.\n+\t* config/i386/i386.h (machine_function): Add\n+\tendbr_queued_at_entrance.\n+\n 2018-09-24  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* genattrtab.c (mk_attr_alt): Use alternative_mask."}, {"sha": "052ca63e4604f9fabe35a7386889e3267d81e24a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -2593,11 +2593,17 @@ rest_of_insert_endbranch (void)\n \t\t\t TYPE_ATTRIBUTES (TREE_TYPE (cfun->decl)))\n       && !cgraph_node::get (cfun->decl)->only_called_directly_p ())\n     {\n-      cet_eb = gen_nop_endbr ();\n+      /* Queue ENDBR insertion to x86_function_profiler.  */\n+      if (crtl->profile && flag_fentry)\n+\tcfun->machine->endbr_queued_at_entrance = true;\n+      else\n+\t{\n+\t  cet_eb = gen_nop_endbr ();\n \n-      bb = ENTRY_BLOCK_PTR_FOR_FN (cfun)->next_bb;\n-      insn = BB_HEAD (bb);\n-      emit_insn_before (cet_eb, insn);\n+\t  bb = ENTRY_BLOCK_PTR_FOR_FN (cfun)->next_bb;\n+\t  insn = BB_HEAD (bb);\n+\t  emit_insn_before (cet_eb, insn);\n+\t}\n     }\n \n   bb = 0;\n@@ -41203,6 +41209,10 @@ x86_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n {\n   const char *mcount_name = (flag_fentry ? MCOUNT_NAME_BEFORE_PROLOGUE\n \t\t\t\t\t : MCOUNT_NAME);\n+\n+  if (cfun->machine->endbr_queued_at_entrance)\n+    fprintf (file, \"\\t%s\\n\", TARGET_64BIT ? \"endbr64\" : \"endbr32\");\n+\n   if (TARGET_64BIT)\n     {\n #ifndef NO_PROFILE_COUNTERS"}, {"sha": "e77dac7ef3888db3d79decab0ec4d83e8fa1ed27", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -2747,6 +2747,9 @@ struct GTY(()) machine_function {\n   /* Nonzero if the function places outgoing arguments on stack.  */\n   BOOL_BITFIELD outgoing_args_on_stack : 1;\n \n+  /* If true, ENDBR is queued at function entrance.  */\n+  BOOL_BITFIELD endbr_queued_at_entrance : 1;\n+\n   /* The largest alignment, in bytes, of stack slot actually used.  */\n   unsigned int max_used_stack_alignment;\n "}, {"sha": "b98b6ebf79b5e7a6044ac88efbafa9686508477c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -1,3 +1,13 @@\n+2018-09-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/82699\n+\t* gcc.target/i386/pr82699-1.c: New file.\n+\t* gcc.target/i386/pr82699-2.c: Likewise.\n+\t* gcc.target/i386/pr82699-3.c: Likewise.\n+\t* gcc.target/i386/pr82699-4.c: Likewise.\n+\t* gcc.target/i386/pr82699-5.c: Likewise.\n+\t* gcc.target/i386/pr82699-6.c: Likewise.\n+\n 2018-09-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/87401"}, {"sha": "272d0797ff8f08eace8e7f52811ae77e289d4f5e", "filename": "gcc/testsuite/gcc.target/i386/pr82699-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-1.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fno-pic -fcf-protection -pg -fasynchronous-unwind-tables\" } */\n+/* { dg-final { scan-assembler-times {\\t\\.cfi_startproc\\n\\tendbr} 1 } } */\n+\n+extern int bar (int);\n+\n+int\n+foo (int i)\n+{\n+  return bar (i);\n+}"}, {"sha": "07a4ccbdbf48746e1954037d911b08371bab71f1", "filename": "gcc/testsuite/gcc.target/i386/pr82699-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-2.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fno-pic -fcf-protection -pg -mfentry -fasynchronous-unwind-tables\" } */\n+/* { dg-final { scan-assembler-times {\\t\\.cfi_startproc\\n\\tendbr} 1 } } */\n+\n+extern int bar (int);\n+\n+int\n+foo (int i)\n+{\n+  return bar (i);\n+}"}, {"sha": "08fa0e7fa5ced08f714db2c35acd728e00d0ff27", "filename": "gcc/testsuite/gcc.target/i386/pr82699-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-3.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fpic -fcf-protection -pg -fasynchronous-unwind-tables\" } */\n+/* { dg-final { scan-assembler-times {\\t\\.cfi_startproc\\n\\tendbr} 1 } } */\n+\n+extern int bar (int);\n+\n+int\n+foo (int i)\n+{\n+  return bar (i);\n+}"}, {"sha": "3cc03dbf13e7d798e223a9f8dbe0c1b55c442716", "filename": "gcc/testsuite/gcc.target/i386/pr82699-4.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-4.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target { *-*-linux* && { ! ia32 } } } } */\n+/* { dg-options \"-O2 -fpic -fcf-protection -pg -mfentry -fasynchronous-unwind-tables\" } */\n+/* { dg-final { scan-assembler-times {\\t\\.cfi_startproc\\n\\tendbr} 1 } } */\n+\n+extern int bar (int);\n+\n+int\n+foo (int i)\n+{\n+  return bar (i);\n+}"}, {"sha": "e0fe0188d56a1d1ba3eb99b0f63d3ecad7be0795", "filename": "gcc/testsuite/gcc.target/i386/pr82699-5.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-5.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fcf-protection -mfentry -fasynchronous-unwind-tables\" } */\n+/* { dg-final { scan-assembler-times {\\t\\.cfi_startproc\\n\\tendbr} 1 } } */\n+\n+extern int bar (int);\n+\n+int\n+foo (int i)\n+{\n+  return bar (i);\n+}"}, {"sha": "cacf0ab3db2265bd1687962a142ec57af5c007a6", "filename": "gcc/testsuite/gcc.target/i386/pr82699-6.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708c728d4fe7a5e169833729b8c57d08258ce15d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82699-6.c?ref=708c728d4fe7a5e169833729b8c57d08258ce15d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fcf-protection -pg -mfentry -mrecord-mcount -mnop-mcount -fasynchronous-unwind-tables\" } */\n+/* { dg-final { scan-assembler-times {\\t\\.cfi_startproc\\n\\tendbr} 1 } } */\n+\n+extern int bar (int);\n+\n+int\n+foo (int i)\n+{\n+  return bar (i);\n+}"}]}