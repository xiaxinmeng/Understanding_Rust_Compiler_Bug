{"sha": "46dfa8ad6c18feb45d35734eae38798edb7c38cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZkZmE4YWQ2YzE4ZmViNDVkMzU3MzRlYWUzODc5OGVkYjdjMzhjZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-11T11:16:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-11T11:16:54Z"}, "message": "re PR tree-optimization/90387 (__builtin_constant_p and -Warray-bounds warnings)\n\n2019-09-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90387\n\t* vr-values.c (vr_values::extract_range_basic): After inlining\n\tsimplify non-constant __builtin_constant_p to false.\n\n\t* gcc.dg/Warray-bounds-44.c: New testcase.\n\nFrom-SVN: r275639", "tree": {"sha": "827937264473170139a5e038754a1bbde166a92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/827937264473170139a5e038754a1bbde166a92c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46dfa8ad6c18feb45d35734eae38798edb7c38cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dfa8ad6c18feb45d35734eae38798edb7c38cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46dfa8ad6c18feb45d35734eae38798edb7c38cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dfa8ad6c18feb45d35734eae38798edb7c38cd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a237a94c206b53eb73baad2d75fbcca518df65e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a237a94c206b53eb73baad2d75fbcca518df65e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a237a94c206b53eb73baad2d75fbcca518df65e"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "21c247b88779815d2ad8bb9413a13529f41e2568", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46dfa8ad6c18feb45d35734eae38798edb7c38cd", "patch": "@@ -1,3 +1,9 @@\n+2019-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90387\n+\t* vr-values.c (vr_values::extract_range_basic): After inlining\n+\tsimplify non-constant __builtin_constant_p to false.\n+\n 2019-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/89795"}, {"sha": "940be7f8e2f83d886825d4fe40d8d224ab30f1a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46dfa8ad6c18feb45d35734eae38798edb7c38cd", "patch": "@@ -1,3 +1,8 @@\n+2019-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90387\n+\t* gcc.dg/Warray-bounds-44.c: New testcase.\n+\n 2019-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.target/sparc/20161111-1.c: XFAIL redundant zero-extension test."}, {"sha": "709d0046b8c55ae0a35df7409470dd077037f5c1", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-44.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-44.c?ref=46dfa8ad6c18feb45d35734eae38798edb7c38cd", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Warray-bounds\" } */\n+\n+int foo(unsigned int state, unsigned char * p, unsigned int p_len)\n+{\n+    static char const pattern[] = \"abcd\";\n+    static unsigned const pattern_length = sizeof(pattern) - 1;\n+\n+    if (p_len == 1) {\n+        return state;\n+    }\n+\n+    if (state < pattern_length &&\n+        p_len == (pattern_length - state) &&\n+\t(!__builtin_constant_p(p_len) ?\n+         __builtin_memcmp(p, pattern + state, p_len) :\n+         ((unsigned char*)p)[6] == ((unsigned char*)pattern + state)[6] /* { dg-bogus \"array bounds\" } */\n+        )) {\n+\n+        return 4;\n+    }\n+    return 1;\n+}"}, {"sha": "0ebb6e3bbd42964f127e173dd4ea8bdb380e0577", "filename": "gcc/vr-values.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dfa8ad6c18feb45d35734eae38798edb7c38cd/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=46dfa8ad6c18feb45d35734eae38798edb7c38cd", "patch": "@@ -1124,15 +1124,8 @@ vr_values::extract_range_basic (value_range *vr, gimple *stmt)\n       switch (cfn)\n \t{\n \tcase CFN_BUILT_IN_CONSTANT_P:\n-\t  /* If the call is __builtin_constant_p and the argument is a\n-\t     function parameter resolve it to false.  This avoids bogus\n-\t     array bound warnings.\n-\t     ???  We could do this as early as inlining is finished.  */\n-\t  arg = gimple_call_arg (stmt, 0);\n-\t  if (TREE_CODE (arg) == SSA_NAME\n-\t      && SSA_NAME_IS_DEFAULT_DEF (arg)\n-\t      && TREE_CODE (SSA_NAME_VAR (arg)) == PARM_DECL\n-\t      && cfun->after_inlining)\n+\t  /* Resolve calls to __builtin_constant_p after inlining.  */\n+\t  if (cfun->after_inlining)\n \t    {\n \t      vr->set_zero (type);\n \t      vr->equiv_clear ();"}]}