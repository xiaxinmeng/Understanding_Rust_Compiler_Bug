{"sha": "7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1YjYyYjBjNzUxZGUzODZiYzRmYWY4NjQ4NTAzYjQ4ZDFkM2M5Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:38:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:38:48Z"}, "message": "[multiple changes]\n\n2014-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Await_Compile): Remove loop that was only needed\n\tfor VMS.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* a-calcon.ads, a-direct.adb, a-dirval-mingw.adb, a-dirval.adb,\n\ta-dirval.ads, a-except-2005.adb, a-excpol-abort.adb,\n\ta-numaux-darwin.ads, a-numaux.ads, bindgen.adb, bindusg.adb,\n\teinfo.adb, einfo.ads, err_vars.ads, errout.ads, errutil.adb,\n\texp_ch3.adb, exp_ch4.adb, exp_ch7.adb, exp_ch7.ads, fname-uf.adb,\n\tfname.adb, fname.ads, freeze.adb, g-debpoo.adb, g-dirope.ads,\n\tg-excact.ads, g-expect.ads, g-socket.adb, g-socket.ads, g-sothco.ads,\n\tg-traceb.ads, gnat_rm.texi, gnatlink.adb, gnatls.adb, i-cstrea.adb,\n\tkrunch.adb, krunch.ads, layout.adb, lib-util.adb, make.adb,\n\tmlib.adb, osint-b.adb, osint-b.ads, osint-c.adb, osint.adb,\n\tosint.ads, output.ads, par.adb, prj-conf.adb, prj-env.adb,\n\tprj-makr.adb, prj-nmsc.adb, prj.adb, prj.ads, repinfo.adb, rtsfind.adb,\n\trtsfind.ads, s-excmac-gcc.ads, s-fatgen.adb, s-mastop.ads,\n\ts-parame-ae653.ads, s-parame-hpux.ads, s-parame-vxworks.ads,\n\ts-parame.ads, s-soflin.ads, s-stoele.adb, s-tasini.adb,\n\ts-taspri-dummy.ads, s-taspri-hpux-dce.ads, s-taspri-mingw.ads,\n\ts-taspri-posix-noaltstack.ads, s-taspri-posix.ads,\n\ts-taspri-solaris.ads, s-taspri-vxworks.ads, s-trasym.ads,\n\tsem_ch12.adb, sem_ch4.adb, sem_eval.adb, sem_intr.adb, sem_mech.adb,\n\tsem_mech.ads, sem_prag.adb, sem_res.adb, sem_util.adb, sem_util.ads,\n\tsinfo.adb, sinfo.ads, sinput-c.adb, symbols.ads, targparm.adb,\n\ttreepr.adb, types.ads, xr_tabls.adb, xr_tabls.ads: Remove VMS\n\tspecific code and comments.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): New procedure\n\tCheck_Reverse_Iteration, to verify the legality of the Reverse\n\tindicator on various container types, and to detect illegal\n\treverse iterations on containers that only supoort forward\n\titeration.\n\nFrom-SVN: r213431", "tree": {"sha": "f82c18553ae17d64cbb6e00de68fc79cfbdbd657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82c18553ae17d64cbb6e00de68fc79cfbdbd657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/comments", "author": null, "committer": null, "parents": [{"sha": "935a9145c69ce92e228e32427d91044407118eea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935a9145c69ce92e228e32427d91044407118eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935a9145c69ce92e228e32427d91044407118eea"}], "stats": {"total": 1839, "additions": 514, "deletions": 1325}, "files": [{"sha": "8da2165e6ec9b2aadeb3d57152c9aac9526877d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1,3 +1,42 @@\n+2014-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Await_Compile): Remove loop that was only needed\n+\tfor VMS.\n+\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-calcon.ads, a-direct.adb, a-dirval-mingw.adb, a-dirval.adb,\n+\ta-dirval.ads, a-except-2005.adb, a-excpol-abort.adb,\n+\ta-numaux-darwin.ads, a-numaux.ads, bindgen.adb, bindusg.adb,\n+\teinfo.adb, einfo.ads, err_vars.ads, errout.ads, errutil.adb,\n+\texp_ch3.adb, exp_ch4.adb, exp_ch7.adb, exp_ch7.ads, fname-uf.adb,\n+\tfname.adb, fname.ads, freeze.adb, g-debpoo.adb, g-dirope.ads,\n+\tg-excact.ads, g-expect.ads, g-socket.adb, g-socket.ads, g-sothco.ads,\n+\tg-traceb.ads, gnat_rm.texi, gnatlink.adb, gnatls.adb, i-cstrea.adb,\n+\tkrunch.adb, krunch.ads, layout.adb, lib-util.adb, make.adb,\n+\tmlib.adb, osint-b.adb, osint-b.ads, osint-c.adb, osint.adb,\n+\tosint.ads, output.ads, par.adb, prj-conf.adb, prj-env.adb,\n+\tprj-makr.adb, prj-nmsc.adb, prj.adb, prj.ads, repinfo.adb, rtsfind.adb,\n+\trtsfind.ads, s-excmac-gcc.ads, s-fatgen.adb, s-mastop.ads,\n+\ts-parame-ae653.ads, s-parame-hpux.ads, s-parame-vxworks.ads,\n+\ts-parame.ads, s-soflin.ads, s-stoele.adb, s-tasini.adb,\n+\ts-taspri-dummy.ads, s-taspri-hpux-dce.ads, s-taspri-mingw.ads,\n+\ts-taspri-posix-noaltstack.ads, s-taspri-posix.ads,\n+\ts-taspri-solaris.ads, s-taspri-vxworks.ads, s-trasym.ads,\n+\tsem_ch12.adb, sem_ch4.adb, sem_eval.adb, sem_intr.adb, sem_mech.adb,\n+\tsem_mech.ads, sem_prag.adb, sem_res.adb, sem_util.adb, sem_util.ads,\n+\tsinfo.adb, sinfo.ads, sinput-c.adb, symbols.ads, targparm.adb,\n+\ttreepr.adb, types.ads, xr_tabls.adb, xr_tabls.ads: Remove VMS\n+\tspecific code and comments.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): New procedure\n+\tCheck_Reverse_Iteration, to verify the legality of the Reverse\n+\tindicator on various container types, and to detect illegal\n+\treverse iterations on containers that only supoort forward\n+\titeration.\n+\n 2014-08-01  Vincent Celier  <celier@adacore.com>\n \n \t* gnatcmd.adb: Remove the VMS specific stuff.  Integrate in"}, {"sha": "0fbf4a178aa741c83461ce4833da64886e11a4db", "filename": "gcc/ada/a-calcon.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-calcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-calcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calcon.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2008-2009  Free Software Foundation, Inc.          --\n+--          Copyright (C) 2008-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,11 +37,10 @@ with Interfaces.C;\n package Ada.Calendar.Conversions is\n \n    function To_Ada_Time (Unix_Time : Interfaces.C.long) return Time;\n-   --  Convert a time value represented as number of seconds since the Unix\n-   --  Epoch to a time value relative to an Ada implementation-defined Epoch.\n-   --  The units of the result are 100 nanoseconds on VMS and nanoseconds on\n-   --  all other targets. Raises Time_Error if the result cannot fit into a\n-   --  Time value.\n+   --  Convert a time value represented as number of seconds since the\n+   --  Unix Epoch to a time value relative to an Ada implementation-defined\n+   --  Epoch. The units of the result are nanoseconds on all targets. Raises\n+   --  Time_Error if the result cannot fit into a Time value.\n \n    function To_Ada_Time\n      (tm_year  : Interfaces.C.int;"}, {"sha": "f567984a67973f75c1057e2ae118f39746763454", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -982,7 +982,6 @@ package body Ada.Directories is\n       Hour   : Hour_Type;\n       Minute : Minute_Type;\n       Second : Second_Type;\n-      Result : Time;\n \n    begin\n       --  First, the invalid cases\n@@ -999,25 +998,11 @@ package body Ada.Directories is\n \n          GM_Split (Date, Year, Month, Day, Hour, Minute, Second);\n \n-         --  On OpenVMS, the resulting time value must be in the local time\n-         --  zone. Ada.Calendar.Time_Of is exactly what we need. Note that\n-         --  in both cases, the sub seconds are set to zero (0.0) because the\n-         --  time stamp does not store them in its value.\n-\n-         if OpenVMS then\n-            Result :=\n-              Ada.Calendar.Time_Of\n-                (Year, Month, Day, Seconds_Of (Hour, Minute, Second, 0.0));\n-\n-         --  On Unix and Windows, the result must be in GMT. Ada.Calendar.\n+         --  The result must be in GMT. Ada.Calendar.\n          --  Formatting.Time_Of with default time zone of zero (0) is the\n          --  routine of choice.\n \n-         else\n-            Result := Time_Of (Year, Month, Day, Hour, Minute, Second, 0.0);\n-         end if;\n-\n-         return Result;\n+         return Time_Of (Year, Month, Day, Hour, Minute, Second, 0.0);\n       end if;\n    end Modification_Time;\n "}, {"sha": "d7d77622db7fb57ea014e27428c729dca68ab4cb", "filename": "gcc/ada/a-dirval-mingw.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-dirval-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-dirval-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval-mingw.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                            (Windows Version)                             --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -161,15 +161,6 @@ package body Ada.Directories.Validity is\n       end if;\n    end Is_Valid_Simple_Name;\n \n-   -------------\n-   -- OpenVMS --\n-   -------------\n-\n-   function OpenVMS return Boolean is\n-   begin\n-      return False;\n-   end OpenVMS;\n-\n    -------------\n    -- Windows --\n    -------------"}, {"sha": "7a08500a23276706c3d88819f13da093caa67ef2", "filename": "gcc/ada/a-dirval.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-dirval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-dirval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                             (POSIX Version)                              --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -92,15 +92,6 @@ package body Ada.Directories.Validity is\n       return True;\n    end Is_Valid_Simple_Name;\n \n-   -------------\n-   -- OpenVMS --\n-   -------------\n-\n-   function OpenVMS return Boolean is\n-   begin\n-      return False;\n-   end OpenVMS;\n-\n    -------------\n    -- Windows --\n    -------------"}, {"sha": "9505dffd6fa0a298893f75271c15268a89b7efaa", "filename": "gcc/ada/a-dirval.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-dirval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-dirval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,9 +43,6 @@ private package Ada.Directories.Validity is\n    function Is_Path_Name_Case_Sensitive return Boolean;\n    --  Returns True if file and path names are case-sensitive\n \n-   function OpenVMS return Boolean;\n-   --  Return True when OS is OpenVMS\n-\n    function Windows return Boolean;\n    --  Return True when OS is Windows\n "}, {"sha": "0b33c0c9f3fdfc41d92a04f8740b6c29a15d2df7", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -672,24 +672,23 @@ package body Ada.Exceptions is\n    --  perform periodic but not systematic operations.\n \n    procedure Poll is separate;\n-   --  The actual polling routine is separate, so that it can easily\n-   --  be replaced with a target dependent version.\n+   --  The actual polling routine is separate, so that it can easily be\n+   --  replaced with a target dependent version.\n \n    --------------------------\n    -- Code_Address_For_AAA --\n    --------------------------\n \n-   --  This function gives us the start of the PC range for addresses\n-   --  within the exception unit itself. We hope that gigi/gcc keep all the\n-   --  procedures in their original order.\n+   --  This function gives us the start of the PC range for addresses within\n+   --  the exception unit itself. We hope that gigi/gcc keep all the procedures\n+   --  in their original order.\n \n    function Code_Address_For_AAA return System.Address is\n    begin\n-      --  We are using a label instead of merely using\n-      --  Code_Address_For_AAA'Address because on some platforms the latter\n-      --  does not yield the address we want, but the address of a stub or of\n-      --  a descriptor instead. This is the case at least on Alpha-VMS and\n-      --  PA-HPUX.\n+      --  We are using a label instead of Code_Address_For_AAA'Address because\n+      --  on some platforms the latter does not yield the address we want, but\n+      --  the address of a stub or of a descriptor instead. This is the case at\n+      --  least on PA-HPUX.\n \n       <<Start_Of_AAA>>\n       return Start_Of_AAA'Address;"}, {"sha": "d4f9a078657ccd82cb00abb950afbe51cb9bbfc8", "filename": "gcc/ada/a-excpol-abort.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-excpol-abort.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-excpol-abort.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-excpol-abort.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@\n --  that activates periodic polling. Then in the body of the polling routine\n --  we test for asynchronous abort.\n \n---  Windows, HPUX 10 and VMS currently use this file\n+--  Windows and HPUX 10 currently use this file\n \n pragma Warnings (Off);\n --  Allow withing of non-Preelaborated units in Ada 2005 mode where this"}, {"sha": "2f58ed8386653695a08f1ad86d85f8cdf9af570d", "filename": "gcc/ada/a-numaux-darwin.ads", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-numaux-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-numaux-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-darwin.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (Apple OS X Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,12 +31,11 @@\n ------------------------------------------------------------------------------\n \n --  This version is for use with normal Unix math functions, except for\n---  sine/cosine which have been implemented directly in Ada to get\n---  the required accuracy in OS X.  Alternative packages are used\n---  on OpenVMS (different import names), VxWorks (no need for the\n---  -lm Linker_Options), and on the x86 (where we have two\n---  versions one using inline ASM, and one importing from the C long\n---  routines that take 80-bit arguments).\n+--  sine/cosine which have been implemented directly in Ada to get the required\n+--  accuracy in OS X. Alternative packages are used on VxWorks (no need for the\n+--  -lm Linker_Options), and on the x86 (where we have two versions one using\n+--  inline ASM, and one importing from the C long routines that take 80-bit\n+--  arguments).\n \n package Ada.Numerics.Aux is\n    pragma Pure;"}, {"sha": "7f265dd043ec80c294643e2a1af9b513d6cae468", "filename": "gcc/ada/a-numaux.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-numaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fa-numaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version, non-x86)                       --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,11 +37,10 @@\n --  One advantage of using this package is that it will interface directly to\n --  hardware instructions, such as the those provided on the Intel x86.\n \n---  This version is for use with normal Unix math functions. Alternative\n---  packages are used on OpenVMS (different import names), VxWorks (no\n---  need for the -lm Linker_Options), and on the x86 (where we have two\n---  versions one using inline ASM, and one importing from the C long\n---  routines that take 80-bit arguments).\n+--  This version here is for use with normal Unix math functions. Alternative\n+--  packages are used VxWorks (no need for the -lm Linker_Options), and on the\n+--  x86 (where we have two versions one using inline ASM, and one importing\n+--  from the C long routines that take 80-bit arguments).\n \n package Ada.Numerics.Aux is\n    pragma Pure;"}, {"sha": "a1bb7646ba0f1efc2d494b4b9ef83facf60b70cb", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -159,12 +159,9 @@ package body Bindgen is\n    --  A value of zero indicates that time slicing should be suppressed. If no\n    --  pragma is present, and no -T switch was used, the value is -1.\n \n-   --  Heap_Size is the heap to use for memory allocations set by use of a\n-   --  -Hnn parameter for the binder or by the GNAT$NO_MALLOC_64 logical.\n-   --  Valid values are 32 and 64. This switch is only effective on VMS.\n-\n-   --  Float_Format is the float representation in use. Valid values are\n-   --  'I' for IEEE and 'V' for VAX Float. This is only for VMS.\n+   --  Float_Format is the float representation in use. Currently the only\n+   --  valid value is 'I' for IEEE. We needed this field in the past for other\n+   --  floating-point formats, and it is retained for possible future use.\n \n    --  WC_Encoding shows the wide character encoding method used for the main\n    --  program. This is one of the encoding letters defined in\n@@ -2046,10 +2043,10 @@ package body Bindgen is\n       --  files. The reason for this decision is that libraries referenced\n       --  by internal routines may reference these standard library entries.\n \n-      --  Note that we do not insert anything when pragma No_Run_Time has been\n-      --  specified or when the standard libraries are not to be used,\n-      --  otherwise on some platforms, such as VMS, we may get duplicate\n-      --  symbols when linking.\n+      --  Note that we do not insert anything when pragma No_Run_Time has\n+      --  been specified or when the standard libraries are not to be used,\n+      --  otherwise on some platforms, we may get duplicate symbols when\n+      --  linking (not clear if this is still the case, but it is harmless).\n \n       if not (Opt.No_Run_Time_Mode or else Opt.No_Stdlib) then\n          Name_Len := 0;\n@@ -2212,8 +2209,7 @@ package body Bindgen is\n \n       Resolve_Binder_Options;\n \n-      --  Usually, adafinal is called using a pragma Import C. Since Import C\n-      --  doesn't have the same semantics for VMs or CodePeer use standard Ada.\n+      --  Generate standard with's\n \n       if not Suppress_Standard_Library_On_Target then\n          if CodePeer_Mode then"}, {"sha": "b1029487dfa26858a7310d60903e76ec44e6034f", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,11 +120,6 @@ package body Bindusg is\n \n       Write_Line (\"  -h        Output this usage (help) information\");\n \n-      --  Line for -H switch\n-\n-      Write_Line (\"  -Hnn      Use nn bit heap where nn is 32 or 64 \" &\n-                  \"(VMS Only)\");\n-\n       --  Lines for -I switch\n \n       Write_Line (\"  -Idir     Specify library and source files search path\");"}, {"sha": "37a323ac14146c74806820fa0926106660dfdedd", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -411,7 +411,6 @@ package body Einfo is\n    --    Is_Generic_Instance             Flag130\n \n    --    No_Pool_Assigned                Flag131\n-   --    Is_Optional_Parameter           Flag134\n    --    Has_Aliased_Components          Flag135\n    --    No_Strict_Aliasing              Flag136\n    --    Is_Machine_Code_Subprogram      Flag137\n@@ -573,6 +572,12 @@ package body Einfo is\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n+   --    (unused)                        Flag132\n+   --    (unused)                        Flag133\n+   --    (unused)                        Flag134\n+\n+   --    (unused)                        Flag275\n+   --    (unused)                        Flag276\n    --    (unused)                        Flag277\n    --    (unused)                        Flag278\n    --    (unused)                        Flag279\n@@ -2202,12 +2207,6 @@ package body Einfo is\n       return Flag226 (Id);\n    end Is_Only_Out_Parameter;\n \n-   function Is_Optional_Parameter (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Formal (Id));\n-      return Flag134 (Id);\n-   end Is_Optional_Parameter;\n-\n    function Is_Package_Body_Entity (Id : E) return B is\n    begin\n       return Flag160 (Id);\n@@ -4993,12 +4992,6 @@ package body Einfo is\n       Set_Flag226 (Id, V);\n    end Set_Is_Only_Out_Parameter;\n \n-   procedure Set_Is_Optional_Parameter (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Formal (Id));\n-      Set_Flag134 (Id, V);\n-   end Set_Is_Optional_Parameter;\n-\n    procedure Set_Is_Package_Body_Entity (Id : E; V : B := True) is\n    begin\n       Set_Flag160 (Id, V);\n@@ -8405,7 +8398,6 @@ package body Einfo is\n       W (\"Is_Null_Init_Proc\",               Flag178 (Id));\n       W (\"Is_Obsolescent\",                  Flag153 (Id));\n       W (\"Is_Only_Out_Parameter\",           Flag226 (Id));\n-      W (\"Is_Optional_Parameter\",           Flag134 (Id));\n       W (\"Is_Package_Body_Entity\",          Flag160 (Id));\n       W (\"Is_Packed\",                       Flag51  (Id));\n       W (\"Is_Packed_Array_Impl_Type\",       Flag138 (Id));"}, {"sha": "de4b617bece0200fa85369a8463dca14ffe57c43", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -2328,7 +2328,7 @@ package Einfo is\n --       Defined in all entities. Set if the entity is exported. For now we\n --       only allow the export of constants, exceptions, functions, procedures\n --       and variables, but that may well change later on. Exceptions can only\n---       be exported in the OpenVMS and Java VM implementations of GNAT.\n+--       be exported in the Java VM implementation of GNAT.\n \n --    Is_External_State (synthesized)\n --       Applies to all entities, true for abstract states that are subject to\n@@ -2447,9 +2447,8 @@ package Einfo is\n --    Is_Imported (Flag24)\n --       Defined in all entities. Set if the entity is imported. For now we\n --       only allow the import of exceptions, functions, procedures, packages.\n---       and variables. Exceptions can only be imported in the OpenVMS and\n---       Java VM implementations of GNAT. Packages and types can only be\n---       imported in the Java VM implementation.\n+--       and variables. Exceptions, packages and types can only be imported in\n+--       the Java VM implementation.\n \n --    Is_Incomplete_Or_Private_Type (synthesized)\n --       Applies to all entities, true for private and incomplete types\n@@ -2697,11 +2696,6 @@ package Einfo is\n --       out parameter, or if there is some other IN OUT parameter then this\n --       flag is not set in any of them. Used in generation of warnings.\n \n---    Is_Optional_Parameter (Flag134)\n---       Defined in parameter entities. Set if the parameter is specified as\n---       optional by use of a First_Optional_Parameter argument to one of the\n---       extended Import pragmas. Can only be set for OpenVMS versions of GNAT.\n-\n --    Is_Ordinary_Fixed_Point_Type (synthesized)\n --       Applies to all entities, true for ordinary fixed point types and\n --       subtypes.\n@@ -3348,8 +3342,9 @@ package Einfo is\n --       types which have a convention of C, C++ or Fortran.\n \n --    No_Dynamic_Predicate_On_Actual (Flag276)\n---       Defined on generic formal types that are used in loops and quantified\n---       expressions. The corresponing actual cannot have dynamic predicates.\n+--       Defined in discrete types. Set for generic formal types that are used\n+--       in loops and quantified expressions. The corresponing actual cannot\n+--       have dynamic predicates.\n \n --    No_Pool_Assigned (Flag131) [root type only]\n --       Defined in access types. Set if a storage size clause applies to the\n@@ -3359,8 +3354,9 @@ package Einfo is\n --       derived types must have the same pool.\n \n --    No_Predicate_On_Actual (Flag275)\n---       Defined on generic formal types that are used in the spec of a generic\n---       package, in constructs that forbid discrete types with predicates.\n+--       Defined in discrete types. Set for generic formal types that are used\n+--       in the spec of a generic package, in constructs that forbid discrete\n+--       types with predicates.\n \n --    No_Return (Flag113)\n --       Defined in all entities. Always false except in the case of procedures\n@@ -5751,7 +5747,6 @@ package Einfo is\n    --    Has_Initial_Value                   (Flag219)\n    --    Is_Controlling_Formal               (Flag97)\n    --    Is_Only_Out_Parameter               (Flag226)\n-   --    Is_Optional_Parameter               (Flag134)\n    --    Low_Bound_Tested                    (Flag205)\n    --    Is_Return_Object                    (Flag209)\n    --    Parameter_Mode                      (synth)\n@@ -6703,7 +6698,6 @@ package Einfo is\n    function Is_Null_Init_Proc                   (Id : E) return B;\n    function Is_Obsolescent                      (Id : E) return B;\n    function Is_Only_Out_Parameter               (Id : E) return B;\n-   function Is_Optional_Parameter               (Id : E) return B;\n    function Is_Package_Body_Entity              (Id : E) return B;\n    function Is_Packed                           (Id : E) return B;\n    function Is_Packed_Array_Impl_Type           (Id : E) return B;\n@@ -7343,7 +7337,6 @@ package Einfo is\n    procedure Set_Is_Null_Init_Proc               (Id : E; V : B := True);\n    procedure Set_Is_Obsolescent                  (Id : E; V : B := True);\n    procedure Set_Is_Only_Out_Parameter           (Id : E; V : B := True);\n-   procedure Set_Is_Optional_Parameter           (Id : E; V : B := True);\n    procedure Set_Is_Package_Body_Entity          (Id : E; V : B := True);\n    procedure Set_Is_Packed                       (Id : E; V : B := True);\n    procedure Set_Is_Packed_Array_Impl_Type       (Id : E; V : B := True);\n@@ -8119,7 +8112,6 @@ package Einfo is\n    pragma Inline (Is_Object);\n    pragma Inline (Is_Obsolescent);\n    pragma Inline (Is_Only_Out_Parameter);\n-   pragma Inline (Is_Optional_Parameter);\n    pragma Inline (Is_Ordinary_Fixed_Point_Type);\n    pragma Inline (Is_Overloadable);\n    pragma Inline (Is_Package_Body_Entity);\n@@ -8570,7 +8562,6 @@ package Einfo is\n    pragma Inline (Set_Is_Null_Init_Proc);\n    pragma Inline (Set_Is_Obsolescent);\n    pragma Inline (Set_Is_Only_Out_Parameter);\n-   pragma Inline (Set_Is_Optional_Parameter);\n    pragma Inline (Set_Is_Package_Body_Entity);\n    pragma Inline (Set_Is_Packed);\n    pragma Inline (Set_Is_Packed_Array_Impl_Type);"}, {"sha": "48e382df0c09b87fb861fcfd8eea4b8efe832056", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,7 +93,6 @@ package Err_Vars is\n    --  are active (see errout.ads for details). If this switch is False, then\n    --  these sequences are ignored (i.e. simply equivalent to a single ?). The\n    --  -gnatw.d switch sets this flag True, -gnatw.D sets this flag False.\n-   --  Note: always ignored on VMS, where we do not provide this capability.\n \n    ----------------------------------------\n    -- Error Message Insertion Parameters --"}, {"sha": "eaed2aa4cbaeaf6b68caab26a28f1fad9a9f65b1", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -413,68 +413,6 @@ package Errout is\n    --      are continuations that are not printed using the -gnatj switch they\n    --      will also have this prefix.\n \n-   ----------------------------------------\n-   -- Specialization of Messages for VMS --\n-   ----------------------------------------\n-\n-   --  Some messages mention gcc-style switch names. When using an OpenVMS\n-   --  host, such switch names must be converted to their corresponding VMS\n-   --  qualifer. The following table controls this translation. In each case\n-   --  the original message must contain the string \"-xxx switch\", where xxx\n-   --  is the Gname? entry from below, and this string will be replaced by\n-   --  \"/yyy qualifier\", where yyy is the corresponding Vname? entry.\n-\n-   Gname1 : aliased constant String := \"fno-strict-aliasing\";\n-   Vname1 : aliased constant String := \"OPTIMIZE=NO_STRICT_ALIASING\";\n-\n-   Gname2 : aliased constant String := \"gnatX\";\n-   Vname2 : aliased constant String := \"EXTENSIONS_ALLOWED\";\n-\n-   Gname3 : aliased constant String := \"gnatW\";\n-   Vname3 : aliased constant String := \"WIDE_CHARACTER_ENCODING\";\n-\n-   Gname4 : aliased constant String := \"gnatf\";\n-   Vname4 : aliased constant String := \"REPORT_ERRORS=FULL\";\n-\n-   Gname5 : aliased constant String := \"gnat05\";\n-   Vname5 : aliased constant String := \"05\";\n-\n-   Gname6 : aliased constant String := \"gnat2005\";\n-   Vname6 : aliased constant String := \"2005\";\n-\n-   Gname7 : aliased constant String := \"gnat12\";\n-   Vname7 : aliased constant String := \"12\";\n-\n-   Gname8 : aliased constant String := \"gnat2012\";\n-   Vname8 : aliased constant String := \"2012\";\n-\n-   Gname9 : aliased constant String := \"gnateinn\";\n-   Vname9 : aliased constant String := \"MAX_INSTANTIATIONS=nn\";\n-\n-   type Cstring_Ptr is access constant String;\n-\n-   Gnames : array (Nat range <>) of Cstring_Ptr :=\n-              (Gname1'Access,\n-               Gname2'Access,\n-               Gname3'Access,\n-               Gname4'Access,\n-               Gname5'Access,\n-               Gname6'Access,\n-               Gname7'Access,\n-               Gname8'Access,\n-               Gname9'Access);\n-\n-   Vnames : array (Nat range <>) of Cstring_Ptr :=\n-              (Vname1'Access,\n-               Vname2'Access,\n-               Vname3'Access,\n-               Vname4'Access,\n-               Vname5'Access,\n-               Vname6'Access,\n-               Vname7'Access,\n-               Vname8'Access,\n-               Vname9'Access);\n-\n    -----------------------------------------------------\n    -- Global Values Used for Error Message Insertions --\n    -----------------------------------------------------"}, {"sha": "0c47f2183c49c34b2b9597b68893a9c7f5a33f5d", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -502,10 +502,10 @@ package body Errutil is\n          --  error to make sure that *something* appears on standard error in\n          --  an error situation.\n \n-         --  Formerly, only the \"# errors\" suffix was sent to stderr, whereas\n-         --  \"# lines:\" appeared on stdout. This caused problems on VMS when\n-         --  the stdout buffer was flushed, giving an extra line feed after\n-         --  the prefix.\n+         --  Historical note: Formerly, only the \"# errors\" suffix was sent\n+         --  to stderr, whereas \"# lines:\" appeared on stdout. This caused\n+         --  some problems on now-obsolete ports, but there seems to be no\n+         --  reason to revert this page since it would be incompatible.\n \n          if Total_Errors_Detected + Warnings_Detected /= 0\n            and then not Brief_Output"}, {"sha": "7774d09f3c2939151bba03df8c7f6d9e009d15d9", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1701,18 +1701,6 @@ package body Exp_Ch3 is\n          end if;\n       end if;\n \n-      --  When the object is either protected or a task, create static strings\n-      --  which denote the names of entries and families. Associate the strings\n-      --  with the concurrent object's Protection_Entries or ATCB. This is a\n-      --  VMS Debug feature.\n-\n-      if OpenVMS_On_Target\n-        and then Is_Concurrent_Type (Typ)\n-        and then Entry_Names_OK\n-      then\n-         Build_Entry_Names (Id_Ref, Typ, Res);\n-      end if;\n-\n       return Res;\n \n    exception\n@@ -7212,8 +7200,8 @@ package body Exp_Ch3 is\n                         --  All anonymous access-to-controlled types allocate\n                         --  on the global pool.\n \n-                        Set_Associated_Storage_Pool (Comp_Typ,\n-                          Get_Global_Pool_For_Access_Type (Comp_Typ));\n+                        Set_Associated_Storage_Pool\n+                          (Comp_Typ, RTE (RE_Global_Pool_Object));\n \n                         Build_Finalization_Master\n                           (Typ        => Comp_Typ,\n@@ -7229,8 +7217,8 @@ package body Exp_Ch3 is\n                         --  All anonymous access-to-controlled types allocate\n                         --  on the global pool.\n \n-                        Set_Associated_Storage_Pool (Comp_Typ,\n-                          Get_Global_Pool_For_Access_Type (Comp_Typ));\n+                        Set_Associated_Storage_Pool\n+                          (Comp_Typ, RTE (RE_Global_Pool_Object));\n \n                         --  Shared the master among multiple components\n "}, {"sha": "11833e5b68d5b5e7e3def09e5d9fddaedc94a375", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 14, "deletions": 56, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -4313,11 +4313,11 @@ package body Exp_Ch4 is\n \n          if No (Associated_Storage_Pool (PtrT)) and then VM_Target = No_VM then\n             if Present (Rel_Typ) then\n-               Set_Associated_Storage_Pool (PtrT,\n-                 Associated_Storage_Pool (Rel_Typ));\n+               Set_Associated_Storage_Pool\n+                 (PtrT, Associated_Storage_Pool (Rel_Typ));\n             else\n-               Set_Associated_Storage_Pool (PtrT,\n-                 Get_Global_Pool_For_Access_Type (PtrT));\n+               Set_Associated_Storage_Pool\n+                 (PtrT, RTE (RE_Global_Pool_Object));\n             end if;\n          end if;\n \n@@ -8537,17 +8537,18 @@ package body Exp_Ch4 is\n    ---------------------\n \n    --  If the argument is other than a Boolean array type, there is no special\n-   --  expansion required, except for VMS operations on signed integers.\n+   --  expansion required, except for dealing with validity checks, and non-\n+   --  standard boolean representations.\n \n-   --  For the packed case, we call the special routine in Exp_Pakd, except\n-   --  that if the component size is greater than one, we use the standard\n-   --  routine generating a gruesome loop (it is so peculiar to have packed\n-   --  arrays with non-standard Boolean representations anyway, so it does not\n-   --  matter that we do not handle this case efficiently).\n+   --  For the packed array case, we call the special routine in Exp_Pakd,\n+   --  except that if the component size is greater than one, we use the\n+   --  standard routine generating a gruesome loop (it is so peculiar to have\n+   --  packed arrays with non-standard Boolean representations anyway, so it\n+   --  does not matter that we do not handle this case efficiently).\n \n-   --  For the unpacked case (and for the special packed case where we have non\n-   --  standard Booleans, as discussed above), we generate and insert into the\n-   --  tree the following function definition:\n+   --  For the unpacked array case (and for the special packed case where we\n+   --  have non standard Booleans, as discussed above), we generate and insert\n+   --  into the tree the following function definition:\n \n    --     function Nnnn (A : arr) is\n    --       B : arr;\n@@ -8587,49 +8588,6 @@ package body Exp_Ch4 is\n          return;\n       end if;\n \n-      --  For the VMS \"not\" on signed integer types, use conversion to and from\n-      --  a predefined modular type.\n-\n-      if Is_VMS_Operator (Entity (N)) then\n-         declare\n-            Rtyp : Entity_Id;\n-            Utyp : Entity_Id;\n-\n-         begin\n-            --  If this is a derived type, retrieve original VMS type so that\n-            --  the proper sized type is used for intermediate values.\n-\n-            if Is_Derived_Type (Typ) then\n-               Rtyp := First_Subtype (Etype (Typ));\n-            else\n-               Rtyp := Typ;\n-            end if;\n-\n-            --  The proper unsigned type must have a size compatible with the\n-            --  operand, to prevent misalignment.\n-\n-            if RM_Size (Rtyp) <= 8 then\n-               Utyp := RTE (RE_Unsigned_8);\n-\n-            elsif RM_Size (Rtyp) <= 16 then\n-               Utyp := RTE (RE_Unsigned_16);\n-\n-            elsif RM_Size (Rtyp) = RM_Size (Standard_Unsigned) then\n-               Utyp := RTE (RE_Unsigned_32);\n-\n-            else\n-               Utyp := RTE (RE_Long_Long_Unsigned);\n-            end if;\n-\n-            Rewrite (N,\n-              Unchecked_Convert_To (Typ,\n-                Make_Op_Not (Loc,\n-                  Unchecked_Convert_To (Utyp, Right_Opnd (N)))));\n-            Analyze_And_Resolve (N, Typ);\n-            return;\n-         end;\n-      end if;\n-\n       --  Only array types need any other processing\n \n       if not Is_Array_Type (Typ) then"}, {"sha": "7d1526ca8c91017f8c29935ff8852807d3d182f0", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -936,7 +936,7 @@ package body Exp_Ch7 is\n             --  The default choice is the global pool\n \n             else\n-               Pool_Id := Get_Global_Pool_For_Access_Type (Ptr_Typ);\n+               Pool_Id := RTE (RE_Global_Pool_Object);\n                Set_Associated_Storage_Pool (Ptr_Typ, Pool_Id);\n             end if;\n \n@@ -4486,25 +4486,6 @@ package body Exp_Ch7 is\n       end loop;\n    end Find_Node_To_Be_Wrapped;\n \n-   -------------------------------------\n-   -- Get_Global_Pool_For_Access_Type --\n-   -------------------------------------\n-\n-   function Get_Global_Pool_For_Access_Type (T : Entity_Id) return Entity_Id is\n-   begin\n-      --  Access types whose size is smaller than System.Address size can exist\n-      --  only on VMS. We can't use the usual global pool which returns an\n-      --  object of type Address as truncation will make it invalid. To handle\n-      --  this case, VMS has a dedicated global pool that returns addresses\n-      --  that fit into 32 bit accesses.\n-\n-      if Opt.True_VMS_Target and then Esize (T) = 32 then\n-         return RTE (RE_Global_Pool_32_Object);\n-      else\n-         return RTE (RE_Global_Pool_Object);\n-      end if;\n-   end Get_Global_Pool_For_Access_Type;\n-\n    ----------------------------------\n    -- Has_New_Controlled_Component --\n    ----------------------------------"}, {"sha": "ee24e6d6d55e28623a6c5efa3d4b7780307b7085", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -151,11 +151,6 @@ package Exp_Ch7 is\n    --  when pragma Restrictions (No_Finalization) applies, in which case we\n    --  know that class-wide objects do not contain controlled parts.\n \n-   function Get_Global_Pool_For_Access_Type (T : Entity_Id) return Entity_Id;\n-   --  Return the pool id for access type T.  This is generally the node\n-   --  corresponding to System.Global_Pool.Global_Pool_Object except on\n-   --  VMS if the access size is 32.\n-\n    function Has_New_Controlled_Component (E : Entity_Id) return Boolean;\n    --  E is a type entity. Give the same result as Has_Controlled_Component\n    --  except for tagged extensions where the result is True only if the"}, {"sha": "7bf27dbe22b7ee6b9c080dac6df313f0044212de", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,6 @@ with Krunch;\n with Opt;      use Opt;\n with Osint;    use Osint;\n with Table;\n-with Targparm; use Targparm;\n with Uname;    use Uname;\n with Widechar; use Widechar;\n \n@@ -410,8 +409,7 @@ package body Fname.UF is\n                           (Name_Buffer,\n                            Name_Len,\n                            Integer (Maximum_File_Name_Length),\n-                           Debug_Flag_4,\n-                           OpenVMS_On_Target);\n+                           Debug_Flag_4);\n \n                         --  Replace extension\n "}, {"sha": "0bea5a0ba1817fdc6ae027863685d832235aaced", "filename": "gcc/ada/fname.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,9 +30,8 @@\n ------------------------------------------------------------------------------\n \n with Alloc;\n-with Hostparm; use Hostparm;\n with Table;\n-with Types;    use Types;\n+with Types; use Types;\n \n package body Fname is\n \n@@ -78,13 +77,6 @@ package body Fname is\n       then\n          return True;\n \n-      elsif OpenVMS\n-        and then\n-          (Name_Buffer (1 .. 4) = \"dec-\"\n-             or else Name_Buffer (1 .. 8) = \"dec     \")\n-      then\n-         return True;\n-\n       else\n          return False;\n       end if;"}, {"sha": "79c84c6cc8ac094c00a4b7ffe16b0a8739849637", "filename": "gcc/ada/fname.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffname.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffname.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,8 +83,7 @@ package Fname is\n      (Fname              : File_Name_Type;\n       Renamings_Included : Boolean := True) return Boolean;\n    --  Similar to Is_Predefined_File_Name. The internal file set is a superset\n-   --  of the predefined file set including children of GNAT, and also children\n-   --  of DEC for the VMS case.\n+   --  of the predefined file set including children of GNAT.\n \n    procedure Tree_Read;\n    --  Dummy procedure (reads dummy table values from tree file)"}, {"sha": "190813019a53bb585777c0e7dfac66b6b7305824", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 43, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7038,11 +7038,7 @@ package body Freeze is\n       else\n          Set_Mechanisms (E);\n \n-         --  For foreign conventions, warn about return of an\n-         --  unconstrained array.\n-\n-         --  Note: we *do* allow a return by descriptor for the VMS case,\n-         --  though here there is probably more to be done ???\n+         --  For foreign conventions, warn about return of unconstrained array\n \n          if Ekind (E) = E_Function then\n             Retype := Underlying_Type (Etype (E));\n@@ -7065,11 +7061,6 @@ package body Freeze is\n             elsif Is_Array_Type (Retype)\n               and then not Is_Constrained (Retype)\n \n-              --  Exclude cases where descriptor mechanism is set, since the\n-              --  VMS descriptor mechanisms allow such unconstrained returns.\n-\n-              and then Mechanism (E) not in Descriptor_Codes\n-\n                --  Check appropriate warning is enabled (should we check for\n                --  Warnings (Off) on specific entities here, probably so???)\n \n@@ -7107,39 +7098,6 @@ package body Freeze is\n          end if;\n       end if;\n \n-      --  For VMS, descriptor mechanisms for parameters are allowed only for\n-      --  imported/exported subprograms. Moreover, the NCA descriptor is not\n-      --  allowed for parameters of exported subprograms.\n-\n-      if OpenVMS_On_Target then\n-         if Is_Exported (E) then\n-            F := First_Formal (E);\n-            while Present (F) loop\n-               if Mechanism (F) = By_Descriptor_NCA then\n-                  Error_Msg_N\n-                    (\"'N'C'A' descriptor for parameter not permitted\", F);\n-                  Error_Msg_N\n-                    (\"\\can only be used for imported subprogram\", F);\n-               end if;\n-\n-               Next_Formal (F);\n-            end loop;\n-\n-         elsif not Is_Imported (E) then\n-            F := First_Formal (E);\n-            while Present (F) loop\n-               if Mechanism (F) in Descriptor_Codes then\n-                  Error_Msg_N\n-                    (\"descriptor mechanism for parameter not permitted\", F);\n-                  Error_Msg_N\n-                    (\"\\can only be used for imported/exported subprogram\", F);\n-               end if;\n-\n-               Next_Formal (F);\n-            end loop;\n-         end if;\n-      end if;\n-\n       --  Pragma Inline_Always is disallowed for dispatching subprograms\n       --  because the address of such subprograms is saved in the dispatch\n       --  table to support dispatching calls, and dispatching calls cannot"}, {"sha": "8d4372f6debac3f055828ddf1fe7d4dee59694b3", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -305,8 +305,8 @@ package body GNAT.Debug_Pools is\n    Code_Address_For_Deallocate_End  : System.Address;\n    Code_Address_For_Dereference_End : System.Address;\n    --  Taking the address of the above procedures will not work on some\n-   --  architectures (HPUX and VMS for instance). Thus we do the same thing\n-   --  that is done in a-except.adb, and get the address of labels instead\n+   --  architectures (HPUX for instance). Thus we do the same thing that\n+   --  is done in a-except.adb, and get the address of labels instead.\n \n    procedure Skip_Levels\n      (Depth               : Natural;"}, {"sha": "fe02d3fd1366884d69a598aa4b2ccb26112150d5", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 23, "deletions": 30, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2010, AdaCore                     --\n+--                     Copyright (C) 1998-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,10 +37,6 @@\n \n --  See also child package GNAT.Directory_Operations.Iteration\n \n---  Note: support on OpenVMS is limited to the support of Unix-style\n---  directory names (OpenVMS native directory format is not supported).\n---  Read individual entries for more specific notes on OpenVMS support.\n-\n with System;\n with Ada.Strings.Maps;\n \n@@ -54,8 +50,6 @@ package GNAT.Directory_Operations is\n    --  '\\' character. It can also include drive letters if the operating\n    --  system provides for this. The final '/' or '\\' in a Dir_Name_Str is\n    --  optional when passed as a procedure or function in parameter.\n-   --  On OpenVMS, only Unix style path names are supported, not VMS style,\n-   --  but the directory and file names are not case sensitive.\n \n    type Dir_Type is limited private;\n    --  A value used to reference a directory. Conceptually this value includes\n@@ -117,7 +111,7 @@ package GNAT.Directory_Operations is\n    --  returned. Note that the contents of Path is case-sensitive on\n    --  systems that have case-sensitive file names (like Unix), and\n    --  non-case-sensitive on systems where the file system is also non-\n-   --  case-sensitive (such as Windows, and OpenVMS).\n+   --  case-sensitive (such as Windows).\n \n    function Base_Name\n      (Path   : Path_Name;\n@@ -133,8 +127,8 @@ package GNAT.Directory_Operations is\n    --    'Path' and 'Dir_Name (Path) & Dir_Separator & Base_Name (Path)'\n    --    represent the same file.\n    --\n-   --  The comparison of Suffix is case-insensitive on systems such as Windows\n-   --  and VMS where the file search is case-insensitive (e.g. on such systems,\n+   --  The comparison of Suffix is case-insensitive on systems like Windows\n+   --  where the file search is case-insensitive (e.g. on such systems,\n    --  Base_Name (\"/Users/AdaCore/BB12.patch\", \".Patch\") returns \"BB12\").\n    --\n    --  Note that the index bounds of the result match the corresponding indexes\n@@ -165,12 +159,11 @@ package GNAT.Directory_Operations is\n    --\n    --  The Style argument indicates the syntax to be used for path names:\n    --\n-   --    UNIX\n-   --      Use '/' as the directory separator. The default on Unix systems\n-   --      and on OpenVMS.\n-   --\n    --    DOS\n-   --      Use '\\' as the directory separator. The default on Windows.\n+   --      Use '\\' as the directory separator (default on Windows)\n+   --\n+   --    UNIX\n+   --      Use '/' as the directory separator (default on all other systems)\n    --\n    --    System_Default\n    --      Use the default style for the current system\n@@ -179,24 +172,24 @@ package GNAT.Directory_Operations is\n    function Expand_Path\n      (Path : Path_Name;\n       Mode : Environment_Style := System_Default) return Path_Name;\n-   --  Returns Path with environment variables (or logical names on OpenVMS)\n-   --  replaced by the current environment variable value. For example,\n-   --  $HOME/mydir will be replaced by /home/joe/mydir if $HOME environment\n-   --  variable is set to /home/joe and Mode is UNIX. If an environment\n-   --  variable does not exists the variable will be replaced by the empty\n-   --  string. Two dollar or percent signs are replaced by a single\n-   --  dollar/percent sign. Note that a variable must start with a letter.\n+   --  Returns Path with environment variables replaced by the current\n+   --  environment variable value. For example, $HOME/mydir will be replaced\n+   --  by /home/joe/mydir if $HOME environment variable is set to /home/joe and\n+   --  Mode is UNIX. If an environment variable does not exists the variable\n+   --  will be replaced by the empty string. Two dollar or percent signs are\n+   --  replaced by a single dollar/percent sign. Note that a variable must\n+   --  start with a letter.\n    --\n    --  The Mode argument indicates the recognized syntax for environment\n    --  variables as follows:\n    --\n    --    UNIX\n-   --      Environment variables and OpenVMS logical names use $ as prefix and\n-   --      can use curly brackets as in ${HOME}/mydir. If there is no closing\n-   --      curly bracket for an opening one then no translation is done, so for\n-   --      example ${VAR/toto is returned as ${VAR/toto. The use of {} brackets\n-   --      is required if the environment variable name contains other than\n-   --      alphanumeric characters.\n+   --      Environment variables use $ as prefix and can use curly brackets\n+   --      as in ${HOME}/mydir. If there is no closing curly bracket for an\n+   --      opening one then no translation is done, so for example ${VAR/toto\n+   --      is returned as ${VAR/toto. The use of {} brackets is required if\n+   --      the environment variable name contains other than alphanumeric\n+   --      characters.\n    --\n    --    DOS\n    --      Environment variables uses % as prefix and suffix (e.g. %HOME%/dir).\n@@ -207,8 +200,8 @@ package GNAT.Directory_Operations is\n    --      Recognize both forms described above.\n    --\n    --    System_Default\n-   --      Uses either UNIX on Unix and OpenVMS systems, or DOS on Windows,\n-   --      depending on the running environment. What about other OS's???\n+   --      Uses either DOS on Windows, and UNIX on all other systems, depending\n+   --      on the running environment.\n \n    ---------------\n    -- Iterators --"}, {"sha": "44f067ddbb789c910e5a5454de4027cecbc452cc", "filename": "gcc/ada/g-excact.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-excact.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-excact.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-excact.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,8 +111,8 @@ package GNAT.Exception_Actions is\n \n    procedure Core_Dump (Occurrence : Exception_Occurrence);\n    --  Dump memory (called a core dump in some systems) if supported by the\n-   --  OS (most unix systems and VMS), and abort execution of the application.\n-   --  Under Windows this procedure will not dump the memory, it will only\n-   --  abort execution.\n+   --  OS (most unix systems), and abort execution of the application. Under\n+   --  Windows this procedure will not dump the memory, it will only abort\n+   --  execution.\n \n end GNAT.Exception_Actions;"}, {"sha": "8c4ab48b5c64ee449df97592b3495d7781a0d512", "filename": "gcc/ada/g-expect.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-expect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-expect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2010, AdaCore                     --\n+--                     Copyright (C) 2000-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,9 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Currently this package is implemented on all native GNAT ports except\n---  for VMS. It is not yet implemented for any of the cross-ports (e.g. it\n---  is not available for VxWorks or LynxOS).\n+--  Currently this package is implemented on all native GNAT ports. It is not\n+--  yet implemented for any of the cross-ports (e.g. it is not available for\n+--  VxWorks or LynxOS).\n \n --  -----------\n --  -- Usage --"}, {"sha": "94125173515fea221995df6e1fbb148a361a2d61", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -172,8 +172,7 @@ package body GNAT.Sockets is\n    --  Conversion function\n \n    function Value (S : System.Address) return String;\n-   --  Same as Interfaces.C.Strings.Value but taking a System.Address (on VMS,\n-   --  chars_ptr is a 32-bit pointer, and here we need a 64-bit version).\n+   --  Same as Interfaces.C.Strings.Value but taking a System.Address\n \n    function To_Timeval (Val : Timeval_Duration) return Timeval;\n    --  Separate Val in seconds and microseconds"}, {"sha": "517dd4f510ad86aa6c2de081874fd1b1cbea55fb", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -39,9 +39,6 @@\n --       feature, so it is not available if Multicast is not supported, or not\n --       installed.\n \n---       The VMS implementation was implemented using the DECC RTL Socket API,\n---       and is thus subject to limitations in the implementation of this API.\n-\n --     VxWorks cross ports fully implement this package\n \n --     This package is not yet implemented on LynxOS or other cross ports"}, {"sha": "0d77dd75ef95f5a01e5eaeb9e7d96cfd2aa5384b", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2008-2012, AdaCore                     --\n+--                     Copyright (C) 2008-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -212,11 +212,6 @@ package GNAT.Sockets.Thin_Common is\n    pragma Convention (C, Hostent_Access);\n    --  Access to host entry\n \n-   --  Note: the hostent and servent accessors that return char*\n-   --  values are compiled with GCC, and on VMS they always return\n-   --  64-bit pointers, so we can't use C.Strings.chars_ptr, which\n-   --  on VMS is 32 bits.\n-\n    function Hostent_H_Name\n      (E : Hostent_Access) return System.Address;\n "}, {"sha": "98d11a8ef99607f710cd49e4a6739ef48447ebd2", "filename": "gcc/ada/g-traceb.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-traceb.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2012, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,8 +63,6 @@\n --     LynxOS x86\n --     Solaris x86\n --     Solaris sparc\n---     OpenVMS/Alpha\n---     OpenVMS/ia64\n --     VxWorks PowerPC\n --     VxWorks x86\n --     Windows NT/XP"}, {"sha": "e29a29d5007a2adf1596896ead3f9c01368608f7", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 54, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -3633,10 +3633,6 @@ MECHANISM_ASSOCIATION ::=\n MECHANISM_NAME ::=\n   Value\n | Reference\n-| Descriptor [([Class =>] CLASS_NAME)]\n-| Short_Descriptor [([Class =>] CLASS_NAME)]\n-\n-CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n @end smallexample\n \n @noindent\n@@ -3665,21 +3661,6 @@ parameter by parameter basis using either positional or named\n notation.  If the mechanism is not specified, the default mechanism\n is used.\n \n-@cindex OpenVMS\n-@cindex Passing by descriptor\n-Passing by descriptor is supported only on the OpenVMS ports of GNAT@.\n-The default behavior for Import_Function is to pass a 64bit descriptor\n-unless short_descriptor is specified, then a 32bit descriptor is passed.\n-\n-@code{First_Optional_Parameter} applies only to OpenVMS ports of GNAT@.\n-It specifies that the designated parameter and all following parameters\n-are optional, meaning that they are not passed at the generated code\n-level (this is distinct from the notion of optional parameters in Ada\n-where the parameters are passed anyway with the designated optional\n-parameters).  All optional parameters must be of mode @code{IN} and have\n-default parameter values that are either known at compile time\n-expressions, or uses of the @code{'Null_Parameter} attribute.\n-\n @node Pragma Import_Object\n @unnumberedsec Pragma Import_Object\n @findex Import_Object\n@@ -3739,13 +3720,7 @@ MECHANISM ::=\n MECHANISM_ASSOCIATION ::=\n   [formal_parameter_NAME =>] MECHANISM_NAME\n \n-MECHANISM_NAME ::=\n-  Value\n-| Reference\n-| Descriptor [([Class =>] CLASS_NAME)]\n-| Short_Descriptor [([Class =>] CLASS_NAME)]\n-\n-CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n+MECHANISM_NAME ::= Value | Reference\n @end smallexample\n \n @noindent\n@@ -3786,14 +3761,7 @@ MECHANISM ::=\n MECHANISM_ASSOCIATION ::=\n   [formal_parameter_NAME =>] MECHANISM_NAME\n \n-MECHANISM_NAME ::=\n-  Value\n-| Reference\n-| Descriptor [([Class =>] CLASS_NAME)]\n-| Short_Descriptor [([Class =>] CLASS_NAME)]\n-\n-CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n-@end smallexample\n+MECHANISM_NAME ::= Value | Reference\n \n @noindent\n This pragma is identical to @code{Import_Procedure} except that the\n@@ -9260,28 +9228,8 @@ meaning the first parameter) of @var{subprogram}.  The code returned is:\n by copy (value)\n @item 2\n by reference\n-@item 3\n-by descriptor (default descriptor class)\n-@item 4\n-by descriptor (UBS: unaligned bit string)\n-@item 5\n-by descriptor (UBSB: aligned bit string with arbitrary bounds)\n-@item 6\n-by descriptor (UBA: unaligned bit array)\n-@item 7\n-by descriptor (S: string, also scalar access type parameter)\n-@item 8\n-by descriptor (SB: string with arbitrary bounds)\n-@item 9\n-by descriptor (A: contiguous array)\n-@item 10\n-by descriptor (NCA: non-contiguous array)\n @end table\n \n-@noindent\n-Values from 3 through 10 are only relevant to Digital OpenVMS implementations.\n-@cindex OpenVMS\n-\n @node Attribute Null_Parameter\n @unnumberedsec Attribute Null_Parameter\n @cindex Zero address, passing"}, {"sha": "6c93c0ba62e691763ec3c7bd8c3d62ae1fe8b19c", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -630,8 +630,7 @@ procedure Gnatlink is\n                   Linker_Objects.Table (Linker_Objects.Last) :=\n                     new String'(Arg);\n \n-               --  If host object file, record object file e.g. accept foo.o\n-               --  as well as foo.obj on VMS target.\n+               --  If host object file, record object file\n \n                elsif Arg'Length > Get_Object_Suffix.all'Length\n                  and then Arg\n@@ -730,18 +729,17 @@ procedure Gnatlink is\n       --  Save state of -shared option\n \n       Xlinker_Was_Previous : Boolean := False;\n-      --  Indicate that \"-Xlinker\" was the option preceding the current\n-      --  option. If True, then the current option is never suppressed.\n+      --  Indicate that \"-Xlinker\" was the option preceding the current option.\n+      --  If True, then the current option is never suppressed.\n \n       --  Rollback data\n \n-      --  These data items are used to store current binder file context.\n-      --  The context is composed of the file descriptor position and the\n-      --  current line together with the slice indexes (first and last\n-      --  position) for this line. The rollback data are used by the\n-      --  Store_File_Context and Rollback_File_Context routines below.\n-      --  The file context mechanism interact only with the Get_Next_Line\n-      --  call. For example:\n+      --  These data items are used to store current binder file context. The\n+      --  context is composed of the file descriptor position and the current\n+      --  line together with the slice indexes (first and last position) for\n+      --  this line. The rollback data are used by the Store_File_Context and\n+      --  Rollback_File_Context routines below. The file context mechanism\n+      --  interact only with the Get_Next_Line call. For example:\n \n       --     Store_File_Context;\n       --     Get_Next_Line;\n@@ -772,7 +770,7 @@ procedure Gnatlink is\n       pragma Import\n         (C, Object_Library_Ext_Ptr, \"__gnat_object_library_extension\");\n       --  Pointer to string specifying the default extension for\n-      --  object libraries, e.g. Unix uses \".a\", VMS uses \".olb\".\n+      --  object libraries, e.g. Unix uses \".a\".\n \n       Separate_Run_Path_Options : Boolean;\n       for Separate_Run_Path_Options'Size use Character'Size;"}, {"sha": "3db4d617be95696c90cf1cdcc2db7e81001f861e", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1627,7 +1627,7 @@ begin\n    Osint.Add_Default_Search_Dirs;\n \n    --  Get the target parameters, but only if switch -nostdinc was not\n-   --  specified. Likely not strictly needed now that VMS is baselined???\n+   --  specified. May not be needed any more, but is harmless.\n \n    if not Opt.No_Stdinc then\n       Get_Target_Parameters;"}, {"sha": "d831206b47b029b22669dd2520c86b052c8d0169", "filename": "gcc/ada/i-cstrea.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fi-cstrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fi-cstrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,10 +29,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the default version which just calls the C versions directly\n---  Note: the reason that we provide for specialization here is that on\n---  some systems, notably VMS, we may need to worry about buffering.\n-\n with Ada.Unchecked_Conversion;\n \n package body Interfaces.C_Streams is"}, {"sha": "79f9de1c82bd65806cef42b96f1aa0aa938b9d1a", "filename": "gcc/ada/krunch.adb", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fkrunch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fkrunch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -33,9 +33,7 @@ procedure Krunch\n   (Buffer        : in out String;\n    Len           : in out Natural;\n    Maxlen        : Natural;\n-   No_Predef     : Boolean;\n-   VMS_On_Target : Boolean := False)\n-\n+   No_Predef     : Boolean)\n is\n    pragma Assert (Buffer'First = 1);\n    --  This is a documented requirement; the assert turns off index warnings\n@@ -118,34 +116,15 @@ begin\n    --  Special case of a child unit whose parent unit is a single letter that\n    --  is A, G, I, or S. In order to prevent confusion with krunched names\n    --  of predefined units use a tilde rather than a minus as the second\n-   --  character of the file name.  On VMS a tilde is an illegal character\n-   --  in a file name, two consecutive underlines (\"__\") are used instead.\n+   --  character of the file name.\n \n    elsif Len > 1\n      and then Buffer (2) = '-'\n      and then (B1 = 'a' or else B1 = 'g' or else B1 = 'i' or else B1 = 's')\n      and then Len <= Maxlen\n    then\n-      if VMS_On_Target then\n-         Len := Len + 1;\n-         Buffer (4 .. Len) := Buffer (3 .. Len - 1);\n-         Buffer (2) := '_';\n-         Buffer (3) := '_';\n-      else\n-         Buffer (2) := '~';\n-      end if;\n-\n-      if Len <= Maxlen then\n-         return;\n-\n-      else\n-         --  Case of VMS when the buffer had exactly the length Maxlen and now\n-         --  has the length Maxlen + 1: krunching after \"__\" is needed.\n-\n-         Startloc := 4;\n-         Curlen   := Len;\n-         Krlen    := Maxlen;\n-      end if;\n+      Buffer (2) := '~';\n+      return;\n \n    --  Normal case, not a predefined file\n "}, {"sha": "7cfb637c57f7b25626103f5b5fcb49cca7a47763", "filename": "gcc/ada/krunch.ads", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fkrunch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fkrunch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,8 +121,7 @@ procedure Krunch\n   (Buffer        : in out String;\n    Len           : in out Natural;\n    Maxlen        : Natural;\n-   No_Predef     : Boolean;\n-   VMS_On_Target : Boolean := False);\n+   No_Predef     : Boolean);\n pragma Elaborate_Body (Krunch);\n --  The full file name is stored in Buffer (1 .. Len) on entry. The file\n --  name is crunched in place and on return Len is updated, so that the\n@@ -131,8 +130,6 @@ pragma Elaborate_Body (Krunch);\n --  case it may be possible that Krunch does not modify Buffer. The fourth\n --  parameter, No_Predef, is a switch which, if set to True, disables the\n --  normal special treatment of predefined library unit file names.\n---  VMS_On_Target, when True, indicates to Krunch to apply the VMS treatment\n---  to the children of package A, G,I or S.\n --\n --  Note: the string Buffer must have a lower bound of 1, and may not\n --  contain any blanks (in particular, it must not have leading blanks)."}, {"sha": "2692c8bb2b38b3f3bf134fd1d4b4db29c6e7750c", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -2526,31 +2526,6 @@ package body Layout is\n             Init_Size (E, System_Address_Size);\n          end if;\n \n-         --  On VMS, reset size to 32 for convention C access type if no\n-         --  explicit size clause is given and the default size is 64. Really\n-         --  we do not know the size, since depending on options for the VMS\n-         --  compiler, the size of a pointer type can be 32 or 64, but choosing\n-         --  32 as the default improves compatibility with legacy VMS code.\n-\n-         --  Note: we do not use Has_Size_Clause in the test below, because we\n-         --  want to catch the case of a derived type inheriting a size clause.\n-         --  We want to consider this to be an explicit size clause for this\n-         --  purpose, since it would be weird not to inherit the size in this\n-         --  case.\n-\n-         --  We do NOT do this if we are in -gnatdm mode on a non-VMS target\n-         --  since in that case we want the normal pointer representation.\n-\n-         if Opt.True_VMS_Target\n-           and then (Convention (E) = Convention_C\n-                       or else\n-                     Convention (E) = Convention_CPP)\n-           and then No (Get_Attribute_Definition_Clause (E, Attribute_Size))\n-           and then Esize (E) = 64\n-         then\n-            Init_Size (E, 32);\n-         end if;\n-\n          Set_Elem_Alignment (E);\n \n       --  Scalar types: set size and alignment\n@@ -3022,8 +2997,7 @@ package body Layout is\n \n             --  If Optimize_Alignment is set to Time, then we reset for odd\n             --  \"in between sizes\", for example a 17 bit record is given an\n-            --  alignment of 4. Note that this matches the old VMS behavior\n-            --  in versions of GNAT prior to 6.1.1.\n+            --  alignment of 4.\n \n          elsif Optimize_Alignment_Time (E)\n            and then Siz > System_Storage_Unit"}, {"sha": "71c05ee170e39e2181c8e8abe0c7910ef89856dc", "filename": "gcc/ada/lib-util.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Flib-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Flib-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-util.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -100,10 +100,9 @@ package body Lib.Util is\n \n    procedure Write_Info_EOL is\n    begin\n-      if Hostparm.OpenVMS\n-        or else Info_Buffer_Len + Max_Line + 1 > Max_Buffer\n-      then\n+      if Info_Buffer_Len + Max_Line + 1 > Max_Buffer then\n          Write_Info_Terminate;\n+\n       else\n          --  Delete any trailing blanks\n "}, {"sha": "3ae8f272c67a319841ec7f580c0991d2c6beffda", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 45, "deletions": 50, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -2626,65 +2626,58 @@ package body Make is\n          Data := No_Compilation_Data;\n          OK   := False;\n \n-         --  The loop here is a work-around for a problem on VMS; in some\n-         --  circumstances (shared library and several executables, for\n-         --  example), there are child processes other than compilation\n-         --  processes that are received. ??? Revisit now that VMS is no\n-         --  longer supported.\n+         Wait_Process (Pid, OK);\n \n-         loop\n-            Wait_Process (Pid, OK);\n+         if Pid = Invalid_Pid then\n+            return;\n+         end if;\n \n-            if Pid = Invalid_Pid then\n-               return;\n-            end if;\n+         --  Look into the running compilation processes for this PID\n \n-            for J in Running_Compile'First .. Outstanding_Compiles loop\n-               if Pid = Running_Compile (J).Pid then\n-                  Data    := Running_Compile (J);\n-                  Project := Running_Compile (J).Project;\n+         for J in Running_Compile'First .. Outstanding_Compiles loop\n+            if Pid = Running_Compile (J).Pid then\n+               Data    := Running_Compile (J);\n+               Project := Running_Compile (J).Project;\n \n-                  if Project /= No_Project then\n-                     Queue.Set_Obj_Dir_Free (Project.Object_Directory.Name);\n-                  end if;\n-\n-                  --  If a mapping file was used by this compilation, get its\n-                  --  file name for reuse by a subsequent compilation.\n-\n-                  if Running_Compile (J).Mapping_File /= No_Mapping_File then\n-                     Comp_Data :=\n-                       Project_Compilation_Htable.Get\n-                         (Project_Compilation, Project);\n-                     Comp_Data.Last_Free_Indexes :=\n-                       Comp_Data.Last_Free_Indexes + 1;\n-                     Comp_Data.Free_Mapping_File_Indexes\n-                       (Comp_Data.Last_Free_Indexes) :=\n-                         Running_Compile (J).Mapping_File;\n-                  end if;\n+               if Project /= No_Project then\n+                  Queue.Set_Obj_Dir_Free (Project.Object_Directory.Name);\n+               end if;\n \n-                  --  To actually remove this Pid and related info from\n-                  --  Running_Compile replace its entry with the last valid\n-                  --  entry in Running_Compile.\n+               --  If a mapping file was used by this compilation, get its file\n+               --  name for reuse by a subsequent compilation.\n+\n+               if Running_Compile (J).Mapping_File /= No_Mapping_File then\n+                  Comp_Data :=\n+                    Project_Compilation_Htable.Get\n+                      (Project_Compilation, Project);\n+                  Comp_Data.Last_Free_Indexes :=\n+                    Comp_Data.Last_Free_Indexes + 1;\n+                  Comp_Data.Free_Mapping_File_Indexes\n+                    (Comp_Data.Last_Free_Indexes) :=\n+                    Running_Compile (J).Mapping_File;\n+               end if;\n \n-                  if J = Outstanding_Compiles then\n-                     null;\n-                  else\n-                     Running_Compile (J) :=\n-                       Running_Compile (Outstanding_Compiles);\n-                  end if;\n+               --  To actually remove this Pid and related info from\n+               --  Running_Compile replace its entry with the last valid\n+               --  entry in Running_Compile.\n \n-                  Outstanding_Compiles := Outstanding_Compiles - 1;\n-                  return;\n+               if J = Outstanding_Compiles then\n+                  null;\n+               else\n+                  Running_Compile (J) :=\n+                    Running_Compile (Outstanding_Compiles);\n                end if;\n-            end loop;\n \n-            --  This child process was not one of our compilation processes;\n-            --  just ignore it for now.\n+               Outstanding_Compiles := Outstanding_Compiles - 1;\n+               exit;\n+            end if;\n+         end loop;\n \n-            --  Why is this commented out code sitting here???\n+         --  If the PID was not found, return with OK set to False\n \n-            --  raise Program_Error;\n-         end loop;\n+         if Data = No_Compilation_Data then\n+            OK := False;\n+         end if;\n       end Await_Compile;\n \n       ---------------------------\n@@ -4638,11 +4631,13 @@ package body Make is\n          Library_Projs.Table (Current) := Proj;\n       end Add_To_Library_Projs;\n \n+   --  Start of processing for Library_Phase\n+\n    begin\n       Library_Projs.Init;\n \n-      --  Put in Library_Projs table all library project file\n-      --  ids when the library need to be rebuilt.\n+      --  Put in Library_Projs table all library project file ids when the\n+      --  library need to be rebuilt.\n \n       Proj1 := Project_Tree.Projects;\n       while Proj1 /= null loop"}, {"sha": "c4faea0e4a162fe56bea90469be5e0e6cc5f0d17", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -205,8 +205,11 @@ package body MLib is\n \n                         S := new String (1 .. Len + 3);\n \n-                        --  Read the file. Note that the loop is not necessary\n-                        --  since the whole file is read at once except on VMS.\n+                        --  Read the file. This loop is probably not necessary\n+                        --  since on most (all?) targets, the whole file is\n+                        --  read in at once, but we have encountered systems\n+                        --  in the past where this was not true, and we retain\n+                        --  this loop in case we encounter that in the future.\n \n                         Curr := S'First;\n                         while Curr <= Len loop"}, {"sha": "554d804af96c7e75e04891b89bb89a51681dcac9", "filename": "gcc/ada/osint-b.adb", "status": "modified", "additions": 10, "deletions": 32, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-b.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,6 @@\n \n with Opt;      use Opt;\n with Output;   use Output;\n-with Targparm; use Targparm;\n \n package body Osint.B is\n \n@@ -75,9 +74,8 @@ package body Osint.B is\n       Findex2   : Natural;\n       Flength   : Natural;\n \n-      Bind_File_Prefix_Len : Natural := 2;\n-      --  Length of binder file prefix (normally set to 2 for b~, but gets\n-      --  reset to 3 for VMS for b__).\n+      Bind_File_Prefix_Len : constant Natural := 2;\n+      --  Length of binder file prefix (2 for b~)\n \n    begin\n       if Output_File_Name /= \"\" then\n@@ -120,10 +118,6 @@ package body Osint.B is\n \n          if Maximum_File_Name_Length > 0 then\n \n-            if OpenVMS_On_Target and then Typ /= 'c' then\n-               Bind_File_Prefix_Len := 3;\n-            end if;\n-\n             --  Make room for the extra two characters in \"b?\"\n \n             while Int (Flength) >\n@@ -139,31 +133,15 @@ package body Osint.B is\n               File_Name (Findex1 .. Findex2 - 1);\n          Name_Buffer (Flength + Bind_File_Prefix_Len + 1) := '.';\n \n-         --  C bind file, name is b_xxx.c\n-\n-         if Typ = 'c' then\n-            Name_Buffer (2) := '_';\n-            Name_Buffer (Flength + 4) := 'c';\n-            Name_Buffer (Flength + 5) := ASCII.NUL;\n-            Name_Len := Flength + 4;\n-\n          --  Ada bind file, name is b~xxx.adb or b~xxx.ads\n-         --  (with __ instead of ~ in VMS)\n-\n-         else\n-            if OpenVMS_On_Target then\n-               Name_Buffer (2) := '_';\n-               Name_Buffer (3) := '_';\n-            else\n-               Name_Buffer (2) := '~';\n-            end if;\n \n-            Name_Buffer (Flength + Bind_File_Prefix_Len + 2) := 'a';\n-            Name_Buffer (Flength + Bind_File_Prefix_Len + 3) := 'd';\n-            Name_Buffer (Flength + Bind_File_Prefix_Len + 4) := Typ;\n-            Name_Buffer (Flength + Bind_File_Prefix_Len + 5) := ASCII.NUL;\n-            Name_Len := Flength + Bind_File_Prefix_Len + 4;\n-         end if;\n+         Name_Buffer (2) := '~';\n+\n+         Name_Buffer (Flength + Bind_File_Prefix_Len + 2) := 'a';\n+         Name_Buffer (Flength + Bind_File_Prefix_Len + 3) := 'd';\n+         Name_Buffer (Flength + Bind_File_Prefix_Len + 4) := Typ;\n+         Name_Buffer (Flength + Bind_File_Prefix_Len + 5) := ASCII.NUL;\n+         Name_Len := Flength + Bind_File_Prefix_Len + 4;\n       end if;\n \n       Bfile := Name_Find;"}, {"sha": "a7f50252f503eaf2afb786e396ee787ac0b85575", "filename": "gcc/ada/osint-b.ads", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint-b.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint-b.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-b.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,17 +44,15 @@ package Osint.B is\n    -- Binder Output --\n    -------------------\n \n-   --  These routines are used by the binder to generate the C or Ada source\n-   --  files containing the binder output. The format of these files is\n-   --  described in package Bindgen.\n+   --  These routines are used by the binder to generate the Ada source files\n+   --  containing the binder output. The format of these files is described in\n+   --  package Bindgen.\n \n    procedure Create_Binder_Output\n      (Output_File_Name : String;\n       Typ              : Character;\n       Bfile            : out Name_Id);\n    --  Creates the binder output file. Typ is one of\n-   --\n-   --    'c'   create output file for case of generating C\n    --    'b'   create body file for case of generating Ada\n    --    's'   create spec file for case of generating Ada\n    --"}, {"sha": "536133f9ff7f2dcb350f3716d2aa0a0352158baf", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -23,9 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Hostparm;\n-with Opt;      use Opt;\n-with Tree_IO;  use Tree_IO;\n+with Opt;     use Opt;\n+with Tree_IO; use Tree_IO;\n \n package body Osint.C is\n \n@@ -127,12 +126,7 @@ package body Osint.C is\n    begin\n       Get_Name_String (Src);\n \n-      if Hostparm.OpenVMS then\n-         Name_Buffer (Name_Len + 1) := '_';\n-      else\n-         Name_Buffer (Name_Len + 1) := '.';\n-      end if;\n-\n+      Name_Buffer (Name_Len + 1) := '.';\n       Name_Len := Name_Len + 1;\n       Name_Buffer (Name_Len + 1 .. Name_Len + Suffix'Length) := Suffix;\n       Name_Len := Name_Len + Suffix'Length;"}, {"sha": "5f0842c346ad943ab245296114b77c5ec3ae680d", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 28, "deletions": 62, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -365,8 +365,9 @@ package body Osint is\n \n          S := new String (1 .. Len);\n \n-         --  Read the file. Note that the loop is not necessary since the\n-         --  whole file is read at once except on VMS.\n+         --  Read the file. Note that the loop is probably not necessary any\n+         --  more since the whole file is read in at once on all targets. But\n+         --  it is harmless and might be needed in future.\n \n          Curr := 1;\n          Actual_Len := Len;\n@@ -473,31 +474,21 @@ package body Osint is\n          Get_Dirs_From_File (Additional_Source_Dir => False);\n       end if;\n \n-      --  On VMS, don't expand the logical name (e.g. environment variable),\n-      --  just put it into Unix (e.g. canonical) format. System services\n-      --  will handle the expansion as part of the file processing.\n+      --  Put path name in canonical form\n \n       for Additional_Source_Dir in False .. True loop\n          if Additional_Source_Dir then\n             Search_Path := Getenv (Ada_Include_Path);\n \n             if Search_Path'Length > 0 then\n-               if Hostparm.OpenVMS then\n-                  Search_Path := To_Canonical_Path_Spec (\"ADA_INCLUDE_PATH:\");\n-               else\n-                  Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n-               end if;\n+               Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n             end if;\n \n          else\n             Search_Path := Getenv (Ada_Objects_Path);\n \n             if Search_Path'Length > 0 then\n-               if Hostparm.OpenVMS then\n-                  Search_Path := To_Canonical_Path_Spec (\"ADA_OBJECTS_PATH:\");\n-               else\n-                  Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n-               end if;\n+               Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n             end if;\n          end if;\n \n@@ -512,9 +503,7 @@ package body Osint is\n       --  For the compiler, if --RTS= was specified, add the runtime\n       --  directories.\n \n-      if RTS_Src_Path_Name /= null\n-        and then RTS_Lib_Path_Name /= null\n-      then\n+      if RTS_Src_Path_Name /= null and then RTS_Lib_Path_Name /= null then\n          Add_Search_Dirs (RTS_Src_Path_Name, Include);\n          Add_Search_Dirs (RTS_Lib_Path_Name, Objects);\n \n@@ -853,13 +842,12 @@ package body Osint is\n                Buffer : String := Name_Buffer (1 .. Name_Len);\n \n             begin\n-               --  Get the file name in canonical case to accept as is names\n-               --  ending with \".EXE\" on VMS and Windows.\n+               --  Get the file name in canonical case to accept as is. Names\n+               --  end with \".EXE\" on Windows.\n \n                Canonical_Case_File_Name (Buffer);\n \n-               --  If Executable does not end with the executable suffix, add\n-               --  it.\n+               --  If Executable doesn't end with the executable suffix, add it\n \n                if Buffer'Length <= Exec_Suffix'Length\n                  or else\n@@ -1183,12 +1171,8 @@ package body Osint is\n \n          if T = Config\n            or else (Debug_Generated_Code\n-                      and then Name_Len > 3\n-                      and then\n-                      (Name_Buffer (Name_Len - 2 .. Name_Len) = \".dg\"\n-                       or else\n-                       (Hostparm.OpenVMS and then\n-                        Name_Buffer (Name_Len - 2 .. Name_Len) = \"_dg\")))\n+                     and then Name_Len > 3\n+                     and then Name_Buffer (Name_Len - 2 .. Name_Len) = \".dg\")\n          then\n             Found := N;\n             Attr.all  := Unknown_Attributes;\n@@ -1292,9 +1276,9 @@ package body Osint is\n       --  Command_Name(Cindex1 .. Cindex2) is now the equivalent of the\n       --  POSIX command \"basename argv[0]\"\n \n-      --  Strip off any versioning information such as found on VMS.\n-      --  This would take the form of TOOL.exe followed by a \";\" or \".\"\n-      --  and a sequence of one or more numbers.\n+      --  Strip off any versioning information found on some systems. This\n+      --  would take the form of TOOL.exe followed by a \";\" or \".\" and a\n+      --  sequence of one or more numbers.\n \n       if Command_Name (Cindex2) in '0' .. '9' then\n          for J in reverse Cindex1 .. Cindex2 loop\n@@ -1702,15 +1686,9 @@ package body Osint is\n    function Is_Directory_Separator (C : Character) return Boolean is\n    begin\n       --  In addition to the default directory_separator allow the '/' to\n-      --  act as separator since this is allowed in MS-DOS, Windows 95/NT,\n-      --  and OS2 ports. On VMS, the situation is more complicated because\n-      --  there are two characters to check for.\n-\n-      return\n-        C = Directory_Separator\n-          or else C = '/'\n-          or else (Hostparm.OpenVMS\n-                    and then (C = ']' or else C = ':'));\n+      --  act as separator since this is allowed in MS-DOS and Windows.\n+\n+      return C = Directory_Separator or else C = '/';\n    end Is_Directory_Separator;\n \n    -------------------------\n@@ -2202,11 +2180,7 @@ package body Osint is\n \n    function Prep_Suffix return String is\n    begin\n-      if Hostparm.OpenVMS then\n-         return \"_prep\";\n-      else\n-         return \".prep\";\n-      end if;\n+      return \".prep\";\n    end Prep_Suffix;\n \n    ------------------\n@@ -2344,8 +2318,9 @@ package body Osint is\n       S := new String (1 .. Len + 1);\n       S (Len + 1) := Path_Separator;\n \n-      --  Read the file. Note that the loop is not necessary since the\n-      --  whole file is read at once except on VMS.\n+      --  Read the file. Note that the loop is probably not necessary since the\n+      --  whole file is read at once but the loop is harmless and that way we\n+      --  are sure to accomodate systems where this is not the case.\n \n       Curr := 1;\n       Actual_Len := Len;\n@@ -2565,9 +2540,9 @@ package body Osint is\n \n          Text := new Text_Buffer (Lo .. Hi);\n \n-         --  Some systems (e.g. VMS) have file types that require one\n-         --  read per line, so read until we get the Len bytes or until\n-         --  there are no more characters.\n+         --  Some systems have file types that require one read per line,\n+         --  so read until we get the Len bytes or until there are no more\n+         --  characters.\n \n          Hi := Lo;\n          loop\n@@ -2698,9 +2673,9 @@ package body Osint is\n       begin\n          --  Allocate source buffer, allowing extra character at end for EOF\n \n-         --  Some systems (e.g. VMS) have file types that require one read per\n-         --  line, so read until we get the Len bytes or until there are no\n-         --  more characters.\n+         --  Some systems have file types that require one read per line,\n+         --  so read until we get the Len bytes or until there are no more\n+         --  characters.\n \n          Hi := Lo;\n          loop\n@@ -2806,15 +2781,6 @@ package body Osint is\n       Library (3 .. 2 + Name'Length)            := Name;\n       Library (3 + Name'Length)                 := '-';\n       Library (4 + Name'Length .. Library'Last) := Library_Version;\n-\n-      if OpenVMS_On_Target then\n-         for K in Library'First + 2 .. Library'Last loop\n-            if Library (K) = '.' or else Library (K) = '-' then\n-               Library (K) := '_';\n-            end if;\n-         end loop;\n-      end if;\n-\n       return Library;\n    end Shared_Lib;\n "}, {"sha": "0ff67381f71beec003d98aeee1cfc7bd4dffffb0", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,9 +43,9 @@ pragma Elaborate_All (System.OS_Lib);\n \n package Osint is\n \n-   Multi_Unit_Index_Character : Character := '~';\n+   Multi_Unit_Index_Character : constant Character := '~';\n    --  The character before the index of the unit in a multi-unit source in ALI\n-   --  and object file names. Changed to '$' on VMS.\n+   --  and object file names.\n \n    Ada_Include_Path          : constant String := \"ADA_INCLUDE_PATH\";\n    Ada_Objects_Path          : constant String := \"ADA_OBJECTS_PATH\";\n@@ -201,33 +201,27 @@ package Osint is\n    function To_Canonical_File_List\n      (Wildcard_Host_File : String;\n       Only_Dirs          : Boolean) return String_Access_List_Access;\n-   --  Expand a wildcard host syntax file or directory specification (e.g. on\n-   --  a VMS host, any file or directory spec that contains: \"*\", or \"%\", or\n-   --  \"...\") and return a list of valid Unix syntax file or directory specs.\n-   --  If Only_Dirs is True, then only return directories.\n+   --  Expand a wildcard host syntax file or directory specification and return\n+   --  a list of valid Unix syntax file or directory specs. If Only_Dirs is\n+   --  True, then only return directories.\n \n    function To_Canonical_Dir_Spec\n      (Host_Dir     : String;\n       Prefix_Style : Boolean) return String_Access;\n-   --  Convert a host syntax directory specification (e.g. on a VMS host:\n-   --  \"SYS$DEVICE:[DIR]\") to canonical (Unix) syntax (e.g. \"/sys$device/dir\").\n-   --  If Prefix_Style then make it a valid file specification prefix. A file\n-   --  specification prefix is a directory specification that can be appended\n-   --  with a simple file specification to yield a valid absolute or relative\n-   --  path to a file. On a conversion to Unix syntax this simply means the\n-   --  spec has a trailing slash (\"/\").\n+   --  Convert a host syntax directory specification to canonical (Unix)\n+   --  syntax. If Prefix_Style then make it a valid file specification prefix.\n+   --  A file specification prefix is a directory specification that can be\n+   --  appended with a simple file specification to yield a valid absolute\n+   --  or relative path to a file. On a conversion to Unix syntax this simply\n+   --  means the spec has a trailing slash (\"/\").\n \n    function To_Canonical_File_Spec\n      (Host_File : String) return String_Access;\n-   --  Convert a host syntax file specification (e.g. on a VMS host:\n-   --  \"SYS$DEVICE:[DIR]FILE.EXT;69 to canonical (Unix) syntax (e.g.\n-   --  \"/sys$device/dir/file.ext.69\").\n+   --  Convert a host syntax file specification to canonical (Unix) syntax\n \n    function To_Canonical_Path_Spec\n      (Host_Path : String) return String_Access;\n-   --  Convert a host syntax Path specification (e.g. on a VMS host:\n-   --  \"SYS$DEVICE:[BAR],DISK$USER:[FOO] to canonical (Unix) syntax (e.g.\n-   --  \"/sys$device/foo:disk$user/foo\").\n+   --  Convert a host syntax Path specification to canonical (Unix) syntax\n \n    function To_Host_Dir_Spec\n      (Canonical_Dir : String;\n@@ -254,7 +248,7 @@ package Osint is\n    --  Returns the runtime shared library in the form -l<name>-<version> where\n    --  version is the GNAT runtime library option for the platform. For example\n    --  this routine called with Name set to \"gnat\" will return \"-lgnat-5.02\"\n-   --  on UNIX and Windows and -lgnat_5_02 on VMS.\n+   --  on UNIX and Windows.\n \n    ---------------------\n    -- File attributes --"}, {"sha": "71b25ad43023fe77b30d9aaf8c21f11ade26888d", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -209,11 +209,8 @@ private\n \n    Buffer : String (1 .. Buffer_Max + 1) := (others => '*');\n    for Buffer'Alignment use 4;\n-   --  Buffer used to build output line. We do line buffering because it\n-   --  is needed for the support of the debug-generated-code option (-gnatD).\n-   --  Historically it was first added because on VMS, line buffering is\n-   --  needed with certain file formats. So in any case line buffering must\n-   --  be retained for this purpose, even if other reasons disappear. Note\n+   --  Buffer used to build output line. We do line buffering because it is\n+   --  needed for the support of the debug-generated-code option (-gnatD). Note\n    --  any attempt to write more output to a line than can fit in the buffer\n    --  will be silently ignored. The alignment clause improves the efficiency\n    --  of the save/restore procedures."}, {"sha": "53b19f53fce03bc94e95db8be4c34b9f6d450398", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1564,9 +1564,7 @@ begin\n                --  mode, check that language-defined units are compiled in GNAT\n                --  mode. For this purpose we do NOT consider renamings in annex\n                --  J as predefined. That allows users to compile their own\n-               --  versions of these files, and in particular, in the VMS\n-               --  implementation, the DEC versions can be substituted for the\n-               --  standard Ada 95 versions. Another exception is System.RPC\n+               --  versions of these files. Another exception is System.RPC\n                --  and its children. This allows a user to supply their own\n                --  communication layer.\n "}, {"sha": "8667e09eb2d04b4d95397163c7c3ce64d69347e0", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Hostparm;\n with Makeutl;  use Makeutl;\n with MLib.Tgt;\n with Opt;      use Opt;\n@@ -1416,18 +1415,10 @@ package body Prj.Conf is\n       <<Process_Config_File>>\n \n       if Automatically_Generated then\n-         if Hostparm.OpenVMS then\n \n-            --  There is no gprconfig on VMS\n-\n-            Raise_Invalid_Config\n-              (\"could not locate any configuration project file\");\n-\n-         else\n-            --  This might raise an Invalid_Config exception\n+         --  This might raise an Invalid_Config exception\n \n             Do_Autoconf;\n-         end if;\n \n       --  If the config file is not auto-generated, warn if there is any --RTS\n       --  switch, but not when the config file is generated in memory."}, {"sha": "7a0ecbebef784cd8c62067bdfcb29e4f8adb30b1", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -24,7 +24,6 @@\n ------------------------------------------------------------------------------\n \n with Fmap;\n-with Hostparm;\n with Makeutl;  use Makeutl;\n with Opt;\n with Osint;    use Osint;\n@@ -1905,8 +1904,6 @@ package body Prj.Env is\n       Add_Default_Dir : Boolean := True;\n       First           : Positive;\n       Last            : Positive;\n-      New_Len         : Positive;\n-      New_Last        : Positive;\n \n       Ada_Project_Path      : constant String := \"ADA_PROJECT_PATH\";\n       Gpr_Project_Path      : constant String := \"GPR_PROJECT_PATH\";\n@@ -2043,35 +2040,6 @@ package body Prj.Env is\n             --  directory correctly.\n \n             Last := Last - 1;\n-\n-         elsif not Hostparm.OpenVMS\n-           or else not Is_Absolute_Path (Name_Buffer (First .. Last))\n-         then\n-            --  On VMS, only expand relative path names, as absolute paths\n-            --  may correspond to multi-valued VMS logical names.\n-\n-            declare\n-               New_Dir : constant String :=\n-                           Normalize_Pathname\n-                             (Name_Buffer (First .. Last),\n-                              Resolve_Links => Opt.Follow_Links_For_Dirs);\n-\n-            begin\n-               --  If the absolute path was resolved and is different from\n-               --  the original, replace original with the resolved path.\n-\n-               if New_Dir /= Name_Buffer (First .. Last)\n-                 and then New_Dir'Length /= 0\n-               then\n-                  New_Len := Name_Len + New_Dir'Length - (Last - First + 1);\n-                  New_Last := First + New_Dir'Length - 1;\n-                  Name_Buffer (New_Last + 1 .. New_Len) :=\n-                    Name_Buffer (Last + 1 .. Name_Len);\n-                  Name_Buffer (First .. New_Last) := New_Dir;\n-                  Name_Len := New_Len;\n-                  Last := New_Last;\n-               end if;\n-            end;\n          end if;\n \n          First := Last + 1;"}, {"sha": "d58f4df9a1d67f965b8d61319207f59cca37a73c", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,6 @@\n ------------------------------------------------------------------------------\n \n with Csets;\n-with Hostparm;\n with Makeutl;  use Makeutl;\n with Opt;\n with Output;\n@@ -1058,11 +1057,9 @@ package body Prj.Makr is\n            Project_File_Extension;\n          Output_Name_Last := Output_Name_Last + Project_File_Extension'Length;\n \n-         --  Back up project file if it already exists (not needed in VMS since\n-         --  versioning of files takes care of this requirement on VMS).\n+         --  Back up project file if it already exists\n \n-         if not Hostparm.OpenVMS\n-           and then not Opt.No_Backup\n+         if not Opt.No_Backup\n            and then Is_Regular_File (Path_Name (1 .. Path_Last))\n          then\n             declare\n@@ -1280,15 +1277,6 @@ package body Prj.Makr is\n                              new String'(Get_Name_String (Tmp_File));\n                         end if;\n \n-                        --  On VMS, a file created with Create_Temp_File cannot\n-                        --  be used to redirect output.\n-\n-                        if Hostparm.OpenVMS then\n-                           Close (FD);\n-                           Delete_File (Temp_File_Name.all, Success);\n-                           FD := Create_Output_Text_File (Temp_File_Name.all);\n-                        end if;\n-\n                         Args (Args'Last) := new String'\n                           (Dir_Name &\n                            Directory_Separator &"}, {"sha": "fb14af79731c75c83013ca9192f01f65a6adb0ca", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -34,7 +34,6 @@ with Prj.Tree; use Prj.Tree;\n with Prj.Util; use Prj.Util;\n with Sinput.P;\n with Snames;   use Snames;\n-with Targparm; use Targparm;\n \n with Ada;                        use Ada;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n@@ -5222,22 +5221,6 @@ package body Prj.Nmsc is\n       Name_Len := The_Name'Length;\n       Name_Buffer (1 .. Name_Len) := The_Name;\n \n-      --  Special cases of children of packages A, G, I and S on VMS\n-\n-      if OpenVMS_On_Target\n-        and then Name_Len > 3\n-        and then Name_Buffer (2 .. 3) = \"__\"\n-        and then\n-          (Name_Buffer (1) = 'a' or else\n-           Name_Buffer (1) = 'g' or else\n-           Name_Buffer (1) = 'i' or else\n-           Name_Buffer (1) = 's')\n-      then\n-         Name_Buffer (2) := '.';\n-         Name_Buffer (3 .. Name_Len - 1) := Name_Buffer (4 .. Name_Len);\n-         Name_Len := Name_Len - 1;\n-      end if;\n-\n       Real_Name := Name_Find;\n \n       if Is_Reserved (Real_Name) then"}, {"sha": "6699c4fd076b91732bf27ee0e3def83291227ccc", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -276,8 +276,7 @@ package body Prj is\n \n       --  If any of the environment variables ADA_PRJ_INCLUDE_FILE or\n       --  ADA_PRJ_OBJECTS_FILE has been set, then reset their value to\n-      --  the empty string. On VMS, this has the effect of deassigning\n-      --  the logical names.\n+      --  the empty string.\n \n       if Shared.Private_Part.Current_Source_Path_File /= No_Path then\n          Setenv (Project_Include_Path_File, \"\");"}, {"sha": "329cc6d21159bc7135ee4a90b32672a436d06186", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -441,10 +441,8 @@ package Prj is\n    No_Source : constant Source_Id := null;\n \n    type Path_Syntax_Kind is\n-     (Canonical,\n-      --  Unix style\n-      Host);\n-      --  Host specific syntax, for example on VMS (the default)\n+     (Canonical, -- Unix style\n+      Host);     -- Host specific syntax\n \n    --  The following record describes the configuration of a language\n \n@@ -484,8 +482,7 @@ package Prj is\n       --  unit in a multi-source file, in the object file name.\n \n       Path_Syntax : Path_Syntax_Kind := Host;\n-      --  Value may be Canonical (Unix style) or Host (host syntax, for example\n-      --  on VMS for DEC C).\n+      --  Value may be Canonical (Unix style) or Host (host syntax)\n \n       Source_File_Switches : Name_List_Index := No_Name_List;\n       --  Optional switches to be put before the source file. The source file\n@@ -2012,9 +2009,8 @@ private\n       Current_Source_Path_File : Path_Name_Type := No_Path;\n       --  Current value of project source path file env var. Used to avoid\n       --  setting the env var to the same value. When different from No_Path,\n-      --  this indicates that logical names (VMS) or environment variables were\n-      --  created and should be deassigned to avoid polluting the environment\n-      --  on VMS. This is for gnatmake only.\n+      --  this indicates that environment variables were created and should be\n+      --  deassigned to avoid polluting the environment. For gnatmake only.\n \n       Current_Object_Path_File : Path_Name_Type := No_Path;\n       --  Current value of project object path file env var. Used to avoid"}, {"sha": "5e8861e4bac5062e251cdc9c784c0d17e75cc278", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1477,30 +1477,6 @@ package body Repinfo is\n          when -2 =>\n             Write_Str (\"reference\");\n \n-         when -3 =>\n-            Write_Str (\"descriptor\");\n-\n-         when -4 =>\n-            Write_Str (\"descriptor (UBS)\");\n-\n-         when -5 =>\n-            Write_Str (\"descriptor (UBSB)\");\n-\n-         when -6 =>\n-            Write_Str (\"descriptor (UBA)\");\n-\n-         when -7 =>\n-            Write_Str (\"descriptor (S)\");\n-\n-         when -8 =>\n-            Write_Str (\"descriptor (SB)\");\n-\n-         when -9 =>\n-            Write_Str (\"descriptor (A)\");\n-\n-         when -10 =>\n-            Write_Str (\"descriptor (NCA)\");\n-\n          when others =>\n             raise Program_Error;\n       end case;"}, {"sha": "a31215f960bce267099983f8ce5b4bf3bbfd6397", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1126,10 +1126,10 @@ package body Rtsfind is\n \n       procedure Check_RPC;\n       --  Reject programs that make use of distribution features not supported\n-      --  on the current target. Also check that the PCS is compatible with\n-      --  the code generator version. On such targets (VMS, Vxworks, others?)\n-      --  we provide a minimal body for System.Rpc that only supplies an\n-      --  implementation of Partition_Id.\n+      --  on the current target. Also check that the PCS is compatible with the\n+      --  code generator version. On such targets (Vxworks, others?) we provide\n+      --  a minimal body for System.Rpc that only supplies an implementation of\n+      --  Partition_Id.\n \n       function Find_Local_Entity (E : RE_Id) return Entity_Id;\n       --  This function is used when entity E is in this compilation's main"}, {"sha": "e1853fa21b0a1025bdda8b64926af45da4872f89", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -376,7 +376,6 @@ package Rtsfind is\n       System_Val_WChar,\n       System_Vax_Float_Operations,\n       System_Version_Control,\n-      System_VMS_Exception_Table,\n       System_WCh_StW,\n       System_WCh_WtS,\n       System_Wid_Bool,\n@@ -1690,8 +1689,6 @@ package Rtsfind is\n      RE_Version_String,                  -- System.Version_Control\n      RE_Get_Version_String,              -- System.Version_Control\n \n-     RE_Register_VMS_Exception,          -- System.VMS_Exception_Table\n-\n      RE_String_To_Wide_String,           -- System.WCh_StW\n      RE_String_To_Wide_Wide_String,      -- System.WCh_StW\n \n@@ -2977,8 +2974,6 @@ package Rtsfind is\n      RE_Version_String                   => System_Version_Control,\n      RE_Get_Version_String               => System_Version_Control,\n \n-     RE_Register_VMS_Exception           => System_VMS_Exception_Table,\n-\n      RE_String_To_Wide_String            => System_WCh_StW,\n      RE_String_To_Wide_Wide_String       => System_WCh_StW,\n "}, {"sha": "1a7aba55531161105d06c8027cd439bce89753d3", "filename": "gcc/ada/s-excmac-gcc.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-excmac-gcc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-excmac-gcc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-excmac-gcc.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2013, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2013-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -147,8 +147,7 @@ package System.Exceptions.Machine is\n    --  maintain anyway.\n \n    type GCC_Exception_Access is access all Unwind_Exception;\n-   --  Pointer to a GCC exception. Do not use convention C as on VMS this\n-   --  would imply the use of 32-bits pointers.\n+   --  Pointer to a GCC exception\n \n    procedure Unwind_DeleteException (Excp : not null GCC_Exception_Access);\n    pragma Import (C, Unwind_DeleteException, \"_Unwind_DeleteException\");"}, {"sha": "259b9d1089f9945929da72fccc36cff162983724", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -823,8 +823,7 @@ package body System.Fat_Gen is\n       Most_Significant_Word : constant Rep_Index :=\n                                 Rep_Last * Standard'Default_Bit_Order;\n       --  Finding the location of the Exponent_Word is a bit tricky. In general\n-      --  we assume Word_Order = Bit_Order. This expression needs to be refined\n-      --  for VMS.\n+      --  we assume Word_Order = Bit_Order.\n \n       Exponent_Factor : constant Float_Word :=\n                           2**(Float_Word'Size - 1) /"}, {"sha": "216d79bbd159fcaaae03846a9702a8f22bd5a393", "filename": "gcc/ada/s-mastop.ads", "status": "modified", "additions": 21, "deletions": 24, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-mastop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-mastop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,10 +40,10 @@ with System.Storage_Elements;\n package System.Machine_State_Operations is\n \n    subtype Code_Loc is System.Address;\n-   --  Code location used in building exception tables and for call\n-   --  addresses when propagating an exception (also traceback table)\n-   --  Values of this type are created by using Label'Address or\n-   --  extracted from machine states using Get_Code_Loc.\n+   --  Code location used in building exception tables and for call addresses\n+   --  when propagating an exception (also traceback table) Values of this\n+   --  type are created by using Label'Address or extracted from machine\n+   --  states using Get_Code_Loc.\n \n    type Machine_State is new System.Address;\n    --  The table based exception handling approach (see a-except.adb) isolates\n@@ -66,42 +66,39 @@ package System.Machine_State_Operations is\n \n    --  The initial value of type Machine_State is created by the low level\n    --  routine that actually raises an exception using the special builtin\n-   --  _builtin_machine_state. This value will typically encode the value\n-   --  of the program counter, and relevant registers. The following\n-   --  operations are defined on Machine_State values:\n+   --  _builtin_machine_state. This value will typically encode the value of\n+   --  the program counter, and relevant registers. The following operations\n+   --  are defined on Machine_State values:\n \n    function Get_Code_Loc (M : Machine_State) return Code_Loc;\n-   --  This function extracts the program counter value from a machine\n-   --  state, which the caller uses for searching the exception tables,\n-   --  and also for recording entries in the traceback table. The call\n-   --  returns a value of Null_Loc if the machine state represents the\n-   --  outer level, or some other frame for which no information can be\n-   --  provided.\n+   --  This function extracts the program counter value from a machine state,\n+   --  which the caller uses for searching the exception tables, and also for\n+   --  recording entries in the traceback table. The call returns a value of\n+   --  Null_Loc if the machine state represents the outer level, or some other\n+   --  frame for which no information can be provided.\n \n    procedure Pop_Frame (M : Machine_State);\n    --  This procedure pops the machine state M so that it represents the\n-   --  call point, as though the current subprogram had returned. It\n-   --  changes only the value referenced by M, and does not affect\n-   --  the current stack environment.\n+   --  call point, as though the current subprogram had returned. It changes\n+   --  only the value referenced by M, and does not affect the current stack\n+   --  environment.\n \n    function Fetch_Code (Loc : Code_Loc) return Code_Loc;\n-   --  Some architectures (notably VMS) use a descriptor to describe\n-   --  a subprogram address. This function computes the actual starting\n+   --  Some architectures (notably HPUX) use a descriptor to describe a\n+   --  subprogram address. This function computes the actual starting\n    --  address of the code from Loc.\n    --\n-   --  ??? This function will go away when 'Code_Address is fixed on VMS.\n-   --\n    --  Do not add pragma Inline to this function: there is a curious\n    --  interaction between rtsfind and front-end inlining. The exception\n    --  declaration in s-auxdec calls rtsfind, which forces several other system\n    --  packages to be compiled. Some of those have a pragma Inline, and we\n    --  compile the corresponding bodies so that inlining can take place. One\n    --  of these packages is s-mastop, which depends on s-auxdec, which is still\n    --  being compiled: we have not seen all the declarations in it yet, so we\n-   --  get confused semantic errors.\n+   --  get confused semantic errors ???\n \n    procedure Set_Machine_State (M : Machine_State);\n-   --  This routine sets M from the current machine state. It is called\n-   --  when an exception is initially signalled to initialize the state.\n+   --  This routine sets M from the current machine state. It is called when an\n+   --  exception is initially signalled to initialize the state.\n \n end System.Machine_State_Operations;"}, {"sha": "3cf170a4718302c0cb085563e910e3ccb9c62b07", "filename": "gcc/ada/s-parame-ae653.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame-ae653.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame-ae653.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-ae653.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -109,14 +109,12 @@ package System.Parameters is\n \n    long_bits : constant := Long_Integer'Size;\n    --  Number of bits in type long and unsigned_long. The normal convention\n-   --  is that this is the same as type Long_Integer, but this is not true\n-   --  of all targets. For example, in OpenVMS long /= Long_Integer.\n+   --  is that this is the same as type Long_Integer, but this may not be true\n+   --  of all targets.\n \n    ptr_bits  : constant := Standard'Address_Size;\n    subtype C_Address is System.Address;\n-   --  Number of bits in Interfaces.C pointers, normally a standard address,\n-   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n-   --  with legacy code.\n+   --  Number of bits in Interfaces.C pointers, normally a standard address\n \n    C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n    --  Name of runtime function used to allocate such a pointer"}, {"sha": "319195644e5c331f5ab4721a43b284e5aa75bcc5", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -107,14 +107,12 @@ package System.Parameters is\n \n    long_bits : constant := Long_Integer'Size;\n    --  Number of bits in type long and unsigned_long. The normal convention\n-   --  is that this is the same as type Long_Integer, but this is not true\n-   --  of all targets. For example, in OpenVMS long /= Long_Integer.\n+   --  is that this is the same as type Long_Integer, but this may not be true\n+   --  of all targets.\n \n    ptr_bits  : constant := Standard'Address_Size;\n    subtype C_Address is System.Address;\n-   --  Number of bits in Interfaces.C pointers, normally a standard address,\n-   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n-   --  with legacy code.\n+   --  Number of bits in Interfaces.C pointers, normally a standard address\n \n    C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n    --  Name of runtime function used to allocate such a pointer"}, {"sha": "10769cd696c5f95e9503a0bf786c4c20bfb73bd9", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -109,14 +109,12 @@ package System.Parameters is\n \n    long_bits : constant := Long_Integer'Size;\n    --  Number of bits in type long and unsigned_long. The normal convention\n-   --  is that this is the same as type Long_Integer, but this is not true\n-   --  of all targets. For example, in OpenVMS long /= Long_Integer.\n+   --  is that this is the same as type Long_Integer, but this may not be true\n+   --  of all targets.\n \n    ptr_bits  : constant := Standard'Address_Size;\n    subtype C_Address is System.Address;\n-   --  Number of bits in Interfaces.C pointers, normally a standard address,\n-   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n-   --  with legacy code.\n+   --  Number of bits in Interfaces.C pointers, normally a standard address\n \n    C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n    --  Name of runtime function used to allocate such a pointer"}, {"sha": "2c2a2fadac92b69081f291db37ac0358f8da0f84", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -109,14 +109,12 @@ package System.Parameters is\n \n    long_bits : constant := Long_Integer'Size;\n    --  Number of bits in type long and unsigned_long. The normal convention\n-   --  is that this is the same as type Long_Integer, but this is not true\n-   --  of all targets. For example, in OpenVMS long /= Long_Integer.\n+   --  is that this is the same as type Long_Integer, but this may not be true\n+   --  of all targets.\n \n    ptr_bits  : constant := Standard'Address_Size;\n    subtype C_Address is System.Address;\n-   --  Number of bits in Interfaces.C pointers, normally a standard address,\n-   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n-   --  with legacy code.\n+   --  Number of bits in Interfaces.C pointers, normally a standard address\n \n    C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n    --  Name of runtime function used to allocate such a pointer"}, {"sha": "a339a0e9e1ff33addebcc14dd9d9b1177c5471a4", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -140,8 +140,8 @@ package System.Soft_Links is\n    --  Undefer task abort (non-tasking case, does nothing)\n \n    procedure Abort_Handler_NT;\n-   --  Handle task abort (non-tasking case, does nothing). Currently, only VMS\n-   --  uses this.\n+   --  Handle task abort (non-tasking case, does nothing). Currently, no port\n+   --  makes use of this, but we retain the interface for possible future use.\n \n    procedure Update_Exception_NT (X : EO := Current_Target_Exception);\n    --  Handle exception setting. This routine is provided for targets that"}, {"sha": "1cb5f92a23c7abd3f3aeae96510eed1bc233a055", "filename": "gcc/ada/s-stoele.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-stoele.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-stoele.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,8 @@ package body System.Storage_Elements is\n \n    --  Conversion to/from address\n \n-   --  Note qualification below of To_Address to avoid ambiguities on VMS\n+   --  Note qualification below of To_Address to avoid ambiguities systems\n+   --  where Address is a visible integer type.\n \n    function To_Address is\n      new Ada.Unchecked_Conversion (Storage_Offset, Address);"}, {"sha": "871ab5abccee363f3413173b65d40b8004b20e16", "filename": "gcc/ada/s-tasini.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -510,7 +510,7 @@ package body System.Tasking.Initialization is\n \n             --  The task is blocked on a system call waiting for the\n             --  completion event. In this case Abort_Task may need to take\n-            --  special action in order to succeed. Example system: VMS.\n+            --  special action in order to succeed.\n \n          then\n             Abort_Task (T);"}, {"sha": "271f5d1c30180de31a41ec5e2ac19f15c2312ebe", "filename": "gcc/ada/s-taspri-dummy.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-dummy.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-dummy.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-dummy.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,13 +53,8 @@ package System.Task_Primitives is\n    end record;\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform"}, {"sha": "137f34b8aedc13d847035b0bdce191659eb52a86", "filename": "gcc/ada/s-taspri-hpux-dce.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-hpux-dce.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-hpux-dce.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-hpux-dce.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,13 +63,8 @@ package System.Task_Primitives is\n    --  Ada_Task_Control_Block.\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform"}, {"sha": "a4306254144062179f407ea09e7b0c07987adfea", "filename": "gcc/ada/s-taspri-mingw.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-mingw.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,13 +62,8 @@ package System.Task_Primitives is\n    --  Ada_Task_Control_Block.\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform"}, {"sha": "a7708b2b3006d9b5d3ec604d81df125f9d024666", "filename": "gcc/ada/s-taspri-posix-noaltstack.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-posix-noaltstack.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-posix-noaltstack.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-posix-noaltstack.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2011, AdaCore                     --\n+--                     Copyright (C) 1995-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,13 +65,8 @@ package System.Task_Primitives is\n    --  Ada_Task_Control_Block.\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform"}, {"sha": "7eb0781569df449fc850bfa19bc3740642667cf7", "filename": "gcc/ada/s-taspri-posix.ads", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-posix.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -64,13 +64,8 @@ package System.Task_Primitives is\n    --  Ada_Task_Control_Block.\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := System.OS_Interface.Alternate_Stack_Size;\n    --  Import value from System.OS_Interface"}, {"sha": "6b2df7ff31f9b75a121781d820058e3036192d8c", "filename": "gcc/ada/s-taspri-solaris.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-solaris.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -70,13 +70,8 @@ package System.Task_Primitives is\n    --  Ada_Task_Control_Block.\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform"}, {"sha": "4e3eba5fc45443eeaf1e0ec9b755243ee70c5f11", "filename": "gcc/ada/s-taspri-vxworks.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fs-taspri-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-vxworks.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,13 +61,8 @@ package System.Task_Primitives is\n    --  Ada_Task_Control_Block.\n \n    subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n    Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n+   --  Type used for task addresses and its size\n \n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform"}, {"sha": "792757065d64c90d1fa02628d4adb032c26d5937", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1140,9 +1140,7 @@ package body Sem_Ch12 is\n          --  Propagate visible entity to operator node, either from a\n          --  given actual or from a default.\n \n-         if Is_Entity_Name (Actual)\n-           and then Nkind (Expr) in N_Op\n-         then\n+         if Is_Entity_Name (Actual) and then Nkind (Expr) in N_Op then\n             Set_Entity (Expr, Entity (Actual));\n          end if;\n \n@@ -1681,7 +1679,6 @@ package body Sem_Ch12 is\n                         if Present (Match)\n                           and then Nkind (Match) = N_Operator_Symbol\n                         then\n-\n                            --  If the name is a default, find its visible\n                            --  entity at the point of instantiation.\n \n@@ -10400,8 +10397,7 @@ package body Sem_Ch12 is\n             --  to be compiled with checks off.\n \n             --  Note that we do NOT apply this criterion to children of GNAT\n-            --  (or on VMS, children of DEC). The latter units must suppress\n-            --  checks explicitly if this is needed.\n+            --  The latter units must suppress checks explicitly if needed.\n \n             if Is_Predefined_File_Name\n                  (Unit_File_Name (Get_Source_Unit (Gen_Decl)))"}, {"sha": "d5573273e8709a37a390c39fd1fd9060424a3da6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -3187,10 +3187,9 @@ package body Sem_Ch4 is\n             then\n                --  The actual can be compatible with the formal, but we must\n                --  also check that the context is not an address type that is\n-               --  visibly an integer type, as is the case in VMS_64. In this\n-               --  case the use of literals is illegal, except in the body of\n-               --  descendents of system, where arithmetic operations on\n-               --  address are of course used.\n+               --  visibly an integer type. In this case the use of literals is\n+               --  illegal, except in the body of descendents of system, where\n+               --  arithmetic operations on address are of course used.\n \n                if Has_Compatible_Type (Actual, Etype (Formal))\n                  and then\n@@ -6807,9 +6806,8 @@ package body Sem_Ch4 is\n             --  Remove interpretations that treat literals as addresses. This\n             --  is never appropriate, even when Address is defined as a visible\n             --  Integer type. The reason is that we would really prefer Address\n-            --  to behave as a private type, even in this case, which is there\n-            --  only to accommodate oddities of VMS address sizes. If Address\n-            --  is a visible integer type, we get lots of overload ambiguities.\n+            --  to behave as a private type, even in this case. If Address is a\n+            --  visible integer type, we get lots of overload ambiguities.\n \n             if Nkind (N) in N_Binary_Op then\n                declare"}, {"sha": "1e55e33171024beb3bffdd48052650e1425379a0", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1698,6 +1698,28 @@ package body Sem_Ch5 is\n       Typ : Entity_Id;\n       Bas : Entity_Id;\n \n+      procedure Check_Reverse_Iteration (Typ : Entity_Id);\n+      --  For an iteration over a container, if the loop carries the Reverse\n+      --  indicator, verify that the container type has an Iterate aspect that\n+      --  implements the reversible iterator interface.\n+\n+      -----------------------------\n+      -- Check_Reverse_Iteration --\n+      -----------------------------\n+\n+      procedure Check_Reverse_Iteration (Typ : Entity_Id) is\n+      begin\n+         if Reverse_Present (N)\n+           and then not Is_Array_Type (Typ)\n+           and then not Is_Reversible_Iterator (Typ)\n+         then\n+            Error_Msg_NE\n+              (\"container type does not support reverse iteration\", N, Typ);\n+         end if;\n+      end Check_Reverse_Iteration;\n+\n+   --   Start of processing for  Analyze_iterator_Specification\n+\n    begin\n       Enter_Name (Def_Id);\n \n@@ -1725,6 +1747,45 @@ package body Sem_Ch5 is\n \n       if Of_Present (N) then\n          Set_Related_Expression (Def_Id, Iter_Name);\n+\n+         --  For a container, the iterator is specified through the aspect.\n+\n+         if not Is_Array_Type (Etype (Iter_Name)) then\n+            declare\n+               Iterator : constant Entity_Id :=\n+                  Find_Value_Of_Aspect\n+                    (Etype (Iter_Name), Aspect_Default_Iterator);\n+               I  : Interp_Index;\n+               It : Interp;\n+\n+            begin\n+               if No (Iterator) then\n+                  null;   --  error reported below.\n+\n+               elsif not Is_Overloaded (Iterator) then\n+                  Check_Reverse_Iteration (Etype (Iterator));\n+\n+               --  If Iterator is overloaded, use reversible iterator if\n+               --  one is available.\n+\n+               elsif Is_Overloaded (Iterator) then\n+                  Get_First_Interp (Iterator, I, It);\n+                  while Present (It.Nam) loop\n+                     if Ekind (It.Nam) = E_Function\n+                       and then Is_Reversible_Iterator (Etype (It.Nam))\n+                     then\n+                        Set_Etype (Iterator, It.Typ);\n+                        Set_Entity (Iterator, It.Nam);\n+                        exit;\n+                     end if;\n+\n+                     Get_Next_Interp (I, It);\n+                  end loop;\n+\n+                  Check_Reverse_Iteration (Etype (Iterator));\n+               end if;\n+            end;\n+         end if;\n       end if;\n \n       --  If the domain of iteration is an expression, create a declaration for\n@@ -1785,10 +1846,17 @@ package body Sem_Ch5 is\n                return;\n             end if;\n \n+            if not Of_Present (N) then\n+               Check_Reverse_Iteration (Typ);\n+            end if;\n+\n             --  The name in the renaming declaration may be a function call.\n             --  Indicate that it does not come from source, to suppress\n             --  spurious warnings on renamings of parameterless functions,\n             --  a common enough idiom in user-defined iterators.\n+            --  The entity of the renaming must be a variable, because user-\n+            --  defined Iterate function may have in-out parameters, even\n+            --  if predefined ones do not.\n \n             Decl :=\n               Make_Object_Renaming_Declaration (Loc,\n@@ -1801,6 +1869,7 @@ package body Sem_Ch5 is\n             Rewrite (Name (N), New_Occurrence_Of (Id, Loc));\n             Set_Etype (Id, Typ);\n             Set_Etype (Name (N), Typ);\n+            Set_Ekind (Id, E_Variable);\n          end;\n \n       --  Container is an entity or an array with uncontrolled components, or\n@@ -1846,6 +1915,10 @@ package body Sem_Ch5 is\n          else\n             Resolve (Iter_Name, Etype (Iter_Name));\n          end if;\n+\n+         if not Of_Present (N) then\n+            Check_Reverse_Iteration (Etype (Iter_Name));\n+         end if;\n       end if;\n \n       --  Get base type of container, for proper retrieval of Cursor type"}, {"sha": "640aaa673414579d0f69647c54f3b5e76608f777", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 5, "deletions": 36, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1668,13 +1668,6 @@ package body Sem_Eval is\n                          N_Null)\n          then\n             return True;\n-\n-         --  Any reference to Null_Parameter is known at compile time. No\n-         --  other attribute references (that have not already been folded)\n-         --  are known at compile time.\n-\n-         elsif K = N_Attribute_Reference then\n-            return Attribute_Name (Op) = Name_Null_Parameter;\n          end if;\n       end if;\n \n@@ -2657,11 +2650,7 @@ package body Sem_Eval is\n          Right_Int : constant Uint := Expr_Value (Right);\n \n       begin\n-         --  VMS includes bitwise operations on signed types\n-\n-         if Is_Modular_Integer_Type (Etype (N))\n-           or else Is_VMS_Operator (Entity (N))\n-         then\n+         if Is_Modular_Integer_Type (Etype (N)) then\n             declare\n                Left_Bits  : Bits (0 .. UI_To_Int (Esize (Etype (N))) - 1);\n                Right_Bits : Bits (0 .. UI_To_Int (Esize (Etype (N))) - 1);\n@@ -4035,13 +4024,6 @@ package body Sem_Eval is\n          pragma Assert (Is_Fixed_Point_Type (Underlying_Type (Etype (N))));\n          return Corresponding_Integer_Value (N);\n \n-      --  Peculiar VMS case, if we have xxx'Null_Parameter, return zero\n-\n-      elsif Kind = N_Attribute_Reference\n-        and then Attribute_Name (N) = Name_Null_Parameter\n-      then\n-         return Uint_0;\n-\n       --  Otherwise must be character literal\n \n       else\n@@ -4114,13 +4096,6 @@ package body Sem_Eval is\n          pragma Assert (Is_Fixed_Point_Type (Underlying_Type (Etype (N))));\n          Val := Corresponding_Integer_Value (N);\n \n-      --  Peculiar VMS case, if we have xxx'Null_Parameter, return zero\n-\n-      elsif Kind = N_Attribute_Reference\n-        and then Attribute_Name (N) = Name_Null_Parameter\n-      then\n-         Val := Uint_0;\n-\n       --  Otherwise must be character literal\n \n       else\n@@ -4182,18 +4157,12 @@ package body Sem_Eval is\n       elsif Kind = N_Integer_Literal then\n          return UR_From_Uint (Expr_Value (N));\n \n-      --  Peculiar VMS case, if we have xxx'Null_Parameter, return 0.0\n+      --  Here, we have a node that cannot be interpreted as a compile time\n+      --  constant. That is definitely an error.\n \n-      elsif Kind = N_Attribute_Reference\n-        and then Attribute_Name (N) = Name_Null_Parameter\n-      then\n-         return Ureal_0;\n+      else\n+         raise Program_Error;\n       end if;\n-\n-      --  If we fall through, we have a node that cannot be interpreted as a\n-      --  compile time constant. That is definitely an error.\n-\n-      raise Program_Error;\n    end Expr_Value_R;\n \n    ------------------"}, {"sha": "f61b47aed94e1a272e56c2bfcaf499e4c5aa2bfe", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -38,7 +38,6 @@ with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n-with Targparm; use Targparm;\n with Uintp;    use Uintp;\n \n package body Sem_Intr is\n@@ -146,12 +145,6 @@ package body Sem_Intr is\n          elsif String_Length (Strval (Expr_Value_S (Arg1))) = 0 then\n             Error_Msg_NE\n               (\"call to & does not permit null string\", N, Nam);\n-\n-         elsif OpenVMS_On_Target\n-           and then String_Length (Strval (Expr_Value_S (Arg1))) > 31\n-         then\n-            Error_Msg_NE\n-              (\"argument in call to & must be 31 characters or less\", N, Nam);\n          end if;\n \n       --  Check for the case of freeing a non-null object which will raise"}, {"sha": "e37aefab02069aaf1e12eabe1f5945525bd4410c", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 12, "deletions": 35, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -23,16 +23,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Atree;    use Atree;\n-with Einfo;    use Einfo;\n-with Errout;   use Errout;\n-with Namet;    use Namet;\n-with Sem;      use Sem;\n-with Sem_Aux;  use Sem_Aux;\n-with Sinfo;    use Sinfo;\n-with Snames;   use Snames;\n-with Stand;    use Stand;\n-with Targparm; use Targparm;\n+with Atree;   use Atree;\n+with Einfo;   use Einfo;\n+with Errout;  use Errout;\n+with Namet;   use Namet;\n+with Sem;     use Sem;\n+with Sem_Aux; use Sem_Aux;\n+with Sinfo;   use Sinfo;\n+with Snames;  use Snames;\n \n package body Sem_Mech is\n \n@@ -93,18 +91,10 @@ package body Sem_Mech is\n       Mech : Mechanism_Type;\n       Enod : Node_Id)\n    is\n-   begin\n-      --  Right now we only do some checks for functions returning arguments\n-      --  by descriptor. Probably mode checks need to be added here ???\n-\n-      if Mech in Descriptor_Codes and then not Is_Formal (Ent) then\n-         if Is_Record_Type (Etype (Ent)) then\n-            Error_Msg_N (\"??records cannot be returned by Descriptor\", Enod);\n-            return;\n-         end if;\n-      end if;\n+      pragma Unreferenced (Enod);\n \n-      --  If we fall through, all checks have passed\n+   begin\n+      --  Right now we don't do any checks, should we do more ???\n \n       Set_Mechanism (Ent, Mech);\n    end Set_Mechanism_With_Checks;\n@@ -314,23 +304,10 @@ package body Sem_Mech is\n \n                when Convention_Fortran =>\n \n-                  --  In OpenVMS, pass character and string types using\n-                  --  Short_Descriptor(S)\n-\n-                  if OpenVMS_On_Target\n-                    and then (Root_Type (Typ) = Standard_Character\n-                               or else\n-                                 (Is_Array_Type (Typ)\n-                                   and then\n-                                     Root_Type (Component_Type (Typ)) =\n-                                                     Standard_Character))\n-                  then\n-                     Set_Mechanism (Formal, By_Short_Descriptor_S);\n-\n                   --  Access types are passed by default (presumably this\n                   --  will mean they are passed by copy)\n \n-                  elsif Is_Access_Type (Typ) then\n+                  if Is_Access_Type (Typ) then\n                      null;\n \n                   --  For now, we pass all other parameters by reference."}, {"sha": "464c9bd9e753c975d8eb0ad52a1a08d84b730f8b", "filename": "gcc/ada/sem_mech.ads", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_mech.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_mech.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -87,46 +87,9 @@ package Sem_Mech is\n    --  special information) is determined by the backend in accordance with\n    --  requirements imposed by the ABI as interpreted for Ada.\n \n-   By_Descriptor            : constant Mechanism_Type := -3;\n-   By_Descriptor_UBS        : constant Mechanism_Type := -4;\n-   By_Descriptor_UBSB       : constant Mechanism_Type := -5;\n-   By_Descriptor_UBA        : constant Mechanism_Type := -6;\n-   By_Descriptor_S          : constant Mechanism_Type := -7;\n-   By_Descriptor_SB         : constant Mechanism_Type := -8;\n-   By_Descriptor_A          : constant Mechanism_Type := -9;\n-   By_Descriptor_NCA        : constant Mechanism_Type := -10;\n-   By_Short_Descriptor      : constant Mechanism_Type := -11;\n-   By_Short_Descriptor_UBS  : constant Mechanism_Type := -12;\n-   By_Short_Descriptor_UBSB : constant Mechanism_Type := -13;\n-   By_Short_Descriptor_UBA  : constant Mechanism_Type := -14;\n-   By_Short_Descriptor_S    : constant Mechanism_Type := -15;\n-   By_Short_Descriptor_SB   : constant Mechanism_Type := -16;\n-   By_Short_Descriptor_A    : constant Mechanism_Type := -17;\n-   By_Short_Descriptor_NCA  : constant Mechanism_Type := -18;\n-   --  These values are used only in OpenVMS ports of GNAT. Pass by descriptor\n-   --  is forced, as described in the OpenVMS ABI. The suffix indicates the\n-   --  descriptor type:\n-   --\n-   --     UBS    unaligned bit string\n-   --     UBSB   aligned bit string with arbitrary bounds\n-   --     UBA    unaligned bit array\n-   --     S      string, also a scalar or access type parameter\n-   --     SB     string with arbitrary bounds\n-   --     A      contiguous array\n-   --     NCA    non-contiguous array\n-   --\n-   --  Note: the form with no suffix is used if the Import/Export pragma uses\n-   --  the simple form of the mechanism name (no descriptor type is supplied).\n-   --  In this case the back end assigns a descriptor type based on the Ada\n-   --  type in accordance with the OpenVMS ABI.\n-\n-   pragma Assert (Mechanism_Type'First = -18);\n+   pragma Assert (Mechanism_Type'First = -2);\n    --  Check definition in types is right!\n \n-   subtype Descriptor_Codes is Mechanism_Type\n-     range By_Short_Descriptor_NCA .. By_Descriptor;\n-   --  Subtype including all descriptor mechanisms\n-\n    --  All the above special values are non-positive. Positive values for\n    --  Mechanism_Type values have a special meaning. They are used only in\n    --  the case of records, as a result of the use of the C_Pass_By_Copy"}, {"sha": "54f8f230fa63727bd7a7ef8c854c544c3057c322", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 62, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -7312,13 +7312,16 @@ package body Sem_Prag is\n          Arg_Result_Mechanism         : Node_Id := Empty;\n          Arg_First_Optional_Parameter : Node_Id := Empty)\n       is\n+         pragma Unreferenced (Arg_First_Optional_Parameter);\n+         --  We ignore the First_Optional_Parameter argument. It was only\n+         --  relevant for VMS anyway, and otherwise ignored.\n+\n          Ent       : Entity_Id;\n          Def_Id    : Entity_Id;\n          Hom_Id    : Entity_Id;\n          Formal    : Entity_Id;\n          Ambiguous : Boolean;\n          Match     : Boolean;\n-         Dval      : Node_Id;\n \n          function Same_Base_Type\n           (Ptype  : Node_Id;\n@@ -7699,63 +7702,6 @@ package body Sem_Prag is\n                end if;\n             end;\n          end if;\n-\n-         --  Process First_Optional_Parameter argument if present. We have\n-         --  already checked that this is only allowed for the Import case.\n-\n-         if Present (Arg_First_Optional_Parameter) then\n-            if Nkind (Arg_First_Optional_Parameter) /= N_Identifier then\n-               Error_Pragma_Arg\n-                 (\"first optional parameter must be formal parameter name\",\n-                  Arg_First_Optional_Parameter);\n-            end if;\n-\n-            Formal := First_Formal (Ent);\n-            loop\n-               if No (Formal) then\n-                  Error_Pragma_Arg\n-                    (\"specified formal parameter& not found\",\n-                     Arg_First_Optional_Parameter);\n-               end if;\n-\n-               exit when Chars (Formal) =\n-                         Chars (Arg_First_Optional_Parameter);\n-\n-               Next_Formal (Formal);\n-            end loop;\n-\n-            Set_First_Optional_Parameter (Ent, Formal);\n-\n-            --  Check specified and all remaining formals have right form\n-\n-            while Present (Formal) loop\n-               if Ekind (Formal) /= E_In_Parameter then\n-                  Error_Msg_NE\n-                    (\"optional formal& is not of mode in!\",\n-                     Arg_First_Optional_Parameter, Formal);\n-\n-               else\n-                  Dval := Default_Value (Formal);\n-\n-                  if No (Dval) then\n-                     Error_Msg_NE\n-                       (\"optional formal& does not have default value!\",\n-                        Arg_First_Optional_Parameter, Formal);\n-\n-                  elsif Compile_Time_Known_Value_Or_Aggr (Dval) then\n-                     null;\n-\n-                  else\n-                     Error_Msg_FE\n-                       (\"default value for optional formal& is non-static!\",\n-                        Arg_First_Optional_Parameter, Formal);\n-                  end if;\n-               end if;\n-\n-               Set_Is_Optional_Parameter (Formal);\n-               Next_Formal (Formal);\n-            end loop;\n-         end if;\n       end Process_Extended_Import_Export_Subprogram_Pragma;\n \n       --------------------------\n@@ -10847,10 +10793,9 @@ package body Sem_Prag is\n             Check_Arg_Count (0);\n \n             --  If Address is a private type, then set the flag to allow\n-            --  integer address values. If Address is not private, then\n-            --  this pragma has no purpose, so it is simply ignored. Not\n-            --  clear if there are any such targets now (VMS used to be\n-            --  one such, but leave test in for the future anyway).\n+            --  integer address values. If Address is not private, then this\n+            --  pragma has no purpose, so it is simply ignored. Not clear if\n+            --  there are any such targets now.\n \n             if Opt.Address_Is_Private then\n                Opt.Allow_Integer_Address := True;"}, {"sha": "38e25f01ee138226e30dcc41bbc9340e3b06b39c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 13, "deletions": 42, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -225,8 +225,7 @@ package body Sem_Res is\n    --  operators, not ones that are intrinsic imports of back-end builtins.\n \n    procedure Resolve_Intrinsic_Unary_Operator (N : Node_Id; Typ : Entity_Id);\n-   --  Ditto, for unary operators (arithmetic ones and \"not\" on signed\n-   --  integer types for VMS).\n+   --  Ditto, for arithmetic unary operators\n \n    procedure Rewrite_Operator_As_Call (N : Node_Id; Nam : Entity_Id);\n    --  If an operator node resolves to a call to a user-defined operator,\n@@ -7990,11 +7989,10 @@ package body Sem_Res is\n    --------------------------------\n \n    procedure Resolve_Intrinsic_Operator  (N : Node_Id; Typ : Entity_Id) is\n-      Btyp    : constant Entity_Id := Base_Type (Underlying_Type (Typ));\n-      Op      : Entity_Id;\n-      Orig_Op : constant Entity_Id := Entity (N);\n-      Arg1    : Node_Id;\n-      Arg2    : Node_Id;\n+      Btyp : constant Entity_Id := Base_Type (Underlying_Type (Typ));\n+      Op   : Entity_Id;\n+      Arg1 : Node_Id;\n+      Arg2 : Node_Id;\n \n       function Convert_Operand (Opnd : Node_Id) return Node_Id;\n       --  If the operand is a literal, it cannot be the expression in a\n@@ -8074,31 +8072,19 @@ package body Sem_Res is\n         or else Typ /= Etype (Right_Opnd (N))\n       then\n          --  Add explicit conversion where needed, and save interpretations in\n-         --  case operands are overloaded. If the context is a VMS operation,\n-         --  assert that the conversion is legal (the operands have the proper\n-         --  types to select the VMS intrinsic). Note that in rare cases the\n-         --  VMS operators may be visible, but the default System is being used\n-         --  and Address is a private type.\n+         --  case operands are overloaded.\n \n          Arg1 := Convert_To (Typ, Left_Opnd  (N));\n          Arg2 := Convert_To (Typ, Right_Opnd (N));\n \n          if Nkind (Arg1) = N_Type_Conversion then\n             Save_Interps (Left_Opnd (N), Expression (Arg1));\n-\n-            if Is_VMS_Operator (Orig_Op) then\n-               Set_Conversion_OK (Arg1);\n-            end if;\n          else\n             Save_Interps (Left_Opnd (N), Arg1);\n          end if;\n \n          if Nkind (Arg2) = N_Type_Conversion then\n             Save_Interps (Right_Opnd (N), Expression (Arg2));\n-\n-            if Is_VMS_Operator (Orig_Op) then\n-               Set_Conversion_OK (Arg2);\n-            end if;\n          else\n             Save_Interps (Right_Opnd (N), Arg2);\n          end if;\n@@ -8170,18 +8156,13 @@ package body Sem_Res is\n          B_Typ := Base_Type (Typ);\n       end if;\n \n-      --  OK if this is a VMS-specific intrinsic operation\n-\n-      if Is_VMS_Operator (Entity (N)) then\n-         null;\n-\n       --  The following test is required because the operands of the operation\n       --  may be literals, in which case the resulting type appears to be\n       --  compatible with a signed integer type, when in fact it is compatible\n       --  only with modular types. If the context itself is universal, the\n       --  operation is illegal.\n \n-      elsif not Valid_Boolean_Arg (Typ) then\n+      if not Valid_Boolean_Arg (Typ) then\n          Error_Msg_N (\"invalid context for logical operation\", N);\n          Set_Etype (N, Any_Type);\n          return;\n@@ -8934,12 +8915,9 @@ package body Sem_Res is\n          B_Typ := Base_Type (Typ);\n       end if;\n \n-      if Is_VMS_Operator (Entity (N)) then\n-         null;\n-\n       --  Straightforward case of incorrect arguments\n \n-      elsif not Valid_Boolean_Arg (Typ) then\n+      if not Valid_Boolean_Arg (Typ) then\n          Error_Msg_N (\"invalid operand type for operator&\", N);\n          Set_Etype (N, Any_Type);\n          return;\n@@ -11098,15 +11076,15 @@ package body Sem_Res is\n             if Is_Floating_Point_Type (Opnd_Typ)\n               and then\n                 (Is_Integer_Type (Target_Typ)\n-                   or else (Is_Fixed_Point_Type (Target_Typ)\n-                              and then Conversion_OK (N)))\n+                  or else (Is_Fixed_Point_Type (Target_Typ)\n+                            and then Conversion_OK (N)))\n               and then Nkind (Operand) = N_Attribute_Reference\n-              and then (Attribute_Name (Operand) = Name_Rounding\n-                          or else Attribute_Name (Operand) = Name_Truncation)\n+              and then Nam_In (Attribute_Name (Operand), Name_Rounding,\n+                                                         Name_Truncation)\n             then\n                declare\n                   Truncate : constant Boolean :=\n-                    Attribute_Name (Operand) = Name_Truncation;\n+                               Attribute_Name (Operand) = Name_Truncation;\n                begin\n                   Rewrite (Operand,\n                     Relocate_Node (First (Expressions (Operand))));\n@@ -11515,13 +11493,6 @@ package body Sem_Res is\n             --  this context, but which cannot be removed by type checking,\n             --  because the context does not impose a type.\n \n-            --  When compiling for VMS, spurious ambiguities can be produced\n-            --  when arithmetic operations have a literal operand and return\n-            --  System.Address or a descendant of it. These ambiguities are\n-            --  otherwise resolved by the context, but for conversions there\n-            --  is no context type and the removal of the spurious operations\n-            --  must be done explicitly here.\n-\n             --  The node may be labelled overloaded, but still contain only one\n             --  interpretation because others were discarded earlier. If this\n             --  is the case, retain the single interpretation if legal."}, {"sha": "f460898e5de95cabedeaaaef1e08656841fad985", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6022,8 +6022,7 @@ package body Sem_Util is\n                --  be a static subtype, since otherwise it would have\n                --  been diagnosed as illegal.\n \n-               elsif Is_Entity_Name (Choice) and then\n-                     Is_Type (Entity (Choice))\n+               elsif Is_Entity_Name (Choice) and then Is_Type (Entity (Choice))\n                then\n                   exit Search when Is_In_Range (Expr, Etype (Choice),\n                                                 Assume_Valid => False);\n@@ -11798,25 +11797,6 @@ package body Sem_Util is\n       return False;\n    end Is_Variable_Size_Record;\n \n-   ---------------------\n-   -- Is_VMS_Operator --\n-   ---------------------\n-\n-   function Is_VMS_Operator (Op : Entity_Id) return Boolean is\n-   begin\n-      --  The VMS operators are declared in a child of System that is loaded\n-      --  through pragma Extend_System. In some rare cases a program is run\n-      --  with this extension but without indicating that the target is VMS.\n-\n-      return Ekind (Op) = E_Function\n-        and then Is_Intrinsic_Subprogram (Op)\n-        and then\n-          ((Present_System_Aux and then Scope (Op) = System_Aux_Id)\n-             or else\n-              (True_VMS_Target\n-                and then Scope (Scope (Op)) = RTU_Entity (System)));\n-   end Is_VMS_Operator;\n-\n    -----------------\n    -- Is_Variable --\n    -----------------"}, {"sha": "a3b8cb4fc3686fa24043358768b6ed51d09372a9", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1359,10 +1359,6 @@ package Sem_Util is\n    function Is_Variable_Size_Record (E : Entity_Id) return Boolean;\n    --  Returns true if E has variable size components\n \n-   function Is_VMS_Operator (Op : Entity_Id) return Boolean;\n-   --  Determine whether an operator is one of the intrinsics defined\n-   --  in the DEC system extension.\n-\n    function Is_Variable\n      (N                 : Node_Id;\n       Use_Original_Node : Boolean := True) return Boolean;"}, {"sha": "ccbf87c58a9f0835197ac311d8be4519d301b97b", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -2488,15 +2488,6 @@ package body Sinfo is\n       return List3 (N);\n    end Parameter_Associations;\n \n-   function Parameter_List_Truncated\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Function_Call\n-        or else NT (N).Nkind = N_Procedure_Call_Statement);\n-      return Flag17 (N);\n-   end Parameter_List_Truncated;\n-\n    function Parameter_Specifications\n       (N : Node_Id) return List_Id is\n    begin\n@@ -5695,15 +5686,6 @@ package body Sinfo is\n       Set_List3_With_Parent (N, Val);\n    end Set_Parameter_Associations;\n \n-   procedure Set_Parameter_List_Truncated\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Function_Call\n-        or else NT (N).Nkind = N_Procedure_Call_Statement);\n-      Set_Flag17 (N, Val);\n-   end Set_Parameter_List_Truncated;\n-\n    procedure Set_Parameter_Specifications\n       (N : Node_Id; Val : List_Id) is\n    begin"}, {"sha": "9f20397b32f6e7732029211abc50523d0564bf52", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -1888,21 +1888,6 @@ package Sinfo is\n    --    list of discrete choices, except that of course it cannot contain an\n    --    N_Others_Choice entry.\n \n-   --  Parameter_List_Truncated (Flag17-Sem)\n-   --    Present in N_Function_Call and N_Procedure_Call_Statement nodes. Set\n-   --    (for OpenVMS ports of GNAT only) if the parameter list is truncated\n-   --    as a result of a First_Optional_Parameter specification in one of the\n-   --    pragmas Import_Function, Import_Procedure, or Import_Valued_Procedure.\n-   --    The truncation is done by the expander by removing trailing parameters\n-   --    from the argument list, in accordance with the set of rules allowing\n-   --    such parameter removal. In particular, parameters can be removed\n-   --    working from the end of the parameter list backwards up to and\n-   --    including the entry designated by First_Optional_Parameter in the\n-   --    Import pragma. Parameters can be removed if they are implicit and the\n-   --    default value is known at compile time value, including the use of\n-   --    the Null_Parameter attribute, or if explicit parameter values are\n-   --    present that match the corresponding defaults.\n-\n    --  Parent_Spec (Node4-Sem)\n    --    For a library unit that is a child unit spec (package or subprogram\n    --    declaration, generic declaration or instantiation, or library level\n@@ -5156,7 +5141,6 @@ package Sinfo is\n       --  Controlling_Argument (Node1-Sem) (set to Empty if not dispatching)\n       --  Do_Tag_Check (Flag13-Sem)\n       --  No_Elaboration_Check (Flag14-Sem)\n-      --  Parameter_List_Truncated (Flag17-Sem)\n       --  ABE_Is_Certain (Flag18-Sem)\n       --  plus fields for expression\n \n@@ -5188,7 +5172,6 @@ package Sinfo is\n       --  Is_Expanded_Build_In_Place_Call (Flag11-Sem)\n       --  Do_Tag_Check (Flag13-Sem)\n       --  No_Elaboration_Check (Flag14-Sem)\n-      --  Parameter_List_Truncated (Flag17-Sem)\n       --  ABE_Is_Certain (Flag18-Sem)\n       --  plus fields for expression\n \n@@ -9433,9 +9416,6 @@ package Sinfo is\n    function Parameter_Associations\n      (N : Node_Id) return List_Id;    -- List3\n \n-   function Parameter_List_Truncated\n-     (N : Node_Id) return Boolean;    -- Flag17\n-\n    function Parameter_Specifications\n      (N : Node_Id) return List_Id;    -- List3\n \n@@ -10456,9 +10436,6 @@ package Sinfo is\n    procedure Set_Parameter_Associations\n      (N : Node_Id; Val : List_Id);            -- List3\n \n-   procedure Set_Parameter_List_Truncated\n-     (N : Node_Id; Val : Boolean := True);    -- Flag17\n-\n    procedure Set_Parameter_Specifications\n      (N : Node_Id; Val : List_Id);            -- List3\n \n@@ -12719,7 +12696,6 @@ package Sinfo is\n    pragma Inline (Out_Present);\n    pragma Inline (Parameter_Associations);\n    pragma Inline (Parameter_Specifications);\n-   pragma Inline (Parameter_List_Truncated);\n    pragma Inline (Parameter_Type);\n    pragma Inline (Parent_Spec);\n    pragma Inline (Position);\n@@ -13055,7 +13031,6 @@ package Sinfo is\n    pragma Inline (Set_Others_Discrete_Choices);\n    pragma Inline (Set_Out_Present);\n    pragma Inline (Set_Parameter_Associations);\n-   pragma Inline (Set_Parameter_List_Truncated);\n    pragma Inline (Set_Parameter_Specifications);\n    pragma Inline (Set_Parameter_Type);\n    pragma Inline (Set_Parent_Spec);"}, {"sha": "6c3d58254fe13b790ce8230e367784d2075a86c0", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -92,8 +92,8 @@ package body Sinput.C is\n \n       Len := Integer (File_Length (Source_File_FD));\n \n-      --  Set Hi so that length is one more than the physical length,\n-      --  allowing for the extra EOF character at the end of the buffer\n+      --  Set Hi so that length is one more than the physical length, allowing\n+      --  for the extra EOF character at the end of the buffer\n \n       Hi := Lo + Source_Ptr (Len);\n \n@@ -112,9 +112,9 @@ package body Sinput.C is\n       begin\n          --  Allocate source buffer, allowing extra character at end for EOF\n \n-         --  Some systems (e.g. VMS) have file types that require one\n-         --  read per line, so read until we get the Len bytes or until\n-         --  there are no more characters.\n+         --  Some systems have file types that require one read per line,\n+         --  so read until we get the Len bytes or until there are no more\n+         --  characters.\n \n          Hi := Lo;\n          loop\n@@ -126,8 +126,8 @@ package body Sinput.C is\n          Actual_Ptr (Hi) := EOF;\n \n          --  Now we need to work out the proper virtual origin pointer to\n-         --  return. This is exactly Actual_Ptr (0)'Address, but we have\n-         --  to be careful to suppress checks to compute this address.\n+         --  return. This is exactly Actual_Ptr (0)'Address, but we have to\n+         --  be careful to suppress checks to compute this address.\n \n          declare\n             pragma Suppress (All_Checks);"}, {"sha": "a1d24576839ad0ec811bf7e759030d720b048db0", "filename": "gcc/ada/symbols.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsymbols.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fsymbols.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,10 +91,9 @@ package Symbols is\n \n    package Processing is\n \n-   --  This package, containing a single visible procedure Process, exists so\n-   --  that it can be a subunits, for some platforms (such as VMS Alpha and\n-   --  IA64), the body of package Symbols is common, while the subunit\n-   --  Processing is not.\n+   --  This package, containing a single visible procedure Process, exists\n+   --  so that it can be a subunits, for some platforms, the body of package\n+   --  Symbols is common, while the subunit Processing is not.\n \n       procedure Process\n         (Object_File : String;"}, {"sha": "b161466c4176e363169c832c34a90121b01e2688", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -716,13 +716,6 @@ package body Targparm is\n          end if;\n       end loop Line_Loop;\n \n-      --  Now that OpenVMS_On_Target has been given its definitive value,\n-      --  change the multi-unit index character from '~' to '$' for OpenVMS.\n-\n-      if OpenVMS_On_Target then\n-         Multi_Unit_Index_Character := '$';\n-      end if;\n-\n       if Fatal then\n          raise Unrecoverable_Error;\n       end if;"}, {"sha": "0f21b9973c02454f6201eaf6c759ee248ff7c309", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 8, "deletions": 39, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -603,49 +603,18 @@ package body Treepr is\n \n             begin\n                case M is\n-                  when Default_Mechanism\n-                                    => Write_Str (\"Default\");\n-                  when By_Copy\n-                                    => Write_Str (\"By_Copy\");\n-                  when By_Reference\n-                                    => Write_Str (\"By_Reference\");\n-                  when By_Descriptor\n-                                    => Write_Str (\"By_Descriptor\");\n-                  when By_Descriptor_UBS\n-                                    => Write_Str (\"By_Descriptor_UBS\");\n-                  when By_Descriptor_UBSB\n-                                    => Write_Str (\"By_Descriptor_UBSB\");\n-                  when By_Descriptor_UBA\n-                                    => Write_Str (\"By_Descriptor_UBA\");\n-                  when By_Descriptor_S\n-                                    => Write_Str (\"By_Descriptor_S\");\n-                  when By_Descriptor_SB\n-                                    => Write_Str (\"By_Descriptor_SB\");\n-                  when By_Descriptor_A\n-                                    => Write_Str (\"By_Descriptor_A\");\n-                  when By_Descriptor_NCA\n-                                    => Write_Str (\"By_Descriptor_NCA\");\n-                  when By_Short_Descriptor\n-                                    => Write_Str (\"By_Short_Descriptor\");\n-                  when By_Short_Descriptor_UBS\n-                                    => Write_Str (\"By_Short_Descriptor_UBS\");\n-                  when By_Short_Descriptor_UBSB\n-                                    => Write_Str (\"By_Short_Descriptor_UBSB\");\n-                  when By_Short_Descriptor_UBA\n-                                    => Write_Str (\"By_Short_Descriptor_UBA\");\n-                  when By_Short_Descriptor_S\n-                                    => Write_Str (\"By_Short_Descriptor_S\");\n-                  when By_Short_Descriptor_SB\n-                                    => Write_Str (\"By_Short_Descriptor_SB\");\n-                  when By_Short_Descriptor_A\n-                                    => Write_Str (\"By_Short_Descriptor_A\");\n-                  when By_Short_Descriptor_NCA\n-                                    => Write_Str (\"By_Short_Descriptor_NCA\");\n+                  when Default_Mechanism        =>\n+                     Write_Str (\"Default\");\n+\n+                  when By_Copy                  =>\n+                     Write_Str (\"By_Copy\");\n+\n+                  when By_Reference             =>\n+                     Write_Str (\"By_Reference\");\n \n                   when 1 .. Mechanism_Type'Last =>\n                      Write_Str (\"By_Copy if size <= \");\n                      Write_Int (Int (M));\n-\n                end case;\n             end;\n "}, {"sha": "d723248821e83ebd5652c3c0df29e0ccbfe49dd0", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -795,11 +795,11 @@ package Types is\n    --  mechanism. See specification of Sem_Mech for full details. The following\n    --  subtype is used to represent values of this type:\n \n-   subtype Mechanism_Type is Int range -18 .. Int'Last;\n+   subtype Mechanism_Type is Int range -2 .. Int'Last;\n    --  Type used to represent a mechanism value. This is a subtype rather than\n    --  a type to avoid some annoying processing problems with certain routines\n    --  in Einfo (processing them to create the corresponding C). The values in\n-   --  the range -18 .. 0 are used to represent mechanism types declared as\n+   --  the range -2 .. 0 are used to represent mechanism types declared as\n    --  named constants in the spec of Sem_Mech. Positive values are used for\n    --  the case of a pragma C_Pass_By_Copy that sets a threshold value for the\n    --  mechanism to be used. For example if pragma C_Pass_By_Copy (32) is given"}, {"sha": "25a775f93c04a4b30f5c676007abc2d128a0d10e", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,6 @@\n \n with Types;    use Types;\n with Osint;\n-with Hostparm;\n \n with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n@@ -1136,17 +1135,6 @@ package body Xr_Tabls is\n \n          Buffer (Read_Ptr) := EOF;\n          Contents := new String'(Buffer (1 .. Read_Ptr));\n-\n-         --  Things are not simple on VMS due to the plethora of file types\n-         --  and organizations. It seems clear that there shouldn't be more\n-         --  bytes read than are contained in the file though.\n-\n-         if (Hostparm.OpenVMS and then Read_Ptr > Length + 1)\n-           or else (not Hostparm.OpenVMS and then Read_Ptr /= Length + 1)\n-         then\n-            raise Ada.Text_IO.End_Error;\n-         end if;\n-\n          Close (FD);\n       end;\n    end Read_File;"}, {"sha": "03949ced0bf938d1a6ae0beb2b9a8015a0b4c225", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5b62b0c751de386bc4faf8648503b48d1d3c9b/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -288,9 +288,7 @@ package Xr_Tabls is\n    --  character will be added to the returned Contents to simplify parsing.\n    --  Name_Error is raised if the file was not found. End_Error is raised if\n    --  the file could not be read correctly. For most systems correct reading\n-   --  means that the number of bytes read is equal to the file size. The\n-   --  exception is OpenVMS where correct reading means that the number of\n-   --  bytes read is less than or equal to the file size.\n+   --  means that the number of bytes read is equal to the file size.\n \n private\n    type Project_File (Src_Dir_Length, Obj_Dir_Length : Natural) is record"}]}