{"sha": "92fa7608a4401aa21b378c3cb786098e32677825", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJmYTc2MDhhNDQwMWFhMjFiMzc4YzNjYjc4NjA5OGUzMjY3NzgyNQ==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-11-19T15:30:04Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-11-19T15:30:04Z"}, "message": "re PR bootstrap/42096 (lto.c:289:7: error: implicit declaration of function 'strtoll')\n\n2009-11-19  Rafael Avila de Espindola  <espindola@google.com>\n\n\tPR bootstrap/42096\n\t* lto-plugin.c (claim_file_handler): Print offsets in hex.\n\n2009-11-19  Rafael Avila de Espindola  <espindola@google.com>\n\n\tPR bootstrap/42096\n\t* lto-elf.c (lto_elf_file_open): Use lto_parse_hex.\n\t* lto.c (lto_parse_hex): New.\n\t(lto_resolution_read): Use lto_parse_hex.\n\t* lto.h (lto_parse_hex): New.\n\nFrom-SVN: r154330", "tree": {"sha": "2bceb2caf367c96e78ef2f30f853dfb57daaa53c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bceb2caf367c96e78ef2f30f853dfb57daaa53c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92fa7608a4401aa21b378c3cb786098e32677825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92fa7608a4401aa21b378c3cb786098e32677825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92fa7608a4401aa21b378c3cb786098e32677825", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92fa7608a4401aa21b378c3cb786098e32677825/comments", "author": null, "committer": null, "parents": [{"sha": "986ad1338d0634b347cf39619964ceb4d4850713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/986ad1338d0634b347cf39619964ceb4d4850713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/986ad1338d0634b347cf39619964ceb4d4850713"}], "stats": {"total": 59, "additions": 43, "deletions": 16}, "files": [{"sha": "6792d183a51f29a426e6863543f1c8d0dac8b54f", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=92fa7608a4401aa21b378c3cb786098e32677825", "patch": "@@ -1,3 +1,11 @@\n+2009-11-19  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\tPR bootstrap/42096\n+\t* lto-elf.c (lto_elf_file_open): Use lto_parse_hex.\n+\t* lto.c (lto_parse_hex): New.\n+\t(lto_resolution_read): Use lto_parse_hex.\n+\t* lto.h (lto_parse_hex): New.\n+\n 2009-11-17  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* lto-elf.c (lto_file_init): Add offset argument."}, {"sha": "7c5453a41bf143b215e2908bde814c97c1aa41be", "filename": "gcc/lto/lto-elf.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2Flto-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2Flto-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-elf.c?ref=92fa7608a4401aa21b378c3cb786098e32677825", "patch": "@@ -559,14 +559,8 @@ lto_elf_file_open (const char *filename, bool writable)\n       fname = (char *) xmalloc (offset_p - filename + 1);\n       memcpy (fname, filename, offset_p - filename);\n       fname[offset_p - filename] = '\\0';\n-      offset_p++;\n-      errno = 0;\n-      offset = strtoll (offset_p, NULL, 10);\n-      if (errno != 0)\n-        {\n-          error (\"could not parse offset %s\", offset_p);\n-          goto fail;\n-        }\n+      offset_p += 3; /* skip the @0x */\n+      offset = lto_parse_hex (offset_p);\n       /* elf_rand expects the offset to point to the ar header, not the\n          object itself. Subtract the size of the ar header (60 bytes).\n          We don't uses sizeof (struct ar_hd) to avoid including ar.h */"}, {"sha": "4d7c3079b49357520147095a1d364c1214edb731", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=92fa7608a4401aa21b378c3cb786098e32677825", "patch": "@@ -249,6 +249,28 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n   lto_data_in_delete (data_in);\n }\n \n+/* strtoll is not portable. */\n+int64_t\n+lto_parse_hex (const char *p) {\n+  uint64_t ret = 0;\n+  for (; *p != '\\0'; ++p)\n+    {\n+      char c = *p;\n+      unsigned char part;\n+      ret <<= 4;\n+      if (c >= '0' && c <= '9')\n+        part = c - '0';\n+      else if (c >= 'a' && c <= 'f')\n+        part = c - 'a' + 10;\n+      else if (c >= 'A' && c <= 'F')\n+        part = c - 'A' + 10;\n+      else\n+        internal_error (\"could not parse hex number\");\n+      ret |= part;\n+    }\n+  return ret;\n+}\n+\n /* Read resolution for file named FILE_NAME. The resolution is read from\n    RESOLUTION. An array with the symbol resolution is returned. The array\n    size is written to SIZE. */\n@@ -280,15 +302,12 @@ lto_resolution_read (FILE *resolution, lto_file *file)\n   if (file->offset != 0)\n     {\n       int t;\n-      char offset_p[21];\n-      long long offset;\n-      t = fscanf (resolution, \"@%20s\", offset_p);\n+      char offset_p[17];\n+      int64_t offset;\n+      t = fscanf (resolution, \"@0x%16s\", offset_p);\n       if (t != 1)\n         internal_error (\"could not parse file offset\");\n-      errno = 0;\n-      offset = strtoll(offset_p, NULL, 10);\n-      if (errno != 0)\n-        internal_error (\"could not parse file offset\");\n+      offset = lto_parse_hex (offset_p);\n       if (offset != file->offset)\n         internal_error (\"unexpected offset\");\n     }"}, {"sha": "0c4305a1731c637fbd59146b4c7a7f6f03ed5fa0", "filename": "gcc/lto/lto.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2Flto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa7608a4401aa21b378c3cb786098e32677825/gcc%2Flto%2Flto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.h?ref=92fa7608a4401aa21b378c3cb786098e32677825", "patch": "@@ -57,5 +57,6 @@ struct lto_section_slot\n   size_t len;\n };\n \n+int64_t lto_parse_hex (const char *p);\n \n #endif /* LTO_H */"}, {"sha": "d6e939419af96121b12c6ac3639f1a5bfac2387d", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa7608a4401aa21b378c3cb786098e32677825/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa7608a4401aa21b378c3cb786098e32677825/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=92fa7608a4401aa21b378c3cb786098e32677825", "patch": "@@ -1,3 +1,8 @@\n+2009-11-19  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\tPR bootstrap/42096\n+\t* lto-plugin.c (claim_file_handler): Print offsets in hex.\n+\n 2009-11-12  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* lto-plugin.c (write_resolution): Assume resolution_file is set."}, {"sha": "4a8a0ff5b7d975c9ddc3db2e8cb9c0f6dd63c657", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa7608a4401aa21b378c3cb786098e32677825/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa7608a4401aa21b378c3cb786098e32677825/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=92fa7608a4401aa21b378c3cb786098e32677825", "patch": "@@ -551,7 +551,7 @@ claim_file_handler (const struct ld_plugin_input_file *file, int *claimed)\n       Elf *archive;\n       off_t offset;\n       /* We pass the offset of the actual file, not the archive header. */\n-      int t = asprintf (&objname, \"%s@%\" PRId64, file->name,\n+      int t = asprintf (&objname, \"%s@0x%\" PRIx64, file->name,\n                         (int64_t) file->offset);\n       check (t >= 0, LDPL_FATAL, \"asprintf failed\");\n       lto_file.name = objname;"}]}