{"sha": "e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg0NGMwNGUzNWNhMmZlOWVlMmY3NThhNzIwZGQzN2NiZTgxZTdlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-12-08T08:42:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-12-08T08:44:19Z"}, "message": "tree-optimization/98180 - fix BIT_INSERT_EXPR sequence vectorization\n\nThis adds a missing check for the first inserted value.\n\n2020-12-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/98180\n\t* tree-vect-slp.c (vect_slp_check_for_constructors): Check the\n\tfirst inserted value has a def.", "tree": {"sha": "5f22afafdab729d24354ba1820df497c458f4f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f22afafdab729d24354ba1820df497c458f4f0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1370f8c0d0760714fe77d55c1fa16045ffa69f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1370f8c0d0760714fe77d55c1fa16045ffa69f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1370f8c0d0760714fe77d55c1fa16045ffa69f2"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a2757e707ffdd42eb15341811d80d984604164bf", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "patch": "@@ -4193,10 +4193,12 @@ vect_slp_check_for_constructors (bb_vec_info bb_vinfo)\n       else if (gimple_assign_rhs_code (assign) == BIT_INSERT_EXPR\n \t       && VECTOR_TYPE_P (TREE_TYPE (rhs))\n \t       && TYPE_VECTOR_SUBPARTS (TREE_TYPE (rhs)).is_constant ()\n+\t       && TYPE_VECTOR_SUBPARTS (TREE_TYPE (rhs)).to_constant () > 1\n \t       && integer_zerop (gimple_assign_rhs3 (assign))\n \t       && useless_type_conversion_p\n \t\t    (TREE_TYPE (TREE_TYPE (rhs)),\n-\t\t     TREE_TYPE (gimple_assign_rhs2 (assign))))\n+\t\t     TREE_TYPE (gimple_assign_rhs2 (assign)))\n+\t       && bb_vinfo->lookup_def (gimple_assign_rhs2 (assign)))\n \t{\n \t  /* We start to match on insert to lane zero but since the\n \t     inserts need not be ordered we'd have to search both"}]}