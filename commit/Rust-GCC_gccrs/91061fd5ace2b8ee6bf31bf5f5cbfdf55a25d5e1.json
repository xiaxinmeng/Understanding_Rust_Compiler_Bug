{"sha": "91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1", "node_id": "C_kwDOANBUbNoAKDkxMDYxZmQ1YWNlMmI4ZWU2YmYzMWJmNWY1Y2JmZGY1NWEyNWQ1ZTE", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-13T08:28:48Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-13T08:28:48Z"}, "message": "aarch64: Disassociate ls64 from simd\n\nThe ls64-related move expanders and splits required TARGET_SIMD.\nThat isn't necessary, since the 64-byte values are stored entirely\nin GPRs.  (The associated define_insn was already correct.)\n\nI wondered about moving the patterns to aarch64.md, but it wasn't\nclear-cut.\n\ngcc/\n\t* config/aarch64/aarch64-simd.md (movv8di): Remove TARGET_SIMD\n\tcondition.  Likewise for the related define_split.  Tweak formatting.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/acle/ls64_asm_2.c: New test.", "tree": {"sha": "3624448232b52bf6c63e98df488863165ed3e60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3624448232b52bf6c63e98df488863165ed3e60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eec36f27c3ca85d3b6b469e7161b63b69a5823ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eec36f27c3ca85d3b6b469e7161b63b69a5823ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eec36f27c3ca85d3b6b469e7161b63b69a5823ac"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "d4662c76a582898ffae8bcaad6536d27167898cc", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1", "patch": "@@ -7087,7 +7087,7 @@\n (define_expand \"movv8di\"\n   [(set (match_operand:V8DI 0 \"nonimmediate_operand\")\n \t(match_operand:V8DI 1 \"general_operand\"))]\n-  \"TARGET_SIMD\"\n+  \"\"\n {\n   if (can_create_pseudo_p () && MEM_P (operands[0]))\n     operands[1] = force_reg (V8DImode, operands[1]);\n@@ -7479,7 +7479,7 @@\n (define_split\n   [(set (match_operand:V8DI 0 \"nonimmediate_operand\")\n         (match_operand:V8DI 1 \"general_operand\"))]\n-  \"TARGET_SIMD && reload_completed\"\n+  \"reload_completed\"\n   [(const_int 0)]\n {\n   if (register_operand (operands[0], V8DImode)\n@@ -7489,15 +7489,15 @@\n       DONE;\n     }\n   else if ((register_operand (operands[0], V8DImode)\n-            && memory_operand (operands[1], V8DImode))\n-           || (memory_operand (operands[0], V8DImode)\n-            && register_operand (operands[1], V8DImode)))\n+\t    && memory_operand (operands[1], V8DImode))\n+\t   || (memory_operand (operands[0], V8DImode)\n+\t       && register_operand (operands[1], V8DImode)))\n     {\n       for (int offset = 0; offset < 64; offset += 16)\n-        emit_move_insn (simplify_gen_subreg (TImode, operands[0],\n-                                             V8DImode, offset),\n-                        simplify_gen_subreg (TImode, operands[1],\n-                                             V8DImode, offset));\n+\temit_move_insn (simplify_gen_subreg (TImode, operands[0],\n+\t\t\t\t\t     V8DImode, offset),\n+\t\t\tsimplify_gen_subreg (TImode, operands[1],\n+\t\t\t\t\t     V8DImode, offset));\n       DONE;\n     }\n   else"}, {"sha": "1b4277180a6bd14827e9b9009270ca064d8a042b", "filename": "gcc/testsuite/gcc.target/aarch64/acle/ls64_asm_2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fls64_asm_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fls64_asm_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fls64_asm_2.c?ref=91061fd5ace2b8ee6bf31bf5f5cbfdf55a25d5e1", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+#pragma GCC target \"+ls64+nofp\"\n+\n+#include \"ls64_asm.c\"\n+\n+/* { dg-final { scan-assembler-times {\\tldp\\t} 12 } } */\n+/* { dg-final { scan-assembler-times {\\tstp\\t} 4 } } */"}]}