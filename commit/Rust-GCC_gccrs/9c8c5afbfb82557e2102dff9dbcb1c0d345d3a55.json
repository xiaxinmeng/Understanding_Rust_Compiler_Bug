{"sha": "9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM4YzVhZmJmYjgyNTU3ZTIxMDJkZmY5ZGJjYjFjMGQzNDVkM2E1NQ==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1998-06-19T01:20:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-19T01:20:42Z"}, "message": "i386.c (notice_update_cc): Integer conditional moves don't affect cc0.\n\n\t* i386.c (notice_update_cc): Integer conditional moves don't\n\taffect cc0.\n\nFrom-SVN: r20575", "tree": {"sha": "cd9f0ff3e915d126cc6a0f0c4c33f667065ff53f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd9f0ff3e915d126cc6a0f0c4c33f667065ff53f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbe8497f5ef17013e6bafb96d6666c536d8bdf2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe8497f5ef17013e6bafb96d6666c536d8bdf2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe8497f5ef17013e6bafb96d6666c536d8bdf2d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "131ee04f26e2941385f84432d2ad15065b257c7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55", "patch": "@@ -1,5 +1,8 @@\n Fri Jun 19 02:10:10 1998  John Wehle  (john@feith.com)\n \n+\t* i386.c (notice_update_cc): Integer conditional moves don't\n+\taffect cc0.\n+\n \t* i386.md (movsfcc, movdfcc, movxfcc): Use emit_store_flag\n \tto support LT, LE, GE, and GT signed integer comparisons.\n \t(movsfcc+1, movsfcc+2, movdfcc+1, movdfcc+2,"}, {"sha": "2479e036ac68a7c3ceb7546db245131b654f2d82", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9c8c5afbfb82557e2102dff9dbcb1c0d345d3a55", "patch": "@@ -3596,7 +3596,9 @@ notice_update_cc (exp)\n \t (Note that moving a constant 0 or 1 MAY set the cc's).  */\n       if (REG_P (SET_DEST (exp))\n \t  && (REG_P (SET_SRC (exp)) || GET_CODE (SET_SRC (exp)) == MEM\n-\t      || GET_RTX_CLASS (GET_CODE (SET_SRC (exp))) == '<'))\n+\t      || GET_RTX_CLASS (GET_CODE (SET_SRC (exp))) == '<'\n+\t      || (GET_CODE (SET_SRC (exp)) == IF_THEN_ELSE\n+\t\t  && GET_MODE_CLASS (GET_MODE (SET_DEST (exp))) == MODE_INT)))\n \t{\n \t  if (cc_status.value1\n \t      && reg_overlap_mentioned_p (SET_DEST (exp), cc_status.value1))"}]}