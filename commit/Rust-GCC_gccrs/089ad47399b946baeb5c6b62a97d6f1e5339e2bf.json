{"sha": "089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg5YWQ0NzM5OWI5NDZiYWViNWM2YjYyYTk3ZDZmMWU1MzM5ZTJiZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-01-30T10:53:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-01-30T10:53:53Z"}, "message": "re PR target/15184 (Direct access to byte inside word not working with -march=pentiumpro)\n\n\tPR target/15184\n\t* gcc.target/i386/pr15184-1.c: Compile for ia32 target only.\n\t(dg-options): Remove -m32.\n\t(dg-final): Scan for \"movb %al\" only.\n\t* gcc.target/i386/pr15184-2.c: Ditto.\n\nFrom-SVN: r220277", "tree": {"sha": "88743c2bd0acb8ae2784d371ce84c9f5e97c74c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88743c2bd0acb8ae2784d371ce84c9f5e97c74c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6dd03dd9c48470246b4b47e7471b2cf99c65737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dd03dd9c48470246b4b47e7471b2cf99c65737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6dd03dd9c48470246b4b47e7471b2cf99c65737"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "e90c8b0a636b0cf5d8dc5473381275fdd9267213", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "patch": "@@ -1,3 +1,11 @@\n+2015-01-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/15184\n+\t* gcc.target/i386/pr15184-1.c: Compile for ia32 target only.\n+\t(dg-options): Remove -m32.\n+\t(dg-final): Scan for \"movb %al\" only.\n+\t* gcc.target/i386/pr15184-2.c: Ditto.\n+\n 2015-01-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64829"}, {"sha": "8c19e47585250cc80e99315f734c2ea4287c7cca", "filename": "gcc/testsuite/gcc.target/i386/pr15184-1.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr15184-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr15184-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr15184-1.c?ref=089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "patch": "@@ -1,11 +1,10 @@\n /* PR 15184 first two tests, plus two addition ones.  */\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -m32 -march=pentiumpro\" } */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -march=pentiumpro\" } */\n \n-#define regparm __attribute__((__regparm__(3)))\n+#define regparm __attribute__((__regparm__(1)))\n \n extern unsigned int x;\n-extern unsigned short y;\n \n void regparm f0(unsigned char c)\n {\n@@ -29,5 +28,5 @@ void regparm f3(unsigned char c)\n \n /* Each function should compile down to a byte move from\n    the input register into x, possibly at an offset within x.  */\n-/* { dg-final { scan-assembler-times \"\\tmovb\\t%al, x\" 4 } } */\n+/* { dg-final { scan-assembler-times \"movb\\[ \\\\t\\]+%al\" 4 } } */\n "}, {"sha": "a6cb9ebc24eb374b9a25aa79235fa17a04109f42", "filename": "gcc/testsuite/gcc.target/i386/pr15184-2.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr15184-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089ad47399b946baeb5c6b62a97d6f1e5339e2bf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr15184-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr15184-2.c?ref=089ad47399b946baeb5c6b62a97d6f1e5339e2bf", "patch": "@@ -1,10 +1,9 @@\n /* PR 15184 second two tests\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -m32 -march=pentiumpro\" } */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -march=pentiumpro\" } */\n \n-#define regparm __attribute__((__regparm__(3)))\n+#define regparm __attribute__((__regparm__(1)))\n \n-extern unsigned int x;\n extern unsigned short y;\n \n void regparm g0(unsigned char c)\n@@ -18,6 +17,6 @@ void regparm g1(unsigned char c)\n }\n \n /* Each function should compile down to a byte move from\n-   the input register into x, possibly at an offset within x.  */\n-/* { dg-final { scan-assembler-times \"\\tmovb\\t%al, y\" 2 } } */\n+   the input register into y, possibly at an offset within y.  */\n+/* { dg-final { scan-assembler-times \"movb\\[ \\\\t\\]+%al\" 2 } } */\n "}]}