{"sha": "fc5f5bb7704036599b636a5e74cbb555627382bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1ZjViYjc3MDQwMzY1OTliNjM2YTVlNzRjYmI1NTU2MjczODJiYg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-11-03T15:22:25Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-11-03T15:22:25Z"}, "message": "re PR fortran/43899 (Wrong unused-variable warning with NAMELISTs)\n\n2010-11-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/43899\n\t* runtime/error.c (generate_warning): New function to generate a run\n\ttime warning message. Fix some whitespace.\n\t* libgfortran.h: Add prototype for new function.\n\t* io/list_read.c (nml_read_obj): Use new function to warn when a\n\tcharacter namelist object is truncated.  Only warn if compiled\n\twith -fbounds-check.\n\nFrom-SVN: r166252", "tree": {"sha": "d6041abde64a2fa3e650a14db834c717c03b2a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6041abde64a2fa3e650a14db834c717c03b2a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc5f5bb7704036599b636a5e74cbb555627382bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5f5bb7704036599b636a5e74cbb555627382bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc5f5bb7704036599b636a5e74cbb555627382bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5f5bb7704036599b636a5e74cbb555627382bb/comments", "author": null, "committer": null, "parents": [{"sha": "23782cc3783c2040847d5f21d774436e1ecc8535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23782cc3783c2040847d5f21d774436e1ecc8535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23782cc3783c2040847d5f21d774436e1ecc8535"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "78589f5fd2c74b1dc167ffb9a50292699dc11918", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=fc5f5bb7704036599b636a5e74cbb555627382bb", "patch": "@@ -1,3 +1,13 @@\n+2010-11-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/43899\n+\t* runtime/error.c (generate_warning): New function to generate a run\n+\ttime warning message. Fix some whitespace.\n+\t* libgfortran.h: Add prototype for new function.\n+\t* io/list_read.c (nml_read_obj): Use new function to warn when a\n+\tcharacter namelist object is truncated.  Only warn if compiled\n+\twith -fbounds-check.\n+\n 2010-11-02  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/45629"}, {"sha": "5203bb76c505d8eb8d8b82922106052ec1c39e27", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=fc5f5bb7704036599b636a5e74cbb555627382bb", "patch": "@@ -2586,7 +2586,19 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t  break;\n \n \tcase BT_CHARACTER:\n-\t  m = (dlen < dtp->u.p.saved_used) ? dlen : dtp->u.p.saved_used;\n+\t  if (dlen < dtp->u.p.saved_used)\n+\t    {\n+\t      if (compile_options.bounds_check)\n+\t\t{\n+\t\t  snprintf (nml_err_msg, nml_err_msg_size,\n+\t\t\t    \"Namelist object '%s' truncated on read.\",\n+\t\t\t    nl->var_name);\n+\t\t  generate_warning (&dtp->common, nml_err_msg);\n+\t\t}\n+\t      m = dlen;\n+\t    }\n+\t  else\n+\t    m = dtp->u.p.saved_used;\n \t  pdata = (void*)( pdata + clow - 1 );\n \t  memcpy (pdata, dtp->u.p.saved_string, m);\n \t  if (m < dlen)"}, {"sha": "c5dd91a776a06f6addebee1001fa3b839792379f", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=fc5f5bb7704036599b636a5e74cbb555627382bb", "patch": "@@ -733,6 +733,9 @@ internal_proto(translate_error);\n extern void generate_error (st_parameter_common *, int, const char *);\n iexport_proto(generate_error);\n \n+extern void generate_warning (st_parameter_common *, const char *);\n+internal_proto(generate_warning);\n+\n extern try notify_std (st_parameter_common *, int, const char *);\n internal_proto(notify_std);\n "}, {"sha": "1baf9d35d1ff4c12074bce066ce15feeb0334417", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5f5bb7704036599b636a5e74cbb555627382bb/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=fc5f5bb7704036599b636a5e74cbb555627382bb", "patch": "@@ -443,6 +443,20 @@ generate_error (st_parameter_common *cmp, int family, const char *message)\n }\n iexport(generate_error);\n \n+\n+/* generate_warning()-- Similar to generate_error but just give a warning.  */\n+\n+void\n+generate_warning (st_parameter_common *cmp, const char *message)\n+{\n+  if (message == NULL)\n+    message = \" \";\n+\n+  show_locus (cmp);\n+  st_printf (\"Fortran runtime warning: %s\\n\", message);\n+}\n+\n+\n /* Whether, for a feature included in a given standard set (GFC_STD_*),\n    we should issue an error or a warning, or be quiet.  */\n \n@@ -462,7 +476,6 @@ notification_std (int std)\n }\n \n \n-\n /* Possibly issue a warning/error about use of a nonstandard (or deleted)\n    feature.  An error/warning will be issued if the currently selected\n    standard does not contain the requested bits.  */"}]}