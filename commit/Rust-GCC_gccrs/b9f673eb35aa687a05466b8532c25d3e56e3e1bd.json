{"sha": "b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlmNjczZWIzNWFhNjg3YTA1NDY2Yjg1MzJjMjVkM2U1NmUzZTFiZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-01-13T01:23:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-01-13T01:23:34Z"}, "message": "re PR c++/35109 (ICE in lookup_name_real, at cp/name-lookup.c:4056)\n\n        PR c++/35109\n        * name-lookup.c (lookup_name_real): Keep looking past a hidden\n        binding.\n\nCo-Authored-By: Steve Ellcey <sje@cup.hp.com>\n\nFrom-SVN: r143320", "tree": {"sha": "2e2f7a94f379c6d05b2c37967205e5c492653764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e2f7a94f379c6d05b2c37967205e5c492653764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38a5aa4ae441872f621fa42a737b8c0dbd8184a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a5aa4ae441872f621fa42a737b8c0dbd8184a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a5aa4ae441872f621fa42a737b8c0dbd8184a4"}], "stats": {"total": 90, "additions": 70, "deletions": 20}, "files": [{"sha": "7e35ecde16d1b3e23d163b663a3c0ab4370709fa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "patch": "@@ -1,3 +1,10 @@\n+2009-01-12  Jason Merrill  <jason@redhat.com>\n+\t    Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR c++/35109\n+\t* name-lookup.c (lookup_name_real): Keep looking past a hidden \n+\tbinding.\n+\n 2009-01-12  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/36019"}, {"sha": "d0f85f99061581fe776a9cb478e6d9e945e98d2d", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "patch": "@@ -4149,16 +4149,25 @@ lookup_name_real (tree name, int prefer_type, int nonclass, bool block_p,\n \t  {\n \t    if (hidden_name_p (binding))\n \t      {\n-\t\t/* A non namespace-scope binding can only be hidden if\n-\t\t   we are in a local class, due to friend declarations.\n+\t\t/* A non namespace-scope binding can only be hidden in the\n+\t\t   presence of a local class, due to friend declarations.\n+\n \t\t   In particular, consider:\n \n+\t\t   struct C;\n \t\t   void f() {\n \t\t     struct A {\n \t\t       friend struct B;\n-\t\t       void g() { B* b; } // error: B is hidden\n-\t\t     }\n+\t\t       friend struct C;\n+\t\t       void g() {\n+\t\t         B* b; // error: B is hidden\n+\t\t\t C* c; // OK, finds ::C\n+\t\t       } \n+\t\t     };\n+\t\t     B *b;  // error: B is hidden\n+\t\t     C *c;  // OK, finds ::C\n \t\t     struct B {};\n+\t\t     B *bb; // OK\n \t\t   }\n \n \t\t   The standard says that \"B\" is a local class in \"f\"\n@@ -4174,21 +4183,19 @@ lookup_name_real (tree name, int prefer_type, int nonclass, bool block_p,\n \t\t   the name specified is an unqualified name, a prior\n \t\t   declaration is looked up without considering scopes\n \t\t   that are outside the innermost enclosing non-class\n-\t\t   scope. For a friend class declaration, if there is no\n-\t\t   prior declaration, the class that is specified \n-\t\t   belongs to the innermost enclosing non-class scope,\n-\t\t   but if it is subsequently referenced, its name is not\n-\t\t   found by name lookup until a matching declaration is\n-\t\t   provided in the innermost enclosing nonclass scope.\n+\t\t   scope. For a friend function declaration, if there is\n+\t\t   no prior declaration, the program is ill-formed. For a\n+\t\t   friend class declaration, if there is no prior\n+\t\t   declaration, the class that is specified belongs to the\n+\t\t   innermost enclosing non-class scope, but if it is\n+\t\t   subsequently referenced, its name is not found by name\n+\t\t   lookup until a matching declaration is provided in the\n+\t\t   innermost enclosing nonclass scope.\n+\n+\t\t   So just keep looking for a non-hidden binding.\n \t\t*/\n-\t\tgcc_assert (current_class_type &&\n-\t\t\t    LOCAL_CLASS_P (current_class_type));\n-\n-\t\t/* This binding comes from a friend declaration in the local\n-\t\t   class. The standard (11.4.8) states that the lookup can\n-\t\t   only succeed if there is a non-hidden declaration in the\n-\t\t   current scope, which is not the case here.  */\n-\t\tPOP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, NULL_TREE);\n+\t\tgcc_assert (TREE_CODE (binding) == TYPE_DECL);\n+\t\tcontinue;\n \t      }\n \t    val = binding;\n \t    break;"}, {"sha": "513f6bcf2557086f487d7988b9657ffb692c2ab6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "patch": "@@ -1,3 +1,10 @@\n+2009-01-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35109\n+\t* g++.dg/lookup/friend11.C: Remove expected error.\n+\t* g++.dg/lookup/friend14.C: New test.\n+\t* g++.dg/lookup/friend15.C: New test.\n+\n 2009-01-12  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/36019\n@@ -15,6 +22,7 @@\n \n 2009-01-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/31488\n \t* g++.dg/other/vararg-3.C: New test.\n \n 2009-01-12  Daniel Jacobowitz  <dan@codesourcery.com>"}, {"sha": "cd112ca8a4befb192b1bd514e1d6a6f88da4be06", "filename": "gcc/testsuite/g++.dg/lookup/friend11.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend11.C?ref=b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "patch": "@@ -3,12 +3,11 @@\n /* { dg-do \"compile\" } */\n \n \n-// This is invalid: QGList must only be looked up in count.\n class QGList;\n unsigned count() {\n   class QGListIterator {\n     friend class QGList;\n-    QGListIterator( const QGList & ); /* { dg-error \"expected|with no type\" } */\n+    QGListIterator( const QGList & ); // OK, finds ::QGList.\n   };\n   return 0;\n }"}, {"sha": "5c244112a32944db77f2c8fe2cce176828b1fbf3", "filename": "gcc/testsuite/g++.dg/lookup/friend14.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend14.C?ref=b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/35109\n+\n+struct C;\n+void f() {\n+  struct A {\n+    friend struct B;\n+    friend struct C;\n+    void g()\n+    {\n+      B *b;\t\t\t// { dg-error \"not declared\" }\n+      C* c;\t\t\t// OK, finds ::C\n+    } \n+  };\n+  C *c; // OK, finds ::C\n+  struct B {};\n+  B *b; // OK, now it isn't hidden\n+}"}, {"sha": "1e271fc3f00663e6a5291172596daea7f33da51b", "filename": "gcc/testsuite/g++.dg/lookup/friend15.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f673eb35aa687a05466b8532c25d3e56e3e1bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend15.C?ref=b9f673eb35aa687a05466b8532c25d3e56e3e1bd", "patch": "@@ -0,0 +1,12 @@\n+// Origin: PR c++/35109\n+// { dg-do compile }\n+\n+void foo()\n+{\n+  struct A\n+  {\n+    friend class B;\n+  };\n+  B::B() {} // { dg-error \"has not been declared\" }\n+// { dg-error \"expected\" \"expected\" { target *-*-* } 10 }\n+}"}]}