{"sha": "a3ce7d75dd9c0308b8565669f31127436cb2ba9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNjZTdkNzVkZDljMDMwOGI4NTY1NjY5ZjMxMTI3NDM2Y2IyYmE5Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-06-30T11:17:54Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-06-30T11:17:54Z"}, "message": "gcc.c's check_offload_target_name: Fixes to inform hints\n\ngcc/ChangeLog:\n\n\t* gcc.c (close_at_file, execute): Replace alloca by XALLOCAVEC.\n\t(check_offload_target_name): Fix splitting OFFLOAD_TARGETS into\n\ta candidate list; better inform no offload target is configured\n\tand fix hint extraction when passed target is not '\\0' at [len].\n\t* common.opt (foffload): Add tailing '.'.\n\t(foffload-options): Likewise; fix flag name in the help string.", "tree": {"sha": "72e34e5db6d6b8afe4d8199acc46eabf9a3ea649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72e34e5db6d6b8afe4d8199acc46eabf9a3ea649"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3ce7d75dd9c0308b8565669f31127436cb2ba9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ce7d75dd9c0308b8565669f31127436cb2ba9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3ce7d75dd9c0308b8565669f31127436cb2ba9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ce7d75dd9c0308b8565669f31127436cb2ba9f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9d038ec10aa0d109ca965cc435934bfea92d14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9d038ec10aa0d109ca965cc435934bfea92d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a9d038ec10aa0d109ca965cc435934bfea92d14"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "2f5ff9f02e9f64fe813a611baf37d616244a6cd1", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ce7d75dd9c0308b8565669f31127436cb2ba9f/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ce7d75dd9c0308b8565669f31127436cb2ba9f/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a3ce7d75dd9c0308b8565669f31127436cb2ba9f", "patch": "@@ -2104,11 +2104,11 @@ Support synchronous non-call exceptions.\n ; -foffload=<targets>=<options> is supported for backward compatibility\n foffload=\n Driver Joined MissingArgError(targets missing after %qs)\n--foffload=<targets>\tSpecify offloading targets\n+-foffload=<targets>\tSpecify offloading targets.\n \n foffload-options=\n Common Driver Joined MissingArgError(options or targets=options missing after %qs)\n--foffload=<targets>=<options>\tSpecify options for the offloading targets\n+-foffload-options=<targets>=<options>\tSpecify options for the offloading targets.\n \n foffload-abi=\n Common Joined RejectNegative Enum(offload_abi) Var(flag_offload_abi) Init(OFFLOAD_ABI_UNSET)"}, {"sha": "f802148e56777a5e28701c729c9f7067fe7b4c47", "filename": "gcc/gcc.c", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ce7d75dd9c0308b8565669f31127436cb2ba9f/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ce7d75dd9c0308b8565669f31127436cb2ba9f/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a3ce7d75dd9c0308b8565669f31127436cb2ba9f", "patch": "@@ -2242,7 +2242,7 @@ close_at_file (void)\n   if (n_args == 0)\n     return;\n \n-  char **argv = (char **) alloca (sizeof (char *) * (n_args + 1));\n+  char **argv = XALLOCAVEC (char *, n_args + 1);\n   char *temp_file = make_at_file ();\n   char *at_argument = concat (\"@\", temp_file, NULL);\n   FILE *f = fopen (temp_file, \"w\");\n@@ -3251,7 +3251,7 @@ execute (void)\n       n_commands++;\n \n   /* Get storage for each command.  */\n-  commands = (struct command *) alloca (n_commands * sizeof (struct command));\n+  commands = XALLOCAVEC (struct command, n_commands);\n \n   /* Split argbuf into its separate piped processes,\n      and record info about each one.\n@@ -3430,13 +3430,13 @@ execute (void)\n     struct pex_time *times = NULL;\n     int ret_code = 0;\n \n-    statuses = (int *) alloca (n_commands * sizeof (int));\n+    statuses = XALLOCAVEC (int, n_commands);\n     if (!pex_get_status (pex, n_commands, statuses))\n       fatal_error (input_location, \"failed to get exit status: %m\");\n \n     if (report_times || report_times_to_file)\n       {\n-\ttimes = (struct pex_time *) alloca (n_commands * sizeof (struct pex_time));\n+\ttimes = XALLOCAVEC (struct pex_time, n_commands);\n \tif (!pex_get_times (pex, n_commands, times))\n \t  fatal_error (input_location, \"failed to get process times: %m\");\n       }\n@@ -3997,24 +3997,22 @@ check_offload_target_name (const char *target, ptrdiff_t len)\n     {\n       char *s;\n       auto_vec<const char*> candidates;\n-      char *cand = (char *) alloca (strlen (OFFLOAD_TARGETS) + 1);\n-      c = OFFLOAD_TARGETS;\n-      while (c)\n-\t{\n-\t  n = strchr (c, ',');\n-\t  if (n == NULL)\n-\t    n = strchr (c, '\\0');\n-\t  if (n - c == 0)\n-\t    break;\n-\t  strncpy (cand, c, n - c);\n-\t  cand[n - c] = '\\0';\n-\t  candidates.safe_push (cand);\n-\t  c = *n ? n + 1 : NULL;\n-\t}\n-      error (\"GCC is not configured to support %q.*s as offload target\",\n-\t     (int) len, target);\n-      const char *hint = candidates_list_and_hint (target, s, candidates);\n-      if (hint)\n+      size_t olen = strlen (OFFLOAD_TARGETS) + 1;\n+      char *cand = XALLOCAVEC (char, olen);\n+      memcpy (cand, OFFLOAD_TARGETS, olen);\n+      for (c = strtok (cand, \",\"); c; c = strtok (NULL, \",\"))\n+\tcandidates.safe_push (c);\n+\n+      char *target2 = XALLOCAVEC (char, len + 1);\n+      memcpy (target2, target, len);\n+      target2[len] = '\\0';\n+\n+      error (\"GCC is not configured to support %qs as offload target\", target2);\n+\n+      const char *hint = candidates_list_and_hint (target2, s, candidates);\n+      if (candidates.is_empty ())\n+\tinform (UNKNOWN_LOCATION, \"no offloading targets configured\");\n+      else if (hint)\n \tinform (UNKNOWN_LOCATION,\n \t\t\"valid offload targets are: %s; did you mean %qs?\", s, hint);\n       else"}]}