{"sha": "6894d9101e6324972b5b105227f3412a6c46549d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5NGQ5MTAxZTYzMjQ5NzJiNWIxMDUyMjdmMzQxMmE2YzQ2NTQ5ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-10T09:19:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:31Z"}, "message": "[Ada] Remove handling of 'Pos and 'Val attributes from gigi\n\n2020-06-19  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* gcc-interface/trans.c (lvalue_required_for_attribute_p): Do not deal\n\twith 'Pos or 'Val.\n\t(Attribute_to_gnu): Likewise.\n\t* gcc-interface/utils.c (create_field_decl): Small formatting fix.", "tree": {"sha": "6c62b5d7cd03657988937b1d80e5f8ca450617fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c62b5d7cd03657988937b1d80e5f8ca450617fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6894d9101e6324972b5b105227f3412a6c46549d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6894d9101e6324972b5b105227f3412a6c46549d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6894d9101e6324972b5b105227f3412a6c46549d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6894d9101e6324972b5b105227f3412a6c46549d/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb24f34350078f92e8740713a4d241cb4c2fc9a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb24f34350078f92e8740713a4d241cb4c2fc9a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb24f34350078f92e8740713a4d241cb4c2fc9a7"}], "stats": {"total": 15, "additions": 1, "deletions": 14}, "files": [{"sha": "313a2fbcbafe5bd9d0f6e4c7cfb66efbb4cc1167", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894d9101e6324972b5b105227f3412a6c46549d/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894d9101e6324972b5b105227f3412a6c46549d/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=6894d9101e6324972b5b105227f3412a6c46549d", "patch": "@@ -773,8 +773,6 @@ lvalue_required_for_attribute_p (Node_Id gnat_node)\n {\n   switch (Get_Attribute_Id (Attribute_Name (gnat_node)))\n     {\n-    case Attr_Pos:\n-    case Attr_Val:\n     case Attr_Pred:\n     case Attr_Succ:\n     case Attr_First:\n@@ -1701,17 +1699,6 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \n   switch (attribute)\n     {\n-    case Attr_Pos:\n-    case Attr_Val:\n-      /* These are just conversions since representation clauses for\n-\t enumeration types are handled in the front-end.  */\n-      gnu_expr = gnat_to_gnu (First (Expressions (gnat_node)));\n-      if (attribute == Attr_Pos)\n-\tgnu_expr = maybe_character_value (gnu_expr);\n-      gnu_result_type = get_unpadded_type (Etype (gnat_node));\n-      gnu_result = convert (gnu_result_type, gnu_expr);\n-      break;\n-\n     case Attr_Pred:\n     case Attr_Succ:\n       /* These just add or subtract the constant 1 since representation"}, {"sha": "7adc3131a419e957dffe281bae463f9d89017436", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894d9101e6324972b5b105227f3412a6c46549d/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894d9101e6324972b5b105227f3412a6c46549d/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=6894d9101e6324972b5b105227f3412a6c46549d", "patch": "@@ -3017,7 +3017,7 @@ create_field_decl (tree name, tree type, tree record_type, tree size, tree pos,\n       unsigned int known_align;\n \n       if (tree_fits_uhwi_p (pos))\n-\tknown_align = tree_to_uhwi (pos) & - tree_to_uhwi (pos);\n+\tknown_align = tree_to_uhwi (pos) & -tree_to_uhwi (pos);\n       else\n \tknown_align = BITS_PER_UNIT;\n "}]}