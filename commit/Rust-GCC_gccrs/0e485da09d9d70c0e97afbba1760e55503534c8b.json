{"sha": "0e485da09d9d70c0e97afbba1760e55503534c8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU0ODVkYTA5ZDlkNzBjMGU5N2FmYmJhMTc2MGU1NTUwMzUzNGM4Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2011-12-01T19:58:51Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2011-12-01T19:58:51Z"}, "message": "re PR gcov-profile/51113 (rev. 181105 causes Firefox profiledbuild failure)\n\n\tPR gcov-profile/51113\n\t* coverage.c (build_var): Keep coverage variables static.\n\n\ttestsuite/\n\t* lib/gcov.exp (verify-lines): Add support for xfailing.\n\t(run-gcov): Likewise.\n\t* gcc.misc-tests/gcov-13.c: Xfail weak function.\n\t* gcc.misc-tests/gcov-16.c: Remove.\n\t* gcc.misc-tests/gcov-17.c: Remove.\n\t* g++.dg/gcov-8.C: Remove.\n\t* g++.dg/gcov-9.C: Remove.\n\t* g++.dg/gcovpart-12b.C: New.\n\t* g++.dg/gcov-12.C: New.\n\nFrom-SVN: r181892", "tree": {"sha": "c19a213a9444ed1412e00ebff1f98d2e08bf5346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c19a213a9444ed1412e00ebff1f98d2e08bf5346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e485da09d9d70c0e97afbba1760e55503534c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e485da09d9d70c0e97afbba1760e55503534c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e485da09d9d70c0e97afbba1760e55503534c8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e485da09d9d70c0e97afbba1760e55503534c8b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78336739dea412bb0ff9431acbb96222c41c0ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78336739dea412bb0ff9431acbb96222c41c0ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78336739dea412bb0ff9431acbb96222c41c0ced"}], "stats": {"total": 168, "additions": 78, "deletions": 90}, "files": [{"sha": "c1b7a8e2f39ab680763e6c9a462e868597b0b17b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -1,3 +1,8 @@\n+2011-12-01  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR gcov-profile/51113\n+\t* coverage.c (build_var): Keep coverage variables static.\n+\n 2011-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51356"}, {"sha": "23cb2f8cf5591b599e773a4a9b5101876cb91403", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -657,8 +657,7 @@ coverage_end_function (unsigned lineno_checksum, unsigned cfg_checksum)\n }\n \n /* Build a coverage variable of TYPE for function FN_DECL.  If COUNTER\n-   >= 0 it is a counter array, otherwise it is the function structure.\n-   Propagate appropriate linkage and visibility from the function decl.  */\n+   >= 0 it is a counter array, otherwise it is the function structure.  */\n \n static tree\n build_var (tree fn_decl, tree type, int counter)\n@@ -675,21 +674,6 @@ build_var (tree fn_decl, tree type, int counter)\n   TREE_STATIC (var) = 1;\n   TREE_ADDRESSABLE (var) = 1;\n   DECL_ALIGN (var) = TYPE_ALIGN (type);\n-  DECL_WEAK (var) = DECL_WEAK (fn_decl);\n-  TREE_PUBLIC (var)\n-    = TREE_PUBLIC (fn_decl) && (counter < 0 || DECL_WEAK (fn_decl));\n-  if (DECL_ONE_ONLY (fn_decl))\n-    make_decl_one_only (var, DECL_COMDAT_GROUP (fn_decl));\n-  \n-  if (TREE_PUBLIC (var))\n-    {\n-      DECL_VISIBILITY (var) = DECL_VISIBILITY (fn_decl);\n-      DECL_VISIBILITY_SPECIFIED (var)\n-\t= DECL_VISIBILITY_SPECIFIED (fn_decl);\n-\n-      /* Initialize assembler name so we can stream out. */\n-      DECL_ASSEMBLER_NAME (var);\n-    }\n \n   return var;\n }"}, {"sha": "d0548caa2ee8abcbb508c6d8b0efe0b1c5897ceb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -1,3 +1,16 @@\n+2011-12-01  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR gcov-profile/51113\n+\t* lib/gcov.exp (verify-lines): Add support for xfailing.\n+\t(run-gcov): Likewise.\n+\t* gcc.misc-tests/gcov-13.c: Xfail weak function.\n+\t* gcc.misc-tests/gcov-16.c: Remove.\n+\t* gcc.misc-tests/gcov-17.c: Remove.\n+\t* g++.dg/gcov-8.C: Remove.\n+\t* g++.dg/gcov-9.C: Remove.\n+\t* g++.dg/gcovpart-12b.C: New.\n+\t* g++.dg/gcov-12.C: New.\n+\n 2011-12-01  Andrew Pinski  <apinski@cavium.com>\n \n \tPR lto/51198"}, {"sha": "c4708e40726b7ce813064c15d9df1d49e24beb15", "filename": "gcc/testsuite/g++.dg/gcov/gcov-12.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-12.C?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -0,0 +1,21 @@\n+/* PR 51113 */\n+/* { dg-options \"-fprofile-arcs -ftest-coverage -fpic\" } */\n+/* { dg-do run { target native } } */\n+/* { dg-additional-sources \"gcovpart-12b.C\" } */\n+\n+struct Foo {\n+  Foo ()\n+  {}  /* count(1) */\n+  virtual void Func () /* count(#####) */\n+  {}   /* count(#####) */\n+};\n+\n+int main ()\n+{\n+  Foo b;\n+  \n+  return 0;  /* count (1) */\n+}\n+\n+/* { dg-final { run-gcov gcov-12.C } } */\n+/* { dg-final { run-gcov gcovpart-12b.C { xfail *-*-* } } } */"}, {"sha": "272cefc373b4cbf269a63168e7d1ebfdd7a9f90b", "filename": "gcc/testsuite/g++.dg/gcov/gcov-8.C", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-8.C?ref=78336739dea412bb0ff9431acbb96222c41c0ced", "patch": "@@ -1,14 +0,0 @@\n-/* { dg-options \"-fprofile-arcs -fvisibility=hidden\" } */\n-/* { dg-require-visibility \"\" } */\n-\n-struct __attribute__((visibility (\"hidden\"))) X\n-{\n-  void Fink ();\n-};\n-\n-void X::Fink ()\n-{\n-}\n-\n-/* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov___ZN1X4FinkEv\" { target { ! *-*-darwin*  } } } } */\n-/* { dg-final { scan-assembler \"\\\\.private_extern ___gcov___ZN1X4FinkEv\" { target *-*-darwin* } } } */"}, {"sha": "b9c64d22e561f34ebce1526409eb637b0fbc04c7", "filename": "gcc/testsuite/g++.dg/gcov/gcov-9.C", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-9.C?ref=78336739dea412bb0ff9431acbb96222c41c0ced", "patch": "@@ -1,17 +0,0 @@\n-/* { dg-options \"-fprofile-arcs -fvisibility-inlines-hidden\" } */\n-/* { dg-require-visibility \"\" } */\n-\n-inline void Boo ()\n-{\n-}\n-\n-extern \"C\" void (*Foo ()) ()\n-{\n-  return Boo;\n-}\n-\n-/* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov___Z3Boov\" { target { ! *-*-darwin*  } } } } */\n-/* { dg-final { scan-assembler \"\\\\.private_extern ___gcov___Z3Boov\" { target *-*-darwin* } } } */\n-/* { dg-final { scan-assembler \"__gcov__Foo:\" } } */\n-/* { dg-final { scan-assembler-not \"\\\\.hidden\\t__gcov__Foo\" { target { ! *-*-darwin*  } } } } */\n-/* { dg-final { scan-assembler-not \"\\\\.private_extern ___gcov__Foo\" { target *-*-darwin* } } } */"}, {"sha": "6a1f981f0df57d1643534be969333053840b8fff", "filename": "gcc/testsuite/g++.dg/gcov/gcovpart-12b.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcovpart-12b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcovpart-12b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcovpart-12b.C?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -0,0 +1,5 @@\n+struct Foo {\n+  Foo () {}\n+  virtual void Func () /* count(-) { xfail *-*-* } */\n+  {}   /* count(-) { xfail *-*-* } */\n+};"}, {"sha": "fa9680b2544df00531e723fe32182617cb7b3ec5", "filename": "gcc/testsuite/gcc.misc-tests/gcov-13.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-13.c?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -7,13 +7,13 @@\n \n int __attribute__ ((weak)) weak ()\n {\n-  return 1;  /* count(-) */\n+  return 1;  /* count(-) { xfail *-*-* } */\n }\n \n int main ()\n {\n   return weak (); /* count(1) */\n }\n \n-/* { dg-final { run-gcov { -a gcov-13.c } } } */\n+/* { dg-final { run-gcov { -a gcov-13.c } { xfail *-*-* } } } */\n /* { dg-final { run-gcov { -a gcovpart-13b.c } } } */"}, {"sha": "478f44a367d5f53c63c1ea53e8147a53e20db3b1", "filename": "gcc/testsuite/gcc.misc-tests/gcov-16.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-16.c?ref=78336739dea412bb0ff9431acbb96222c41c0ced", "patch": "@@ -1,12 +0,0 @@\n-/* Test visibility is copied */\n-\n-/* { dg-options \"-fprofile-arcs -fvisibility=hidden\" } */\n-/* { dg-require-visibility \"\" } */\n-/* { dg-require-weak \"\" } */\n-\n-void Foo ()\n-{\n-}\n-\n- /* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov__Foo\" { target { ! *-*-darwin*  } } } } */\n- /* { dg-final { scan-assembler \"\\\\.private_extern ___gcov__Foo\" { target *-*-darwin* } } } */"}, {"sha": "f8ff794215cefbe795707240e732dd6613008aa7", "filename": "gcc/testsuite/gcc.misc-tests/gcov-17.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78336739dea412bb0ff9431acbb96222c41c0ced/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-17.c?ref=78336739dea412bb0ff9431acbb96222c41c0ced", "patch": "@@ -1,12 +0,0 @@\n-/* Test visibility is copied */\n-\n-/* { dg-options \"-fprofile-arcs\" } */\n-/* { dg-require-visibility \"\" } */\n-/* { dg-require-weak \"\" } */\n-\n-void __attribute__ ((visibility (\"hidden\"), weak)) Foo ()\n-{\n-}\n-\n-/* { dg-final { scan-assembler \"\\\\.hidden\\t__gcov__Foo\" { target { ! *-*-darwin*  } } } } */\n-/* { dg-final { scan-assembler \"\\\\.private_extern ___gcov__Foo\" { target *-*-darwin* } } } */"}, {"sha": "081b3ceb14c2be5ec613dcda61bbd53cb5c0c974", "filename": "gcc/testsuite/lib/gcov.exp", "status": "modified", "additions": 31, "deletions": 16, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e485da09d9d70c0e97afbba1760e55503534c8b/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcov.exp?ref=0e485da09d9d70c0e97afbba1760e55503534c8b", "patch": "@@ -39,19 +39,28 @@ proc clean-gcov { testcase } {\n #\n proc verify-lines { testcase file } {\n     #send_user \"verify-lines\\n\"\n+    global subdir\n     set failed 0\n     set fd [open $file r]\n     while { [gets $fd line] >= 0 } {\n         # We want to match both \"-\" and \"#####\" as count as well as numbers,\n         # since we want to detect lines that shouldn't be marked as covered.\n-\tif [regexp \"^ *(\\[^:]*): *(\\[0-9\\\\-#]+):.*count\\\\((\\[0-9\\\\-#]+)\\\\)\" \\\n-\t\t\"$line\" all is n shouldbe] {\n+\tif [regexp \"^ *(\\[^:]*): *(\\[0-9\\\\-#]+):.*count\\\\((\\[0-9\\\\-#]+)\\\\)(.*)\" \\\n+\t\t\"$line\" all is n shouldbe rest] {\n+\t    if [regexp \"^ *{(.*)}\" $rest all xfailed] {\n+\t\tswitch [dg-process-target $xfailed] {\n+\t\t    \"N\" { continue }\n+\t\t    \"F\" { setup_xfail \"*-*-*\" }\n+\t\t}\n+\t    }\n \t    if { $is == \"\" } {\n-\t\tfail \"$n:no data available for this line\"\n+\t\tfail \"$subdir/$testcase:$n:no data available for this line\"\n \t\tincr failed\n \t    } elseif { $is != $shouldbe } {\n-\t\tfail \"$n:is $is:should be $shouldbe\"\n+\t\tfail \"$subdir/$testcase:$n:is $is:should be $shouldbe\"\n \t\tincr failed\n+\t    } else {\n+\t\tpass \"$subdir/$testcase:$n line count\"\n \t    }\n \t}\n     }\n@@ -230,32 +239,36 @@ proc run-gcov { args } {\n     global GCOV\n     global srcdir subdir\n \n-    set gcov_args [lindex $args end]\n-\n+    set gcov_args \"\"\n     set gcov_verify_calls 0\n     set gcov_verify_branches 0\n-    set gcov_execute_xfail \"\"\n-    set gcov_verify_xfail \"\"\n+    set xfailed 0\n \n     foreach a $args {\n \tif { $a == \"calls\" } {\n \t  set gcov_verify_calls 1\n \t} elseif { $a == \"branches\" } {\n \t  set gcov_verify_branches 1\n+\t} elseif { $gcov_args == \"\" } {\n+\t    set gcov_args $a\n+\t} else {\n+\t    switch [dg-process-target $a] {\n+\t\t\"N\" { return }\n+\t\t\"F\" { set xfailed 1 }\n+\t    }\n \t}\n     }\n \n     # Extract the test name from the arguments.\n     set testcase [lindex $gcov_args end]\n \n-    if { $gcov_execute_xfail != \"\" } {\n-\teval setup_xfail [split $gcov_execute_xfail]\n-    }\n-\n     verbose \"Running $GCOV $testcase\" 2\n     set testcase [remote_download host $testcase]\n     set result [remote_exec host $GCOV $gcov_args]\n     if { [lindex $result 0] != 0 } {\n+\tif { $xfailed } {\n+\t    setup_xfail \"*-*-*\"\n+\t}\n \tfail \"$subdir/$testcase gcov failed: [lindex $result 1]\"\n \tclean-gcov $testcase\n \treturn\n@@ -264,16 +277,15 @@ proc run-gcov { args } {\n     # Get the gcov output file after making sure it exists.\n     set files [glob -nocomplain $testcase.gcov]\n     if { $files == \"\" } {\n+\tif { $xfailed } {\n+\t    setup_xfail \"*-*-*\"\n+\t}\n         fail \"$subdir/$testcase gcov failed: $testcase.gcov does not exist\"\n         clean-gcov $testcase\n         return\n     }\n     remote_upload host $testcase.gcov $testcase.gcov\n \n-    if { $gcov_verify_xfail != \"\" } {\n-\teval setup_xfail [split $gcov_verify_xfail]\n-    }\n-\n     # Check that line execution counts are as expected.\n     set lfailed [verify-lines $testcase $testcase.gcov]\n \n@@ -293,6 +305,9 @@ proc run-gcov { args } {\n     # Report whether the gcov test passed or failed.  If there were\n     # multiple failures then the message is a summary.\n     set tfailed [expr $lfailed + $bfailed + $cfailed]\n+    if { $xfailed } {\n+\tsetup_xfail \"*-*-*\"\n+    }\n     if { $tfailed > 0 } {\n \tfail \"$subdir/$testcase gcov: $lfailed failures in line counts, $bfailed in branch percentages, $cfailed in return percentages\"\n     } else {"}]}