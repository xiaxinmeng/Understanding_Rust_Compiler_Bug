{"sha": "a43ae03a053faad871e6f48099d21e64b8e316cf", "node_id": "C_kwDOANBUbNoAKGE0M2FlMDNhMDUzZmFhZDg3MWU2ZjQ4MDk5ZDIxZTY0YjhlMzE2Y2Y", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-09-28T06:05:28Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-09-28T12:18:21Z"}, "message": "Further test case adjustment re \"Fortran: Fix assumed-size to assumed-rank passing\"\n\nFix-up for recent commit 00f6de9c69119594f7dad3bd525937c94c8200d0\n\"Fortran: Fix assumed-size to assumed-rank passing [PR94070]\",\nand commit da1f6391b7c255e4e2eea983832120eff4f7d3df\n\"libgomp.oacc-fortran/privatized-ref-2.f90: Fix dg-note\".\n\nDue to use of '#if !ACC_MEM_SHARED' conditionals in\n'libgomp.oacc-fortran/if-1.f90', 'target { !  openacc_host_selected }'\nneeds some special care (ignoring the pre-existing mismatch of\n'ACC_MEM_SHARED' vs. 'openacc_host_selected').\n\nAs seen with GCN offloading, we need to revert to another bit of the\noriginal code in 'libgomp.oacc-fortran/privatized-ref-2.f90'.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/if-1.f90: Adjust.\n\t* testsuite/libgomp.oacc-fortran/privatized-ref-2.f90: Likewise.", "tree": {"sha": "47bd7ae9ab3b019313694c6d6cfeccb79a14460d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47bd7ae9ab3b019313694c6d6cfeccb79a14460d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a43ae03a053faad871e6f48099d21e64b8e316cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a43ae03a053faad871e6f48099d21e64b8e316cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a43ae03a053faad871e6f48099d21e64b8e316cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a43ae03a053faad871e6f48099d21e64b8e316cf/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbed1c8693c6b5cb02c903cea91db574200bd513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbed1c8693c6b5cb02c903cea91db574200bd513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbed1c8693c6b5cb02c903cea91db574200bd513"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9eadfcf9738453acf27f20e816d8d40e812f7dc0", "filename": "libgomp/testsuite/libgomp.oacc-fortran/if-1.f90", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a43ae03a053faad871e6f48099d21e64b8e316cf/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fif-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a43ae03a053faad871e6f48099d21e64b8e316cf/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fif-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fif-1.f90?ref=a43ae03a053faad871e6f48099d21e64b8e316cf", "patch": "@@ -394,6 +394,7 @@ program main\n \n   !$acc data copyin (a(1:N)) copyout (b(1:N)) if (0 == 1)\n   ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target { ! openacc_host_selected } } .-1 }\n+  ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target { ! openacc_host_selected } } .-2 }\n \n #if !ACC_MEM_SHARED\n   if (acc_is_present (a) .eqv. .TRUE.) STOP 21\n@@ -408,6 +409,7 @@ program main\n   !$acc data copyin (a(1:N)) if (1 == 1)\n   ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-1 }\n   ! { dg-note {variable 'parm\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-2 }\n+  ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target { ! openacc_host_selected } } .-3 }\n \n #if !ACC_MEM_SHARED\n     if (acc_is_present (a) .eqv. .FALSE.) STOP 23\n@@ -416,6 +418,7 @@ program main\n     !$acc data copyout (b(1:N)) if (0 == 1)\n     ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-1 }\n     ! { dg-note {variable 'parm\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-2 }\n+    ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target { ! openacc_host_selected } } .-3 }\n #if !ACC_MEM_SHARED\n       if (acc_is_present (b) .eqv. .TRUE.) STOP 24\n #endif\n@@ -864,6 +867,7 @@ program main\n \n   !$acc data copyin (a(1:N)) copyout (b(1:N)) if (0 == 1)\n   ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target { ! openacc_host_selected } } .-1 }\n+  ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target { ! openacc_host_selected } } .-2 }\n \n #if !ACC_MEM_SHARED\n   if (acc_is_present (a) .eqv. .TRUE.) STOP 56\n@@ -878,6 +882,7 @@ program main\n   !$acc data copyin (a(1:N)) if (1 == 1)\n   ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-1 }\n   ! { dg-note {variable 'parm\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-2 }\n+  ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target { ! openacc_host_selected } } .-3 }\n \n #if !ACC_MEM_SHARED\n     if (acc_is_present (a) .eqv. .FALSE.) STOP 58\n@@ -886,6 +891,7 @@ program main\n     !$acc data copyout (b(1:N)) if (0 == 1)\n     ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-1 }\n     ! { dg-note {variable 'parm\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-2 }\n+    ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target { ! openacc_host_selected } } .-3 }\n #if !ACC_MEM_SHARED\n       if (acc_is_present (b) .eqv. .TRUE.) STOP 59\n #endif"}, {"sha": "3f3a1b5966b7be8a795638de90cdefa47b63a764", "filename": "libgomp/testsuite/libgomp.oacc-fortran/privatized-ref-2.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a43ae03a053faad871e6f48099d21e64b8e316cf/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivatized-ref-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a43ae03a053faad871e6f48099d21e64b8e316cf/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivatized-ref-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivatized-ref-2.f90?ref=a43ae03a053faad871e6f48099d21e64b8e316cf", "patch": "@@ -78,9 +78,8 @@ subroutine bar (array)\n     ! { dg-note {variable 'i' in 'private' clause isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'array\\.[0-9]+' in 'private' clause is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n     ! { dg-note {variable 'array\\.[0-9]+' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } l_loop$c_loop }\n-\n+    ! { dg-note {variable 'array\\.[0-9]+' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! { openacc_host_selected || openacc_nvidia_accel_selected } } } l_loop$c_loop }\n     ! { dg-message {sorry, unimplemented: target cannot support alloca} PR65181 { target openacc_nvidia_accel_selected } l_loop$c_loop }\n-\n     do i = 1, 10\n       array(i) = 9*i\n     end do"}]}