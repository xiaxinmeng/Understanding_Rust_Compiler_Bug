{"sha": "02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJkYmY1ZDEyNzNlZGE3ZGIxZWY2MTY0YjU2ODc5ZThkYzA1MzBmOA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-30T10:12:25Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-30T14:42:30Z"}, "message": "libphobos: Compile configure tests with -fno-druntime\n\nlibphobos/ChangeLog:\n\n\t* configure: Regenerate.\n\t* m4/autoconf.m4 (AC_LANG_PROGRAM): Declare module name 'object'.\n\t* m4/gcc_support.m4 (WITH_LOCAL_DRUNTIME): Compile tests with\n\t-fno-druntime.", "tree": {"sha": "917186050db3562118803ff18e4d8157c4faf971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/917186050db3562118803ff18e4d8157c4faf971"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89f33f44addbf9853bc3e6677db1fa941713cb6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f33f44addbf9853bc3e6677db1fa941713cb6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89f33f44addbf9853bc3e6677db1fa941713cb6c"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "14298a0dc4fece4e52693be27bbf7407d7dc0a7f", "filename": "libphobos/configure", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "patch": "@@ -5382,7 +5382,7 @@ fi\n \n \n   gdc_save_DFLAGS=$GDCFLAGS\n-  GDCFLAGS=\"-fno-moduleinfo -nostdinc -I $phobos_cv_abs_srcdir/libdruntime  $GDCFLAGS\"\n+  GDCFLAGS=\"-fno-druntime -nostdinc -I $phobos_cv_abs_srcdir/libdruntime  $GDCFLAGS\"\n \n   ac_ext=d\n ac_compile='$GDC -c $GDCFLAGS conftest.$ac_ext >&5'\n@@ -5392,7 +5392,7 @@ ac_compiler_gnu=yes\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking If $GDC can compile D sources\" >&5\n $as_echo_n \"checking If $GDC can compile D sources... \" >&6; }\n     cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n \n \n extern(C) int main() {\n@@ -12097,7 +12097,7 @@ CC=\"$lt_save_CC\"\n \n \n   gdc_save_DFLAGS=$GDCFLAGS\n-  GDCFLAGS=\"-fno-moduleinfo -nostdinc -I $phobos_cv_abs_srcdir/libdruntime  $GDCFLAGS\"\n+  GDCFLAGS=\"-fno-druntime -nostdinc -I $phobos_cv_abs_srcdir/libdruntime  $GDCFLAGS\"\n \n \n # Source file extension for D test sources.\n@@ -14089,7 +14089,7 @@ fi\n \n \n   gdc_save_DFLAGS=$GDCFLAGS\n-  GDCFLAGS=\"-fno-moduleinfo -nostdinc -I $phobos_cv_abs_srcdir/libdruntime -nophoboslib $GDCFLAGS\"\n+  GDCFLAGS=\"-fno-druntime -nostdinc -I $phobos_cv_abs_srcdir/libdruntime -nophoboslib $GDCFLAGS\"\n \n     ac_ext=d\n ac_compile='$GDC -c $GDCFLAGS conftest.$ac_ext >&5'\n@@ -14098,7 +14098,7 @@ ac_compiler_gnu=yes\n \n     GDCFLAGS=\"$GDCFLAGS -g -Werror -ffunction-sections -fdata-sections\"\n     cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n int foo; void bar() { }\n \n extern(C) int main() {\n@@ -14562,7 +14562,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n   gdc_save_DFLAGS=$GDCFLAGS\n-  GDCFLAGS=\"-fno-moduleinfo -nostdinc -I $phobos_cv_abs_srcdir/libdruntime -nophoboslib $GDCFLAGS\"\n+  GDCFLAGS=\"-fno-druntime -nostdinc -I $phobos_cv_abs_srcdir/libdruntime -nophoboslib $GDCFLAGS\"\n \n   ac_ext=d\n ac_compile='$GDC -c $GDCFLAGS conftest.$ac_ext >&5'\n@@ -14576,7 +14576,7 @@ if ${ac_cv_search_malloc+:} false; then :\n else\n   ac_func_search_save_LIBS=$LIBS\n cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n  extern(C) int malloc();\n \n extern(C) int main() {\n@@ -14622,7 +14622,7 @@ if ${ac_cv_search_pthread_create+:} false; then :\n else\n   ac_func_search_save_LIBS=$LIBS\n cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n  extern(C) int pthread_create();\n \n extern(C) int main() {\n@@ -14668,7 +14668,7 @@ if ${ac_cv_search_cosf+:} false; then :\n else\n   ac_func_search_save_LIBS=$LIBS\n cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n  extern(C) int cosf();\n \n extern(C) int main() {\n@@ -14714,7 +14714,7 @@ if ${ac_cv_search_clock_gettime+:} false; then :\n else\n   ac_func_search_save_LIBS=$LIBS\n cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n  extern(C) int clock_gettime();\n \n extern(C) int main() {\n@@ -14765,7 +14765,7 @@ $as_echo_n \"checking for atomic builtins for byte... \" >&6; }\n else\n \n     cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n import gcc.builtins;\n \n extern(C) int main() {\n@@ -14799,7 +14799,7 @@ $as_echo_n \"checking for atomic builtins for short... \" >&6; }\n else\n \n     cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n import gcc.builtins;\n \n extern(C) int main() {\n@@ -14833,7 +14833,7 @@ $as_echo_n \"checking for atomic builtins for int... \" >&6; }\n else\n \n     cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n import gcc.builtins;\n \n extern(C) int main() {\n@@ -14867,7 +14867,7 @@ $as_echo_n \"checking for atomic builtins for long... \" >&6; }\n else\n \n     cat > conftest.$ac_ext <<_ACEOF\n-module mod;\n+module object;\n import gcc.builtins;\n \n extern(C) int main() {"}, {"sha": "f0ca947478c773e9abe6bfff286765d956356e56", "filename": "libphobos/m4/autoconf.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/libphobos%2Fm4%2Fautoconf.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/libphobos%2Fm4%2Fautoconf.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fautoconf.m4?ref=02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "patch": "@@ -27,7 +27,7 @@ AU_DEFUN([AC_LANG_D], [AC_LANG(D)])\n # AC_LANG_PROGRAM(D)([PROLOGUE], [BODY])\n # ---------------------------------------\n m4_define([AC_LANG_PROGRAM(D)],\n-[module mod;\n+[module object;\n $1\n \n extern(C) int main() {"}, {"sha": "cc1acb4a23034463716f063b5c8b443a09cc4eeb", "filename": "libphobos/m4/gcc_support.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/libphobos%2Fm4%2Fgcc_support.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02dbf5d1273eda7db1ef6164b56879e8dc0530f8/libphobos%2Fm4%2Fgcc_support.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fgcc_support.m4?ref=02dbf5d1273eda7db1ef6164b56879e8dc0530f8", "patch": "@@ -27,7 +27,7 @@ AC_DEFUN([PHOBOS_ABS_SRCDIR], [\n AC_DEFUN([WITH_LOCAL_DRUNTIME], [\n   AC_REQUIRE([PHOBOS_ABS_SRCDIR])\n   gdc_save_DFLAGS=$GDCFLAGS\n-  GDCFLAGS=\"-fno-moduleinfo -nostdinc -I $phobos_cv_abs_srcdir/libdruntime $2 $GDCFLAGS\"\n+  GDCFLAGS=\"-fno-druntime -nostdinc -I $phobos_cv_abs_srcdir/libdruntime $2 $GDCFLAGS\"\n   $1\n   GDCFLAGS=$gdc_save_DFLAGS\n ])"}]}