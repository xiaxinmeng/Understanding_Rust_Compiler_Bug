{"sha": "b030d598109a6a7060cd00c7422ae4564ede0f0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzMGQ1OTgxMDlhNmE3MDYwY2QwMGM3NDIyYWU0NTY0ZWRlMGYwYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-26T23:13:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-26T23:13:47Z"}, "message": "(write_tree_1): Avoid emitting '-2147483648'.\n\nFrom-SVN: r10523", "tree": {"sha": "f51b19f732227bc65781de072f9e75e8f801b50d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f51b19f732227bc65781de072f9e75e8f801b50d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b030d598109a6a7060cd00c7422ae4564ede0f0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b030d598109a6a7060cd00c7422ae4564ede0f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b030d598109a6a7060cd00c7422ae4564ede0f0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b030d598109a6a7060cd00c7422ae4564ede0f0c/comments", "author": null, "committer": null, "parents": [{"sha": "f3d723e9ef64584d6cf05847d058dc9099a1b20f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d723e9ef64584d6cf05847d058dc9099a1b20f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d723e9ef64584d6cf05847d058dc9099a1b20f"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "21f1c06c4fce46e437c7c3e6825b24deabc195eb", "filename": "gcc/genrecog.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b030d598109a6a7060cd00c7422ae4564ede0f0c/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b030d598109a6a7060cd00c7422ae4564ede0f0c/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=b030d598109a6a7060cd00c7422ae4564ede0f0c", "patch": "@@ -1,5 +1,5 @@\n /* Generate code from machine description to recognize rtl as insns.\n-   Copyright (C) 1987, 1988, 1992, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 92, 93, 94, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1343,13 +1343,22 @@ write_tree_1 (tree, prevpos, afterward, type)\n \t  if (p->test_elt_one_int)\n \t    printf (\"XINT (x%d, 1) == %d && \", depth, p->elt_one_int);\n \t  if (p->test_elt_zero_wide)\n-\t    printf (\n+\t    {\n+\t      /* Set offset to 1 iff the number might get propagated to\n+\t         unsigned long by ANSI C rules, else 0.\n+\t         Prospective hosts are required to have at least 32 bit\n+\t         ints, and integer constants in machine descriptions\n+\t         must fit in 32 bit, thus it suffices to check only\n+\t         for 1 << 31 .  */\n+\t      HOST_WIDE_INT offset = p->elt_zero_wide == -2147483647 - 1;\n+\t      printf (\n #if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-\t\t    \"XWINT (x%d, 0) == %d && \",\n+\t\t       \"XWINT (x%d, 0) == %d%s && \",\n #else\n-\t\t    \"XWINT (x%d, 0) == %ld && \",\n+\t\t       \"XWINT (x%d, 0) == %ld%s && \",\n #endif\n-\t\t    depth, p->elt_zero_wide);\n+\t\t       depth, p->elt_zero_wide + offset, offset ? \"-1\" : \"\");\n+\t    }\n \t  if (p->veclen)\n \t    printf (\"XVECLEN (x%d, 0) == %d && \", depth, p->veclen);\n \t  if (p->dupno >= 0)"}]}