{"sha": "83eba8781a1f4d0f55a194e2b02d89c8580120bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNlYmE4NzgxYTFmNGQwZjU1YTE5NGUyYjAyZDg5Yzg1ODAxMjBiYw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-04-16T02:52:16Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-04-16T02:52:16Z"}, "message": "Commit regression test distilled from 20963\n\nFrom-SVN: r98222", "tree": {"sha": "6cfd0a5963a1a9de7cd0543eb0cb9c0763e02716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cfd0a5963a1a9de7cd0543eb0cb9c0763e02716"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83eba8781a1f4d0f55a194e2b02d89c8580120bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83eba8781a1f4d0f55a194e2b02d89c8580120bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83eba8781a1f4d0f55a194e2b02d89c8580120bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83eba8781a1f4d0f55a194e2b02d89c8580120bc/comments", "author": null, "committer": null, "parents": [{"sha": "16c35a1fdc507fed4ae66a12c618c916375dc59a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c35a1fdc507fed4ae66a12c618c916375dc59a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16c35a1fdc507fed4ae66a12c618c916375dc59a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "d8f91e1be3153f759064c0bf28b5efea4d82f93f", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr20963.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83eba8781a1f4d0f55a194e2b02d89c8580120bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr20963.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83eba8781a1f4d0f55a194e2b02d89c8580120bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr20963.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr20963.C?ref=83eba8781a1f4d0f55a194e2b02d89c8580120bc", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* This was causing PRE to insert the value of the ADDR variable, to \n+   remove the invariant cast but in doing so, it was creating a \n+   non-invariant expression out of the invariant one, causing a later \n+   failure in PRE.  */ \n+struct sMCB { \n+  unsigned char type; \n+}; \n+ \n+extern void foo (void); \n+unsigned char mem_readb(char *pt) __attribute__((nothrow)); \n+ \n+void DOS_FreeProcessMemory(unsigned short pspseg) { \n+        while (1) { \n+                if (pspseg) \n+                        foo (); \n+                char *addr = (char*)(&((sMCB*)0)->type); \n+                if (mem_readb(addr)==0x5a) break; \n+        } \n+}; \n+ "}]}