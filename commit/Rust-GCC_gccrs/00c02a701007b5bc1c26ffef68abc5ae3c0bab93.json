{"sha": "00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjMDJhNzAxMDA3YjViYzFjMjZmZmVmNjhhYmM1YWUzYzBiYWI5Mw==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2015-11-16T09:00:09Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2015-11-16T09:00:09Z"}, "message": "re PR target/65837 ([arm-linux-gnueabihf] lto1 target specific builtin not available)\n\n2015-11-16  Christian Bruel  <christian.bruel@st.com>\n\n\tPR target/65837\n\t* config/arm/arm-protos.h (arm_init_neon_builtins): Declare.\n\t* config/arm/arm.c (arm_valid_target_attribute_tree): Call\n\tarm_init_neon_builtins.\n\t* config/arm/arm-builtins.c (arm_init_neon_builtins): Split into...\n\t(arm_init_neon_builtins_internal)\n\t(arm_init_crypto_builtins_internal):\n\tTest and set neon_set_p, neon_crypto_set_p.\n\t(neon_set_p, neon_crypto_set_p): New static booleans.\n\nFrom-SVN: r230406", "tree": {"sha": "618ca4ac806ae6d4b390a6bdc01c007183b6b789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/618ca4ac806ae6d4b390a6bdc01c007183b6b789"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/comments", "author": null, "committer": null, "parents": [{"sha": "da225f53f918c13111f19484e8b87cea023f5be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da225f53f918c13111f19484e8b87cea023f5be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da225f53f918c13111f19484e8b87cea023f5be2"}], "stats": {"total": 180, "additions": 107, "deletions": 73}, "files": [{"sha": "2febfca57c2a2aca93141064ff9483054ee0d848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "patch": "@@ -1,3 +1,15 @@\n+2015-11-16  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/65837\n+\t* config/arm/arm-protos.h (arm_init_neon_builtins): Declare.\n+\t* config/arm/arm.c (arm_valid_target_attribute_tree): Call\n+\tarm_init_neon_builtins.\n+\t* config/arm/arm-builtins.c (arm_init_neon_builtins): Split into...\n+\t(arm_init_neon_builtins_internal)\n+\t(arm_init_crypto_builtins_internal):\n+\tTest and set neon_set_p, neon_crypto_set_p.\n+\t(neon_set_p, neon_crypto_set_p): New static booleans.\n+\n 2015-11-16  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/65837"}, {"sha": "d0074051a9494009dbfa1a38dd612a0422be193c", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 91, "deletions": 73, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "patch": "@@ -893,7 +893,7 @@ arm_init_simd_builtin_scalar_types (void)\n }\n \n static void\n-arm_init_neon_builtins (void)\n+arm_init_neon_builtins_internal (void)\n {\n   unsigned int i, fcode = ARM_BUILTIN_NEON_PATTERN_START;\n \n@@ -1014,87 +1014,105 @@ arm_init_neon_builtins (void)\n \t\t\t\t     NULL, NULL_TREE);\n       arm_builtin_decls[fcode] = fndecl;\n     }\n+}\n \n-  if (TARGET_CRYPTO && TARGET_HARD_FLOAT)\n-    {\n-      tree V16UQI_type_node = arm_simd_builtin_type (V16QImode,\n-\t\t\t\t\t\t       true,\n-\t\t\t\t\t\t       false);\n+static void\n+arm_init_crypto_builtins_internal (void)\n+{\n+  tree V16UQI_type_node\n+    = arm_simd_builtin_type (V16QImode, true, false);\n \n-      tree V4USI_type_node = arm_simd_builtin_type (V4SImode,\n-\t\t\t\t\t\t      true,\n-\t\t\t\t\t\t      false);\n+  tree V4USI_type_node\n+    = arm_simd_builtin_type (V4SImode, true, false);\n \n-      tree v16uqi_ftype_v16uqi\n-\t= build_function_type_list (V16UQI_type_node, V16UQI_type_node,\n-\t\t\t\t    NULL_TREE);\n+  tree v16uqi_ftype_v16uqi\n+    = build_function_type_list (V16UQI_type_node, V16UQI_type_node,\n+\t\t\t\tNULL_TREE);\n \n-      tree v16uqi_ftype_v16uqi_v16uqi\n+  tree v16uqi_ftype_v16uqi_v16uqi\n \t= build_function_type_list (V16UQI_type_node, V16UQI_type_node,\n \t\t\t\t    V16UQI_type_node, NULL_TREE);\n \n-      tree v4usi_ftype_v4usi\n-\t= build_function_type_list (V4USI_type_node, V4USI_type_node,\n-\t\t\t\t    NULL_TREE);\n-\n-      tree v4usi_ftype_v4usi_v4usi\n-\t= build_function_type_list (V4USI_type_node, V4USI_type_node,\n-\t\t\t\t    V4USI_type_node, NULL_TREE);\n-\n-      tree v4usi_ftype_v4usi_v4usi_v4usi\n-\t= build_function_type_list (V4USI_type_node, V4USI_type_node,\n-\t\t\t\t    V4USI_type_node, V4USI_type_node,\n-\t\t\t\t    NULL_TREE);\n-\n-      tree uti_ftype_udi_udi\n-\t= build_function_type_list (unsigned_intTI_type_node,\n-\t\t\t\t    unsigned_intDI_type_node,\n-\t\t\t\t    unsigned_intDI_type_node,\n-\t\t\t\t    NULL_TREE);\n-\n-      #undef CRYPTO1\n-      #undef CRYPTO2\n-      #undef CRYPTO3\n-      #undef C\n-      #undef N\n-      #undef CF\n-      #undef FT1\n-      #undef FT2\n-      #undef FT3\n-\n-      #define C(U) \\\n-\tARM_BUILTIN_CRYPTO_##U\n-      #define N(L) \\\n-\t\"__builtin_arm_crypto_\"#L\n-      #define FT1(R, A) \\\n-\tR##_ftype_##A\n-      #define FT2(R, A1, A2) \\\n-\tR##_ftype_##A1##_##A2\n-      #define FT3(R, A1, A2, A3) \\\n-        R##_ftype_##A1##_##A2##_##A3\n-      #define CRYPTO1(L, U, R, A) \\\n-\tarm_builtin_decls[C (U)] \\\n-\t  = add_builtin_function (N (L), FT1 (R, A), \\\n-\t\t\t\t  C (U), BUILT_IN_MD, NULL, NULL_TREE);\n-      #define CRYPTO2(L, U, R, A1, A2)  \\\n-\tarm_builtin_decls[C (U)]\t\\\n-\t  = add_builtin_function (N (L), FT2 (R, A1, A2), \\\n-\t\t\t\t  C (U), BUILT_IN_MD, NULL, NULL_TREE);\n+  tree v4usi_ftype_v4usi\n+    = build_function_type_list (V4USI_type_node, V4USI_type_node,\n+\t\t\t\tNULL_TREE);\n+\n+  tree v4usi_ftype_v4usi_v4usi\n+    = build_function_type_list (V4USI_type_node, V4USI_type_node,\n+\t\t\t\tV4USI_type_node, NULL_TREE);\n+\n+  tree v4usi_ftype_v4usi_v4usi_v4usi\n+    = build_function_type_list (V4USI_type_node, V4USI_type_node,\n+\t\t\t\tV4USI_type_node, V4USI_type_node,\n+\t\t\t\tNULL_TREE);\n \n-      #define CRYPTO3(L, U, R, A1, A2, A3) \\\n-\tarm_builtin_decls[C (U)]\t   \\\n-\t  = add_builtin_function (N (L), FT3 (R, A1, A2, A3), \\\n+  tree uti_ftype_udi_udi\n+    = build_function_type_list (unsigned_intTI_type_node,\n+\t\t\t\tunsigned_intDI_type_node,\n+\t\t\t\tunsigned_intDI_type_node,\n+\t\t\t\tNULL_TREE);\n+\n+  #undef CRYPTO1\n+  #undef CRYPTO2\n+  #undef CRYPTO3\n+  #undef C\n+  #undef N\n+  #undef CF\n+  #undef FT1\n+  #undef FT2\n+  #undef FT3\n+\n+  #define C(U) \\\n+    ARM_BUILTIN_CRYPTO_##U\n+  #define N(L) \\\n+    \"__builtin_arm_crypto_\"#L\n+  #define FT1(R, A) \\\n+    R##_ftype_##A\n+  #define FT2(R, A1, A2) \\\n+    R##_ftype_##A1##_##A2\n+  #define FT3(R, A1, A2, A3) \\\n+    R##_ftype_##A1##_##A2##_##A3\n+  #define CRYPTO1(L, U, R, A) \\\n+    arm_builtin_decls[C (U)] \\\n+      = add_builtin_function (N (L), FT1 (R, A), \\\n+\t\t  C (U), BUILT_IN_MD, NULL, NULL_TREE);\n+  #define CRYPTO2(L, U, R, A1, A2)  \\\n+    arm_builtin_decls[C (U)]\t\\\n+      = add_builtin_function (N (L), FT2 (R, A1, A2), \\\n+\t\t  C (U), BUILT_IN_MD, NULL, NULL_TREE);\n+\n+  #define CRYPTO3(L, U, R, A1, A2, A3) \\\n+    arm_builtin_decls[C (U)]\t   \\\n+      = add_builtin_function (N (L), FT3 (R, A1, A2, A3), \\\n \t\t\t\t  C (U), BUILT_IN_MD, NULL, NULL_TREE);\n-      #include \"crypto.def\"\n-\n-      #undef CRYPTO1\n-      #undef CRYPTO2\n-      #undef CRYPTO3\n-      #undef C\n-      #undef N\n-      #undef FT1\n-      #undef FT2\n-      #undef FT3\n+  #include \"crypto.def\"\n+\n+  #undef CRYPTO1\n+  #undef CRYPTO2\n+  #undef CRYPTO3\n+  #undef C\n+  #undef N\n+  #undef FT1\n+  #undef FT2\n+  #undef FT3\n+}\n+\n+static bool neon_set_p = false;\n+static bool neon_crypto_set_p = false;\n+\n+void\n+arm_init_neon_builtins (void)\n+{\n+  if (! neon_set_p)\n+    {\n+      neon_set_p = true;\n+      arm_init_neon_builtins_internal ();\n+    }\n+\n+  if (!neon_crypto_set_p && TARGET_CRYPTO && TARGET_HARD_FLOAT)\n+    {\n+      neon_crypto_set_p = true;\n+      arm_init_crypto_builtins_internal ();\n     }\n }\n "}, {"sha": "8e737539e99ce9a774f720a24a06c3a050a6359a", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "patch": "@@ -214,6 +214,7 @@ extern void arm_mark_dllimport (tree);\n extern bool arm_change_mode_p (tree);\n #endif\n \n+extern void arm_init_neon_builtins (void);\n extern tree arm_valid_target_attribute_tree (tree, struct gcc_options *,\n \t\t\t\t\t     struct gcc_options *);\n extern void arm_pr_long_calls (struct cpp_reader *);"}, {"sha": "98b5c8258dc9d334da486f827f20397f15b905a5", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c02a701007b5bc1c26ffef68abc5ae3c0bab93/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=00c02a701007b5bc1c26ffef68abc5ae3c0bab93", "patch": "@@ -29846,6 +29846,9 @@ arm_valid_target_attribute_tree (tree args, struct gcc_options *opts,\n   /* Do any overrides, such as global options arch=xxx.  */\n   arm_option_override_internal (opts, opts_set);\n \n+  if (TARGET_NEON)\n+    arm_init_neon_builtins ();\n+\n   return build_target_option_node (opts);\n }\n "}]}