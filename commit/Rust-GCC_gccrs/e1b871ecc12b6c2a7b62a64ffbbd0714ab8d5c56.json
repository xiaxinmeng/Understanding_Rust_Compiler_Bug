{"sha": "e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFiODcxZWNjMTJiNmMyYTdiNjJhNjRmZmJiZDA3MTRhYjhkNWM1Ng==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2007-05-24T20:40:47Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2007-05-24T20:40:47Z"}, "message": "java-interp.h (_Jv_InterpFrame::get_pc): Only deduct one when pc_ptr is non-NULL.\n\n        * include/java-interp.h (_Jv_InterpFrame::get_pc): Only deduct\n        one when pc_ptr is non-NULL.\n\n        * prims.cc (parse_init_args): Enable JVMTI with agentlib\n        and agentpath options.\n\n        * testsuite/lib/libjava.exp (exec_gij): Add new addl_flags\n        parameter.\n        * testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one):\n        Pass '-agentlib:dummyagent' when executing gij.\n        (gij_jvmti_run): Build dummy JVMTI agent before running tests,\n        and remove it when finished.\n        * testsuite/libjava.jvmti/dummyagent.c: New file.\n\nFrom-SVN: r125040", "tree": {"sha": "392327dccccc4770b0a2781a808516934695154c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/392327dccccc4770b0a2781a808516934695154c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9cc8efb487e4df0d6e3b4769b27f1a116ad3d3"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "b7216a53e38e6f8722920f4ae2816d922e0de8cd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "patch": "@@ -1,3 +1,19 @@\n+2007-05-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_InterpFrame::get_pc): Only deduct\n+\tone when pc_ptr is non-NULL.\n+\n+\t* prims.cc (parse_init_args): Enable JVMTI with agentlib\n+\tand agentpath options.\n+\n+\t* testsuite/lib/libjava.exp (exec_gij): Add new addl_flags\n+\tparameter.\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one):\n+\tPass '-agentlib:dummyagent' when executing gij.\n+\t(gij_jvmti_run): Build dummy JVMTI agent before running tests,\n+\tand remove it when finished.\n+\t* testsuite/libjava.jvmti/dummyagent.c: New file.\n+\n 2007-05-23  Steve Ellcey  <sje@cup.hp.com>\n \n \t* Makefile.in: Regenerate."}, {"sha": "204a49fb7943cd02385cb144cf6e892d690a1841", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "patch": "@@ -466,9 +466,9 @@ class _Jv_InterpFrame : public _Jv_Frame\n     if (pc_ptr == NULL)\n       pc = 0;\n     else\n-      pc = *pc_ptr;\n+      pc = *pc_ptr - 1;\n     \n-    return pc - 1;\n+    return pc;\n   }\n };\n "}, {"sha": "706ab4b7a3e65f7ef54ba6ecc9207c1088349501", "filename": "libjava/prims.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "patch": "@@ -1,6 +1,6 @@\n // prims.cc - Code for core of runtime environment.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -1522,6 +1522,9 @@ parse_init_args (JvVMInitArgs* vm_args)\n \t        {\n \t          return -1;\n \t        }\n+\n+\t      // Mark JVMTI active\n+\t      JVMTI::enabled = true;\n             }\n     \n           continue;\n@@ -1564,6 +1567,8 @@ parse_init_args (JvVMInitArgs* vm_args)\n               return -1;\n             }\n \t\n+\t  // Mark JVMTI active\n+\t  JVMTI::enabled = true;\n           continue;\n \t}\n       else if (vm_args->ignoreUnrecognized)"}, {"sha": "c684bf64d7811f820b0f7007aad02c3daf1fc911", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006 Free Software Foundation\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007 Free Software Foundation\n \n proc load_gcc_lib { filename } {\n     global srcdir\n@@ -494,7 +494,7 @@ proc gcj_invoke {program expectFile ld_library_additions} {\n   }\n }\n \n-proc exec_gij {jarfile expectFile ld_library_additions} {\n+proc exec_gij {jarfile expectFile {ld_library_additions {}} {addl_flags {}}} {\n   global env\n   global libjava_ld_library_path\n   global ld_library_path\n@@ -512,9 +512,9 @@ proc exec_gij {jarfile expectFile ld_library_additions} {\n   set gij [libjava_find_gij]\n   set classname [file rootname [file tail $jarfile]]\n   \n-  puts \"LD_LIBRARY_PATH=. $gij -cp $jarfile $classname\"\n+  puts \"LD_LIBRARY_PATH=. $gij -cp $jarfile $addl_flags $classname\"\n \t\n-  set result [libjava_load $gij \"-cp $jarfile $classname\"]\n+  set result [libjava_load $gij \"-cp $jarfile $addl_flags $classname\"]\n   set status [lindex $result 0]\n   set output [lindex $result 1]\n "}, {"sha": "9e704a0e173454078dc73587e7fa0395461d06b2", "filename": "libjava/testsuite/libjava.jvmti/dummyagent.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Ftestsuite%2Flibjava.jvmti%2Fdummyagent.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Ftestsuite%2Flibjava.jvmti%2Fdummyagent.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fdummyagent.c?ref=e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "patch": "@@ -0,0 +1,9 @@\n+#include <jvmti.h>\n+\n+JNIEXPORT jint JNICALL \n+Agent_OnLoad (JavaVM *vm, char *options, void *reserved)\n+{\n+  // nothing -- this is just a stub to get JVMTI properly\n+  // initialized\n+}\n+"}, {"sha": "c99dd34ee02c8e164f89a392f534e0b22a20bfa3", "filename": "libjava/testsuite/libjava.jvmti/jvmti-interp.exp", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti-interp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti-interp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti-interp.exp?ref=e1b871ecc12b6c2a7b62a64ffbbd0714ab8d5c56", "patch": "@@ -133,7 +133,8 @@ proc gij_jvmti_test_one {file} {\n   libjava_arguments\n   \n   set jarfile [file join [file dirname $file] $main.jar]\n-  if {! [exec_gij $jarfile [file rootname $file].out {}]} {\n+  set gij_flags {-agentlib:dummyagent}\n+  if {! [exec_gij $jarfile [file rootname $file].out {} $gij_flags]} {\n       return 0\n   }\n \n@@ -151,14 +152,24 @@ proc gij_jvmti_run {} {\n \n   # For now we only test JVMTI on native builds.\n   if {$build_triplet == $host_triplet} {\n-      catch { lsort [glob -nocomplain ${srcdir}/${subdir}/interp/*.jar] \\\n-             } srcfiles\n+\n+    # Build our dummy JVMTI agent library\n+    if {![gcj_jni_compile_c_to_so [file join $srcdir $subdir dummyagent.c]]} {\n+      fail \"compiling dummy JVMTI agent\"\n+    } else {\n+      pass \"compiling dummy JVMTI agent\"\n+\n+      catch {lsort [glob -nocomplain ${srcdir}/${subdir}/interp/*.jar]} \\\n+\tsrcfiles\n \n       foreach x $srcfiles {\n-        gij_jvmti_test_one $x\n+\tgij_jvmti_test_one $x\n       }\n+\n+      gcj_cleanup libdummyagent.so\n+    }\n   } else {\n-      verbose \"JVMTI tests not run in cross-compilation environment\"\n+    verbose \"JVMTI tests not run in cross-compilation environment\"\n   }\n }\n "}]}