{"sha": "786ce82d44352369486d69add3cf3695b08998a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2Y2U4MmQ0NDM1MjM2OTQ4NmQ2OWFkZDNjZjM2OTViMDg5OThhMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-01-16T19:18:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-01-16T19:18:18Z"}, "message": "re PR tree-optimization/38835 (field-insensitive PTA causes libstdc++ miscompiles)\n\n2009-01-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/38835\n\tPR middle-end/36227\n\t* fold-const.c (fold_binary): Remove PTR + INT -> (INT)(PTR p+ INT)\n\tand INT + PTR -> (INT)(PTR p+ INT) folding.\n\t* tree-ssa-address.c (create_mem_ref): Properly use POINTER_PLUS_EXPR.\n\n\tjava/\n\t* builtins.c (build_addr_sum): Use POINTER_PLUS_EXPR.\n\n\t* gcc.c-torture/execute/pr36227.c: New testcase.\n\t* gcc.dg/tree-ssa/foldaddr-1.c: XFAIL.\n\t* g++.dg/init/const7.C: Likewise.\n\nFrom-SVN: r143442", "tree": {"sha": "c4997b22540cbef79a66ef53490b30491bd30b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4997b22540cbef79a66ef53490b30491bd30b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/786ce82d44352369486d69add3cf3695b08998a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/786ce82d44352369486d69add3cf3695b08998a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/786ce82d44352369486d69add3cf3695b08998a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/786ce82d44352369486d69add3cf3695b08998a2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1cb09ada04abbf0087eafedaab7b3ec32b23659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cb09ada04abbf0087eafedaab7b3ec32b23659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1cb09ada04abbf0087eafedaab7b3ec32b23659"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "f3c186ee1d7673ca55941dd9329346ecae8caf7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -1,3 +1,11 @@\n+2009-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38835\n+\tPR middle-end/36227\n+\t* fold-const.c (fold_binary): Remove PTR + INT -> (INT)(PTR p+ INT)\n+\tand INT + PTR -> (INT)(PTR p+ INT) folding.\n+\t* tree-ssa-address.c (create_mem_ref): Properly use POINTER_PLUS_EXPR.\n+\n 2009-01-16  Adam Nemet  <anemet@caviumnetworks.com>\n \n \tPR target/38554"}, {"sha": "eb7d7c91210d643b9425f9956ac130d210213b7e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -9864,20 +9864,6 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n       return NULL_TREE;\n \n     case PLUS_EXPR:\n-      /* PTR + INT -> (INT)(PTR p+ INT) */\n-      if (POINTER_TYPE_P (TREE_TYPE (arg0))\n-\t  && INTEGRAL_TYPE_P (TREE_TYPE (arg1)))\n-\treturn fold_convert (type, fold_build2 (POINTER_PLUS_EXPR,\n-\t\t\t\t\t\tTREE_TYPE (arg0),\n-\t\t\t\t\t\targ0,\n-\t\t\t\t\t\tfold_convert (sizetype, arg1)));\n-      /* INT + PTR -> (INT)(PTR p+ INT) */\n-      if (POINTER_TYPE_P (TREE_TYPE (arg1))\n-\t  && INTEGRAL_TYPE_P (TREE_TYPE (arg0)))\n-\treturn fold_convert (type, fold_build2 (POINTER_PLUS_EXPR,\n-\t\t\t\t\t\tTREE_TYPE (arg1),\n-\t\t\t\t\t\targ1,\n-\t\t\t\t\t\tfold_convert (sizetype, arg0)));\n       /* A + (-B) -> A - B */\n       if (TREE_CODE (arg1) == NEGATE_EXPR)\n \treturn fold_build2 (MINUS_EXPR, type,"}, {"sha": "dd696e689da35068cb631d5eee7a9333cfd44039", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -1,3 +1,9 @@\n+2009-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38835\n+\tPR middle-end/36227\n+\t* builtins.c (build_addr_sum): Use POINTER_PLUS_EXPR.\n+\n 2008-12-05  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR bootstrap/38262"}, {"sha": "c46241b7a81458b678cd14798982f7fa417a6205", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -265,9 +265,10 @@ static tree\n build_addr_sum (tree type, tree addr, tree offset)\n {\n   tree ptr_type = build_pointer_type (type);\n-  return  fold_build2 (PLUS_EXPR, \n-\t\t       ptr_type, \n-\t\t       fold_convert (ptr_type, addr), offset);\n+  return fold_build2 (POINTER_PLUS_EXPR,\n+\t\t      ptr_type,\n+\t\t      fold_convert (ptr_type, addr),\n+\t\t      fold_convert (sizetype, offset));\n }\n \n /* Make sure that this-arg is non-NULL.  This is a security check.  */"}, {"sha": "a7084b7e850717770f56d25da76509c720f83f19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -1,3 +1,11 @@\n+2009-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38835\n+\tPR middle-end/36227\n+\t* gcc.c-torture/execute/pr36227.c: New testcase.\n+\t* gcc.dg/tree-ssa/foldaddr-1.c: XFAIL.\n+\t* g++.dg/init/const7.C: Likewise.\n+\n 2009-01-16  Adam Nemet  <anemet@caviumnetworks.com>\n \n \tPR target/38554"}, {"sha": "348bd58d6905d44e2adf3952974191ff39c044b4", "filename": "gcc/testsuite/g++.dg/init/const7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -9,5 +9,5 @@ short offsets[1] = {\n // This ensures that we get a dump whether or not the bug is present.\n void fn() { }\n \n-// { dg-final { scan-tree-dump-not \"initialization\"  \"gimple\" } }\n+// { dg-final { scan-tree-dump-not \"initialization\"  \"gimple\" { xfail *-*-* } } }\n // { dg-final { cleanup-tree-dump \"gimple\" } }"}, {"sha": "355adf4c5dfc0dce055329001de507cd89c512b0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr36227.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36227.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36227.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36227.c?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -0,0 +1,15 @@\n+#include <stdint.h>\n+extern void abort (void);\n+int main()\n+{\n+  int i = 1;\n+  int *p = &i;\n+  uintptr_t iptr;\n+\n+  iptr = (uintptr_t)p - (uintptr_t)&iptr;\n+  p = (int *)((uintptr_t)&iptr + iptr);\n+  if (*p != 1)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "2d8ccae2777fbdfe6e9693dd9bf946fc3287c881", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldaddr-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldaddr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldaddr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldaddr-1.c?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -11,6 +11,6 @@ int foo(char *b)\n /* Folding should have determined that the two addresses were\n    not identical and thus collapsed the function into a trivial\n    \"return 0\".  */\n-/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"original\"} } */\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"original\" { xfail *-*-* } } */\n /* { dg-final { cleanup-tree-dump \"original\" } } */\n "}, {"sha": "da236ffd5a9e720a2fab03151f3b950f7f02498c", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/786ce82d44352369486d69add3cf3695b08998a2/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=786ce82d44352369486d69add3cf3695b08998a2", "patch": "@@ -619,9 +619,9 @@ create_mem_ref (gimple_stmt_iterator *gsi, tree type, aff_tree *addr,\n \t    {\n \t      atype = TREE_TYPE (tmp);\n \t      parts.base = force_gimple_operand_gsi (gsi,\n-\t\t\tfold_build2 (PLUS_EXPR, atype,\n-\t\t\t\t     fold_convert (atype, parts.base),\n-\t\t\t\t     tmp),\n+\t\t\tfold_build2 (POINTER_PLUS_EXPR, atype,\n+\t\t\t\t     tmp,\n+\t\t\t\t     fold_convert (sizetype, parts.base)),\n \t\t\ttrue, NULL_TREE, true, GSI_SAME_STMT);\n \t    }\n \t  else"}]}