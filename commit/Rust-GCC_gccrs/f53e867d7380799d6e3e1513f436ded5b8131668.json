{"sha": "f53e867d7380799d6e3e1513f436ded5b8131668", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzZTg2N2Q3MzgwNzk5ZDZlM2UxNTEzZjQzNmRlZDViODEzMTY2OA==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-03-08T21:30:11Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-03-08T21:30:11Z"}, "message": "intrinsic.texi (GERROR, [...]): New.\n\n2007-03-08  Daniel Franke  <franke.daniel@gmail.com>\n\n\t* intrinsic.texi (GERROR, ISATTY, TTYNAM): New.\n\t(ABORT, FLUSH, FNUM, IRAND, MALLOC, SIGNAL, SRAND): Fixed typo.\n\t* intrinsic.c (add_subroutines): Adjusted dummy argument names \n\tof GERROR and TTYNAM.\n\nFrom-SVN: r122712", "tree": {"sha": "ccef783cf79a2a3860d40173982e77ab10701da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccef783cf79a2a3860d40173982e77ab10701da4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f53e867d7380799d6e3e1513f436ded5b8131668", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53e867d7380799d6e3e1513f436ded5b8131668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f53e867d7380799d6e3e1513f436ded5b8131668", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53e867d7380799d6e3e1513f436ded5b8131668/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9dc9c4ee6974bfa4297e7d862db301800233451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9dc9c4ee6974bfa4297e7d862db301800233451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9dc9c4ee6974bfa4297e7d862db301800233451"}], "stats": {"total": 154, "additions": 145, "deletions": 9}, "files": [{"sha": "618031997a25971e99e20614736a3324e6fa626b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53e867d7380799d6e3e1513f436ded5b8131668/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53e867d7380799d6e3e1513f436ded5b8131668/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f53e867d7380799d6e3e1513f436ded5b8131668", "patch": "@@ -1,3 +1,10 @@\n+2007-03-08  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\t* intrinsic.texi (GERROR, ISATTY, TTYNAM): New.\n+\t(ABORT, FLUSH, FNUM, IRAND, MALLOC, SIGNAL, SRAND): Fixed typo.\n+\t* intrinsic.c (add_subroutines): Adjusted dummy argument names \n+\tof GERROR and TTYNAM.\n+\n 2007-07-08  Tobias Burnus  <burnus@net-b.de>\n \n \t* module.c (gfc_match_use): Support renaming of operators"}, {"sha": "5db319adb1046475bc7676187d64b7f2c27b3f0d", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53e867d7380799d6e3e1513f436ded5b8131668/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53e867d7380799d6e3e1513f436ded5b8131668/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=f53e867d7380799d6e3e1513f436ded5b8131668", "patch": "@@ -2383,7 +2383,7 @@ add_subroutines (void)\n \t      dt, BT_CHARACTER, dc, REQUIRED);\n \n   add_sym_1s (\"gerror\", 0, BT_UNKNOWN, 0, GFC_STD_GNU,\n-\t      gfc_check_gerror, NULL, gfc_resolve_gerror, c, BT_CHARACTER,\n+\t      gfc_check_gerror, NULL, gfc_resolve_gerror, res, BT_CHARACTER,\n \t      dc, REQUIRED);\n \n   add_sym_2s (\"getcwd\", 0, BT_UNKNOWN, 0, GFC_STD_GNU,\n@@ -2553,7 +2553,7 @@ add_subroutines (void)\n \n   add_sym_2s (\"ttynam\", 0, BT_UNKNOWN, 0, GFC_STD_GNU,\n \t      gfc_check_ttynam_sub, NULL, gfc_resolve_ttynam_sub,\n-\t      ut, BT_INTEGER, di, REQUIRED, c, BT_CHARACTER, dc, REQUIRED);\n+\t      ut, BT_INTEGER, di, REQUIRED, name, BT_CHARACTER, dc, REQUIRED);\n \n   add_sym_2s (\"umask\", 0, BT_UNKNOWN, 0, GFC_STD_GNU,\n \t      gfc_check_umask_sub, NULL, gfc_resolve_umask_sub,"}, {"sha": "b1aa67753978559bd709ede46ee134d6066e2b06", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 136, "deletions": 7, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53e867d7380799d6e3e1513f436ded5b8131668/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53e867d7380799d6e3e1513f436ded5b8131668/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=f53e867d7380799d6e3e1513f436ded5b8131668", "patch": "@@ -125,6 +125,7 @@ Some intrinsics have documentation yet to be completed as indicated by 'document\n * @code{FSEEK}:         FSEEK,     Low level file positioning subroutine\n * @code{FSTAT}:         FSTAT,     Get file status\n * @code{FTELL}:         FTELL,     Current stream position\n+* @code{GERROR}:        GERROR,    Get last system error message\n * @code{GETARG}:        GETARG,    Get command line arguments\n * @code{GET_COMMAND}:   GET_COMMAND, Get the entire command line\n * @code{GET_COMMAND_ARGUMENT}: GET_COMMAND_ARGUMENT, Get command line arguments\n@@ -152,6 +153,7 @@ Some intrinsics have documentation yet to be completed as indicated by 'document\n * @code{INT}:           INT,       Convert to integer type\n * @code{IOR}:           IOR,       Bitwise logical or\n * @code{IRAND}:         IRAND,     Integer pseudo-random number\n+* @code{ISATTY}:        ISATTY,    Whether a unit is a terminal device\n * @code{ISHFT}:         ISHFT,     Shift bits\n * @code{ISHFTC}:        ISHFTC,    Shift bits circularly\n * @code{ITIME}:         ITIME,     Current local time (hour/minutes/seconds)\n@@ -244,6 +246,7 @@ Some intrinsics have documentation yet to be completed as indicated by 'document\n * @code{TRANSFER}:      TRANSFER,  Transfer bit patterns\n * @code{TRANSPOSE}:     TRANSPOSE, Transpose an array of rank two\n * @code{TRIM}:          TRIM,      Function to remove trailing blank characters of a string\n+* @code{TTYNAM}:        TTYNAM,    Get the name of a terminal device.\n * @code{UBOUND}:        UBOUND,    Upper dimension bounds of an array\n * @code{UMASK}:         UMASK,     Set the file creation mask\n * @code{UNLINK}:        UNLINK,    Remove a file from the file system\n@@ -308,7 +311,7 @@ which is suitable for debugging purposes.\n GNU extension\n \n @item @emph{Class}:\n-non-elemental subroutine\n+Non-elemental subroutine\n \n @item @emph{Syntax}:\n @code{CALL ABORT}\n@@ -3612,7 +3615,7 @@ argument, all units are flushed, otherwise just the unit specified.\n GNU extension\n \n @item @emph{Class}:\n-non-elemental subroutine\n+Non-elemental subroutine\n \n @item @emph{Syntax}:\n @code{CALL FLUSH(UNIT)}\n@@ -3644,7 +3647,7 @@ open Fortran I/O unit @code{UNIT}.\n GNU extension\n \n @item @emph{Class}:\n-non-elemental function\n+Non-elemental function\n \n @item @emph{Syntax}:\n @code{RESULT = FNUM(UNIT)}\n@@ -3973,6 +3976,44 @@ END PROGRAM\n \n \n \n+@node GERROR\n+@section @code{GERROR} --- Get last system error message\n+@cindex @code{GERROR} intrinsic\n+\n+@table @asis\n+@item @emph{Description}:\n+Returns the system error message corresponding to the last system error.\n+This resembles the functionality of @code{strerror(3)} in C.\n+\n+@item @emph{Standard}:\n+GNU extension\n+\n+@item @emph{Class}:\n+Subroutine\n+\n+@item @emph{Syntax}:\n+@code{CALL GERROR(RESULT)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{RESULT}  @tab Shall of type @code{CHARACTER(*)}.\n+@end multitable\n+\n+@item @emph{Example}:\n+@smallexample\n+PROGRAM test_gerror\n+  CHARACTER(len=100) :: msg\n+  CALL gerror(msg)\n+  WRITE(*,*) msg\n+END PROGRAM\n+@end smallexample\n+\n+@item @emph{See also}:\n+@ref{IERRNO}, @ref{PERROR}\n+@end table\n+\n+\n+\n @node GETARG\n @section @code{GETARG} --- Get command line arguments\n @cindex @code{GETARG} intrinsic\n@@ -5118,7 +5159,7 @@ it is used as a new seed with @code{SRAND}.\n GNU extension\n \n @item @emph{Class}:\n-non-elemental function\n+Non-elemental function\n \n @item @emph{Syntax}:\n @code{RESULT = IRAND(FLAG)}\n@@ -5146,6 +5187,48 @@ end program test_irand\n \n \n \n+@node ISATTY\n+@section @code{ISATTY} --- Whether a unit is a terminal device.\n+@cindex @code{ISATTY} intrinsic\n+\n+@table @asis\n+@item @emph{Description}:\n+Determine whether a unit is connected to a terminal device.\n+\n+@item @emph{Standard}:\n+GNU extension.\n+\n+@item @emph{Class}:\n+Non-elemental function.\n+\n+@item @emph{Syntax}:\n+@code{RESULT = ISATTY(UNIT)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{UNIT} @tab Shall be a scalar @code{INTEGER(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+Returns @code{.TRUE.} if the @var{UNIT} is connected to a terminal \n+device, @code{.FALSE.} otherwise.\n+\n+@item @emph{Example}:\n+@smallexample\n+PROGRAM test_isatty\n+  INTEGER(kind=1) :: unit\n+  DO unit = 1, 10\n+    write(*,*) isatty(unit=unit)\n+  END DO\n+END PROGRAM\n+@end smallexample\n+@item @emph{See also}:\n+@ref{TTYNAM}\n+@end table\n+\n+\n+\n+\n @node ISHFT\n @section @code{ISHFT} --- Shift bits\n @cindex @code{ISHFT} intrinsic\n@@ -6041,7 +6124,7 @@ using Fortran 95 pointers, the memory allocation intrinsic is\n GNU extension\n \n @item @emph{Class}:\n-non-elemental function\n+Non-elemental function\n \n @item @emph{Syntax}:\n @code{PTR = MALLOC(SIZE)}\n@@ -7945,7 +8028,7 @@ is supplied, it is set to the value returned by @code{signal(2)}.\n GNU extension\n \n @item @emph{Class}:\n-subroutine, non-elemental function\n+Subroutine, non-elemental function\n \n @item @emph{Syntax}:\n @multitable @columnfractions .80\n@@ -8291,7 +8374,7 @@ generator is specified by the required argument @var{SEED}.\n GNU extension\n \n @item @emph{Class}:\n-non-elemental subroutine\n+Non-elemental subroutine\n \n @item @emph{Syntax}:\n @code{CALL SRAND(SEED)}\n@@ -8805,6 +8888,52 @@ Transformational function\n \n \n \n+@node TTYNAM\n+@section @code{TTYNAM} --- Get the name of a terminal device.\n+@cindex @code{TTYNAM} intrinsic\n+\n+@table @asis\n+@item @emph{Description}:\n+Get the name of a terminal device. For more information, \n+see @code{ttyname(3)}.\n+\n+This intrinsic is provided in both subroutine and function forms; \n+however, only one form can be used in any given program unit. \n+\n+@item @emph{Standard}:\n+GNU extension\n+\n+@item @emph{Class}:\n+Subroutine, non-elemental function\n+\n+@item @emph{Syntax}:\n+@multitable @columnfractions .80\n+@item @code{CALL TTYNAM(UNIT, NAME)}\n+@item @code{NAME = TTYNAM(UNIT)}\n+@end multitable\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{UNIT} @tab Shall be a scalar @code{INTEGER(*)}.\n+@item @var{NAME} @tab Shall be of type @code{CHARACTER(*)}.\n+@end multitable\n+\n+@item @emph{Example}:\n+@smallexample\n+PROGRAM test_ttynam\n+  INTEGER :: unit\n+  DO unit = 1, 10\n+    IF (isatty(unit=unit)) write(*,*) ttynam(unit)\n+  END DO\n+END PROGRAM\n+@end smallexample\n+\n+@item @emph{See also}:\n+@ref{ISATTY}\n+@end table\n+\n+\n+\n @node UBOUND\n @section @code{UBOUND} --- Upper dimension bounds of an array\n @cindex @code{UBOUND} intrinsic"}]}