{"sha": "b3771d3f6f91775e9618c1b41b8fed1da632df0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM3NzFkM2Y2ZjkxNzc1ZTk2MThjMWI0MWI4ZmVkMWRhNjMyZGYwZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-07-08T13:22:14Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-07-08T13:22:14Z"}, "message": "allocated_ptr.h (__allocated_ptr::operator=): Add missing return.\n\n\t* include/bits/allocated_ptr.h (__allocated_ptr::operator=): Add\n\tmissing return.\n\t* include/experimental/any: Remove unused header.\n\t* include/std/functional (_Maybe_wrap_member_pointer): Fix comments.\n\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n\t* testsuite/util/testsuite_regex.h: Move include guard.\n\nFrom-SVN: r212360", "tree": {"sha": "39966e01620e42a89eab8aa10b53ba48ee8e0021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39966e01620e42a89eab8aa10b53ba48ee8e0021"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3771d3f6f91775e9618c1b41b8fed1da632df0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3771d3f6f91775e9618c1b41b8fed1da632df0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3771d3f6f91775e9618c1b41b8fed1da632df0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3771d3f6f91775e9618c1b41b8fed1da632df0d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2c06385fe18141a7d3ea75e37cd72b142ed55d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c06385fe18141a7d3ea75e37cd72b142ed55d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c06385fe18141a7d3ea75e37cd72b142ed55d8"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "7e03e7953c62bec0a63aeffe91aff6018d182a2b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b3771d3f6f91775e9618c1b41b8fed1da632df0d", "patch": "@@ -1,3 +1,12 @@\n+2014-07-08  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/allocated_ptr.h (__allocated_ptr::operator=): Add\n+\tmissing return.\n+\t* include/experimental/any: Remove unused header.\n+\t* include/std/functional (_Maybe_wrap_member_pointer): Fix comments.\n+\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n+\t* testsuite/util/testsuite_regex.h: Move include guard.\n+\n 2014-07-01  Tim Shen  <timshen@google.com>\n \n \tPR libstdc++/61601"}, {"sha": "4ae3836675e96411f7b0b0470c37e49c0d1aea43", "filename": "libstdc++-v3/include/bits/allocated_ptr.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocated_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocated_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocated_ptr.h?ref=b3771d3f6f91775e9618c1b41b8fed1da632df0d", "patch": "@@ -73,7 +73,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /// Release ownership of the owned pointer\n-      __allocated_ptr& operator=(std::nullptr_t) noexcept { _M_ptr = nullptr; }\n+      __allocated_ptr&\n+      operator=(std::nullptr_t) noexcept\n+      {\n+\t_M_ptr = nullptr;\n+\treturn *this;\n+      }\n \n       /// Get the address that the owned pointer refers to.\n       value_type* get() { return _S_raw_ptr(_M_ptr); }"}, {"sha": "a69d0067fd91668f6e20a1acfa2b4ba7196b3839", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=b3771d3f6f91775e9618c1b41b8fed1da632df0d", "patch": "@@ -41,7 +41,6 @@\n #include <type_traits>\n #include <bits/alloc_traits.h>\n #include <bits/uses_allocator.h>\n-#include <bits/functexcept.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "15247bf41d928ff91d53dff9d1b29fd7a075840d", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=b3771d3f6f91775e9618c1b41b8fed1da632df0d", "patch": "@@ -1184,8 +1184,8 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n   /**\n    *  Maps member pointers into instances of _Mem_fn but leaves all\n-   *  other function objects untouched. Used by tr1::bind(). The\n-   *  primary template handles the non--member-pointer case.\n+   *  other function objects untouched. Used by std::bind(). The\n+   *  primary template handles the non-member-pointer case.\n    */\n   template<typename _Tp>\n     struct _Maybe_wrap_member_pointer\n@@ -1203,7 +1203,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n   /**\n    *  Maps member pointers into instances of _Mem_fn but leaves all\n-   *  other function objects untouched. Used by tr1::bind(). This\n+   *  other function objects untouched. Used by std::bind(). This\n    *  partial specialization handles the member pointer case.\n    */\n   template<typename _Tp, typename _Class>"}, {"sha": "9a12ec376243d5c6499613a2ec28319935d59b63", "filename": "libstdc++-v3/testsuite/experimental/any/misc/any_cast_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc?ref=b3771d3f6f91775e9618c1b41b8fed1da632df0d", "patch": "@@ -26,5 +26,5 @@ void test01()\n   using std::experimental::any_cast;\n \n   const any y(1);\n-  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 381 }\n+  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 380 }\n }"}, {"sha": "da2094140947dab628706090f1940e1348f0ec7d", "filename": "libstdc++-v3/testsuite/util/testsuite_regex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3771d3f6f91775e9618c1b41b8fed1da632df0d/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h?ref=b3771d3f6f91775e9618c1b41b8fed1da632df0d", "patch": "@@ -19,13 +19,13 @@\n // <http://www.gnu.org/licenses/>.\n //\n \n+#ifndef _TESTSUITE_REGEX_H\n+#define _TESTSUITE_REGEX_H 1\n+\n #include <regex>\n #include <stdexcept>\n #include <iostream>\n \n-#ifndef _TESTSUITE_REGEX_H\n-#define _TESTSUITE_REGEX_H 1\n-\n namespace __gnu_test\n {\n   // Test on a compilation of simple expressions, throw regex_error on error."}]}