{"sha": "f57b1ad380462f8b4fd5ce5208b605095f81d50b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU3YjFhZDM4MDQ2MmY4YjRmZDVjZTUyMDhiNjA1MDk1ZjgxZDUwYg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1997-03-18T09:28:41Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1997-03-18T09:28:41Z"}, "message": "(movhi): Handle generation of large constants during\nand after reload.\n\nFrom-SVN: r13730", "tree": {"sha": "9d78692656e5e117834430c83d54c540a78eb712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d78692656e5e117834430c83d54c540a78eb712"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f57b1ad380462f8b4fd5ce5208b605095f81d50b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57b1ad380462f8b4fd5ce5208b605095f81d50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f57b1ad380462f8b4fd5ce5208b605095f81d50b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57b1ad380462f8b4fd5ce5208b605095f81d50b/comments", "author": null, "committer": null, "parents": [{"sha": "2033a41a96dfcbff14006e26bbc251783ea3e8a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2033a41a96dfcbff14006e26bbc251783ea3e8a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2033a41a96dfcbff14006e26bbc251783ea3e8a3"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "33cce5467176b467d02784b67a596103c9b2a9b6", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f57b1ad380462f8b4fd5ce5208b605095f81d50b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f57b1ad380462f8b4fd5ce5208b605095f81d50b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f57b1ad380462f8b4fd5ce5208b605095f81d50b", "patch": "@@ -2590,6 +2590,20 @@\n \t    }\n \t}\n     }\n+  /* Handle loading a large integer during reload */\n+  else if (GET_CODE (operands[1]) == CONST_INT\n+\t   && ! const_ok_for_arm (INTVAL (operands[1]))\n+\t   && ! const_ok_for_arm (~INTVAL (operands[1])))\n+    {\n+      /* Writing a constant to memory needs a scratch, which should\n+\t be handled with SECONDARY_RELOADs.  */\n+      if (GET_CODE (operands[0]) != REG)\n+\tabort ();\n+\n+      operands[0] = gen_rtx (SUBREG, SImode, operands[0], 0);\n+      emit_insn (gen_movsi (operands[0], operands[1]));\n+      DONE;\n+    }\n }\n \")\n "}]}