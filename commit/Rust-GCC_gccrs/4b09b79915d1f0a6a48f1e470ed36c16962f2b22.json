{"sha": "4b09b79915d1f0a6a48f1e470ed36c16962f2b22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIwOWI3OTkxNWQxZjBhNmE0OGYxZTQ3MGVkMzZjMTY5NjJmMmIyMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-02-10T00:42:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-02-10T00:42:02Z"}, "message": "debug.xml: Improve data race docs.\n\n2011-02-10  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* doc/xml/manual/debug.xml: Improve data race docs.\n\nFrom-SVN: r169995", "tree": {"sha": "ed25fc705d7e2ca4a26ff9b304635b6f12867be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed25fc705d7e2ca4a26ff9b304635b6f12867be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b09b79915d1f0a6a48f1e470ed36c16962f2b22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b09b79915d1f0a6a48f1e470ed36c16962f2b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b09b79915d1f0a6a48f1e470ed36c16962f2b22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b09b79915d1f0a6a48f1e470ed36c16962f2b22/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a58cf9794b1452be6e74bd9bcb56fc75f5de4721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58cf9794b1452be6e74bd9bcb56fc75f5de4721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58cf9794b1452be6e74bd9bcb56fc75f5de4721"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "ae163c72dc22c936ea360bad1fa54771f47a282c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b09b79915d1f0a6a48f1e470ed36c16962f2b22/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b09b79915d1f0a6a48f1e470ed36c16962f2b22/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4b09b79915d1f0a6a48f1e470ed36c16962f2b22", "patch": "@@ -1,3 +1,7 @@\n+2011-02-10  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* doc/xml/manual/debug.xml: Improve data race docs.\n+\n 2011-02-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/47668"}, {"sha": "05994ec17a9d4729967ae92bcda67ae839d145de", "filename": "libstdc++-v3/doc/xml/manual/debug.xml", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b09b79915d1f0a6a48f1e470ed36c16962f2b22/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b09b79915d1f0a6a48f1e470ed36c16962f2b22/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug.xml?ref=4b09b79915d1f0a6a48f1e470ed36c16962f2b22", "patch": "@@ -191,41 +191,44 @@\n \n <section xml:id=\"debug.races\"><info><title>Data Race Hunting</title></info>\n <para>\n-  All synchronization primitives used in the library internals should be\n+  All synchronization primitives used in the library internals need to be\n   understood by race detectors so that they do not produce false reports.\n </para>\n \n <para>\n-  We use two annotations (macros) to explain low-level synchronization \n+  Two annotation macros are used to explain low-level synchronization \n   to race detectors:\n   <code>_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE()</code> and\n   <code> _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER()</code>.\n-  By default, these two macros are defined empty -- anyone who wants\n-  to use a race detector will need to redefine these macros to call an\n+  By default, these macros are defined empty -- anyone who wants\n+  to use a race detector needs to redefine them to call an\n   appropriate API.\n-  Since these macros are empty by default, redefining them in the user code\n-  will affect only the inline template code, e.g. <code>shared_ptr</code>.\n-  In order to redefine the macros in <code>basic_string</code> one will\n-  need to disable extern templates (by defining \n-  <code>_GLIBCXX_EXTERN_TEMPLATE=-1</code>) or rebuild the \n+  Since these macros are empty by default when the library is built,\n+  redefining them will only affect inline functions and template\n+  instantiations which are compiled in user code. This allows annotation\n+  of templates such as <code>shared_ptr</code>, but not code which is\n+  only instantiated in the library.\n+  In order to annotate <code>basic_string</code> reference counting it\n+  is necessary to disable extern templates (by defining \n+  <code>_GLIBCXX_EXTERN_TEMPLATE=-1</code>) or to rebuild the \n   <code>.so</code> file.\n-  The rest of the cases (currently, <code>ios_base::Init::~Init</code>,\n-  <code>locale::_Impl</code> and <code>locale::facet</code>) will require\n-  to rebuild the <code>.so</code> file.\n+  Annotating the remaining atomic operations (at the time of writing these\n+  are in <code>ios_base::Init::~Init</code>, <code>locale::_Impl</code> and\n+  <code>locale::facet</code>) requires rebuilding the <code>.so</code> file.\n </para>\n \n <para>\n-  The approach described above works at least with the following race \n+  The approach described above is known to work with the following race\n   detection tools:\n   <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n   xlink:href=\"http://valgrind.org/docs/manual/drd-manual.html\">\n-  DRD </link>,\n+  DRD</link>,\n   <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n   xlink:href=\"http://valgrind.org/docs/manual/hg-manual.html\"> \n-  Helgrind </link>,\n+  Helgrind</link>, and\n   <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n   xlink:href=\"http://code.google.com/p/data-race-test\"> \n-  ThreadSanitizer </link>.\n+  ThreadSanitizer</link>.\n </para>\n \n <para>\n@@ -235,7 +238,7 @@\n   #define _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) ANNOTATE_HAPPENS_BEFORE(A)\n   #define _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)  ANNOTATE_HAPPENS_AFTER(A)\n </programlisting>\n-  Refer to the documentation of each particular tool for the details.\n+  Refer to the documentation of each particular tool for details.\n </para>\n \n </section>"}]}