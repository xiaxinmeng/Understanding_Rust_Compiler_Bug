{"sha": "1eac9f59f2a15474966ffa2fe591119cc5a4360b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhYzlmNTlmMmExNTQ3NDk2NmZmYTJmZTU5MTExOWNjNWE0MzYwYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-07-01T04:27:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-07-01T04:27:39Z"}, "message": "sparc.c (function_arg_record_value): Take a MODE arg with which to create the PARALLEL.\n\n        * sparc.c (function_arg_record_value): Take a MODE arg with which to\n        create the PARALLEL.  Update all callers.\n\nFrom-SVN: r20866", "tree": {"sha": "81ca73988a2a059869278eb2fa759e0c49b14d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81ca73988a2a059869278eb2fa759e0c49b14d7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eac9f59f2a15474966ffa2fe591119cc5a4360b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eac9f59f2a15474966ffa2fe591119cc5a4360b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eac9f59f2a15474966ffa2fe591119cc5a4360b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eac9f59f2a15474966ffa2fe591119cc5a4360b/comments", "author": null, "committer": null, "parents": [{"sha": "822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "f468786bc388b2735cffb92278172a55e448b5a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eac9f59f2a15474966ffa2fe591119cc5a4360b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eac9f59f2a15474966ffa2fe591119cc5a4360b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1eac9f59f2a15474966ffa2fe591119cc5a4360b", "patch": "@@ -1,3 +1,8 @@\n+Wed Jul  1 04:22:23 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* sparc.c (function_arg_record_value): Take a MODE arg with which to\n+\tcreate the PARALLEL.  Update all callers.\n+\n Wed Jul  1 04:10:35 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* expr.c (expand_assignment, store_constructor, expand_expr): Use"}, {"sha": "92b2049eb8a8fdb5728f2540f21d01d9f26ef656", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eac9f59f2a15474966ffa2fe591119cc5a4360b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eac9f59f2a15474966ffa2fe591119cc5a4360b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1eac9f59f2a15474966ffa2fe591119cc5a4360b", "patch": "@@ -4223,8 +4223,9 @@ function_arg_record_value_2 (type, startbitpos, parms)\n }\n \n static rtx\n-function_arg_record_value (type, slotno, named, regbase)\n+function_arg_record_value (type, mode, slotno, named, regbase)\n      tree type;\n+     enum machine_mode mode;\n      int slotno, named, regbase;\n {\n   HOST_WIDE_INT typesize = int_size_in_bytes (type);\n@@ -4266,7 +4267,7 @@ function_arg_record_value (type, slotno, named, regbase)\n \t     anyway so the rest of gcc doesn't go nuts.  Returning a PARALLEL\n \t     leads to breakage due to the fact that there are zero bytes to\n \t     load.  */\n-\t  return gen_rtx_REG (DImode, regbase);\n+\t  return gen_rtx_REG (mode, regbase);\n \t}\n       else\n \t{\n@@ -4280,7 +4281,7 @@ function_arg_record_value (type, slotno, named, regbase)\n   if (nregs == 0)\n     abort();\n \n-  parms.ret = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (nregs));\n+  parms.ret = gen_rtx_PARALLEL (mode, rtvec_alloc (nregs));\n \n   /* Fill in the entries.  */\n   parms.nregs = 0;\n@@ -4412,7 +4413,7 @@ function_arg (cum, mode, type, named, incoming_p)\n       if (int_size_in_bytes (type) > 16)\n \tabort (); /* shouldn't get here */\n \n-      return function_arg_record_value (type, slotno, named, regbase);\n+      return function_arg_record_value (type, mode, slotno, named, regbase);\n     }\n   else if (type && TREE_CODE (type) == UNION_TYPE)\n     {\n@@ -4642,7 +4643,7 @@ function_value (type, mode, incoming_p)\n \t  if (int_size_in_bytes (type) > 32)\n \t    abort (); /* shouldn't get here */\n \n-\t  return function_arg_record_value (type, 0, 1, regbase);\n+\t  return function_arg_record_value (type, mode, 0, 1, regbase);\n \t}\n       else if (TREE_CODE (type) == UNION_TYPE)\n \t{"}]}