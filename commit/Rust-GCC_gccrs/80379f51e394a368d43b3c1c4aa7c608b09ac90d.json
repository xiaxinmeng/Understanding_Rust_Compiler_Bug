{"sha": "80379f51e394a368d43b3c1c4aa7c608b09ac90d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAzNzlmNTFlMzk0YTM2OGQ0M2IzYzFjNGFhN2M2MDhiMDlhYzkwZA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-09-05T09:13:25Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-09-05T09:13:25Z"}, "message": "emit-rtl.c (gen_rtvec): Rewrite not using gen_rtvec_v.\n\n2008-09-05  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* emit-rtl.c (gen_rtvec): Rewrite not using gen_rtvec_v.\n\t(gen_rtvec_v): Fix coding standards.\n\nFrom-SVN: r140031", "tree": {"sha": "3fa38c098461e2a3c76e46cd455d0e583e176313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fa38c098461e2a3c76e46cd455d0e583e176313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80379f51e394a368d43b3c1c4aa7c608b09ac90d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80379f51e394a368d43b3c1c4aa7c608b09ac90d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80379f51e394a368d43b3c1c4aa7c608b09ac90d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80379f51e394a368d43b3c1c4aa7c608b09ac90d/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0cf9dcf8059f11070bd77445ae399c994bbee410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf9dcf8059f11070bd77445ae399c994bbee410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf9dcf8059f11070bd77445ae399c994bbee410"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "16fdc9d64475e938b2f1d54bd68bc67e960930a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80379f51e394a368d43b3c1c4aa7c608b09ac90d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80379f51e394a368d43b3c1c4aa7c608b09ac90d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80379f51e394a368d43b3c1c4aa7c608b09ac90d", "patch": "@@ -1,3 +1,8 @@\n+2008-09-05  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* emit-rtl.c (gen_rtvec): Rewrite not using gen_rtvec_v.\n+\t(gen_rtvec_v): Fix coding standards.\n+\n 2008-09-04  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (decide_alg): Be more conservative about optimizing for size."}, {"sha": "0efce7e24340be7eb729e65fcea68123f4cf211f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80379f51e394a368d43b3c1c4aa7c608b09ac90d/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80379f51e394a368d43b3c1c4aa7c608b09ac90d/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=80379f51e394a368d43b3c1c4aa7c608b09ac90d", "patch": "@@ -793,35 +793,29 @@ gen_lowpart_SUBREG (enum machine_mode mode, rtx reg)\n \t\t\t subreg_lowpart_offset (mode, inmode));\n }\n \f\n-/* gen_rtvec (n, [rt1, ..., rtn])\n-**\n-**\t    This routine creates an rtvec and stores within it the\n-**\tpointers to rtx's which are its arguments.\n-*/\n \n-/*VARARGS1*/\n+/* Create an rtvec and stores within it the RTXen passed in the arguments.  */\n+\n rtvec\n gen_rtvec (int n, ...)\n {\n-  int i, save_n;\n-  rtx *vector;\n+  int i;\n+  rtvec rt_val;\n   va_list p;\n \n   va_start (p, n);\n \n+  /* Don't allocate an empty rtvec...  */\n   if (n == 0)\n-    return NULL_RTVEC;\t\t/* Don't allocate an empty rtvec...\t*/\n+    return NULL_RTVEC;\n \n-  vector = XALLOCAVEC (rtx, n);\n+  rt_val = rtvec_alloc (n);\n \n   for (i = 0; i < n; i++)\n-    vector[i] = va_arg (p, rtx);\n+    rt_val->elem[i] = va_arg (p, rtx);\n \n-  /* The definition of VA_* in K&R C causes `n' to go out of scope.  */\n-  save_n = n;\n   va_end (p);\n-\n-  return gen_rtvec_v (save_n, vector);\n+  return rt_val;\n }\n \n rtvec\n@@ -830,10 +824,11 @@ gen_rtvec_v (int n, rtx *argp)\n   int i;\n   rtvec rt_val;\n \n+  /* Don't allocate an empty rtvec...  */\n   if (n == 0)\n-    return NULL_RTVEC;\t\t/* Don't allocate an empty rtvec...\t*/\n+    return NULL_RTVEC;\n \n-  rt_val = rtvec_alloc (n);\t/* Allocate an rtvec...\t\t\t*/\n+  rt_val = rtvec_alloc (n);\n \n   for (i = 0; i < n; i++)\n     rt_val->elem[i] = *argp++;"}]}