{"sha": "7c9df1c69c8f78e55a3b389f2ff145f10036108c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5ZGYxYzY5YzhmNzhlNTVhM2IzODlmMmZmMTQ1ZjEwMDM2MTA4Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-08T00:35:03Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-08T00:35:03Z"}, "message": "(schedule_block): Before scheduling...\n\n(schedule_block): Before scheduling, add code to make all\ncall used regs that are not fixed or global live when we see a\nCALL_INSN.  During scheduling, change existing code to use same test.\n\nFrom-SVN: r12913", "tree": {"sha": "6bc34ddbdb6f3f487be9bd550d34d4fb4ca2f9bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bc34ddbdb6f3f487be9bd550d34d4fb4ca2f9bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c9df1c69c8f78e55a3b389f2ff145f10036108c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9df1c69c8f78e55a3b389f2ff145f10036108c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9df1c69c8f78e55a3b389f2ff145f10036108c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9df1c69c8f78e55a3b389f2ff145f10036108c/comments", "author": null, "committer": null, "parents": [{"sha": "da2c54476f5026b213048fabad026040170c05e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2c54476f5026b213048fabad026040170c05e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da2c54476f5026b213048fabad026040170c05e1"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "71cf52ff61508417aec41fc1f2e2c8837ad34a16", "filename": "gcc/sched.c", "status": "modified", "additions": 45, "deletions": 5, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9df1c69c8f78e55a3b389f2ff145f10036108c/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9df1c69c8f78e55a3b389f2ff145f10036108c/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=7c9df1c69c8f78e55a3b389f2ff145f10036108c", "patch": "@@ -3514,6 +3514,26 @@ schedule_block (b, file)\n \t\t\tsched_note_set (b, XVECEXP (PATTERN (insn), 0, j), 0);\n \t\t  }\n \n+\t\t/* Each call clobbers (makes live) all call-clobbered regs\n+\t\t   that are not global or fixed.  Note that the function-value\n+\t\t   reg is a call_clobbered reg.  */\n+\n+\t\tif (GET_CODE (insn) == CALL_INSN)\n+\t\t  {\n+\t\t    int j;\n+\t\t    for (j = 0; j < FIRST_PSEUDO_REGISTER; j++)\n+\t\t      if (call_used_regs[j] && ! global_regs[j]\n+\t\t\t  && ! fixed_regs[j])\n+\t\t\t{\n+\t\t\t  register int offset = j / REGSET_ELT_BITS;\n+\t\t\t  register REGSET_ELT_TYPE bit\n+\t\t\t    = (REGSET_ELT_TYPE) 1 << (j % REGSET_ELT_BITS);\n+\n+\t\t\t  bb_live_regs[offset] |= bit;\n+\t\t\t  bb_dead_regs[offset] &= ~bit;\n+\t\t\t}\n+\t\t  }\n+\n \t\tfor (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n \t\t  {\n \t\t    if ((REG_NOTE_KIND (link) == REG_DEAD\n@@ -3615,6 +3635,26 @@ schedule_block (b, file)\n \t\t  sched_note_set (b, XVECEXP (PATTERN (insn), 0, j), 0);\n \t    }\n \n+\t  /* Each call clobbers (makes live) all call-clobbered regs that are\n+\t     not global or fixed.  Note that the function-value reg is a\n+\t     call_clobbered reg.  */\n+\n+\t  if (GET_CODE (insn) == CALL_INSN)\n+\t    {\n+\t      int j;\n+\t      for (j = 0; j < FIRST_PSEUDO_REGISTER; j++)\n+\t\tif (call_used_regs[j] && ! global_regs[j]\n+\t\t    && ! fixed_regs[j])\n+\t\t  {\n+\t\t    register int offset = j / REGSET_ELT_BITS;\n+\t\t    register REGSET_ELT_TYPE bit\n+\t\t      = (REGSET_ELT_TYPE) 1 << (j % REGSET_ELT_BITS);\n+\n+\t\t    bb_live_regs[offset] |= bit;\n+\t\t    bb_dead_regs[offset] &= ~bit;\n+\t\t  }\n+\t    }\n+\n \t  /* Need to know what registers this insn kills.  */\n \t  for (prev = 0, link = REG_NOTES (insn); link; link = next)\n \t    {\n@@ -3854,12 +3894,12 @@ schedule_block (b, file)\n \t\t{\n \t\t  register struct sometimes *p;\n \n-\t\t  /* A call kills all call used and global registers, except\n-\t\t     for those mentioned in the call pattern which will be\n-\t\t     made live again later.  */\n+\t\t  /* A call kills all call used registers that are not\n+\t\t     global or fixed, except for those mentioned in the call\n+\t\t     pattern which will be made live again later.  */\n \t\t  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\t\t    if ((call_used_regs[i] && ! fixed_regs[i])\n-\t\t\t|| global_regs[i])\n+\t\t    if (call_used_regs[i] && ! global_regs[i]\n+\t\t\t&& ! fixed_regs[i])\n \t\t      {\n \t\t\tregister int offset = i / REGSET_ELT_BITS;\n \t\t\tregister REGSET_ELT_TYPE bit"}]}