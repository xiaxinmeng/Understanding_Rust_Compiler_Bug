{"sha": "0318fc774964ac07f2bc1c9672cfa75b5355501b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMxOGZjNzc0OTY0YWMwN2YyYmMxYzk2NzJjZmE3NWI1MzU1NTAxYg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-12-13T15:43:36Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-12-13T15:43:36Z"}, "message": "re PR tree-optimization/51362 (ICE: SIGFPE (division by zero) in good_cloning_opportunity_p at ipa-cp.c:2401)\n\n2011-12-13  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/51362\n\t* ipa-cp.c (estimate_local_effects): When estimated size of a\n\tspecialized clone is zero, bump it to one.\n\n\t* testsuite/gcc.dg/ipa/pr51362.c: New test.\n\nFrom-SVN: r182288", "tree": {"sha": "670453af2b7524fe40540cabd07ebc53c4e144dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/670453af2b7524fe40540cabd07ebc53c4e144dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0318fc774964ac07f2bc1c9672cfa75b5355501b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0318fc774964ac07f2bc1c9672cfa75b5355501b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0318fc774964ac07f2bc1c9672cfa75b5355501b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0318fc774964ac07f2bc1c9672cfa75b5355501b/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9170437b040010ea0d5cad5a8d73f0307117fd13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9170437b040010ea0d5cad5a8d73f0307117fd13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9170437b040010ea0d5cad5a8d73f0307117fd13"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "3b28a5d10fc273d743145ee1244feda20ced0b09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0318fc774964ac07f2bc1c9672cfa75b5355501b", "patch": "@@ -1,3 +1,9 @@\n+2011-12-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/51362\n+\t* ipa-cp.c (estimate_local_effects): When estimated size of a\n+\tspecialized clone is zero, bump it to one.\n+\n 2011-12-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/48354"}, {"sha": "2a82df1032ff277d8efb6a5a83c204273cd9a8d9", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=0318fc774964ac07f2bc1c9672cfa75b5355501b", "patch": "@@ -1409,6 +1409,14 @@ estimate_local_effects (struct cgraph_node *node)\n \t    + devirtualization_time_bonus (node, known_csts, known_binfos)\n \t    + removable_params_cost + emc;\n \n+\t  gcc_checking_assert (size >=0);\n+\t  /* The inliner-heuristics based estimates may think that in certain\n+\t     contexts some functions do not have any size at all but we want\n+\t     all specializations to have at least a tiny cost, not least not to\n+\t     divide by zero.  */\n+\t  if (size == 0)\n+\t    size = 1;\n+\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n \t      fprintf (dump_file, \" - estimates for value \");"}, {"sha": "e5fa8ba4ee0e6d30c2719ff524c66497fc7d9e7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0318fc774964ac07f2bc1c9672cfa75b5355501b", "patch": "@@ -1,3 +1,8 @@\n+2011-12-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/51362\n+\t* gcc.dg/ipa/pr51362.c: New test.\n+\n 2011-12-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR testsuite/51524"}, {"sha": "e57dd565688c1387eea0b619977e73777e9a3443", "filename": "gcc/testsuite/gcc.dg/ipa/pr51362.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr51362.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0318fc774964ac07f2bc1c9672cfa75b5355501b/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr51362.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr51362.c?ref=0318fc774964ac07f2bc1c9672cfa75b5355501b", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fipa-cp -fipa-cp-clone\" } */\n+\n+int\n+baz (void)\n+{\n+  return 0;\n+}\n+\n+int make_mess;\n+\n+__attribute__ ((noinline))\n+int bar (int x, int (*f) (void))\n+{\n+  return f ();\n+}\n+\n+int\n+foo (void)\n+{\n+  return bar (1, baz);\n+}"}]}