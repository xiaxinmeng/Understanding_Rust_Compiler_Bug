{"sha": "2561a923d0276c94f80ab017f51821669e234fe6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU2MWE5MjNkMDI3NmM5NGY4MGFiMDE3ZjUxODIxNjY5ZTIzNGZlNg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-18T07:13:31Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-18T07:13:31Z"}, "message": "pa.h (INSN_SETS_ARE_DELAYED): Delete.\n\n\n        * pa.h (INSN_SETS_ARE_DELAYED): Delete.\n        * pa.c (insn_refs_are_delayed): Renamed from\n        insn_sets_and_refs_are_delayed.\n\nFrom-SVN: r29491", "tree": {"sha": "a20dcf5426959c8bc916f2a533b0e86b0d0afee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a20dcf5426959c8bc916f2a533b0e86b0d0afee1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2561a923d0276c94f80ab017f51821669e234fe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2561a923d0276c94f80ab017f51821669e234fe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2561a923d0276c94f80ab017f51821669e234fe6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2561a923d0276c94f80ab017f51821669e234fe6/comments", "author": null, "committer": null, "parents": [{"sha": "b35d4555e691bb26962451ad41324cf9d9f02086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b35d4555e691bb26962451ad41324cf9d9f02086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b35d4555e691bb26962451ad41324cf9d9f02086"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "c04276f889a3132dbbfd7845b391f4490d88126a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2561a923d0276c94f80ab017f51821669e234fe6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2561a923d0276c94f80ab017f51821669e234fe6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2561a923d0276c94f80ab017f51821669e234fe6", "patch": "@@ -1,3 +1,9 @@\n+Sat Sep 18 01:07:21 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.h (INSN_SETS_ARE_DELAYED): Delete.\n+\t* pa.c (insn_refs_are_delayed): Renamed from\n+\tinsn_sets_and_refs_are_delayed.\n+\n Fri Sep 17 15:19:01 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* functiion.h (struct function): Add x_whole_function_mode_p."}, {"sha": "28a220d0f15bf4f8988c7ee078e5d90da125fb60", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2561a923d0276c94f80ab017f51821669e234fe6/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2561a923d0276c94f80ab017f51821669e234fe6/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=2561a923d0276c94f80ab017f51821669e234fe6", "patch": "@@ -6510,7 +6510,7 @@ pa_can_combine_p (new, anchor, floater, reversed, dest, src1, src2)\n   return 1;\n }\n \n-/* Return nonzero if sets and references for INSN are delayed.\n+/* Return nonzero if references for INSN are delayed.\n \n    Millicode insns are actually function calls with some special\n    constraints on arguments and register usage.\n@@ -6528,7 +6528,7 @@ pa_can_combine_p (new, anchor, floater, reversed, dest, src1, src2)\n    filter out things it will not accept -- SEQUENCE, USE and CLOBBER insns\n    in particular.  */\n int\n-insn_sets_and_refs_are_delayed (insn)\n+insn_refs_are_delayed (insn)\n      rtx insn;\n {\n   return ((GET_CODE (insn) == INSN "}, {"sha": "4734057151a7d893f66cdb549d629a5f829d47de", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2561a923d0276c94f80ab017f51821669e234fe6/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2561a923d0276c94f80ab017f51821669e234fe6/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=2561a923d0276c94f80ab017f51821669e234fe6", "patch": "@@ -1850,17 +1850,20 @@ while (0)\n    are expected to clobber their arguments, %r1, %r29, and %r31 and\n    nothing else.\n \n-   These macros tell reorg that the references to arguments and\n-   register clobbers for millicode calls do not appear to happen\n-   until after the millicode call.  This allows reorg to put insns\n-   which set the argument registers into the delay slot of the millicode\n-   call -- thus they act more like traditional CALL_INSNs.\n+   This macro tells reorg that the references to arguments and\n+   millicode calls do not appear to happen until after the millicode call.\n+   This allows reorg to put insns which set the argument registers into the\n+   delay slot of the millicode call -- thus they act more like traditional\n+   CALL_INSNs.\n+\n+   Note we can not consider side effects of the insn to be delayed because\n+   the branch and link insn will clobber the return pointer.  If we happened\n+   to use the return pointer in the delay slot of the call, then we lose.\n \n    get_attr_type will try to recognize the given insn, so make sure to\n    filter out things it will not accept -- SEQUENCE, USE and CLOBBER insns\n    in particular.  */\n-#define INSN_SETS_ARE_DELAYED(X) (insn_sets_and_refs_are_delayed (X))\n-#define INSN_REFERENCES_ARE_DELAYED(X) (insn_sets_and_refs_are_delayed (X))\n+#define INSN_REFERENCES_ARE_DELAYED(X) (insn_refs_are_delayed (X))\n \n \f\n /* Control the assembler format that we output.  */"}]}