{"sha": "dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzYjMzZDc3MzBhOWQxMWMyY2Q4MDlkZjAzMGZjNTlhYzVjYTIzMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-25T15:33:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-25T15:33:09Z"}, "message": "re PR middle-end/32244 (bit-field: optimization BUG)\n\n2008-01-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/32244\n\t* expr.c (expand_expr_real_1): Reduce result of LSHIFT_EXPR\n\tto its bitfield precision if required.\n\n\t* gcc.c-torture/execute/pr32244-1.c: New testcase.\n\nFrom-SVN: r131828", "tree": {"sha": "0c1732108c28dfd96d0a904da58046653148d363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c1732108c28dfd96d0a904da58046653148d363"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c256730cefa52bbb322ca3759a0411f9e245d366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c256730cefa52bbb322ca3759a0411f9e245d366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c256730cefa52bbb322ca3759a0411f9e245d366"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "824f85aa2be5a4de8691ddd94f9fd616bb493391", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "patch": "@@ -1,3 +1,9 @@\n+2008-01-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/32244\n+\t* expr.c (expand_expr_real_1): Reduce result of LSHIFT_EXPR\n+\tto its bitfield precision if required.\n+\n 2008-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/33880"}, {"sha": "53cb3eb9d2cb9ddfe19b4bf8e670a5780ba8f6a8", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "patch": "@@ -8920,8 +8920,11 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \ttarget = 0;\n       op0 = expand_expr (TREE_OPERAND (exp, 0), subtarget,\n \t\t\t VOIDmode, EXPAND_NORMAL);\n-      return expand_shift (code, mode, op0, TREE_OPERAND (exp, 1), target,\n+      temp = expand_shift (code, mode, op0, TREE_OPERAND (exp, 1), target,\n \t\t\t   unsignedp);\n+      if (code == LSHIFT_EXPR)\n+\ttemp = REDUCE_BIT_FIELD (temp);\n+      return temp;\n \n       /* Could determine the answer when only additive constants differ.  Also,\n \t the addition of one can be handled by changing the condition.  */"}, {"sha": "9fbd03a432e193b491f049e9cfcd7b79b7ef5343", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "patch": "@@ -1,3 +1,8 @@\n+2008-01-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/32244\n+\t* gcc.c-torture/execute/pr32244-1.c: New testcase.\n+\n 2008-01-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34966"}, {"sha": "afad25650c445c0182ef8e6e67d2ec458dd64fe3", "filename": "gcc/testsuite/gcc.c-torture/execute/pr32244-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr32244-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b33d7730a9d11c2cd809df030fc59ac5ca232/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr32244-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr32244-1.c?ref=dd3b33d7730a9d11c2cd809df030fc59ac5ca232", "patch": "@@ -0,0 +1,20 @@\n+struct foo\n+{\n+  unsigned long long b:40;\n+} x;\n+\n+extern void abort (void);\n+\n+void test1(unsigned long long res)\n+{\n+  /* The shift is carried out in 40 bit precision.  */\n+  if (x.b<<32 != res)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  x.b = 0x0100;\n+  test1(0);\n+  return 0;\n+}"}]}