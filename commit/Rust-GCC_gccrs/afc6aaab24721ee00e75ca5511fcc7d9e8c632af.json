{"sha": "afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjNmFhYWIyNDcyMWVlMDBlNzVjYTU1MTFmY2M3ZDllOGM2MzJhZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2003-04-28T04:13:48Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-28T04:13:48Z"}, "message": "expr.c (expand_expr <COMPLEX_CST, [...]): Always call output_constant_def, use its result instead of TREE_CST_RTL (exp).\n\n        * expr.c (expand_expr <COMPLEX_CST, STRING_CST>): Always call\n        output_constant_def, use its result instead of TREE_CST_RTL (exp).\n        Can assume it has the form (mem (symbol_ref \".LCxxx\")).\n        (expand_expr <COMPONENT_REF>): Can always just extract the\n        relevant field of a CONSTRUCTOR.\n        (expand_expr <ARRAY_REF, COMPONENT_REF, BIT_FIELD_REF,\n        ARRAY_RANGE_REF>): Make control flow explicit.\n        * varasm.c (output_constant_def): Can look at TREE_CST_RTL of\n        an INTEGER_CST.\n\nFrom-SVN: r66148", "tree": {"sha": "3915ff408e9fa298c376c39db25e09c6a1cc70f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3915ff408e9fa298c376c39db25e09c6a1cc70f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/comments", "author": null, "committer": null, "parents": [{"sha": "73c4dcc675bd806e87acce255f3678d007193d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c4dcc675bd806e87acce255f3678d007193d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c4dcc675bd806e87acce255f3678d007193d84"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "611b3acf9d42fd890f6210d818195eff319a11fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "patch": "@@ -1,3 +1,15 @@\n+2003-04-27  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* expr.c (expand_expr <COMPLEX_CST, STRING_CST>): Always call\n+\toutput_constant_def, use its result instead of TREE_CST_RTL (exp).\n+\tCan assume it has the form (mem (symbol_ref \".LCxxx\")).\n+\t(expand_expr <COMPONENT_REF>): Can always just extract the\n+\trelevant field of a CONSTRUCTOR.\n+\t(expand_expr <ARRAY_REF, COMPONENT_REF, BIT_FIELD_REF,\n+\tARRAY_RANGE_REF>): Make control flow explicit.\n+\t* varasm.c (output_constant_def): Can look at TREE_CST_RTL of\n+\tan INTEGER_CST.\n+\n 2003-04-27  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* reload1.c (reg_set_luid): Fix a comment typo."}, {"sha": "0d6118778b80827c636f151d7a183ac6cd7253f9", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 20, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "patch": "@@ -6872,22 +6872,19 @@ expand_expr (exp, target, tmode, modifier)\n \n     case COMPLEX_CST:\n     case STRING_CST:\n-      if (! TREE_CST_RTL (exp))\n-\toutput_constant_def (exp, 1);\n+      temp = output_constant_def (exp, 1);\n \n-      /* TREE_CST_RTL probably contains a constant address.\n+      /* temp contains a constant address.\n \t On RISC machines where a constant address isn't valid,\n \t make some insns to get that address into a register.  */\n-      if (GET_CODE (TREE_CST_RTL (exp)) == MEM\n-\t  && modifier != EXPAND_CONST_ADDRESS\n+      if (modifier != EXPAND_CONST_ADDRESS\n \t  && modifier != EXPAND_INITIALIZER\n \t  && modifier != EXPAND_SUM\n-\t  && (! memory_address_p (mode, XEXP (TREE_CST_RTL (exp), 0))\n-\t      || (flag_force_addr\n-\t\t  && GET_CODE (XEXP (TREE_CST_RTL (exp), 0)) != REG)))\n-\treturn replace_equiv_address (TREE_CST_RTL (exp),\n-\t\t\t\t      copy_rtx (XEXP (TREE_CST_RTL (exp), 0)));\n-      return TREE_CST_RTL (exp);\n+\t  && (! memory_address_p (mode, XEXP (temp, 0))\n+\t      || flag_force_addr))\n+\treturn replace_equiv_address (temp,\n+\t\t\t\t      copy_rtx (XEXP (temp, 0)));\n+      return temp;\n \n     case EXPR_WITH_FILE_LOCATION:\n       {\n@@ -7300,18 +7297,12 @@ expand_expr (exp, target, tmode, modifier)\n \t      }\n \t  }\n       }\n-      /* Fall through.  */\n+      goto normal_inner_ref;\n \n     case COMPONENT_REF:\n-    case BIT_FIELD_REF:\n-    case ARRAY_RANGE_REF:\n       /* If the operand is a CONSTRUCTOR, we can just extract the\n-\t appropriate field if it is present.  Don't do this if we have\n-\t already written the data since we want to refer to that copy\n-\t and varasm.c assumes that's what we'll do.  */\n-      if (code == COMPONENT_REF\n-\t  && TREE_CODE (TREE_OPERAND (exp, 0)) == CONSTRUCTOR\n-\t  && TREE_CST_RTL (TREE_OPERAND (exp, 0)) == 0)\n+\t appropriate field if it is present.  */\n+      if (TREE_CODE (TREE_OPERAND (exp, 0)) == CONSTRUCTOR)\n \t{\n \t  tree elt;\n \n@@ -7363,7 +7354,11 @@ expand_expr (exp, target, tmode, modifier)\n \t\treturn op0;\n \t      }\n \t}\n+      goto normal_inner_ref;\n \n+    case BIT_FIELD_REF:\n+    case ARRAY_RANGE_REF:\n+    normal_inner_ref:\n       {\n \tenum machine_mode mode1;\n \tHOST_WIDE_INT bitsize, bitpos;"}, {"sha": "f42f5295f121ab55931ac8b8a4ea9c1d6845b4e8", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc6aaab24721ee00e75ca5511fcc7d9e8c632af/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=afc6aaab24721ee00e75ca5511fcc7d9e8c632af", "patch": "@@ -2567,7 +2567,7 @@ output_constant_def (exp, defer)\n \n   /* We can't just use the saved RTL if this is a deferred string constant\n      and we are not to defer anymore.  */\n-  if (TREE_CODE (exp) != INTEGER_CST && TREE_CST_RTL (exp)\n+  if (TREE_CST_RTL (exp)\n       && (defer || !STRING_POOL_ADDRESS_P (XEXP (TREE_CST_RTL (exp), 0))))\n     return TREE_CST_RTL (exp);\n "}]}