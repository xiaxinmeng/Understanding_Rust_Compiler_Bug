{"sha": "25b589cbd523d5b7ccf42c7807f9cac86879008d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViNTg5Y2JkNTIzZDViN2NjZjQyYzc4MDdmOWNhYzg2ODc5MDA4ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:40:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:40:53Z"}, "message": "[multiple changes]\n\n2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Process_Statements_For_Controlled_Objects): Whenever a\n\tstatement list is wrapped in a block, the block is explicitly analyzed\n\tin order to properly redecorate the entities and create a servicing\n\tfinalizer.\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* sinfo.ads, sinfo.adb (Zero_Cost_Handling): Remove.\n\t(Set_Zero_Cost_Handling): Remove.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* par_sco.adb, scos.ads, put_scos.adb, get_scos.adb: Minor reformatting\n\nFrom-SVN: r178162", "tree": {"sha": "e9a56ce2a97ee5439638449e07f387032b42b60d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9a56ce2a97ee5439638449e07f387032b42b60d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25b589cbd523d5b7ccf42c7807f9cac86879008d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b589cbd523d5b7ccf42c7807f9cac86879008d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b589cbd523d5b7ccf42c7807f9cac86879008d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b589cbd523d5b7ccf42c7807f9cac86879008d/comments", "author": null, "committer": null, "parents": [{"sha": "1197ddb11e3560bf1fb0f942746b85267948e094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1197ddb11e3560bf1fb0f942746b85267948e094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1197ddb11e3560bf1fb0f942746b85267948e094"}], "stats": {"total": 117, "additions": 57, "deletions": 60}, "files": [{"sha": "8e50a827d9747778b4cd6028634ee75e1a21a057", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -1,3 +1,19 @@\n+2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Process_Statements_For_Controlled_Objects): Whenever a\n+\tstatement list is wrapped in a block, the block is explicitly analyzed\n+\tin order to properly redecorate the entities and create a servicing\n+\tfinalizer.\n+\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb (Zero_Cost_Handling): Remove.\n+\t(Set_Zero_Cost_Handling): Remove.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* par_sco.adb, scos.ads, put_scos.adb, get_scos.adb: Minor reformatting\n+\n 2011-08-29  Geert Bosch  <bosch@adacore.com>\n \n \t* s-vaflop-vms-alpha.adb (Neg_F): Use subtraction instead of negation"}, {"sha": "a5faf484b2659d45dd7561b72f77628342f9936e", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -5483,9 +5483,17 @@ package body Exp_Util is\n                  Statements => L));\n       end Wrap_Statements_In_Block;\n \n+      --  Local variables\n+\n+      Block : Node_Id;\n+\n    --  Start of processing for Process_Statements_For_Controlled_Objects\n \n    begin\n+      --  Whenever a non-handled statement list is wrapped in a block, the\n+      --  block must be explicitly analyzed to redecorate all entities in the\n+      --  list and ensure that a finalizer is properly built.\n+\n       case Nkind (N) is\n          when N_Elsif_Part             |\n               N_If_Statement           |\n@@ -5500,8 +5508,10 @@ package body Exp_Util is\n               and then Requires_Cleanup_Actions\n                          (Then_Statements (N), False, False)\n             then\n-               Set_Then_Statements (N, New_List (\n-                 Wrap_Statements_In_Block (Then_Statements (N))));\n+               Block := Wrap_Statements_In_Block (Then_Statements (N));\n+               Set_Then_Statements (N, New_List (Block));\n+\n+               Analyze (Block);\n             end if;\n \n             --  Check the \"else statements\" for conditional entry calls, if\n@@ -5515,8 +5525,10 @@ package body Exp_Util is\n               and then Requires_Cleanup_Actions\n                          (Else_Statements (N), False, False)\n             then\n-               Set_Else_Statements (N, New_List (\n-                 Wrap_Statements_In_Block (Else_Statements (N))));\n+               Block := Wrap_Statements_In_Block (Else_Statements (N));\n+               Set_Else_Statements (N, New_List (Block));\n+\n+               Analyze (Block);\n             end if;\n \n          when N_Abortable_Part             |\n@@ -5532,8 +5544,10 @@ package body Exp_Util is\n               and then not Are_Wrapped (Statements (N))\n               and then Requires_Cleanup_Actions (Statements (N), False, False)\n             then\n-               Set_Statements (N, New_List (\n-                 Wrap_Statements_In_Block (Statements (N))));\n+               Block := Wrap_Statements_In_Block (Statements (N));\n+               Set_Statements (N, New_List (Block));\n+\n+               Analyze (Block);\n             end if;\n \n          when others                       =>"}, {"sha": "b3957ecbb68b95fa54ad4ce2a673d12fcbfe4fa4", "filename": "gcc/ada/get_scos.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fget_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fget_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.adb?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -307,7 +307,7 @@ begin\n \n          --  Decision entry\n \n-         when 'I' | 'E' | 'G' | 'P' | 'W' | 'X' =>\n+         when 'E' | 'G' | 'I' | 'P' | 'W' | 'X' =>\n             Dtyp := C;\n             Skip_Spaces;\n "}, {"sha": "c2aab468f98024c2c3e7878d94a0d1a30e744d41", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -1423,7 +1423,7 @@ package body Par_SCO is\n                            --  Output for disabled pragmas is suppressed later\n                            --  on, when we output the decision line in\n                            --  Put_SCOs, depending on marker sets by\n-                           --  Set_SCO_Pragma_Disabled.\n+                           --  Set_SCO_Pragma_Enabled.\n \n                            if Nam = Name_Check then\n                               Next (Arg);"}, {"sha": "a1b3f231564a589f15b470c171f980f6fe01ff30", "filename": "gcc/ada/put_scos.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fput_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fput_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_scos.adb?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -156,7 +156,7 @@ begin\n \n                   --  Decision\n \n-                  when 'I' | 'E' | 'G' | 'P' | 'W' | 'X' =>\n+                  when 'E' | 'G' | 'I' | 'P' | 'W' | 'X' =>\n                      Start := Start + 1;\n \n                      --  For disabled pragma, or nested decision therein, skip"}, {"sha": "d8ab7a82b2bdb4ae0b8adae7cbd94a884af3b5e0", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -152,7 +152,6 @@ package SCOs is\n    --      E  EXIT statement\n    --      F  FOR loop statement (from FOR through end of iteration scheme)\n    --      I  IF statement (from IF through end of condition)\n-   --      p  disabled PRAGMA\n    --      P  PRAGMA\n    --      R  extended RETURN statement\n    --      W  WHILE loop statement (from WHILE through end of condition)\n@@ -227,15 +226,15 @@ package SCOs is\n \n    --    Here * is one of the following characters:\n \n-   --      I  decision in IF statement or conditional expression\n    --      E  decision in EXIT WHEN statement\n    --      G  decision in entry guard\n+   --      I  decision in IF statement or conditional expression\n    --      P  decision in pragma Assert/Check/Pre_Condition/Post_Condition\n    --      W  decision in WHILE iteration scheme\n    --      X  decision appearing in some other expression context\n \n-   --    For I, E, G, P, W, sloc is the source location of the IF, EXIT,\n-   --    ENTRY, PRAGMA or WHILE token, respectively\n+   --    For E, G, I, P, W, sloc is the source location of the EXIT, ENTRY, IF,\n+   --    PRAGMA or WHILE token, respectively\n \n    --    For X, sloc is omitted\n \n@@ -388,10 +387,16 @@ package SCOs is\n    --    statements on a single CS line (possibly followed by Cs continuation\n    --    lines).\n \n-   --    Decision (IF/EXIT/WHILE)\n-   --      C1   = 'I'/'E'/'W' (for IF/EXIT/WHILE)\n+   --    Note: for a pragma that may be disabled (Debug, Assert, PPC, Check),\n+   --    the entry is initially created with C2 = 'p', to mark it as disabled.\n+   --    Later on during semantic analysis, if the pragma is enabled,\n+   --    Set_SCO_Pragma_Enabled changes C2 to 'P' to cause the entry to be\n+   --    emitted in Put_SCOs.\n+\n+   --    Decision (EXIT/entry guard/IF/WHILE)\n+   --      C1   = 'E'/'G'/'I'/'W' (for EXIT/entry Guard/IF/WHILE)\n    --      C2   = ' '\n-   --      From = IF/EXIT/WHILE token\n+   --      From = EXIT/ENTRY/IF/WHILE token\n    --      To   = No_Source_Location\n    --      Last = unused\n \n@@ -402,14 +407,12 @@ package SCOs is\n    --      To   = No_Source_Location\n    --      Last = unused\n \n-   --      Note: when the parse tree is first scanned, we unconditionally build\n-   --      a pragma decision entry for any decision in a pragma (here as always\n-   --      in SCO contexts, the only pragmas with decisions are Assert, Check,\n-   --      dyadic Debug, Precondition and Postcondition).\n-   --\n-   --      During analysis, if the pragma is enabled, Set_SCO_Pragma_Enabled\n-   --      marks the statement SCO table entry as enaabled (C1 changed from 'p'\n-   --      to 'P') to cause the entry to be emitted in Put_SCOs.\n+   --    Note: when the parse tree is first scanned, we unconditionally build a\n+   --    pragma decision entry for any decision in a pragma (here as always in\n+   --    SCO contexts, the only pragmas with decisions are Assert, Check,\n+   --    dyadic Debug, Precondition and Postcondition). These entries will\n+   --    be omitted in output if the pragma is disabled (see comments for\n+   --    statement entries).\n \n    --    Decision (Expression)\n    --      C1   = 'X'"}, {"sha": "11e8aa05c6356589e62d296ae4fbdf88f5704541", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -3103,15 +3103,6 @@ package body Sinfo is\n       return Node1 (N);\n    end Withed_Body;\n \n-   function Zero_Cost_Handling\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Exception_Handler\n-        or else NT (N).Nkind = N_Handled_Sequence_Of_Statements);\n-      return Flag5 (N);\n-   end Zero_Cost_Handling;\n-\n    --------------------------\n    -- Field Set Procedures --\n    --------------------------\n@@ -6153,15 +6144,6 @@ package body Sinfo is\n       Set_Node1 (N, Val);\n    end Set_Withed_Body;\n \n-   procedure Set_Zero_Cost_Handling\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Exception_Handler\n-        or else NT (N).Nkind = N_Handled_Sequence_Of_Statements);\n-      Set_Flag5 (N, Val);\n-   end Set_Zero_Cost_Handling;\n-\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------"}, {"sha": "eb9b4764dfad2fbb1237ca5b58c7f3d46efa1e07", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b589cbd523d5b7ccf42c7807f9cac86879008d/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=25b589cbd523d5b7ccf42c7807f9cac86879008d", "patch": "@@ -1806,14 +1806,6 @@ package Sinfo is\n    --    library unit of the with_clause and as a result loads its body.\n    --    Used for a more precise unit traversal for CodePeer.\n \n-   --  Zero_Cost_Handling (Flag5-Sem)\n-   --    This flag is set in all handled sequence of statement and exception\n-   --    handler nodes if exceptions are to be handled using the zero-cost\n-   --    mechanism (see Ada.Exceptions and System.Exceptions in files\n-   --    a-except.ads/adb and s-except.ads for full details). What gigi needs\n-   --    to do for such a handler is simply to put the code in the handler\n-   --    somewhere. The front end has generated all necessary labels.\n-\n    --------------------------------------------------\n    -- Note on Use of End_Label and End_Span Fields --\n    --------------------------------------------------\n@@ -5957,7 +5949,6 @@ package Sinfo is\n       --  Exception_Handlers (List5) (set to No_List if none present)\n       --  At_End_Proc (Node1) (set to Empty if no clean up procedure)\n       --  First_Real_Statement (Node2-Sem)\n-      --  Zero_Cost_Handling (Flag5-Sem)\n \n       --  Note: the parent always contains a Declarations field which contains\n       --  declarations associated with the handled sequence of statements. This\n@@ -5983,7 +5974,6 @@ package Sinfo is\n       --  Exception_Choices (List4)\n       --  Statements (List3)\n       --  Exception_Label (Node5-Sem) (set to Empty of not present)\n-      --  Zero_Cost_Handling (Flag5-Sem)\n       --  Local_Raise_Statements (Elist1-Sem) (set to No_Elist if not present)\n       --  Local_Raise_Not_OK (Flag7-Sem)\n       --  Has_Local_Raise (Flag8-Sem)\n@@ -9001,9 +8991,6 @@ package Sinfo is\n    function Withed_Body\n      (N : Node_Id) return Node_Id;    -- Node1\n \n-   function Zero_Cost_Handling\n-     (N : Node_Id) return Boolean;    -- Flag5\n-\n    --  End functions (note used by xsinfo utility program to end processing)\n \n    ----------------------------\n@@ -9973,9 +9960,6 @@ package Sinfo is\n    procedure Set_Withed_Body\n      (N : Node_Id; Val : Node_Id);            -- Node1\n \n-   procedure Set_Zero_Cost_Handling\n-     (N : Node_Id; Val : Boolean := True);    -- Flag5\n-\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------\n@@ -12037,7 +12021,6 @@ package Sinfo is\n    pragma Inline (Used_Operations);\n    pragma Inline (Was_Originally_Stub);\n    pragma Inline (Withed_Body);\n-   pragma Inline (Zero_Cost_Handling);\n \n    pragma Inline (Set_ABE_Is_Certain);\n    pragma Inline (Set_Abort_Present);\n@@ -12357,7 +12340,6 @@ package Sinfo is\n    pragma Inline (Set_Used_Operations);\n    pragma Inline (Set_Was_Originally_Stub);\n    pragma Inline (Set_Withed_Body);\n-   pragma Inline (Set_Zero_Cost_Handling);\n \n    --------------\n    -- Synonyms --"}]}