{"sha": "9f5e873c8f495c56a0a59ceefdb31c5d3453de08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1ZTg3M2M4ZjQ5NWM1NmEwYTU5Y2VlZmRiMzFjNWQzNDUzZGUwOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-13T19:14:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-13T19:14:21Z"}, "message": "(optimize_bit_field_compare, decode_field_reference): Don't do\nanything if get_inner_reference returned its argument.\n\nFrom-SVN: r5773", "tree": {"sha": "a1ffd451494415c01fcc360a4b3b4cc1076e5bb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1ffd451494415c01fcc360a4b3b4cc1076e5bb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f5e873c8f495c56a0a59ceefdb31c5d3453de08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5e873c8f495c56a0a59ceefdb31c5d3453de08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f5e873c8f495c56a0a59ceefdb31c5d3453de08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5e873c8f495c56a0a59ceefdb31c5d3453de08/comments", "author": null, "committer": null, "parents": [{"sha": "49d3ca5c88c8d002bc7fc61247694a2e45671b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d3ca5c88c8d002bc7fc61247694a2e45671b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d3ca5c88c8d002bc7fc61247694a2e45671b36"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a08e7ca50ca502f96d612f1771177cad3f4de2d8", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5e873c8f495c56a0a59ceefdb31c5d3453de08/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5e873c8f495c56a0a59ceefdb31c5d3453de08/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9f5e873c8f495c56a0a59ceefdb31c5d3453de08", "patch": "@@ -2307,7 +2307,7 @@ optimize_bit_field_compare (code, compare_type, lhs, rhs)\n      extraction at all and so can do nothing.  */\n   linner = get_inner_reference (lhs, &lbitsize, &lbitpos, &offset, &lmode,\n \t\t\t\t&lunsignedp, &lvolatilep);\n-  if (lbitsize == GET_MODE_BITSIZE (lmode) || lbitsize < 0\n+  if (linner == lhs || lbitsize == GET_MODE_BITSIZE (lmode) || lbitsize < 0\n       || offset != 0)\n     return 0;\n \n@@ -2318,7 +2318,7 @@ optimize_bit_field_compare (code, compare_type, lhs, rhs)\n      rinner = get_inner_reference (rhs, &rbitsize, &rbitpos, &offset,\n \t\t\t\t   &rmode, &runsignedp, &rvolatilep);\n \n-     if (lbitpos != rbitpos || lbitsize != rbitsize\n+     if (rinner == rhs || lbitpos != rbitpos || lbitsize != rbitsize\n \t || lunsignedp != runsignedp || offset != 0)\n        return 0;\n    }\n@@ -2510,7 +2510,7 @@ decode_field_reference (exp, pbitsize, pbitpos, pmode, punsignedp,\n \n   inner = get_inner_reference (exp, pbitsize, pbitpos, &offset, pmode,\n \t\t\t       punsignedp, pvolatilep);\n-  if (*pbitsize < 0 || offset != 0)\n+  if (inner == exp || *pbitsize < 0 || offset != 0)\n     return 0;\n   \n   if (mask == 0)"}]}