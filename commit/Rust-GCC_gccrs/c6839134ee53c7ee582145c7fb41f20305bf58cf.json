{"sha": "c6839134ee53c7ee582145c7fb41f20305bf58cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4MzkxMzRlZTUzYzdlZTU4MjE0NWM3ZmI0MWYyMDMwNWJmNThjZg==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-02-23T17:22:10Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-02-23T17:22:10Z"}, "message": "rs6000-builtin.def: Change VSIGNED2 and VUNSIGNED2 macro expansions from BU_VSX_2 to BU_P8V_VSX_2...\n\ngcc/ChangeLog:\n\n2018-02-23  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-builtin.def: Change VSIGNED2 and VUNSIGNED2\n\tmacro expansions from BU_VSX_2 to BU_P8V_VSX_2 and BU_VSX_OVERLOAD_2 to\n\tBU_P8V_OVERLOAD_2.\n\t* config/rs6000/rs6000-c.c: Change VSX_BUILTIN_VEC_VSIGNED2 to\n\tP8V_BUILTIN_VEC_VSIGNED2.  Change VSX_BUILTIN_VEC_VUNSIGNED2 to\n\tP8V_BUILTIN_VEC_VUNSIGNED2.\n\ngcc/testsuite/ChangeLog:\n\n2018-02-23  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3-runnable.c: Move tests for vec_float2,\n\tvec_signed2 and vec_unsigned2 to new Power 8 test file.\n\t* gcc.target/powerpc/builtins-3-runnable-p8.c: New test file for\n\tPower 8 tests.\n\nFrom-SVN: r257937", "tree": {"sha": "bafb3210db019438c3f06662f704feae1b942dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bafb3210db019438c3f06662f704feae1b942dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6839134ee53c7ee582145c7fb41f20305bf58cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6839134ee53c7ee582145c7fb41f20305bf58cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6839134ee53c7ee582145c7fb41f20305bf58cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6839134ee53c7ee582145c7fb41f20305bf58cf/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c706366c317c0620e0cd84456687aa3b98a350cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c706366c317c0620e0cd84456687aa3b98a350cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c706366c317c0620e0cd84456687aa3b98a350cc"}], "stats": {"total": 225, "additions": 187, "deletions": 38}, "files": [{"sha": "d6c3a24f70cf83e1264b04c09d53d1929854dd7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6839134ee53c7ee582145c7fb41f20305bf58cf", "patch": "@@ -1,3 +1,12 @@\n+2018-02-23  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin.def: Change VSIGNED2 and VUNSIGNED2\n+\tmacro expansions from BU_VSX_2 to BU_P8V_VSX_2 and BU_VSX_OVERLOAD_2 to\n+\tBU_P8V_OVERLOAD_2.\n+\t* config/rs6000/rs6000-c.c: Change VSX_BUILTIN_VEC_VSIGNED2 to\n+\tP8V_BUILTIN_VEC_VSIGNED2.  Change VSX_BUILTIN_VEC_VUNSIGNED2 to\n+\tP8V_BUILTIN_VEC_VUNSIGNED2.\n+\n 2018-02-22  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/81572"}, {"sha": "f9548a0c40533c9c76aa25aef5e4bfafc503a843", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=c6839134ee53c7ee582145c7fb41f20305bf58cf", "patch": "@@ -1659,9 +1659,6 @@ BU_VSX_2 (CMPLE_U8HI,         \"cmple_u8hi\",     CONST,  vector_ngtuv8hi)\n BU_VSX_2 (CMPLE_U4SI,         \"cmple_u4si\",     CONST,  vector_ngtuv4si)\n BU_VSX_2 (CMPLE_U2DI,         \"cmple_u2di\",     CONST,  vector_ngtuv2di)\n \n-BU_VSX_2 (VEC_VSIGNED2_V2DF,      \"vsigned2_v2df\",    CONST,  vsigned2_v2df)\n-BU_VSX_2 (VEC_VUNSIGNED2_V2DF,    \"vunsigned2_v2df\",  CONST,  vunsigned2_v2df)\n-\n /* VSX abs builtin functions.  */\n BU_VSX_A (XVABSDP,\t      \"xvabsdp\",\tCONST,\tabsv2df2)\n BU_VSX_A (XVNABSDP,\t      \"xvnabsdp\",\tCONST,\tvsx_nabsv2df2)\n@@ -1852,8 +1849,6 @@ BU_VSX_OVERLOAD_2 (XXMRGHW,  \"xxmrghw\")\n BU_VSX_OVERLOAD_2 (XXMRGLW,  \"xxmrglw\")\n BU_VSX_OVERLOAD_2 (XXSPLTD,  \"xxspltd\")\n BU_VSX_OVERLOAD_2 (XXSPLTW,  \"xxspltw\")\n-BU_VSX_OVERLOAD_2 (VSIGNED2,     \"vsigned2\")\n-BU_VSX_OVERLOAD_2 (VUNSIGNED2,   \"vunsigned2\")\n \n /* 1 argument VSX overloaded builtin functions.  */\n BU_VSX_OVERLOAD_1 (DOUBLE,   \"double\")\n@@ -1917,6 +1912,9 @@ BU_P8V_AV_1 (NEG_V2DF,      \"neg_v2df\",\tCONST,\tnegv2df2)\n BU_P8V_VSX_2 (FLOAT2_V2DF,        \"float2_v2df\",\tCONST,  float2_v2df)\n BU_P8V_VSX_2 (FLOAT2_V2DI,        \"float2_v2di\",\tCONST,  float2_v2di)\n BU_P8V_VSX_2 (UNS_FLOAT2_V2DI,    \"uns_float2_v2di\",    CONST,  uns_float2_v2di)\n+BU_P8V_VSX_2 (VEC_VSIGNED2_V2DF,   \"vsigned2_v2df\",    CONST,  vsigned2_v2df)\n+BU_P8V_VSX_2 (VEC_VUNSIGNED2_V2DF, \"vunsigned2_v2df\",  CONST,  vunsigned2_v2df)\n+\n \n /* 1 argument altivec instructions added in ISA 2.07.  */\n BU_P8V_AV_1 (ABS_V2DI,\t      \"abs_v2di\",\tCONST,\tabsv2di2)\n@@ -2063,6 +2061,8 @@ BU_P8V_OVERLOAD_2 (VSUBUDM,\t\"vsubudm\")\n BU_P8V_OVERLOAD_2 (VSUBUQM,\t\"vsubuqm\")\n BU_P8V_OVERLOAD_2 (FLOAT2,   \"float2\")\n BU_P8V_OVERLOAD_2 (UNS_FLOAT2,   \"uns_float2\")\n+BU_P8V_OVERLOAD_2 (VSIGNED2,     \"vsigned2\")\n+BU_P8V_OVERLOAD_2 (VUNSIGNED2,   \"vunsigned2\")\n \n /* ISA 2.07 vector overloaded 3 argument functions.  */\n BU_P8V_OVERLOAD_3 (VADDECUQ,\t\"vaddecuq\")"}, {"sha": "cc8e4e1b569799b36d62f5322461665a1da1bb7d", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=c6839134ee53c7ee582145c7fb41f20305bf58cf", "patch": "@@ -5876,7 +5876,7 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V4SI, RS6000_BTI_V2DF, 0, 0 },\n   { VSX_BUILTIN_VEC_VSIGNEDO, VSX_BUILTIN_VEC_VSIGNEDO_V2DF,\n     RS6000_BTI_V4SI, RS6000_BTI_V2DF, 0, 0 },\n-  { VSX_BUILTIN_VEC_VSIGNED2, VSX_BUILTIN_VEC_VSIGNED2_V2DF,\n+  { P8V_BUILTIN_VEC_VSIGNED2, P8V_BUILTIN_VEC_VSIGNED2_V2DF,\n     RS6000_BTI_V4SI, RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0 },\n \n   { VSX_BUILTIN_VEC_VUNSIGNED, VSX_BUILTIN_VEC_VUNSIGNED_V4SF,\n@@ -5887,7 +5887,7 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_V2DF, 0, 0 },\n   { VSX_BUILTIN_VEC_VUNSIGNEDO, VSX_BUILTIN_VEC_VUNSIGNEDO_V2DF,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_V2DF, 0, 0 },\n-  { VSX_BUILTIN_VEC_VUNSIGNED2, VSX_BUILTIN_VEC_VUNSIGNED2_V2DF,\n+  { P8V_BUILTIN_VEC_VUNSIGNED2, P8V_BUILTIN_VEC_VUNSIGNED2_V2DF,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_V2DF,\n     RS6000_BTI_V2DF, 0 },\n "}, {"sha": "6cfcb116742292979925812d41489491c23c28ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6839134ee53c7ee582145c7fb41f20305bf58cf", "patch": "@@ -1,3 +1,10 @@\n+2018-02-23  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3-runnable.c: Move tests for vec_float2,\n+\tvec_signed2 and vec_unsigned2 to new Power 8 test file.\n+\t* gcc.target/powerpc/builtins-3-runnable-p8.c: New test file for\n+\tPower 8 tests.\n+\n 2018-02-23  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/pr80695-p9.c: Update dg-requires stanza."}, {"sha": "104ae5587fbe870f29b94b0dc031a58115b732c4", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-runnable-p8.c", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-runnable-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-runnable-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-runnable-p8.c?ref=c6839134ee53c7ee582145c7fb41f20305bf58cf", "patch": "@@ -0,0 +1,162 @@\n+/* { dg-do run { target { powerpc*-*-linux* && { p8vector_hw } } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=power8\" } } */\n+/* { dg-require-effective-target p8vector_hw } */\n+/* { dg-options \"-mcpu=power8\" } */\n+\n+#include <altivec.h> // vector\n+\n+#ifdef DEBUG\n+#include <stdio.h>\n+#endif\n+\n+#define ALL  1\n+#define EVEN 2\n+#define ODD  3\n+\n+void abort (void);\n+\n+void test_int_result(int check, vector int vec_result, vector int vec_expected)\n+{\n+\tint i;\n+\n+\tfor (i = 0; i < 4; i++) {\n+\t\tswitch (check) {\n+\t\tcase ALL:\n+\t\t\tbreak;\n+\t\tcase EVEN:\n+\t\t\tif (i%2 == 0)\n+\t\t\t\tbreak;\n+\t\t\telse\n+\t\t\t\tcontinue;\n+\t\tcase ODD:\n+\t\t\tif (i%2 != 0)\n+\t\t\t\tbreak;\n+\t\t\telse\n+\t\t\t\tcontinue;\n+\t\t}\n+\n+\t\tif (vec_result[i] != vec_expected[i]) {\n+#ifdef DEBUG\n+\t\t\tprintf(\"Test_int_result: \");\n+\t\t\tprintf(\"vec_result[%d] (%d) != vec_expected[%d] (%d)\\n\",\n+\t\t\t       i, vec_result[i], i, vec_expected[i]);\n+#else\n+\t\t\tabort();\n+#endif\n+\t\t}\n+\t}\n+}\n+\n+void test_unsigned_int_result(int check, vector unsigned int vec_result,\n+\t\t\t      vector unsigned int vec_expected)\n+{\n+\tint i;\n+\n+\tfor (i = 0; i < 4; i++) {\n+\t\tswitch (check) {\n+\t\tcase ALL:\n+\t\t\tbreak;\n+\t\tcase EVEN:\n+\t\t\tif (i%2 == 0)\n+\t\t\t\tbreak;\n+\t\t\telse\n+\t\t\t\tcontinue;\n+\t\tcase ODD:\n+\t\t\tif (i%2 != 0)\n+\t\t\t\tbreak;\n+\t\t\telse\n+\t\t\t\tcontinue;\n+\t\t}\n+\n+\t\tif (vec_result[i] != vec_expected[i]) {\n+#ifdef DEBUG\n+\t\t\tprintf(\"Test_unsigned int_result: \");\n+\t\t\tprintf(\"vec_result[%d] (%d) != vec_expected[%d] (%d)\\n\",\n+\t\t\t       i, vec_result[i], i, vec_expected[i]);\n+#else\n+\t\t\tabort();\n+#endif\n+\t\t}\n+\n+\t}\n+}\n+\n+void test_result_sp(int check, vector float vec_result,\n+\t\t    vector float vec_expected)\n+{\n+\tint i;\n+\tfor(i = 0; i<4; i++) {\n+\n+\t\tswitch (check) {\n+\t\tcase ALL:\n+\t\t\tbreak;\n+\t\tcase EVEN:\n+\t\t\tif (i%2 == 0)\n+\t\t\t\tbreak;\n+\t\t\telse\n+\t\t\t\tcontinue;\n+\t\tcase ODD:\n+\t\t\tif (i%2 != 0)\n+\t\t\t\tbreak;\n+\t\t\telse\n+\t\t\t\tcontinue;\n+\t\t}\n+\n+\t\tif (vec_result[i] != vec_expected[i]) {\n+#ifdef DEBUG\n+\t\t\tprintf(\"Test_result_sp: \");\n+\t\t\tprintf(\"vec_result[%d] (%f) != vec_expected[%d] (%f)\\n\",\n+\t\t\t       i, vec_result[i], i, vec_expected[i]);\n+#else\n+\t\t\tabort();\n+#endif\n+\t\t}\n+\t}\n+}\n+\n+int main()\n+{\n+\tint i;\n+\tvector unsigned int vec_unint, vec_uns_int_expected, vec_uns_int_result;\n+\tvector signed int vec_int, vec_int_expected, vec_int_result;\n+\tvector float  vec_flt, vec_flt_result, vec_flt_expected;\n+\tvector long long int vec_ll_int0, vec_ll_int1;\n+\tvector long long unsigned int vec_ll_uns_int0, vec_ll_uns_int1;\n+\tvector double vec_dble0, vec_dble1, vec_dble_result, vec_dble_expected;\n+\n+\tvec_ll_int0 = (vector long long int){ -12, -12345678901234 };\n+\tvec_ll_int1 = (vector long long int){ 12, 9876543210 };\n+\tvec_ll_uns_int0 = (vector unsigned long long int){ 102, 9753108642 };\n+\tvec_ll_uns_int1 = (vector unsigned long long int){ 23, 29 };\n+\n+\t/* Convert two double precision vector float to vector int */\n+\tvec_dble0 = (vector double){-124.930, 81234.49};\n+\tvec_dble1 = (vector double){-24.370, 8354.99};\n+\tvec_int_expected = (vector signed int){-124, 81234, -24, 8354};\n+\tvec_int_result = vec_signed2 (vec_dble0, vec_dble1);\n+\ttest_int_result (ALL, vec_int_result, vec_int_expected);\n+\n+\t/* Convert two double precision vector float to vector unsigned int */\n+\tvec_dble0 = (vector double){124.930, 8134.49};\n+\tvec_dble1 = (vector double){24.370, 834.99};\n+\tvec_uns_int_expected = (vector unsigned int){124, 8134, 24, 834};\n+\tvec_uns_int_result = vec_unsigned2 (vec_dble0, vec_dble1);\n+\ttest_unsigned_int_result (ALL, vec_uns_int_result,\n+\t\t\t\t  vec_uns_int_expected);\n+\n+\t/* conversion of two double precision vectors to single precision vector */\n+\tvec_flt_expected = (vector float){-12.00, -12345678901234.00, 12.00, 9876543210.00};\n+\tvec_flt_result = vec_float2 (vec_ll_int0, vec_ll_int1);\n+\ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n+\n+\tvec_flt_expected = (vector float){102.00, 9753108642.00, 23.00, 29.00};\n+\tvec_flt_result = vec_float2 (vec_ll_uns_int0, vec_ll_uns_int1);\n+\ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n+\n+\tvec_dble0 = (vector double){ 34.0, 97.0 };\n+\tvec_dble1 = (vector double){ 214.0, -5.5 };\n+\tvec_flt_expected = (vector float){34.0, 97.0, 214.0, -5.5};\n+\tvec_flt_result = vec_float2 (vec_dble0, vec_dble1);\n+\ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n+}\n+"}, {"sha": "325796c8b643a8a85a67d407918d7d97b6b9b3a3", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-runnable.c", "status": "modified", "additions": 2, "deletions": 31, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6839134ee53c7ee582145c7fb41f20305bf58cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-runnable.c?ref=c6839134ee53c7ee582145c7fb41f20305bf58cf", "patch": "@@ -1,7 +1,6 @@\n-/* { dg-do run { target { p8vector_hw } } } */\n+/* { dg-do run { target { vsx_hw } } } */\n /* { dg-require-effective-target vsx_hw } */\n-/* { dg-options \"-O2 -mvsx -mcpu=power8\" } */\n-/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-maltivec -mvsx\" } */\n \n #include <altivec.h> // vector\n \n@@ -257,19 +256,6 @@ int main()\n \tvec_flt_result = vec_float (vec_unint);\n \ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n \n-\t/* conversion of two double precision vectors to single precision vector */\n-\tvec_flt_expected = (vector float){-12.00, -12345678901234.00, 12.00, 9876543210.00};\n-\tvec_flt_result = vec_float2 (vec_ll_int0, vec_ll_int1);\n-\ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n-\n-\tvec_flt_expected = (vector float){102.00, 9753108642.00, 23.00, 29.00};\n-\tvec_flt_result = vec_float2 (vec_ll_uns_int0, vec_ll_uns_int1);\n-\ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n-\n-\tvec_flt_expected = (vector float){34.0, 97.0, 214.0, -5.5};\n-\tvec_flt_result = vec_float2 (vec_dble0, vec_dble1);\n-\ttest_result_sp(ALL, vec_flt_result, vec_flt_expected);\n-\n \t/* conversion of even words in double precision vector to single precision vector */\n \tvec_flt_expected = (vector float){-12.00, 00.00, -12345678901234.00, 0.00};\n \tvec_flt_result = vec_floate (vec_ll_int0);\n@@ -308,13 +294,6 @@ int main()\n \tvec_ll_int_result = vec_signed (vec_dble0);\n \ttest_ll_int_result (vec_ll_int_result, vec_ll_int_expected);\n \n-\t/* Convert two double precision vector float to vector int */\n-\tvec_dble0 = (vector double){-124.930, 81234.49};\n-\tvec_dble1 = (vector double){-24.370, 8354.99};\n-\tvec_int_expected = (vector signed int){-124, 81234, -24, 8354};\n-\tvec_int_result = vec_signed2 (vec_dble0, vec_dble1);\n-\ttest_int_result (ALL, vec_int_result, vec_int_expected);\n-\n \t/* Convert double precision vector float to vector int, even words */\n \tvec_dble0 = (vector double){-124.930, 81234.49};\n \tvec_int_expected = (vector signed int){-124, 0, 81234, 0};\n@@ -334,14 +313,6 @@ int main()\n \ttest_ll_unsigned_int_result (vec_ll_uns_int_result,\n \t\t\t\t     vec_ll_uns_int_expected);\n \n-\t/* Convert two double precision vector float to vector unsigned int */\n-\tvec_dble0 = (vector double){124.930, 8134.49};\n-\tvec_dble1 = (vector double){24.370, 834.99};\n-\tvec_uns_int_expected = (vector unsigned int){124, 8134, 24, 834};\n-\tvec_uns_int_result = vec_unsigned2 (vec_dble0, vec_dble1);\n-\ttest_unsigned_int_result (ALL, vec_uns_int_result,\n-\t\t\t\t  vec_uns_int_expected);\n-\n \t/* Convert double precision vector float to vector unsigned int,\n \t   even words */\n \tvec_dble0 = (vector double){3124.930, 8234.49};"}]}