{"sha": "a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg2ODgxMWVlNWNiZWMxMzUyNjZjMWNjZTdiMmRlZmI1ZTJjNmJmNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-11-16T17:58:39Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-11-16T17:58:39Z"}, "message": "c-ada-spec.c (dump_ada_template): Use RECORD_OR_UNION_TYPE_P.\n\n\t* c-ada-spec.c (dump_ada_template): Use RECORD_OR_UNION_TYPE_P.\n\t* c-common.c (c_common_get_alias_set): Likewise.\n\t(handle_visibility_attribute): Likewise.\n\nFrom-SVN: r230432", "tree": {"sha": "93cf42ad410155446825d7dc6543b00c7cbd90c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93cf42ad410155446825d7dc6543b00c7cbd90c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "971f13d7456bf53cd860edb45d99a6657ae5216b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971f13d7456bf53cd860edb45d99a6657ae5216b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/971f13d7456bf53cd860edb45d99a6657ae5216b"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "e9851aa6ddd7f8c49dbe34e66dcb724eeb2bc7aa", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "patch": "@@ -1,3 +1,9 @@\n+2015-11-16  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-ada-spec.c (dump_ada_template): Use RECORD_OR_UNION_TYPE_P.\n+\t* c-common.c (c_common_get_alias_set): Likewise.\n+\t(handle_visibility_attribute): Likewise.\n+\n 2015-11-16  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* c-common.c (handle_simd_attribute): New."}, {"sha": "e85c1a9a7d5b2d5ced6ff3fb7d7c5996de52849f", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "patch": "@@ -1758,8 +1758,7 @@ dump_ada_template (pretty_printer *buffer, tree t, int spc)\n \n       /* We are interested in concrete template instantiations only: skip\n \t partially specialized nodes.  */\n-      if ((TREE_CODE (instance) == RECORD_TYPE\n-\t   || TREE_CODE (instance) == UNION_TYPE)\n+      if (RECORD_OR_UNION_TYPE_P (instance)\n \t  && cpp_check && cpp_check (instance, HAS_DEPENDENT_TEMPLATE_ARGS))\n \tcontinue;\n "}, {"sha": "a062f81a1c35a8ca6b9fb8c692a55082a02a3884", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a868811ee5cbec135266c1cce7b2defb5e2c6bf4/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=a868811ee5cbec135266c1cce7b2defb5e2c6bf4", "patch": "@@ -5344,19 +5344,15 @@ c_common_get_alias_set (tree t)\n \t   TREE_CODE (t2) == POINTER_TYPE;\n \t   t2 = TREE_TYPE (t2))\n \t;\n-      if (TREE_CODE (t2) != RECORD_TYPE\n-\t  && TREE_CODE (t2) != ENUMERAL_TYPE\n-\t  && TREE_CODE (t2) != QUAL_UNION_TYPE\n-\t  && TREE_CODE (t2) != UNION_TYPE)\n+      if (!RECORD_OR_UNION_TYPE_P (t2)\n+\t  && TREE_CODE (t2) != ENUMERAL_TYPE)\n \treturn -1;\n       if (TYPE_SIZE (t2) == 0)\n \treturn -1;\n     }\n   /* These are the only cases that need special handling.  */\n-  if (TREE_CODE (t) != RECORD_TYPE\n+  if (!RECORD_OR_UNION_TYPE_P (t)\n       && TREE_CODE (t) != ENUMERAL_TYPE\n-      && TREE_CODE (t) != QUAL_UNION_TYPE\n-      && TREE_CODE (t) != UNION_TYPE\n       && TREE_CODE (t) != POINTER_TYPE)\n     return -1;\n   /* Undefined? */\n@@ -8644,7 +8640,7 @@ handle_visibility_attribute (tree *node, tree name, tree args,\n     {\n       if (TREE_CODE (*node) == ENUMERAL_TYPE)\n \t/* OK */;\n-      else if (TREE_CODE (*node) != RECORD_TYPE && TREE_CODE (*node) != UNION_TYPE)\n+      else if (!RECORD_OR_UNION_TYPE_P (*node))\n \t{\n \t  warning (OPT_Wattributes, \"%qE attribute ignored on non-class types\",\n \t\t   name);"}]}