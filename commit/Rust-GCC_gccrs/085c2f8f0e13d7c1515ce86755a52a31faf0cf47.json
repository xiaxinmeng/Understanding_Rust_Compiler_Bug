{"sha": "085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg1YzJmOGYwZTEzZDdjMTUxNWNlODY3NTVhNTJhMzFmYWYwY2Y0Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-17T17:19:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-18T13:26:38Z"}, "message": "libstdc++: Fix CTAD for debug sequence containers\n\nThis fixes some 23_containers/*/cons/deduction.cc failures seen with\n-std=c++17/-D_GLIBCXX_DEBUG, caused by non-immediate errors when\nsubstituting template arguments into an incorrect specialization of the\nstd::__cxx1998 base class. This happens because the size_type member of\nthe debug container is _Base_type::size_type, so is non-deducible, and\nthe deduced types get substituted into _Base_type, triggering the\nstatic_assert that checks the allocator's value_type matches the\ncontainer's.\n\nThe solution is to make the C(size_type, const T&, const Alloc&)\nconstructors of the debug sequence containers non-deducible. In order to\nmake CTAD work again deduction guides that use std::size_t for the first\nargument are added.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/debug/deque (deque(size_type, const T&, const A&)):\n\tPrevent class template argument deduction and replace with a\n\tdeduction guide.\n\t* include/debug/forward_list (forward_list(size_type, const T&, const A&)):\n\tLikewise.\n\t* include/debug/list (list(size_type, const T&, const A&)):\n\tLikewise.\n\t* include/debug/vector (vector(size_type, const T&, const A&)):\n\tLikewise.", "tree": {"sha": "ed866e000644f96813f3a7c485d432fb8a7af823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed866e000644f96813f3a7c485d432fb8a7af823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "574cab11c6f6c3eedf88f689275104ededc7e9a1", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "patch": "@@ -130,7 +130,7 @@ namespace __debug\n       deque(size_type __n, const _Allocator& __a = _Allocator())\n       : _Base(__n, __a) { }\n \n-      deque(size_type __n, const _Tp& __value,\n+      deque(size_type __n, const __type_identity_t<_Tp>& __value,\n \t    const _Allocator& __a = _Allocator())\n       : _Base(__n, __value, __a) { }\n #else\n@@ -668,6 +668,11 @@ namespace __debug\n \t   typename = _RequireAllocator<_Allocator>>\n     deque(_InputIterator, _InputIterator, _Allocator = _Allocator())\n       -> deque<_ValT, _Allocator>;\n+\n+  template<typename _Tp, typename _Allocator = allocator<_Tp>,\n+\t   typename = _RequireAllocator<_Allocator>>\n+    deque(size_t, _Tp, _Allocator = _Allocator())\n+      -> deque<_Tp, _Allocator>;\n #endif\n \n   template<typename _Tp, typename _Alloc>"}, {"sha": "cae5b5f038b66156f15a88a4e84f278346dfe06e", "filename": "libstdc++-v3/include/debug/forward_list", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list?ref=085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "patch": "@@ -251,7 +251,7 @@ namespace __debug\n       : _Base(__n, __al)\n       { }\n \n-      forward_list(size_type __n, const _Tp& __value,\n+      forward_list(size_type __n, const __type_identity_t<_Tp>& __value,\n \t\t   const allocator_type& __al = allocator_type())\n       : _Base(__n, __value, __al)\n       { }\n@@ -854,6 +854,11 @@ namespace __debug\n \t   typename = _RequireAllocator<_Allocator>>\n     forward_list(_InputIterator, _InputIterator, _Allocator = _Allocator())\n       -> forward_list<_ValT, _Allocator>;\n+\n+  template<typename _Tp, typename _Allocator = allocator<_Tp>,\n+\t   typename = _RequireAllocator<_Allocator>>\n+    forward_list(size_t, _Tp, _Allocator = _Allocator())\n+      -> forward_list<_Tp, _Allocator>;\n #endif\n \n   template<typename _Tp, typename _Alloc>"}, {"sha": "b599e93d147cf86f4f3bbff5cec574dd3b63f7eb", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "patch": "@@ -135,7 +135,7 @@ namespace __debug\n       list(size_type __n, const allocator_type& __a = allocator_type())\n       : _Base(__n, __a) { }\n \n-      list(size_type __n, const _Tp& __value,\n+      list(size_type __n, const __type_identity_t<_Tp>& __value,\n \t   const _Allocator& __a = _Allocator())\n       : _Base(__n, __value, __a) { }\n #else\n@@ -921,6 +921,11 @@ namespace __debug\n \t   typename = _RequireAllocator<_Allocator>>\n     list(_InputIterator, _InputIterator, _Allocator = _Allocator())\n       -> list<_ValT, _Allocator>;\n+\n+  template<typename _Tp, typename _Allocator = allocator<_Tp>,\n+\t   typename = _RequireAllocator<_Allocator>>\n+    list(size_t, _Tp, _Allocator = _Allocator())\n+      -> list<_Tp, _Allocator>;\n #endif\n \n   template<typename _Tp, typename _Alloc>"}, {"sha": "d30d750a6f07092e6d7994e4e0b53f22d35261aa", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085c2f8f0e13d7c1515ce86755a52a31faf0cf47/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=085c2f8f0e13d7c1515ce86755a52a31faf0cf47", "patch": "@@ -181,7 +181,7 @@ namespace __debug\n       vector(size_type __n, const _Allocator& __a = _Allocator())\n       : _Base(__n, __a), _Safe_vector(__n) { }\n \n-      vector(size_type __n, const _Tp& __value,\n+      vector(size_type __n, const __type_identity_t<_Tp>& __value,\n \t     const _Allocator& __a = _Allocator())\n       : _Base(__n, __value, __a) { }\n #else\n@@ -811,6 +811,11 @@ namespace __debug\n \t   typename = _RequireAllocator<_Allocator>>\n     vector(_InputIterator, _InputIterator, _Allocator = _Allocator())\n       -> vector<_ValT, _Allocator>;\n+\n+  template<typename _Tp, typename _Allocator = allocator<_Tp>,\n+\t   typename = _RequireAllocator<_Allocator>>\n+    vector(size_t, _Tp, _Allocator = _Allocator())\n+      -> vector<_Tp, _Allocator>;\n #endif\n \n } // namespace __debug"}]}