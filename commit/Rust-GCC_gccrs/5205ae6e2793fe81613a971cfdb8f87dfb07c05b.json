{"sha": "5205ae6e2793fe81613a971cfdb8f87dfb07c05b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwNWFlNmUyNzkzZmU4MTYxM2E5NzFjZmRiOGY4N2RmYjA3YzA1Yg==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-11-24T11:46:18Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-11-24T11:46:18Z"}, "message": "remove val_ssa_equiv_hash_traits\n\ngcc/ChangeLog:\n\n2015-11-24  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree-ssa-uncprop.c (struct val_ssa_equiv_hash_traits): Remove.\n\t(val_ssa_equiv_hash_traits::remove): Likewise.\n\t(pass_uncprop::execute): Adjust.\n\nFrom-SVN: r230802", "tree": {"sha": "77ffb223400dd0978ecfa30ed4c1a6936da8317c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77ffb223400dd0978ecfa30ed4c1a6936da8317c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5205ae6e2793fe81613a971cfdb8f87dfb07c05b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5205ae6e2793fe81613a971cfdb8f87dfb07c05b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5205ae6e2793fe81613a971cfdb8f87dfb07c05b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5205ae6e2793fe81613a971cfdb8f87dfb07c05b/comments", "author": null, "committer": null, "parents": [{"sha": "76b6ddbfe234ed3d68dfaaadfc85a86119a3d0af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b6ddbfe234ed3d68dfaaadfc85a86119a3d0af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b6ddbfe234ed3d68dfaaadfc85a86119a3d0af"}], "stats": {"total": 28, "additions": 8, "deletions": 20}, "files": [{"sha": "cea194b0b830d5fed40b6c2687526e7bd110a7ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5205ae6e2793fe81613a971cfdb8f87dfb07c05b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5205ae6e2793fe81613a971cfdb8f87dfb07c05b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5205ae6e2793fe81613a971cfdb8f87dfb07c05b", "patch": "@@ -1,3 +1,9 @@\n+2015-11-24  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree-ssa-uncprop.c (struct val_ssa_equiv_hash_traits): Remove.\n+\t(val_ssa_equiv_hash_traits::remove): Likewise.\n+\t(pass_uncprop::execute): Adjust.\n+\n 2015-11-24  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* hash-map-traits.h (simple_hashmap_traits ::remove): call"}, {"sha": "a60184e31fe191557128535e9fcd4728d335c449", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5205ae6e2793fe81613a971cfdb8f87dfb07c05b/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5205ae6e2793fe81613a971cfdb8f87dfb07c05b/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=5205ae6e2793fe81613a971cfdb8f87dfb07c05b", "patch": "@@ -275,27 +275,10 @@ struct equiv_hash_elt\n   vec<tree> equivalences;\n };\n \n-/* Value to ssa name equivalence hashtable helpers.  */\n-\n-struct val_ssa_equiv_hash_traits : simple_hashmap_traits <tree_operand_hash,\n-\t\t\t\t\t\t\t  vec<tree> >\n-{\n-  template<typename T> static inline void remove (T &);\n-};\n-\n-/* Free an instance of equiv_hash_elt.  */\n-\n-template<typename T>\n-inline void\n-val_ssa_equiv_hash_traits::remove (T &elt)\n-{\n-  elt.m_value.release ();\n-}\n-\n /* Global hash table implementing a mapping from invariant values\n    to a list of SSA_NAMEs which have the same value.  We might be\n    able to reuse tree-vn for this code.  */\n-static hash_map<tree, vec<tree>, val_ssa_equiv_hash_traits> *val_ssa_equiv;\n+static hash_map<tree, auto_vec<tree> > *val_ssa_equiv;\n \n static void uncprop_into_successor_phis (basic_block);\n \n@@ -518,8 +501,7 @@ pass_uncprop::execute (function *fun)\n   associate_equivalences_with_edges ();\n \n   /* Create our global data structures.  */\n-  val_ssa_equiv\n-    = new hash_map<tree, vec<tree>, val_ssa_equiv_hash_traits> (1024);\n+  val_ssa_equiv = new hash_map<tree, auto_vec<tree> > (1024);\n \n   /* We're going to do a dominator walk, so ensure that we have\n      dominance information.  */"}]}