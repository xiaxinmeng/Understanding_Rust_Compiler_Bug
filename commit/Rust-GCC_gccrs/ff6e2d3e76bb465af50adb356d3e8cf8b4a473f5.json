{"sha": "ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY2ZTJkM2U3NmJiNDY1YWY1MGFkYjM1NmQzZThjZjhiNGE0NzNmNQ==", "commit": {"author": {"name": "Rodney Brown", "email": "rbrown64@csc.com.au", "date": "2003-02-04T18:01:20Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-04T18:01:20Z"}, "message": "i386.c (x86_function_profiler): Fix typo in format.\n\n2003-02-04  Rodney Brown  <rbrown64@csc.com.au>\n\n\t* config/i386/i386.c (x86_function_profiler): Fix typo in format.\n\nFrom-SVN: r62384", "tree": {"sha": "de9f72a94066ab6c0156c932291dad39bd730729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de9f72a94066ab6c0156c932291dad39bd730729"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5/comments", "author": null, "committer": null, "parents": [{"sha": "e7cc090e91b39ff34d75222a21a72d52f2ed6700", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cc090e91b39ff34d75222a21a72d52f2ed6700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7cc090e91b39ff34d75222a21a72d52f2ed6700"}], "stats": {"total": 126, "additions": 65, "deletions": 61}, "files": [{"sha": "1c7c2460d62f860512627f2e70cc2b92154ceee9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 60, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5", "patch": "@@ -1,3 +1,7 @@\n+2003-02-04  Rodney Brown  <rbrown64@csc.com.au>\n+\n+\t* config/i386/i386.c (x86_function_profiler): Fix typo in format.\n+\n 2003-02-04  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* doc/install.texi (*-*-linux-gnu):  Mention glibc requirements\n@@ -48,7 +52,7 @@ Mon Feb  3 21:19:11 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* hooks.c (hook_rtx_rtx_identity): Generic hook function that\n \ttakes a single rtx and returns it unmodified.\n \t* hooks.h (hook_rtx_rtx_identity): Prototype here.\n-\t* target.h (struct gcc_target): Add \"delegitimize_address\" \n+\t* target.h (struct gcc_target): Add \"delegitimize_address\"\n \tfield to target structure.\n \t* target-def.h (TARGET_DELEGITIMIZE_ADDRESS):  Provide default\n \tfor delegitimize_address target using hook_rtx_rtx_identity.\n@@ -180,49 +184,49 @@ Mon Feb  3 01:30:11 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-01  Falk Hueffner  <falk.hueffner@student.uni-tuebingen.de>\n \n-        * optabs.h (optab_index): Add OTI_clz, OTI_ctz, OTI_popcount and\n-        OTI_parity.\n-        (clz_optab, ctz_optab, popcount_optab, parity_optab): New.\n-        * optabs.c (widen_clz, expand_parity): New.\n-        (expand_unop): Handle clz and parity.  Hardcode SImode as outmode\n-        for libcalls to clz, ctz, popcount, and parity.\n-        (init_optabs): Init clz_optab, ctz_optab, popcount_optab and\n-        parity_optab, and set up libfunc handlers.\n-        * libgcc2.c (__clzsi2, __clzdi2, __ctzsi2, __ctzdi2,\n-        __popcountsi2, __popcountdi2, __paritysi2 __paritydi2,\n-        __popcount_tab): New.\n-        * libgcc2.h: Declare them.\n-        * libgcc-std.ver (GCC_3.4): Add new functions from libgcc2.c.\n-        * genopinit.c (optabs): Add clz_optab, ctz_optab, popcount_optab\n-        and parity_optab.\n-        * builtin-types.def (BT_FN_INT_LONG, BT_FN_INT_LONGLONG): New.\n-        * builtins.def (BUILT_IN_CLZ, BUILT_IN_CTZ, BUILT_IN_POPCOUNT,\n-        BUILT_IN_PARITY, BUILT_IN_FFSL, BUILT_IN_CLZL, BUILT_IN_CTZL,\n-        BUILT_IN_POPCOUNTL, BUILT_IN_PARITYL, BUILT_IN_FFSLL,\n-        BUILT_IN_CLZLL, BUILT_IN_CTZLL, BUILT_IN_POPCOUNTLL,\n-        BUILT_IN_PARITYLL): New.\n-        * builtins.c (expand_builtin_unop): Rename from expand_builtin_ffs\n-        and add optab argument.\n-        (expand_builtin): Expand BUILT_IN_{FFS,CLZ,POPCOUNT,PARITY}*.\n-        * tree.def (CLZ_EXPR, CTZ_EXPR, POPCOUNT_EXPR, PARITY_EXPR): New.\n-        * expr.c (expand_expr): Handle them.\n-        * fold-const.c (tree_expr_nonnegative_p): Likewise.\n-        * rtl.def (CLZ, CTZ, POPCOUNT, PARITY): New.\n-        * reload1.c (eliminate_regs): Handle them.\n-        (elimination_effects): Likewise.\n-        * function.c (instantiate_virtual_regs_1): Likewise\n-        * genattrtab.c (check_attr_value): Likewise.\n-        * simplify-rtx.c (simplify_unary_operation): Likewise.\n-        * c-common.c (c_common_truthvalue_conversion): Handle POPCOUNT_EXPR.\n-        * combine.c (combine_simplify_rtx): Handle POPCOUNT and PARITY.\n-        (nonzero_bits): Handle CLZ, CTZ, POPCOUNT and PARITY.\n-        * config/alpha/alpha.md (clzdi2, ctzdi2, popcountdi2): New.\n-        * config/arm/arm.c (arm_init_builtins): Rename __builtin_clz to\n-        __builtin_arm_clz.\n-        * Makefile.in (LIB2FUNCS_1, LIB2FUNCS_2): Move...\n-        * mklibgcc.in (lib2funcs): ...here and merge.  Add new members.\n-        * doc/extend.texi (Other Builtins): Add new builtins.\n-        * doc/md.texi (Standard Names): Add new patterns.\n+\t* optabs.h (optab_index): Add OTI_clz, OTI_ctz, OTI_popcount and\n+\tOTI_parity.\n+\t(clz_optab, ctz_optab, popcount_optab, parity_optab): New.\n+\t* optabs.c (widen_clz, expand_parity): New.\n+\t(expand_unop): Handle clz and parity.  Hardcode SImode as outmode\n+\tfor libcalls to clz, ctz, popcount, and parity.\n+\t(init_optabs): Init clz_optab, ctz_optab, popcount_optab and\n+\tparity_optab, and set up libfunc handlers.\n+\t* libgcc2.c (__clzsi2, __clzdi2, __ctzsi2, __ctzdi2,\n+\t__popcountsi2, __popcountdi2, __paritysi2 __paritydi2,\n+\t__popcount_tab): New.\n+\t* libgcc2.h: Declare them.\n+\t* libgcc-std.ver (GCC_3.4): Add new functions from libgcc2.c.\n+\t* genopinit.c (optabs): Add clz_optab, ctz_optab, popcount_optab\n+\tand parity_optab.\n+\t* builtin-types.def (BT_FN_INT_LONG, BT_FN_INT_LONGLONG): New.\n+\t* builtins.def (BUILT_IN_CLZ, BUILT_IN_CTZ, BUILT_IN_POPCOUNT,\n+\tBUILT_IN_PARITY, BUILT_IN_FFSL, BUILT_IN_CLZL, BUILT_IN_CTZL,\n+\tBUILT_IN_POPCOUNTL, BUILT_IN_PARITYL, BUILT_IN_FFSLL,\n+\tBUILT_IN_CLZLL, BUILT_IN_CTZLL, BUILT_IN_POPCOUNTLL,\n+\tBUILT_IN_PARITYLL): New.\n+\t* builtins.c (expand_builtin_unop): Rename from expand_builtin_ffs\n+\tand add optab argument.\n+\t(expand_builtin): Expand BUILT_IN_{FFS,CLZ,POPCOUNT,PARITY}*.\n+\t* tree.def (CLZ_EXPR, CTZ_EXPR, POPCOUNT_EXPR, PARITY_EXPR): New.\n+\t* expr.c (expand_expr): Handle them.\n+\t* fold-const.c (tree_expr_nonnegative_p): Likewise.\n+\t* rtl.def (CLZ, CTZ, POPCOUNT, PARITY): New.\n+\t* reload1.c (eliminate_regs): Handle them.\n+\t(elimination_effects): Likewise.\n+\t* function.c (instantiate_virtual_regs_1): Likewise\n+\t* genattrtab.c (check_attr_value): Likewise.\n+\t* simplify-rtx.c (simplify_unary_operation): Likewise.\n+\t* c-common.c (c_common_truthvalue_conversion): Handle POPCOUNT_EXPR.\n+\t* combine.c (combine_simplify_rtx): Handle POPCOUNT and PARITY.\n+\t(nonzero_bits): Handle CLZ, CTZ, POPCOUNT and PARITY.\n+\t* config/alpha/alpha.md (clzdi2, ctzdi2, popcountdi2): New.\n+\t* config/arm/arm.c (arm_init_builtins): Rename __builtin_clz to\n+\t__builtin_arm_clz.\n+\t* Makefile.in (LIB2FUNCS_1, LIB2FUNCS_2): Move...\n+\t* mklibgcc.in (lib2funcs): ...here and merge.  Add new members.\n+\t* doc/extend.texi (Other Builtins): Add new builtins.\n+\t* doc/md.texi (Standard Names): Add new patterns.\n \n 2003-02-01  Ulrich Weigand  <uweigand@de.ibm.com>\n \n@@ -389,7 +393,7 @@ Sat Feb  1 00:28:30 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-01-30  Ralf Corsepius  <corsepiu@faw.uni-ulm.de>\n \n-\tPR target/9316 \n+\tPR target/9316\n \t* config/rs6000/rtems.h: Add CPP_OS_DEFAULT_SPEC.\n \t* config/rs6000/sysv4.h: Add CPP_OS_RTEMS_SPEC.\n \t* config/rs6000/t-rtems: New file. multilib variants to match OS.\n@@ -468,7 +472,7 @@ Sat Feb  1 00:28:30 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-01-29  Joel Sherrill  <joel@OARcorp.com>\n \n \tPR bootstrap/9293\n-\t* config/m68k/t-crtstuff: Replace spaces with tabs, add \n+\t* config/m68k/t-crtstuff: Replace spaces with tabs, add\n \t $(MULTILIB_CFLAGS) as compiler option and multilib crtbegin/end.o.\n \n 2003-01-29  Joel Sherrill  <joel@OARcorp.com>\n@@ -516,15 +520,15 @@ Wed Jan 29 10:26:12 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-01-28  Andreas Schwab  <schwab@suse.de>\n \n-        * config/m68k/m68k.md (tablejump+2): Don't sign extend an address\n-        register.\n-        * config/m68k/apollo68.h (ASM_RETURN_CASE_JUMP): Likewise.\n-        * config/m68k/coff.h (ASM_RETURN_CASE_JUMP): Likewise.\n-        * config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Likewise.\n-        * config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Likewise.\n-        * config/m68k/mot3300.h (ASM_RETURN_CASE_JUMP): Likewise.\n-        * config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Likewise.\n-        * config/m68k/pbb.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/m68k.md (tablejump+2): Don't sign extend an address\n+\tregister.\n+\t* config/m68k/apollo68.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/coff.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/mot3300.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/pbb.h (ASM_RETURN_CASE_JUMP): Likewise.\n \n 2003-01-28  Richard Sandiford  <rsandifo@redhat.com>\n \n@@ -597,9 +601,9 @@ Wed Jan 29 10:26:12 CET 2003  Jan Hubicka  <jh@suse.cz>\n \tconfig/i386/i386.c, config/i386/i386.h, config/i960/i960-protos.h,\n \tconfig/i960/i960.c, config/i960/i960.h, config/ip2k/ip2k-protos.h,\n \tconfig/ip2k/ip2k.c, config/ip2k/ip2k.h, config/mips/mips-protos.h,\n-\tconfig/mips/mips.c, config/mips/mips.h, \n+\tconfig/mips/mips.c, config/mips/mips.h,\n \tconfig/m68hc11/m68hc11-protos.h, config/m68hc11/m68hc11.c,\n-\tconfig/m68hc11/m68hc11.h, config/ns32k/ns32k-protos.h, \n+\tconfig/m68hc11/m68hc11.h, config/ns32k/ns32k-protos.h,\n \tconfig/ns32k/ns32k.c, config/ns32k/ns32k.h, config/pa/pa-protos.h,\n \tconfig/pa/pa.c, config/pa/pa.h, config/s390/s390-protos.h,\n \tconfig/s390/s390.c, config/s390/s390.h, config/vax/vax-protos.h,\n@@ -655,7 +659,7 @@ Wed Jan 29 10:26:12 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* sched-rgn.c (init_ready_list): Ditto.\n \t(can_schedule_ready_p): Ditto.\n-\t\n+\n 2003-01-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* config/i386/i386.md (*movsi_1): Use movdqa to move one xmm\n@@ -705,7 +709,7 @@ Tue Jan 28 12:15:13 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* cse.c (rtx_cost): Use targetm.rtx_costs.\n \t* system.h (CONST_COSTS RTX_COSTS DEFAULT_RTX_COSTS): Poison.\n \t* doc/tm.texi: Update.\n-\t\n+\n \t* target.h (targetm.rtx_costs): New.\n \t* target-def.h (TARGET_RTX_COSTS): New.\n \t* hooks.c (hook_bool_rtx_int_int_intp_false): New.\n@@ -847,7 +851,7 @@ Tue Jan 28 12:15:13 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* doc/invoke.texi (profile-arcs, test-coverage): Update and\n \tclarify.\n-\t\n+\n \t* profile.c (index_counts_file): Remove duplicate check for open file.\n \n 2003-01-27  Jerry Quinn  <jlquinn@optonline.net>"}, {"sha": "3f2deee968862e197947e47e804d140b8fda88bf", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ff6e2d3e76bb465af50adb356d3e8cf8b4a473f5", "patch": "@@ -15243,7 +15243,7 @@ x86_function_profiler (file, labelno)\n   else\n     {\n #ifndef NO_PROFILE_COUNTERS\n-      fprintf (file, \"\\tmovl\\t$%sP%d,%%$%s\\n\", LPREFIX, labelno,\n+      fprintf (file, \"\\tmovl\\t$%sP%d,%%%s\\n\", LPREFIX, labelno,\n \t       PROFILE_COUNT_REGISTER);\n #endif\n       fprintf (file, \"\\tcall\\t%s\\n\", MCOUNT_NAME);"}]}