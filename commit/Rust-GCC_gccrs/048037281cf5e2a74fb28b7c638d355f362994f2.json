{"sha": "048037281cf5e2a74fb28b7c638d355f362994f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4MDM3MjgxY2Y1ZTJhNzRmYjI4YjdjNjM4ZDM1NWYzNjI5OTRmMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-23T20:38:23Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-23T20:38:23Z"}, "message": "re PR fortran/51948 ([OOP] Rejects valid: Function result value in MOVE_ALLOC, nested in SELECT TYPE)\n\n2012-01-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51948\n        * check.c (variable_check): Fix checking for\n        result variables and deeply nested BLOCKs.\n\n2012-01-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51948\n        * gfortran.dg/move_alloc_12.f90: New.\n\nFrom-SVN: r183453", "tree": {"sha": "bc7fb0ccb25c6ce616bbf47c59ddb1672e9faef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc7fb0ccb25c6ce616bbf47c59ddb1672e9faef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/048037281cf5e2a74fb28b7c638d355f362994f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048037281cf5e2a74fb28b7c638d355f362994f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048037281cf5e2a74fb28b7c638d355f362994f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048037281cf5e2a74fb28b7c638d355f362994f2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ae4c24b4c6f0b57eb0eda931d366b05103acf9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae4c24b4c6f0b57eb0eda931d366b05103acf9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae4c24b4c6f0b57eb0eda931d366b05103acf9b"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "2d1e70045a38e44839ea8693d1d50fe0823ff672", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=048037281cf5e2a74fb28b7c638d355f362994f2", "patch": "@@ -1,3 +1,9 @@\n+2012-01-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51948\n+\t* check.c (variable_check): Fix checking for\n+\t variables and deeply nested BLOCKs.\n+\n 2012-01-21  Tobias Burnus  <burnus@net-b.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "4b72a5fb0b34802349e0fda3e3c5c61bf5b4f084", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=048037281cf5e2a74fb28b7c638d355f362994f2", "patch": "@@ -521,15 +521,18 @@ variable_check (gfc_expr *e, int n, bool allow_proc)\n \n   if (e->expr_type == EXPR_VARIABLE\n       && e->symtree->n.sym->attr.flavor != FL_PARAMETER\n-      && (allow_proc\n-\t  || !e->symtree->n.sym->attr.function\n-\t  || (e->symtree->n.sym == e->symtree->n.sym->result\n-\t      && (e->symtree->n.sym == gfc_current_ns->proc_name\n-\t\t  || (gfc_current_ns->parent\n-\t\t      && e->symtree->n.sym\n-\t\t\t == gfc_current_ns->parent->proc_name)))))\n+      && (allow_proc || !e->symtree->n.sym->attr.function))\n     return SUCCESS;\n \n+  if (e->expr_type == EXPR_VARIABLE && e->symtree->n.sym->attr.function\n+      && e->symtree->n.sym == e->symtree->n.sym->result)\n+    {\n+      gfc_namespace *ns;\n+      for (ns = gfc_current_ns; ns; ns = ns->parent)\n+\tif (ns->proc_name == e->symtree->n.sym)\n+\t  return SUCCESS;\n+    }\n+\n   gfc_error (\"'%s' argument of '%s' intrinsic at %L must be a variable\",\n \t     gfc_current_intrinsic_arg[n]->name, gfc_current_intrinsic, &e->where);\n "}, {"sha": "0f1e4bf2bb8832351e323ad156b813ce2822f2ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=048037281cf5e2a74fb28b7c638d355f362994f2", "patch": "@@ -1,3 +1,8 @@\n+2012-01-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51948\n+\t* gfortran.dg/move_alloc_12.f90: New.\n+\n 2012-01-23  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \tPR middle-end/45416"}, {"sha": "880b302d5c03ffbbb3746513058a307d0c440032", "filename": "gcc/testsuite/gfortran.dg/move_alloc_12.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048037281cf5e2a74fb28b7c638d355f362994f2/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_12.f90?ref=048037281cf5e2a74fb28b7c638d355f362994f2", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+!\n+! PR fortran/51948\n+!\n+  type :: t\n+  end type t\n+contains\n+  function func(x, y)\n+    class(t) :: y\n+    type(t), allocatable :: func\n+    type(t), allocatable :: x\n+\n+    select type (y)\n+      type is(t)\n+        call move_alloc (x, func)\n+    end select\n+  end function\n+\n+  function func2(x, y)\n+    class(t) :: y\n+    class(t), allocatable :: func2\n+    class(t), allocatable :: x\n+\n+    block\n+    block\n+    select type (y)\n+      type is(t)\n+        call move_alloc (x, func2)\n+    end select\n+    end block\n+    end block\n+  end function\n+end"}]}