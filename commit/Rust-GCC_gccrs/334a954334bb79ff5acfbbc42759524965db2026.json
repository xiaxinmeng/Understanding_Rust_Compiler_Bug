{"sha": "334a954334bb79ff5acfbbc42759524965db2026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0YTk1NDMzNGJiNzlmZjVhY2ZiYmM0Mjc1OTUyNDk2NWRiMjAyNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-20T20:17:45Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-20T20:17:45Z"}, "message": "target-supports.exp (check_effective_target_mips64): New procedure.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_mips64): New\n\tprocedure.\n\t* gcc.dg/lower-subreg-1.c: Require !mips64.\n\t* gcc.dg/sibcall-3.c (ATTR): New macro.\n\t(recurser_void1, recurser_void2): Use it.\n\t* gcc.dg/sibcall-4.c: As for gcc.dg/sibcall-3.c.\n\t* gcc.dg/tree-ssa/ssa-fre-3.c: Require !mips64.\n\nFrom-SVN: r128626", "tree": {"sha": "901e19bbaa8a1787f60db2c2198223c64d915e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/901e19bbaa8a1787f60db2c2198223c64d915e88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/334a954334bb79ff5acfbbc42759524965db2026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334a954334bb79ff5acfbbc42759524965db2026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/334a954334bb79ff5acfbbc42759524965db2026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334a954334bb79ff5acfbbc42759524965db2026/comments", "author": null, "committer": null, "parents": [{"sha": "1ec3b87bb2a787a5e2a50fb984dc3d48f08a4ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec3b87bb2a787a5e2a50fb984dc3d48f08a4ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ec3b87bb2a787a5e2a50fb984dc3d48f08a4ec6"}], "stats": {"total": 63, "additions": 53, "deletions": 10}, "files": [{"sha": "d2cf2b0f8138b531a2216d88004a4a87f6708063", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=334a954334bb79ff5acfbbc42759524965db2026", "patch": "@@ -1,3 +1,13 @@\n+2007-09-20  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* lib/target-supports.exp (check_effective_target_mips64): New\n+\tprocedure.\n+\t* gcc.dg/lower-subreg-1.c: Require !mips64.\n+\t* gcc.dg/sibcall-3.c (ATTR): New macro.\n+\t(recurser_void1, recurser_void2): Use it.\n+\t* gcc.dg/sibcall-4.c: As for gcc.dg/sibcall-3.c.\n+\t* gcc.dg/tree-ssa/ssa-fre-3.c: Require !mips64.\n+\n 2007-09-20  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n \t* gfortran.dg/g77/19981216-0.f: Remove dg-warning annotation."}, {"sha": "37c884a90c973f563e41e2e2c1ecc6f6020c303f", "filename": "gcc/testsuite/gcc.dg/lower-subreg-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c?ref=334a954334bb79ff5acfbbc42759524965db2026", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target { ! mips64 } } } */\n /* { dg-options \"-O -fdump-rtl-subreg\" } */\n /* { dg-require-effective-target ilp32 } */\n "}, {"sha": "6e6b3aefd22184019a7031c58d2763b084cbfb1d", "filename": "gcc/testsuite/gcc.dg/sibcall-3.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c?ref=334a954334bb79ff5acfbbc42759524965db2026", "patch": "@@ -18,8 +18,16 @@\n extern void abort (void);\n extern void exit (int);\n \n-static void recurser_void1 (int);\n-static void recurser_void2 (int);\n+/* Sibcalls are not supported in MIPS16 mode, which has direct calls but\n+   not direct jumps.  */\n+#ifdef __mips\n+#define ATTR __attribute__((nomips16))\n+#else\n+#define ATTR\n+#endif\n+\n+static ATTR void recurser_void1 (int);\n+static ATTR void recurser_void2 (int);\n extern void track (int);\n \n int main ()\n@@ -32,7 +40,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void __attribute__((noinline))\n+static void __attribute__((noinline)) ATTR\n recurser_void1 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -44,7 +52,7 @@ recurser_void1 (int n)\n   recurser_void2 (n + 1);\n }\n \n-static void __attribute__((noinline))\n+static void __attribute__((noinline)) ATTR\n recurser_void2 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)"}, {"sha": "c852c8af39a31f1c913fd91a509eb3842f62eeed", "filename": "gcc/testsuite/gcc.dg/sibcall-4.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c?ref=334a954334bb79ff5acfbbc42759524965db2026", "patch": "@@ -18,8 +18,16 @@\n extern void abort (void);\n extern void exit (int);\n \n-static void recurser_void1 (void);\n-static void recurser_void2 (void);\n+/* Sibcalls are not supported in MIPS16 mode, which has direct calls but\n+   not direct jumps.  */\n+#ifdef __mips\n+#define ATTR __attribute__((nomips16))\n+#else\n+#define ATTR\n+#endif\n+\n+static ATTR void recurser_void1 (void);\n+static ATTR void recurser_void2 (void);\n extern void track (void);\n \n int n = 0;\n@@ -33,7 +41,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void __attribute__((noinline))\n+static void __attribute__((noinline)) ATTR\n recurser_void1 (void)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -45,7 +53,7 @@ recurser_void1 (void)\n   recurser_void2 ();\n }\n \n-static void __attribute__((noinline))\n+static void __attribute__((noinline)) ATTR\n recurser_void2 (void)\n {\n   if (n == 0 || n == 7 || n == 8)"}, {"sha": "3b7a547a6e739de35dda565b951ce5dca22524bd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-3.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c?ref=334a954334bb79ff5acfbbc42759524965db2026", "patch": "@@ -1,4 +1,11 @@\n-/* { dg-do compile } */\n+/* This test requires:\n+\n+      TRULY_NOOP_TRUNCATION (sizeof (int) * CHAR_BIT,\n+\t\t\t     sizeof (long long) * CHAR_BIT)\n+\n+   When the condition is true, we distribute \"(int) (a + b)\" as\n+   \"(int) a + (int) b\", otherwise we keep the original.  */\n+/* { dg-do compile { target { ! mips64 } } } */\n /* { dg-options \"-O -fwrapv -fdump-tree-fre-details\" } */\n \n /* From PR14844.  */"}, {"sha": "b744e2eb1efe5d24b51160e024ccd24c8a0ad3e0", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a954334bb79ff5acfbbc42759524965db2026/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=334a954334bb79ff5acfbbc42759524965db2026", "patch": "@@ -617,6 +617,16 @@ proc check_effective_target_mpaired_single { } {\n     } \"-mpaired-single\"]\n }\n \n+# Return true if the target is a 64-bit MIPS target.\n+\n+proc check_effective_target_mips64 { } {\n+    return [check_no_compiler_messages mips64 assembly {\n+\t#ifndef __mips64\n+\t#error FOO\n+\t#endif\n+    }]\n+}\n+\n # Return 1 if the current multilib does not generate PIC by default.\n \n proc check_effective_target_nonpic { } {"}]}