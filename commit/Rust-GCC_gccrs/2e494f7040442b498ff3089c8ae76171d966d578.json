{"sha": "2e494f7040442b498ff3089c8ae76171d966d578", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU0OTRmNzA0MDQ0MmI0OThmZjMwODljOGFlNzYxNzFkOTY2ZDU3OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-20T22:22:14Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-20T22:22:14Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r539", "tree": {"sha": "e28ddcbbb4ecfce8b6edf2eab3de82f8483bd088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e28ddcbbb4ecfce8b6edf2eab3de82f8483bd088"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e494f7040442b498ff3089c8ae76171d966d578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e494f7040442b498ff3089c8ae76171d966d578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e494f7040442b498ff3089c8ae76171d966d578", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e494f7040442b498ff3089c8ae76171d966d578/comments", "author": null, "committer": null, "parents": [{"sha": "eca3fa3b2306bed2af1ec2c51ab754f036987a0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca3fa3b2306bed2af1ec2c51ab754f036987a0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca3fa3b2306bed2af1ec2c51ab754f036987a0e"}], "stats": {"total": 444, "additions": 228, "deletions": 216}, "files": [{"sha": "08fd0d80a3a86e40bb01ffbade163ed63ebf76a8", "filename": "gcc/Makefile.in", "status": "modified", "additions": 181, "deletions": 107, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e494f7040442b498ff3089c8ae76171d966d578/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e494f7040442b498ff3089c8ae76171d966d578/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2e494f7040442b498ff3089c8ae76171d966d578", "patch": "@@ -19,9 +19,12 @@\n \n # The targets for external use include:\n # all, doc, proto, install, install-cross, install-cross-rest,\n-# uninstall, TAGS, mostlyclean, clean, cleanconfig, realclean,\n+# uninstall, TAGS, mostlyclean, clean, distclean, realclean,\n # stage1, stage2, stage3, stage4.\n \n+# Suppress smart makes who think they know how to automake Yacc files\n+.y.c:\n+\n .NOEXPORT: # This tells GNU Make version 3\n \t   # not to put all the variables in the environment.\n \n@@ -84,7 +87,7 @@ OLDCC = cc\n # NOTE: -O does not work on some Unix systems!\n CCLIBFLAGS = -O\n \n-# Version of ar to use when compiling libgcc1.a. \n+# Version of ar to use when compiling libgcc1.a.\n OLDAR = ar\n \n # The GCC to use for compiling libgcc2.a.  Usually the one we just built.\n@@ -121,12 +124,14 @@ srcdir = .\n # Common prefix for installation directories.\n # NOTE: This directory must exist when you start installation.\n prefix = /usr/local\n+# Directory in which to put host dependent programs and libraries\n+exec_prefix = $(prefix)\n # Directory in which to put the executable for the command `gcc'\n-bindir = $(prefix)/bin\n+bindir = $(exec_prefix)/bin\n # Directory in which to put the directories used by the compiler.\n-libdir = $(prefix)/lib\n+libdir = $(exec_prefix)/lib\n # Directory in which the compiler finds executables, libraries, etc.\n-libsubdir = $(libdir)/gcc/$(target)/$(version)\n+libsubdir = $(libdir)/gcc-lib/$(target)/$(version)\n # Extension (if any) to put in installed man-page filename.\n manext = .1\n # Directory in which to put man pages.\n@@ -143,6 +148,8 @@ CLIB=\n OBSTACK=obstack.o\n \n # Specify the rule for actually making libgcc1.a.\n+# The value may be empty; that means to do absolutely nothing\n+# with or for libgcc1.a.\n LIBGCC1 = libgcc1.a\n \n # Specify the rule for actually making libgcc2.a.\n@@ -159,11 +166,17 @@ LIBGCC2_CFLAGS = -O2 $(GCC_CFLAGS) -g1\n # The rules for compiling them should be in the t-* file for the machine.\n EXTRA_PASSES =\n \n-# List of extra executables that should be compiled for this target machine\n-# that are used for linking.\n+# Like EXTRA_PASSES, but these are used when linking.\n+EXTRA_PROGRAMS = \n+\n+# List of extra object files that should be compiled for this target machine.\n # The rules for compiling them should be in the t-* file for the machine.\n EXTRA_PARTS =\n \n+# List of extra object files that should be compiled and linked with\n+# compiler proper (cc1, cc1obj, cc1plus).\n+EXTRA_OBJS =\n+\n # List of extra C and assembler files to add to libgcc1.a.\n # Assembler files should have names ending in `.asm'.\n LIB1FUNCS_EXTRA = \n@@ -189,12 +202,12 @@ GCC_PASSES=gcc cc1 cpp $(EXTRA_PASSES)\n \n # List of things which should already be built whenever we try to use gcc\n # to link anything.\n-GCC_PARTS=$(GCC_PASSES) libgcc.a $(EXTRA_PARTS)\n+GCC_PARTS=$(GCC_PASSES) libgcc.a $(EXTRA_PROGRAMS) $(EXTRA_PARTS)\n \n # Change this to empty to prevent installing limits.h.\n-# Actually, this currently has no effect, \n+# Actually, this currently has no effect,\n # and if that causes no problems, it can be deleted.\n-# Otherwise, it must be replaced so as to control \n+# Otherwise, it must be replaced so as to control\n # the actions of install-limits-h.\n LIMITS_H = limits.h\n \n@@ -212,8 +225,12 @@ HOST_PREFIX=\n HOST_PREFIX_1=loser-\n HOST_CC=$(CC)\n HOST_CFLAGS=$(ALL_CFLAGS)\n+HOST_CLIB=$(CLIB)\n HOST_LDFLAGS=$(LDFLAGS)\n HOST_CPPFLAGS=$(ALL_CPPFLAGS)\n+HOST_ALLOCA=$(ALLOCA)\n+HOST_MALLOC=$(MALLOC)\n+HOST_OBSTACK=$(OBSTACK)\n \n # Choose the real default target.\n ALL=all.internal\n@@ -227,13 +244,15 @@ INSTALL_TARGET=install-native\n # do not specify the default target.\n # The real definition is under `all.internal' (for native compilers)\n # or `all.cross' (for cross compilers).\n-all: $(ALL)\n+all: all.indirect\n \n # sed inserts variable overrides after the following line.\n ####\n \f\n # Now figure out from those variables how to compile and link.\n \n+all.indirect: $(ALL)\n+\n INTERNAL_CFLAGS = $(CROSS)\n \n # This is the variable actually used when we compile.\n@@ -243,10 +262,10 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS)\n ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n # Even if ALLOCA is set, don't use it if compiling with GCC.\n-USE_ALLOCA= `if [ x\"${CC}\" = x\"${OLDCC}\" ] ; then echo ${ALLOCA}; else true; fi`\n-USE_HOST_ALLOCA= `if [ x\"${CC}\" = x\"${OLDCC}\" -a x\"${ALLOCA}\" != x ] ; then echo ${HOST_PREFIX}${ALLOCA}; else true; fi`\n-USE_HOST_MALLOC= `if [ x\"${MALLOC}\" != x ] ; then echo ${HOST_PREFIX}${MALLOC}; else true; fi`\n-USE_HOST_OBSTACK= `if [ x\"${OBSTACK}\" != x ] ; then echo ${HOST_PREFIX}${OBSTACK}; else true; fi`\n+USE_ALLOCA= ` case \"${CC}\" in \"${OLDCC}\") echo ${ALLOCA} ;; esac `\n+USE_HOST_ALLOCA= ` case \"${HOST_CC}\"@\"${HOST_ALLOCA}\" in \"${OLDCC}\"@?*) echo ${HOST_PREFIX}${HOST_ALLOCA} ;; esac `\n+USE_HOST_MALLOC= ` case \"${HOST_MALLOC}\" in ?*) echo ${HOST_PREFIX}${HOST_MALLOC} ;; esac `\n+USE_HOST_OBSTACK= ` case \"${HOST_OBSTACK}\" in ?*) echo ${HOST_PREFIX}${HOST_OBSTACK} ;; esac `\n \n # Dependency on obstack, alloca, malloc or whatever library facilities\n # are not installed in the system libraries.\n@@ -256,15 +275,16 @@ LIBDEPS= $(OBSTACK) $(ALLOCA) $(MALLOC)\n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n # We don't use USE_ALLOCA because backquote expansion doesn't work in deps.\n-HOST_LIBDEPS= $(HOST_PREFIX)$(OBSTACK) $(HOST_PREFIX)$(ALLOCA) $(HOST_PREFIX)$(MALLOC)\n+HOST_LIBDEPS= $(HOST_PREFIX)$(HOST_OBSTACK) $(HOST_PREFIX)$(HOST_ALLOCA) $(HOST_PREFIX)$(HOST_MALLOC)\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n LIBS = $(OBSTACK) $(USE_ALLOCA) $(MALLOC) $(CLIB)\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n-HOST_LIBS = $(USE_HOST_OBSTACK) $(USE_HOST_ALLOCA) $(USE_HOST_MALLOC) $(CLIB)\n+HOST_LIBS = $(USE_HOST_OBSTACK) $(USE_HOST_ALLOCA) $(USE_HOST_MALLOC)  \\\n+\t    $(HOST_CLIB)\n \n HOST_RTL = $(HOST_PREFIX)rtl.o\n HOST_RTLANAL = $(HOST_PREFIX)rtlanal.o\n@@ -313,7 +333,7 @@ OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n  regclass.o local-alloc.o global-alloc.o reload.o reload1.o caller-save.o \\\n  insn-peep.o reorg.o sched.o final.o recog.o reg-stack.o \\\n  insn-recog.o insn-extract.o insn-output.o insn-emit.o \\\n- insn-attrtab.o aux-output.o\n+ insn-attrtab.o aux-output.o xcoffout.o $(EXTRA_OBJS)\n \n # GEN files are listed separately, so they can be built before doing parallel\n #  makes for cc1 or cc1plus.  Otherwise sequent parallel make attempts to load\n@@ -384,10 +404,10 @@ start.encap: native gcc $(LIBGCC1_TARGET)\n # Use this to make a GCC that will be used only to recompile GCC.\n for-bootstrap: start.encap libgcc.a\n # These can't be made, with COFF encapsulation, until after GCC can run.\n-rest.encap: libgcc.a float.h\n+rest.encap: libgcc.a float.h  $(EXTRA_PARTS)\n # This is what is made with the host's compiler\n # whether making a cross compiler or not.\n-native: config.status cpp $(LANGUAGES) $(EXTRA_PASSES) $(EXTRA_PARTS)\n+native: config.status cpp $(LANGUAGES) $(EXTRA_PASSES) $(EXTRA_PROGRAMS)\n \n # Define the names for selecting languages in LANGUAGES.\n C c: cc1\n@@ -396,9 +416,16 @@ OBJC objc: cc1obj\n OBJECTIVE-C objective-c: cc1obj\n PROTO: proto\n \n+# Really, really stupid make features, such as SUN's KEEP_STATE, may force\n+# a target to build even if it is up-to-date.  So we must verify that\n+# config.status does not exist before failing.\n config.status:\n-\t@echo You must configure gcc.  Look at the INSTALL file for details.\n-\t@false\n+\t@if [ ! -f config.status ] ; then \\\n+\t  echo You must configure gcc.  Look at the INSTALL file for details.; \\\n+\t  false; \\\n+\telse \\\n+\t  true; \\\n+\tfi\n \n compilations: ${OBJS}\n \n@@ -434,8 +461,8 @@ enquire: enquire.o $(GCC_PARTS)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ENQUIRE_LDFLAGS) enquire.o -o $@\n enquire.o: $(srcdir)/enquire.c $(GCC_PASSES)\n \t-cp $(srcdir)/enquire.c . > /dev/null 2>&1\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. \\\n-\t    -c enquire.c\n+# Breaking this line caused a problem with one version of GNU make.\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. -c enquire.c\n \f\n # Build libgcc.a.\n # This is done in two parts because some functions, in libgcc1.c,\n@@ -482,7 +509,7 @@ libgcc1.a: libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n # We don't use -e here because there are if statements\n # that should not make the command give up when the if condition is false.\n # Instead, we test for failure after each command where it matters.\n-\tfor file in .. $(LIB1FUNCS_EXTRA); \\\n+\t-for file in .. $(LIB1FUNCS_EXTRA); \\\n \tdo \\\n \t  if [ x$${file} != x.. ]; then \\\n \t    name=`echo $${file} | sed -e 's/[.]c$$//' -e 's/[.]asm$$//'`; \\\n@@ -525,8 +552,7 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n \tfor name in $(LIB2FUNCS); \\\n \tdo \\\n \t  echo $${name}; \\\n-\t  $(GCC_FOR_TARGET) -fstrength-reduce -O $(INCLUDES) \\\n-\t      $(LIBGCC2_CFLAGS) -c -DL$${name} \\\n+\t  $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c -DL$${name} \\\n \t      $(srcdir)/libgcc2.c -o $${name}.o; \\\n \t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n \t  $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}.o; \\\n@@ -538,7 +564,7 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n # We don't use -e here because there are if statements\n # that should not make the command give up when the if condition is false.\n # Instead, we test for failure after each command where it matters.\n-\tfor file in .. $(LIB2FUNCS_EXTRA); \\\n+\t-for file in .. $(LIB2FUNCS_EXTRA); \\\n \tdo \\\n \t  if [ x$${file} != x.. ]; then \\\n \t    name=`echo $${file} | sed -e 's/[.]c$$//' -e 's/[.]asm$$//'`; \\\n@@ -547,8 +573,7 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n \t      cp $${file} $${name}.s; file=$${name}.s; \\\n \t      if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n \t    else true; fi; \\\n-\t    $(GCC_FOR_TARGET) -fstrength-reduce -O $(INCLUDES) \\\n-\t\t$(LIBGCC2_CFLAGS) -c $${file}; \\\n+\t    $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c $${file}; \\\n \t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n \t    $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}.o; \\\n \t    rm -f $${name}.[so]; \\\n@@ -566,7 +591,10 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n libgcc.a: $(LIBGCC1) $(LIBGCC2)\n \t-rm -rf tmplibgcc.a libgcc.a tmpcopy\n \tmkdir tmpcopy\n-\t(cd tmpcopy; $(AR) x ../$(LIBGCC1))\n+\t-if [ x$(LIBGCC1) != x ];\t\t\t\\\n+\tthen (cd tmpcopy; $(AR) x ../$(LIBGCC1));\t\\\n+\telse true;\t\t\t\t\t\\\n+\tfi\n \t(cd tmpcopy; $(AR) x ../$(LIBGCC2))\n \t(cd tmpcopy; $(AR) $(AR_FLAGS) ../tmplibgcc.a *.o)\n \trm -rf tmpcopy\n@@ -580,13 +608,11 @@ libgcc.a: $(LIBGCC1) $(LIBGCC2)\n # linked using GCC on system V, for the sake of C++ constructors.\n crtbegin.o:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) -DCRT_BEGIN \\\n-\t  -finhibit-size-directive -g0 -c $(srcdir)/crtstuff.c\n-\tmv crtstuff.o crtbegin.o\n+\t  -finhibit-size-directive -g0 -c $(srcdir)/crtstuff.c -o crtbegin.o\n \n crtend.o:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) -DCRT_END \\\n-\t  -finhibit-size-directive -g0 -c $(srcdir)/crtstuff.c\n-\tmv crtstuff.o crtend.o\n+\t  -finhibit-size-directive -g0 -c $(srcdir)/crtstuff.c -o crtend.o\n \f\n # Compiling object files from source files.\n \n@@ -618,7 +644,7 @@ cp-parse.o : $(srcdir)/cp-parse.c $(CONFIG_H) $(CPLUS_TREE_H) flags.h\n   `echo $(srcdir)/cp-parse.c | sed 's,^\\./,,'`\n \n $(srcdir)/cp-parse.c $(srcdir)/cp-parse.h : $(srcdir)/cp-parse.y\n-\t@echo expect 29 shift/reduce conflicts and 14 reduce/reduce conflicts\n+\t@echo expect 30 shift/reduce conflicts and 14 reduce/reduce conflicts\n \tcd $(srcdir); $(BISON) $(BISONFLAGS) -d -o cp-parse.c cp-parse.y\n \n cp-spew.o : cp-spew.c $(CONFIG_H) $(CPLUS_TREE_H) \\\n@@ -674,7 +700,7 @@ c-common.o : c-common.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h\n gcc.o: gcc.c $(CONFIG_H) gvarargs.h obstack.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   -DSTANDARD_STARTFILE_PREFIX=\\\"$(libdir)/\\\" \\\n-  -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc/\\\" \\\n+  -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc-lib/\\\" \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target)\\\" \\\n   -c `echo $(srcdir)/gcc.c | sed 's,^\\./,,'`\n \n@@ -687,15 +713,16 @@ tree.o : tree.c $(CONFIG_H) $(TREE_H) gvarargs.h flags.h function.h\n print-tree.o : print-tree.c $(CONFIG_H) $(TREE_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) $(TREE_H) function.h\n fold-const.o : fold-const.c $(CONFIG_H) $(TREE_H) flags.h \n-toplev.o : toplev.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h input.h insn-attr.h\n+toplev.o : toplev.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h input.h \\\n+   insn-attr.h xcoff.h\n \n rtl.o : rtl.c $(CONFIG_H) $(RTL_H)\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(RTL_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) $(RTL_H)\n \n varasm.o : varasm.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h \\\n-   insn-codes.h expr.h hard-reg-set.h regs.h\n+   insn-codes.h expr.h hard-reg-set.h regs.h xcoff.h\n function.o : function.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-flags.h insn-codes.h expr.h regs.h hard-reg-set.h insn-config.h \\\n    recog.h output.h\n@@ -712,13 +739,15 @@ explow.o : explow.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h hard-reg-set.h \\\n optabs.o : optabs.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h  \\\n    insn-flags.h insn-config.h insn-codes.h expr.h recog.h\n dbxout.o : dbxout.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h regs.h \\\n-   insn-config.h reload.h gstab.h\n+   insn-config.h reload.h gstab.h xcoff.h\n sdbout.o : sdbout.c $(CONFIG_H) $(TREE_H) $(RTL_H) gsyms.h flags.h \\\n    insn-config.h reload.h\n dwarfout.o : dwarfout.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf.h flags.h \\\n    insn-config.h reload.h output.h\n+xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoff.h flags.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) flags.h gvarargs.h function.h  \\\n    regs.h insn-config.h insn-codes.h real.h expr.h\n+getpwd.o : getpwd.c $(CONFIG_H)\n \n integrate.o : integrate.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h integrate.h \\\n    insn-flags.h insn-config.h insn-codes.h expr.h real.h function.h\n@@ -759,7 +788,7 @@ sched.o : sched.c $(CONFIG_H) $(RTL_H) basic-block.h regs.h hard-reg-set.h \\\n    flags.h insn-config.h insn-attr.h\n final.o : final.c $(CONFIG_H) $(RTL_H) gvarargs.h flags.h regs.h \\\n    recog.h conditions.h insn-config.h insn-attr.h real.h output.h \\\n-   hard-reg-set.h insn-codes.h gstab.h\n+   hard-reg-set.h insn-codes.h gstab.h xcoff.h\n recog.o : recog.c $(CONFIG_H) $(RTL_H)  \\\n    regs.h recog.h hard-reg-set.h flags.h insn-config.h insn-attr.h \\\n    insn-flags.h insn-codes.h real.h\n@@ -1010,34 +1039,34 @@ cccp.o: cccp.c $(CONFIG_H) pcp.h version.c\n # The reason we use $(libdir)/g++-include rather than using libsubdir\n # is for compatibility with the current version of libg++.\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-          -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n-          -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n+\t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n+\t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(prefix)/include\\\" \\\n-          -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n+\t  -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n \t  -c `echo $(srcdir)/cccp.c | sed 's,^\\./,,'`\n \n proto: config.status protoize unprotoize SYSCALLS.c.X protoize.1 unprotoize.1\n \n-protoize: protoize.o getopt.o getopt1.o version.o $(LIBDEPS)\n+protoize: protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n-\t  protoize.o getopt.o getopt1.o version.o $(LIBS) -o $@\n+\t  protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n protoize.o:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n-          -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libsubdir)/g++-include\\\" \\\n+          -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n           -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(prefix)/include\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n \t  $(srcdir)/protoize.c\n \n-unprotoize: unprotoize.o getopt.o getopt1.o version.o $(LIBDEPS)\n+unprotoize: unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n-\t  unprotoize.o getopt.o getopt1.o version.o $(LIBS) -o $@\n+\t  unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n unprotoize.o:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n \tcp $(srcdir)/protoize.c unprotoize.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n-          -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libsubdir)/g++-include\\\" \\\n+          -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n           -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(prefix)/include\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n@@ -1052,29 +1081,22 @@ getopt1.o: $(srcdir)/getopt1.c getopt.h\n protoize.1:\t$(srcdir)/proto-man ./cpp\n \t./cpp -traditional $(srcdir)/proto-man \\\n \t\t| grep -v '^#' \\\n-\t\t\t| awk 'NF > 0 {print}' > tmp-protoize.1\n-\tmv tmp-protoize.1 protoize.1\n+\t\t\t| awk 'NF > 0 {print}' > tmp-proto.1\n+\tmv tmp-proto.1 protoize.1\n \n unprotoize.1:\t$(srcdir)/proto-man ./cpp\n \t./cpp -traditional -DUNPRO $(srcdir)/proto-man \\\n \t\t| grep -v '^#' \\\n-\t\t\t| awk 'NF > 0 {print}' > tmp-unprotoize.1\n-\tmv tmp-unprotoize.1 unprotoize.1\n+\t\t\t| awk 'NF > 0 {print}' > tmp-unproto.1\n+\tmv tmp-unproto.1 unprotoize.1\n+\n+SYSCALLS.c : $(srcdir)/sys-types.h $(srcdir)/sys-protos.h\n+\tcat $(srcdir)/sys-types.h $(srcdir)/sys-protos.h >$@\n \n # This info describes the target machine, so compile with GCC just built.\n SYSCALLS.c.X:\tSYSCALLS.c $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  -fgen-aux-info -S -o /dev/null $(srcdir)/SYSCALLS.c\n-\n-test-protoize:\n-\t-rm -f tmp-protoize.*\n-\tcp protoize.c tmp-protoize.c\n-\tchmod u+w tmp-protoize.c\n-\t./unprotoize -N -c \"-B./ -Wall -Wwrite-strings $(CFLAGS)\" tmp-protoize.c\n-\t./protoize -N -B ./ -c \"-B./ -Wall -Wwrite-strings $(CFLAGS)\" tmp-protoize.c\n-\t@echo Expect exactly one one line difference for visit_each_hash_node.\n-\t-diff protoize.c tmp-protoize.c\n-\t-rm -f tmp-protoize.*\n+\t  -fgen-aux-info -S -o /dev/null SYSCALLS.c\n \f\n # Remake the info files.\n \n@@ -1093,9 +1115,9 @@ $(srcdir)/gcc.info: $(srcdir)/gcc.texi\n # There are four levels of this:\n #   `mostlyclean', `clean', `cleanconfig' and `realclean'.\n # `mostlyclean' is useful while working on a particular type of machine.\n+# It deletes most, but not all, of the files made by compilation.\n # It does not delete libgcc.a or its parts, so it won't have to be recompiled.\n-# `clean' deletes what you want to delete ordinarily to save space.\n-# This is most, but not all, of the files made by compilation.\n+# `clean' deletes everything made by running `make all'.\n # `cleanconfig' also deletes the files made by config.\n # `realclean' also deletes everything that could be regenerated automatically.\n \n@@ -1106,50 +1128,62 @@ mostlyclean:\n \t-rm -f $(HOST_PREFIX_1)alloca.c $(HOST_PREFIX_1)malloc.c\n \t-rm -f $(HOST_PREFIX_1)obstack.c \n # Delete the temp files made in the course of building libgcc.a.\n-\t-rm -f tmplibgcc.a* tmpcopy\n+\t-rm -f tmplibgcc* tmpcopy\n \tfor name in $(LIB1FUNCS); do rm -f $${name}.c; done\n # Delete other temporary files.\n-\t-rm -f tmp-float.h tmp-*protoize.1 tmp-gcc.xtar.Z tmp-limits.h\n+\t-rm -f tmp-float.h tmp-*proto.1 tmp-gcc.xtar.Z tmp-limits.h gccnew\n # Delete the stamp files.\n \t-rm -f stamp-* tmp-*\n-\t-rm -f *.s *.s[0-9] *.co\n+# Delete debugging dump files.\n \t-rm -f *.greg *.lreg *.combine *.flow *.cse *.jump *.rtl *.tree *.loop\n-\t-rm -f *.dbr *.jump2 *.sched *.cse2 *.cpp *.sched2 *.stack\n-\t-rm -f gccnew specs core float.h enquire SYSCALLS.c.X\n-\t-rm -f collect collect2\n+\t-rm -f *.dbr *.jump2 *.sched *.cse2 *.sched2 *.stack\n+# Delete some files made during installation.\n+\t-rm -f specs float.h enquire SYSCALLS.c SYSCALLS.c.X\n+\t-rm -f collect collect2 ld mips-tfile mips-tdump\n+# Delete unwanted output files from TeX.\n+\t-rm -f *.toc *.log *.vr *.fn *.cp *.tp *.ky *.pg\n+# Delete core dumps.\n+\t-rm -f core\n \n # delete all files made by compilation.\n clean: mostlyclean\n \t-rm -f libgcc.a libgcc1.a libgcc2.a libgcc2.ready\n \t-rm -fr stage1 stage2 stage3 stage4\n \n-# Like clean but also delete the links and files made to configure gcc.\n-cleanconfig: clean\n+# This is used to get rid of everything found in the source dir\n+# that shouldn't be in the distribution.\n+distclean: clean\n \t-rm -f tm.h aux-output.c config.h md config.status tconfig.h\n-\t-rm -f Makefile aux-output2.c\n+\t-rm -f Makefile *.dvi *.oaux\n+\n+# Delete anything likely to be found in the source directory\n+# that shouldn't be in the distribution.\n+extraclean: distclean\n+\t-rm -rf =* #* *~ config/#* config/*~\n+\t-rm -f *.dvi *.oaux patch*\n+\t-rm -f *.s *.s[0-9] *.i\n \n # Get rid of every file that's generated from some other file.\n # Most of these files ARE PRESENT in the GCC distribution.\n-realclean: cleanconfig\n-\t-rm -f cpp.aux cpp.cps cpp.fns cpp.info cpp.kys cpp.pgs cpp.tps cpp.vrs\n+realclean: distclean\n \t-rm -f cp-parse.c cp-parse.h cp-parse.output\n \t-rm -f objc-parse.c objc-parse.output\n \t-rm -f protoize.1 unprotoize.1\n \t-rm -f c-parse.c c-parse.h c-parse.output\n \t-rm -f cexp.c cexp.output TAGS \n-\t-rm -f cpp.info* cpp.?? cpp.??s cpp.log cpp.toc cpp.*aux\n-\t-rm -f gcc.info* gcc.?? gcc.??s gcc.log gcc.toc gcc.*aux\n-\t-rm -f gplus.info* gplus.?? gplus.??s gplus.log gplus.toc gplus.*aux\n-\t-rm -f *.dvi\n+\t-rm -f cpp.info* cpp.??s cpp.*aux\n+\t-rm -f gcc.info* gcc.??s gcc.*aux\n+\t-rm -f gplus.info* gplus.??s gplus.*aux\n \f\n # Entry points `install' and `uninstall'.\n # Also temporarily `install-fixincludes' could replace `install-headers'.\n+# Also use `install-collect2' to install collect2 when the config files don't.\n \n install: $(INSTALL_TARGET)\n \n # Copy the files of native compiler into directories where they will be run.\n install-native: install-common install-libgcc $(INSTALL_HEADERS) \\\n-   install-man install-proto\n+   install-man\n \n # Copy the files of cross compiler into directories where they will be run.\n install-cross: install-common install-common-headers \\\n@@ -1215,9 +1249,9 @@ install-float-h-cross:\n # Create the installation directory.\n install-dir:\n \tif [ -d $(libdir) ] ; then true ; else mkdir $(libdir) ; fi\n-\tif [ -d $(libdir)/gcc ] ; then true ; else mkdir $(libdir)/gcc ; fi\n-\tif [ -d $(libdir)/gcc/$(target) ] ; then true ; else mkdir $(libdir)/gcc/$(target) ; fi\n-\tif [ -d $(libdir)/gcc/$(target)/$(version) ] ; then true ; else mkdir $(libdir)/gcc/$(target)/$(version) ; fi\n+\tif [ -d $(libdir)/gcc-lib ] ; then true ; else mkdir $(libdir)/gcc-lib ; fi\n+\tif [ -d $(libdir)/gcc-lib/$(target) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target) ; fi\n+\tif [ -d $(libdir)/gcc-lib/$(target)/$(version) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target)/$(version) ; fi\n \tif [ -d $(bindir) ] ; then true ; else mkdir $(bindir) ; fi\n # We don't use mkdir -p to create the parents of mandir,\n # because some systems don't support it.\n@@ -1235,7 +1269,7 @@ install-common: native install-dir\n \t  else true; \\\n \t  fi; \\\n \tdone\n-\tfor file in $(EXTRA_PASSES) $(EXTRA_PARTS) ..; do \\\n+\tfor file in $(EXTRA_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) ..; do \\\n \t  if [ x\"$$file\" != x.. ]; then \\\n \t    rm -f $(libsubdir)/$$file; \\\n \t    $(INSTALL_PROGRAM) $$file $(libsubdir)/$$file; \\\n@@ -1246,10 +1280,10 @@ install-common: native install-dir\n # Install the driver program as gcc-$(target)\n # and also as either gcc (if native) or $(tooldir)/bin/gcc.\n \t-if [ -f gcc-cross ] ; then \\\n+\t  $(INSTALL_PROGRAM) gcc-cross $(bindir)/gcc-$(target); \\\n \t  if [ -d $(tooldir)/bin/. ] ; then \\\n \t    rm -f $(tooldir)/bin/gcc; \\\n \t    $(INSTALL_PROGRAM) gcc-cross $(tooldir)/bin/gcc; \\\n-\t    $(INSTALL_PROGRAM) gcc-cross $(bindir)/gcc-$(target); \\\n \t  else true; fi; \\\n \telse \\\n \t  rm -f $(bindir)/gcc; \\\n@@ -1274,16 +1308,23 @@ install-proto: proto install-dir\n \tchmod a-x $(libsubdir)/SYSCALLS.c.X\n \n # Install the man pages.\n-install-man: install-dir $(srcdir)/gcc.1 protoize.1 unprotoize.1\n+install-man: install-dir $(srcdir)/gcc.1 $(srcdir)/cccp.1 \\\n+   protoize.1 unprotoize.1 $(srcdir)/g++.1\n \t-rm -f $(mandir)/gcc$(manext)\n \t$(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/gcc$(manext)\n \tchmod a-x $(mandir)/gcc$(manext)\n+\t-rm -f $(mandir)/cccp$(manext)\n+\t$(INSTALL_DATA) $(srcdir)/cccp.1 $(mandir)/cccp$(manext)\n+\tchmod a-x $(mandir)/cccp$(manext)\n \t-rm -f $(mandir)/protoize$(manext)\n \t$(INSTALL_DATA) protoize.1 $(mandir)/protoize$(manext)\n \tchmod a-x $(mandir)/protoize$(manext)\n \t-rm -f $(mandir)/unprotoize$(manext)\n \t$(INSTALL_DATA) unprotoize.1 $(mandir)/unprotoize$(manext)\n \tchmod a-x $(mandir)/unprotoize$(manext)\n+\t-rm -f $(mandir)/g++$(manext)\n+\t$(INSTALL_DATA) $(srcdir)/g++.1 $(mandir)/g++$(manext)\n+\tchmod a-x $(mandir)/g++$(manext)\n \n # Install the library.\n install-libgcc: libgcc.a\n@@ -1337,14 +1378,18 @@ install-common-headers: install-dir $(USER_H) gvarargs.h gstdarg.h gstddef.h\n \t-rm -f $(libsubdir)/include/stddef.h\n \t$(INSTALL_DATA) $(srcdir)/gstddef.h $(libsubdir)/include/stddef.h\n \tchmod a-x $(libsubdir)/include/stddef.h\n+# Copy byteorder.h into the object file directory \n+# so that fixinc.svr4 can get at it if necessary.\n+# If the dirs are the same, this won't do anything.\n+\t-cp $(srcdir)/byteorder.h .\n \n # $(libsubdir)/include:\n #\tif [ -d $(libsubdir)/include ] ; then true ; else mkdir $(libsubdir)/include ; fi\n #\t-chmod ugo+rx $(libsubdir)/include\n \n # This appears not to work.  It isn't clear how to fix it.\n-# $(libsubdir)/include/README: $(libsubdir)/include $(srcdir)/fixincludes\n-#\tLIB=$(libsubdir)/include $(srcdir)/fixincludes\n+# $(libsubdir)/include/README: $(libsubdir)/include $(srcdir)/$(FIXINCLUDES)\n+#\tLIB=$(libsubdir)/include $(srcdir)/$(FIXINCLUDES)\n #\t$(INSTALL_DATA) $(srcdir)/fixincludes-README $@\n #\tchmod a-x $@\n \n@@ -1353,7 +1398,15 @@ install-fixincludes: install-headers\n \trm -rf $(libsubdir)/tmp\n \tmkdir $(libsubdir)/tmp\n # Move aside the headers that come from GCC; delete all else.\n-\tcd $(libsubdir)/include; mv $(INSTALLED_H) ../tmp; rm -rf *\n+# The sed command gets just the last file name component;\n+# this is necessary because VPATH could add a dirname.\n+# Using basename would be simpler, but some systems don't have it.\n+\tcd $(libsubdir)/include; \\\n+\tfor file in $(INSTALLED_H); do \\\n+\t  realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n+\t  mv $$realfile ../tmp; \\\n+\tdone; \\\n+\trm -rf *\n # Install fixed copies of system files.\n \t$(srcdir)/$(FIXINCLUDES) $(libsubdir)/include\n # Bring back gcc's header files.\n@@ -1362,15 +1415,24 @@ install-fixincludes: install-headers\n \t$(INSTALL_DATA) $(srcdir)/README-fixinc $(libsubdir)/include/README\n \tchmod a-x $(libsubdir)/include/README\n \n+# Use this target to install the program `collect2' under the name `ld'.\n+install-collect2: collect2\n+\t$(INSTALL_PROGRAM) collect2 $(libsubdir)/ld\n+# Install the driver program as $(libsubdir)/gcc for collect2.\n+\t-if [ -f gcc-cross ] ; then \\\n+\t  $(INSTALL_PROGRAM) gcc-cross $(libsubdir)/gcc; \\\n+\telse \\\n+\t  $(INSTALL_PROGRAM) gcc $(libsubdir)/gcc; \\\n+\tfi\n+\n # Cancel installation by deleting the installed files.\n uninstall:\n \t-rm -rf $(libsubdir)\n \t-rm -rf $(bindir)/gcc\n-\t-rm -rf $(mandir)/protoize$(manext)\n-\t-rm -rf $(mandir)/unprotoize$(manext)\n \t-rm -rf $(bindir)/protoize\n \t-rm -rf $(bindir)/unprotoize\n \t-rm -rf $(mandir)/gcc$(manext)\n+\t-rm -rf $(mandir)/cccp$(manext)\n \t-rm -rf $(mandir)/protoize$(manext)\n \t-rm -rf $(mandir)/unprotoize$(manext)\n \f\n@@ -1389,7 +1451,7 @@ TAGS: force\n #dist: gcc-$(version).tar.Z\n dist: gcc.xtar.Z\n \n-gcc.xtar.Z:\n+gcc.xtar.Z: gcc.xtar\n \tcompress < gcc.xtar > tmp-gcc.xtar.Z\n \tmv tmp-gcc.xtar.Z gcc.xtar.Z\n \n@@ -1398,15 +1460,22 @@ gcc.xtar.Z:\n \n #gcc-$(version).tar:\n gcc.xtar:\n-\t-rm -rf gcc-$(version)\n+\t-rm -rf gcc-$(version) tmp\t\n # Put all the files in a temporary subdirectory\n # which has the name that we want to have in the tar file.\n-\tmkdir gcc-$(version)\n-\tfor file in *; do \\\n-\t  ln $file gcc-$(version) || cp $file gcc-$(version); \\\n+\tmkdir tmp\n+\tmkdir tmp/config\n+\tfor file in *[0-9a-zA-Z+]; do \\\n+\t  ln $$file tmp || cp $$file tmp; \\\n \tdone\n+\tcd config; \\\n+\tfor file in *[0-9a-zA-Z+]; do \\\n+\t  ln $$file ../tmp/config || cp $$file ../tmp/config; \\\n+\tdone\n+\tln .gdbinit tmp\n+\tmv tmp gcc-$(version)\n # Get rid of everything we don't want in the distribution.\n-\tcd gcc-$(version); make -f Makefile.in distclean\n+\tcd gcc-$(version); make -f Makefile.in extraclean\n # Make the distribution.\n \ttar chf gcc.xtar gcc-$(version)\n # Get rid of the temporary directory.\n@@ -1433,28 +1502,33 @@ maketest:\n \n bootstrap: all force\n \t$(MAKE) stage1\n-\t$(MAKE) CC=\"stage1/gcc -Bstage1/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\" ALLOCA=\n+# This used to define ALLOCA as empty, but that would lead to bad results\n+# for a subsequent `make install' since that would not have ALLOCA empty.\n+# To prevent `make install' from compiling alloca.o and then relinking cc1\n+# because alloca.o is newer, we permit these recursive makes to compile\n+# alloca.o.  Then cc1 is newer, so it won't have to be relinked.\n+\t$(MAKE) CC=\"stage1/gcc -Bstage1/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n-\t$(MAKE) CC=\"stage2/gcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\" ALLOCA=\n+\t$(MAKE) CC=\"stage2/gcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap2: force\n-\t$(MAKE) CC=\"stage1/gcc -Bstage1/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\" ALLOCA=\n+\t$(MAKE) CC=\"stage1/gcc -Bstage1/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n-\t$(MAKE) CC=\"stage2/gcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\" ALLOCA=\n+\t$(MAKE) CC=\"stage2/gcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap3: force\n-\t$(MAKE) CC=\"stage2/gcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\" ALLOCA=\n+\t$(MAKE) CC=\"stage2/gcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" libdir=$(libdir) LANGUAGES=\"$(LANGUAGES)\"\n \n # Copy the object files from a particular stage into a subdirectory.\n stage1: force\n-\tif [ -d stage1 ] ; then true ; else mkdir stage1 ; fi\n+\t-if [ -d stage1 ] ; then true ; else mkdir stage1 ; fi\n \t-mv $(STAGESTUFF) stage1\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage1/libgcc.a; else true; fi\n \n stage2: force\n-\tif [ -d stage2 ] ; then true ; else mkdir stage2 ; fi\n+\t-if [ -d stage2 ] ; then true ; else mkdir stage2 ; fi\n \t-mv $(STAGESTUFF) stage2\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2"}, {"sha": "addeec935e64b8a1bb931e01f6cae428c8908e1e", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 41, "deletions": 59, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e494f7040442b498ff3089c8ae76171d966d578/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e494f7040442b498ff3089c8ae76171d966d578/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=2e494f7040442b498ff3089c8ae76171d966d578", "patch": "@@ -53,9 +53,11 @@ extern time_t time ();\n #else\n #include <strings.h>\n #define strrchr rindex\n-#define getcwd(s,len) getwd(s)\n #endif\n \n+char *getpwd ();\n+\n+\n /* IMPORTANT NOTE: Please see the file README.DWARF for important details\n    regarding the GNU implementation of Dwarf.  */\n \n@@ -305,22 +307,22 @@ static unsigned lookup_filename ();\n    what is expected by \"standard\" AT&T System V.4 assemblers.  */\n \n #ifndef FILE_ASM_OP\n-#define FILE_ASM_OP\t\t\"\\t.file\"\n+#define FILE_ASM_OP\t\t\".file\"\n #endif\n #ifndef VERSION_ASM_OP\n-#define VERSION_ASM_OP\t\t\"\\t.version\"\n+#define VERSION_ASM_OP\t\t\".version\"\n #endif\n #ifndef SECTION_ASM_OP\n-#define SECTION_ASM_OP\t\t\"\\t.section\"\n+#define SECTION_ASM_OP\t\t\".section\"\n #endif\n #ifndef UNALIGNED_SHORT_ASM_OP\n-#define UNALIGNED_SHORT_ASM_OP\t\"\\t.2byte\"\n+#define UNALIGNED_SHORT_ASM_OP\t\".2byte\"\n #endif\n #ifndef UNALIGNED_INT_ASM_OP\n-#define UNALIGNED_INT_ASM_OP\t\"\\t.4byte\"\n+#define UNALIGNED_INT_ASM_OP\t\".4byte\"\n #endif\n #ifndef DEF_ASM_OP\n-#define DEF_ASM_OP\t\t\"\\t.set\"\n+#define DEF_ASM_OP\t\t\".set\"\n #endif\n \n /* This macro is already used elsewhere and has a published default.  */\n@@ -484,12 +486,12 @@ static unsigned lookup_filename ();\n \n #ifndef ASM_OUTPUT_SOURCE_FILENAME\n #define ASM_OUTPUT_SOURCE_FILENAME(FILE,NAME) \\\n-  fprintf ((FILE), \"%s\\t\\\"%s\\\"\\n\", FILE_ASM_OP, NAME)\n+  fprintf ((FILE), \"\\t%s\\t\\\"%s\\\"\\n\", FILE_ASM_OP, NAME)\n #endif\n \n #ifndef ASM_OUTPUT_DEF\n #define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n- do {\tfprintf ((FILE), \"%s\\t\", DEF_ASM_OP);\t\t\t\t\\\n+ do {\tfprintf ((FILE), \"\\t%s\\t\", DEF_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n \tfprintf (FILE, \",\");\t\t\t\t\t\t\\\n \tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n@@ -569,7 +571,7 @@ static unsigned lookup_filename ();\n \n #ifndef ASM_OUTPUT_DWARF_DELTA2\n #define ASM_OUTPUT_DWARF_DELTA2(FILE,LABEL1,LABEL2)\t\t\t\\\n- do {\tfprintf ((FILE), \"%s\\t\", UNALIGNED_SHORT_ASM_OP);\t\t\\\n+ do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_SHORT_ASM_OP);\t\t\\\n \tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n \tfprintf (FILE, \"-\");\t\t\t\t\t\t\\\n \tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n@@ -579,7 +581,7 @@ static unsigned lookup_filename ();\n \n #ifndef ASM_OUTPUT_DWARF_DELTA4\n #define ASM_OUTPUT_DWARF_DELTA4(FILE,LABEL1,LABEL2)\t\t\t\\\n- do {\tfprintf ((FILE), \"%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\t\\\n+ do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\\\n \tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n \tfprintf (FILE, \"-\");\t\t\t\t\t\t\\\n \tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n@@ -589,13 +591,13 @@ static unsigned lookup_filename ();\n \n #ifndef ASM_OUTPUT_DWARF_TAG\n #define ASM_OUTPUT_DWARF_TAG(FILE,TAG)\t\t\t\t\t\\\n-  fprintf ((FILE), \"%s\\t0x%x\\t%s %s\\n\", UNALIGNED_SHORT_ASM_OP,\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t0x%x\\t%s %s\\n\", UNALIGNED_SHORT_ASM_OP,\t\\\n \t(unsigned) TAG, ASM_COMMENT_START, tag_name (TAG))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_ATTRIBUTE\n #define ASM_OUTPUT_DWARF_ATTRIBUTE(FILE,ATTRIBUTE)\t\t\t\\\n-  fprintf ((FILE), \"%s\\t0x%x\\t%s %s\\n\", UNALIGNED_SHORT_ASM_OP,\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t0x%x\\t%s %s\\n\", UNALIGNED_SHORT_ASM_OP,\t\\\n \t(unsigned) ATTRIBUTE, ASM_COMMENT_START, attribute_name (ATTRIBUTE))\n #endif\n \n@@ -607,7 +609,7 @@ static unsigned lookup_filename ();\n \n #ifndef ASM_OUTPUT_DWARF_FUND_TYPE\n #define ASM_OUTPUT_DWARF_FUND_TYPE(FILE,FT)\t\t\t\t\\\n-  fprintf ((FILE), \"%s\\t0x%x\\t%s %s\\n\", UNALIGNED_SHORT_ASM_OP,\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t0x%x\\t%s %s\\n\", UNALIGNED_SHORT_ASM_OP,\t\\\n \t(unsigned) FT, ASM_COMMENT_START, fundamental_type_name (FT))\n #endif\n \n@@ -625,22 +627,22 @@ static unsigned lookup_filename ();\n \f\n #ifndef ASM_OUTPUT_DWARF_ADDR\n #define ASM_OUTPUT_DWARF_ADDR(FILE,LABEL)\t\t\t\t\\\n- do {\tfprintf ((FILE), \"%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\t\\\n+ do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\\\n \tassemble_name (FILE, LABEL);\t\t\t\t\t\\\n \tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_ADDR_CONST\n #define ASM_OUTPUT_DWARF_ADDR_CONST(FILE,RTX)\t\t\t\t\\\n-  fprintf ((FILE), \"%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\t\\\n   output_addr_const ((FILE), (RTX));\t\t\t\t\t\\\n   fputc ('\\n', (FILE))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_REF\n #define ASM_OUTPUT_DWARF_REF(FILE,LABEL)\t\t\t\t\\\n- do {\tfprintf ((FILE), \"%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\t\\\n+ do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\\\n \tassemble_name (FILE, LABEL);\t\t\t\t\t\\\n \tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -653,26 +655,26 @@ static unsigned lookup_filename ();\n \n #ifndef ASM_OUTPUT_DWARF_DATA2\n #define ASM_OUTPUT_DWARF_DATA2(FILE,VALUE) \\\n-  fprintf ((FILE), \"%s\\t0x%x\\n\", UNALIGNED_SHORT_ASM_OP, (unsigned) VALUE)\n+  fprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_SHORT_ASM_OP, (unsigned) VALUE)\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_DATA4\n #define ASM_OUTPUT_DWARF_DATA4(FILE,VALUE) \\\n-  fprintf ((FILE), \"%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, (unsigned) VALUE)\n+  fprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, (unsigned) VALUE)\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_DATA8\n #define ASM_OUTPUT_DWARF_DATA8(FILE,HIGH_VALUE,LOW_VALUE)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (WORDS_BIG_ENDIAN)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n-\tfprintf ((FILE), \"%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n+\tfprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n+\tfprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n-\tfprintf ((FILE), \"%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n+\tfprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n+\tfprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n #endif\n@@ -1388,7 +1390,7 @@ location_attribute (rtl)\n   ASM_OUTPUT_LABEL (asm_out_file, begin_label);\n \n   /* Handle a special case.  If we are about to output a location descriptor\n-     for a variable or parameter which has been optimized out of existance,\n+     for a variable or parameter which has been optimized out of existence,\n      don't do that.  Instead we output a zero-length location descriptor\n      value as part of the location attribute.  Note that we cannot simply\n      suppress the entire location attribute, because the absence of a\n@@ -1555,15 +1557,16 @@ location_or_const_value_attribute (decl)\n      with a means to describe that location also, but for now we can only\n      describe the \"passing\" location.  */\n \n-#if 0 /* This is probably right, but it leads to a lot of trouble.\n+#if 1 /* This is probably right, but it leads to a lot of trouble.\n \t Fixing one problem has been exposing another,\n \t all of which seemed to have no ill effects before.\n-\t Better to turn this off for now and try fix it later.  */\n+\t Let's try it again for now.  */\n   rtl = (TREE_CODE (decl) == PARM_DECL)\n \t ? DECL_INCOMING_RTL (decl)\n \t : DECL_RTL (decl);\n-#endif\n+#else\n   rtl = DECL_RTL (decl);\n+#endif\n \n   if (rtl == NULL)\n     return;\n@@ -2581,22 +2584,9 @@ output_compile_unit_die (arg)\n   last_filename = xstrdup (main_input_filename);\n \n   {\n-    register unsigned len = 1024;\n-    register char *dirname = (char *) xmalloc (len + 1);\n-\n-    /* We don't know how much space the dirname needs,\n-       so try bigger and bigger buffers until it fits.  */\n-    while (1)\n-      {\n-\tgetcwd (dirname, len);\t/* Being conservative here. */\n-\tif (strlen (dirname) < len - 1)\t/* Being conservative here. */\n-\t  break;\n-\tlen *= 2;\n-\tdirname = (char *) xrealloc (dirname, len + 1);\n-      }\n-\n-    comp_dir_attribute (dirname);\n-    free (dirname);\n+    char *wd = getpwd ();\n+    if (wd)\n+      comp_dir_attribute (wd);\n   }\n \n   if (debug_info_level >= DINFO_LEVEL_NORMAL)\n@@ -3440,7 +3430,7 @@ output_decl (decl, containing_scope)\n \t        register tree parm;\n \n \t\t/* WARNING!  Kludge zone ahead!  Here we have a special\n-\t\t   hack for svr4 SDB compatability.  Instead of passing the\n+\t\t   hack for svr4 SDB compatibility.  Instead of passing the\n \t\t   current FUNCTION_DECL node as the second parameter (i.e.\n \t\t   the `containing_scope' parameter) to `output_decl' (as\n \t\t   we ought to) we instead pass a pointer to our own private\n@@ -4062,7 +4052,7 @@ dwarfout_line (filename, line)\n           filename = tail;\n       }\n \n-      fprintf (asm_out_file, \"%s\\t%u\\t%s %s:%u\\n\",\n+      fprintf (asm_out_file, \"\\t%s\\t%u\\t%s %s:%u\\n\",\n \t       UNALIGNED_INT_ASM_OP, line, ASM_COMMENT_START,\n \t       filename, line);\n       ASM_OUTPUT_DWARF_DATA2 (asm_out_file, 0xffff);\n@@ -4084,7 +4074,7 @@ generate_macinfo_entry (type_and_offset, string)\n {\n   fputc ('\\n', asm_out_file);\n   ASM_DWARF_MACINFO_SECTION (asm_out_file);\n-  fprintf (asm_out_file, \"%s\\t%s\\n\", UNALIGNED_INT_ASM_OP, type_and_offset);\n+  fprintf (asm_out_file, \"\\t%s\\t%s\\n\", UNALIGNED_INT_ASM_OP, type_and_offset);\n   ASM_OUTPUT_DWARF_STRING (asm_out_file, string);\n   ASM_DWARF_POP_SECTION (asm_out_file);\n }\n@@ -4245,20 +4235,12 @@ dwarfout_init (asm_out_file, main_input_filename)\n       ASM_DWARF_SFNAMES_SECTION (asm_out_file);\n       ASM_OUTPUT_LABEL (asm_out_file, SFNAMES_BEGIN_LABEL);\n       {\n-\tregister unsigned len = 1024;\n-\tregister char *dirname = (char *) xmalloc (len + 1);\n+\tregister char *pwd = getpwd ();\n+\tregister unsigned len = strlen (pwd);\n+\tregister char *dirname = (char *) xmalloc (len + 2);\n     \n-\t/* We don't know how much space the dirname needs,\n-\t   so try bigger and bigger buffers until it fits.  */\n-\tfor (;;)\n-\t  {\n-\t    getcwd (dirname, len);\t/* Being conservative here. */\n-\t    if (strlen (dirname) < len - 1)\t/* Being conservative here. */\n-\t      break;\n-\t    len *= 2;\n-\t    dirname = (char *) xrealloc (dirname, len + 1);\n-\t  }\n-\tstrcat (dirname, \"/\");\n+\tstrcpy (dirname, pwd);\n+\tstrcpy (dirname + len, \"/\");\n         ASM_OUTPUT_DWARF_STRING (asm_out_file, dirname);\n         free (dirname);\n       }"}, {"sha": "f8d9d863f187e5f92c31abb7e60013169fcf985e", "filename": "gcc/protoize.c", "status": "modified", "additions": 6, "deletions": 50, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e494f7040442b498ff3089c8ae76171d966d578/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e494f7040442b498ff3089c8ae76171d966d578/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=2e494f7040442b498ff3089c8ae76171d966d578", "patch": "@@ -68,27 +68,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"gvarargs.h\"\n #include \"getopt.h\"\n \n-#ifndef PATH_MAX\t/* <limits.h> defines this on most POSIX systems.  */\n-#include <sys/param.h>\n-/* Sometimes <sys/param.h> defines these macros.  */\n-#undef CHAR_BIT\n-#undef CHAR_MAX\n-#undef CHAR_MIN\n-#undef CLK_TCK\n-#undef INT_MAX\n-#undef INT_MIN\n-#undef LONG_MAX\n-#undef LONG_MIN\n-#undef SCHAR_MAX\n-#undef SCHAR_MIN\n-#undef SHRT_MAX\n-#undef SHRT_MIN\n-#undef UCHAR_MAX\n-#undef UINT_MAX\n-#undef ULONG_MAX\n-#undef USHRT_MAX\n-#endif\n-\n extern int errno;\n extern char *sys_errlist[];\n extern char *version_string;\n@@ -108,12 +87,7 @@ extern char *version_string;\n #define my_open(file, mode, flag)\topen((char *)file, mode, flag)\n #define my_chmod(file, mode)\tchmod((char *)file, mode)\n \n-#if !(defined (USG) || defined (VMS) || defined (POSIX))\n-#define GUESSPATHLEN (MAXPATHLEN + 1)\n-#else /* (defined (USG) || defined (VMS) || defined (POSIX)) */\n-/* We actually use this as a starting point, not a limit.  */\n-#define GUESSPATHLEN 200\n-#endif /* (defined (USG) || defined (VMS) || defined (POSIX)) */\n+char *getpwd ();\n \n /* Aliases for pointers to void.\n    These were made to facilitate compilation with other compilers.  */\n@@ -144,17 +118,6 @@ typedef char * const_pointer_type;\n #define O_RDONLY        0\n #define O_WRONLY        1\n \n-/* Virtually every UN*X system now in common use (except for pre-4.3-tahoe\n-   BSD systems) now provides getcwd as called for by POSIX.  Allow for\n-   the few exceptions to the general rule here.  */\n-\n-#if !(defined (USG) || defined (VMS))\n-extern char *getwd ();\n-#define getcwd(buf,len) getwd(buf)\n-#else /* (defined (USG) || defined (VMS)) */\n-extern char *getcwd ();\n-#endif /* (defined (USG) || defined (VMS)) */\n-\n /* Declaring stat or __flsbuf with a prototype\n    causes conflicts with system headers on some systems.  */\n \n@@ -4403,23 +4366,16 @@ main (argc, argv)\n {\n   int longind;\n   int c;\n-  int size;\n \n   pname = strrchr (argv[0], '/');\n   pname = pname ? pname+1 : argv[0];\n \n-  /* Read the working directory, avoiding arbitrary limit.  */\n-  size = GUESSPATHLEN;\n-  while (1)\n+  cwd_buffer = getpwd ();\n+  if (!cwd_buffer)\n     {\n-      char *value;\n-\n-      cwd_buffer = (char *) xmalloc (size);\n-      value = getcwd (cwd_buffer, size);\n-      if (value != 0 || errno != ERANGE)\n-\tbreak;\n-      free (cwd_buffer);\n-      size *= 2;\n+      fprintf (stderr, \"%s: cannot get working directory: %s\\n\",\n+\t       pname, sys_errlist[errno]);\n+      exit (1);\n     }\n \n   /* By default, convert the files in the current directory.  */"}]}