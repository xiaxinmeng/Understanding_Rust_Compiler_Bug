{"sha": "9b922d6aaf143d35ed5f1c116f0a0702df6ae04c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI5MjJkNmFhZjE0M2QzNWVkNWYxYzExNmYwYTA3MDJkZjZhZTA0Yw==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2018-04-20T19:03:19Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-04-20T19:03:19Z"}, "message": "RISC-V: Make sure stack is always aligned during adjusting stack.\n\n\tgcc/\n\t2018-04-20  Kito Cheng  <kito.cheng@gmail.com>\n\t* config/riscv/riscv.c (riscv_first_stack_step): Round up min\n\tstep to make sure stack always aligned.\n\nFrom-SVN: r259530", "tree": {"sha": "0deab27d2559fe9d125641262739cbdc4706f373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0deab27d2559fe9d125641262739cbdc4706f373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b593a195f96010854466ecf46c00c8b0e31bd4a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b593a195f96010854466ecf46c00c8b0e31bd4a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b593a195f96010854466ecf46c00c8b0e31bd4a8"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "d25e3e30a68aa910ec9828c74ee53486f9bc86d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b922d6aaf143d35ed5f1c116f0a0702df6ae04c", "patch": "@@ -1,3 +1,8 @@\n+2018-04-20  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* config/riscv/riscv.c (riscv_first_stack_step): Round up min\n+\tstep to make sure stack always aligned.\n+\n 2018-04-20  Carl Love  <cel@us.ibm.com>\n \n         PR target/83402"}, {"sha": "2a8f87d1e9447402d5da1c709d52b84ebf306295", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b922d6aaf143d35ed5f1c116f0a0702df6ae04c/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=9b922d6aaf143d35ed5f1c116f0a0702df6ae04c", "patch": "@@ -3507,7 +3507,8 @@ riscv_first_stack_step (struct riscv_frame_info *frame)\n   if (SMALL_OPERAND (frame->total_size))\n     return frame->total_size;\n \n-  HOST_WIDE_INT min_first_step = frame->total_size - frame->fp_sp_offset;\n+  HOST_WIDE_INT min_first_step =\n+    RISCV_STACK_ALIGN (frame->total_size - frame->fp_sp_offset);\n   HOST_WIDE_INT max_first_step = IMM_REACH / 2 - PREFERRED_STACK_BOUNDARY / 8;\n   HOST_WIDE_INT min_second_step = frame->total_size - max_first_step;\n   gcc_assert (min_first_step <= max_first_step);"}]}