{"sha": "dbedefae43f712ee9f0636585bb1f91793c088d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJlZGVmYWU0M2Y3MTJlZTlmMDYzNjU4NWJiMWY5MTc5M2MwODhkMA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-12-18T14:38:44Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-12-18T14:38:44Z"}, "message": "re PR middle-end/18548 (Miscompiles code generated by Gambit-C Scheme->C compiler)\n\n\n\tPR middle-end/18548\n\t* expr.c (expand_expr_real_1) <MAX_EXPR>: Ensure that target, op0\n\tand op1 are all registers (or constants) before expanding the RTL\n\tcomparison sequence [to avoid reg_overlap_mentioned (target, op1)].\n\n\t* gcc.dg/max-1.c: New test case.\n\nFrom-SVN: r92351", "tree": {"sha": "776e691726aa4aa33b620c01f8751ea3f6edd1ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/776e691726aa4aa33b620c01f8751ea3f6edd1ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbedefae43f712ee9f0636585bb1f91793c088d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbedefae43f712ee9f0636585bb1f91793c088d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbedefae43f712ee9f0636585bb1f91793c088d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbedefae43f712ee9f0636585bb1f91793c088d0/comments", "author": null, "committer": null, "parents": [{"sha": "9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "024e48bbcef2630caaaf1da3714dd2f493d7eb67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbedefae43f712ee9f0636585bb1f91793c088d0", "patch": "@@ -1,3 +1,10 @@\n+2004-12-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/18548\n+\t* expr.c (expand_expr_real_1) <MAX_EXPR>: Ensure that target, op0\n+\tand op1 are all registers (or constants) before expanding the RTL\n+\tcomparison sequence [to avoid reg_overlap_mentioned (target, op1)].\n+\n 2004-12-18  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR rtl-optimization/16968"}, {"sha": "2581c150dba95a76c6f30012e25e5ff2250da4e3", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=dbedefae43f712ee9f0636585bb1f91793c088d0", "patch": "@@ -7671,7 +7671,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       /* At this point, a MEM target is no longer useful; we will get better\n \t code without it.  */\n \n-      if (MEM_P (target))\n+      if (! REG_P (target))\n \ttarget = gen_reg_rtx (mode);\n \n       /* If op1 was placed in target, swap op0 and op1.  */\n@@ -7682,6 +7682,11 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t  op1 = tem;\n \t}\n \n+      /* We generate better code and avoid problems with op1 mentioning\n+\t target by forcing op1 into a pseudo if it isn't a constant.  */\n+      if (! CONSTANT_P (op1))\n+\top1 = force_reg (mode, op1);\n+\n       if (target != op0)\n \temit_move_insn (target, op0);\n "}, {"sha": "5380e992ee322149e0c9934abb2cd1c62cb09b96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbedefae43f712ee9f0636585bb1f91793c088d0", "patch": "@@ -1,3 +1,8 @@\n+2004-12-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/18548\n+\t* gcc.dg/max-1.c: New test case.\n+\n 2004-12-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/20041218-1.c: New test."}, {"sha": "7f03edc590d4898edef314bd9a8c0a7343c9fcfd", "filename": "gcc/testsuite/gcc.dg/max-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2Ftestsuite%2Fgcc.dg%2Fmax-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbedefae43f712ee9f0636585bb1f91793c088d0/gcc%2Ftestsuite%2Fgcc.dg%2Fmax-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmax-1.c?ref=dbedefae43f712ee9f0636585bb1f91793c088d0", "patch": "@@ -0,0 +1,33 @@\n+/* PR middle-end/18548 */\n+/* Test case reduced by Andrew Pinski <pinskia@physics.uc.edu> */\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -fno-tree-lrs\" } */\n+\n+extern void abort (void);\n+\n+long fff[10];\n+\n+void f(long a, long b)\n+{\n+  long crcc = b;\n+  long d = *((long*)(a+1));\n+  int i;\n+\n+  a = d >= b? d:b;\n+\n+\n+  for(i=0;i<10;i++)\n+   fff[i] = a;\n+}\n+\n+int main(void)\n+{\n+  int i;\n+  long a = 10;\n+  f((long)(&a)-1,0);\n+  for(i = 0;i<10;i++)\n+   if (fff[i]!=10)\n+    abort ();\n+  return 0;\n+}\n+"}]}