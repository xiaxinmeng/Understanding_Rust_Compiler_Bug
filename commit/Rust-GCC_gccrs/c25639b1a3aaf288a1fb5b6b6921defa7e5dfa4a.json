{"sha": "c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1NjM5YjFhM2FhZjI4OGExZmI1YjZiNjkyMWRlZmE3ZTVkZmE0YQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-11-15T01:38:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-11-15T01:38:17Z"}, "message": "re PR libstdc++/53841 ([C++11] condition_variable::wait_until() fails with high resolution clocks)\n\n\tPR libstdc++/53841\n\t* include/std/condition_variable (condition_variable::wait_until):\n\tHandle clocks with higher resolution than __clock_t.\n\t(condition_variable::__wait_until_impl): Remove unnecessary _Clock\n\tparameter.\n\t* testsuite/30_threads/condition_variable/members/53841.cc: New.\n\nFrom-SVN: r193523", "tree": {"sha": "4780aad5258398b7b89f3321c56865562adab2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4780aad5258398b7b89f3321c56865562adab2f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2b4cacb93fbc4962d1f82d377af6e68def21a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2b4cacb93fbc4962d1f82d377af6e68def21a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2b4cacb93fbc4962d1f82d377af6e68def21a9"}], "stats": {"total": 78, "additions": 67, "deletions": 11}, "files": [{"sha": "a75e97a01662bc3cf6b5cfaae905f733cf49e3c2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "patch": "@@ -1,3 +1,12 @@\n+2012-11-15  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/53841\n+\t* include/std/condition_variable (condition_variable::wait_until):\n+\tHandle clocks with higher resolution than __clock_t.\n+\t(condition_variable::__wait_until_impl): Remove unnecessary _Clock\n+\tparameter.\n+\t* testsuite/30_threads/condition_variable/members/53841.cc: New.\n+\n 2012-11-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/55320"}, {"sha": "7d3d62250556357e4378d209e9ec2db68097d859", "filename": "libstdc++-v3/include/std/condition_variable", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable?ref=c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "patch": "@@ -1,6 +1,6 @@\n // <condition_variable> -*- C++ -*-\n \n-// Copyright (C) 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n+// Copyright (C) 2008-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -107,8 +107,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t// DR 887 - Sync unknown clock to known clock.\n \tconst typename _Clock::time_point __c_entry = _Clock::now();\n \tconst __clock_t::time_point __s_entry = __clock_t::now();\n-\tconst chrono::nanoseconds __delta = __atime - __c_entry;\n-\tconst __clock_t::time_point __s_atime = __s_entry + __delta;\n+\tconst auto __delta = __atime - __c_entry;\n+\tconst auto __s_atime = __s_entry + __delta;\n \n \treturn __wait_until_impl(__lock, __s_atime);\n       }\n@@ -143,16 +143,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return &_M_cond; }\n \n   private:\n-    template<typename _Clock, typename _Duration>\n+    template<typename _Dur>\n       cv_status\n       __wait_until_impl(unique_lock<mutex>& __lock,\n-\t\t\tconst chrono::time_point<_Clock, _Duration>& __atime)\n+\t\t\tconst chrono::time_point<__clock_t, _Dur>& __atime)\n       {\n-\tchrono::time_point<__clock_t, chrono::seconds> __s =\n-\t  chrono::time_point_cast<chrono::seconds>(__atime);\n-\n-\tchrono::nanoseconds __ns =\n-\t  chrono::duration_cast<chrono::nanoseconds>(__atime - __s);\n+\tauto __s = chrono::time_point_cast<chrono::seconds>(__atime);\n+\tauto __ns = chrono::duration_cast<chrono::nanoseconds>(__atime - __s);\n \n \t__gthread_time_t __ts =\n \t  {\n@@ -163,7 +160,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__gthread_cond_timedwait(&_M_cond, __lock.mutex()->native_handle(),\n \t\t\t\t &__ts);\n \n-\treturn (_Clock::now() < __atime\n+\treturn (__clock_t::now() < __atime\n \t\t? cv_status::no_timeout : cv_status::timeout);\n       }\n   };"}, {"sha": "62e44a6179b24bedd8511f44e3c798366f18c12d", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/members/53841.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F53841.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F53841.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F53841.cc?ref=c25639b1a3aaf288a1fb5b6b6921defa7e5dfa4a", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/53841\n+\n+#include <chrono>\n+#include <mutex>\n+#include <condition_variable>\n+\n+namespace ch = std::chrono;\n+\n+struct FPClock : ch::system_clock\n+{\n+    typedef double rep;\n+    typedef std::ratio<1> period;\n+    typedef ch::duration<rep, period> duration;\n+    typedef ch::time_point<FPClock> time_point;\n+\n+    static time_point now()\n+    { return time_point(duration(system_clock::now().time_since_epoch())); }\n+};\n+\n+void f()\n+{\n+    std::mutex mx;\n+    std::unique_lock<std::mutex> l(mx);\n+    std::condition_variable cv;\n+    cv.wait_until(l, FPClock::now());\n+}"}]}