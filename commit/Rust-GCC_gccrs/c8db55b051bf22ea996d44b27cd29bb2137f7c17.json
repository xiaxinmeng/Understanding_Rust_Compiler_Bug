{"sha": "c8db55b051bf22ea996d44b27cd29bb2137f7c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkYjU1YjA1MWJmMjJlYTk5NmQ0NGIyN2NkMjliYjIxMzdmN2MxNw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "1998-06-03T01:56:57Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "1998-06-03T01:56:57Z"}, "message": "configure.in: Set float_format to m68k for all m68k targets that do not override...\n\n\t* configure.in: Set float_format to m68k for all m68k targets that\n\tdo not override LONG_DOUBLE_TYPE_SIZE.\n\t* config/float-m68k.h: New file.\n\nFrom-SVN: r20205", "tree": {"sha": "821ba2ce63ce810b6d0267f82881cea5f4bc1e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/821ba2ce63ce810b6d0267f82881cea5f4bc1e82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8db55b051bf22ea996d44b27cd29bb2137f7c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8db55b051bf22ea996d44b27cd29bb2137f7c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8db55b051bf22ea996d44b27cd29bb2137f7c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8db55b051bf22ea996d44b27cd29bb2137f7c17/comments", "author": null, "committer": null, "parents": [{"sha": "474c7687e0ceae6f1339ee12bcfa54d2b092553b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474c7687e0ceae6f1339ee12bcfa54d2b092553b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474c7687e0ceae6f1339ee12bcfa54d2b092553b"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "b36d447cb87782e1ba583fc07ecbd589a5a7357f", "filename": "gcc/config/float-m68k.h", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8db55b051bf22ea996d44b27cd29bb2137f7c17/gcc%2Fconfig%2Ffloat-m68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8db55b051bf22ea996d44b27cd29bb2137f7c17/gcc%2Fconfig%2Ffloat-m68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-m68k.h?ref=c8db55b051bf22ea996d44b27cd29bb2137f7c17", "patch": "@@ -0,0 +1,97 @@\n+/* float.h for target with IEEE 32 bit and 64 bit and Motorola style 96 bit\n+   floating point formats */\n+#ifndef _FLOAT_H_\n+#define _FLOAT_H_\n+/* Produced by enquire version 4.3, CWI, Amsterdam */\n+\n+   /* Radix of exponent representation */\n+#undef FLT_RADIX\n+#define FLT_RADIX 2\n+   /* Number of base-FLT_RADIX digits in the significand of a float */\n+#undef FLT_MANT_DIG\n+#define FLT_MANT_DIG 24\n+   /* Number of decimal digits of precision in a float */\n+#undef FLT_DIG\n+#define FLT_DIG 6\n+   /* Addition rounds to 0: zero, 1: nearest, 2: +inf, 3: -inf, -1: unknown */\n+#undef FLT_ROUNDS\n+#define FLT_ROUNDS 1\n+   /* Difference between 1.0 and the minimum float greater than 1.0 */\n+#undef FLT_EPSILON\n+#define FLT_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised float */\n+#undef FLT_MIN_EXP\n+#define FLT_MIN_EXP (-125)\n+   /* Minimum normalised float */\n+#undef FLT_MIN\n+#define FLT_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised float */\n+#undef FLT_MIN_10_EXP\n+#define FLT_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable float */\n+#undef FLT_MAX_EXP\n+#define FLT_MAX_EXP 128\n+   /* Maximum float */\n+#undef FLT_MAX\n+#define FLT_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable float */\n+#undef FLT_MAX_10_EXP\n+#define FLT_MAX_10_EXP 38\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 15\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 2.2204460492503131e-16\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-1021)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 2.2250738585072014e-308\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-307)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 1024\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 1.7976931348623157e+308\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 308\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 64\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 18\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 1.08420217248550443401e-19L\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-16382)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 1.68105157155604675313e-4932L\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-4931)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 16384\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 1.18973149535723176502e+4932L\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 4932\n+\n+#endif /*  _FLOAT_H_ */"}, {"sha": "d79c4dd0f82b200ad6c9f31610ff42af5702d214", "filename": "gcc/configure.in", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8db55b051bf22ea996d44b27cd29bb2137f7c17/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8db55b051bf22ea996d44b27cd29bb2137f7c17/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=c8db55b051bf22ea996d44b27cd29bb2137f7c17", "patch": "@@ -1304,12 +1304,14 @@ for machine in $build $host $target; do\n \t\t\ttm_file=\"${tm_file} m68k/auxas.h\"\n \t\tfi\n \t\ttm_file=\"${tm_file} m68k/a-ux.h\"\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-apollo-*)\n \t\ttm_file=m68k/apollo68.h\n \t\txmake_file=m68k/x-apollo68\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-altos-sysv*)\t\t   # Altos 3068\n \t\tif [[ x$gas = xyes ]]\n@@ -1347,6 +1349,7 @@ for machine in $build $host $target; do\n \t\ttmake_file=t-svr4\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-motorola-sysv*)\n \t\ttm_file=m68k/mot3300.h\n@@ -1375,6 +1378,7 @@ for machine in $build $host $target; do\n \t\tgdb_needs_out_file_path=yes\n \t\textra_parts=\"crt0.o mcrt0.o\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-ncr-sysv*)\t\t\t# NCR Tower 32 SVR3\n \t\ttm_file=m68k/tower-as.h\n@@ -1412,30 +1416,35 @@ for machine in $build $host $target; do\n \t\ttmake_file=t-svr4\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-ccur-rtu)\n \t\ttm_file=m68k/ccur-GAS.h\n \t\txmake_file=m68k/x-ccur\n \t\textra_headers=math-68881.h\n \t\tuse_collect2=yes\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-hp-bsd4.4*)\t\t# HP 9000/3xx running 4.4bsd\n \t\ttm_file=m68k/hp3bsd44.h\n \t\txmake_file=m68k/x-hp3bsd44\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-hp-bsd*)\t\t\t# HP 9000/3xx running Berkeley Unix\n \t\ttm_file=m68k/hp3bsd.h\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-isi-bsd*)\n \t\tif [[ x$with_fp = xno ]]\n \t\tthen\n \t\t\ttm_file=m68k/isi-nfp.h\n \t\telse\n \t\t\ttm_file=m68k/isi.h\n+\t\t\tfloat_format=m68k\n \t\tfi\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n@@ -1454,6 +1463,7 @@ for machine in $build $host $target; do\n \t\tinstall_headers_dir=install-headers-cpio\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-hp-hpux*)\t# HP 9000 series 300\n \t\txm_file=\"xm_alloca.h ${xm_file}\"\n@@ -1469,11 +1479,13 @@ for machine in $build $host $target; do\n \t\tinstall_headers_dir=install-headers-cpio\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-sun-mach*)\n \t\ttm_file=m68k/sun3mach.h\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-sony-newsos3*)\n \t\tif [[ x$gas = xyes ]]\n@@ -1484,6 +1496,7 @@ for machine in $build $host $target; do\n \t\tfi\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-sony-bsd* | m68k-sony-newsos*)\n \t\tif [[ x$gas = xyes ]]\n@@ -1494,6 +1507,7 @@ for machine in $build $host $target; do\n \t\tfi\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-next-nextstep2*)\n \t\ttm_file=m68k/next21.h\n@@ -1503,6 +1517,7 @@ for machine in $build $host $target; do\n \t\textra_objs=nextstep.o\n \t\textra_headers=math-68881.h\n \t\tuse_collect2=yes\n+\t\tfloat_format=m68k\n                 ;;\n \tm68k-next-nextstep3*)\n \t\ttm_file=m68k/next.h\n@@ -1511,6 +1526,7 @@ for machine in $build $host $target; do\n \t\txmake_file=m68k/x-next\n \t\textra_objs=nextstep.o\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n  \t\tif [[ x$enable_threads = xyes ]]; then\n \t\t\tthread_file='mach'\n \t\tfi\n@@ -1521,6 +1537,7 @@ for machine in $build $host $target; do\n \t\t\ttm_file=m68k/sun3n3.h\n \t\telse\n \t\t\ttm_file=m68k/sun3o3.h\n+\t\t\tfloat_format=m68k\n \t\tfi\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n@@ -1531,6 +1548,7 @@ for machine in $build $host $target; do\n \t\t\ttm_file=m68k/sun3n.h\n \t\telse\n \t\t\ttm_file=m68k/sun3.h\n+\t\t\tfloat_format=m68k\n \t\tfi\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n@@ -1540,16 +1558,19 @@ for machine in $build $host $target; do\n \t\ttmake_file=m68k/t-vxworks68\n \t\textra_headers=math-68881.h\n \t\tthread_file='vxworks'\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-aout*)\n \t\ttmake_file=m68k/t-m68kbare\n \t\ttm_file=\"m68k/m68k-aout.h libgloss.h\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-coff*)\n \t\ttmake_file=m68k/t-m68kbare\n \t\ttm_file=\"m68k/m68k-coff.h dbx.h libgloss.h\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-lynxos*)\n \t\tif [[ x$gas = xyes ]]\n@@ -1562,19 +1583,22 @@ for machine in $build $host $target; do\n \t\txmake_file=x-lynx\n \t\ttmake_file=m68k/t-lynx\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.wrap\n \t\ttmake_file=t-netbsd\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-sysv3*)\t\t\t# Motorola m68k's running system V.3\n \t\txm_file=\"xm-alloca.h ${xm_file}\"\n \t\txm_defines=USG\n \t\txmake_file=m68k/x-m68kv\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-sysv4*)\t\t\t# Motorola m68k's running system V.4\n \t\ttm_file=m68k/m68kv4.h\n@@ -1583,6 +1607,7 @@ for machine in $build $host $target; do\n \t\ttmake_file=t-svr4\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-linux-gnuaout*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t\t# with a.out format\n@@ -1591,6 +1616,7 @@ for machine in $build $host $target; do\n \t\ttmake_file=\"t-linux-aout m68k/t-linux-aout\"\n \t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\tgnu_ld=yes\n \t\t;;\n \tm68k-*-linux-gnulibc1)\t\t# Motorola m68k's running GNU/Linux\n@@ -1602,6 +1628,7 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\tgnu_ld=yes\n \t\t;;\n \tm68k-*-linux-gnu*)\t\t# Motorola m68k's running GNU/Linux\n@@ -1613,6 +1640,7 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\tgnu_ld=yes\n \t\tif [[ x$enable_threads = xyes ]]; then\n \t\t\tthread_file='posix'\n@@ -1622,11 +1650,13 @@ for machine in $build $host $target; do\n \t\ttmake_file=m68k/t-m68kbare\n \t\ttm_file=m68k/m68k-psos.h\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \tm68k-*-rtems*)\n \t\ttmake_file=\"m68k/t-m68kbare t-rtems\"\n \t\ttm_file=m68k/rtems.h\n \t\textra_headers=math-68881.h\n+\t\tfloat_format=m68k\n \t\t;;\n \n \tm88k-dg-dgux*)"}]}