{"sha": "6ba2db5e3323ac177a1d31cf8e562a1faba5a078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhMmRiNWUzMzIzYWMxNzdhMWQzMWNmOGU1NjJhMWZhYmE1YTA3OA==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2010-08-27T20:32:27Z"}, "committer": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2010-08-27T20:32:27Z"}, "message": "gengtype.c (output_type_enum): Test the right union member.\n\n\n2010-08-27  Basile Starynkevitch  <basile@starynkevitch.net>\n            Jeremie Salvucci  <jeremie.salvucci@free.fr>\n\n        * gengtype.c (output_type_enum): Test the right union member.\n\n\nCo-Authored-By: Jeremie Salvucci <jeremie.salvucci@free.fr>\n\nFrom-SVN: r163596", "tree": {"sha": "8b0438893578e4b9b75e1cac369c2be6051ec18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b0438893578e4b9b75e1cac369c2be6051ec18a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ba2db5e3323ac177a1d31cf8e562a1faba5a078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba2db5e3323ac177a1d31cf8e562a1faba5a078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba2db5e3323ac177a1d31cf8e562a1faba5a078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba2db5e3323ac177a1d31cf8e562a1faba5a078/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0cd0559e8ceb1764a41c8964f30a7de025956e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd0559e8ceb1764a41c8964f30a7de025956e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd0559e8ceb1764a41c8964f30a7de025956e8a"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "3206c38ff82ce0c6e109261966477ec303b37ffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba2db5e3323ac177a1d31cf8e562a1faba5a078/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba2db5e3323ac177a1d31cf8e562a1faba5a078/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ba2db5e3323ac177a1d31cf8e562a1faba5a078", "patch": "@@ -1,3 +1,9 @@\n+\n+2010-08-27  Basile Starynkevitch  <basile@starynkevitch.net>\n+            Jeremie Salvucci  <jeremie.salvucci@free.fr>\n+\n+        * gengtype.c (output_type_enum): Test the right union member.\n+\n 2010-08-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/41484"}, {"sha": "6436a93649a3ef28602b16997678f0bbd8fa95f0", "filename": "gcc/gengtype.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba2db5e3323ac177a1d31cf8e562a1faba5a078/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba2db5e3323ac177a1d31cf8e562a1faba5a078/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=6ba2db5e3323ac177a1d31cf8e562a1faba5a078", "patch": "@@ -2531,7 +2531,7 @@ write_types_process_field (type_p f, const struct walk_type_data *d)\n static void\n output_type_enum (outf_p of, type_p s)\n {\n-  if (s->kind == TYPE_PARAM_STRUCT && s->u.s.line.file != NULL)\n+  if (s->kind == TYPE_PARAM_STRUCT && s->u.param_struct.line.file != NULL)\n     {\n       oprintf (of, \", gt_e_\");\n       output_mangled_typename (of, s);"}]}