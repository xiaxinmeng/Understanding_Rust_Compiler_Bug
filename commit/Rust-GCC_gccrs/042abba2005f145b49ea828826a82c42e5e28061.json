{"sha": "042abba2005f145b49ea828826a82c42e5e28061", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyYWJiYTIwMDVmMTQ1YjQ5ZWE4Mjg4MjZhODJjNDJlNWUyODA2MQ==", "commit": {"author": {"name": "Joakim Tjernlund", "email": "Joakim.Tjernlund@transmode.se", "date": "2010-11-30T01:47:54Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-11-30T01:47:54Z"}, "message": "rs6000.c (rs6000_reg_live_or_pic_offset_p): Check TARGET_SINGLE_PIC_BASE for RS6000_PIC_OFFSET_TABLE_REGNUM.\n\n\t* config/rs6000/rs6000.c (rs6000_reg_live_or_pic_offset_p): Check\n\tTARGET_SINGLE_PIC_BASE for RS6000_PIC_OFFSET_TABLE_REGNUM.\n\t(rs6000_emit_prologue): Don't set PIC register if\n\tTARGET_SINGLE_PIC_BASE.\n\t* config/rs6000/rs6000.opt (msingle-pic-base): New option.\n\t* doc/invoke.texi (msingle-pic-base): Document.\n\nFrom-SVN: r167283", "tree": {"sha": "0f6e2628c28c6d24a344bf20d903b868340d9986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f6e2628c28c6d24a344bf20d903b868340d9986"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/042abba2005f145b49ea828826a82c42e5e28061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042abba2005f145b49ea828826a82c42e5e28061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042abba2005f145b49ea828826a82c42e5e28061", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042abba2005f145b49ea828826a82c42e5e28061/comments", "author": {"login": "joakim-tjernlund", "id": 13720190, "node_id": "MDQ6VXNlcjEzNzIwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/13720190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joakim-tjernlund", "html_url": "https://github.com/joakim-tjernlund", "followers_url": "https://api.github.com/users/joakim-tjernlund/followers", "following_url": "https://api.github.com/users/joakim-tjernlund/following{/other_user}", "gists_url": "https://api.github.com/users/joakim-tjernlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/joakim-tjernlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joakim-tjernlund/subscriptions", "organizations_url": "https://api.github.com/users/joakim-tjernlund/orgs", "repos_url": "https://api.github.com/users/joakim-tjernlund/repos", "events_url": "https://api.github.com/users/joakim-tjernlund/events{/privacy}", "received_events_url": "https://api.github.com/users/joakim-tjernlund/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddac6b7317082c690412f2f7828b6fc6a9bd58b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddac6b7317082c690412f2f7828b6fc6a9bd58b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddac6b7317082c690412f2f7828b6fc6a9bd58b5"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "daf7fa187a06fbd40943b7528ac6de9ae7089550", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042abba2005f145b49ea828826a82c42e5e28061/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042abba2005f145b49ea828826a82c42e5e28061/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=042abba2005f145b49ea828826a82c42e5e28061", "patch": "@@ -1,3 +1,12 @@\n+2010-11-29  Joakim Tjernlund  <Joakim.Tjernlund@transmode.se>\n+\n+\t* config/rs6000/rs6000.c (rs6000_reg_live_or_pic_offset_p): Check\n+\tTARGET_SINGLE_PIC_BASE for RS6000_PIC_OFFSET_TABLE_REGNUM.\n+\t(rs6000_emit_prologue): Don't set PIC register if\n+\tTARGET_SINGLE_PIC_BASE.\n+\t* config/rs6000/rs6000.opt (msingle-pic-base): New option.\n+\t* doc/invoke.texi (msingle-pic-base): Document.\n+\n 2010-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR driver/46712"}, {"sha": "6136c39348f75ea6b39eac68e450831b2b69607b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042abba2005f145b49ea828826a82c42e5e28061/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042abba2005f145b49ea828826a82c42e5e28061/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=042abba2005f145b49ea828826a82c42e5e28061", "patch": "@@ -20032,8 +20032,10 @@ rs6000_reg_live_or_pic_offset_p (int reg)\n   return (((crtl->calls_eh_return || df_regs_ever_live_p (reg))\n            && (!call_used_regs[reg]\n                || (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t\t   && !TARGET_SINGLE_PIC_BASE\n                    && TARGET_TOC && TARGET_MINIMAL_TOC)))\n           || (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t      && !TARGET_SINGLE_PIC_BASE\n               && ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n                   || (DEFAULT_ABI == ABI_DARWIN && flag_pic))));\n }\n@@ -20688,6 +20690,9 @@ rs6000_emit_prologue (void)\n       insn = emit_insn (generate_set_vrsave (reg, info, 0));\n     }\n \n+  if (TARGET_SINGLE_PIC_BASE)\n+    return; /* Do not set PIC register */\n+\n   /* If we are using RS6000_PIC_OFFSET_TABLE_REGNUM, we need to set it up.  */\n   if ((TARGET_TOC && TARGET_MINIMAL_TOC && get_pool_size () != 0)\n       || (DEFAULT_ABI == ABI_V4"}, {"sha": "02a60f8f365d3f0015230fd17d00a7443c6af7ee", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042abba2005f145b49ea828826a82c42e5e28061/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042abba2005f145b49ea828826a82c42e5e28061/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=042abba2005f145b49ea828826a82c42e5e28061", "patch": "@@ -275,6 +275,10 @@ mupdate\n Target Report RejectNegative InverseMask(NO_UPDATE, UPDATE)\n Generate load/store with update instructions\n \n+msingle-pic-base\n+Target Report Var(TARGET_SINGLE_PIC_BASE) Init(0)\n+Do not load the PIC register in function prologues\n+\n mavoid-indexed-addresses\n Target Report Var(TARGET_AVOID_XFORM) Init(-1) Save\n Avoid generation of indexed load/store instructions when possible"}, {"sha": "94e816034a22eedeb7706183442fbaeeef326e63", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042abba2005f145b49ea828826a82c42e5e28061/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042abba2005f145b49ea828826a82c42e5e28061/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=042abba2005f145b49ea828826a82c42e5e28061", "patch": "@@ -780,7 +780,7 @@ See RS/6000 and PowerPC Options.\n -mstrict-align  -mno-strict-align  -mrelocatable @gol\n -mno-relocatable  -mrelocatable-lib  -mno-relocatable-lib @gol\n -mtoc  -mno-toc  -mlittle  -mlittle-endian  -mbig  -mbig-endian @gol\n--mdynamic-no-pic  -maltivec -mswdiv @gol\n+-mdynamic-no-pic  -maltivec -mswdiv  -msingle-pic-base @gol\n -mprioritize-restricted-insns=@var{priority} @gol\n -msched-costly-dep=@var{dependence_type} @gol\n -minsert-sched-nops=@var{scheme} @gol\n@@ -15729,6 +15729,13 @@ relocatable, but that its external references are relocatable.  The\n resulting code is suitable for applications, but not shared\n libraries.\n \n+@item -msingle-pic-base\n+@opindex msingle-pic-base\n+Treat the register used for PIC addressing as read-only, rather than\n+loading it in the prologue for each function.  The run-time system is\n+responsible for initializing this register with an appropriate value\n+before execution begins.\n+\n @item -mprioritize-restricted-insns=@var{priority}\n @opindex mprioritize-restricted-insns\n This option controls the priority that is assigned to"}]}