{"sha": "eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlMmFhN2NlMWU1MmU1Nzg5NDEwZDBhZDJkM2UxMGM3N2FjMmZjNA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-17T08:06:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:06:50Z"}, "message": "[Ada] Add elaboration-related switches to GNAT UGN\n\nThis patch adds compiler switches -gnatH and -gnatJ to section \"Alphabetical\nlist of all switches\" of the GNAT User Guide for Native.\n\n2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Add missing\n\tsections on -gnatH and -gnatJ compiler switches.\n\t* gnat_ugn.texi: Regenerate.\n\nFrom-SVN: r262777", "tree": {"sha": "568325f64c53c7710d371809d449f67868ddac28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568325f64c53c7710d371809d449f67868ddac28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a10621137037719a99c2e5b75ec2e20c891ad59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a10621137037719a99c2e5b75ec2e20c891ad59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a10621137037719a99c2e5b75ec2e20c891ad59"}], "stats": {"total": 175, "additions": 133, "deletions": 42}, "files": [{"sha": "82045196cbc286e273ae65efd24528efc917af15", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "patch": "@@ -1,3 +1,9 @@\n+2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Add missing\n+\tsections on -gnatH and -gnatJ compiler switches.\n+\t* gnat_ugn.texi: Regenerate.\n+\n 2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* alloc.ads: Update the allocation metrics of the ignored Ghost nodes"}, {"sha": "e79f630731c8c092f9acaf7d54effd0ad5704443", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 47, "deletions": 21, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "patch": "@@ -720,9 +720,9 @@ is passed to ``gcc`` (e.g., :switch:`-O`, :switch:`-gnato,` etc.)\n .. index:: --RTS  (gnatmake)\n \n :switch:`--RTS={rts-path}`\n-  Specifies the default location of the runtime library. GNAT looks for the\n-  runtime\n-  in the following directories, and stops as soon as a valid runtime is found\n+  Specifies the default location of the run-time library. GNAT looks for the\n+  run-time\n+  in the following directories, and stops as soon as a valid run-time is found\n   (:file:`adainclude` or :file:`ada_source_path`, and :file:`adalib` or\n   :file:`ada_object_path` present):\n \n@@ -1505,7 +1505,7 @@ Alphabetical List of All Switches\n \n \n   In the example above, the first call to ``Detect_Aliasing`` fails with a\n-  ``Program_Error`` at runtime because the actuals for ``Val_1`` and\n+  ``Program_Error`` at run time because the actuals for ``Val_1`` and\n   ``Val_2`` denote the same object. The second call executes without raising\n   an exception because ``Self(Obj)`` produces an anonymous object which does\n   not share the memory location of ``Obj``.\n@@ -1817,14 +1817,12 @@ Alphabetical List of All Switches\n .. index:: -gnatg  (gcc)\n \n :switch:`-gnatg`\n-  Internal GNAT implementation mode. This should not be used for\n-  applications programs, it is intended only for use by the compiler\n-  and its run-time library. For documentation, see the GNAT sources.\n-  Note that :switch:`-gnatg` implies\n-  :switch:`-gnatw.ge` and\n-  :switch:`-gnatyg`\n-  so that all standard warnings and all standard style options are turned on.\n-  All warnings and style messages are treated as errors.\n+  Internal GNAT implementation mode. This should not be used for applications\n+  programs, it is intended only for use by the compiler and its run-time\n+  library. For documentation, see the GNAT sources. Note that :switch:`-gnatg`\n+  implies :switch:`-gnatw.ge` and :switch:`-gnatyg` so that all standard\n+  warnings and all standard style options are turned on. All warnings and style\n+  messages are treated as errors.\n \n \n .. index:: -gnatG[nn]  (gcc)\n@@ -1839,6 +1837,13 @@ Alphabetical List of All Switches\n   Output usage information. The output is written to :file:`stdout`.\n \n \n+.. index:: -gnatH  (gcc)\n+\n+:switch:`-gnatH`\n+  Legacy elaboration-checking mode enabled. When this switch is in effect, the\n+  pre-18.x access-before-elaboration model becomes the de facto model.\n+\n+\n .. index:: -gnati  (gcc)\n \n :switch:`-gnati{c}`\n@@ -1874,6 +1879,27 @@ Alphabetical List of All Switches\n   Reformat error messages to fit on ``nn`` character lines\n \n \n+.. index:: -gnatJ  (gcc)\n+\n+:switch:`-gnatJ`\n+  Permissive elaboration-checking mode enabled. When this switch is in effect,\n+  the post-18.x access-before-elaboration model ignores potential issues with:\n+\n+  - Accept statements\n+  - Activations of tasks defined in instances\n+  - Assertion pragmas\n+  - Calls from within an instance to its enclosing context\n+  - Calls through generic formal parameters\n+  - Calls to subprograms defined in instances\n+  - Entry calls\n+  - Indirect calls using 'Access\n+  - Requeue statements\n+  - Select statements\n+  - Synchronous task suspension\n+\n+  and does not emit compile-time diagnostics or run-time checks.\n+\n+\n .. index:: -gnatk  (gcc)\n \n :switch:`-gnatk={n}`\n@@ -2195,7 +2221,7 @@ Alphabetical List of All Switches\n .. index:: --RTS  (gcc)\n \n :switch:`--RTS={rts-path}`\n-  Specifies the default location of the runtime library. Same meaning as the\n+  Specifies the default location of the run-time library. Same meaning as the\n   equivalent ``gnatmake`` flag (:ref:`Switches_for_gnatmake`).\n \n \n@@ -5062,7 +5088,7 @@ switches refine this default behavior.\n   that a certain check will necessarily fail, it will generate code to\n   do an unconditional 'raise', even if checks are suppressed. The\n   compiler warns in this case. Another case in which checks may not be\n-  eliminated is when they are embedded in certain run time routines such\n+  eliminated is when they are embedded in certain run-time routines such\n   as math library routines.\n \n   Of course, run-time checks are omitted whenever the compiler can prove\n@@ -5858,7 +5884,7 @@ Debugging Control\n Exception Handling Control\n --------------------------\n \n-GNAT uses two methods for handling exceptions at run-time. The\n+GNAT uses two methods for handling exceptions at run time. The\n ``setjmp/longjmp`` method saves the context when entering\n a frame with an exception handler. Then when an exception is\n raised, the context can be restored immediately, without the\n@@ -6367,7 +6393,7 @@ be presented in subsequent sections.\n   .. index:: --RTS  (gnatbind)\n \n :switch:`--RTS={rts-path}`\n-  Specifies the default location of the runtime library. Same meaning as the\n+  Specifies the default location of the run-time library. Same meaning as the\n   equivalent ``gnatmake`` flag (:ref:`Switches_for_gnatmake`).\n \n   .. index:: -o   (gnatbind)\n@@ -6470,13 +6496,13 @@ be presented in subsequent sections.\n .. index:: -static  (gnatbind)\n \n :switch:`-static`\n-  Link against a static GNAT run time.\n+  Link against a static GNAT run-time.\n \n \n   .. index:: -shared  (gnatbind)\n \n :switch:`-shared`\n-  Link against a shared GNAT run time when available.\n+  Link against a shared GNAT run-time when available.\n \n \n   .. index:: -t  (gnatbind)\n@@ -6495,7 +6521,7 @@ be presented in subsequent sections.\n   nonzero value will activate round-robin scheduling.\n \n   A value of zero is treated specially. It turns off time\n-  slicing, and in addition, indicates to the tasking run time that the\n+  slicing, and in addition, indicates to the tasking run-time that the\n   semantics should match as closely as possible the Annex D\n   requirements of the Ada RM, and in particular sets the default\n   scheduling policy to ``FIFO_Within_Priorities``.\n@@ -6939,7 +6965,7 @@ The output is an Ada unit in source form that can be compiled with GNAT.\n This compilation occurs automatically as part of the ``gnatlink``\n processing.\n \n-Currently the GNAT run time requires a FPU using 80 bits mode\n+Currently the GNAT run-time requires a FPU using 80 bits mode\n precision. Under targets where this is not the default it is required to\n call GNAT.Float_Control.Reset before using floating point numbers (this\n include float computation, float input and output) in the Ada code. A\n@@ -7040,7 +7066,7 @@ directories searched are:\n \n * The content of the :file:`ada_object_path` file which is part of the GNAT\n   installation tree and is used to store standard libraries such as the\n-  GNAT Run Time Library (RTL) unless the switch :switch:`-nostdlib` is\n+  GNAT Run-Time Library (RTL) unless the switch :switch:`-nostdlib` is\n   specified. See :ref:`Installing_a_library`\n \n .. index:: -I  (gnatbind)"}, {"sha": "b5972bb565d76831081cc8cd35b5ce4918ddde69", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 80, "deletions": 21, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=eae2aa7ce1e52e5789410d0ad2d3e10c77ac2fc4", "patch": "@@ -8157,9 +8157,9 @@ Do not look for library files in the system default directory.\n \n @item @code{--RTS=@emph{rts-path}}\n \n-Specifies the default location of the runtime library. GNAT looks for the\n-runtime\n-in the following directories, and stops as soon as a valid runtime is found\n+Specifies the default location of the run-time library. GNAT looks for the\n+run-time\n+in the following directories, and stops as soon as a valid run-time is found\n (@code{adainclude} or @code{ada_source_path}, and @code{adalib} or\n @code{ada_object_path} present):\n \n@@ -9170,7 +9170,7 @@ Detect_Aliasing (Obj, Self (Obj));\n @end example\n \n In the example above, the first call to @code{Detect_Aliasing} fails with a\n-@code{Program_Error} at runtime because the actuals for @code{Val_1} and\n+@code{Program_Error} at run time because the actuals for @code{Val_1} and\n @code{Val_2} denote the same object. The second call executes without raising\n an exception because @code{Self(Obj)} produces an anonymous object which does\n not share the memory location of @code{Obj}.\n@@ -9577,14 +9577,12 @@ Externals names are folded to all uppercase.\n \n @item @code{-gnatg}\n \n-Internal GNAT implementation mode. This should not be used for\n-applications programs, it is intended only for use by the compiler\n-and its run-time library. For documentation, see the GNAT sources.\n-Note that @code{-gnatg} implies\n-@code{-gnatw.ge} and\n-@code{-gnatyg}\n-so that all standard warnings and all standard style options are turned on.\n-All warnings and style messages are treated as errors.\n+Internal GNAT implementation mode. This should not be used for applications\n+programs, it is intended only for use by the compiler and its run-time\n+library. For documentation, see the GNAT sources. Note that @code{-gnatg}\n+implies @code{-gnatw.ge} and @code{-gnatyg} so that all standard\n+warnings and all standard style options are turned on. All warnings and style\n+messages are treated as errors.\n @end table\n \n @geindex -gnatG[nn] (gcc)\n@@ -9607,6 +9605,17 @@ List generated expanded code in source form.\n Output usage information. The output is written to @code{stdout}.\n @end table\n \n+@geindex -gnatH (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatH}\n+\n+Legacy elaboration-checking mode enabled. When this switch is in effect, the\n+pre-18.x access-before-elaboration model becomes the de facto model.\n+@end table\n+\n @geindex -gnati (gcc)\n \n \n@@ -9654,6 +9663,56 @@ from the tree and ignored. This means that the tool will not see them.\n Reformat error messages to fit on @code{nn} character lines\n @end table\n \n+@geindex -gnatJ (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnatJ}\n+\n+Permissive elaboration-checking mode enabled. When this switch is in effect,\n+the post-18.x access-before-elaboration model ignores potential issues with:\n+\n+\n+@itemize -\n+\n+@item \n+Accept statements\n+\n+@item \n+Activations of tasks defined in instances\n+\n+@item \n+Assertion pragmas\n+\n+@item \n+Calls from within an instance to its enclosing context\n+\n+@item \n+Calls through generic formal parameters\n+\n+@item \n+Calls to subprograms defined in instances\n+\n+@item \n+Entry calls\n+\n+@item \n+Indirect calls using 'Access\n+\n+@item \n+Requeue statements\n+\n+@item \n+Select statements\n+\n+@item \n+Synchronous task suspension\n+@end itemize\n+\n+and does not emit compile-time diagnostics or run-time checks.\n+@end table\n+\n @geindex -gnatk (gcc)\n \n \n@@ -10195,7 +10254,7 @@ exit status.\n \n @item @code{--RTS=@emph{rts-path}}\n \n-Specifies the default location of the runtime library. Same meaning as the\n+Specifies the default location of the run-time library. Same meaning as the\n equivalent @code{gnatmake} flag (@ref{dc,,Switches for gnatmake}).\n @end table\n \n@@ -13981,7 +14040,7 @@ if checks are suppressed. In particular, if the compiler can prove\n that a certain check will necessarily fail, it will generate code to\n do an unconditional 'raise', even if checks are suppressed. The\n compiler warns in this case. Another case in which checks may not be\n-eliminated is when they are embedded in certain run time routines such\n+eliminated is when they are embedded in certain run-time routines such\n as math library routines.\n \n Of course, run-time checks are omitted whenever the compiler can prove\n@@ -15089,7 +15148,7 @@ speed up compilation, but means that these tools cannot be used.\n @subsection Exception Handling Control\n \n \n-GNAT uses two methods for handling exceptions at run-time. The\n+GNAT uses two methods for handling exceptions at run time. The\n @code{setjmp/longjmp} method saves the context when entering\n a frame with an exception handler. Then when an exception is\n raised, the context can be restored immediately, without the\n@@ -15706,7 +15765,7 @@ Do not look for library files in the system default directory.\n \n @item @code{--RTS=@emph{rts-path}}\n \n-Specifies the default location of the runtime library. Same meaning as the\n+Specifies the default location of the run-time library. Same meaning as the\n equivalent @code{gnatmake} flag (@ref{dc,,Switches for gnatmake}).\n \n @geindex -o (gnatbind)\n@@ -15823,13 +15882,13 @@ then the default is @code{in} (invalid values).\n \n @item @code{-static}\n \n-Link against a static GNAT run time.\n+Link against a static GNAT run-time.\n \n @geindex -shared (gnatbind)\n \n @item @code{-shared}\n \n-Link against a shared GNAT run time when available.\n+Link against a shared GNAT run-time when available.\n \n @geindex -t (gnatbind)\n \n@@ -15848,7 +15907,7 @@ does support some general notion of round-robin scheduling, then any\n nonzero value will activate round-robin scheduling.\n \n A value of zero is treated specially. It turns off time\n-slicing, and in addition, indicates to the tasking run time that the\n+slicing, and in addition, indicates to the tasking run-time that the\n semantics should match as closely as possible the Annex D\n requirements of the Ada RM, and in particular sets the default\n scheduling policy to @code{FIFO_Within_Priorities}.\n@@ -16366,7 +16425,7 @@ The output is an Ada unit in source form that can be compiled with GNAT.\n This compilation occurs automatically as part of the @code{gnatlink}\n processing.\n \n-Currently the GNAT run time requires a FPU using 80 bits mode\n+Currently the GNAT run-time requires a FPU using 80 bits mode\n precision. Under targets where this is not the default it is required to\n call GNAT.Float_Control.Reset before using floating point numbers (this\n include float computation, float input and output) in the Ada code. A\n@@ -16491,7 +16550,7 @@ of GNAT).\n @item \n The content of the @code{ada_object_path} file which is part of the GNAT\n installation tree and is used to store standard libraries such as the\n-GNAT Run Time Library (RTL) unless the switch @code{-nostdlib} is\n+GNAT Run-Time Library (RTL) unless the switch @code{-nostdlib} is\n specified. See @ref{87,,Installing a library}\n @end itemize\n "}]}