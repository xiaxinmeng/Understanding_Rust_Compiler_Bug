{"sha": "c0067dc8d55be0b9e269692300cb05e70506ba84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAwNjdkYzhkNTViZTBiOWUyNjk2OTIzMDBjYjA1ZTcwNTA2YmE4NA==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1998-06-21T00:26:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-21T00:26:51Z"}, "message": "i386.c (output_fp_conditional_move): Don't bother handling (cc_prev_status.flags && CC_NO_OVERFLOW) since the INSN...\n\n        * i386.c (output_fp_conditional_move): Don't bother handling\n        (cc_prev_status.flags && CC_NO_OVERFLOW) since the INSN patterns\n        prevent this from happening.\n        * i386.md (nonlocal_goto_receiver): Delete.\n\nFrom-SVN: r20632", "tree": {"sha": "ecb5d34e9f63763a559d509ac8037f2db25b6a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecb5d34e9f63763a559d509ac8037f2db25b6a4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0067dc8d55be0b9e269692300cb05e70506ba84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0067dc8d55be0b9e269692300cb05e70506ba84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0067dc8d55be0b9e269692300cb05e70506ba84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0067dc8d55be0b9e269692300cb05e70506ba84/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a24da858abcb8a310a27c6e20793e56ab4810369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24da858abcb8a310a27c6e20793e56ab4810369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24da858abcb8a310a27c6e20793e56ab4810369"}], "stats": {"total": 38, "additions": 8, "deletions": 30}, "files": [{"sha": "36547921effac81979d537cd9a75566d23c2db8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0067dc8d55be0b9e269692300cb05e70506ba84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0067dc8d55be0b9e269692300cb05e70506ba84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0067dc8d55be0b9e269692300cb05e70506ba84", "patch": "@@ -1,3 +1,11 @@\n+Sun Jun 21 01:16:38 1998  John Wehle  (john@feith.com)\n+\n+\t* i386.c (output_fp_conditional_move): Don't bother handling\n+\t(cc_prev_status.flags && CC_NO_OVERFLOW) since the INSN patterns\n+\tprevent this from happening.\n+\n+\t* i386.md (nonlocal_goto_receiver): Delete.\n+\n Sun Jun 21 00:42:20 1998  H.J. Lu  (hjl@gnu.org)\n \n \t* flow.c (allocate_for_life_analysis, init_regset_vector):"}, {"sha": "cd37f54fc377c971bd50731416fb46579905a875", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0067dc8d55be0b9e269692300cb05e70506ba84/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0067dc8d55be0b9e269692300cb05e70506ba84/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c0067dc8d55be0b9e269692300cb05e70506ba84", "patch": "@@ -5134,27 +5134,6 @@ output_fp_conditional_move (which_alternative, operands)\n      int which_alternative;\n      rtx operands[];\n {\n-  int code = GET_CODE (operands[1]);\n-\n-  /* This is very tricky. We have to do it right. For a code segement\n-     like:\n-\n-\tint foo;\n-\tdouble bar;\n-\t....\n-\tfoo = foo - x;\n-\tif (foo >= 0)\n-\t  bar = y;\n-\n-     final_scan_insn () may delete the insn which sets CC. We have to\n-     tell final_scan_insn () if it should be reinserted. When CODE is\n-     GT or LE, we have to check the CC_NO_OVERFLOW bit and return\n-     NULL_PTR to tell final to reinsert the test insn because the\n-     conditional move cannot be handled properly without it. */\n-  if ((code == GT || code == LE)\n-      && (cc_prev_status.flags & CC_NO_OVERFLOW))\n-    return NULL_PTR;\n-\n   switch (which_alternative)\n     {\n     case 0:"}, {"sha": "c7412b736a892276f1d930eb909328510921bea9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0067dc8d55be0b9e269692300cb05e70506ba84/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0067dc8d55be0b9e269692300cb05e70506ba84/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c0067dc8d55be0b9e269692300cb05e70506ba84", "patch": "@@ -7797,12 +7797,3 @@ byte_xor_operation:\n   emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n   DONE;\n }\")\n-\n-(define_expand \"nonlocal_goto_receiver\"\n-  [(const_int 0)]\n-  \"flag_pic\"\n-  \"\n-{\n-  load_pic_register (1);\n-  DONE;\n-}\")"}]}