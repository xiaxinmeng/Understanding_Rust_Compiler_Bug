{"sha": "2e1dbf228dab2af6b51f8bd87a5e811b20059e58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxZGJmMjI4ZGFiMmFmNmI1MWY4YmQ4N2E1ZTgxMWIyMDA1OWU1OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T21:40:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T21:40:18Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r765", "tree": {"sha": "87e89e0af267973d9fab4560fc78414cf767f7d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87e89e0af267973d9fab4560fc78414cf767f7d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e1dbf228dab2af6b51f8bd87a5e811b20059e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1dbf228dab2af6b51f8bd87a5e811b20059e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1dbf228dab2af6b51f8bd87a5e811b20059e58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1dbf228dab2af6b51f8bd87a5e811b20059e58/comments", "author": null, "committer": null, "parents": [{"sha": "a4bde0b117fa3575f34d259e5b62e577fe64ce83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4bde0b117fa3575f34d259e5b62e577fe64ce83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4bde0b117fa3575f34d259e5b62e577fe64ce83"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "a8b0b6276841b46ce4aed80ef672c0012eb16959", "filename": "gcc/jump.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1dbf228dab2af6b51f8bd87a5e811b20059e58/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1dbf228dab2af6b51f8bd87a5e811b20059e58/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=2e1dbf228dab2af6b51f8bd87a5e811b20059e58", "patch": "@@ -2948,11 +2948,15 @@ delete_insn (insn)\n       while (next != 0\n \t     && ((code = GET_CODE (next)) == INSN\n \t\t || code == JUMP_INSN || code == CALL_INSN\n-\t\t || code == NOTE))\n+\t\t || code == NOTE\n+\t\t || (code == CODE_LABEL && INSN_DELETED_P (next))))\n \t{\n \t  if (code == NOTE\n \t      && NOTE_LINE_NUMBER (next) != NOTE_INSN_FUNCTION_END)\n \t    next = NEXT_INSN (next);\n+\t  /* Keep going past other deleted labels to delete what follows.  */\n+\t  else if (code == CODE_LABEL && INSN_DELETED_P (next))\n+\t    next = NEXT_INSN (next);\n \t  else\n \t    /* Note: if this deletes a jump, it can cause more\n \t       deletion of unreachable code, after a different label."}]}