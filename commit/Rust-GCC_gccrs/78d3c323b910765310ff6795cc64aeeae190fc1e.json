{"sha": "78d3c323b910765310ff6795cc64aeeae190fc1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhkM2MzMjNiOTEwNzY1MzEwZmY2Nzk1Y2M2NGFlZWFlMTkwZmMxZQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-07-03T12:55:13Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-07-03T12:55:13Z"}, "message": "tree-ssa-sccvn.c (set_ssa_val_to): Check for operand_equal_p before declaring inequality.\n\n2007-07-03  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Check for operand_equal_p\n\tbefore declaring inequality.\n\nFrom-SVN: r126252", "tree": {"sha": "aad27b9bed042a917db4921388ce2c84ebeba26a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aad27b9bed042a917db4921388ce2c84ebeba26a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78d3c323b910765310ff6795cc64aeeae190fc1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d3c323b910765310ff6795cc64aeeae190fc1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d3c323b910765310ff6795cc64aeeae190fc1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d3c323b910765310ff6795cc64aeeae190fc1e/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6bcd67696f64c2ad33633be8657609068581dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6bcd67696f64c2ad33633be8657609068581dca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6bcd67696f64c2ad33633be8657609068581dca"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "d8ed672acb40180993dad3986756a0336fa5f8ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78d3c323b910765310ff6795cc64aeeae190fc1e", "patch": "@@ -1,3 +1,8 @@\n+2007-07-03  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Check for operand_equal_p\n+\tbefore declaring inequality.\n+\n 2007-07-03  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \t* combine.c (recog_for_combine): Log the success or failure of"}, {"sha": "609643ebddca4858856d99415db939b96b27ed4f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78d3c323b910765310ff6795cc64aeeae190fc1e", "patch": "@@ -1,3 +1,7 @@\n+2007-07-02  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* gcc.c-torture/compile/ssa-pre-1.c: New test.\n+\n 2007-07-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/20888"}, {"sha": "eda370d4baa107c6bd62f7e070f3063df2894896", "filename": "gcc/testsuite/gcc.c-torture/compile/ssa-pre-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fssa-pre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fssa-pre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fssa-pre-1.c?ref=78d3c323b910765310ff6795cc64aeeae190fc1e", "patch": "@@ -0,0 +1,19 @@\n+void washQtoM3(double m[9], double q[4]);\n+double sqrt(double);\n+int f(int samp)\n+{\n+      double clp[2], xyz[3], q[4], len;\n+      double mRF[9];\n+      int xi;\n+      for (xi=0; xi<samp; xi++)\n+\t    {\n+\t\t    q[0] = 1.0;\n+\t\t    q[1] = ( ((double)(1)-(-1))*((double)((float)xi)-(-0.5)) / ((double)(samp-0.5)-(-0.5)) + (-1));\n+\t\t    q[2] = ( ((double)(1)-(-1))*((double)((float)0)-(-0.5)) / ((double)(samp-0.5)-(-0.5)) + (-1));\n+\t\t    q[3] = ( ((double)(1)-(-1))*((double)((float)0)-(-0.5)) / ((double)(samp-0.5)-(-0.5)) + (-1));\n+\t\t    len = (sqrt((((q))[0]*((q))[0] + ((q))[1]*((q))[1] + ((q))[2]*((q))[2] + ((q))[3]*((q))[3])));\n+\t\t  ((q)[0] = (q)[0]*1.0/len, (q)[1] = (q)[1]*1.0/len, (q)[2] = (q)[2]*1.0/len, (q)[3] = (q)[3]*1.0/len);\n+\t\t washQtoM3(mRF, q);\n+\t\t      }\n+      return 0;\n+}"}, {"sha": "0f0822984c3653796f1528da1db673ec046f7fd4", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d3c323b910765310ff6795cc64aeeae190fc1e/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=78d3c323b910765310ff6795cc64aeeae190fc1e", "patch": "@@ -1014,6 +1014,7 @@ print_scc (FILE *out, VEC (tree, heap) *scc)\n static inline bool\n set_ssa_val_to (tree from, tree to)\n {\n+  tree currval;\n   gcc_assert (to != NULL);\n \n   /* Make sure we don't create chains of copies, so that we get the\n@@ -1037,7 +1038,9 @@ set_ssa_val_to (tree from, tree to)\n       fprintf (dump_file, \"\\n\");\n     }\n \n-  if (SSA_VAL (from) != to)\n+  currval = SSA_VAL (from);\n+\n+  if (currval != to  && !operand_equal_p (currval, to, OEP_PURE_SAME))\n     {\n       SSA_VAL (from) = to;\n       return true;"}]}