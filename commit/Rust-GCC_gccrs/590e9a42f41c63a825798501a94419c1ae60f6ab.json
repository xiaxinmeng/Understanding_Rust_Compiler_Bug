{"sha": "590e9a42f41c63a825798501a94419c1ae60f6ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkwZTlhNDJmNDFjNjNhODI1Nzk4NTAxYTk0NDE5YzFhZTYwZjZhYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-10-17T15:22:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-17T15:22:23Z"}, "message": "re PR middle-end/33794 (Wrong code w/ -ffast-math)\n\n\tPR middle-end/33794\n\t* reg-stack.c (move_for_stack_reg): Swap input argument of\n\tUNSPEC_TAN insn to the top of the stack.\n\nFrom-SVN: r129406", "tree": {"sha": "99c5650f062fac9747d1952e2322e092dcc513b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99c5650f062fac9747d1952e2322e092dcc513b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/590e9a42f41c63a825798501a94419c1ae60f6ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590e9a42f41c63a825798501a94419c1ae60f6ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/590e9a42f41c63a825798501a94419c1ae60f6ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590e9a42f41c63a825798501a94419c1ae60f6ab/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13d7164405fe380ef6d3805ace44565447c25dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13d7164405fe380ef6d3805ace44565447c25dbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13d7164405fe380ef6d3805ace44565447c25dbb"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "34462e4a89fb0724594c180104e1774fadf250f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590e9a42f41c63a825798501a94419c1ae60f6ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590e9a42f41c63a825798501a94419c1ae60f6ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=590e9a42f41c63a825798501a94419c1ae60f6ab", "patch": "@@ -1,3 +1,9 @@\n+2007-10-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/33794\n+\t* reg-stack.c (move_for_stack_reg): Swap input argument of\n+\tUNSPEC_TAN insn to the top of the stack.\n+\n 2007-10-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/32961"}, {"sha": "248a8c2b9a5c3162f3a5a899a3f912a48f7d5723", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590e9a42f41c63a825798501a94419c1ae60f6ab/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590e9a42f41c63a825798501a94419c1ae60f6ab/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=590e9a42f41c63a825798501a94419c1ae60f6ab", "patch": "@@ -1085,11 +1085,13 @@ move_for_stack_reg (rtx insn, stack regstack, rtx pat)\n \t special case with i387 UNSPEC_TAN, where destination is live\n \t (an argument to fptan) but inherent load of 1.0 is modelled\n \t as a load from a constant.  */\n-      if (! (GET_CODE (pat) == PARALLEL\n-\t     && XVECLEN (pat, 0) == 2\n-\t     && GET_CODE (XVECEXP (pat, 0, 1)) == SET\n-\t     && GET_CODE (SET_SRC (XVECEXP (pat, 0, 1))) == UNSPEC\n-\t     && XINT (SET_SRC (XVECEXP (pat, 0, 1)), 1) == UNSPEC_TAN))\n+      if (GET_CODE (pat) == PARALLEL\n+\t  && XVECLEN (pat, 0) == 2\n+\t  && GET_CODE (XVECEXP (pat, 0, 1)) == SET\n+\t  && GET_CODE (SET_SRC (XVECEXP (pat, 0, 1))) == UNSPEC\n+\t  && XINT (SET_SRC (XVECEXP (pat, 0, 1)), 1) == UNSPEC_TAN)\n+\temit_swap_insn (insn, regstack, dest);\n+      else\n \tgcc_assert (get_hard_regnum (regstack, dest) < FIRST_STACK_REG);\n \n       gcc_assert (regstack->top < REG_STACK_SIZE);"}]}