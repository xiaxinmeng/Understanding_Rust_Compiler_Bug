{"sha": "cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I0YWQxODAzYmIxOGEyM2QzNDczODVlM2Q4YjgzZmQ2YTk4MWQ5ZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2008-12-08T12:30:24Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2008-12-08T12:30:24Z"}, "message": "gimple.h (gimple_build_try): Fix declaration.\n\n2008-12-08  Andrew Haley  <aph@redhat.com>\n            Kamaraju Kusumanchi <raju.mailinglists@gmail.com>\n\n\t* gimple.h (gimple_build_try): Fix declaration.\n\n\t* builtins.c (fold_builtin_sqrt): Don't use a conditional\n\toperator.\n\t* fixed-value.c (do_fixed_add): Likewise.\n\t* tree-ssa-loop-ivopts.c (iv_ca_cost): Likewise.\n\n\nCo-Authored-By: Kamaraju Kusumanchi <raju.mailinglists@gmail.com>\n\nFrom-SVN: r142549", "tree": {"sha": "a40e4e4be9ff9a6bd850682dfafca2001ca9643a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a40e4e4be9ff9a6bd850682dfafca2001ca9643a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5d137be06367ea715356dfd14b2683ac607e191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d137be06367ea715356dfd14b2683ac607e191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d137be06367ea715356dfd14b2683ac607e191"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "353bdd1cf487aef5addea2f2ad8e48b24dbc41ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "patch": "@@ -1,3 +1,13 @@\n+2008-12-08  Andrew Haley  <aph@redhat.com>\n+            Kamaraju Kusumanchi <raju.mailinglists@gmail.com>\n+\n+\t* gimple.h (gimple_build_try): Fix declaration.\n+\n+\t* builtins.c (fold_builtin_sqrt): Don't use a conditional\n+\toperator.\n+\t* fixed-value.c (do_fixed_add): Likewise.\n+\t* tree-ssa-loop-ivopts.c (iv_ca_cost): Likewise.\n+\n 2008-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/36802"}, {"sha": "63ca618a3848fe098e76032e236db327a3844a6d", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "patch": "@@ -7681,8 +7681,11 @@ fold_builtin_sqrt (tree arg, tree type)\n \t  tree arg0 = CALL_EXPR_ARG (arg, 0);\n \t  tree tree_root;\n \t  /* The inner root was either sqrt or cbrt.  */\n-\t  REAL_VALUE_TYPE dconstroot =\n-\t    BUILTIN_SQRT_P (fcode) ? dconsthalf : dconst_third ();\n+\t  REAL_VALUE_TYPE dconstroot;\n+\t  if (BUILTIN_SQRT_P (fcode))\n+\t    dconstroot = dconsthalf;\n+\t  else\n+\t    dconstroot = dconst_third ();\n \n \t  /* Adjust for the outer root.  */\n \t  SET_REAL_EXP (&dconstroot, REAL_EXP (&dconstroot) - 1);"}, {"sha": "26aaa023c84085cf378169d974347530b7cc3f5e", "filename": "gcc/fixed-value.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Ffixed-value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Ffixed-value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixed-value.c?ref=cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "patch": "@@ -291,9 +291,17 @@ do_fixed_add (FIXED_VALUE_TYPE *f, const FIXED_VALUE_TYPE *a,\n \t      const FIXED_VALUE_TYPE *b, bool subtract_p, bool sat_p)\n {\n   bool overflow_p = false;\n-  double_int temp = subtract_p ? double_int_neg (b->data) : b->data;\n-  bool unsigned_p = UNSIGNED_FIXED_POINT_MODE_P (a->mode);\n-  int i_f_bits = GET_MODE_IBIT (a->mode) + GET_MODE_FBIT (a->mode);\n+  bool unsigned_p;\n+  double_int temp;\n+  int i_f_bits;\n+\n+  if (subtract_p)\n+    temp = double_int_neg (b->data);\n+  else\n+    temp = b->data;\n+\n+  unsigned_p = UNSIGNED_FIXED_POINT_MODE_P (a->mode);\n+  i_f_bits = GET_MODE_IBIT (a->mode) + GET_MODE_FBIT (a->mode);\n   f->mode = a->mode;\n   f->data = double_int_add (a->data, temp);\n   if (unsigned_p) /* Unsigned type.  */"}, {"sha": "8f8e49b61b3978aff2353b4bb526402d25fa5368", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "patch": "@@ -793,7 +793,7 @@ gimple gimple_build_asm_vec (const char *, VEC(tree,gc) *, VEC(tree,gc) *,\n                              VEC(tree,gc) *);\n gimple gimple_build_catch (tree, gimple_seq);\n gimple gimple_build_eh_filter (tree, gimple_seq);\n-gimple gimple_build_try (gimple_seq, gimple_seq, unsigned int);\n+gimple gimple_build_try (gimple_seq, gimple_seq, enum gimple_try_flags);\n gimple gimple_build_wce (gimple_seq);\n gimple gimple_build_resx (int);\n gimple gimple_build_switch (unsigned, tree, tree, ...);"}, {"sha": "00594432bc0598d4d038764d178ab4fbb64c5f75", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4ad1803bb18a23d347385e3d8b83fd6a981d9e/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=cb4ad1803bb18a23d347385e3d8b83fd6a981d9e", "patch": "@@ -4355,7 +4355,10 @@ iv_ca_add_use (struct ivopts_data *data, struct iv_ca *ivs,\n static comp_cost\n iv_ca_cost (struct iv_ca *ivs)\n {\n-  return (ivs->bad_uses ? infinite_cost : ivs->cost);\n+  if (ivs->bad_uses)\n+    return infinite_cost;\n+  else\n+    return ivs->cost;\n }\n \n /* Returns true if all dependences of CP are among invariants in IVS.  */"}]}