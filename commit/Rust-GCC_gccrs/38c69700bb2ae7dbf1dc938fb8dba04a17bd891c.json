{"sha": "38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhjNjk3MDBiYjJhZTdkYmYxZGM5MzhmYjhkYmEwNGExN2JkODkxYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2020-01-10T23:00:39Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2020-01-13T22:13:59Z"}, "message": "Add initial octeontx2 support.\n\nThis adds octeontx2 naming.  It currently uses the cortexa57\ncost model and schedule model until I submit this.  This is\nmore a place holder to get the naming of the cores in GCC 10.\nI will submit the cost model in the next couple of days.\n\nChangeLog:\n* config/aarch64/aarch64-cores.def (octeontx2): New define.\n(octeontx2t98): New define.\n(octeontx2t96): New define.\n(octeontx2t93): New define.\n(octeontx2f95): New define.\n(octeontx2f95n): New define.\n(octeontx2f95mm): New define.\n* config/aarch64/aarch64-tune.md: Regenerate.\n* doc/invoke.texi (-mcpu=): Document the new cpu types.", "tree": {"sha": "db70eb9f72a36b42ee609c504ff41934166758a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db70eb9f72a36b42ee609c504ff41934166758a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97e2f333087d180a78d92c99b038f0888ac63c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97e2f333087d180a78d92c99b038f0888ac63c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97e2f333087d180a78d92c99b038f0888ac63c02"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "4664c320805b63579ed0b1f9e9969a7fe9645fde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "patch": "@@ -1,3 +1,15 @@\n+2020-01-13  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* config/aarch64/aarch64-cores.def (octeontx2): New define.\n+\t(octeontx2t98): New define.\n+\t(octeontx2t96): New define.\n+\t(octeontx2t93): New define.\n+\t(octeontx2f95): New define.\n+\t(octeontx2f95n): New define.\n+\t(octeontx2f95mm): New define.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* doc/invoke.texi (-mcpu=): Document the new cpu types.\n+\n 2020-01-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/33799 - destroy return value if local cleanup throws."}, {"sha": "ea9b98b4b0ad2a578755561bba5b6d5c56115994", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "patch": "@@ -109,6 +109,16 @@ AARCH64_CORE(\"ares\",  ares, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_F\n AARCH64_CORE(\"neoverse-n1\",  neoversen1, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_PROFILE, neoversen1, 0x41, 0xd0c, -1)\n AARCH64_CORE(\"neoverse-e1\",  neoversee1, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa73, 0x41, 0xd4a, -1)\n \n+/* Cavium ('C') cores. */\n+AARCH64_CORE(\"octeontx2\",      octeontx2,      cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b0, -1)\n+AARCH64_CORE(\"octeontx2t98\",   octeontx2t98,   cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b1, -1)\n+AARCH64_CORE(\"octeontx2t96\",   octeontx2t96,   cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b2, -1)\n+/* Note OcteonTX2 T93 is an alias to OcteonTX2 T96. */\n+AARCH64_CORE(\"octeontx2t93\",   octeontx2t93,   cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b2, -1)\n+AARCH64_CORE(\"octeontx2f95\",   octeontx2f95,   cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b3, -1)\n+AARCH64_CORE(\"octeontx2f95n\",  octeontx2f95n,  cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b4, -1)\n+AARCH64_CORE(\"octeontx2f95mm\", octeontx2f95mm, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_PROFILE, cortexa57, 0x43, 0x0b5, -1)\n+\n /* HiSilicon ('H') cores. */\n AARCH64_CORE(\"tsv110\",  tsv110, tsv110, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_F16 | AARCH64_FL_AES | AARCH64_FL_SHA2, tsv110,   0x48, 0xd01, -1)\n "}, {"sha": "3cc1c4d761fba50e53e3a9008d135f8c751e48cd", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa65,cortexa65ae,ares,neoversen1,neoversee1,tsv110,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55\"\n+\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa65,cortexa65ae,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,tsv110,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "3c6caef1a21f26b57aee61b776e945841b9c85b5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c69700bb2ae7dbf1dc938fb8dba04a17bd891c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=38c69700bb2ae7dbf1dc938fb8dba04a17bd891c", "patch": "@@ -16328,7 +16328,11 @@ performance of the code.  Permissible values for this option are:\n @samp{ares}, @samp{exynos-m1}, @samp{emag}, @samp{falkor},\n @samp{neoverse-e1},@samp{neoverse-n1},@samp{qdf24xx}, @samp{saphira},\n @samp{phecda}, @samp{xgene1}, @samp{vulcan}, @samp{octeontx},\n-@samp{octeontx81},  @samp{octeontx83}, @samp{thunderx}, @samp{thunderxt88},\n+@samp{octeontx81},  @samp{octeontx83},\n+@samp{octeontx2}, @samp{octeontx2t98}, @samp{octeontx2t96}\n+@samp{octeontx2t93}, @samp{octeontx2f95}, @samp{octeontx2f95n},\n+@samp{octeontx2f95mm}\n+@samp{thunderx}, @samp{thunderxt88},\n @samp{thunderxt88p1}, @samp{thunderxt81}, @samp{tsv110},\n @samp{thunderxt83}, @samp{thunderx2t99},\n @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},"}]}