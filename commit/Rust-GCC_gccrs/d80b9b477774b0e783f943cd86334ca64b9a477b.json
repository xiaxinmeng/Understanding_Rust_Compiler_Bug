{"sha": "d80b9b477774b0e783f943cd86334ca64b9a477b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgwYjliNDc3Nzc0YjBlNzgzZjk0M2NkODYzMzRjYTY0YjlhNDc3Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-03-29T09:37:37Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-03-29T09:37:37Z"}, "message": "re PR libfortran/56737 (Wrong I/O result with format cache for Hollerith strings)\n\n2013-03-29  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56737\n        * io/format.c (parse_format): With caching, copy\n        dtp->format string.\n        (save_parsed_format): Use dtp->format directy without\n        copying.\n\n2013-03-29  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56737\n        * testsuite/gfortran.dg/fmt_cache_3.f90: New.\n\n(Plus: Move fortran/ChangeLog item to libgfortran/ChangeLog)\n\nFrom-SVN: r197229", "tree": {"sha": "4927153fd52d2d17a343896d19bad4246aa38bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4927153fd52d2d17a343896d19bad4246aa38bdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d80b9b477774b0e783f943cd86334ca64b9a477b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80b9b477774b0e783f943cd86334ca64b9a477b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80b9b477774b0e783f943cd86334ca64b9a477b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80b9b477774b0e783f943cd86334ca64b9a477b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0b012be6aef65bd11107f8dac814c3ac36f95d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0b012be6aef65bd11107f8dac814c3ac36f95d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0b012be6aef65bd11107f8dac814c3ac36f95d0"}], "stats": {"total": 119, "additions": 110, "deletions": 9}, "files": [{"sha": "f1f176573c430b9f1f74462cadcc307a2d1a401c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d80b9b477774b0e783f943cd86334ca64b9a477b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d80b9b477774b0e783f943cd86334ca64b9a477b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d80b9b477774b0e783f943cd86334ca64b9a477b", "patch": "@@ -1,10 +1,3 @@\n-2013-03-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/56735\n-\t* io/list_read.c (nml_query): Only abort when\n-\tan error occured.\n-\t(namelist_read): Add goto instead of falling through.\n-\n 2013-03-28  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/45159"}, {"sha": "d35c02daca97d6d81bf27f678e1fc363a84afabc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d80b9b477774b0e783f943cd86334ca64b9a477b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d80b9b477774b0e783f943cd86334ca64b9a477b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d80b9b477774b0e783f943cd86334ca64b9a477b", "patch": "@@ -1,3 +1,8 @@\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56737\n+\t* testsuite/gfortran.dg/fmt_cache_3.f90: New.\n+\n 2013-03-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56735"}, {"sha": "ec8e1b389f9f8c2644e376a2052c3f9351e5c714", "filename": "gcc/testsuite/gfortran.dg/fmt_cache_3.f90", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d80b9b477774b0e783f943cd86334ca64b9a477b/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_cache_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d80b9b477774b0e783f943cd86334ca64b9a477b/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_cache_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_cache_3.f90?ref=d80b9b477774b0e783f943cd86334ca64b9a477b", "patch": "@@ -0,0 +1,80 @@\n+! { dg-do run }\n+!\n+! PR fortran/56737\n+!\n+! Contributed by Jonathan Hogg\n+!\n+module hsl_mc73_single\n+   implicit none\n+   integer, parameter, private :: wp = kind(0.0)\n+contains\n+   subroutine mc73_fiedler(n,lirn,irn,ip,list)\n+      integer,  intent (in) :: n\n+      integer,  intent (in) :: lirn\n+      integer,  intent (in) :: irn(*)\n+      integer,  intent (in) :: ip(*)\n+      integer, intent (out) :: list(*)\n+\n+      integer :: icntl(10)\n+\n+      call fiedler_graph(icntl)\n+   end subroutine mc73_fiedler\n+\n+   subroutine mc73_order\n+      integer :: icntl(10)\n+\n+      call fiedler_graph(icntl)\n+   end subroutine mc73_order\n+\n+   subroutine fiedler_graph(icntl)\n+      integer,  intent (in) :: icntl(10)\n+\n+      real (kind = wp)  :: tol\n+      real (kind = wp)  :: tol1\n+      real (kind = wp)  :: rtol\n+\n+      call multilevel_eig(tol,tol1,rtol,icntl)\n+   end subroutine fiedler_graph\n+\n+   subroutine multilevel_eig(tol,tol1,rtol,icntl)\n+      real (kind = wp), intent (in) :: tol,tol1,rtol\n+      integer,  intent(in) :: icntl(10)\n+\n+      call level_print(6,'end of level ',1)\n+   end subroutine multilevel_eig\n+\n+   subroutine level_print(mp,title1,level)\n+      character (len = *), intent(in) :: title1\n+      integer,  intent(in) :: mp,level\n+      character(len=80) fmt\n+      integer :: char_len1,char_len2\n+\n+      char_len1=len_trim(title1)\n+\n+      write (fmt,\"('(',i4,'(1H ),6h===== ,a',i4,',i4,6h =====)')\") &\n+           level*3, char_len1\n+!      print *, \"fmt = \", fmt\n+!      print *, \"title1= \", title1\n+!      print *, \"level = \", level\n+      write (66,fmt) title1,level\n+   end subroutine level_print\n+end module hsl_mc73_single\n+\n+program test\n+   use hsl_mc73_single\n+   implicit none\n+   character(len=200) :: str(2)\n+   integer, parameter :: wp = kind(0.0)\n+\n+   integer :: n, lirn\n+   integer :: irn(1), ip(1), list(1)\n+\n+   str = \"\"\n+   open (66, status='scratch')\n+   call mc73_order\n+   call mc73_fiedler(n,lirn,irn,ip,list)\n+   rewind (66)\n+   read (66, '(a)') str\n+   close (66)\n+   if (any (str /= \"   ===== end of level   1 =====\")) call abort()\n+end program test"}, {"sha": "a959728bd81c16fd91ffd50cfec311674adec401", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d80b9b477774b0e783f943cd86334ca64b9a477b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d80b9b477774b0e783f943cd86334ca64b9a477b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d80b9b477774b0e783f943cd86334ca64b9a477b", "patch": "@@ -1,3 +1,18 @@\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56737\n+\t* io/format.c (parse_format): With caching, copy\n+\tdtp->format string.\n+\t(save_parsed_format): Use dtp->format directy without\n+\tcopying.\n+\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56735\n+\t* io/list_read.c (nml_query): Only abort when\n+\tan error occured.\n+\t(namelist_read): Add goto instead of falling through.\n+\n 2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n \n \tPR libfortran/52512"}, {"sha": "db95e490153a805acee5cb26acbbb510165ea42c", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d80b9b477774b0e783f943cd86334ca64b9a477b/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d80b9b477774b0e783f943cd86334ca64b9a477b/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=d80b9b477774b0e783f943cd86334ca64b9a477b", "patch": "@@ -148,8 +148,7 @@ save_parsed_format (st_parameter_dt *dtp)\n   u->format_hash_table[hash].hashed_fmt = NULL;\n \n   free (u->format_hash_table[hash].key);\n-  u->format_hash_table[hash].key = xmalloc (dtp->format_len);\n-  memcpy (u->format_hash_table[hash].key, dtp->format, dtp->format_len);\n+  u->format_hash_table[hash].key = dtp->format;\n \n   u->format_hash_table[hash].key_len = dtp->format_len;\n   u->format_hash_table[hash].hashed_fmt = dtp->u.p.fmt;\n@@ -1223,6 +1222,13 @@ parse_format (st_parameter_dt *dtp)\n \n   /* Not found so proceed as follows.  */\n \n+  if (format_cache_ok)\n+    {\n+      char *fmt_string = xmalloc (dtp->format_len);\n+      memcpy (fmt_string, dtp->format, dtp->format_len);\n+      dtp->format = fmt_string;\n+    }\n+\n   dtp->u.p.fmt = fmt = xmalloc (sizeof (format_data));\n   fmt->format_string = dtp->format;\n   fmt->format_string_len = dtp->format_len;\n@@ -1257,6 +1263,8 @@ parse_format (st_parameter_dt *dtp)\n   if (fmt->error)\n     {\n       format_error (dtp, NULL, fmt->error);\n+      if (format_cache_ok)\n+\tfree (dtp->format);\n       free_format_hash_table (dtp->u.p.current_unit);\n       return;\n     }"}]}