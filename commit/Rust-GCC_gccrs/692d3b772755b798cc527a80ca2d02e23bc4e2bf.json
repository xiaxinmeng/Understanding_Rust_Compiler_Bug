{"sha": "692d3b772755b798cc527a80ca2d02e23bc4e2bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkyZDNiNzcyNzU1Yjc5OGNjNTI3YTgwY2EyZDAyZTIzYmM0ZTJiZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-23T12:46:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-23T14:07:43Z"}, "message": "fix hybrid SLP discovery debug stmt issue\n\nThis properly skips debug USE_STMTs when looking for non-SLP sinks.\n\n2020-11-23  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (maybe_push_to_hybrid_worklist): Skip\n\tdebug stmts.\n\n\t* g++.dg/vect/simd-12.cc: New testcase.", "tree": {"sha": "c466a2faeb373b448d9ba6589660f774ce559bae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c466a2faeb373b448d9ba6589660f774ce559bae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/692d3b772755b798cc527a80ca2d02e23bc4e2bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692d3b772755b798cc527a80ca2d02e23bc4e2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692d3b772755b798cc527a80ca2d02e23bc4e2bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692d3b772755b798cc527a80ca2d02e23bc4e2bf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "762ca20364a590be2cb9c79c0101ccbff74b5de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762ca20364a590be2cb9c79c0101ccbff74b5de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/762ca20364a590be2cb9c79c0101ccbff74b5de1"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "a3f18d385ef1ae5a784e43d500b08a48c471a0ae", "filename": "gcc/testsuite/g++.dg/vect/simd-12.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692d3b772755b798cc527a80ca2d02e23bc4e2bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692d3b772755b798cc527a80ca2d02e23bc4e2bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-12.cc?ref=692d3b772755b798cc527a80ca2d02e23bc4e2bf", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-ffast-math -g\" } */\n+\n+template <typename> class complex;\n+template <typename _Tp> complex<_Tp> operator+(complex<_Tp>, complex<_Tp> __y) {\n+  complex<_Tp> __r;\n+  __r += __y;\n+  return __r;\n+}\n+template <typename _Tp> complex<_Tp> operator*(complex<_Tp>, complex<_Tp> __y) {\n+  complex<_Tp> __r;\n+  __r *= __y;\n+  return __r;\n+}\n+template <> class complex<double> {\n+public:\n+  void operator+=(complex __z) { _M_value += __z.__rep(); }\n+  void operator*=(complex __z) {\n+    _Complex __t = __z.__rep();\n+    _M_value *= __t;\n+  }\n+  _Complex __rep() { return _M_value; }\n+  _Complex _M_value;\n+};\n+template <typename> class Vector {\n+  void equ();\n+  complex<double> *val;\n+};\n+template <typename Number> void Vector<Number>::equ() {\n+  Number c;\n+  for (int i; i; ++i) {\n+    complex<double> __trans_tmp_2 = c * val[i];\n+    val[i] = val[i] + __trans_tmp_2;\n+  }\n+}\n+template class Vector<complex<double> >;"}, {"sha": "da3ef433161b97bd903f5c96e21174873e1e6564", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692d3b772755b798cc527a80ca2d02e23bc4e2bf/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692d3b772755b798cc527a80ca2d02e23bc4e2bf/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=692d3b772755b798cc527a80ca2d02e23bc4e2bf", "patch": "@@ -3191,6 +3191,8 @@ maybe_push_to_hybrid_worklist (vec_info *vinfo,\n       any_def = true;\n       FOR_EACH_IMM_USE_FAST (use_p, iter2, DEF_FROM_PTR (def_p))\n \t{\n+\t  if (is_gimple_debug (USE_STMT (use_p)))\n+\t    continue;\n \t  stmt_vec_info use_info = vinfo->lookup_stmt (USE_STMT (use_p));\n \t  /* An out-of loop use means this is a loop_vect sink.  */\n \t  if (!use_info)"}]}