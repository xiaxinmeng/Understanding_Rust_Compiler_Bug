{"sha": "7dceca54802cea8d83a0e27ae34987e6b0fa1997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjZWNhNTQ4MDJjZWE4ZDgzYTBlMjdhZTM0OTg3ZTZiMGZhMTk5Nw==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-07-09T06:52:31Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-07-09T06:52:31Z"}, "message": "replace all variable name ret to ok", "tree": {"sha": "cee39b24ae5945c22b580fed026bcf0a9c8a1144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cee39b24ae5945c22b580fed026bcf0a9c8a1144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dceca54802cea8d83a0e27ae34987e6b0fa1997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dceca54802cea8d83a0e27ae34987e6b0fa1997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dceca54802cea8d83a0e27ae34987e6b0fa1997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dceca54802cea8d83a0e27ae34987e6b0fa1997/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3a345f0eb13e2b00324616e4784f76fa1f48ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a345f0eb13e2b00324616e4784f76fa1f48ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a345f0eb13e2b00324616e4784f76fa1f48ee7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "099f37e8a8c11e117c4f040fce41c81152b0c6a8", "filename": "gcc/rust/lint/rust-lint-marklive.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dceca54802cea8d83a0e27ae34987e6b0fa1997/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dceca54802cea8d83a0e27ae34987e6b0fa1997/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.cc?ref=7dceca54802cea8d83a0e27ae34987e6b0fa1997", "patch": "@@ -128,8 +128,8 @@ MarkLive::visit_path_segment (HIR::PathExprSegment seg)\n   if (resolver->lookup_resolved_name (ast_node_id, &ref_node_id))\n     {\n       Resolver::Definition def;\n-      bool ret = resolver->lookup_definition (ref_node_id, &def);\n-      rust_assert (ret);\n+      bool ok = resolver->lookup_definition (ref_node_id, &def);\n+      rust_assert (ok);\n       ref_node_id = def.parent;\n     }\n   else if (!resolver->lookup_resolved_type (ast_node_id, &ref_node_id))\n@@ -158,8 +158,8 @@ MarkLive::visit (HIR::FieldAccessExpr &expr)\n       rust_error_at (expr.get_receiver_expr ()->get_locus_slow (),\n \t\t     \"unresolved type for receiver\");\n     }\n-  bool ret = receiver->get_kind () == TyTy::TypeKind::ADT;\n-  rust_assert (ret);\n+  bool ok = receiver->get_kind () == TyTy::TypeKind::ADT;\n+  rust_assert (ok);\n   TyTy::ADTType *adt = static_cast<TyTy::ADTType *> (receiver);\n \n   // get the field index\n@@ -233,14 +233,14 @@ MarkLive::find_ref_node_id (NodeId ast_node_id, NodeId &ref_node_id,\n       // these ref_node_ids will resolve to a pattern declaration but we are\n       // interested in the definition that this refers to get the parent id\n       Resolver::Definition def;\n-      bool ret = resolver->lookup_definition (ref_node_id, &def);\n-      rust_assert (ret);\n+      bool ok = resolver->lookup_definition (ref_node_id, &def);\n+      rust_assert (ok);\n       ref_node_id = def.parent;\n     }\n   else\n     {\n-      bool ret = resolver->lookup_resolved_type (ast_node_id, &ref_node_id);\n-      rust_assert (ret);\n+      bool ok = resolver->lookup_resolved_type (ast_node_id, &ref_node_id);\n+      rust_assert (ok);\n     }\n }\n "}]}