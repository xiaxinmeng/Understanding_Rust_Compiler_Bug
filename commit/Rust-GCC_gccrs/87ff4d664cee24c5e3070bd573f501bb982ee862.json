{"sha": "87ff4d664cee24c5e3070bd573f501bb982ee862", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmZjRkNjY0Y2VlMjRjNWUzMDcwYmQ1NzNmNTAxYmI5ODJlZTg2Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-01-27T17:08:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-01-27T17:08:00Z"}, "message": "re PR target/69512 (ICE when using avx with i586)\n\n2016-01-27  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/69512\n\t* config/i386/i386.md (*zext<mode>_doubleword_and): New pattern.\n\t(*zext<mode>_doubleword): Disable for TARGET_ZERO_EXTEND_WITH_AND.\n\ntestsuite/ChangeLog:\n\n2016-01-27  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/69512\n\t* gcc.target/i386/pr69512.c: New test.\n\nFrom-SVN: r232885", "tree": {"sha": "fec8d7807c8eea5c3998ffe5f0712473121306a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fec8d7807c8eea5c3998ffe5f0712473121306a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87ff4d664cee24c5e3070bd573f501bb982ee862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ff4d664cee24c5e3070bd573f501bb982ee862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87ff4d664cee24c5e3070bd573f501bb982ee862", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ff4d664cee24c5e3070bd573f501bb982ee862/comments", "author": null, "committer": null, "parents": [{"sha": "388dc9e6fd9dd096a4436b06ffbef0b93d5b4662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/388dc9e6fd9dd096a4436b06ffbef0b93d5b4662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/388dc9e6fd9dd096a4436b06ffbef0b93d5b4662"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "ea590888d418f4511eac1d6939fadca845bf23d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87ff4d664cee24c5e3070bd573f501bb982ee862", "patch": "@@ -1,3 +1,9 @@\n+2016-01-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/69512\n+\t* config/i386/i386.md (*zext<mode>_doubleword_and): New pattern.\n+\t(*zext<mode>_doubleword): Disable for TARGET_ZERO_EXTEND_WITH_AND.\n+\n 2016-01-27  Thomas Klausner  <wiz@NetBSD.org>\n \n \tPR target/68380"}, {"sha": "79c5f1a740c15aa465947451fb3f84f145bc394d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=87ff4d664cee24c5e3070bd573f501bb982ee862", "patch": "@@ -3874,10 +3874,29 @@\n   [(set_attr \"type\" \"imovx\")\n    (set_attr \"mode\" \"SI\")])\n \n+(define_insn_and_split \"*zext<mode>_doubleword_and\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=&<r>\")\n+\t(zero_extend:DI (match_operand:SWI12 1 \"nonimmediate_operand\" \"<r>m\")))]\n+  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\n+   && TARGET_ZERO_EXTEND_WITH_AND && optimize_function_for_speed_p (cfun)\"\n+  \"#\"\n+  \"&& reload_completed && GENERAL_REG_P (operands[0])\"\n+  [(set (match_dup 2) (const_int 0))]\n+{\n+  split_double_mode (DImode, &operands[0], 1, &operands[0], &operands[2]);\n+\n+  emit_move_insn (operands[0], const0_rtx);\n+\n+  gcc_assert (!TARGET_PARTIAL_REG_STALL);\n+  emit_insn (gen_movstrict<mode>\n+\t     (gen_lowpart (<MODE>mode, operands[0]), operands[1]));\n+})\n+\n (define_insn_and_split \"*zext<mode>_doubleword\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (match_operand:SWI12 1 \"nonimmediate_operand\" \"<r>m\")))]\n-  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\"\n+  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\n+   && !(TARGET_ZERO_EXTEND_WITH_AND && optimize_function_for_speed_p (cfun))\"\n   \"#\"\n   \"&& reload_completed && GENERAL_REG_P (operands[0])\"\n   [(set (match_dup 0) (zero_extend:SI (match_dup 1)))"}, {"sha": "a7b0452cc0ca4eee8bfd6acdb6bca26f178f884b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87ff4d664cee24c5e3070bd573f501bb982ee862", "patch": "@@ -1,3 +1,8 @@\n+2016-01-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/69512\n+\t* gcc.target/i386/pr69512.c: New test.\n+\n 2016-01-27  Rainer Emrich  <rainer@emrich-ebersheim.de>\n \n \tPR ada/69488\n@@ -55,7 +60,7 @@\n \t* gcc.dg/autopar/pr69110.c: New test.\n \n 2016-01-26  Abderrazek Zaafrani  <a.zaafrani@samsung.com>\n-            Sebastian Pop  <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* gcc.dg/graphite/isl-ast-op-select.c: New.\n "}, {"sha": "4147e663ef62cdda61cb966037f786a43734fa30", "filename": "gcc/testsuite/gcc.target/i386/pr69512.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69512.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ff4d664cee24c5e3070bd573f501bb982ee862/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69512.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69512.c?ref=87ff4d664cee24c5e3070bd573f501bb982ee862", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-march=i586 -mavx -O2\" } */\n+\n+extern double s1[];\n+extern double s2[];\n+extern long long e[];\n+\n+void test (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 2; i++)\n+    e[i] = !__builtin_isunordered(s1[i], s2[i]) && s1[i] != s2[i] ? -1 : 0;\n+}"}]}