{"sha": "458f12eda16ee19354ca1937daef45d79bc7ad46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4ZjEyZWRhMTZlZTE5MzU0Y2ExOTM3ZGFlZjQ1ZDc5YmM3YWQ0Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-30T09:02:21Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-30T09:02:21Z"}, "message": "Daily bump.", "tree": {"sha": "715903da0e06c0953c37bd0f5ab9f4afb286abf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/715903da0e06c0953c37bd0f5ab9f4afb286abf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458f12eda16ee19354ca1937daef45d79bc7ad46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458f12eda16ee19354ca1937daef45d79bc7ad46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458f12eda16ee19354ca1937daef45d79bc7ad46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458f12eda16ee19354ca1937daef45d79bc7ad46/comments", "author": null, "committer": null, "parents": [{"sha": "b05c4c2c5da55afb76c429453bd340fad692f195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b05c4c2c5da55afb76c429453bd340fad692f195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b05c4c2c5da55afb76c429453bd340fad692f195"}], "stats": {"total": 212, "additions": 211, "deletions": 1}, "files": [{"sha": "e3ba8c3695fca5f5a118c8ca8360541e5753cdf8", "filename": "contrib/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,16 @@\n+2020-06-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_check_commit.py: Print revision\n+\tof original_info.\n+\t* gcc-changelog/git_commit.py: Support Revert commits.\n+\n+2020-06-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_check_commit.py: Use GitInfo\n+\t* gcc-changelog/git_commit.py: Add GitInfo class.\n+\t* gcc-changelog/git_email.py: Use GitInfo class.\n+\t* gcc-changelog/git_repository.py: Likewise.\n+\n 2020-06-24  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* download_prerequisites: Support AIX and OpenBSD unames."}, {"sha": "dd6d1be1e40bd986a9fbac7f0bc009a1083a97aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,76 @@\n+2020-06-29  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* doc/extend.texi: Change references to \"future architecture\" to\n+\t\"ISA 3.1\", \"-mcpu=future\" to \"-mcpu=power10\", and remove vaguer\n+\treferences to \"future\" (because the future is now).\n+\n+2020-06-29  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (isa): Rename \"fut\" to \"p10\".\n+\n+2020-06-29  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* simplify-rtx.c (simplify_distributive_operation): New function\n+\tto un-distribute a binary operation of two binary operations.\n+\t(X & C) ^ (Y & C) to (X ^ Y) & C, when C is simple (i.e. a constant).\n+\t(simplify_binary_operation_1) <IOR, XOR, AND>: Call it from here\n+\twhen appropriate.\n+\t(test_scalar_int_ops): New function for unit self-testing\n+\tscalar integer transformations in simplify-rtx.c.\n+\t(test_scalar_ops): Call test_scalar_int_ops for each integer mode.\n+\t(simplify_rtx_c_tests): Call test_scalar_ops.\n+\n+2020-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95916\n+\t* tree-vect-slp.c (vect_schedule_slp_instance): Explicitely handle\n+\tthe case of not vectorized externals.\n+\n+2020-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h: Do not include <utility>.\n+\n+2020-06-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-ssa-ccp.c (gsi_prev_dom_bb_nondebug): Use gsi_bb\n+\tinstead of gimple_stmt_iterator::bb.\n+\t* tree-ssa-math-opts.c (insert_reciprocals): Likewise.\n+\t* tree-vectorizer.h: Likewise.\n+\n+2020-06-29  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-hsa.h (DBX_REGISTER_NUMBER): New macro.\n+\t* config/gcn/gcn-protos.h (gcn_dwarf_register_number): New prototype.\n+\t* config/gcn/gcn.c (gcn_expand_prologue): Add RTX_FRAME_RELATED_P\n+\tand REG_FRAME_RELATED_EXPR to stack and frame pointer adjustments.\n+\t(gcn_dwarf_register_number): New function.\n+\t(gcn_dwarf_register_span): New function.\n+\t(TARGET_DWARF_REGISTER_SPAN): New hook macro.\n+\n+2020-06-29  Kaipeng Zhou  <zhoukaipeng3@huawei.com>\n+\n+\tPR tree-optimization/95854\n+\t* gimple-ssa-store-merging.c (find_bswap_or_nop_1): Return NULL\n+\tif operand 1 or 2 of a BIT_FIELD_REF cannot be converted to\n+\tunsigned HOST_WIDE_INT.\n+\n+2020-06-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/sparc/sparc.c (epilogue_renumber): Remove register.\n+\t(sparc_print_operand_address): Likewise.\n+\t(sparc_type_code): Likewise.\n+\t(set_extends): Likewise.\n+\n+2020-06-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/92860\n+\t* optc-save-gen.awk: Add exceptions for arc target.\n+\n+2020-06-29  Frederik Harwath  <frederik@codesourcery.com>\n+\n+\t* doc/sourcebuild.texi: Describe globbing of the\n+\tdump file scanning commands \"suffix\" argument.\n+\n 2020-06-28  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/86568"}, {"sha": "88cb34f9be6c5f103336a854d4f45e2fff41582c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1 +1 @@\n-20200629\n+20200630"}, {"sha": "6db8f7fa7df016827893c97edd578f6615077601", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,27 @@\n+2020-06-30  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* coroutines.cc (expand_one_await_expression): Remove\n+\tcode dealing with initial suspend.\n+\t(build_actor_fn): Remove code special-casing initial\n+\tand final suspend. Handle the final suspend and marking\n+\tof the coroutine as done.\n+\t(coro_rewrite_function_body): New.\n+\t(bind_expr_find_in_subtree): Remove.\n+\t(coro_body_contains_bind_expr_p): Remove.\n+\t(morph_fn_to_coro): Split the rewrite of the original\n+\tfunction into coro_rewrite_function_body and call it.\n+\n+2020-06-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94553\n+\t* decl.c (duplicate_decls): Make sure a concept or a variable\n+\ttemplate is unique in its declarative region.\n+\n+2020-06-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95568\n+\t* pt.c (collect_ctor_idx_types): Use TREE_TYPE.\n+\n 2020-06-28  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/95711"}, {"sha": "ce29e5e6cdd7247bdbe59585cfa2092b3e218f17", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,20 @@\n+2020-06-29  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95978\n+\t* decl.c (gfc_match_data): Avoid NULL pointer dereference.\n+\n+2020-06-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/95743\n+\t* trans-decl.c (gfc_generate_function_code): Do not generate\n+\trecursion check for compiler-generated procedures.\n+\n+2020-06-29  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/71706\n+\t* trans-stmt.c (gfc_trans_sync): Do proper kind conversion in\n+\tbounds-checking code.\n+\n 2020-06-28  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95340"}, {"sha": "aca2df452027e70038056bdc6574df8528be4480", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,7 @@\n+2020-06-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2020-06-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "bfa55de8814ee38158537a271294ecb3b8c1bd36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,72 @@\n+2020-06-29  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95978\n+\t* gfortran.dg/pr95978.f90: New file.\n+\n+2020-06-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/95743\n+\t* gfortran.dg/recursive_check_16.f90: New file.\n+\n+2020-06-29  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gfortran.dg/char4-subscript.f90: Simplify regex.\n+\tAccept big endian or little endian output.\n+\n+2020-06-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94553\n+\t* g++.dg/cpp1y/pr68578.C: Adjust dg-error.\n+\t* g++.dg/cpp1y/var-templ66.C: New test.\n+\t* g++.dg/cpp2a/concepts-redecl1.C: New test.\n+\n+2020-06-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95568\n+\t* g++.dg/cpp2a/class-deduction-aggr5.C: New test.\n+\t* g++.dg/cpp2a/class-deduction-aggr6.C: New test.\n+\n+2020-06-29  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/71706\n+\t* gfortran.dg/pr71706.f90: New file.\n+\n+2020-06-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/86568\n+\t* c-c++-common/builtin-arith-overflow-1.c (generic_3, typed_3_null):\n+\tFix coding style.\n+\n+2020-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95916\n+\t* gcc.dg/vect/pr95916.c: New testcase.\n+\n+2020-06-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/86568\n+\t* c-c++-common/builtin-arith-overflow-1.c (generic_3, typed_3_null):\n+\tAdjust dg-warning.\n+\n+2020-06-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/86568\n+\t* c-c++-common/builtin-arith-overflow-1.c (generic_3, typed_3_null):\n+\tAdjust dg-warning.\n+\n+2020-06-29  Kaipeng Zhou  <zhoukaipeng3@huawei.com>\n+\n+\tPR tree-optimization/95854\n+\t* gcc.dg/pr95854.c: New test.\n+\n+2020-06-29  Frederik Harwath  <frederik@codesourcery.com>\n+\n+\t* lib/scandump.exp (glob-dump-file): New proc.\n+\t(scan-dump): Use glob-dump-file for file name expansion.\n+\t(scan-dump-times): Likewise.\n+\t(scan-dump-dem): Likewise.\n+\t(scan-dump-dem-not): Likewise.\n+\n 2020-06-28  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/86568"}, {"sha": "a9c378d65db7b03e68f60a339d631728247dce66", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f12eda16ee19354ca1937daef45d79bc7ad46/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f12eda16ee19354ca1937daef45d79bc7ad46/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=458f12eda16ee19354ca1937daef45d79bc7ad46", "patch": "@@ -1,3 +1,13 @@\n+2020-06-29  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tRevert:\n+\t2020-06-28  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\t* include/bits/basic_string.h (string(_CharT*, const _Alloc&)):\n+\tAdd a __nonnull__ attribute.\n+\t* testsuite/21_strings/basic_string/cons/char/nonnull.cc: New.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/nonnull.cc: Likewise.\n+\n 2020-06-28  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \t* include/bits/basic_string.h (string(_CharT*, const _Alloc&)):"}]}