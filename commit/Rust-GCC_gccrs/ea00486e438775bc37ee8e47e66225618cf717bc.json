{"sha": "ea00486e438775bc37ee8e47e66225618cf717bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwMDQ4NmU0Mzg3NzViYzM3ZWU4ZTQ3ZTY2MjI1NjE4Y2Y3MTdiYw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-07-14T23:04:30Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-07-14T23:04:30Z"}, "message": "unwind-dw2-fde-darwin.c (live_image_destructor): Get seen_objects and unseen_objects from the global data before calling...\n\n\t* unwind-dw2-fde-darwin.c (live_image_destructor): Get seen_objects\n\tand unseen_objects from the global data before calling\n\t__deregister_frame_info_bases.\n\t(examine_objects): Insert objects into the seen_objects list,\n\tnot unseen_objects.\n\t(_Unwind_Find_FDE): Always unlock the global object lists, even if\n\twe couldn't allocate a data structure to put in it.\n\nFrom-SVN: r69366", "tree": {"sha": "526567c3ff3e48eac43fc6e8c6692a52d75287ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/526567c3ff3e48eac43fc6e8c6692a52d75287ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea00486e438775bc37ee8e47e66225618cf717bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea00486e438775bc37ee8e47e66225618cf717bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea00486e438775bc37ee8e47e66225618cf717bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea00486e438775bc37ee8e47e66225618cf717bc/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18009d039eecc8f44b6993fa24997c99178cee5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18009d039eecc8f44b6993fa24997c99178cee5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18009d039eecc8f44b6993fa24997c99178cee5e"}], "stats": {"total": 53, "additions": 42, "deletions": 11}, "files": [{"sha": "73648e64a51e60b31f8df04fc72c7f70faa0041d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea00486e438775bc37ee8e47e66225618cf717bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea00486e438775bc37ee8e47e66225618cf717bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea00486e438775bc37ee8e47e66225618cf717bc", "patch": "@@ -1,5 +1,13 @@\n 2003-07-14  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* unwind-dw2-fde-darwin.c (live_image_destructor): Get seen_objects\n+\tand unseen_objects from the global data before calling\n+\t__deregister_frame_info_bases.\n+\t(examine_objects): Insert objects into the seen_objects list,\n+\tnot unseen_objects.\n+\t(_Unwind_Find_FDE): Always unlock the global object lists, even if\n+\twe couldn't allocate a data structure to put in it.\n+\n \t* objc/objc-act.h (CLASS_SUPER_NAME): Add a little typechecking.\n \t(TYPE_PROTOCOL_LIST): Share use of type.context with C frontend.\n \t(SET_TYPE_PROTOCOL_LIST): New."}, {"sha": "26706d337052c81e12802421482d7bc1ef5fd420", "filename": "gcc/unwind-dw2-fde-darwin.c", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea00486e438775bc37ee8e47e66225618cf717bc/gcc%2Funwind-dw2-fde-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea00486e438775bc37ee8e47e66225618cf717bc/gcc%2Funwind-dw2-fde-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde-darwin.c?ref=ea00486e438775bc37ee8e47e66225618cf717bc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+/* Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -104,8 +104,23 @@ live_image_destructor (struct live_images *image)\n {\n   if (image->object_info)\n     {\n-      /* Free any sorted arrays.  */\n-      __deregister_frame_info_bases (image->fde);\n+      struct km_object_info *the_obj_info;\n+\n+      the_obj_info =\n+\t_keymgr_get_and_lock_processwide_ptr (KEYMGR_GCC3_DW2_OBJ_LIST);\n+      if (the_obj_info)\n+\t{\n+\t  seen_objects = the_obj_info->seen_objects;\n+\t  unseen_objects = the_obj_info->unseen_objects;\n+\n+\t  /* Free any sorted arrays.  */\n+\t  __deregister_frame_info_bases (image->fde);\n+\n+\t  the_obj_info->seen_objects = seen_objects;\n+\t  the_obj_info->unseen_objects = unseen_objects;\n+\t}\n+      _keymgr_set_and_unlock_processwide_ptr (KEYMGR_GCC3_DW2_OBJ_LIST,\n+\t\t\t\t\t      the_obj_info);\n \n       free (image->object_info);\n       image->object_info = NULL;\n@@ -166,20 +181,28 @@ examine_objects (void *pc, struct dwarf_eh_bases *bases, int dont_alloc)\n \t    ob->s.b.encoding = DW_EH_PE_omit;\n \t    ob->fde_end = real_fde + sz;\n \t    \n+\t    image->fde = real_fde;\n+\t    \n+\t    result = search_object (ob, pc);\n+\t    \n \t    if (! dont_alloc)\n \t      {\n-\t\tob->next = unseen_objects;\n-\t\tunseen_objects = ob;\n-\t\t\n+\t\tstruct object **p;\n+\n \t\timage->destructor = live_image_destructor;\n \t\timage->object_info = ob;\n \t\t\n \t\timage->examined_p |= (EXAMINED_IMAGE_MASK \n \t\t\t\t      | DESTRUCTOR_MAY_BE_CALLED_LIVE);\n+\n+\t\t/* Insert the object into the classified list.  */\n+\t\tfor (p = &seen_objects; *p ; p = &(*p)->next)\n+\t\t  if ((*p)->pc_begin < ob->pc_begin)\n+\t\t    break;\n+\t\tob->next = *p;\n+\t\t*p = ob;\n \t      }\n-\t    image->fde = real_fde;\n-\t    \n-\t    result = search_object (ob, pc);\n+\n \t    if (result)\n \t      {\n \t\tint encoding;\n@@ -234,8 +257,8 @@ _Unwind_Find_FDE (void *pc, struct dwarf_eh_bases *bases)\n     {\n       the_obj_info->seen_objects = seen_objects;\n       the_obj_info->unseen_objects = unseen_objects;\n-      _keymgr_set_and_unlock_processwide_ptr (KEYMGR_GCC3_DW2_OBJ_LIST,\n-\t\t\t\t\t      the_obj_info);\n     }\n+  _keymgr_set_and_unlock_processwide_ptr (KEYMGR_GCC3_DW2_OBJ_LIST,\n+\t\t\t\t\t  the_obj_info);\n   return ret;\n }"}]}