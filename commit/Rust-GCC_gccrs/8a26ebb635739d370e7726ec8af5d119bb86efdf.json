{"sha": "8a26ebb635739d370e7726ec8af5d119bb86efdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyNmViYjYzNTczOWQzNzBlNzcyNmVjOGFmNWQxMTliYjg2ZWZkZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:33:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:33:04Z"}, "message": "Resync.\n\nFrom-SVN: r127986", "tree": {"sha": "ebaf008cf77569e88513b5bbb6300f5b5cb86296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebaf008cf77569e88513b5bbb6300f5b5cb86296"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a26ebb635739d370e7726ec8af5d119bb86efdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a26ebb635739d370e7726ec8af5d119bb86efdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a26ebb635739d370e7726ec8af5d119bb86efdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a26ebb635739d370e7726ec8af5d119bb86efdf/comments", "author": null, "committer": null, "parents": [{"sha": "7cb99df40996a599a08570d554eb8aa6a9af8c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cb99df40996a599a08570d554eb8aa6a9af8c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cb99df40996a599a08570d554eb8aa6a9af8c24"}], "stats": {"total": 194, "additions": 194, "deletions": 0}, "files": [{"sha": "7734967a129b557a1faae37e1891cea25b3c5ed9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 194, "deletions": 0, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a26ebb635739d370e7726ec8af5d119bb86efdf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a26ebb635739d370e7726ec8af5d119bb86efdf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8a26ebb635739d370e7726ec8af5d119bb86efdf", "patch": "@@ -1,3 +1,197 @@\n+2007-08-31  Vincent Celier  <celier@adacore.com>\n+\n+\tPR ada/4720\n+\n+\t* gnatchop.adb, gnatfind.adb, gnatlink.adb, gnatls.adb, \n+\tgnatname.adb, gnatxref.adb, gprep.adb, clean.adb gnatbind.adb\n+\t(Check_Version_And_Help): New procedure in package Switch to process\n+\tswitches --version and --help.\n+\tUse Check_Version_And_Help in GNAT tools\n+\n+\t* make.adb:  Ditto.\n+\t(Compile_Sources): Make sure that sources that are \"excluded\" are not\n+\tcompiled.\n+\t(Gnatmake): Do not issue -aO. to gnatbind and only issue -I- if a\n+\tproject file is used.\n+\t(Version_Switch): Remove, moved to Switch\n+\t(Help_Switch): Remove, moved to Switch\n+\t(Display_Version): Remove, moved to Switch\n+\n+\t* switch.ads, switch.adb (Check_Version_And_Help): New procedure in\n+\tpackage Switch to process switches --version and --help.\n+\t(Display_Version): New procedure\n+\n+\t* gnatvsn.ads, gnatvsn.adb (Copyright_Holder): New function.\n+\n+2007-08-31  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-tags.adb (Internal_Tag): Protect the run-time against wrong\n+\tinternal tags.\n+\n+2007-08-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb (In_Declarative_Region_Of_Subprogram_Body): New routine.\n+\t(Mark_Non_Null): If the node for which we just generated an access check\n+\tis a reference to an *in* parameter and the reference appears in the\n+\tdeclarative part of a subprogram body, mark the node as known non null.\n+\n+2007-08-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.ads, einfo.adb: New flag Is_Raised (Flag224). Update the\n+\tstructure of E_Exception to reflect the new flag.\n+\t(Is_Raised, Set_Is_Raised): New inlined routines.\n+\tUpdate the usage of available flag to reflect the addition of Is_Raised.\n+\t(Is_Raised, Set_Is_Raised): Bodies of new routines.\n+\t(Write_Entity_Flags): Write the status of flag Is_Raised.\n+\t(Is_Descendent_Of_Address): New entity flag, to simplify handling of\n+\tspurious ambiguities when integer literals appear in the context of an\n+\taddress type that is a visible integer type.\n+\n+\t* sem_ch11.adb (Analyze_Exception_Handler): Add code to warn on local\n+\texceptions never being raised.\n+\t(Analyze_Raise_Statement): When analyzing an exception, mark it as being\n+\texplicitly raised.\n+\n+2007-08-31  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch11.adb (Expand_At_End_Handler): Avoid generation of raise\n+\tstatement when compiling under restriction No_Exceptions_Proparation.\n+\n+2007-08-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Record_Init_Proc): If there is a static\n+\tinitialization aggregate for the type, generate itype references for\n+\tthetypes of its (sub)components, to prevent out-of-scope errors in gigi.\n+\n+2007-08-31  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch8.adb (Expand_N_Package_Renaming_Declaration): In the case of a\n+\tlibrary-level package renaming, pass the declaration associated with\n+\tthe renaming's special debug variable to Qualify_Entity_Names to ensure\n+\tthat its encoded name is properly qualified.\n+\n+\t* exp_dbug.adb (Qualify_All_Entity_Names): Check for a variable entity\n+\toccurring in the list of entities to qualify, and do not attempt to\n+\ttraverse an entity list in that case. Variables associated with\n+`\tlibrary-level package renamings can now occur in the table.\n+\n+\t* exp_dbug.ads: Revise documentation of the encoding for renaming\n+\tdeclarations.\n+\n+2007-08-31  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* layout.adb (Layout_Type): Use Underlying_Type to determine whether an\n+\taccess type points to an unconstrained array.\n+\n+2007-08-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+        * restrict.adb, namet.adb, par-util.adb: Remove redundant type\n+\tconversion.\n+\n+\t* sem_res.adb (Resolve_Qualified_Expression): Add machinery to detect\n+\tsimple redundant qualifications. The check is performed whenever the\n+\texpression is a non-overloaded identifier.\n+\t(Resolve_Type_Conversion): Enchance the redundant type conversion check\n+\tto include loop parameters.\n+\t(Valid_Conversion): Avoid generation of spurious error message.\n+\n+2007-08-31  Bob Duff  <duff@adacore.com>\n+\n+\t* par-ch4.adb (P_Simple_Expression): Fold long sequences of\n+\tconcatenations of string literals into a single literal, in order to\n+\tavoid very deep recursion in the front end, which was causing stack\n+\toverflow.\n+\n+\t* sem_eval.adb (Eval_Concatenation): If the left operand is the empty\n+\tstring, and the right operand is a string literal (the case of \"\" &\n+\t\"...\"), optimize by avoiding copying the right operand -- just use the\n+\tvalue of the right operand directly.\n+\n+\t* stringt.adb (Store_String_Chars): Optimize by growing the\n+\tString_Chars table all at once, rather than appending characters one by\n+\tone.\n+\t(Write_String_Table_Entry): If the string to be printed is very long,\n+\tjust print the first few characters, followed by the length. Otherwise,\n+\tdoing \"pn(n)\" in the debugger can take an extremely long time.\n+\n+\t* sem_prag.adb (Process_Interface_Name): Replace loop doing\n+\tStore_String_Char with Store_String_Chars.\n+\n+2007-08-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: Add new attribute Excluded_Source_Files\n+\n+\t* prj-nmsc.adb: Use attribute Excluded_Source_Files before\n+\tLocally_Removed_Files.\n+\n+\t* snames.ads, snames.adb: New standard name Excluded_Source_Files\n+\n+2007-08-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Subunit_Context): When analyzing context\n+\tclauses of subunits, ignore limited_with_clauses that are illegal and\n+\thave not been fully analyzed.\n+\n+2007-08-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb: The predicate Is_Descendent_Of_Address is now an entity\n+\tflag, for effiency. It is called when analyzing arithmetic operators\n+\tand also for actuals in calls that are universal_integers. The flag is\n+\tset for the predefined type address, and for any type or subtype\n+\tderived from it.\n+\n+\t* sem_ch4.adb (Analyze_One_Call): Reject an actual that is a\n+\tUniversal_Integer, when the formal is a descendent of address and the\n+\tcall appears in user code.\n+\t(Analyze_Selected_Component): if the prefix is a private extension, the\n+\ttag component is visible.\n+\n+\t* sem_util.ads, sem_util.adb: Remove Is_Descendent_Of_Address, now an\n+\tentity flag.\n+\n+2007-08-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-fileio.adb (Open): Normalize file name to lower case in non-case\n+\tsensitive file name systems to avoid unexpected mismatch in Vista.\n+\n+2007-08-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* tempdir.adb: On VMS, take into account GNUTMPDIR before TMPDIR\n+\n+2007-08-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* symbols-vms.adb (Initialize): Read symbol files with continuation\n+\tlines\n+\t(Finalize): If symbol is long, split the line\n+\n+2007-08-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* fmap.ads: Minor comment updates\n+\n+2007-08-31  GNAT Script  <nobody@adacore.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n+2007-08-31  Bob Duff  <duff@adacore.com>\n+\n+\t* sinfo.ads: Minor comment fix.\n+\n+2007-08-31  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* stand.ads: (Standard_Debug_Renaming_Type): Make comment consistent\n+\twith implementation.\n+\tDocumentation cleanup only.\n+\n+2007-08-31  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* vms_data.ads: Add new qualifier /STMT_NAME_ON_NEW_LINE for the new\n+\tgnatpp '--separate-stmt-name' option.\n+\tAdd new qualifier /USE_ON_NEW_LIN for the new gnatpp '--use-on-new-line'\n+\toption.\n+\n+\t* gnat_ugn.texi: Add description for the new gnatpp\n+\t'--separate-stmt-name' and '--use-on-new-line' options.\n+\n 2007-08-31  Ben Elliston  <bje@au.ibm.com>\n \n \t* Makefile.in (LIBGNAT_TARGET_PAIRS): Use system-linux-ppc64.ads"}]}