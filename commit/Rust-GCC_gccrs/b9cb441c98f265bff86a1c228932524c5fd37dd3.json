{"sha": "b9cb441c98f265bff86a1c228932524c5fd37dd3", "node_id": "C_kwDOANBUbNoAKGI5Y2I0NDFjOThmMjY1YmZmODZhMWMyMjg5MzI1MjRjNWZkMzdkZDM", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-09-02T12:45:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-09-07T17:37:10Z"}, "message": "c++: diagnostic for template placeholder in parm [PR106793]\n\nTalking about the declarator form doesn't help when fixing that would get\nyou a different error about placeholders not being valid in a parameter.\n\nThis also adds a <> fixit, which isn't enough for most templates, but is a\nstart.\n\n\tPR c++/106793\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (grokdeclarator): Improve placeholder diagnostics.\n\t* parser.cc (cp_parser_type_id_1): Add fixit.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp23/auto-array2.C: Adjust.\n\t* g++.dg/cpp1z/class-deduction113.C: New test.", "tree": {"sha": "9c3d4abb46ab967530bb814cf861843cd32788b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c3d4abb46ab967530bb814cf861843cd32788b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9cb441c98f265bff86a1c228932524c5fd37dd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cb441c98f265bff86a1c228932524c5fd37dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cb441c98f265bff86a1c228932524c5fd37dd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cb441c98f265bff86a1c228932524c5fd37dd3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "756ccf97cf976011b3800a055bfb9fc3a2c943c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756ccf97cf976011b3800a055bfb9fc3a2c943c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756ccf97cf976011b3800a055bfb9fc3a2c943c6"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "4665a29a24d896b5da518892c04a4a8897b8c861", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=b9cb441c98f265bff86a1c228932524c5fd37dd3", "patch": "@@ -12407,14 +12407,20 @@ grokdeclarator (const cp_declarator *declarator,\n \n   if (cxx_dialect >= cxx17 && type && is_auto (type)\n       && innermost_code != cdk_function\n+      /* Placeholder in parm gets a better error below.  */\n+      && !(decl_context == PARM || decl_context == CATCHPARM)\n       && id_declarator && declarator != id_declarator)\n     if (tree tmpl = CLASS_PLACEHOLDER_TEMPLATE (type))\n-    {\n-      error_at (typespec_loc, \"template placeholder type %qT must be followed \"\n-\t\t\"by a simple declarator-id\", type);\n-      inform (DECL_SOURCE_LOCATION (tmpl), \"%qD declared here\", tmpl);\n-      type = error_mark_node;\n-    }\n+      {\n+\tauto_diagnostic_group g;\n+\tgcc_rich_location richloc (typespec_loc);\n+\trichloc.add_fixit_insert_after (\"<>\");\n+\terror_at (&richloc, \"missing template argument list after %qE; \"\n+\t\t  \"for deduction, template placeholder must be followed \"\n+\t\t  \"by a simple declarator-id\", tmpl);\n+\tinform (DECL_SOURCE_LOCATION (tmpl), \"%qD declared here\", tmpl);\n+\ttype = error_mark_node;\n+      }\n \n   staticp = 0;\n   inlinep = decl_spec_seq_has_spec_p (declspecs, ds_inline);\n@@ -12892,6 +12898,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  {\n \t\t    if (!funcdecl_p || !dguide_name_p (unqualified_id))\n \t\t      {\n+\t\t\tauto_diagnostic_group g;\n \t\t\terror_at (typespec_loc, \"deduced class \"\n \t\t\t\t  \"type %qD in function return type\",\n \t\t\t\t  DECL_NAME (tmpl));\n@@ -13837,12 +13844,15 @@ grokdeclarator (const cp_declarator *declarator,\n \t      else if (tree c = CLASS_PLACEHOLDER_TEMPLATE (auto_node))\n \t\t{\n \t\t  auto_diagnostic_group g;\n-\t\t  error_at (typespec_loc,\n-\t\t\t    \"class template placeholder %qE not permitted \"\n-\t\t\t    \"in this context\", c);\n+\t\t  gcc_rich_location richloc (typespec_loc);\n+\t\t  richloc.add_fixit_insert_after (\"<>\");\n+\t\t  error_at (&richloc,\n+\t\t\t    \"missing template argument list after %qE; template \"\n+\t\t\t    \"placeholder not permitted in parameter\", c);\n \t\t  if (decl_context == PARM && cxx_dialect >= cxx20)\n-\t\t    inform (typespec_loc, \"use %<auto%> for an \"\n+\t\t    inform (typespec_loc, \"or use %<auto%> for an \"\n \t\t\t    \"abbreviated function template\");\n+\t\t  inform (DECL_SOURCE_LOCATION (c), \"%qD declared here\", c);\n \t\t}\n \t      else\n \t\terror_at (typespec_loc,"}, {"sha": "841ba6ed997bfef75bcccc8cbf12892d9676159d", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=b9cb441c98f265bff86a1c228932524c5fd37dd3", "patch": "@@ -24397,8 +24397,11 @@ cp_parser_type_id_1 (cp_parser *parser, cp_parser_flags flags,\n \t\tlocation_t loc = type_specifier_seq.locations[ds_type_spec];\n \t\tif (tree tmpl = CLASS_PLACEHOLDER_TEMPLATE (auto_node))\n \t\t  {\n-\t\t    error_at (loc, \"missing template arguments after %qT\",\n-\t\t\t      auto_node);\n+\t\t    auto_diagnostic_group g;\n+\t\t    gcc_rich_location richloc (loc);\n+\t\t    richloc.add_fixit_insert_after (\"<>\");\n+\t\t    error_at (&richloc, \"missing template arguments after %qE\",\n+\t\t\t      tmpl);\n \t\t    inform (DECL_SOURCE_LOCATION (tmpl), \"%qD declared here\",\n \t\t\t    tmpl);\n \t\t  }"}, {"sha": "8f6908e2746c5c2338d8ce4d2b28f44be0f1cfa5", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction113.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction113.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction113.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction113.C?ref=b9cb441c98f265bff86a1c228932524c5fd37dd3", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/106793\n+\n+template <class T> struct A { A(T); };\n+template <class T> void f(A *a); // { dg-error \"placeholder.*parameter\" \"\" { target c++17 } }\n+// { dg-error \"\" \"\" { target c++14_down } .-1 }"}, {"sha": "3fc2eae3ceabb4746e8800eadf4dde23d38bf916", "filename": "gcc/testsuite/g++.dg/cpp23/auto-array2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fauto-array2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cb441c98f265bff86a1c228932524c5fd37dd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fauto-array2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fauto-array2.C?ref=b9cb441c98f265bff86a1c228932524c5fd37dd3", "patch": "@@ -5,7 +5,7 @@ template<class T> struct A { A(); };\n A<int> a[3];\n auto (*p)[3] = &a;\n A<int> (*p2)[3] = &a;\n-A (*p3)[3] = &a; // { dg-error \"template placeholder type\" }\n+A (*p3)[3] = &a; // { dg-error \"template placeholder\" }\n auto (&r)[3] = a;\n A<int> (&r2)[3] = a;\n-A (&r3)[3] = a; // { dg-error \"template placeholder type\" }\n+A (&r3)[3] = a; // { dg-error \"template placeholder\" }"}]}