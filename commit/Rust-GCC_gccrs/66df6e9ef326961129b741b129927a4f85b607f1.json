{"sha": "66df6e9ef326961129b741b129927a4f85b607f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkZjZlOWVmMzI2OTYxMTI5Yjc0MWIxMjk5MjdhNGY4NWI2MDdmMQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-03-06T10:46:32Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-06T10:46:32Z"}, "message": "vms-c.c (vms_pragma_nomember_alignment): Handle octaword.\n\n2012-03-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* config/vms/vms-c.c (vms_pragma_nomember_alignment): Handle\n\toctaword.\n\t(external_model_kind): Improve documentation.\n\t(vms_pragma_extern_model): Handle relaxed_redef.\n\t(vms_c_register_pragma): Allow expansion for nomember_alignment.\n\nFrom-SVN: r184986", "tree": {"sha": "c401da0b513cc351e43e00605cafd0a7c50e2a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c401da0b513cc351e43e00605cafd0a7c50e2a8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66df6e9ef326961129b741b129927a4f85b607f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66df6e9ef326961129b741b129927a4f85b607f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66df6e9ef326961129b741b129927a4f85b607f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66df6e9ef326961129b741b129927a4f85b607f1/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "837fd3b0639a773c9966d71822895c27549ee9fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837fd3b0639a773c9966d71822895c27549ee9fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837fd3b0639a773c9966d71822895c27549ee9fe"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "4f629fa7df08dd16d9ba14e6d0550bbda0a8e025", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66df6e9ef326961129b741b129927a4f85b607f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66df6e9ef326961129b741b129927a4f85b607f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66df6e9ef326961129b741b129927a4f85b607f1", "patch": "@@ -1,3 +1,11 @@\n+2012-03-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/vms/vms-c.c (vms_pragma_nomember_alignment): Handle\n+\toctaword.\n+\t(external_model_kind): Improve documentation.\n+\t(vms_pragma_extern_model): Handle relaxed_redef.\n+\t(vms_c_register_pragma): Allow expansion for nomember_alignment.\n+\n 2012-03-06  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* doc/invoke.texi (AVR Options): -mmcu=: Document the XMEGA cores."}, {"sha": "4a2d19c40d110551335d585b5485a8422433adf1", "filename": "gcc/config/vms/vms-c.c", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66df6e9ef326961129b741b129927a4f85b607f1/gcc%2Fconfig%2Fvms%2Fvms-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66df6e9ef326961129b741b129927a4f85b607f1/gcc%2Fconfig%2Fvms%2Fvms-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-c.c?ref=66df6e9ef326961129b741b129927a4f85b607f1", "patch": "@@ -125,6 +125,8 @@ vms_pragma_nomember_alignment (cpp_reader *pfile ATTRIBUTE_UNUSED)\n         maximum_field_alignment = 4 * BITS_PER_UNIT;\n       else if (strcmp (arg, \"quadword\") == 0)\n         maximum_field_alignment = 8 * BITS_PER_UNIT;\n+      else if (strcmp (arg, \"octaword\") == 0)\n+        maximum_field_alignment = 16 * BITS_PER_UNIT;\n       else\n         {\n           error (\"unhandled alignment for '#pragma nomember_alignment'\");\n@@ -145,17 +147,33 @@ vms_pragma_nomember_alignment (cpp_reader *pfile ATTRIBUTE_UNUSED)\n     }\n }\n \n-/* The 'extern model' for public data.  */\n+/* The 'extern model' for public data.  This drives how the following\n+   declarations are handled:\n+   1) extern int name;\n+   2) int name;\n+   3) int name = 5;\n+   See below for the behaviour as implemented by the native compiler.\n+*/\n \n enum extern_model_kind\n {\n-  /* Create one overlaid section per variable.  */\n+  /* Create one overlaid section per variable.  All the above declarations (1,\n+      2 and 3) are handled the same way: they create an overlaid section named\n+      NAME (and initialized only for 3).  No global symbol is created.\n+      This is the VAX C behavior.  */\n   extern_model_common_block,\n \n-  /* Like unix: multiple not-initialized declarations are allowed.  */\n+  /* Like unix: multiple not-initialized declarations are allowed.\n+     Only one initialized definition (case 3) is allows, but multiple\n+     uninitialize definition (case 2) are allowed.\n+     For case 2, this creates both a section named NAME and a global symbol.\n+     For case 3, this creates a conditional global symbol defenition and a\n+     conditional section definition.\n+     This is the traditional UNIX C behavior.  */\n   extern_model_relaxed_refdef,\n \n-  /* Like -fno-common.  */\n+  /* Like -fno-common.  Only one definition (cases 2 and 3) are allowed.\n+     This is the ANSI-C model.  */\n   extern_model_strict_refdef,\n \n   /* Declarations creates symbols without storage.  */\n@@ -192,6 +210,8 @@ vms_pragma_extern_model (cpp_reader *pfile ATTRIBUTE_UNUSED)\n     saved_extern_model = current_extern_model;\n   else if (strcmp (arg, \"restore\") == 0)\n     current_extern_model = saved_extern_model;\n+  else if (strcmp (arg, \"relaxed_refdef\") == 0)\n+    current_extern_model = extern_model_relaxed_refdef;\n   else if (strcmp (arg, \"strict_refdef\") == 0)\n     current_extern_model = extern_model_strict_refdef;\n   else if (strcmp (arg, \"common_block\") == 0)\n@@ -274,10 +294,10 @@ vms_c_register_pragma (void)\n   c_register_pragma (NULL, \"standard\", vms_pragma_standard);\n   c_register_pragma (NULL, \"__member_alignment\", vms_pragma_member_alignment);\n   c_register_pragma (NULL, \"member_alignment\", vms_pragma_member_alignment);\n-  c_register_pragma (NULL, \"__nomember_alignment\",\n-                     vms_pragma_nomember_alignment);\n-  c_register_pragma (NULL, \"nomember_alignment\",\n-                     vms_pragma_nomember_alignment);\n+  c_register_pragma_with_expansion (NULL, \"__nomember_alignment\",\n+                                    vms_pragma_nomember_alignment);\n+  c_register_pragma_with_expansion (NULL, \"nomember_alignment\",\n+                                    vms_pragma_nomember_alignment);\n   c_register_pragma (NULL, \"__extern_model\", vms_pragma_extern_model);\n   c_register_pragma (NULL, \"extern_model\", vms_pragma_extern_model);\n   c_register_pragma (NULL, \"__message\", vms_pragma_message);"}]}