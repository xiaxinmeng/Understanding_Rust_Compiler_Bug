{"sha": "1e52538d2b430a26032d736079518ecad3bcca44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1MjUzOGQyYjQzMGEyNjAzMmQ3MzYwNzk1MThlY2FkM2JjY2E0NA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-28T00:16:42Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-28T00:16:42Z"}, "message": "Daily bump.", "tree": {"sha": "eb9aa42b8009ca6af1b00a9bb4d62da920fd56cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb9aa42b8009ca6af1b00a9bb4d62da920fd56cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e52538d2b430a26032d736079518ecad3bcca44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e52538d2b430a26032d736079518ecad3bcca44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e52538d2b430a26032d736079518ecad3bcca44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e52538d2b430a26032d736079518ecad3bcca44/comments", "author": null, "committer": null, "parents": [{"sha": "771fd4aef999903cb928bb89f730c61a8af6e4f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771fd4aef999903cb928bb89f730c61a8af6e4f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/771fd4aef999903cb928bb89f730c61a8af6e4f8"}], "stats": {"total": 146, "additions": 145, "deletions": 1}, "files": [{"sha": "fbc6ec7bc7148be71e15c7dfdc453118c857fd28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e52538d2b430a26032d736079518ecad3bcca44", "patch": "@@ -1,3 +1,91 @@\n+2021-08-27  Jeff Law  <jlaw@localhost.localdomain>\n+\n+\t* config/h8300/bitfield.md (cstore<mode>4): Remove expander.\n+\t* config/h8300/h8300.c (h8300_expand_branch): Remove function.\n+\t* config/h8300/h8300-protos.h (h8300_expadn_branch): Remove prototype.\n+\t* config/h8300/h8300.md (eqne): New code iterator.\n+\t(geultu, geultu_to_c): Similarly.\n+\t* config/h8300/testcompare.md (cstore<mode>4): Dummy expander.\n+\t(store_c_<mode>, store_c_i_<mode>): New define_insn_and_splits\n+\t(cmp<mode>_c): New pattern\n+\n+2021-08-27  Jeff Law  <jlaw@localhost.localdomain>\n+\n+\t* tree-ssa-dom.c (reduce_vector_comparison_to_scalar_comparison): New\n+\tfunction.\n+\t(dom_opt_dom_walker::optimize_stmt): Use it.\n+\n+2021-08-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (finalize_ctors): Add a section-start linker-\n+\tvisible symbol.\n+\t(finalize_dtors): Likewise.\n+\t* config/darwin.h (MIN_LD64_INIT_TERM_START_LABELS): New.\n+\n+2021-08-27  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-call.c (rs6000-builtins.h): New #include.\n+\t(rs6000_init_builtins): Call rs6000_init_generated_builtins.  Skip the\n+\told initialization logic when new builtins are enabled.\n+\t* config/rs6000/rs6000-gen-builtins.c (write_decls): Rename\n+\trs6000_autoinit_builtins to rs6000_init_generated_builtins.\n+\t(write_init_file): Likewise.\n+\n+2021-08-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* configure.ac (darwin2[[0-9]]* | darwin19*): Alter use of\n+\tgcc_GAS_CHECK_FEATURE to remove an extraneous parameter.\n+\t(amdgcn-* | gcn-*) Likewise.\n+\n+2021-08-27  Anthony Sharp  <anthonysharp15@gmail.com>\n+\n+\t* symbol-summary.h: Added missing template keyword.\n+\n+2021-08-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45178\n+\t* tree-ssa-dce.c (find_obviously_necessary_stmts): For\n+\tinfinite loops without exit do not mark control dependent\n+\tedges of the latch necessary.\n+\n+2021-08-27  konglin1  <lingling.kong@intel.com>\n+\n+\tPR target/101472\n+\t* config/i386/sse.md: (<avx512>scattersi<mode>): Add mask operand to\n+\tUNSPEC_VSIBADDR.\n+\t(<avx512>scattersi<mode>): Likewise.\n+\t(*avx512f_scattersi<VI48F:mode>): Merge mask operand to set_dest.\n+\t(*avx512f_scatterdi<VI48F:mode>): Likewise\n+\n+2021-08-27  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_builtin_md_vectorized_function): Add\n+\tsupport for built-in functions MISC_BUILTIN_DIVWE, MISC_BUILTIN_DIVWEU,\n+\tMISC_BUILTIN_DIVDE, MISC_BUILTIN_DIVDEU, P10_BUILTIN_CFUGED,\n+\tP10_BUILTIN_CNTLZDM, P10_BUILTIN_CNTTZDM, P10_BUILTIN_PDEPD and\n+\tP10_BUILTIN_PEXTD on Power10.\n+\n+2021-08-27  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-call.c (builtin_function_type): Add unsigned\n+\tsignedness for some Power10 bifs.\n+\n+2021-08-27  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\tPR target/102068\n+\t* config/rs6000/rs6000.c (rs6000_adjust_field_align): Use\n+\tcomputed alignment if the entire struct has attribute packed.\n+\n+2021-08-27  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/98167\n+\tPR target/43147\n+\t* config/i386/i386.c (ix86_gimple_fold_builtin): Fold\n+\tIX86_BUILTIN_SHUFPD512, IX86_BUILTIN_SHUFPS512,\n+\tIX86_BUILTIN_SHUFPD256\uff0c IX86_BUILTIN_SHUFPS\uff0c\n+\tIX86_BUILTIN_SHUFPS256.\n+\t(ix86_masked_all_ones): New function.\n+\n 2021-08-26  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*btr<mode>_1): Call force_reg unconditionally."}, {"sha": "31d17e81be1a81a959ba7374e759989be8098a6a", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1e52538d2b430a26032d736079518ecad3bcca44", "patch": "@@ -1 +1 @@\n-20210827\n+20210828"}, {"sha": "81372f9e9478784a40b487747582325cd73aa8a2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1e52538d2b430a26032d736079518ecad3bcca44", "patch": "@@ -1,3 +1,8 @@\n+2021-08-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck2.c (build_x_arrow): Do set TREE_TYPE when operand is\n+\ta dependent pointer.\n+\n 2021-08-25  Andrew Pinski  <apinski@marvell.com>\n \n \tPR c++/66590"}, {"sha": "03f9dcb4f91db7472ae5f1573f53b0491459cec8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e52538d2b430a26032d736079518ecad3bcca44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e52538d2b430a26032d736079518ecad3bcca44", "patch": "@@ -1,3 +1,46 @@\n+2021-08-27  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/float128-call.c: Update comments.\n+\n+2021-08-27  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/float128-call.c: Fix test for IEEE 128-bit\n+\tlong double and power10.\n+\n+2021-08-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* lib/target-supports.exp: Exclude cctools assembler based on\n+\tGAS 1.38.\n+\n+2021-08-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45178\n+\t* gcc.dg/tree-ssa/ssa-dce-3.c: Adjust testcase.\n+\n+2021-08-27  konglin1  <lingling.kong@intel.com>\n+\n+\tPR target/101472\n+\t* gcc.target/i386/avx512f-pr101472.c: New test.\n+\t* gcc.target/i386/avx512vl-pr101472.c: New test.\n+\n+2021-08-27  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/dive-vectorize-1.c: New test.\n+\t* gcc.target/powerpc/dive-vectorize-1.h: New test.\n+\t* gcc.target/powerpc/dive-vectorize-2.c: New test.\n+\t* gcc.target/powerpc/dive-vectorize-2.h: New test.\n+\t* gcc.target/powerpc/dive-vectorize-run-1.c: New test.\n+\t* gcc.target/powerpc/dive-vectorize-run-2.c: New test.\n+\t* gcc.target/powerpc/p10-bifs-vectorize-1.c: New test.\n+\t* gcc.target/powerpc/p10-bifs-vectorize-1.h: New test.\n+\t* gcc.target/powerpc/p10-bifs-vectorize-run-1.c: New test.\n+\n+2021-08-27  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/avx512f-vshufpd-1.c: Adjust testcase.\n+\t* gcc.target/i386/avx512f-vshufps-1.c: Adjust testcase.\n+\t* gcc.target/i386/pr43147.c: New test.\n+\n 2021-08-26  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* gcc.dg/tree-ssa/ssa-ccp-41.c: New test case."}, {"sha": "18a4186a04c0d9ae4b827e737a3457638bbbe35e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e52538d2b430a26032d736079518ecad3bcca44/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e52538d2b430a26032d736079518ecad3bcca44/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1e52538d2b430a26032d736079518ecad3bcca44", "patch": "@@ -1,3 +1,11 @@\n+2021-08-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Makefile.am: Use configured libm availability.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Use libtool macro to find libm availability.\n+\t* libgfortran.spec.in: Use configured libm availability.\n+\n 2021-08-10  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR libfortran/101305"}]}