{"sha": "643d4cd6a10f6d202011eb3005c65994219932f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQzZDRjZDZhMTBmNmQyMDIwMTFlYjMwMDVjNjU5OTQyMTk5MzJmMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-02-09T20:05:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-02-09T20:05:51Z"}, "message": "re PR c++/42370 ([C++0x][lambda] in a void function: \"Warning: control reaches end of non-void function\")\n\n\tPR c++/42370\n\t* decl2.c (change_return_type): New fn.\n\t* semantics.c (apply_lambda_return_type): Use it.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r156634", "tree": {"sha": "26a08d06bcdc1e2c8c582ce22c772d0c2726683d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26a08d06bcdc1e2c8c582ce22c772d0c2726683d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/643d4cd6a10f6d202011eb3005c65994219932f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643d4cd6a10f6d202011eb3005c65994219932f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643d4cd6a10f6d202011eb3005c65994219932f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643d4cd6a10f6d202011eb3005c65994219932f3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b16be5f2c5a0f9aaf398c55c2a3802d878433731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16be5f2c5a0f9aaf398c55c2a3802d878433731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16be5f2c5a0f9aaf398c55c2a3802d878433731"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "42c0e9f44aad4487ab7c799e03db463e17ec3ade", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=643d4cd6a10f6d202011eb3005c65994219932f3", "patch": "@@ -1,3 +1,10 @@\n+2010-02-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42370\n+\t* decl2.c (change_return_type): New fn.\n+\t* semantics.c (apply_lambda_return_type): Use it.\n+\t* cp-tree.h: Declare it.\n+\n 2010-02-05  Richard Guenther  <rguenther@suse.de>\n \n \t* Make-lang.in (cp/cp-lang.o): Depend on gt-cp-cp-lang.h."}, {"sha": "27c820b8ed137aca576cd075ae96bb9ddd369f56", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=643d4cd6a10f6d202011eb3005c65994219932f3", "patch": "@@ -4732,6 +4732,7 @@ extern tree cxx_maybe_build_cleanup\t\t(tree);\n /* in decl2.c */\n extern bool check_java_method\t\t\t(tree);\n extern tree build_memfn_type\t\t\t(tree, tree, cp_cv_quals);\n+extern tree change_return_type\t\t\t(tree, tree);\n extern void maybe_retrofit_in_chrg\t\t(tree);\n extern void maybe_make_one_only\t\t\t(tree);\n extern bool vague_linkage_fn_p\t\t\t(tree);"}, {"sha": "c5b6e874ed2bf74da22b8942b49b07c1d5eac227", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=643d4cd6a10f6d202011eb3005c65994219932f3", "patch": "@@ -139,6 +139,33 @@ build_memfn_type (tree fntype, tree ctype, cp_cv_quals quals)\n   return fntype;\n }\n \n+/* Return a variant of FNTYPE, a FUNCTION_TYPE or METHOD_TYPE, with its\n+   return type changed to NEW_RET.  */\n+\n+tree\n+change_return_type (tree new_ret, tree fntype)\n+{\n+  tree newtype;\n+  tree args = TYPE_ARG_TYPES (fntype);\n+  tree raises = TYPE_RAISES_EXCEPTIONS (fntype);\n+  tree attrs = TYPE_ATTRIBUTES (fntype);\n+\n+  if (same_type_p (new_ret, TREE_TYPE (fntype)))\n+    return fntype;\n+\n+  if (TREE_CODE (fntype) == FUNCTION_TYPE)\n+    newtype = build_function_type (new_ret, args);\n+  else\n+    newtype = build_method_type_directly (TYPE_METHOD_BASETYPE (fntype),\n+\t\t\t\t\t  new_ret, TREE_CHAIN (args));\n+  if (raises)\n+    newtype = build_exception_variant (newtype, raises);\n+  if (attrs)\n+    newtype = cp_build_type_attribute_variant (newtype, attrs);\n+\n+  return newtype;\n+}\n+\n /* Build a PARM_DECL with NAME and TYPE, and set DECL_ARG_TYPE\n    appropriately.  */\n "}, {"sha": "39085be19d41ae1ddb6021d8ef7f2e3582369e1a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=643d4cd6a10f6d202011eb3005c65994219932f3", "patch": "@@ -5584,7 +5584,7 @@ apply_lambda_return_type (tree lambda, tree return_type)\n \n   /* TREE_TYPE (FUNCTION_DECL) == METHOD_TYPE\n      TREE_TYPE (METHOD_TYPE)   == return-type  */\n-  TREE_TYPE (TREE_TYPE (fco)) = return_type;\n+  TREE_TYPE (fco) = change_return_type (return_type, TREE_TYPE (fco));\n \n   result = DECL_RESULT (fco);\n   if (result == NULL_TREE)"}, {"sha": "b91829c5b9cdc9c2dc53f221090a3c68ddce9451", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=643d4cd6a10f6d202011eb3005c65994219932f3", "patch": "@@ -1,3 +1,8 @@\n+2010-02-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42370\n+\t* g++.dg/cpp0x/lambda/lambda-warn2.C: New.\n+\n 2010-02-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41869"}, {"sha": "ce5e7c4503a57c6090ad076045c6d9cad4f1cc3e", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-warn2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-warn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d4cd6a10f6d202011eb3005c65994219932f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-warn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-warn2.C?ref=643d4cd6a10f6d202011eb3005c65994219932f3", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/42370\n+// { dg-options \"-std=c++0x -Wall\" }\n+\n+void foo()\n+{\n+  []{ return 0; }();\n+} // { dg-bogus \"no return statement\" }"}]}