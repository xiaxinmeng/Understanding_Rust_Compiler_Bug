{"sha": "6d61f1bd1c42a23426b65a64cedccb34ad962935", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ2MWYxYmQxYzQyYTIzNDI2YjY1YTY0Y2VkY2NiMzRhZDk2MjkzNQ==", "commit": {"author": {"name": "Akim Demaille", "email": "akim@epita.fr", "date": "2002-06-13T16:46:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-06-13T16:46:01Z"}, "message": "parse.y (class_declaration, [...]): Make sure all their rules have an action...\n\n2002-06-13  Akim Demaille  <akim@epita.fr>\n\n\t* parse.y (class_declaration, interface_declaration): Make sure\n\tall their rules have an action, in order to avoid meaningless `$$\n\t= $1' and their type clashes.\n\nFrom-SVN: r54592", "tree": {"sha": "38dce2e69496c92ef7bb906ed3210d8a1a44147e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38dce2e69496c92ef7bb906ed3210d8a1a44147e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d61f1bd1c42a23426b65a64cedccb34ad962935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d61f1bd1c42a23426b65a64cedccb34ad962935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d61f1bd1c42a23426b65a64cedccb34ad962935", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d61f1bd1c42a23426b65a64cedccb34ad962935/comments", "author": {"login": "akimd", "id": 232441, "node_id": "MDQ6VXNlcjIzMjQ0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/232441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akimd", "html_url": "https://github.com/akimd", "followers_url": "https://api.github.com/users/akimd/followers", "following_url": "https://api.github.com/users/akimd/following{/other_user}", "gists_url": "https://api.github.com/users/akimd/gists{/gist_id}", "starred_url": "https://api.github.com/users/akimd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akimd/subscriptions", "organizations_url": "https://api.github.com/users/akimd/orgs", "repos_url": "https://api.github.com/users/akimd/repos", "events_url": "https://api.github.com/users/akimd/events{/privacy}", "received_events_url": "https://api.github.com/users/akimd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aaae0bb930930f5652beb0add3bc9fa5150ab0ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaae0bb930930f5652beb0add3bc9fa5150ab0ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaae0bb930930f5652beb0add3bc9fa5150ab0ab"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "cfc62d0157250bf059d6c3308afae9fc59fe8b96", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d61f1bd1c42a23426b65a64cedccb34ad962935/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d61f1bd1c42a23426b65a64cedccb34ad962935/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6d61f1bd1c42a23426b65a64cedccb34ad962935", "patch": "@@ -1,3 +1,9 @@\n+2002-06-13  Akim Demaille  <akim@epita.fr>\n+\n+\t* parse.y (class_declaration, interface_declaration): Make sure\n+\tall their rules have an action, in order to avoid meaningless `$$\n+\t= $1' and their type clashes.\n+\n 2002-06-11  Tom Tromey  <tromey@redhat.com>\n \n \t* jcf-write.c (generate_classfile): Use FIELD_SYNTHETIC."}, {"sha": "7f373846aabd1cc37f99f26335bc6b089ce31ad2", "filename": "gcc/java/parse.y", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d61f1bd1c42a23426b65a64cedccb34ad962935/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d61f1bd1c42a23426b65a64cedccb34ad962935/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=6d61f1bd1c42a23426b65a64cedccb34ad962935", "patch": "@@ -579,7 +579,7 @@ static GTY(()) tree src_parse_roots[1];\n \t\t\tanonymous_class_creation trap_overflow_corner_case\n %type    <node>         return_statement break_statement continue_statement\n \n-%type    <operator>     ASSIGN_TK      MULT_ASSIGN_TK  DIV_ASSIGN_TK  \n+%type    <operator>     ASSIGN_TK      MULT_ASSIGN_TK  DIV_ASSIGN_TK\n %type    <operator>     REM_ASSIGN_TK  PLUS_ASSIGN_TK  MINUS_ASSIGN_TK\n %type    <operator>     LS_ASSIGN_TK   SRS_ASSIGN_TK   ZRS_ASSIGN_TK\n %type    <operator>     AND_ASSIGN_TK  XOR_ASSIGN_TK   OR_ASSIGN_TK\n@@ -846,20 +846,22 @@ class_declaration:\n \tmodifiers CLASS_TK identifier super interfaces\n \t\t{ create_class ($1, $3, $4, $5); }\n \tclass_body\n+\t\t{;}\n |\tCLASS_TK identifier super interfaces\n \t\t{ create_class (0, $2, $3, $4); }\n \tclass_body\n+\t\t{;}\n |\tmodifiers CLASS_TK error\n-\t\t{yyerror (\"Missing class name\"); RECOVER;}\n+\t\t{ yyerror (\"Missing class name\"); RECOVER; }\n |\tCLASS_TK error\n-\t\t{yyerror (\"Missing class name\"); RECOVER;}\n+\t\t{ yyerror (\"Missing class name\"); RECOVER; }\n |       CLASS_TK identifier error\n \t\t{\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\");\n \t\t  DRECOVER(class1);\n \t\t}\n |       modifiers CLASS_TK identifier error\n-\t\t{if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;}\n+\t\t{ if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER; }\n ;\n \n super:\n@@ -1279,19 +1281,23 @@ interface_declaration:\n \tINTERFACE_TK identifier\n \t\t{ create_interface (0, $2, NULL_TREE); }\n \tinterface_body\n+\t\t{ ; }\n |\tmodifiers INTERFACE_TK identifier\n \t\t{ create_interface ($1, $3, NULL_TREE); }\n \tinterface_body\n+\t\t{ ; }\n |\tINTERFACE_TK identifier extends_interfaces\n \t\t{ create_interface (0, $2, $3);\t}\n \tinterface_body\n+\t\t{ ; }\n |\tmodifiers INTERFACE_TK identifier extends_interfaces\n \t\t{ create_interface ($1, $3, $4); }\n \tinterface_body\n+\t\t{ ; }\n |\tINTERFACE_TK identifier error\n-\t\t{yyerror (\"'{' expected\"); RECOVER;}\n+\t\t{ yyerror (\"'{' expected\"); RECOVER; }\n |\tmodifiers INTERFACE_TK identifier error\n-\t\t{yyerror (\"'{' expected\"); RECOVER;}\n+\t\t{ yyerror (\"'{' expected\"); RECOVER; }\n ;\n \n extends_interfaces:"}]}