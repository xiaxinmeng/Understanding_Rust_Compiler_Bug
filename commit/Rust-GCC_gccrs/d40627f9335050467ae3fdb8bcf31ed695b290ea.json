{"sha": "d40627f9335050467ae3fdb8bcf31ed695b290ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwNjI3ZjkzMzUwNTA0NjdhZTNmZGI4YmNmMzFlZDY5NWIyOTBlYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-19T10:10:54Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-19T10:10:54Z"}, "message": "Move negative unique_ptr tests to new file\n\n\t* testsuite/20_util/unique_ptr/cons/cv_qual.cc: Move negative tests\n\tto new file.\n\t* testsuite/20_util/unique_ptr/cons/cv_qual_neg.cc: New file.  Fix\n\ttest for incompatible deleters to not also use incompatible types.\n\tAdd tests for incompatible array types.\n\nFrom-SVN: r241332", "tree": {"sha": "13791c9eada7c818ac1ab1a2bb80f678cf145447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13791c9eada7c818ac1ab1a2bb80f678cf145447"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d40627f9335050467ae3fdb8bcf31ed695b290ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d40627f9335050467ae3fdb8bcf31ed695b290ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d40627f9335050467ae3fdb8bcf31ed695b290ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d40627f9335050467ae3fdb8bcf31ed695b290ea/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84870b6bb2691cc4031b8408b41bbb6583526c0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84870b6bb2691cc4031b8408b41bbb6583526c0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84870b6bb2691cc4031b8408b41bbb6583526c0f"}], "stats": {"total": 104, "additions": 78, "deletions": 26}, "files": [{"sha": "f2a143ea1066c14aab726a0e5a3d9729323e8d50", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d40627f9335050467ae3fdb8bcf31ed695b290ea/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d40627f9335050467ae3fdb8bcf31ed695b290ea/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d40627f9335050467ae3fdb8bcf31ed695b290ea", "patch": "@@ -1,5 +1,11 @@\n 2016-10-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/20_util/unique_ptr/cons/cv_qual.cc: Move negative tests\n+\tto new file.\n+\t* testsuite/20_util/unique_ptr/cons/cv_qual_neg.cc: New file.  Fix\n+\ttest for incompatible deleters to not also use incompatible types.\n+\tAdd tests for incompatible array types.\n+\n \t* include/experimental/bits/shared_ptr.h\n \t(__shared_ptr<__libfund_v1<_Tp, false>, _Lp>::_Compatible): Just use\n \tis_convertible for non-array specialization."}, {"sha": "8d6847b76c07d3aec7662484e800cc7b4e70a472", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/cv_qual.cc", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d40627f9335050467ae3fdb8bcf31ed695b290ea/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fcv_qual.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d40627f9335050467ae3fdb8bcf31ed695b290ea/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fcv_qual.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fcv_qual.cc?ref=d40627f9335050467ae3fdb8bcf31ed695b290ea", "patch": "@@ -99,30 +99,4 @@ test07()\n   std::unique_ptr<const A[]> cA2((A*)p);\n   std::unique_ptr<volatile A[]> vA2((A*)p);\n   std::unique_ptr<const volatile A[]> cvA2((A*)p);\n-  // Disallow conversions from user-defined pointer-like types\n-  // for the array version\n-  std::unique_ptr<A[]> upA3(p); // { dg-error \"no matching function\" }\n-  std::unique_ptr<const A[]> cA3(p); // { dg-error \"no matching function\" }\n-  std::unique_ptr<volatile A[]> vA3(p); // { dg-error \"no matching function\" }\n-  std::unique_ptr<const volatile A[]> cvA3(p); // { dg-error \"no matching function\" }\n-  // { dg-error \"no type\" \"\" { target *-*-* } 446 }\n }\n-\n-template<typename T>\n-struct deleter\n-{\n-  deleter() = default;\n-  template<typename U>\n-    deleter(const deleter<U>) { }\n-  typedef T pointer;\n-  void operator()(T) const { }\n-};\n-\n-void\n-test08()\n-{\n-  // Disallow conversions from non-assignable deleter\n-  std::unique_ptr<B[], deleter<A_pointer>> p;\n-  std::unique_ptr<A[], deleter<A*>> upA(std::move(p)); // { dg-error \"no matching function\" }\n-}\n-"}, {"sha": "d744c1b70135781d2e6190c4251e13d29d67bf03", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/cv_qual_neg.cc", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d40627f9335050467ae3fdb8bcf31ed695b290ea/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fcv_qual_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d40627f9335050467ae3fdb8bcf31ed695b290ea/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fcv_qual_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fcv_qual_neg.cc?ref=d40627f9335050467ae3fdb8bcf31ed695b290ea", "patch": "@@ -0,0 +1,72 @@\n+// { dg-do compile { target c++11 } }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.7.1 Class template unique_ptr [unique.ptr]\n+\n+#include <memory>\n+\n+struct A { virtual ~A() = default; };\n+\n+struct B : A { };\n+\n+// Construction from objects with different cv-qualification\n+\n+struct A_pointer { operator A*() const { return nullptr; } };\n+\n+void\n+test07()\n+{\n+  A_pointer p;\n+  // Disallow conversions from user-defined pointer-like types\n+  // for the array version\n+  std::unique_ptr<A[]> upA3(p); // { dg-error \"no matching function\" }\n+  std::unique_ptr<const A[]> cA3(p); // { dg-error \"no matching function\" }\n+  std::unique_ptr<volatile A[]> vA3(p); // { dg-error \"no matching function\" }\n+  std::unique_ptr<const volatile A[]> cvA3(p); // { dg-error \"no matching function\" }\n+  // { dg-error \"no type\" \"\" { target *-*-* } 446 }\n+}\n+\n+template<typename T>\n+struct deleter\n+{\n+  deleter() = default;\n+  template<typename U>\n+    deleter(const deleter<U>) { }\n+  typedef T pointer;\n+  void operator()(T) const { }\n+};\n+\n+void\n+test08()\n+{\n+  // Disallow conversions from non-assignable deleter\n+  std::unique_ptr<A[], deleter<A_pointer>> p;\n+  std::unique_ptr<A[], deleter<A*>> upA(std::move(p)); // { dg-error \"no matching function\" }\n+}\n+\n+void\n+test011()\n+{\n+  // Disallow conversions between different array types.\n+  std::unique_ptr<B[]> upB;\n+\n+  std::unique_ptr<const A[]> cA(std::move(upB));  // { dg-error \"no matching function\" }\n+  std::unique_ptr<volatile A[]> vA(std::move(upB)); // { dg-error \"no matching function\" }\n+  std::unique_ptr<const volatile A[]> cvA(std::move(upB)); // { dg-error \"no matching function\" }\n+}"}]}