{"sha": "49e58846cfcf8e0fab50e43aa82901a5c74653c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllNTg4NDZjZmNmOGUwZmFiNTBlNDNhYTgyOTAxYTVjNzQ2NTNjNA==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2003-07-21T02:24:09Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2003-07-21T02:24:09Z"}, "message": "AbstractGraphicsState.java (clone): Handle CloneNotSupportedException.\n\n2003-07-20  Anthony Green  <green@redhat.com>\n\n\t* gnu/awt/j2d/AbstractGraphicsState.java (clone): Handle\n\tCloneNotSupportedException.\n\t* gnu/gcj/xlib/WindowAttributes.java (clone): Ditto.\n\t* gnu/gcj/xlib/WMSizeHints.java (clone): Ditto.\n\t* gnu/gcj/xlib/GC.java (clone): Ditto.\n\t* gnu/awt/xlib/XGraphics.java (clone): Ditto.\n\t* gnu/awt/j2d/Graphics2DImpl.java (clone): Ditto.\n\n\t* gnu/awt/xlib/XEventLoop.java (postNextEvent): Remove unreachable\n\thandler.\n\t* gnu/gcj/runtime/NameFinder.java (NameFinder): Ditto.\n\nFrom-SVN: r69623", "tree": {"sha": "1fdfb3ea2ff0fa36614620b8a5da39c2d9743870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fdfb3ea2ff0fa36614620b8a5da39c2d9743870"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e58846cfcf8e0fab50e43aa82901a5c74653c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e58846cfcf8e0fab50e43aa82901a5c74653c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e58846cfcf8e0fab50e43aa82901a5c74653c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e58846cfcf8e0fab50e43aa82901a5c74653c4/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ec880749fee2531a664bcbb3812930a9b2ee95c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec880749fee2531a664bcbb3812930a9b2ee95c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec880749fee2531a664bcbb3812930a9b2ee95c"}], "stats": {"total": 159, "additions": 102, "deletions": 57}, "files": [{"sha": "6e2c4922de61b7ef063009138126b86061cccae6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -1,3 +1,17 @@\n+2003-07-20  Anthony Green  <green@redhat.com>\n+\n+\t* gnu/awt/j2d/AbstractGraphicsState.java (clone): Handle\n+\tCloneNotSupportedException.\n+\t* gnu/gcj/xlib/WindowAttributes.java (clone): Ditto.\n+\t* gnu/gcj/xlib/WMSizeHints.java (clone): Ditto.\n+\t* gnu/gcj/xlib/GC.java (clone): Ditto.\n+\t* gnu/awt/xlib/XGraphics.java (clone): Ditto.\n+\t* gnu/awt/j2d/Graphics2DImpl.java (clone): Ditto.\n+\n+\t* gnu/awt/xlib/XEventLoop.java (postNextEvent): Remove unreachable\n+\thandler.\n+\t* gnu/gcj/runtime/NameFinder.java (NameFinder): Ditto.\n+\n 2003-07-20  Steve Pribyl <steve@netfuel.com.>\n \n \t* gnu/gcj/runtime/natSharedLibLoader.cc (init): `libname' now a"}, {"sha": "038bc9c6c7d985539f4276985c629de677da372d", "filename": "libjava/gnu/awt/j2d/AbstractGraphicsState.java", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fj2d%2FAbstractGraphicsState.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fj2d%2FAbstractGraphicsState.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fj2d%2FAbstractGraphicsState.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -128,6 +128,14 @@ public abstract boolean drawImage(Image image, int x, int y,\n \n   public Object clone ()\n   {\n-    return super.clone ();\n+    try\n+      {\n+\treturn super.clone ();\n+      }\n+    catch (CloneNotSupportedException ex)\n+      {\n+\t// This should never happen.\n+\tthrow new InternalError ();\n+      }\n   }\n }"}, {"sha": "dd46e7fe410f3e9e178eec4f6da713cfe43ef5e9", "filename": "libjava/gnu/awt/j2d/Graphics2DImpl.java", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fj2d%2FGraphics2DImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fj2d%2FGraphics2DImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fj2d%2FGraphics2DImpl.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -105,12 +105,20 @@ public void setState(AbstractGraphicsState state)\n     \n   public Object clone()\n   {\n-    Graphics2DImpl gfxCopy = (Graphics2DImpl) super.clone();\n-    AbstractGraphicsState stateCopy =\n-      (AbstractGraphicsState) state.clone();\n-    gfxCopy.setState(stateCopy);\n-    \n-    return gfxCopy;\n+    try\n+      {\n+\tGraphics2DImpl gfxCopy = (Graphics2DImpl) super.clone();\n+\tAbstractGraphicsState stateCopy =\n+\t  (AbstractGraphicsState) state.clone();\n+\tgfxCopy.setState(stateCopy);\n+\t\n+\treturn gfxCopy;\n+      }\n+    catch (CloneNotSupportedException ex)\n+      {\n+\t// This should never happen.\n+\tthrow new InternalError ();\n+      }\n   }\n \n "}, {"sha": "ad5e963437a107f4ff4c6a69b242d174e9a14c05", "filename": "libjava/gnu/awt/xlib/XEventLoop.java", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -48,17 +48,8 @@ public void run()\n \n   void postNextEvent()\n   {\n-    try\n-      {\n-\tAWTEvent evt = getNextEvent();\n-\tqueue.postEvent(evt);\n-\t\n-      }\n-    catch (InterruptedException ie)\n-      {\n-\t// FIXME: what now?\n-\tSystem.err.println(ie);\n-      }\n+    AWTEvent evt = getNextEvent();\n+    queue.postEvent(evt);\n   }\n     \n   /** get next event. Will block until events become available. */"}, {"sha": "b8614023377d0428156717430dc92ed6e56f4ab5", "filename": "libjava/gnu/awt/xlib/XGraphics.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphics.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -46,10 +46,18 @@ public XRaster(WritableRaster raster, XImage ximage, ColorModel cm)\n \n   public Object clone()\n   {\n-    XGraphics gfxCopy = (XGraphics) super.clone();\n-    gfxCopy.context = context.create();\n-    \n-    return gfxCopy;\n+    try\n+      {\n+\tXGraphics gfxCopy = (XGraphics) super.clone();\n+\tgfxCopy.context = context.create();\n+\t\n+\treturn gfxCopy;\n+      }\n+    catch (CloneNotSupportedException ex)\n+      {\n+\t// This should never happen.\n+\tthrow new InternalError ();\n+      }\n   }\n \n   public void dispose()"}, {"sha": "0c3583683900bfca22266c01051f6273e09e7b88", "filename": "libjava/gnu/gcj/runtime/NameFinder.java", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -154,18 +154,10 @@ public NameFinder()\n \n \tif (addr2line != null)\n \t  {\n-\t    try\n-\t      {\n-\t\taddr2lineIn = new BufferedReader\n-\t\t\t(new InputStreamReader(addr2line.getInputStream()));\n-\t\taddr2lineOut = new BufferedWriter\n-\t\t\t(new OutputStreamWriter(addr2line.getOutputStream()));\n-\t      }\n-\t    catch (IOException ioe)\n-\t      {  \n-\t\taddr2line.destroy();\n-\t\taddr2line = null;\n-\t      }\n+\t    addr2lineIn = new BufferedReader\n+\t      (new InputStreamReader(addr2line.getInputStream()));\n+\t    addr2lineOut = new BufferedWriter\n+\t      (new OutputStreamWriter(addr2line.getOutputStream()));\n \t  }\n       }\n   }"}, {"sha": "b7eb0b682f4d210ed336527352ba5b6d2dcb7c1d", "filename": "libjava/gnu/gcj/xlib/GC.java", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fxlib%2FGC.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fxlib%2FGC.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FGC.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -36,15 +36,23 @@ protected GC(Drawable target)\n    */\n   public Object clone()\n   {\n-    GC gcClone = target.getGCFromCache ();\n-    if (gcClone==null)\n-    {\n-      gcClone = (GC) super.clone();\n-      gcClone.structure = null;\n-    }\n-    gcClone.initStructure(this);\n-    gcClone.updateClip();\n-    return gcClone;\n+    try\n+      {\n+\tGC gcClone = target.getGCFromCache ();\n+\tif (gcClone==null)\n+\t  {\n+\t    gcClone = (GC) super.clone();\n+\t    gcClone.structure = null;\n+\t  }\n+\tgcClone.initStructure(this);\n+\tgcClone.updateClip();\n+\treturn gcClone;\n+      } \n+    catch (CloneNotSupportedException ex)\n+      {\n+\t// This should never happen.\n+\tthrow new InternalError ();\n+      }\n   }\n \n   private native void initStructure(GC copyFrom);"}, {"sha": "c0b198c58a704ae453079a9c169a3b8c12978252", "filename": "libjava/gnu/gcj/xlib/WMSizeHints.java", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FWMSizeHints.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -27,12 +27,20 @@ public WMSizeHints()\n   protected native void finalize();\n \n   public Object clone() {\n-    WMSizeHints hints = (WMSizeHints) super.clone();\n-    // In case of an exception before the stucture is copied.\n-    hints.structure = null;\n-\n-    hints.init(this);\n-    return hints;\n+    try\n+      {\n+\tWMSizeHints hints = (WMSizeHints) super.clone();\n+\t// In case of an exception before the stucture is copied.\n+\thints.structure = null;\n+\t\n+\thints.init(this);\n+\treturn hints;\n+      }\n+    catch (CloneNotSupportedException ex)\n+      {\n+\t// This should never happen.\n+\tthrow new InternalError ();\n+      }\n   }\n \n   public native void applyNormalHints(Window window);"}, {"sha": "23be37d6363ae47f48a2f42edf980b87603f13ce", "filename": "libjava/gnu/gcj/xlib/WindowAttributes.java", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e58846cfcf8e0fab50e43aa82901a5c74653c4/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FWindowAttributes.java?ref=49e58846cfcf8e0fab50e43aa82901a5c74653c4", "patch": "@@ -43,15 +43,23 @@ public WindowAttributes(Window from)\n     \n   public Object clone()\n   {\n-    WindowAttributes attributes = (WindowAttributes) super.clone();\n-    // In case of an exception before the stucture is copied.\n-    attributes.in  = null;\n-    attributes.out = null;\n-    \n-    // FIXME: do anything else?\n+    try\n+      {\n+\tWindowAttributes attributes = (WindowAttributes) super.clone();\n+\t// In case of an exception before the stucture is copied.\n+\tattributes.in  = null;\n+\tattributes.out = null;\n+\t\n+\t// FIXME: do anything else?\n \t\n-    attributes.init(this);\n-    return attributes;\n+\tattributes.init(this);\n+\treturn attributes;\n+      }\n+    catch (CloneNotSupportedException ex)\n+      {\n+\t// This should never happen.\n+\tthrow new InternalError ();\n+      }\n   }\n \n   public native void setBackground(long pixel);"}]}