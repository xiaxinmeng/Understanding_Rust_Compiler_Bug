{"sha": "2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY3Mjk0ZjIzZTg3YzRlMGE0OGU1MDgxNGFiN2JiOWE0YTc1NmE5Zg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-02-10T00:30:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:50:53Z"}, "message": "[Ada] Ada_2020: shared variable control aspects on formal derived types\n\n2020-06-08  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* par-ch12.adb (P_Formal_Derived_Type_Definition): Handle\n\tproperly formal derived types that include aspect\n\tspecifications, so that the \"with\" keyword appears twice in the\n\tformal type declaration.\n\t* sem_ch13.adb (Has_Generic_Parent): Return true if the type\n\titself is a generic formal.", "tree": {"sha": "683b4dc1ab0ef4073de87628ba97e5659266bdec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/683b4dc1ab0ef4073de87628ba97e5659266bdec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8472d81ea00dc16a55b55a21ed34499390604941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8472d81ea00dc16a55b55a21ed34499390604941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8472d81ea00dc16a55b55a21ed34499390604941"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "c53f7cb83d8dc7da27f986b1d167d3a6023e9dce", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f", "patch": "@@ -972,8 +972,14 @@ package body Ch12 is\n \n       if Token = Tok_With then\n \n-         if Ada_Version >= Ada_2020 and Token /= Tok_Private then\n+         if Ada_Version >= Ada_2020 and not Next_Token_Is (Tok_Private) then\n+\n             --  Formal type has aspect specifications, parsed later.\n+            --  Otherwise this is a formal derived type. Note that it may\n+            --  also include later aspect specifications, as in:\n+\n+            --    type DT is new T with private with atomic;\n+\n             return Def_Node;\n \n          else"}, {"sha": "b0b673fe230fe457055177fc05c85c69a23cd674", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2f7294f23e87c4e0a48e50814ab7bb9a4a756a9f", "patch": "@@ -13027,7 +13027,7 @@ package body Sem_Ch13 is\n \n    function Rep_Item_Too_Early (T : Entity_Id; N : Node_Id) return Boolean is\n       function Has_Generic_Parent (E : Entity_Id) return Boolean;\n-      --  Return True if any ancestor is a generic type\n+      --  Return True if R or any ancestor is a generic type\n \n       ------------------------\n       -- Has_Generic_Parent --\n@@ -13037,6 +13037,10 @@ package body Sem_Ch13 is\n          Ancestor_Type : Entity_Id := Etype (E);\n \n       begin\n+         if Is_Generic_Type (E) then\n+            return True;\n+         end if;\n+\n          while Present (Ancestor_Type)\n            and then not Is_Generic_Type (Ancestor_Type)\n            and then Etype (Ancestor_Type) /= Ancestor_Type"}]}