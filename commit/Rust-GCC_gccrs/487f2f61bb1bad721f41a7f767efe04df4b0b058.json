{"sha": "487f2f61bb1bad721f41a7f767efe04df4b0b058", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3ZjJmNjFiYjFiYWQ3MjFmNDFhN2Y3NjdlZmUwNGRmNGIwYjA1OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-06-15T20:53:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-06-15T20:53:54Z"}, "message": "re PR c/86093 (volatile ignored on pointer in C)\n\n\tPR c/86093\n\t* c-typeck.c (pointer_diff): Cast both pointers to unqualified types\n\tbefore doing POINTER_DIFF_EXPR.\n\n\t* c-c++-common/pr86093.c: New test.\n\nFrom-SVN: r261663", "tree": {"sha": "931ee4adff13dafe3bfa8dd9c958ae91481cc4c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931ee4adff13dafe3bfa8dd9c958ae91481cc4c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/487f2f61bb1bad721f41a7f767efe04df4b0b058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487f2f61bb1bad721f41a7f767efe04df4b0b058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/487f2f61bb1bad721f41a7f767efe04df4b0b058", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487f2f61bb1bad721f41a7f767efe04df4b0b058/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da8ea71e3733ba9c5f70a84cea9cafea6b0126b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8ea71e3733ba9c5f70a84cea9cafea6b0126b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8ea71e3733ba9c5f70a84cea9cafea6b0126b0"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "89e6d1373b4176897564a05aa6bdc65823352aaf", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=487f2f61bb1bad721f41a7f767efe04df4b0b058", "patch": "@@ -1,3 +1,9 @@\n+2018-06-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/86093\n+\t* c-typeck.c (pointer_diff): Cast both pointers to unqualified types\n+\tbefore doing POINTER_DIFF_EXPR.\n+\n 2018-06-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/85318"}, {"sha": "5e2a2836d6dae9132942403e624c6c02ade9a770", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=487f2f61bb1bad721f41a7f767efe04df4b0b058", "patch": "@@ -3840,7 +3840,12 @@ pointer_diff (location_t loc, tree op0, tree op1, tree *instrument_expr)\n     op0 = build_binary_op (loc, MINUS_EXPR, convert (inttype, op0),\n \t\t\t   convert (inttype, op1), false);\n   else\n-    op0 = build2_loc (loc, POINTER_DIFF_EXPR, inttype, op0, op1);\n+    {\n+      /* Cast away qualifiers.  */\n+      op0 = convert (c_common_type (TREE_TYPE (op0), TREE_TYPE (op0)), op0);\n+      op1 = convert (c_common_type (TREE_TYPE (op1), TREE_TYPE (op1)), op1);\n+      op0 = build2_loc (loc, POINTER_DIFF_EXPR, inttype, op0, op1);\n+    }\n \n   /* This generates an error if op1 is pointer to incomplete type.  */\n   if (!COMPLETE_OR_VOID_TYPE_P (TREE_TYPE (TREE_TYPE (orig_op1))))"}, {"sha": "03fc2a0f309e0b8f4e48164d57d9d22d3181d7cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=487f2f61bb1bad721f41a7f767efe04df4b0b058", "patch": "@@ -1,5 +1,8 @@\n 2018-06-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/86093\n+\t* c-c++-common/pr86093.c: New test.\n+\n \tPR middle-end/85878\n \t* gfortran.fortran-torture/compile/pr85878.f90: New test.\n "}, {"sha": "06afbd60dba2fb7d316c28761fa94b6fbb1ba4eb", "filename": "gcc/testsuite/c-c++-common/pr86093.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr86093.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487f2f61bb1bad721f41a7f767efe04df4b0b058/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr86093.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr86093.c?ref=487f2f61bb1bad721f41a7f767efe04df4b0b058", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/86093 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-not \"return 0;\" \"optimized\" } } */\n+\n+char *volatile p;\n+\n+__PTRDIFF_TYPE__\n+foo (void)\n+{\n+  return p - p;\n+}"}]}