{"sha": "efe44c60eb50355fe2c87d0765b137a7f886d2fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlNDRjNjBlYjUwMzU1ZmUyYzg3ZDA3NjViMTM3YTdmODg2ZDJmYQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-04-02T02:07:22Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-04-02T02:07:22Z"}, "message": "exception (__verbose_terminate_handler): Point to docs.\n\n2002-04-01  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* libsupc++/exception (__verbose_terminate_handler):  Point to docs.\n\t* docs/doxygen/doxygroups.cc:  Doxygen hooks for abi::__cxa_demangle.\n\t* docs/html/18_support/howto.html:  Document the demangler.\n\t* docs/html/17_intro/howto.html:  And link to it.\n\n\t* docs/doxygen/mainpage.html:  Describe user-vs-maintainer docs.\n\t* docs/doxygen/run_doxygen:  Print user-vs-maintainer.\n\nFrom-SVN: r51730", "tree": {"sha": "ebb016f14c2486b31257b6dfef4e84895d124eab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebb016f14c2486b31257b6dfef4e84895d124eab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efe44c60eb50355fe2c87d0765b137a7f886d2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe44c60eb50355fe2c87d0765b137a7f886d2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe44c60eb50355fe2c87d0765b137a7f886d2fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe44c60eb50355fe2c87d0765b137a7f886d2fa/comments", "author": null, "committer": null, "parents": [{"sha": "b88a94c6034309e1ac64fc4c71db44f5dc474b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88a94c6034309e1ac64fc4c71db44f5dc474b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88a94c6034309e1ac64fc4c71db44f5dc474b18"}], "stats": {"total": 177, "additions": 167, "deletions": 10}, "files": [{"sha": "179b742289ad4b48053b401dcd2d9787557f36a8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -1,3 +1,13 @@\n+2002-04-01  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* libsupc++/exception (__verbose_terminate_handler):  Point to docs.\n+\t* docs/doxygen/doxygroups.cc:  Doxygen hooks for abi::__cxa_demangle.\n+\t* docs/html/18_support/howto.html:  Document the demangler.\n+\t* docs/html/17_intro/howto.html:  And link to it.\n+\n+\t* docs/doxygen/mainpage.html:  Describe user-vs-maintainer docs.\n+\t* docs/doxygen/run_doxygen:  Print user-vs-maintainer.\n+\n 2002-04-01  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* config/linker-map.gnu:  Export __verbose_terminate_handler."}, {"sha": "da71879e8e5bfdeb0ae488527776bf0655e415ca", "filename": "libstdc++-v3/docs/doxygen/doxygroups.cc", "status": "modified", "additions": 70, "deletions": 1, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -1,4 +1,3 @@\n-\n /*\n    Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n    See license.html for license.\n@@ -7,6 +6,11 @@\n    source headers themselves.  It is a \".cc\" file for the sole cheesy reason\n    that it triggers many different text editors into doing Nice Things when\n    typing comments.  However, it is mentioned nowhere except the *cfg.in files.\n+\n+   Some actual code (declarations) is exposed here, but no compiler ever\n+   sees it.  The decls must be visible to doxygen, and sometimes their real\n+   declarations are not visible, or not visible in a way we want.\n+\n    Pieces separated by '// //' lines will usually not be presented to the\n    user on the same page.\n */\n@@ -112,4 +116,69 @@ All associative containers must meet certain requirements, summarized in\n */\n \n // // // // // // // // // // // // // // // // // // // // // // // //\n+/** @namespace abi\n+ *  @brief The cross-vendor C++ Application Binary Interface.\n+ *\n+ *  A brief overview of an ABI is given in the libstdc++-v3 FAQ, question\n+ *  5.8 (you may have a copy of the FAQ locally, or you can view the online\n+ *  version at http://gcc.gnu.org/onlinedocs/libstdc++/faq/index.html#5_8).\n+ *\n+ *  GCC subscribes to a relatively-new cross-vendor ABI for C++, sometimes\n+ *  called the IA64 ABI because it happens to be the native ABI for that\n+ *  platform.  It is summarized at http://www.codesourcery.com/cxx-abi/\n+ *  along with the current specification.\n+ *\n+ *  For users of GCC 3.x, entry points are available in <cxxabi.h>, which notes,\n+ *  <em>\"It is not normally necessary for user programs to include this header,\n+ *  or use the entry points directly.  However, this header is available\n+ *  should that be needed.\"</em>\n+*/\n+\n+namespace abi {\n+/**\n+@brief New ABI-mandated entry point in the C++ runtime library for demangling.\n+\n+@param mangled_name A NUL-terminated character string containing the name\n+                    to be demangled.\n+\n+@param output_buffer A region of memory, allocated with malloc, of\n+                     @a *length bytes, into which the demangled name\n+                     is stored.  If @a output_buffer is not long enough,\n+                     it is expanded using realloc.  @a output_buffer may\n+                     instead be NULL; in that case, the demangled name is\n+                     placed in a region of memory allocated with malloc.\n+\n+@param length If @a length is non-NULL, the length of the buffer containing\n+              the demangled name is placed in @a *length.\n+\n+@param status @a *status is set to one of the following values:\n+              -   0: The demangling operation succeeded.\n+              -  -1: A memory allocation failiure occurred.\n+              -  -2: @a mangled_name is not a valid name under the C++ ABI\n+                     mangling rules.\n+              -  -3: One of the arguments is invalid.\n+\n+@return A pointer to the start of the NUL-terminated demangled name, or NULL\n+        if the demangling fails.  The caller is responsible for deallocating\n+        this memory using @c free.\n+\n+\n+The demagling is performed using the C++ ABI mangling rules, with\n+GNU extensions.  For example, this function is used\n+in __gnu_cxx::__verbose_terminate_handler.  See\n+http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#5 for other\n+examples of use.\n+\n+@note The same demangling functionality is available via libiberty \n+(@c <libiberty/demangle.h> and @c libiberty.a) in GCC 3.1 and later, but that\n+requires explicit installation (@c --enable-install-libiberty) and uses a\n+different API, although the ABI is unchanged.\n+*/\n+char* __cxa_demangle (const char* mangled_name, char* output_buffer,\n+                      size_t* length, int* status);\n+} // namespace abi\n+\n+// // // // // // // // // // // // // // // // // // // // // // // //\n+\n+// vim:et:noai:\n "}, {"sha": "ecfa6490782e638a01d5f51f273f84869c966911", "filename": "libstdc++-v3/docs/doxygen/mainpage.html", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -25,7 +25,7 @@ <h1>libstdc++-v3 Source Documentation</h1>\n \n <h2> Documentation Overview </h2>\n \n-<p class=\"smallertext\">Generated 2002-03-27.</p>\n+<p class=\"smallertext\">@LEVEL@-level docs, generated @DATE@.</p>\n \n <p>There are two types of documentation for libstdc++-v3.  One is the\n    distribution documentation, which can be read online at\n@@ -35,7 +35,14 @@ <h2> Documentation Overview </h2>\n </p>\n \n <p>The other type is the source documentation, of which this is the first page.\n-   Here are quick links to the pages which we seem to use the most; a full\n+   Both &quot;user-level&quot; and &quot;maintainer-level&quot; source\n+   documentation is produced:  user-level docs are for the users of this\n+   library.  The maint-level docs are for those interested in the underlying\n+   workings of the library; they include all the user-level docs plus\n+   additional notes and additional classes/functions/etc.\n+</p>\n+\n+<p>Here are quick links to the pages which we seem to use the most; a full\n    index is at the bottom:\n    <!-- Keep this in sync with below. -->\n    <ul>\n@@ -48,10 +55,10 @@ <h2> Documentation Overview </h2>\n \n <h2> Generating this file </h2>\n <p>These HTML pages are automatically generated, along with the man pages.\n-   The Makefile rule <code> 'make\n-   doxygen' </code> in the libstdc++-v3 build directory generates these pages\n-   using a tool called, appropriately enough, Doxygen.  To learn more about\n-   Doxygen, take a look at\n+   The Makefile rules <code> 'make doxygen' </code> and\n+   <code> 'make doxygen-maint' </code> in the libstdc++-v3 build directory\n+   generates these pages using a tool called, appropriately enough, Doxygen.\n+   To learn more about Doxygen, take a look at\n    <a href=\"http://www.doxygen.org/\">\n    <!-- snagged from the generated page -->\n    <img src=\"doxygen.gif\" alt=\"the Doxygen homepage\""}, {"sha": "92cb882e253df38ba7d9470d7373657b7810ebe4", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -95,6 +95,7 @@ outdir=unset\n do_html=no\n do_man=no\n enabled_sections=\n+DATEtext=`date '+%Y-%m-%d'`\n \n parse_options $*\n find_doxygen\n@@ -107,9 +108,11 @@ fi\n \n case x\"$mode\" in\n     xuser)           do_html=yes\n+                     LEVELtext='User'\n                      ;;\n     xmaint)          do_html=yes\n                      enabled_sections=maint\n+                     LEVELtext='Maintainer'\n                      ;;\n     xman)            do_man=yes\n                      ;;\n@@ -147,7 +150,9 @@ set -e\n set +e\n \n test $do_html = yes && {\n-    cp ${srcdir}/docs/doxygen/mainpage.html ${outdir}/html_${mode}/index.html\n+    sed -e \"s=@LEVEL@=${LEVELtext}=\" \\\n+        -e \"s=@DATE@=${DATEtext}=\" \\\n+        ${srcdir}/docs/doxygen/mainpage.html > ${outdir}/html_${mode}/index.html\n     cp ${srcdir}/docs/doxygen/tables.html ${outdir}/html_${mode}/tables.html\n     echo ::\n     echo :: HTML pages begin with"}, {"sha": "21f83f97e6969d49da8994588d9ff4cb2905ac5a", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -205,7 +205,8 @@ <h2><a name=\"5\">Behavior specific to libstdc++-v3</a></h2>\n       classes publicly derived from it, simply returns the name of the\n       class.  But they are the <em>mangled</em> names; you will need to call\n       <code>c++filt</code> and pass the names as command-line parameters to\n-      demangle them.\n+      demangle them, or call a\n+      <a href=\"../18_support/howto.html#5\">runtime demangler function</a>.\n       (The classes in <code>&lt;stdexcept&gt;</code> have constructors which\n       require an argument to use later for <code>what()</code> calls, so the\n       question does not arise in most user-defined exceptions.)"}, {"sha": "10c74a9cbff959ba2fd4194e7eb46bd332e29429", "filename": "libstdc++-v3/docs/html/18_support/howto.html", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -31,6 +31,7 @@ <h1>Contents</h1>\n    <li><a href=\"#2\">Implementation properties</a>\n    <li><a href=\"#3\">Start and Termination</a>\n    <li><a href=\"#4\">Dynamic memory management</a>\n+   <li><a href=\"#5\">RTTI, the ABI, and demangling</a>\n </ul>\n \n <hr>\n@@ -255,6 +256,68 @@ <h2><a name=\"4\">Dynamic memory management</a></h2>\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>\n \n+<hr>\n+<h2><a name=\"5\">RTTI, the ABI, and demangling</a></h2>\n+   <p>If you have read the <a href=\"../documentation.html#4\">source\n+      documentation</a> for <code> namespace abi </code> then you are aware\n+      of the cross-vendor C++ ABI which we use.  One of the exposed\n+      functions is the one which we use for demangling in programs like\n+      <code>c++filt</code>, and you can use it yourself as well.\n+   </p>\n+   <p>(The function itself might use different demanglers, but that's the\n+      whole point of abstract interfaces.  If we change the implementation,\n+      you won't notice.)\n+   </p>\n+   <p>Probably the only times you'll be interested in demangling at runtime\n+      are when you're seeing <code>typeid</code> strings in RTTI, or when\n+      you're handling the runtime-support exception classes.  For example:\n+      <pre>\n+#include &lt;exception&gt;\n+#include &lt;iostream&gt;\n+#include &lt;cxxabi.h&gt;\n+\n+struct empty { };\n+\n+template &lt;typename T, int N&gt;\n+  struct bar { };\n+\n+\n+int main()\n+{\n+  int     status;\n+  char   *realname;\n+\n+  // exception classes not in &lt;stdexcept&gt;, thrown by the implementation\n+  // instead of the user\n+  std::bad_exception  e;\n+  realname = abi::__cxa_demangle(e.what(), 0, 0, &amp;status);\n+  std::cout &lt;&lt; e.what() &lt;&lt; \"\\t=&gt; \" &lt;&lt; realname &lt;&lt; \"\\t: \" &lt;&lt; status &lt;&lt; '\\n';\n+  free(realname);\n+\n+\n+  // typeid\n+  bar&lt;empty,17&gt;          u;\n+  const std::type_info  &amp;ti = typeid(u);\n+\n+  realname = abi::__cxa_demangle(ti.name(), 0, 0, &amp;status);\n+  std::cout &lt;&lt; ti.name() &lt;&lt; \"\\t=&gt; \" &lt;&lt; realname &lt;&lt; \"\\t: \" &lt;&lt; status &lt;&lt; '\\n';\n+  free(realname);\n+\n+  return 0;\n+}</pre></p>\n+   <p>With GCC 3.1 and later, this prints<pre>\n+      St13bad_exception       =&gt; std::bad_exception   : 0\n+      3barI5emptyLi17EE       =&gt; bar&lt;empty, 17&gt;       : 0</pre>\n+   </p>\n+   <p>The demangler interface is described in the source documentation\n+      linked to above.  It is actually written in C, so you don't need to\n+      be writing C++ in order to demangle C++.  (That also means we have to\n+      use crummy memory management facilities, so don't forget to free()\n+      the returned char array.)\n+   </p>\n+   <p>Return <a href=\"#top\">to top of page</a> or\n+      <a href=\"../faq/index.html\">to the FAQ</a>.\n+   </p>\n \n \n <!-- ####################################################### -->"}, {"sha": "b26cb6d887f1284245e1e083f01373b553712f24", "filename": "libstdc++-v3/libsupc++/exception", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe44c60eb50355fe2c87d0765b137a7f886d2fa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception?ref=efe44c60eb50355fe2c87d0765b137a7f886d2fa", "patch": "@@ -105,7 +105,9 @@ namespace __gnu_cxx\n       @code\n         std::set_terminate (__gnu_cxx::__verbose_terminate_handler)\n       @endcode\n-      to use.  */\n+      to use.  For more info, see\n+      http://gcc.gnu.org/onlinedocs/libstdc++/19_diagnostics/howto.html#4\n+  */\n   void __verbose_terminate_handler ();\n } // namespace __gnu_cxx\n   "}]}