{"sha": "37edf28c24b7bd198c27d266af9aefad417635fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlZGYyOGMyNGI3YmQxOThjMjdkMjY2YWY5YWVmYWQ0MTc2MzVmZA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-09-22T00:53:17Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-09-22T03:21:34Z"}, "message": "libstdc++: Remove overzealous static_asserts from std::span\n\nFor a span with statically empty extent, we currently model the\npreconditions of front(), back(), and operator[] as if they are\nmandates, by using a static_assert to verify that extent != 0.  This\ncauses us to reject valid programs that would instantiate these member\nfunctions and at runtime never call them.\n\nSince they are already followed by more general runtime asserts, this\npatch just removes these static_asserts altogether,\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/span (span::front): Remove static_assert.\n\t(span::back): Likewise.\n\t(span::operator[]): Likewise.\n\t* testsuite/23_containers/span/back_neg.cc: Rewrite to verify\n\tthat we check the preconditions of back() only when it's called.\n\t* testsuite/23_containers/span/front_neg.cc: Likewise for\n\tfront().\n\t* testsuite/23_containers/span/index_op_neg.cc: Likewise for\n\toperator[].", "tree": {"sha": "c147da811dc76f898741530ace441b2084670680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c147da811dc76f898741530ace441b2084670680"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37edf28c24b7bd198c27d266af9aefad417635fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37edf28c24b7bd198c27d266af9aefad417635fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37edf28c24b7bd198c27d266af9aefad417635fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37edf28c24b7bd198c27d266af9aefad417635fd/comments", "author": null, "committer": null, "parents": [{"sha": "813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813ad9c4dd5a779f12ad2abf710c6e75a3117ef0"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "1cdc0589ddb1e5a97742155ea1d86f6b7456cb0a", "filename": "libstdc++-v3/include/std/span", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan?ref=37edf28c24b7bd198c27d266af9aefad417635fd", "patch": "@@ -264,23 +264,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr reference\n       front() const noexcept\n       {\n-\tstatic_assert(extent != 0);\n \t__glibcxx_assert(!empty());\n \treturn *this->_M_ptr;\n       }\n \n       constexpr reference\n       back() const noexcept\n       {\n-\tstatic_assert(extent != 0);\n \t__glibcxx_assert(!empty());\n \treturn *(this->_M_ptr + (size() - 1));\n       }\n \n       constexpr reference\n       operator[](size_type __idx) const noexcept\n       {\n-\tstatic_assert(extent != 0);\n \t__glibcxx_assert(__idx < size());\n \treturn *(this->_M_ptr + __idx);\n       }"}, {"sha": "f777edfa20c5b30d27f2670c037f7b3b6f597fe3", "filename": "libstdc++-v3/testsuite/23_containers/span/back_neg.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fback_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fback_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fback_neg.cc?ref=37edf28c24b7bd198c27d266af9aefad417635fd", "patch": "@@ -20,10 +20,16 @@\n \n #include <span>\n \n-void\n-test01()\n+constexpr bool\n+test01(bool b)\n {\n   std::span<int, 0> s;\n-  s.back(); // { dg-error \"here\" }\n+  if (b || !s.empty())\n+    s.back();\n+  return true;\n }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }\n+\n+static_assert(test01(false));\n+static_assert(test01(true)); // { dg-error \"non-constant\" }\n+// { dg-error \"assert\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"in 'constexpr' expansion\" }"}, {"sha": "14e5bc1e10096ade46ed0f563fe79edc171961fa", "filename": "libstdc++-v3/testsuite/23_containers/span/front_neg.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ffront_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ffront_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ffront_neg.cc?ref=37edf28c24b7bd198c27d266af9aefad417635fd", "patch": "@@ -20,10 +20,16 @@\n \n #include <span>\n \n-void\n-test01()\n+constexpr bool\n+test01(bool b)\n {\n   std::span<int, 0> s;\n-  s.front(); // { dg-error \"here\" }\n+  if (b || !s.empty())\n+    s.front();\n+  return true;\n }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }\n+\n+static_assert(test01(false));\n+static_assert(test01(true)); // { dg-error \"non-constant\" }\n+// { dg-error \"assert\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"in 'constexpr' expansion\" }"}, {"sha": "6a3bb8834b432f0c0ae16de5daf98063187c8b81", "filename": "libstdc++-v3/testsuite/23_containers/span/index_op_neg.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Findex_op_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37edf28c24b7bd198c27d266af9aefad417635fd/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Findex_op_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Findex_op_neg.cc?ref=37edf28c24b7bd198c27d266af9aefad417635fd", "patch": "@@ -20,10 +20,16 @@\n \n #include <span>\n \n-void\n-test01()\n+constexpr bool\n+test01(bool b)\n {\n   std::span<int, 0> s;\n-  s[99]; // { dg-error \"here\" }\n+  if (b || !s.empty())\n+    s[99];\n+  return true;\n }\n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 0 }\n+\n+static_assert(test01(false));\n+static_assert(test01(true)); // { dg-error \"non-constant\" }\n+// { dg-error \"assert\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"in 'constexpr' expansion\" }"}]}