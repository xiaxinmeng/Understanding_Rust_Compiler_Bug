{"sha": "abfd358d756b409ce657761d320b04b9383cbfd8", "node_id": "C_kwDOANBUbNoAKGFiZmQzNThkNzU2YjQwOWNlNjU3NzYxZDMyMGIwNGI5MzgzY2JmZDg", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-08-19T14:12:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-19T14:12:15Z"}, "message": "Merge #1491\n\n1491: typecheck: resolve tuple pattern elt against parent elt r=philberty a=dafaust\n\nWhen doing type resolution for an element of a tuple pattern, check it\r\nagainst the corresponding element of the parent, if the parent is also a\r\ntuple.\r\n\r\nFixes: #1476\n\nCo-authored-by: David Faust <david.faust@oracle.com>", "tree": {"sha": "67ed721a0b6b9d76096a031bac42763aa918a3bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67ed721a0b6b9d76096a031bac42763aa918a3bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abfd358d756b409ce657761d320b04b9383cbfd8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi/5o/CRBK7hj4Ov3rIwAAFgcIADTBYVD156m8EdF6aPCgVqDW\ne+RtcERBo1VD0QHEJ5ws/RnNbpz8Zp5OU9SkHzNCHZAu1UEdsn/46TCO6778i+Sg\ngwlfpFn2YYUjiVYXN2ZqZ25qB3eRwghi2AEBtEMTLDBOSHy5K7klrSWU34JGIREd\nvC6q7a64lza/rV7Hw7Le1bd3rBkaBoXfuVv0hdKQCz6+ycF0hQrUtnysZZ+Ot35a\nidItV5inBM6mBAIix6tBzS94xjgMnW5Fgd0QeJs25MxxDX1DI4ExMEWFd2U/3Zbr\nR4o46UhGCH7WkMzAQJKTTUJMmbE7FOZ2WUqBWYHsZNY9vNN/bABE75QTsIT4pJs=\n=iDnR\n-----END PGP SIGNATURE-----\n", "payload": "tree 67ed721a0b6b9d76096a031bac42763aa918a3bb\nparent 5391805604332dc11d3b63bf2e4501b59f478524\nparent 6758b6c5b0a09dd265f124b3b0ac6ad0443e246e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1660918335 +0000\ncommitter GitHub <noreply@github.com> 1660918335 +0000\n\nMerge #1491\n\n1491: typecheck: resolve tuple pattern elt against parent elt r=philberty a=dafaust\n\nWhen doing type resolution for an element of a tuple pattern, check it\r\nagainst the corresponding element of the parent, if the parent is also a\r\ntuple.\r\n\r\nFixes: #1476\n\nCo-authored-by: David Faust <david.faust@oracle.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abfd358d756b409ce657761d320b04b9383cbfd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abfd358d756b409ce657761d320b04b9383cbfd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abfd358d756b409ce657761d320b04b9383cbfd8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5391805604332dc11d3b63bf2e4501b59f478524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5391805604332dc11d3b63bf2e4501b59f478524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5391805604332dc11d3b63bf2e4501b59f478524"}, {"sha": "6758b6c5b0a09dd265f124b3b0ac6ad0443e246e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6758b6c5b0a09dd265f124b3b0ac6ad0443e246e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6758b6c5b0a09dd265f124b3b0ac6ad0443e246e"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "429511d02921019727447af9daedec5256d4de6f", "filename": "gcc/rust/typecheck/rust-hir-type-check-pattern.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abfd358d756b409ce657761d320b04b9383cbfd8/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abfd358d756b409ce657761d320b04b9383cbfd8/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc?ref=abfd358d756b409ce657761d320b04b9383cbfd8", "patch": "@@ -263,9 +263,18 @@ TypeCheckPattern::visit (HIR::TuplePattern &pattern)\n \t    pattern.get_items ().get ());\n \n \tstd::vector<TyTy::TyVar> pattern_elems;\n-\tfor (auto &p : ref.get_patterns ())\n+\tfor (size_t i = 0; i < ref.get_patterns ().size (); i++)\n \t  {\n-\t    TyTy::BaseType *elem = TypeCheckPattern::Resolve (p.get (), parent);\n+\t    auto &p = ref.get_patterns ()[i];\n+\t    TyTy::BaseType *par_type = parent;\n+\t    if (parent->get_kind () == TyTy::TUPLE)\n+\t      {\n+\t\tTyTy::TupleType &par = *static_cast<TyTy::TupleType *> (parent);\n+\t\tpar_type = par.get_field (i);\n+\t      }\n+\n+\t    TyTy::BaseType *elem\n+\t      = TypeCheckPattern::Resolve (p.get (), par_type);\n \t    pattern_elems.push_back (TyTy::TyVar (elem->get_ref ()));\n \t  }\n \tinfered"}, {"sha": "b16a1883522a1d0c79a177a6e7c531e6a1a37e3c", "filename": "gcc/testsuite/rust/compile/match7.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abfd358d756b409ce657761d320b04b9383cbfd8/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmatch7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abfd358d756b409ce657761d320b04b9383cbfd8/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmatch7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmatch7.rs?ref=abfd358d756b409ce657761d320b04b9383cbfd8", "patch": "@@ -0,0 +1,12 @@\n+fn bar (x: u8, y: u8) -> i32 {\n+    match (x, y) {\n+        (1, 1) => { return 1; }\n+        (1, _) => { return -1; }\n+    }\n+\n+    return 0;\n+}\n+\n+fn main () -> () {\n+    bar (1, 2);\n+}"}]}