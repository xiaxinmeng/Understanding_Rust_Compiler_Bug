{"sha": "dbb400d7076fb71c447a342f561aecbf57dd87ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiNDAwZDcwNzZmYjcxYzQ0N2EzNDJmNTYxYWVjYmY1N2RkODdhZA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-07-20T20:03:41Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-07-20T20:03:41Z"}, "message": "re PR fortran/61632 (Improve error locus on large format strings)\n\n2014-07-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/61632\n\t* io/format.c (format_error): Avoid invalid string pointer by\n\tusing the fortran string length values to generate error string.\n\t(parse_format): Allocate the null terminator for the format\n\tstring.\n\nFrom-SVN: r212875", "tree": {"sha": "2247aa9ad49d39cb0c7106492783f37bd4981e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2247aa9ad49d39cb0c7106492783f37bd4981e2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb400d7076fb71c447a342f561aecbf57dd87ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb400d7076fb71c447a342f561aecbf57dd87ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb400d7076fb71c447a342f561aecbf57dd87ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb400d7076fb71c447a342f561aecbf57dd87ad/comments", "author": null, "committer": null, "parents": [{"sha": "fbd86cc6a12a6ee77a808c0d08b4c55869aa19e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd86cc6a12a6ee77a808c0d08b4c55869aa19e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd86cc6a12a6ee77a808c0d08b4c55869aa19e1"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "80f87523a69503be5476a74532756c12819bae7b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb400d7076fb71c447a342f561aecbf57dd87ad/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb400d7076fb71c447a342f561aecbf57dd87ad/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=dbb400d7076fb71c447a342f561aecbf57dd87ad", "patch": "@@ -1,3 +1,11 @@\n+2014-07-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/61632\n+\t* io/format.c (format_error): Avoid invalid string pointer by\n+\tusing the fortran string length values to generate error string.\n+\t(parse_format): Allocate the null terminator for the format\n+\tstring.\n+\n 2014-07-12  Tobias Burnus  <burnus@net-b.de>\n \n \t* caf/libcaf.h (_gfortran_caf_atomic_define,"}, {"sha": "6e32606553198c6ac173623385ea67aba663f8ee", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb400d7076fb71c447a342f561aecbf57dd87ad/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb400d7076fb71c447a342f561aecbf57dd87ad/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=dbb400d7076fb71c447a342f561aecbf57dd87ad", "patch": "@@ -1117,25 +1117,26 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n void\n format_error (st_parameter_dt *dtp, const fnode *f, const char *message)\n {\n-  int width, i, j, offset;\n+  int width, i, offset;\n #define BUFLEN 300\n   char *p, buffer[BUFLEN];\n   format_data *fmt = dtp->u.p.fmt;\n \n   if (f != NULL)\n-    fmt->format_string = f->source;\n+    p = f->source;\n+  else                /* This should not happen.  */\n+    p = dtp->format;\n \n   if (message == unexpected_element)\n     snprintf (buffer, BUFLEN, message, fmt->error_element);\n   else\n     snprintf (buffer, BUFLEN, \"%s\\n\", message);\n \n-  j = fmt->format_string - dtp->format;\n+  /* Get the offset into the format string where the error occurred.  */\n+  offset = dtp->format_len - (fmt->reversion_ok ?\n+\t\t\t      (int) strlen(p) : fmt->format_string_len);\n \n-  offset = (j > 60) ? j - 40 : 0;\n-\n-  j -= offset;\n-  width = dtp->format_len - offset;\n+  width = dtp->format_len;\n \n   if (width > 80)\n     width = 80;\n@@ -1144,14 +1145,14 @@ format_error (st_parameter_dt *dtp, const fnode *f, const char *message)\n \n   p = strchr (buffer, '\\0');\n \n-  memcpy (p, dtp->format + offset, width);\n+  memcpy (p, dtp->format, width);\n \n   p += width;\n   *p++ = '\\n';\n \n   /* Show where the problem is */\n \n-  for (i = 1; i < j; i++)\n+  for (i = 1; i < offset; i++)\n     *p++ = ' ';\n \n   *p++ = '^';\n@@ -1219,9 +1220,10 @@ parse_format (st_parameter_dt *dtp)\n \n   if (format_cache_ok)\n     {\n-      char *fmt_string = xmalloc (dtp->format_len);\n+      char *fmt_string = xmalloc (dtp->format_len + 1);\n       memcpy (fmt_string, dtp->format, dtp->format_len);\n       dtp->format = fmt_string;\n+      dtp->format[dtp->format_len] = '\\0';\n     }\n \n   dtp->u.p.fmt = fmt = xmalloc (sizeof (format_data));"}]}