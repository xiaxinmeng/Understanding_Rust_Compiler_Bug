{"sha": "ec1c569473de7c478653b6f518d8d8bba18e3f1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxYzU2OTQ3M2RlN2M0Nzg2NTNiNmY1MThkOGQ4YmJhMThlM2YxYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-23T08:08:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-23T08:08:47Z"}, "message": "re PR target/78451 (FAIL: gcc.target/i386/sse-22a.c: error: inlining failed in call to always_inline '_mm512_setzero_ps')\n\n\tPR target/78451\n\t* c-pragma.c (handle_pragma_target): Don't replace\n\tcurrent_target_pragma, but chainon the new args to the current one.\n\n\t* gcc.target/i386/pr78451.c: New test.\n\t* gcc.target/i386/pr69255-1.c: Use #pragma GCC push_options\n\tand #pragma GCC pop_options around the first #pragma GCC target.\n\t* gcc.target/i386/pr69255-2.c: Likewise.\n\t* gcc.target/i386/pr69255-3.c: Likewise.\n\nFrom-SVN: r242740", "tree": {"sha": "ad134efbf24d7e4a890b64a180a763b6ff99b23b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad134efbf24d7e4a890b64a180a763b6ff99b23b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec1c569473de7c478653b6f518d8d8bba18e3f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1c569473de7c478653b6f518d8d8bba18e3f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec1c569473de7c478653b6f518d8d8bba18e3f1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1c569473de7c478653b6f518d8d8bba18e3f1b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43fd192f76a0121197dcc3975a49b79b201f6411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43fd192f76a0121197dcc3975a49b79b201f6411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43fd192f76a0121197dcc3975a49b79b201f6411"}], "stats": {"total": 70, "additions": 63, "deletions": 7}, "files": [{"sha": "3b412825c36262cc5f800ed3ebd3fb1f282ac0a9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -1,3 +1,9 @@\n+2016-11-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/78451\n+\t* c-pragma.c (handle_pragma_target): Don't replace\n+\tcurrent_target_pragma, but chainon the new args to the current one.\n+\n 2016-11-22  Nathan Sidwell  <nathan@acm.org>\n \n \t* array-notation-common.c (cilkplus_extract_an_trplets): Fix"}, {"sha": "2ecacb8d57bfd679625a4f72f6ca3ca90dccde42", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -893,7 +893,7 @@ handle_pragma_target(cpp_reader *ARG_UNUSED(dummy))\n       args = nreverse (args);\n \n       if (targetm.target_option.pragma_parse (args, NULL_TREE))\n-\tcurrent_target_pragma = args;\n+\tcurrent_target_pragma = chainon (current_target_pragma, args);\n     }\n }\n "}, {"sha": "92acce208b6270ce5d6635ba906878a2c6ae526d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -1,3 +1,12 @@\n+2016-11-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/78451\n+\t* gcc.target/i386/pr78451.c: New test.\n+\t* gcc.target/i386/pr69255-1.c: Use #pragma GCC push_options\n+\tand #pragma GCC pop_options around the first #pragma GCC target.\n+\t* gcc.target/i386/pr69255-2.c: Likewise.\n+\t* gcc.target/i386/pr69255-3.c: Likewise.\n+\n 2016-11-23  Michael Collison  <michael.collison@arm.com>\n \n \t* testsuite/gcc.target/aarch64/and_const.c: New test to verify"}, {"sha": "f2c101089db669e549f75d7ede8cdcc070a7f101", "filename": "gcc/testsuite/gcc.target/i386/pr69255-1.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-1.c?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -2,7 +2,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-msse4 -mno-avx\" } */\n \n+#pragma GCC push_options\n #pragma GCC target \"avx512vl\"\n+#pragma GCC pop_options\n #pragma GCC target \"no-avx512vl\"\n __attribute__ ((__vector_size__ (32))) long long a;\n __attribute__ ((__vector_size__ (16))) int b;\n@@ -13,5 +15,5 @@ foo (const long long *p)\n   a = __builtin_ia32_gather3siv4di (a, p, b, 1, 1);\t/* { dg-error \"needs isa option -m32 -mavx512vl\" } */\n }\n \n-/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 13 } */\n-/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 13 } */\n+/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */\n+/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */"}, {"sha": "9ef6c2f4d9e8f870919bf5f1bc71bb01feac037f", "filename": "gcc/testsuite/gcc.target/i386/pr69255-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-2.c?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -2,7 +2,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-msse4 -mno-avx\" } */\n \n+#pragma GCC push_options\n #pragma GCC target \"avx512vl\"\n+#pragma GCC pop_options\n #pragma GCC target \"\"\n __attribute__ ((__vector_size__ (32))) long long a;\n __attribute__ ((__vector_size__ (16))) int b;\n@@ -13,5 +15,5 @@ foo (const long long *p)\n   __builtin_ia32_gather3siv4di (a, p, b, 1, 1);\t\t/* { dg-error \"needs isa option -m32 -mavx512vl\" } */\n }\n \n-/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 13 } */\n-/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 13 } */\n+/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */\n+/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */"}, {"sha": "713725d80fac396acb0e17618967e6d45b9e9134", "filename": "gcc/testsuite/gcc.target/i386/pr69255-3.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-3.c?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -2,7 +2,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-msse4 -mno-avx\" } */\n \n+#pragma GCC push_options\n #pragma GCC target \"avx512vl\"\n+#pragma GCC pop_options\n #pragma GCC target \"\"\n __attribute__ ((__vector_size__ (32))) long long a;\n __attribute__ ((__vector_size__ (16))) int b;\n@@ -13,5 +15,5 @@ foo (const long long *p, __attribute__ ((__vector_size__ (32))) long long *q)\n   *q = __builtin_ia32_gather3siv4di (a, p, b, 1, 1);\t/* { dg-error \"needs isa option -m32 -mavx512vl\" } */\n }\n \n-/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 13 } */\n-/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 13 } */\n+/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */\n+/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */"}, {"sha": "8bf60a424be5869f2ee5a57d01c188f4dd6b659d", "filename": "gcc/testsuite/gcc.target/i386/pr78451.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78451.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1c569473de7c478653b6f518d8d8bba18e3f1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78451.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78451.c?ref=ec1c569473de7c478653b6f518d8d8bba18e3f1b", "patch": "@@ -0,0 +1,35 @@\n+/* PR target/78451 */\n+/* { dg-options \"-O2 -mno-avx512f\" } */\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"avx512bw\")\n+\n+static inline int __attribute__ ((__always_inline__))\n+bar (void)\n+{\n+  return 0;\n+}\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"avx512vl\")\n+\n+int\n+foo (void)\n+{\n+  return bar ();\n+}\n+\n+#pragma GCC pop_options\n+#pragma GCC pop_options\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"avx512vl\")\n+#pragma GCC target (\"avx512bw\")\n+\n+int\n+baz (void)\n+{\n+  return bar ();\n+}\n+\n+#pragma GCC pop_options"}]}