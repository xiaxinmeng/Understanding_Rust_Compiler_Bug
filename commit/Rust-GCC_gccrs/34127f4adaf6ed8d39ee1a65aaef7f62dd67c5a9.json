{"sha": "34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQxMjdmNGFkYWY2ZWQ4ZDM5ZWUxYTY1YWFlZjdmNjJkZDY3YzVhOQ==", "commit": {"author": {"name": "Pip Cet", "email": "pipcet@gmail.com", "date": "2020-07-01T20:58:52Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-07-01T20:59:56Z"}, "message": "The variant of editing distance we use doesn't satisfy the triangle inequality.\n\ngcc\n\n\t* spellcheck.c (test_data): Add problematic strings.\n\t(test_metric_conditions): Don't test the triangle inequality\n\tcondition, which our distance function does not satisfy.", "tree": {"sha": "058d2f3ab60b49054782dca8da7046dbada504af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/058d2f3ab60b49054782dca8da7046dbada504af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9/comments", "author": {"login": "pipcet", "id": 4129208, "node_id": "MDQ6VXNlcjQxMjkyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4129208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipcet", "html_url": "https://github.com/pipcet", "followers_url": "https://api.github.com/users/pipcet/followers", "following_url": "https://api.github.com/users/pipcet/following{/other_user}", "gists_url": "https://api.github.com/users/pipcet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipcet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipcet/subscriptions", "organizations_url": "https://api.github.com/users/pipcet/orgs", "repos_url": "https://api.github.com/users/pipcet/repos", "events_url": "https://api.github.com/users/pipcet/events{/privacy}", "received_events_url": "https://api.github.com/users/pipcet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be7c41a556464680b17a2c3d5d099ec56a2c223e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7c41a556464680b17a2c3d5d099ec56a2c223e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7c41a556464680b17a2c3d5d099ec56a2c223e"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "45c41d7cef9465217a655dba36359409252f4daa", "filename": "gcc/spellcheck.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9/gcc%2Fspellcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9/gcc%2Fspellcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck.c?ref=34127f4adaf6ed8d39ee1a65aaef7f62dd67c5a9", "patch": "@@ -474,13 +474,17 @@ static const char * const test_data[] = {\n   \"food\",\n   \"boo\",\n   \"1234567890123456789012345678901234567890123456789012345678901234567890\"\n+  \"abc\",\n+  \"ac\",\n+  \"ca\",\n };\n \n /* Verify that get_edit_distance appears to be a sane distance function,\n-   i.e. the conditions for being a metric.  This is done directly for a\n-   small set of examples, using test_data above.  This is O(N^3) in the size\n-   of the array, due to the test for the triangle inequality, so we keep the\n-   array small.  */\n+   even though it doesn't satisfy the conditions for being a metric.  (This\n+   is because the triangle inequality fails to hold: the distance between\n+   \"ca\" and \"ac\" is 1, and so is the distance between \"abc\" and \"ac\", but\n+   the distance between \"abc\" and \"ca\" is 3. Algorithms that calculate the\n+   true Levenshtein-Damerau metric are much more expensive.)  */\n \n static void\n test_metric_conditions ()\n@@ -504,16 +508,6 @@ test_metric_conditions ()\n \t  edit_distance_t dist_ji\n \t    = get_edit_distance (test_data[j], test_data[i]);\n \t  ASSERT_EQ (dist_ij, dist_ji);\n-\n-\t  /* Triangle inequality.  */\n-\t  for (int k = 0; k < num_test_cases; k++)\n-\t    {\n-\t      edit_distance_t dist_ik\n-\t\t= get_edit_distance (test_data[i], test_data[k]);\n-\t      edit_distance_t dist_jk\n-\t\t= get_edit_distance (test_data[j], test_data[k]);\n-\t      ASSERT_TRUE (dist_ik <= dist_ij + dist_jk);\n-\t    }\n \t}\n     }\n }"}]}