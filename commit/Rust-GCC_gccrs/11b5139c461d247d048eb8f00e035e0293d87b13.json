{"sha": "11b5139c461d247d048eb8f00e035e0293d87b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFiNTEzOWM0NjFkMjQ3ZDA0OGViOGYwMGUwMzVlMDI5M2Q4N2IxMw==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1998-07-12T15:20:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-12T15:20:42Z"}, "message": "xref.c (classname): New function.\n\n\t* xref.c (classname): New function.\n\t(GNU_xref_hier): Change class and base parameters to tree.\n\t* decl.c (xref_baseypes): Change caller.\n\t* friend.c (make_friend_class): Likewise.\n\nFrom-SVN: r21088", "tree": {"sha": "5dd4e123cf0ad9910b9507b7856836d4725cf192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dd4e123cf0ad9910b9507b7856836d4725cf192"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11b5139c461d247d048eb8f00e035e0293d87b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b5139c461d247d048eb8f00e035e0293d87b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11b5139c461d247d048eb8f00e035e0293d87b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b5139c461d247d048eb8f00e035e0293d87b13/comments", "author": null, "committer": null, "parents": [{"sha": "cb689bb608a3129133a40686493d168df47915e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb689bb608a3129133a40686493d168df47915e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb689bb608a3129133a40686493d168df47915e4"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "8abfcb557fbb63293ab050773c3bd18e53a55a25", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=11b5139c461d247d048eb8f00e035e0293d87b13", "patch": "@@ -1,3 +1,10 @@\n+1998-07-12  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* xref.c (classname): New function.\n+\t(GNU_xref_hier): Change class and base parameters to tree.\n+\t* decl.c (xref_baseypes): Change caller.\n+\t* friend.c (make_friend_class): Likewise.\n+\n 1998-07-12  Kriang Lerdsuwanakij <lerdsuwa@scf-fs.usc.edu>\n \n \t* typeck.c (comptypes, case TEMPLATE_TEMPLATE_PARM): Add parameter \n@@ -33,7 +40,6 @@\n \tpurpose_member.\n \t* decl.c (lookup_name_real): Don't call complete_type on a namespace.\n \t(grokvardecl): Use DECL_CLASS_SCOPE_P.\n-\t(xref_basetypes): Fix call to GNU_xref_hier.\n \t* cvt.c (convert_pointer_to_real): Check for error_mark_node sooner.\n \t* class.c (warn_hidden): Fix for OVERLOAD.\n \tFrom grahams@rcp.co.uk:"}, {"sha": "6d660770d1e908fc595c31fb2bb4b7fa68446224", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=11b5139c461d247d048eb8f00e035e0293d87b13", "patch": "@@ -3007,7 +3007,7 @@ extern void GNU_xref_decl\t\t\tPROTO((tree, tree));\n extern void GNU_xref_call\t\t\tPROTO((tree, char *));\n extern void GNU_xref_function\t\t\tPROTO((tree, tree));\n extern void GNU_xref_assign\t\t\tPROTO((tree));\n-extern void GNU_xref_hier\t\t\tPROTO((char *, char *, int, int, int));\n+extern void GNU_xref_hier\t\t\tPROTO((tree, tree, int, int, int));\n extern void GNU_xref_member\t\t\tPROTO((tree, tree));\n \n /* -- end of C++ */"}, {"sha": "a65cdf6505b70181a97ae972fabca7d37c2bca49", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=11b5139c461d247d048eb8f00e035e0293d87b13", "patch": "@@ -11309,9 +11309,6 @@ xref_basetypes (code_type_node, name, ref, binfo)\n   SET_CLASSTYPE_MARKED (ref);\n   BINFO_BASETYPES (TYPE_BINFO (ref)) = binfos = make_tree_vec (len);\n \n-  if (TREE_CODE (name) == TYPE_DECL)\n-    name = DECL_NAME (name);\n-\n   for (i = 0; binfo; binfo = TREE_CHAIN (binfo))\n     {\n       /* The base of a derived struct is public by default.  */\n@@ -11345,9 +11342,7 @@ xref_basetypes (code_type_node, name, ref, binfo)\n \t  continue;\n \t}\n \n-      GNU_xref_hier (IDENTIFIER_POINTER (name),\n-\t\t     IDENTIFIER_POINTER (TYPE_IDENTIFIER (basetype)),\n-\t\t     via_public, via_virtual, 0);\n+      GNU_xref_hier (name, basetype, via_public, via_virtual, 0);\n \n #if 1\n       /* This code replaces similar code in layout_basetypes."}, {"sha": "58747effcf079ffee36991e3fe65bc43a4d761d5", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=11b5139c461d247d048eb8f00e035e0293d87b13", "patch": "@@ -267,8 +267,7 @@ make_friend_class (type, friend_type)\n   else\n     is_template_friend = 0;\n \n-  GNU_xref_hier (TYPE_NAME_STRING (type),\n-\t\t TYPE_NAME_STRING (friend_type), 0, 0, 1);\n+  GNU_xref_hier (type, friend_type, 0, 0, 1);\n \n   if (is_template_friend)\n     friend_type = CLASSTYPE_TI_TEMPLATE (friend_type);"}, {"sha": "14915d6a8629d74d57f6c20171cb61810fa3a5aa", "filename": "gcc/cp/xref.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b5139c461d247d048eb8f00e035e0293d87b13/gcc%2Fcp%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fxref.c?ref=11b5139c461d247d048eb8f00e035e0293d87b13", "patch": "@@ -541,6 +541,19 @@ gen_assign(xf, name)\n     fprintf(xref_file, \"ASG %s %d %s\\n\", filename(xf), lineno, s);\n }\n \n+static char*\n+classname (cls)\n+     tree cls;\n+{\n+  if (cls && TREE_CODE_CLASS (TREE_CODE (cls)) == 't')\n+    cls = TYPE_NAME (cls);\n+  if (cls && TREE_CODE_CLASS (TREE_CODE (cls)) == 'd')\n+    cls = DECL_NAME (cls);\n+  if (cls && TREE_CODE (cls) == IDENTIFIER_NODE)\n+    return IDENTIFIER_POINTER (cls);\n+  return \"?\";\n+}\n+\n /* Output cross-reference info about a class hierarchy.\n    CLS is the class type of interest.  BASE is a baseclass\n    for CLS.  PUB and VIRT give the access info about\n@@ -551,8 +564,8 @@ gen_assign(xf, name)\n \n void\n GNU_xref_hier(cls, base, pub, virt, frnd)\n-   char *cls;\n-   char *base;\n+   tree cls;\n+   tree base;\n    int pub;\n    int virt;\n    int frnd;\n@@ -564,7 +577,8 @@ GNU_xref_hier(cls, base, pub, virt, frnd)\n   if (xf == NULL) return;\n \n   fprintf(xref_file, \"HIE %s %d %s %s %d %d %d\\n\",\n-\t  filename(xf), lineno, cls, base, pub, virt, frnd);\n+\t  filename(xf), lineno, classname (cls), classname (base), \n+\t  pub, virt, frnd);\n }\n \n /* Output cross-reference info about class members.  CLS"}]}