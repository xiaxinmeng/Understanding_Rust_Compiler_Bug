{"sha": "05023ea48733b2ad52d22b0e82bddf8d7b66d045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUwMjNlYTQ4NzMzYjJhZDUyZDIyYjBlODJiZGRmOGQ3YjY2ZDA0NQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2007-10-03T15:45:10Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2007-10-03T15:45:10Z"}, "message": "re PR tree-optimization/33576 (segfault in extract_muldiv for cpu2006 benchmark)\n\n2007-10-03  Sebastian Pop  <sebastian.pop@amd.com>\n\n        PR tree-optimization/33576\n        * testsuite/gcc.dg/tree-ssa/pr33576.c: New.\n        * tree-loop-linear.c (linear_transform_loops): Call remove_iv.\n        * lambda.h (lambda_loopnest_to_gcc_loopnest): New parameter.\n        (remove_iv): Declared.\n        * lambda-code.c (remove_iv): Not static.\n        (lambda_loopnest_to_gcc_loopnest): New parameter remove_ivs.\n        Don't remove ivs there, save ivs in the buffer.\n\nFrom-SVN: r128986", "tree": {"sha": "2c9f40744eb2641b21f9b4f17a205bf33e0841e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c9f40744eb2641b21f9b4f17a205bf33e0841e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05023ea48733b2ad52d22b0e82bddf8d7b66d045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05023ea48733b2ad52d22b0e82bddf8d7b66d045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05023ea48733b2ad52d22b0e82bddf8d7b66d045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05023ea48733b2ad52d22b0e82bddf8d7b66d045/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9783a0510d7816b59ab3874dbd2565eb6bd93ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9783a0510d7816b59ab3874dbd2565eb6bd93ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9783a0510d7816b59ab3874dbd2565eb6bd93ab0"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "e9e2b6a799affa16178de47ed199022ffab127e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05023ea48733b2ad52d22b0e82bddf8d7b66d045", "patch": "@@ -1,3 +1,14 @@\n+2007-10-03  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/33576\n+\t* testsuite/gcc.dg/tree-ssa/pr33576.c: New.\n+\t* tree-loop-linear.c (linear_transform_loops): Call remove_iv.\n+\t* lambda.h (lambda_loopnest_to_gcc_loopnest): New parameter.\n+\t(remove_iv): Declared.\n+\t* lambda-code.c (remove_iv): Not static.\n+\t(lambda_loopnest_to_gcc_loopnest): New parameter remove_ivs.\n+\tDon't remove ivs there, save ivs in the buffer.\n+\n 2007-10-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/15764"}, {"sha": "84ad869a0ef8aa433562bb67522cd94401972955", "filename": "gcc/lambda-code.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Flambda-code.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Flambda-code.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-code.c?ref=05023ea48733b2ad52d22b0e82bddf8d7b66d045", "patch": "@@ -1639,7 +1639,7 @@ lle_to_gcc_expression (lambda_linear_expression lle,\n \n /* Remove the induction variable defined at IV_STMT.  */\n \n-static void\n+void\n remove_iv (tree iv_stmt)\n {\n   if (TREE_CODE (iv_stmt) == PHI_NODE)\n@@ -1692,6 +1692,7 @@ void\n lambda_loopnest_to_gcc_loopnest (struct loop *old_loopnest,\n \t\t\t\t VEC(tree,heap) *old_ivs,\n \t\t\t\t VEC(tree,heap) *invariants,\n+\t\t\t\t VEC(tree,heap) **remove_ivs,\n \t\t\t\t lambda_loopnest new_loopnest,\n                                  lambda_trans_matrix transform,\n                                  struct obstack * lambda_obstack)\n@@ -1861,7 +1862,7 @@ lambda_loopnest_to_gcc_loopnest (struct loop *old_loopnest,\n \t}\n \n       /* Remove the now unused induction variable.  */\n-      remove_iv (oldiv_stmt);\n+      VEC_safe_push (tree, heap, *remove_ivs, oldiv_stmt);\n     }\n   VEC_free (tree, heap, new_ivs);\n }"}, {"sha": "fc28d463e3c02ee28933c20c8172d6f5de56233a", "filename": "gcc/lambda.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Flambda.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Flambda.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda.h?ref=05023ea48733b2ad52d22b0e82bddf8d7b66d045", "patch": "@@ -206,8 +206,10 @@ lambda_loopnest gcc_loopnest_to_lambda_loopnest (struct loop *,\n                                                  struct obstack *);\n void lambda_loopnest_to_gcc_loopnest (struct loop *,\n \t\t\t\t      VEC(tree,heap) *, VEC(tree,heap) *,\n+\t\t\t\t      VEC(tree,heap) **,\n                                       lambda_loopnest, lambda_trans_matrix,\n                                       struct obstack *);\n+void remove_iv (tree);\n \n static inline void lambda_vector_negate (lambda_vector, lambda_vector, int);\n static inline void lambda_vector_mult_const (lambda_vector, lambda_vector, int, int);"}, {"sha": "2470762f7a792fd4eea7f9a94b4c13b7b49386e8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr33576.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33576.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33576.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33576.c?ref=05023ea48733b2ad52d22b0e82bddf8d7b66d045", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -ftree-loop-linear\" } */\n+\n+int a1[6][4][4];\n+short b1[16];\n+\n+int c1;\n+void CalculateQuantParam(void)\n+{\n+  int i, j, k, temp;\n+\n+   for(k=0; k<6; k++)\n+      for(j=0; j<4; j++)\n+        for(i=0; i<4; i++)\n+        {\n+          temp = (i<<2)+j;\n+          a1[k][j][i]  = c1/b1[temp];\n+        }\n+}\n+"}, {"sha": "295993f1bf9428a49da26fbbb6f13d3d1beae854", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05023ea48733b2ad52d22b0e82bddf8d7b66d045/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=05023ea48733b2ad52d22b0e82bddf8d7b66d045", "patch": "@@ -253,7 +253,10 @@ linear_transform_loops (void)\n   loop_iterator li;\n   VEC(tree,heap) *oldivs = NULL;\n   VEC(tree,heap) *invariants = NULL;\n+  VEC(tree,heap) *remove_ivs = VEC_alloc (tree, heap, 3);\n   struct loop *loop_nest;\n+  tree oldiv_stmt;\n+  unsigned i;\n \n   FOR_EACH_LOOP (li, loop_nest, 0)\n     {\n@@ -351,6 +354,7 @@ linear_transform_loops (void)\n \t}\n \n       lambda_loopnest_to_gcc_loopnest (loop_nest, oldivs, invariants,\n+\t\t\t\t       &remove_ivs,\n                                        after, trans, &lambda_obstack);\n       modified = true;\n \n@@ -363,8 +367,12 @@ linear_transform_loops (void)\n       free_data_refs (datarefs);\n     }\n \n+  for (i = 0; VEC_iterate (tree, remove_ivs, i, oldiv_stmt); i++)\n+    remove_iv (oldiv_stmt);\n+\n   VEC_free (tree, heap, oldivs);\n   VEC_free (tree, heap, invariants);\n+  VEC_free (tree, heap, remove_ivs);\n   scev_reset ();\n \n   if (modified)"}]}