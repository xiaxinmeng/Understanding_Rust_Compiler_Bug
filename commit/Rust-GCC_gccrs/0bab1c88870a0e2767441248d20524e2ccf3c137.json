{"sha": "0bab1c88870a0e2767441248d20524e2ccf3c137", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhYjFjODg4NzBhMGUyNzY3NDQxMjQ4ZDIwNTI0ZTJjY2YzYzEzNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-11-25T03:54:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-11-25T03:54:07Z"}, "message": "tree-ssa-alias.c (compute_flow_insensitive_aliasing): Reduce the number of queries to random elements in the ai->written_vars bitmap.\n\n        * tree-ssa-alias.c (compute_flow_insensitive_aliasing): Reduce\n        the number of queries to random elements in the ai->written_vars\n        bitmap.\n\nFrom-SVN: r91271", "tree": {"sha": "8d62af56929c7590354027e41a57f23ab06ccd38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d62af56929c7590354027e41a57f23ab06ccd38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bab1c88870a0e2767441248d20524e2ccf3c137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bab1c88870a0e2767441248d20524e2ccf3c137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bab1c88870a0e2767441248d20524e2ccf3c137", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bab1c88870a0e2767441248d20524e2ccf3c137/comments", "author": null, "committer": null, "parents": [{"sha": "367390404d26b7bfc400d77893579e83e2a19fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/367390404d26b7bfc400d77893579e83e2a19fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/367390404d26b7bfc400d77893579e83e2a19fb9"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "94ada816e0ae5a9f166a74ba8507bf508b96ec71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bab1c88870a0e2767441248d20524e2ccf3c137/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bab1c88870a0e2767441248d20524e2ccf3c137/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bab1c88870a0e2767441248d20524e2ccf3c137", "patch": "@@ -1,3 +1,9 @@\n+2004-11-24  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-alias.c (compute_flow_insensitive_aliasing): Reduce\n+\tthe number of queries to random elements in the ai->written_vars\n+\tbitmap.\n+\n 2004-11-24  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/i386/i386.c (override_options): Disable x87 fancy math"}, {"sha": "4640f1fe0c4393c1d933b755428902cbb29e10b4", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bab1c88870a0e2767441248d20524e2ccf3c137/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bab1c88870a0e2767441248d20524e2ccf3c137/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=0bab1c88870a0e2767441248d20524e2ccf3c137", "patch": "@@ -921,11 +921,16 @@ compute_flow_insensitive_aliasing (struct alias_info *ai)\n \t  /* Skip memory tags and variables that have never been\n \t     written to.  We also need to check if the variables are\n \t     call-clobbered because they may be overwritten by\n-\t     function calls.  */\n-\t  tag_stored_p = bitmap_bit_p (ai->written_vars, tag_ann->uid)\n-\t\t\t || is_call_clobbered (tag);\n-\t  var_stored_p = bitmap_bit_p (ai->written_vars, v_ann->uid)\n-\t\t\t || is_call_clobbered (var);\n+\t     function calls.\n+\n+\t     Note this is effectively random accessing elements in\n+\t     the sparse bitset, which can be highly inefficient.\n+\t     So we first check the call_clobbered status of the\n+\t     tag and variable before querying the bitmap.  */\n+\t  tag_stored_p = is_call_clobbered (tag)\n+\t\t\t || bitmap_bit_p (ai->written_vars, tag_ann->uid);\n+\t  var_stored_p = is_call_clobbered (var)\n+\t\t\t || bitmap_bit_p (ai->written_vars, v_ann->uid);\n \t  if (!tag_stored_p && !var_stored_p)\n \t    continue;\n \t     "}]}