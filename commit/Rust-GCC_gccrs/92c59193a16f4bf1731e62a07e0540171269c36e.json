{"sha": "92c59193a16f4bf1731e62a07e0540171269c36e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJjNTkxOTNhMTZmNGJmMTczMWU2MmEwN2UwNTQwMTcxMjY5YzM2ZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-11-22T00:05:10Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-11-22T00:05:10Z"}, "message": "re PR fortran/25087 (Error for missing explicit interface needed.)\n\n2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25087\n\t* resolve.c (resolve_fl_procedure): Add an error if an external\n\tautomatic character length function does not have an explicit\n\tinterface.\n\n2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25087\n\t* gfortran.dg/auto_char_len_4.f90: New test.\n\nFrom-SVN: r119077", "tree": {"sha": "7917653e404c26436bdce630f8d57f59116c5d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7917653e404c26436bdce630f8d57f59116c5d61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92c59193a16f4bf1731e62a07e0540171269c36e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c59193a16f4bf1731e62a07e0540171269c36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92c59193a16f4bf1731e62a07e0540171269c36e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c59193a16f4bf1731e62a07e0540171269c36e/comments", "author": null, "committer": null, "parents": [{"sha": "991f3b1289865f843d1724594f3dd57f4abf87ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991f3b1289865f843d1724594f3dd57f4abf87ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991f3b1289865f843d1724594f3dd57f4abf87ec"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "b9c5944829ac6a7eb4003a09739387eeead67a33", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=92c59193a16f4bf1731e62a07e0540171269c36e", "patch": "@@ -1,3 +1,10 @@\n+2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25087\n+\t* resolve.c (resolve_fl_procedure): Add an error if an external\n+\tautomatic character length function does not have an explicit\n+\tinterface.\n+\n 2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/29652"}, {"sha": "e798070224c6d83c2d5b5246880e12826371a147", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=92c59193a16f4bf1731e62a07e0540171269c36e", "patch": "@@ -89,8 +89,6 @@ resolve_formal_arglist (gfc_symbol * proc)\n   gfc_symbol *sym;\n   int i;\n \n-  /* TODO: Procedures whose return character length parameter is not constant\n-     or assumed must also have explicit interfaces.  */\n   if (proc->result != NULL)\n     sym = proc->result;\n   else\n@@ -5529,17 +5527,25 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n \t&& resolve_fl_var_and_proc (sym, mp_flag) == FAILURE)\n     return FAILURE;\n \n-  if (sym->attr.proc == PROC_ST_FUNCTION)\n+  if (sym->ts.type == BT_CHARACTER)\n     {\n-      if (sym->ts.type == BT_CHARACTER)\n-        {\n-          gfc_charlen *cl = sym->ts.cl;\n-          if (!cl || !cl->length || cl->length->expr_type != EXPR_CONSTANT)\n-            {\n+      gfc_charlen *cl = sym->ts.cl;\n+      if (!cl || !cl->length || cl->length->expr_type != EXPR_CONSTANT)\n+\t{\n+\t  if (sym->attr.proc == PROC_ST_FUNCTION)\n+\t    {\n               gfc_error (\"Character-valued statement function '%s' at %L must \"\n                          \"have constant length\", sym->name, &sym->declared_at);\n               return FAILURE;\n             }\n+\n+\t  if (sym->attr.external && sym->formal == NULL\n+\t\t&& cl && cl->length && cl->length->expr_type != EXPR_CONSTANT)\n+            {\n+              gfc_error (\"Automatic character length function '%s' at %L must \"\n+                         \"have an explicit interface\", sym->name, &sym->declared_at);\n+              return FAILURE;\n+            }\n         }\n     }\n "}, {"sha": "ae046ed0c3e12f8dddfec3ef30052bbd06d69dcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92c59193a16f4bf1731e62a07e0540171269c36e", "patch": "@@ -1,3 +1,8 @@\n+2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25087\n+\t* gfortran.dg/auto_char_len_4.f90: New test.\n+\n 2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/29652"}, {"sha": "3749abd8ed3075d2174c0bee30cae29174c38514", "filename": "gcc/testsuite/gfortran.dg/auto_char_len_4.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_char_len_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c59193a16f4bf1731e62a07e0540171269c36e/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_char_len_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_char_len_4.f90?ref=92c59193a16f4bf1731e62a07e0540171269c36e", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! Tests the fix for PR25087, in which the following invalid code\n+! was not detected.\n+!\n+! Contributed by Joost VandeVondele  <jv244@cam.ac.uk>\n+!\n+SUBROUTINE s(n)\n+  CHARACTER(LEN=n), EXTERNAL :: a ! { dg-error \"must have an explicit interface\" }\n+  interface\n+    function b (m)                ! This is OK\n+      CHARACTER(LEN=m) :: b\n+      integer :: m\n+    end function b\n+  end interface\n+  write(6,*) a(n)\n+  write(6,*) b(n)\n+  write(6,*) c()\n+contains\n+    function c ()                ! This is OK\n+      CHARACTER(LEN=n):: c\n+      c = \"\"\n+    end function c\n+END SUBROUTINE s\n+"}]}