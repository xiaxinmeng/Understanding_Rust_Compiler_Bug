{"sha": "84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRlYjBmMWEzYmZjODAwN2U4ZDZlY2Y0YmYyMDg2ODJmYmY1YjRkZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-29T15:30:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-29T15:30:11Z"}, "message": "PR c++/81164 - ICE with invalid inherited constructor.\n\n\t* search.c (binfo_direct_p): New.\n\t* name-lookup.c (do_class_using_decl): Use it.\n\nFrom-SVN: r249797", "tree": {"sha": "25c42b5cc3d4ffc3545b2a55bb83c2ceba7a956e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25c42b5cc3d4ffc3545b2a55bb83c2ceba7a956e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ff22ea5a8ee58457a7c16f3501e2731a92b9df8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff22ea5a8ee58457a7c16f3501e2731a92b9df8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff22ea5a8ee58457a7c16f3501e2731a92b9df8"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "2c29f1e6d16463355c25497ec696c6cc17af43fa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "patch": "@@ -1,3 +1,9 @@\n+2017-06-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/81164 - ICE with invalid inherited constructor.\n+\t* search.c (binfo_direct_p): New.\n+\t* name-lookup.c (do_class_using_decl): Use it.\n+\n 2017-06-29  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (THIS_NAME, IN_CHARGE_NAME, VTBL_PTR_TYPE,"}, {"sha": "b3cff08805da03445b452cd8ccfb272a0485daaf", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "patch": "@@ -6598,6 +6598,7 @@ extern tree dfs_walk_all (tree, tree (*) (tree, void *),\n extern tree dfs_walk_once (tree, tree (*) (tree, void *),\n \t\t\t   tree (*) (tree, void *), void *);\n extern tree binfo_via_virtual\t\t\t(tree, tree);\n+extern bool binfo_direct_p\t\t\t(tree);\n extern tree build_baselink\t\t\t(tree, tree, tree, tree);\n extern tree adjust_result_of_qualified_name_lookup\n \t\t\t\t\t\t(tree, tree, tree);"}, {"sha": "f15c811695922ed4de9dc4f1695e245ca6db2b10", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "patch": "@@ -4167,8 +4167,7 @@ do_class_using_decl (tree scope, tree name)\n \t      return NULL_TREE;\n \t    }\n \t}\n-      else if (name == ctor_identifier\n-\t       && BINFO_INHERITANCE_CHAIN (BINFO_INHERITANCE_CHAIN (binfo)))\n+      else if (name == ctor_identifier && !binfo_direct_p (binfo))\n \t{\n \t  error (\"cannot inherit constructors from indirect base %qT\", scope);\n \t  return NULL_TREE;"}, {"sha": "7bcbcbfe535e0f363e90509a177f443c97ba8fae", "filename": "gcc/cp/search.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "patch": "@@ -2976,6 +2976,28 @@ binfo_via_virtual (tree binfo, tree limit)\n   return NULL_TREE;\n }\n \n+/* BINFO is for a base class in some hierarchy.  Return true iff it is a\n+   direct base.  */\n+\n+bool\n+binfo_direct_p (tree binfo)\n+{\n+  tree d_binfo = BINFO_INHERITANCE_CHAIN (binfo);\n+  if (BINFO_INHERITANCE_CHAIN (d_binfo))\n+    /* A second inheritance chain means indirect.  */\n+    return false;\n+  if (!BINFO_VIRTUAL_P (binfo))\n+    /* Non-virtual, so only one inheritance chain means direct.  */\n+    return true;\n+  /* A virtual base looks like a direct base, so we need to look through the\n+     direct bases to see if it's there.  */\n+  tree b_binfo;\n+  for (int i = 0; BINFO_BASE_ITERATE (d_binfo, i, b_binfo); ++i)\n+    if (b_binfo == binfo)\n+      return true;\n+  return false;\n+}\n+\n /* BINFO is a base binfo in the complete type BINFO_TYPE (HERE).\n    Find the equivalent binfo within whatever graph HERE is located.\n    This is the inverse of original_binfo.  */"}, {"sha": "90a06c610f3cc2905196ba049a35dd6085f4b795", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor28.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor28.C?ref=84eb0f1a3bfc8007e8d6ecf4bf208682fbf5b4dd", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/81164\n+// { dg-do compile { target c++11 } }\n+\n+struct A {};\n+struct B : virtual A {};\n+struct C : virtual A {};\n+struct D : B,C { using A::A; };\t// { dg-error \"indirect\" }"}]}