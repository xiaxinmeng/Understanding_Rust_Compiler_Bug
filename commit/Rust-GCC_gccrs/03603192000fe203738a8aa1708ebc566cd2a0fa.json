{"sha": "03603192000fe203738a8aa1708ebc566cd2a0fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM2MDMxOTIwMDBmZTIwMzczOGE4YWExNzA4ZWJjNTY2Y2QyYTBmYQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2004-09-17T11:53:14Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2004-09-17T11:53:14Z"}, "message": "sh.c (sh_gimplify_va_arg_expr): Don't call pass_by_reference.\n\n\t* sh.c (sh_gimplify_va_arg_expr): Don't call pass_by_reference.\n\t(sh_pass_by_reference): Work around std_gimplify_va_arg_expr bug.\n\t* t-sh (MULTILIB_CPUS): s/ML_m/ML_sh/g .\n\t* t-sh64 (MULTILIB_CPU_DIRS): Likewise.  Match trailing slashes\n\tin substitutions.\n\t(MULTILIB_DIRNAMES): Remove defunct removal of /media32.\n\nFrom-SVN: r87640", "tree": {"sha": "6b6a0356e86053f2f8ed007673740abfc696abff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b6a0356e86053f2f8ed007673740abfc696abff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03603192000fe203738a8aa1708ebc566cd2a0fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03603192000fe203738a8aa1708ebc566cd2a0fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03603192000fe203738a8aa1708ebc566cd2a0fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03603192000fe203738a8aa1708ebc566cd2a0fa/comments", "author": null, "committer": null, "parents": [{"sha": "3641bd553429d959870ac3e863e3253394d37fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3641bd553429d959870ac3e863e3253394d37fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3641bd553429d959870ac3e863e3253394d37fae"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "8dc017c3fd49cdfa2ca9d1d0cb086b21d1a77de1", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03603192000fe203738a8aa1708ebc566cd2a0fa/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03603192000fe203738a8aa1708ebc566cd2a0fa/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=03603192000fe203738a8aa1708ebc566cd2a0fa", "patch": "@@ -6382,7 +6382,7 @@ sh_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p,\n   HOST_WIDE_INT size, rsize;\n   tree tmp, pptr_type_node;\n   tree addr, lab_over, result = NULL;\n-  int pass_by_ref = pass_by_reference (NULL, TYPE_MODE (type), type, false);\n+  int pass_by_ref = targetm.calls.must_pass_in_stack (TYPE_MODE (type), type);\n \n   if (pass_by_ref)\n     type = build_pointer_type (type);\n@@ -6604,6 +6604,12 @@ sh_pass_by_reference (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n   if (targetm.calls.must_pass_in_stack (mode, type))\n     return true;\n \n+  /* ??? std_gimplify_va_arg_expr passes NULL for cum.  That function\n+     wants to know about pass-by-reference semantics for incoming\n+     arguments.  */\n+  if (! cum)\n+    return false;\n+\n   if (TARGET_SHCOMPACT)\n     {\n       cum->byref = shcompact_byref (cum, mode, type, named);"}, {"sha": "c5eb397b142a9d4511111e54bc7285c1d16ea16e", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03603192000fe203738a8aa1708ebc566cd2a0fa/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03603192000fe203738a8aa1708ebc566cd2a0fa/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=03603192000fe203738a8aa1708ebc566cd2a0fa", "patch": "@@ -22,7 +22,7 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n MULTILIB_ENDIAN = ml/mb\n-MULTILIB_CPUS= $(ML_sh1)$(ML_sh2a)$(ML_sh2a_nofpu)$(ML_sh2a_single_only)$(ML_sh2a_single)$(ML_sh2e)$(ML_sh2)$(ML_sh3e)$(ML_sh3)$(ML_sh4_nofpu)$(ML_sh4_single_only)$(ML_sh4_single)$(ML_sh4)$(ML_sh4a_nofpu)$(ML_sh4a_single_only)$(ML_sh4a_single)$(ML_sh4a)$(ML_m5_32media)$(ML_m5_32media_nofpu)$(ML_m5_compact)$(ML_m5_compact_nofpu)$(ML_m5_64media)$(ML_m5_64media_nofpu)\n+MULTILIB_CPUS= $(ML_sh1)$(ML_sh2a)$(ML_sh2a_nofpu)$(ML_sh2a_single_only)$(ML_sh2a_single)$(ML_sh2e)$(ML_sh2)$(ML_sh3e)$(ML_sh3)$(ML_sh4_nofpu)$(ML_sh4_single_only)$(ML_sh4_single)$(ML_sh4)$(ML_sh4a_nofpu)$(ML_sh4a_single_only)$(ML_sh4a_single)$(ML_sh4a)$(ML_sh5_32media)$(ML_sh5_32media_nofpu)$(ML_sh5_compact)$(ML_sh5_compact_nofpu)$(ML_sh5_64media)$(ML_sh5_64media_nofpu)\n \n MULTILIB_OPTIONS= $(MULTILIB_ENDIAN) $(MULTILIB_CPUS:/=)\n MULTILIB_DIRNAMES= "}, {"sha": "97a13beeb786001786b4fda2c180605ee968769d", "filename": "gcc/config/sh/t-sh64", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03603192000fe203738a8aa1708ebc566cd2a0fa/gcc%2Fconfig%2Fsh%2Ft-sh64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03603192000fe203738a8aa1708ebc566cd2a0fa/gcc%2Fconfig%2Fsh%2Ft-sh64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh64?ref=03603192000fe203738a8aa1708ebc566cd2a0fa", "patch": "@@ -7,7 +7,7 @@ LIB1ASMFUNCS = \\\n   _push_pop_shmedia_regs \\\n   _udivdi3 _divdi3 _umoddi3 _moddi3\n \n-MULTILIB_CPU_DIRS= $(ML_sh1) $(ML_sh2e) $(ML_sh2) $(ML_sh3e) $(ML_sh3) $(ML_sh4_nofpu) $(ML_sh4_single_only) $(ML_sh4_single) $(ML_sh4) $(ML_m5_32media:m5_32media=media32) $(ML_m5_32media_nofpu:m5_32media_nofpu=nofpu/media32) $(ML_m5_compact:m5_compact=compact) $(ML_m5_compact_nofpu:m5_compact_nofpu=nofpu/compact) $(ML_m5_64media:m5_64media=media64) $(ML_m5_64media_nofpu:m5_64media_nofpu=nofpu/media64)\n+MULTILIB_CPU_DIRS= $(ML_sh1) $(ML_sh2e) $(ML_sh2) $(ML_sh3e) $(ML_sh3) $(ML_sh4_nofpu) $(ML_sh4_single_only) $(ML_sh4_single) $(ML_sh4) $(ML_sh5_32media:m5-32media/=media32) $(ML_sh5_32media_nofpu:m5-32media-nofpu/=nofpu/media32) $(ML_sh5_compact:m5-compact/=compact) $(ML_sh5_compact_nofpu:m5-compact-nofpu/=nofpu/compact) $(ML_sh5_64media:m5-64media/=media64) $(ML_sh5_64media_nofpu:m5-64media-nofpu/=nofpu/media64)\n \n MULTILIB_RAW_DIRNAMES= $(MULTILIB_ENDIAN:/mb= mb) $(MULTILIB_CPU_DIRS:/=)\n-MULTILIB_DIRNAMES= $(MULTILIB_RAW_DIRNAMES:/media32=)\n+MULTILIB_DIRNAMES= $(MULTILIB_RAW_DIRNAMES)"}]}