{"sha": "5839708b0948556b36636b23475e9d215db181d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgzOTcwOGIwOTQ4NTU2YjM2NjM2YjIzNDc1ZTlkMjE1ZGIxODFkOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-07-16T13:16:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-07-16T13:16:39Z"}, "message": "genattrtab.c (check_attr_value): Remove handling of null attrs.\n\ngcc/\n\t* genattrtab.c (check_attr_value): Remove handling of null attrs.\n\t(make_canonical): Likewise.\n\nFrom-SVN: r225875", "tree": {"sha": "a86e258fd9f560b2582470382485e9fa9d833e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a86e258fd9f560b2582470382485e9fa9d833e82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5839708b0948556b36636b23475e9d215db181d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5839708b0948556b36636b23475e9d215db181d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5839708b0948556b36636b23475e9d215db181d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5839708b0948556b36636b23475e9d215db181d9/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce967e936bd0e47a1941a52f1adf98bd76700070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce967e936bd0e47a1941a52f1adf98bd76700070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce967e936bd0e47a1941a52f1adf98bd76700070"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "a5ba86c4ca6f71fe408870fe6156ea0efc684231", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5839708b0948556b36636b23475e9d215db181d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5839708b0948556b36636b23475e9d215db181d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5839708b0948556b36636b23475e9d215db181d9", "patch": "@@ -1,3 +1,8 @@\n+2015-07-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* genattrtab.c (check_attr_value): Remove handling of null attrs.\n+\t(make_canonical): Likewise.\n+\n 2015-07-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.md (save_stack_nonlocal): Use adjust_address"}, {"sha": "2d8dcea87225048493701a2f7d4ca727451da271", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5839708b0948556b36636b23475e9d215db181d9/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5839708b0948556b36636b23475e9d215db181d9/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=5839708b0948556b36636b23475e9d215db181d9", "patch": "@@ -899,7 +899,7 @@ check_attr_test (rtx exp, int is_const, int lineno)\n \n /* Given an expression, ensure that it is validly formed and that all named\n    attribute values are valid for the given attribute.  Issue a fatal error\n-   if not.  If no attribute is specified, assume a numeric attribute.\n+   if not.\n \n    Return a perhaps modified replacement expression for the value.  */\n \n@@ -913,7 +913,7 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n   switch (GET_CODE (exp))\n     {\n     case CONST_INT:\n-      if (attr && ! attr->is_numeric)\n+      if (!attr->is_numeric)\n \t{\n \t  error_with_line (attr->lineno,\n \t\t\t   \"CONST_INT not valid for non-numeric attribute %s\",\n@@ -934,15 +934,15 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n       if (! strcmp (XSTR (exp, 0), \"*\"))\n \tbreak;\n \n-      if (attr == 0 || attr->is_numeric)\n+      if (attr->is_numeric)\n \t{\n \t  p = XSTR (exp, 0);\n \t  for (; *p; p++)\n \t    if (! ISDIGIT (*p))\n \t      {\n-\t\terror_with_line (attr ? attr->lineno : 0,\n+\t\terror_with_line (attr->lineno,\n \t\t\t\t \"non-numeric value for numeric attribute %s\",\n-\t\t\t\t attr ? attr->name : \"internal\");\n+\t\t\t\t attr->name);\n \t\tbreak;\n \t      }\n \t  break;\n@@ -956,13 +956,12 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n       if (av == NULL)\n \terror_with_line (attr->lineno,\n \t\t\t \"unknown value `%s' for `%s' attribute\",\n-\t\t\t XSTR (exp, 0), attr ? attr->name : \"internal\");\n+\t\t\t XSTR (exp, 0), attr->name);\n       break;\n \n     case IF_THEN_ELSE:\n-      XEXP (exp, 0) = check_attr_test (XEXP (exp, 0),\n-\t\t\t\t       attr ? attr->is_const : 0,\n-\t\t\t\t       attr ? attr->lineno : 0);\n+      XEXP (exp, 0) = check_attr_test (XEXP (exp, 0), attr->is_const,\n+\t\t\t\t       attr->lineno);\n       XEXP (exp, 1) = check_attr_value (XEXP (exp, 1), attr);\n       XEXP (exp, 2) = check_attr_value (XEXP (exp, 2), attr);\n       break;\n@@ -972,7 +971,7 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n     case MULT:\n     case DIV:\n     case MOD:\n-      if (attr && !attr->is_numeric)\n+      if (!attr->is_numeric)\n \t{\n \t  error_with_line (attr->lineno,\n \t\t\t   \"invalid operation `%s' for non-numeric\"\n@@ -1007,8 +1006,8 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n       for (i = 0; i < XVECLEN (exp, 0); i += 2)\n \t{\n \t  XVECEXP (exp, 0, i) = check_attr_test (XVECEXP (exp, 0, i),\n-\t\t\t\t\t\t attr ? attr->is_const : 0,\n-\t\t\t\t\t\t attr ? attr->lineno : 0);\n+\t\t\t\t\t\t attr->is_const,\n+\t\t\t\t\t\t attr->lineno);\n \t  XVECEXP (exp, 0, i + 1)\n \t    = check_attr_value (XVECEXP (exp, 0, i + 1), attr);\n \t}\n@@ -1020,15 +1019,13 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n       {\n \tstruct attr_desc *attr2 = find_attr (&XSTR (exp, 0), 0);\n \tif (attr2 == NULL)\n-\t  error_with_line (attr ? attr->lineno : 0,\n-\t\t\t   \"unknown attribute `%s' in ATTR\",\n+\t  error_with_line (attr->lineno, \"unknown attribute `%s' in ATTR\",\n \t\t\t   XSTR (exp, 0));\n-\telse if (attr && attr->is_const && ! attr2->is_const)\n+\telse if (attr->is_const && ! attr2->is_const)\n \t  error_with_line (attr->lineno,\n \t\t\t   \"non-constant attribute `%s' referenced from `%s'\",\n \t\t\t   XSTR (exp, 0), attr->name);\n-\telse if (attr\n-\t\t && attr->is_numeric != attr2->is_numeric)\n+\telse if (attr->is_numeric != attr2->is_numeric)\n \t  error_with_line (attr->lineno,\n \t\t\t   \"numeric attribute mismatch calling `%s' from `%s'\",\n \t\t\t   XSTR (exp, 0), attr->name);\n@@ -1042,7 +1039,7 @@ check_attr_value (rtx exp, struct attr_desc *attr)\n       return attr_rtx (SYMBOL_REF, XSTR (exp, 0));\n \n     default:\n-      error_with_line (attr ? attr->lineno : 0,\n+      error_with_line (attr->lineno,\n \t\t       \"invalid operation `%s' for attribute value\",\n \t\t       GET_RTX_NAME (GET_CODE (exp)));\n       break;\n@@ -1199,7 +1196,7 @@ make_canonical (struct attr_desc *attr, rtx exp)\n     case CONST_STRING:\n       if (! strcmp (XSTR (exp, 0), \"*\"))\n \t{\n-\t  if (attr == 0 || attr->default_val == 0)\n+\t  if (attr->default_val == 0)\n \t    fatal (\"(attr_value \\\"*\\\") used in invalid context\");\n \t  exp = attr->default_val->value;\n \t}"}]}