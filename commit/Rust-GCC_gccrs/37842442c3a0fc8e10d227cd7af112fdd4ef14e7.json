{"sha": "37842442c3a0fc8e10d227cd7af112fdd4ef14e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4NDI0NDJjM2EwZmM4ZTEwZDIyN2NkN2FmMTEyZmRkNGVmMTRlNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-21T23:46:54Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-21T23:46:54Z"}, "message": "Finish last change.\n\nFrom-SVN: r15614", "tree": {"sha": "89bbd4c2281008c790d9c21e0ddcbe3929b333c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89bbd4c2281008c790d9c21e0ddcbe3929b333c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37842442c3a0fc8e10d227cd7af112fdd4ef14e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37842442c3a0fc8e10d227cd7af112fdd4ef14e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37842442c3a0fc8e10d227cd7af112fdd4ef14e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37842442c3a0fc8e10d227cd7af112fdd4ef14e7/comments", "author": null, "committer": null, "parents": [{"sha": "7014927a4e113c2c94c99a3e03bcd53e7d74a631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7014927a4e113c2c94c99a3e03bcd53e7d74a631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7014927a4e113c2c94c99a3e03bcd53e7d74a631"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "d73d33933bfbd72751971ac282d09d53cef0a2f1", "filename": "gcc/loop.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37842442c3a0fc8e10d227cd7af112fdd4ef14e7/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37842442c3a0fc8e10d227cd7af112fdd4ef14e7/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=37842442c3a0fc8e10d227cd7af112fdd4ef14e7", "patch": "@@ -7074,10 +7074,6 @@ void analyze_loop_iterations (loop_start, loop_end)\n   /* we change our mind only when we are sure that loop will be instrumented */\n   loop_can_insert_bct[loop_num] = 0;\n \n-  /* debugging: do we wish to instrument this loop? */\n-  if ( !check_bct_param () )\n-    return;\n-\n   /* is the optimization suppressed.  */\n   if ( !flag_branch_on_count_reg )\n     return;"}]}