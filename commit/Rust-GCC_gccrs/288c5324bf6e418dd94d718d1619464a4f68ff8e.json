{"sha": "288c5324bf6e418dd94d718d1619464a4f68ff8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg4YzUzMjRiZjZlNDE4ZGQ5NGQ3MThkMTYxOTQ2NGE0ZjY4ZmY4ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-01-14T20:45:03Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-01-14T20:52:36Z"}, "message": "Compare TREE_ADDRESSABLE and TYPE_MODE when ODR checking types.\n\n\tPR lto/91576\n\t* ipa-devirt.c (odr_types_equivalent_p): Compare TREE_ADDRESSABLE and\n\tTYPE_MODE.\n\n\t* testsuite/g++.dg/lto/odr-8_0.C: New testcase.\n\t* testsuite/g++.dg/lto/odr-8_1.C: New testcase.", "tree": {"sha": "0aeb7ca7aeb55f06a2386cc2bba740480d758465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aeb7ca7aeb55f06a2386cc2bba740480d758465"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/288c5324bf6e418dd94d718d1619464a4f68ff8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288c5324bf6e418dd94d718d1619464a4f68ff8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288c5324bf6e418dd94d718d1619464a4f68ff8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288c5324bf6e418dd94d718d1619464a4f68ff8e/comments", "author": null, "committer": null, "parents": [{"sha": "757bf1dff5e8cee34c0a75d06140ca972bfecfa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/757bf1dff5e8cee34c0a75d06140ca972bfecfa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/757bf1dff5e8cee34c0a75d06140ca972bfecfa7"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "33ca91a646718a90752b7befef5aa51521f0d12c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=288c5324bf6e418dd94d718d1619464a4f68ff8e", "patch": "@@ -1,3 +1,9 @@\n+2020-01-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/91576\n+\t* ipa-devirt.c (odr_types_equivalent_p): Compare TREE_ADDRESSABLE and\n+\tTYPE_MODE.\n+\n 2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (lang_opt_files): Add analyzer.opt."}, {"sha": "b609a77701d97fdc63eb0ef50d67af88ea45f6a1", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=288c5324bf6e418dd94d718d1619464a4f68ff8e", "patch": "@@ -1544,6 +1544,27 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n       return false;\n     }\n \n+  if (TREE_ADDRESSABLE (t1) != TREE_ADDRESSABLE (t2)\n+      && COMPLETE_TYPE_P (t1) && COMPLETE_TYPE_P (t2))\n+    {\n+      warn_odr (t1, t2, NULL, NULL, warn, warned,\n+\t\tG_(\"one type needs to be constructed while other not\"));\n+      gcc_checking_assert (RECORD_OR_UNION_TYPE_P (t1));\n+      return false;\n+    }\n+  /* There is no really good user facing warning for this.\n+     Either the original reason for modes being different is lost during\n+     streaming or we should catch earlier warnings.  We however must detect\n+     the mismatch to avoid type verifier from cmplaining on mismatched\n+     types between type and canonical type. See PR91576.  */\n+  if (TYPE_MODE (t1) != TYPE_MODE (t2)\n+      && COMPLETE_TYPE_P (t1) && COMPLETE_TYPE_P (t2))\n+    {\n+      warn_odr (t1, t2, NULL, NULL, warn, warned,\n+\t\tG_(\"memory layout mismatch\"));\n+      return false;\n+    }\n+\n   gcc_assert (!TYPE_SIZE_UNIT (t1) || !TYPE_SIZE_UNIT (t2)\n \t      || operand_equal_p (TYPE_SIZE_UNIT (t1),\n \t\t\t\t  TYPE_SIZE_UNIT (t2), 0));"}, {"sha": "dc42601794be2765ef2259bd2bd8894b211109cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=288c5324bf6e418dd94d718d1619464a4f68ff8e", "patch": "@@ -1,3 +1,9 @@\n+2020-01-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/91576\n+\t* testsuite/g++.dg/lto/odr-8_0.C: New testcase.\n+\t* testsuite/g++.dg/lto/odr-8_1.C: New testcase.\n+\n 2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/analyzer/CVE-2005-1689-minimal.c: New test."}, {"sha": "59f51399facdeaaade40d2d12db3189bb6d99a62", "filename": "gcc/testsuite/g++.dg/lto/odr-8_0.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-8_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-8_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-8_0.C?ref=288c5324bf6e418dd94d718d1619464a4f68ff8e", "patch": "@@ -0,0 +1,7 @@\n+// { dg-lto-do link }\n+struct a {char c;}; // { dg-lto-message \"8: 'struct a' violates the C\\\\+\\\\+ One Definition Rule\" }\n+int\n+test (struct a *a)\n+{\n+  return a->c;\n+}"}, {"sha": "742df8cc906adc4cc64d666c9313ec03cf38b0d4", "filename": "gcc/testsuite/g++.dg/lto/odr-8_1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-8_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288c5324bf6e418dd94d718d1619464a4f68ff8e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-8_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-8_1.C?ref=288c5324bf6e418dd94d718d1619464a4f68ff8e", "patch": "@@ -0,0 +1,12 @@\n+--- a/gcc/testsuite/g++.dg/lto/odr-8_1.C\n++++ b/gcc/testsuite/g++.dg/lto/odr-8_1.C\n+@@ -1,9 +1,9 @@\n+struct a {char c; a() {} a(struct a &) {}}; // { dg-lto-message \"one type needs to be constructed while other not\" }\n+extern int test (struct a *a);\n+int\n+main()\n+{\n+  struct a a;\n+  a.c=0;\n+  return test(&a);\n+}"}]}