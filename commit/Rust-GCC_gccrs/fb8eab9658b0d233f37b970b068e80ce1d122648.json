{"sha": "fb8eab9658b0d233f37b970b068e80ce1d122648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI4ZWFiOTY1OGIwZDIzM2YzN2I5NzBiMDY4ZTgwY2UxZDEyMjY0OA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-01-25T16:28:24Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-01-25T16:28:24Z"}, "message": "cp-tree.h (flagged_type_tree_s): Remove.\n\n\t* cp-tree.h (flagged_type_tree_s): Remove.\n\t(check_for_new_type): Likewise.\n\t* typeck2.c (check_for_new_type): Likewise.\n\nFrom-SVN: r61779", "tree": {"sha": "459df4b8212a2fb707b3789ebdb33946b21acf88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/459df4b8212a2fb707b3789ebdb33946b21acf88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb8eab9658b0d233f37b970b068e80ce1d122648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8eab9658b0d233f37b970b068e80ce1d122648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8eab9658b0d233f37b970b068e80ce1d122648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8eab9658b0d233f37b970b068e80ce1d122648/comments", "author": null, "committer": null, "parents": [{"sha": "36ddc6b01b29ce73ccbfa415bc5ef9f85b300cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ddc6b01b29ce73ccbfa415bc5ef9f85b300cb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36ddc6b01b29ce73ccbfa415bc5ef9f85b300cb6"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "336370f20518aaf9f902b2146ebd9a8d51f1d086", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8eab9658b0d233f37b970b068e80ce1d122648/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8eab9658b0d233f37b970b068e80ce1d122648/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fb8eab9658b0d233f37b970b068e80ce1d122648", "patch": "@@ -1,3 +1,9 @@\n+2003-01-25  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* cp-tree.h (flagged_type_tree_s): Remove.\n+\t(check_for_new_type): Likewise.\n+\t* typeck2.c (check_for_new_type): Likewise.\n+\n 2003-01-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* dump.c: ANSIfy function declarations and definitions."}, {"sha": "fa73d67ba51ec5573f445dc542b1cfc41ecee312", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8eab9658b0d233f37b970b068e80ce1d122648/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8eab9658b0d233f37b970b068e80ce1d122648/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=fb8eab9658b0d233f37b970b068e80ce1d122648", "patch": "@@ -253,12 +253,6 @@ struct lang_id2 GTY(())\n   tree error_locus;\n };\n \n-typedef struct flagged_type_tree_s GTY(())\n-{\n-  tree t;\n-  int new_type_flag;\n-} flagged_type_tree;\n-\n typedef struct template_parm_index_s GTY(())\n {\n   struct tree_common common;\n@@ -4433,7 +4427,6 @@ extern tree build_scoped_ref\t\t\t(tree, tree, tree *);\n extern tree build_x_arrow\t\t\t(tree);\n extern tree build_m_component_ref\t\t(tree, tree);\n extern tree build_functional_cast\t\t(tree, tree);\n-extern void check_for_new_type\t\t\t(const char *, flagged_type_tree);\n extern tree add_exception_specifier             (tree, tree, int);\n extern tree merge_exception_specifiers          (tree, tree);\n "}, {"sha": "0a5b4dc9a9dd88814a7ae26724fcab2632d40bb6", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8eab9658b0d233f37b970b068e80ce1d122648/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8eab9658b0d233f37b970b068e80ce1d122648/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=fb8eab9658b0d233f37b970b068e80ce1d122648", "patch": "@@ -1263,19 +1263,6 @@ build_functional_cast (exp, parms)\n }\n \f\n \n-/* Complain about defining new types in inappropriate places.  We give an\n-   exception for C-style casts, to accommodate GNU C stylings.  */\n-\n-void\n-check_for_new_type (string, inptree)\n-     const char *string;\n-     flagged_type_tree inptree;\n-{\n-  if (inptree.new_type_flag\n-      && (pedantic || strcmp (string, \"cast\") != 0))\n-    pedwarn (\"ISO C++ forbids defining types within %s\", string);\n-}\n-\n /* Add new exception specifier SPEC, to the LIST we currently have.\n    If it's already in LIST then do nothing.\n    Moan if it's bad and we're allowed to. COMPLAIN < 0 means we"}]}