{"sha": "b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0ZTc0M2M5YzdhNTMwYzEwMmMwYzZiYjE3MzdmZjJhMDUyOGRhMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-09-11T15:03:05Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-09-11T15:03:05Z"}, "message": "[driver] Use regular error routines\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-09/msg00545.html\n\t* gcc.c (perror_with_name, pfatal_with_name): Delete.\n\t(load_specs): Use fatal_error.\n\t(DELETE_IF_ORDINARY, process_command): Use error.\n\t(execute, run_attempt): Use fatal_error.\n\n\t* gcc.dg/driver-specs.c: New.\n\nFrom-SVN: r264209", "tree": {"sha": "f9a5f44ce7a190fad49f8c264dcc837e8cce9fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9a5f44ce7a190fad49f8c264dcc837e8cce9fda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e2d426c17e882e117af872b103f9ac2866b5132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e2d426c17e882e117af872b103f9ac2866b5132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e2d426c17e882e117af872b103f9ac2866b5132"}], "stats": {"total": 73, "additions": 36, "deletions": 37}, "files": [{"sha": "da4995e7f5d26130c77090201617ec573dd2f130", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "patch": "@@ -1,3 +1,10 @@\n+2018-09-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.c (perror_with_name, pfatal_with_name): Delete.\n+\t(load_specs): Use fatal_error.\n+\t(DELETE_IF_ORDINARY, process_command): Use error.\n+\t(execute, run_attempt): Use fatal_error.\n+\n 2018-09-11  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* diagnostic-core.h (sorry_at): New prototype."}, {"sha": "7532a2e1fc5ea048dee682cb5f7f3d772605ac49", "filename": "gcc/gcc.c", "status": "modified", "additions": 21, "deletions": 37, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "patch": "@@ -372,8 +372,6 @@ static void give_switch (int, int);\n static int default_arg (const char *, int);\n static void set_multilib_dir (void);\n static void print_multilib_info (void);\n-static void perror_with_name (const char *);\n-static void pfatal_with_name (const char *) ATTRIBUTE_NORETURN;\n static void display_help (void);\n static void add_preprocessor_option (const char *, int);\n static void add_assembler_option (const char *, int);\n@@ -2101,15 +2099,20 @@ load_specs (const char *filename)\n   /* Open and stat the file.  */\n   desc = open (filename, O_RDONLY, 0);\n   if (desc < 0)\n-    pfatal_with_name (filename);\n+    {\n+    failed:\n+      /* This leaves DESC open, but the OS will save us.  */\n+      fatal_error (input_location, \"cannot read spec file '%s': %m\", filename);\n+    }\n+\n   if (stat (filename, &statbuf) < 0)\n-    pfatal_with_name (filename);\n+    goto failed;\n \n   /* Read contents of file into BUFFER.  */\n   buffer = XNEWVEC (char, statbuf.st_size + 1);\n   readlen = read (desc, buffer, (unsigned) statbuf.st_size);\n   if (readlen < 0)\n-    pfatal_with_name (filename);\n+    goto failed;\n   buffer[readlen] = 0;\n   close (desc);\n \n@@ -2490,7 +2493,7 @@ do                                                      \\\n     if (stat (NAME, &ST) >= 0 && S_ISREG (ST.st_mode))  \\\n       if (unlink (NAME) < 0)                            \\\n \tif (VERBOSE_FLAG)                               \\\n-\t  perror_with_name (NAME);                      \\\n+\t  error (\"%s: %m\", (NAME));\t\t\t\\\n   } while (0)\n #endif\n \n@@ -3169,13 +3172,11 @@ execute (void)\n \t\t\tNULL, NULL, &err);\n       if (errmsg != NULL)\n \t{\n-\t  if (err == 0)\n-\t    fatal_error (input_location, errmsg);\n-\t  else\n-\t    {\n-\t      errno = err;\n-\t      pfatal_with_name (errmsg);\n-\t    }\n+\t  errno = err;\n+\t  fatal_error (input_location,\n+\t\t       err ? G_(\"cannot execute '%s' %s: %m\")\n+\t\t       : G_(\"cannot execute '%s' %s\"),\n+\t\t       string, errmsg);\n \t}\n \n       if (i && string != commands[i].prog)\n@@ -4545,10 +4546,8 @@ process_command (unsigned int decoded_options_count,\n \n           if (strcmp (fname, \"-\") != 0 && access (fname, F_OK) < 0)\n \t    {\n-\t      if (fname[0] == '@' && access (fname + 1, F_OK) < 0)\n-\t\tperror_with_name (fname + 1);\n-\t      else\n-\t\tperror_with_name (fname);\n+\t      bool resp = fname[0] == '@' && access (fname + 1, F_OK) < 0;\n+\t      error (\"%s: %m\", fname + resp);\n \t    }\n           else\n \t    add_infile (arg, spec_lang);\n@@ -6886,13 +6885,11 @@ run_attempt (const char **new_argv, const char *out_temp,\n \t\t    err_temp, &err);\n   if (errmsg != NULL)\n     {\n-      if (err == 0)\n-\tfatal_error (input_location, errmsg);\n-      else\n-\t{\n-\t  errno = err;\n-\t  pfatal_with_name (errmsg);\n-\t}\n+      errno = err;\n+      fatal_error (input_location,\n+\t\t   err ? G_ (\"cannot execute '%s' %s: %m\")\n+\t\t   : G_ (\"cannot execute '%s' %s\"),\n+\t\t   new_argv[0], errmsg);\n     }\n \n   if (!pex_get_status (pex, 1, &exit_status))\n@@ -8407,19 +8404,6 @@ save_string (const char *s, int len)\n   return result;\n }\n \n-void\n-pfatal_with_name (const char *name)\n-{\n-  perror_with_name (name);\n-  delete_temp_files ();\n-  exit (1);\n-}\n-\n-static void\n-perror_with_name (const char *name)\n-{\n-  error (\"%s: %m\", name);\n-}\n \f\n static inline void\n validate_switches_from_spec (const char *spec, bool user)"}, {"sha": "30b1156392e6957e08185f84831482d84b376992", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "patch": "@@ -1,3 +1,7 @@\n+2018-09-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.dg/driver-specs.c: New.\n+\n 2018-09-11  Joey Ye  <joey.ye@arm.com>\n \n \t* lib/gcov.exp (verify-intermediate): Add missing close."}, {"sha": "9cb66e14c4faf9523dc0891bfde5d1c1b76fae9a", "filename": "gcc/testsuite/gcc.dg/driver-specs.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2Ftestsuite%2Fgcc.dg%2Fdriver-specs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b34e743c9c7a530c102c0c6bb1737ff2a0528da0/gcc%2Ftestsuite%2Fgcc.dg%2Fdriver-specs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdriver-specs.c?ref=b34e743c9c7a530c102c0c6bb1737ff2a0528da0", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-specs=not-a-file\" }\n+// { dg-prune-output \"compilation terminated\" }\n+// { dg-error \"cannot read spec file\" \"\" { target *-*-* } 0 }\n+"}]}