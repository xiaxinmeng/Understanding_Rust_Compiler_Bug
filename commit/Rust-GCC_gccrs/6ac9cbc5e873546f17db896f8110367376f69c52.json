{"sha": "6ac9cbc5e873546f17db896f8110367376f69c52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjOWNiYzVlODczNTQ2ZjE3ZGI4OTZmODExMDM2NzM3NmY2OWM1Mg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-09-12T03:46:53Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-09-12T03:46:53Z"}, "message": "sh.c (calc_live_regs): Use current_function_saves_all_registers instead of...\n\n\t* config/sh/sh.c (calc_live_regs): Use\n\tcurrent_function_saves_all_registers instead of\n\tcurrent_function_has_nonlocal_label.\n\t(sh_allocate_initial_value): Likewise.\n\t(sh_get_pr_initial_val): Likewise.\n\t* config/sh/sh.h (SHMEDIA_REGS_STACK_ADJUST): Likewise.\n\t* config/sh/sh.md (load_ra): Likewise.\n\nFrom-SVN: r128408", "tree": {"sha": "291fd107026ba7e5e5a988abee75c0c0f6afb844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/291fd107026ba7e5e5a988abee75c0c0f6afb844"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ac9cbc5e873546f17db896f8110367376f69c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac9cbc5e873546f17db896f8110367376f69c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac9cbc5e873546f17db896f8110367376f69c52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac9cbc5e873546f17db896f8110367376f69c52/comments", "author": null, "committer": null, "parents": [{"sha": "367985140f2647a348daa02872a3ddddfed26177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/367985140f2647a348daa02872a3ddddfed26177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/367985140f2647a348daa02872a3ddddfed26177"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "bd983fb65c7e6c33737d4707384a0ce7d8d1997d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ac9cbc5e873546f17db896f8110367376f69c52", "patch": "@@ -1,3 +1,13 @@\n+2007-09-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (calc_live_regs): Use\n+\tcurrent_function_saves_all_registers instead of\n+\tcurrent_function_has_nonlocal_label.\n+\t(sh_allocate_initial_value): Likewise.\n+\t(sh_get_pr_initial_val): Likewise.\n+\t* config/sh/sh.h (SHMEDIA_REGS_STACK_ADJUST): Likewise.\n+\t* config/sh/sh.md (load_ra): Likewise.\n+\n 2007-09-12  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/t-linux (LIMITS_H_TEST): Only define if not inhibit_libc."}, {"sha": "36cc9ff036fdc1bd1060032422bb4935febb21ef", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=6ac9cbc5e873546f17db896f8110367376f69c52", "patch": "@@ -5873,7 +5873,7 @@ calc_live_regs (HARD_REG_SET *live_regs_mask)\n   if (TARGET_SHCOMPACT\n       && ((current_function_args_info.call_cookie\n \t   & ~ CALL_COOKIE_RET_TRAMP (1))\n-\t  || current_function_has_nonlocal_label))\n+\t  || current_function_saves_all_registers))\n     pr_live = 1;\n   has_call = TARGET_SHMEDIA ? ! leaf_function_p () : pr_live;\n   for (count = 0, reg = FIRST_PSEUDO_REGISTER; reg-- != 0; )\n@@ -8944,7 +8944,7 @@ sh_allocate_initial_value (rtx hard_reg)\n \t  && ! (TARGET_SHCOMPACT\n \t\t&& ((current_function_args_info.call_cookie\n \t\t     & ~ CALL_COOKIE_RET_TRAMP (1))\n-\t\t    || current_function_has_nonlocal_label)))\n+\t\t    || current_function_saves_all_registers)))\n \tx = hard_reg;\n       else\n \tx = gen_frame_mem (Pmode, return_address_pointer_rtx);\n@@ -10332,7 +10332,7 @@ sh_get_pr_initial_val (void)\n   if (TARGET_SHCOMPACT\n       && ((current_function_args_info.call_cookie\n \t   & ~ CALL_COOKIE_RET_TRAMP (1))\n-\t  || current_function_has_nonlocal_label))\n+\t  || current_function_saves_all_registers))\n     return gen_frame_mem (SImode, return_address_pointer_rtx);\n \n   /* If we haven't finished rtl generation, there might be a nonlocal label"}, {"sha": "0583a8a447d12c743ce21b5d9059d99cd09ffc65", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=6ac9cbc5e873546f17db896f8110367376f69c52", "patch": "@@ -1365,7 +1365,7 @@ extern char sh_additional_register_names[ADDREGNAMES_SIZE] \\\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n #define SHMEDIA_REGS_STACK_ADJUST() \\\n-  (TARGET_SHCOMPACT && current_function_has_nonlocal_label \\\n+  (TARGET_SHCOMPACT && current_function_saves_all_registers \\\n    ? (8 * (/* r28-r35 */ 8 + /* r44-r59 */ 16 + /* tr5-tr7 */ 3) \\\n       + (TARGET_FPU_ANY ? 4 * (/* fr36 - fr63 */ 28) : 0)) \\\n    : 0)"}, {"sha": "591bb70938961b683274a464ef3b58f0f241048c", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac9cbc5e873546f17db896f8110367376f69c52/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=6ac9cbc5e873546f17db896f8110367376f69c52", "patch": "@@ -5023,7 +5023,7 @@ label:\n   [(set (match_dup 0) (match_dup 1))]\n   \"\n {\n-  if (TARGET_SHCOMPACT && current_function_has_nonlocal_label)\n+  if (TARGET_SHCOMPACT && current_function_saves_all_registers)\n     operands[1] = gen_frame_mem (SImode, return_address_pointer_rtx);\n }\")\n "}]}