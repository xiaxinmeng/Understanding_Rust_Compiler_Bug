{"sha": "217c08c57118c5afc573dbaa4bcef5874787616f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE3YzA4YzU3MTE4YzVhZmM1NzNkYmFhNGJjZWY1ODc0Nzg3NjE2Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-01-14T10:35:13Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-01-14T10:35:13Z"}, "message": "IPA ICF: handle IMAGPART_EXPR and REALPART_EXPR.\n\n\t* gcc.dg/ipa/pr64307.c: New test.\n\t* ipa-icf-gimple.c (func_checker::compare_operand): Add support for\n\tIMAGPART_EXPR and REALPART_EXPR and fix BIT_FIELD_REF comparison.\n\nFrom-SVN: r219586", "tree": {"sha": "9f702d94b0a0ab657939adb1fa1b6c7431d3b8d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f702d94b0a0ab657939adb1fa1b6c7431d3b8d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/217c08c57118c5afc573dbaa4bcef5874787616f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/217c08c57118c5afc573dbaa4bcef5874787616f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/217c08c57118c5afc573dbaa4bcef5874787616f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/217c08c57118c5afc573dbaa4bcef5874787616f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f29e90f54168a3f075476860fd5bf5ee71cb895a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29e90f54168a3f075476860fd5bf5ee71cb895a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29e90f54168a3f075476860fd5bf5ee71cb895a"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "3d4c8ab640edb64223c80c3d5c05803cace07b5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=217c08c57118c5afc573dbaa4bcef5874787616f", "patch": "@@ -1,3 +1,8 @@\n+2015-01-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf-gimple.c (func_checker::compare_operand): Add support for\n+\tIMAGPART_EXPR and REALPART_EXPR and fix BIT_FIELD_REF comparison.\n+\n 2015-01-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/64460"}, {"sha": "05c2a23bd6f1f489dc8ef62d8c285d2a0e0ab8c2", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=217c08c57118c5afc573dbaa4bcef5874787616f", "patch": "@@ -448,6 +448,8 @@ func_checker::compare_operand (tree t1, tree t2)\n \n \treturn return_with_debug (ret);\n       }\n+    case IMAGPART_EXPR:\n+    case REALPART_EXPR:\n     case ADDR_EXPR:\n       {\n \tx1 = TREE_OPERAND (t1, 0);\n@@ -458,7 +460,17 @@ func_checker::compare_operand (tree t1, tree t2)\n       }\n     case BIT_FIELD_REF:\n       {\n-\tret = compare_decl (t1, t2);\n+\tx1 = TREE_OPERAND (t1, 0);\n+\tx2 = TREE_OPERAND (t2, 0);\n+\ty1 = TREE_OPERAND (t1, 1);\n+\ty2 = TREE_OPERAND (t2, 1);\n+\tz1 = TREE_OPERAND (t1, 2);\n+\tz2 = TREE_OPERAND (t2, 2);\n+\n+\tret = compare_operand (x1, x2)\n+\t      && compare_cst_or_decl (y1, y2)\n+\t      && compare_cst_or_decl (z1, z2);\n+\n \treturn return_with_debug (ret);\n       }\n     case SSA_NAME:"}, {"sha": "efb7c378b9507f0e3ebc1d8a52aa02ac6116c8ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=217c08c57118c5afc573dbaa4bcef5874787616f", "patch": "@@ -1,3 +1,7 @@\n+2015-01-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/ipa/pr64307.c: New test.\n+\n 2015-01-14  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* gcc.target/aarch64/vect-movi.c: Check for vectorization for"}, {"sha": "66a5df46a401601deefb23f5486e6e5d329c4028", "filename": "gcc/testsuite/gcc.dg/ipa/pr64307.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr64307.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/217c08c57118c5afc573dbaa4bcef5874787616f/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr64307.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr64307.c?ref=217c08c57118c5afc573dbaa4bcef5874787616f", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -fipa-icf -fdump-ipa-icf\"  } */\n+\n+#include <complex.h>\n+\n+typedef _Complex float COMPLEX_FLOAT;\n+\n+__attribute__ ((noinline))\n+static float real_part(COMPLEX_FLOAT a)\n+{\n+  return *(float*)(&a);\n+}\n+\n+__attribute__ ((noinline))\n+static float real_part_2(COMPLEX_FLOAT a)\n+{\n+  return ((float*)(&a))[0];\n+}\n+\n+int main()\n+{\n+  COMPLEX_FLOAT f = 1.0f + _Complex_I;\n+\n+  float r1 = real_part(f);\n+  float r2 = real_part_2(f);\n+\n+  return r1 - r2;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Semantic equality hit:real_part_2->real_part\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 1\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}