{"sha": "bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI2NGJlZjY1OWRjNWIxMWZlMWY4ZmYxZjdkZjY1NjAzYzlkODg3Ng==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-09-05T15:37:52Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-09-05T15:37:52Z"}, "message": "PR c++/91644 - ICE with constinit in function template.\n\n\t* decl.c (start_decl): Call retrofit_lang_decl for constinit variables.\n\t* pt.c (tsubst_expr): Pass LOOKUP_CONSTINIT down to cp_finish_decl for\n\tconstinit variables.\n\n\t* g++.dg/cpp2a/constinit13.C: New test.\n\nFrom-SVN: r275421", "tree": {"sha": "4915ab25b64bdbc9959c1361e1c0ad9dc63ec1d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4915ab25b64bdbc9959c1361e1c0ad9dc63ec1d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2c113aed6f2ae2fca28cd5a8fab9c857b97dd2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c113aed6f2ae2fca28cd5a8fab9c857b97dd2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c113aed6f2ae2fca28cd5a8fab9c857b97dd2b"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "31a04ef226a84ca4ee52102745ad43e50c73a8ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "patch": "@@ -1,3 +1,10 @@\n+2019-09-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91644 - ICE with constinit in function template.\n+\t* decl.c (start_decl): Call retrofit_lang_decl for constinit variables.\n+\t* pt.c (tsubst_expr): Pass LOOKUP_CONSTINIT down to cp_finish_decl for\n+\tconstinit variables.\n+\n 2019-09-05  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (DECL_VTABLE_OR_VTT_P): Forward to DECL_VIRTUAL_P."}, {"sha": "825e1e61b5eb9100b9885d35daa6418277e2d919", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "patch": "@@ -5308,7 +5308,14 @@ start_decl (const cp_declarator *declarator,\n     decl = maybe_push_decl (decl);\n \n   if (processing_template_decl)\n-    decl = push_template_decl (decl);\n+    {\n+      /* Make sure that for a `constinit' decl push_template_decl creates\n+\t a DECL_TEMPLATE_INFO info for us, so that cp_finish_decl can then set\n+\t TINFO_VAR_DECLARED_CONSTINIT.  */\n+      if (decl_spec_seq_has_spec_p (declspecs, ds_constinit))\n+\tretrofit_lang_decl (decl);\n+      decl = push_template_decl (decl);\n+    }\n   if (decl == error_mark_node)\n     return error_mark_node;\n "}, {"sha": "cec9798eef46976b92af299d3b3abe4a6b35f0f4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "patch": "@@ -17108,6 +17108,13 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \telse\n \t  {\n \t    init = DECL_INITIAL (decl);\n+\t    /* The following tsubst call will clear the DECL_TEMPLATE_INFO\n+\t       for local variables, so save if DECL was declared constinit.  */\n+\t    const bool constinit_p\n+\t      = (VAR_P (decl)\n+\t\t && DECL_LANG_SPECIFIC (decl)\n+\t\t && DECL_TEMPLATE_INFO (decl)\n+\t\t && TINFO_VAR_DECLARED_CONSTINIT (DECL_TEMPLATE_INFO (decl)));\n \t    decl = tsubst (decl, args, complain, in_decl);\n \t    if (decl != error_mark_node)\n \t      {\n@@ -17146,7 +17153,7 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t  }\n \t\telse\n \t\t  {\n-\t\t    int const_init = false;\n+\t\t    bool const_init = false;\n \t\t    unsigned int cnt = 0;\n \t\t    tree first = NULL_TREE, ndecl = error_mark_node;\n \t\t    maybe_push_decl (decl);\n@@ -17167,7 +17174,8 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t    if (ndecl != error_mark_node)\n \t\t      cp_maybe_mangle_decomp (ndecl, first, cnt);\n \n-\t\t    cp_finish_decl (decl, init, const_init, NULL_TREE, 0);\n+\t\t    cp_finish_decl (decl, init, const_init, NULL_TREE,\n+\t\t\t\t    constinit_p ? LOOKUP_CONSTINIT : 0);\n \n \t\t    if (ndecl != error_mark_node)\n \t\t      cp_finish_decomp (ndecl, first, cnt);"}, {"sha": "9940cec8879759f0087bd6e50724dffd9b432140", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "patch": "@@ -1,3 +1,8 @@\n+2019-09-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91644 - ICE with constinit in function template.\n+\t* g++.dg/cpp2a/constinit13.C: New test.\n+\n 2019-09-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/91001"}, {"sha": "8ea64cc0e1e45fd6e8654c5c7e4d5c0aa930e6fb", "filename": "gcc/testsuite/g++.dg/cpp2a/constinit13.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstinit13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstinit13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstinit13.C?ref=bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "patch": "@@ -0,0 +1,33 @@\n+// PR c++/91644 - ICE with constinit in function template.\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T>\n+static void fn1 ()\n+{\n+  static __constinit auto v1 = 0;\n+  static __constinit int v2 = 0;\n+}\n+\n+int nonconst;\n+\n+template <typename T>\n+static void fn2 ()\n+{\n+  static __constinit auto v1 = nonconst; // { dg-error \"does not have a constant initializer|not usable\" }\n+  static __constinit int v2 = nonconst; // { dg-error \"does not have a constant initializer|not usable\" }\n+}\n+\n+template <typename T>\n+static void fn3 ()\n+{\n+  static __constinit T v1 = 0;\n+  static __constinit T v2 = nonconst; // { dg-error \"does not have a constant initializer|not usable\" }\n+}\n+\n+void\n+g ()\n+{\n+  fn1<int>();\n+  fn2<int>();\n+  fn3<int>();\n+}"}]}