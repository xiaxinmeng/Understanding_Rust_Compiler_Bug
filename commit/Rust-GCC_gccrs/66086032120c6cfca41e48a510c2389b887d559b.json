{"sha": "66086032120c6cfca41e48a510c2389b887d559b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwODYwMzIxMjBjNmNmY2E0MWU0OGE1MTBjMjM4OWI4ODdkNTU5Yg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-02-14T21:33:29Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-02-14T21:33:29Z"}, "message": "PR 81552 Improve and document -flag-init-integer\n\nMake the option handling code parse the -flag-init-integer value as a\nC long type, allowing a larger range on systems where long is a larger\ntype than int.  Document the behavior.\n\nRegtested on x86_64-pc-linux-gnu, committed as obvious.\n\n2019-02-14  Janne Blomqvist  <jb@gcc.gnu.org>\n\n        PR fortran/81552\n        * gfortran.h (gfc_option_t): Make flag_init_integer_value a long.\n        * options.c (gfc_handle_option): Use strtol instead of atoi.\n        * invoke.texi: Document -finit-integer behavior in more detail\n\nFrom-SVN: r268906", "tree": {"sha": "d2f035d8f7f33b8b0f90911eeb12b4204955d513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2f035d8f7f33b8b0f90911eeb12b4204955d513"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66086032120c6cfca41e48a510c2389b887d559b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66086032120c6cfca41e48a510c2389b887d559b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66086032120c6cfca41e48a510c2389b887d559b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66086032120c6cfca41e48a510c2389b887d559b/comments", "author": null, "committer": null, "parents": [{"sha": "2f2b8e4054f5b84594a9b113e409e73480f2ebdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2b8e4054f5b84594a9b113e409e73480f2ebdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2b8e4054f5b84594a9b113e409e73480f2ebdf"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "3a8c00d4a3b27fd8e43b347940d21516cf3426ea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=66086032120c6cfca41e48a510c2389b887d559b", "patch": "@@ -1,3 +1,10 @@\n+2019-02-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/81552\n+\t* gfortran.h (gfc_option_t): Make flag_init_integer_value a long.\n+\t* options.c (gfc_handle_option): Use strtol instead of atoi.\n+\t* invoke.texi: Document -finit-integer behavior in more detail.\n+\n 2019-02-14  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/88248"}, {"sha": "526897c417059295851bc5f2620341b143134b22", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=66086032120c6cfca41e48a510c2389b887d559b", "patch": "@@ -2681,7 +2681,7 @@ typedef struct\n   int flag_preprocessed;\n   int flag_d_lines;\n   int flag_init_integer;\n-  int flag_init_integer_value;\n+  long flag_init_integer_value;\n   int flag_init_logical;\n   int flag_init_character;\n   char flag_init_character_value;"}, {"sha": "a5d81960a611a0cbd51211fbcfee61f0bf6a103b", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=66086032120c6cfca41e48a510c2389b887d559b", "patch": "@@ -1779,6 +1779,11 @@ use @option{-finit-real=snan}; note, however, that compile-time\n optimizations may convert them into quiet NaN and that trapping\n needs to be enabled (e.g. via @option{-ffpe-trap}).\n \n+The @option{-finit-integer} option will parse the value into an\n+integer of type @code{INTEGER(kind=C_LONG)} on the host.  Said value\n+is then assigned to the integer variables in the Fortran code, which\n+might result in wraparound if the value is too large for the kind.\n+\n Finally, note that enabling any of the @option{-finit-*} options will\n silence warnings that would have been emitted by @option{-Wuninitialized}\n for the affected local variables."}, {"sha": "f2a0151670e950597803aef3c5083c2b360c4521", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66086032120c6cfca41e48a510c2389b887d559b/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=66086032120c6cfca41e48a510c2389b887d559b", "patch": "@@ -708,7 +708,7 @@ gfc_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n \n     case OPT_finit_integer_:\n       gfc_option.flag_init_integer = GFC_INIT_INTEGER_ON;\n-      gfc_option.flag_init_integer_value = atoi (arg);\n+      gfc_option.flag_init_integer_value = strtol (arg, NULL, 10);\n       break;\n \n     case OPT_finit_character_:"}]}