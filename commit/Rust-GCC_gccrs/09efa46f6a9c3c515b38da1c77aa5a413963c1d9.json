{"sha": "09efa46f6a9c3c515b38da1c77aa5a413963c1d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllZmE0NmY2YTljM2M1MTViMzhkYTFjNzdhYTVhNDEzOTYzYzFkOQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-04-27T16:09:10Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-04-27T16:09:10Z"}, "message": "jni.h (struct JNINativeInterface): Fixed types in Get/Set*ArrayRegion declarations.\n\n2001-04-27  Martin Kahlert  <martin.kahlert@infineon.com>\n\n\t* include/jni.h (struct JNINativeInterface): Fixed types in\n\tGet/Set*ArrayRegion declarations.\n\t(class _Jv_JNIEnv): Likewise.\n\nFrom-SVN: r41633", "tree": {"sha": "6e99fc884ed13886ce1e4536d324382a5c9ec5b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e99fc884ed13886ce1e4536d324382a5c9ec5b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09efa46f6a9c3c515b38da1c77aa5a413963c1d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09efa46f6a9c3c515b38da1c77aa5a413963c1d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09efa46f6a9c3c515b38da1c77aa5a413963c1d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09efa46f6a9c3c515b38da1c77aa5a413963c1d9/comments", "author": null, "committer": null, "parents": [{"sha": "2d46ec8394a92a61ce70f4d9893596343b7ba118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d46ec8394a92a61ce70f4d9893596343b7ba118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d46ec8394a92a61ce70f4d9893596343b7ba118"}], "stats": {"total": 94, "additions": 50, "deletions": 44}, "files": [{"sha": "3321bcb2cc39e341d7103b91fb9af41356993f35", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09efa46f6a9c3c515b38da1c77aa5a413963c1d9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09efa46f6a9c3c515b38da1c77aa5a413963c1d9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=09efa46f6a9c3c515b38da1c77aa5a413963c1d9", "patch": "@@ -1,4 +1,10 @@\n-2001-04-26  Alexandre Oliva  <aoliva@redhat.com>\n+2001-04-27  Martin Kahlert  <martin.kahlert@infineon.com>\n+\n+\t* include/jni.h (struct JNINativeInterface): Fixed types in\n+\tGet/Set*ArrayRegion declarations.\n+\t(class _Jv_JNIEnv): Likewise.\n+\n+2001-04-25  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* configure.in: Obtain THREADS with `gcc -v'.\n \t* configure: Rebuilt."}, {"sha": "832558a18f1d91ebf47a521be43ba5b83439f576", "filename": "libjava/include/jni.h", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09efa46f6a9c3c515b38da1c77aa5a413963c1d9/libjava%2Finclude%2Fjni.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09efa46f6a9c3c515b38da1c77aa5a413963c1d9/libjava%2Finclude%2Fjni.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjni.h?ref=09efa46f6a9c3c515b38da1c77aa5a413963c1d9", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -494,37 +494,37 @@ struct JNINativeInterface\n \n   void \t\t(*GetBooleanArrayRegion)   (JNIEnv *, jbooleanArray,\n \t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetByteArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetCharArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetShortArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetIntArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetLongArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetFloatArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*GetDoubleArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n+  void \t\t(*GetByteArrayRegion)\t   (JNIEnv *, jbyteArray,\n+\t\t\t\t\t    jsize, jsize, jbyte *);\n+  void \t\t(*GetCharArrayRegion)\t   (JNIEnv *, jcharArray,\n+\t\t\t\t\t    jsize, jsize, jchar *);\n+  void \t\t(*GetShortArrayRegion)\t   (JNIEnv *, jshortArray,\n+\t\t\t\t\t    jsize, jsize, jshort *);\n+  void \t\t(*GetIntArrayRegion)\t   (JNIEnv *, jintArray,\n+\t\t\t\t\t    jsize, jsize, jint *);\n+  void \t\t(*GetLongArrayRegion)\t   (JNIEnv *, jlongArray,\n+\t\t\t\t\t    jsize, jsize, jlong *);\n+  void \t\t(*GetFloatArrayRegion)\t   (JNIEnv *, jfloatArray,\n+\t\t\t\t\t    jsize, jsize, jfloat *);\n+  void \t\t(*GetDoubleArrayRegion)\t   (JNIEnv *, jdoubleArray,\n+\t\t\t\t\t    jsize, jsize, jdouble *);\n \n   void \t\t(*SetBooleanArrayRegion)   (JNIEnv *, jbooleanArray,\n \t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetByteArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetCharArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetShortArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetIntArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetLongArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetFloatArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n-  void \t\t(*SetDoubleArrayRegion)\t   (JNIEnv *, jbooleanArray,\n-\t\t\t\t\t    jsize, jsize, jboolean *);\n+  void \t\t(*SetByteArrayRegion)\t   (JNIEnv *, jbyteArray,\n+\t\t\t\t\t    jsize, jsize, jbyte *);\n+  void \t\t(*SetCharArrayRegion)\t   (JNIEnv *, jcharArray,\n+\t\t\t\t\t    jsize, jsize, jchar *);\n+  void \t\t(*SetShortArrayRegion)\t   (JNIEnv *, jshortArray,\n+\t\t\t\t\t    jsize, jsize, jshort *);\n+  void \t\t(*SetIntArrayRegion)\t   (JNIEnv *, jintArray,\n+\t\t\t\t\t    jsize, jsize, jint *);\n+  void \t\t(*SetLongArrayRegion)\t   (JNIEnv *, jlongArray,\n+\t\t\t\t\t    jsize, jsize, jlong *);\n+  void \t\t(*SetFloatArrayRegion)\t   (JNIEnv *, jfloatArray,\n+\t\t\t\t\t    jsize, jsize, jfloat *);\n+  void \t\t(*SetDoubleArrayRegion)\t   (JNIEnv *, jdoubleArray,\n+\t\t\t\t\t    jsize, jsize, jdouble *);\n \n   jint     (*RegisterNatives)              (JNIEnv *, jclass,\n \t\t\t\t\t    const JNINativeMethod *, jint);\n@@ -1343,49 +1343,49 @@ class _Jv_JNIEnv\n   void GetBooleanArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n   { p->GetBooleanArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetByteArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetByteArrayRegion (jbyteArray val0, jsize val1, jsize val2, jbyte * val3)\n   { p->GetByteArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetCharArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetCharArrayRegion (jcharArray val0, jsize val1, jsize val2, jchar * val3)\n   { p->GetCharArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetShortArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetShortArrayRegion (jshortArray val0, jsize val1, jsize val2, jshort * val3)\n   { p->GetShortArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetIntArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetIntArrayRegion (jintArray val0, jsize val1, jsize val2, jint * val3)\n   { p->GetIntArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetLongArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetLongArrayRegion (jlongArray val0, jsize val1, jsize val2, jlong * val3)\n   { p->GetLongArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetFloatArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetFloatArrayRegion (jfloatArray val0, jsize val1, jsize val2, jfloat * val3)\n   { p->GetFloatArrayRegion (this, val0, val1, val2, val3); }\n \n-  void GetDoubleArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void GetDoubleArrayRegion (jdoubleArray val0, jsize val1, jsize val2, jdouble * val3)\n   { p->GetDoubleArrayRegion (this, val0, val1, val2, val3); }\n \n   void SetBooleanArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n   { p->SetBooleanArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetByteArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetByteArrayRegion (jbyteArray val0, jsize val1, jsize val2, jbyte * val3)\n   { p->SetByteArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetCharArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetCharArrayRegion (jcharArray val0, jsize val1, jsize val2, jchar * val3)\n   { p->SetCharArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetShortArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetShortArrayRegion (jshortArray val0, jsize val1, jsize val2, jshort * val3)\n   { p->SetShortArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetIntArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetIntArrayRegion (jintArray val0, jsize val1, jsize val2, jint * val3)\n   { p->SetIntArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetLongArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetLongArrayRegion (jlongArray val0, jsize val1, jsize val2, jlong * val3)\n   { p->SetLongArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetFloatArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetFloatArrayRegion (jfloatArray val0, jsize val1, jsize val2, jfloat * val3)\n   { p->SetFloatArrayRegion (this, val0, val1, val2, val3); }\n \n-  void SetDoubleArrayRegion (jbooleanArray val0, jsize val1, jsize val2, jboolean * val3)\n+  void SetDoubleArrayRegion (jdoubleArray val0, jsize val1, jsize val2, jdouble * val3)\n   { p->SetDoubleArrayRegion (this, val0, val1, val2, val3); }\n \n   jint RegisterNatives (jclass cl0, const JNINativeMethod * val1, jint val2)"}]}