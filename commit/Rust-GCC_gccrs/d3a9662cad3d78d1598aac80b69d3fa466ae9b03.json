{"sha": "d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhOTY2MmNhZDNkNzhkMTU5OGFhYzgwYjY5ZDNmYTQ2NmFlOWIwMw==", "commit": {"author": {"name": "Bernhard Fischer", "email": "aldot@gcc.gnu.org", "date": "2007-11-08T13:44:09Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2007-11-08T13:44:09Z"}, "message": "re PR target/16350 (gcc only understands little endian ARM systems)\n\n  PR target/16350\n* config.gcc: For arm*b-* define TARGET_BIG_ENDIAN_DEFAULT.\n* config/arm/linux-elf.h (TARGET_ENDIAN_DEFAULT): Define based on TARGET_BIG_ENDIAN_DEFAULT.\n   Use for MULTILIB_DEFAULTS.\n   (TARGET_DEFAULT): Set according to TARGET_ENDIAN_DEFAULT.\n   (LINUX_TARGET_LINK_SPEC): Pass -mlittle-endian on to the assembler.\n* config/arm/linux-eabi.h (TARGET_LINKER_EMULATION): Set according to TARGET_BIG_ENDIAN_DEFAULT.\n   (SUBTARGET_EXTRA_LINK_SPEC): Likewise.\n* gcc/config/arm/bpabi.h (TARGET_DEFAULT_MASK): Set according to TARGET_BIG_ENDIAN_DEFAULT.\n\nFrom-SVN: r129999", "tree": {"sha": "7d58b8b7f19b7bb6f0572a681318829dd2cd348e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d58b8b7f19b7bb6f0572a681318829dd2cd348e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/comments", "author": null, "committer": null, "parents": [{"sha": "c4e2c79ee42a0fef895b3e3672a8c34561a034a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e2c79ee42a0fef895b3e3672a8c34561a034a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e2c79ee42a0fef895b3e3672a8c34561a034a3"}], "stats": {"total": 82, "additions": 65, "deletions": 17}, "files": [{"sha": "239455d849ee381a5547bc9e7d3d87e5626e414c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "patch": "@@ -1,3 +1,17 @@\n+2007-11-07  <aldot@gcc.gnu.org>  Bernhard Fischer\n+\n+\tPR target/16350\n+\t* config.gcc: For arm*b-* define TARGET_BIG_ENDIAN_DEFAULT.\n+\t* config/arm/linux-elf.h (TARGET_ENDIAN_DEFAULT): Define based on\n+\tTARGET_BIG_ENDIAN_DEFAULT.  Use for MULTILIB_DEFAULTS.\n+\t(TARGET_DEFAULT): Set according to TARGET_ENDIAN_DEFAULT.\n+\t(LINUX_TARGET_LINK_SPEC): Pass -mlittle-endian on to the assembler.\n+\t* config/arm/linux-eabi.h (TARGET_LINKER_EMULATION): Set according\n+\tto TARGET_BIG_ENDIAN_DEFAULT.\n+\t(SUBTARGET_EXTRA_LINK_SPEC): Likewise.\n+\t* gcc/config/arm/bpabi.h (TARGET_DEFAULT_MASK): Set according\n+\tto TARGET_BIG_ENDIAN_DEFAULT.\n+\n 2007-11-07  Diego Novillo  <dnovillo@google.com>\n \n \t* tree.h (struct tree_struct_field_tag): Move field"}, {"sha": "0fc329cdda7ef518ecfe204352cc86fd2ea976fe", "filename": "gcc/config.gcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "patch": "@@ -704,6 +704,11 @@ arm*-*-netbsd*)\n \t;;\n arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n \ttm_file=\"dbxelf.h elfos.h linux.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n+\tcase $target in\n+\tarm*b-*)\n+\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n+\t\t;;\n+\tesac\n \ttmake_file=\"${tmake_file} t-linux arm/t-arm\"\n \tcase ${target} in\n \tarm*-*-linux-*eabi)"}, {"sha": "a67f6498cdd26509ae4bf2e1656efeb23fdbd2f4", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "patch": "@@ -29,12 +29,20 @@\n #define TARGET_UNWIND_INFO 1\n \n /* Section 4.1 of the AAPCS requires the use of VFP format.  */\n-#undef FPUTYPE_DEFAULT\n+#undef  FPUTYPE_DEFAULT\n #define FPUTYPE_DEFAULT FPUTYPE_VFP\n \n+/* TARGET_BIG_ENDIAN_DEFAULT is set in\n+   config.gcc for big endian configurations.  */\n+#if TARGET_BIG_ENDIAN_DEFAULT\n+#define TARGET_ENDIAN_DEFAULT MASK_BIG_END\n+#else\n+#define TARGET_ENDIAN_DEFAULT 0\n+#endif\n+\n /* EABI targets should enable interworking by default.  */\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_INTERWORK\n+#undef  TARGET_DEFAULT\n+#define TARGET_DEFAULT (MASK_INTERWORK | TARGET_ENDIAN_DEFAULT)\n \n /* The ARM BPABI functions return a boolean; they use no special\n    calling convention.  */\n@@ -44,11 +52,11 @@\n #define TARGET_LIB_INT_CMP_BIASED !TARGET_BPABI\n \n /* Tell the assembler to build BPABI binaries.  */\n-#undef SUBTARGET_EXTRA_ASM_SPEC\n+#undef  SUBTARGET_EXTRA_ASM_SPEC\n #define SUBTARGET_EXTRA_ASM_SPEC \"%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=4}\"\n \n /* The generic link spec in elf.h does not support shared libraries.  */\n-#undef LINK_SPEC\n+#undef  LINK_SPEC\n #define LINK_SPEC \"%{mbig-endian:-EB} %{mlittle-endian:-EL} \"\t\t\\\n   \"%{static:-Bstatic} %{shared:-shared} %{symbolic:-Bsymbolic} \"\t\\\n   \"-X\""}, {"sha": "4174d70db4db82725f481502f465a4ae6144527e", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "patch": "@@ -21,7 +21,7 @@\n \n /* On EABI GNU/Linux, we want both the BPABI builtins and the\n    GNU/Linux builtins.  */\n-#undef TARGET_OS_CPP_BUILTINS\n+#undef  TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS() \t\t\\\n   do \t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n@@ -32,31 +32,40 @@\n \n /* We default to a soft-float ABI so that binaries can run on all\n    target hardware.  */\n-#undef TARGET_DEFAULT_FLOAT_ABI\n+#undef  TARGET_DEFAULT_FLOAT_ABI\n #define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_SOFT\n \n /* We default to the \"aapcs-linux\" ABI so that enums are int-sized by\n    default.  */\n-#undef ARM_DEFAULT_ABI\n+#undef  ARM_DEFAULT_ABI\n #define ARM_DEFAULT_ABI ARM_ABI_AAPCS_LINUX\n \n /* Default to armv5t so that thumb shared libraries work.\n    The ARM10TDMI core is the default for armv5t, so set\n    SUBTARGET_CPU_DEFAULT to achieve this.  */\n-#undef SUBTARGET_CPU_DEFAULT\n+#undef  SUBTARGET_CPU_DEFAULT\n #define SUBTARGET_CPU_DEFAULT TARGET_CPU_arm10tdmi\n \n-#undef SUBTARGET_EXTRA_LINK_SPEC\n-#define SUBTARGET_EXTRA_LINK_SPEC \" -m armelf_linux_eabi\"\n+/* TARGET_BIG_ENDIAN_DEFAULT is set in\n+   config.gcc for big endian configurations.  */\n+#undef  TARGET_LINKER_EMULATION\n+#if TARGET_BIG_ENDIAN_DEFAULT\n+#define TARGET_LINKER_EMULATION \"armelfb_linux_eabi\"\n+#else\n+#define TARGET_LINKER_EMULATION \"armelf_linux_eabi\"\n+#endif\n+\n+#undef  SUBTARGET_EXTRA_LINK_SPEC\n+#define SUBTARGET_EXTRA_LINK_SPEC \" -m \" TARGET_LINKER_EMULATION\n \n /* Use ld-linux.so.3 so that it will be possible to run \"classic\"\n    GNU/Linux binaries on an EABI system.  */\n-#undef GLIBC_DYNAMIC_LINKER\n+#undef  GLIBC_DYNAMIC_LINKER\n #define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.3\"\n \n /* At this point, bpabi.h will have clobbered LINK_SPEC.  We want to\n    use the GNU/Linux version, not the generic BPABI version.  */\n-#undef LINK_SPEC\n+#undef  LINK_SPEC\n #define LINK_SPEC LINUX_TARGET_LINK_SPEC\n \n /* Use the default LIBGCC_SPEC, not the version in linux-elf.h, as we\n@@ -65,7 +74,7 @@\n \n /* Clear the instruction cache from `beg' to `end'.  This makes an\n    inline system call to SYS_cacheflush.  */\n-#undef CLEAR_INSN_CACHE\n+#undef  CLEAR_INSN_CACHE\n #define CLEAR_INSN_CACHE(BEG, END)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register unsigned long _beg __asm (\"a1\") = (unsigned long) (BEG);\t\\"}, {"sha": "54eba14436f73bfc09c5bca5d5ef02edeab1ba9e", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9662cad3d78d1598aac80b69d3fa466ae9b03/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=d3a9662cad3d78d1598aac80b69d3fa466ae9b03", "patch": "@@ -30,12 +30,24 @@\n #undef  TARGET_DEFAULT_FLOAT_ABI\n #define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD\n \n+/* TARGET_BIG_ENDIAN_DEFAULT is set in\n+   config.gcc for big endian configurations.  */\n+#if TARGET_BIG_ENDIAN_DEFAULT\n+#define TARGET_ENDIAN_DEFAULT    MASK_BIG_END\n+#define TARGET_ENDIAN_OPTION     \"mbig-endian\"\n+#define TARGET_LINKER_EMULATION  \"armelfb_linux\"\n+#else\n+#define TARGET_ENDIAN_DEFAULT    0\n+#define TARGET_ENDIAN_OPTION     \"mlittle-endian\"\n+#define TARGET_LINKER_EMULATION  \"armelf_linux\"\n+#endif\n+\n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT (0)\n+#define TARGET_DEFAULT (TARGET_ENDIAN_DEFAULT)\n \n #define SUBTARGET_CPU_DEFAULT TARGET_CPU_arm6\n \n-#define SUBTARGET_EXTRA_LINK_SPEC \" -m armelf_linux -p\"\n+#define SUBTARGET_EXTRA_LINK_SPEC \" -m \" TARGET_LINKER_EMULATION \" -p\"\n \n #undef  MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS \\\n@@ -60,7 +72,7 @@\n    %{rdynamic:-export-dynamic} \\\n    %{!dynamic-linker:-dynamic-linker \" LINUX_DYNAMIC_LINKER \"} \\\n    -X \\\n-   %{mbig-endian:-EB}\" \\\n+   %{mbig-endian:-EB} %{mlittle-endian:-EL}\" \\\n    SUBTARGET_EXTRA_LINK_SPEC\n \n #undef  LINK_SPEC"}]}