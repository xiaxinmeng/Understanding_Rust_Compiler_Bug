{"sha": "2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwMmFiODY3NDRjY2M5N2NjNjVkNzM5Y2E1MTVjYjdkM2I4ODJkMg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-02-24T13:13:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:29:23Z"}, "message": "[Ada] Variable-sized node types -- cleanup\n\ngcc/ada/\n\n\t* atree.ads, atree.adb, gen_il-gen.ads: Fix comments and clean\n\tup ???  marks.  Rename Set_Ekind to be Mutate_Ekind.\n\t* einfo.ads, sinfo.ads: Likewise.  Change \"definitive\n\tdefinition\" to \"official definition\", because the former sounds\n\tredundant.  Rename Set_Ekind to be Mutate_Ekind.\n\t* checks.adb, contracts.adb, cstand.adb, exp_aggr.adb,\n\texp_attr.adb, exp_ch11.adb, exp_ch3.adb, exp_ch5.adb,\n\texp_ch6.adb, exp_ch7.adb, exp_ch9.adb, exp_disp.adb,\n\texp_dist.adb, exp_imgv.adb, exp_intr.adb, exp_prag.adb,\n\texp_unst.adb, exp_util.adb, gen_il-gen.adb, inline.adb,\n\tlib-writ.adb, lib-xref-spark_specific.adb, sem_aggr.adb,\n\tsem_ch10.adb, sem_ch11.adb, sem_ch12.adb, sem_ch13.adb,\n\tsem_ch3.adb, sem_ch5.adb, sem_ch6.adb, sem_ch7.adb, sem_ch8.adb,\n\tsem_ch9.adb, sem_dist.adb, sem_elab.adb, sem_prag.adb,\n\tsem_util.adb: Rename Set_Ekind to be Mutate_Ekind.", "tree": {"sha": "7f8866412e6188f21a208a7fd8a12f9c2de698c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f8866412e6188f21a208a7fd8a12f9c2de698c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4b06a8ec0db86e8398b8e9f4a98c8950bbd24f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4b06a8ec0db86e8398b8e9f4a98c8950bbd24f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4b06a8ec0db86e8398b8e9f4a98c8950bbd24f"}], "stats": {"total": 1155, "additions": 517, "deletions": 638}, "files": [{"sha": "a725d87e93b30947024315b2652bd15f8e5bf913", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -83,14 +83,15 @@ package body Atree is\n    -- Implementation of Tree Substitution Routines --\n    --------------------------------------------------\n \n-   --  A separate table keeps track of the mapping between rewritten nodes\n-   --  and their corresponding original tree nodes. Rewrite makes an entry\n-   --  in this table for use by Original_Node. By default, if no call is\n-   --  Rewrite, the entry in this table points to the original unwritten node.\n+   --  A separate table keeps track of the mapping between rewritten nodes and\n+   --  their corresponding original tree nodes. Rewrite makes an entry in this\n+   --  table for use by Original_Node. By default the entry in this table\n+   --  points to the original unwritten node. Note that if a node is rewritten\n+   --  more than once, there is no easy way to get to the intermediate\n+   --  rewrites; the node itself is the latest version, and the entry in this\n+   --  table is the original.\n \n-   --  Note: eventually, this should be a field in the Node directly, but\n-   --  for now we do not want to disturb the efficiency of a power of 2\n-   --  for the node size. ????We are getting rid of power-of-2.\n+   --  Note: This could be a node field.\n \n    package Orig_Nodes is new Table.Table (\n       Table_Component_Type => Node_Id,\n@@ -825,9 +826,9 @@ package body Atree is\n       Old_Kind : constant Entity_Kind := Ekind (Old_N);\n \n       --  If this fails, it means you need to call Reinit_Field_To_Zero before\n-      --  calling Set_Ekind. But we have many cases where vanishing fields are\n-      --  expected to reappear after converting to/from E_Void. Other cases are\n-      --  more problematic; set a breakpoint on \"(non-E_Void case)\" below.\n+      --  calling Mutate_Ekind. But we have many cases where vanishing fields\n+      --  are expected to reappear after converting to/from E_Void. Other cases\n+      --  are more problematic; set a breakpoint on \"(non-E_Void case)\" below.\n \n    begin\n       for J in Entity_Field_Table (Old_Kind)'Range loop\n@@ -909,7 +910,7 @@ package body Atree is\n \n    procedure Set_Ekind_Type is new Set_8_Bit_Field (Entity_Kind) with Inline;\n \n-   procedure Set_Ekind\n+   procedure Mutate_Ekind\n      (N : Entity_Id; Val : Entity_Kind)\n    is\n    begin\n@@ -926,7 +927,7 @@ package body Atree is\n \n       Set_Ekind_Type (N, Ekind_Offset, Val);\n       pragma Debug (Validate_Node_Write (N));\n-   end Set_Ekind;\n+   end Mutate_Ekind;\n \n    -----------------------\n    -- Allocate_New_Node --"}, {"sha": "c470ac3ca21bb85c96d822bb01ce91306f3c47ee", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 28, "deletions": 105, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -23,16 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Alloc;\n-with Sinfo.Nodes; use Sinfo.Nodes;\n-with Einfo.Entities; use Einfo.Entities;\n-with Types;  use Types;\n-with System; use System;\n-with Table;\n-with Unchecked_Conversion;\n-\n-package Atree is\n-\n --  This package defines the low-level representation of the tree used to\n --  represent the Ada program internally. Syntactic and semantic information\n --  is combined in this tree. There is no separate symbol table structure.\n@@ -54,81 +44,23 @@ package Atree is\n --  syntax tree format. Subsequent processing in the front end traverses the\n --  tree, transforming it in various ways and adding semantic information.\n \n-   --  ????The following comments should be moved elsewhere.\n-\n-   ----------------------------------------\n-   -- Definitions of fields in tree node --\n-   ----------------------------------------\n-\n-   --  The representation of the tree is completely hidden, using a functional\n-   --  interface for accessing and modifying the contents of nodes. Logically\n-   --  a node contains a number of fields, much as though the nodes were\n-   --  defined as a record type. The fields in a node are as follows:\n-\n-   --   Nkind         Indicates the kind of the node. This field is present\n-   --                 in all nodes. The type is Node_Kind, which is declared\n-   --                 in the package Sinfo.\n-\n-   --   Sloc          Location (Source_Ptr) of the corresponding token\n-   --                 in the Source buffer. The individual node definitions\n-   --                 show which token is referenced by this pointer.\n-\n-   --   In_List       A flag used to indicate if the node is a member\n-   --                 of a node list (see package Nlists).\n-\n-   --   Rewrite_Ins   A flag set if a node is marked as a rewrite inserted\n-   --                 node as a result of a call to Mark_Rewrite_Insertion.\n-\n-   --   Paren_Count   A 2-bit count used in sub-expression nodes to indicate\n-   --                 the level of parentheses. The settings are 0,1,2 and\n-   --                 3 for many. If the value is 3, then an auxiliary table\n-   --                 is used to indicate the real value. Set to zero for\n-   --                 non-subexpression nodes.\n-\n-   --                 Note: the required parentheses surrounding conditional\n-   --                 and quantified expressions count as a level of parens\n-   --                 for this purpose, so e.g. in X := (if A then B else C);\n-   --                 Paren_Count for the right side will be 1.\n-\n-   --   Comes_From_Source\n-   --                 This flag is present in all nodes. It is set if the\n-   --                 node is built by the scanner or parser, and clear if\n-   --                 the node is built by the analyzer or expander. It\n-   --                 indicates that the node corresponds to a construct\n-   --                 that appears in the original source program.\n-\n-   --   Analyzed      This flag is present in all nodes. It is set when\n-   --                 a node is analyzed, and is used to avoid analyzing\n-   --                 the same node twice. Analysis includes expansion if\n-   --                 expansion is active, so in this case if the flag is\n-   --                 set it means the node has been analyzed and expanded.\n-\n-   --   Error_Posted  This flag is present in all nodes. It is set when\n-   --                 an error message is posted which is associated with\n-   --                 the flagged node. This is used to avoid posting more\n-   --                 than one message on the same node.\n-\n-   --   Link          For a node, points to the Parent. For a list, points\n-   --                 to the list header. Note that in the latter case, a\n-   --                 client cannot modify the link field. This field is\n-   --                 private to the Atree package (but is also modified\n-   --                 by the Nlists package).\n-\n-   --  The following additional fields are present in extended nodes used\n-   --  for entities (Nkind in N_Entity).\n-\n-   --   Ekind         Entity type. This field indicates the type of the\n-   --                 entity, it is of type Entity_Kind which is defined\n-   --                 in package Einfo.\n-\n-   --   Convention    Entity convention (Convention_Id value)\n-\n-   --  Access to fields is generally done through the getters and setters in\n-   --  packages Sinfo.Nodes and Einfo.Entities.  However, in specialized\n-   --  circumstances (examples are the circuit in generic instantiation to copy\n-   --  trees, and in the tree dump routine), it is useful to be able to do\n-   --  untyped traversals, and an internal package in Atree allows for direct\n-   --  untyped accesses in such cases.\n+with Alloc;\n+with Sinfo.Nodes; use Sinfo.Nodes;\n+with Einfo.Entities; use Einfo.Entities;\n+with Types;  use Types;\n+with System; use System;\n+with Table;\n+with Unchecked_Conversion;\n+\n+package Atree is\n+\n+   --  Access to node fields is generally done through the getters and setters\n+   --  in packages Sinfo.Nodes and Einfo.Entities, which are automatically\n+   --  generated (see Gen_IL.Gen). However, in specialized circumstances\n+   --  (examples are the circuit in generic instantiation to copy trees, and in\n+   --  the tree dump routine), it is useful to be able to do untyped\n+   --  traversals, and an internal package in Atree allows for direct untyped\n+   --  accesses in such cases.\n \n    function Last_Node_Id return Node_Id;\n    --  Returns Id of last allocated node Id\n@@ -334,12 +266,9 @@ package Atree is\n    --  of Comes_From_Source from OldN to NewN.\n \n    procedure Change_Node (N : Node_Id; New_Kind : Node_Kind);\n-   --  This procedure replaces the given node by setting its Nkind field to\n-   --  the indicated value and resetting all other fields to their default\n-   --  values except for Sloc, which is unchanged, and the Parent pointer\n-   --  and list links, which are also unchanged. All other information in\n-   --  the original node is lost. The new node has an extension if the\n-   --  original node had an extension.????somewhat wrong.\n+   --  This procedure replaces the given node by setting its Nkind field to the\n+   --  indicated value and resetting all other fields to their default values\n+   --  except for certain fields that are preserved (see body for details).\n \n    procedure Copy_Node (Source, Destination : Node_Or_Entity_Id);\n    --  Copy the entire contents of the source node to the destination node.\n@@ -579,19 +508,15 @@ package Atree is\n    --  original node, i.e. the old contents of Old_Node.\n \n    procedure Replace (Old_Node, New_Node : Node_Id);\n-   --  This is similar to Rewrite, except that the old value of Old_Node is\n-   --  not saved, and the New_Node is deleted after the replace, since it\n-   --     In what sense is it \"deleted\"????\n-   --  is assumed that it can no longer be legitimately needed. The flag\n+   --  This is similar to Rewrite, except that the old value of Old_Node\n+   --  is not saved. New_Node should not be used after Replace.  The flag\n    --  Is_Rewrite_Substitution will be False for the resulting node, unless\n    --  it was already true on entry, and Original_Node will not return the\n-   --  original contents of the Old_Node, but rather the New_Node value (unless\n-   --     How is this \"unless\" true????\n-   --  Old_Node had already been rewritten using Rewrite). Replace also\n-   --  preserves the setting of Comes_From_Source.\n+   --  original contents of the Old_Node, but rather the New_Node value.\n+   --  Replace also preserves the setting of Comes_From_Source.\n    --\n-   --  Note, New_Node must not contain references to Old_Node, for example as\n-   --  descendants, since the rewrite would make such references invalid. If\n+   --  Note that New_Node must not contain references to Old_Node, for example\n+   --  as descendants, since the rewrite would make such references invalid. If\n    --  New_Node does need to reference Old_Node, then these references should\n    --  be to a relocated copy of Old_Node (see Relocate_Node procedure).\n    --\n@@ -614,7 +539,7 @@ package Atree is\n    --\n    --  Note: Parents are not preserved in original tree nodes that are\n    --  retrieved in this way (i.e. their children may have children whose\n-   --  pointers which reference some other node). This needs more details???\n+   --  Parent pointers reference some other node).\n    --\n    --  Note: there is no direct mechanism for deleting an original node (in\n    --  a manner that can be reversed later). One possible approach is to use\n@@ -660,10 +585,8 @@ package Atree is\n    --  vanishing fields might be used for totally unrelated fields in the new\n    --  node. See Reinit_Field_To_Zero.\n \n-   procedure Set_Ekind\n+   procedure Mutate_Ekind\n      (N : Entity_Id; Val : Entity_Kind) with Inline;\n-   --  ????Perhaps should be called Mutate_Ekind.\n-   --\n    --  Ekind is also like a discriminant, and is mostly treated as above (see\n    --  Mutate_Nkind). However, there are a few cases where we set the Ekind\n    --  from its initial E_Void value to something else, then set it back to"}, {"sha": "faf532617f1fba6f43862d64b63f35fec612d413", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -8158,7 +8158,7 @@ package body Checks is\n             --  cause our object declaration to remain unanalyzed we must do\n             --  some manual decoration.\n \n-            Set_Ekind (Var_Id, E_Variable);\n+            Mutate_Ekind (Var_Id, E_Variable);\n             Set_Etype (Var_Id, Typ);\n \n             Insert_Action (Exp,"}, {"sha": "59b53dec61e3eecc1d4019b540be0a48d83ca947", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1580,7 +1580,7 @@ package body Contracts is\n       --  in its visible declarations.\n \n       if Nkind (Templ) = N_Generic_Package_Declaration then\n-         Set_Ekind (Templ_Id, E_Generic_Package);\n+         Mutate_Ekind (Templ_Id, E_Generic_Package);\n \n          if Present (Visible_Declarations (Specification (Templ))) then\n             Decl := First (Visible_Declarations (Specification (Templ)));\n@@ -1590,7 +1590,7 @@ package body Contracts is\n       --  declarations.\n \n       elsif Nkind (Templ) = N_Package_Body then\n-         Set_Ekind (Templ_Id, E_Package_Body);\n+         Mutate_Ekind (Templ_Id, E_Package_Body);\n \n          if Present (Declarations (Templ)) then\n             Decl := First (Declarations (Templ));\n@@ -1600,9 +1600,9 @@ package body Contracts is\n \n       elsif Nkind (Templ) = N_Generic_Subprogram_Declaration then\n          if Nkind (Specification (Templ)) = N_Function_Specification then\n-            Set_Ekind (Templ_Id, E_Generic_Function);\n+            Mutate_Ekind (Templ_Id, E_Generic_Function);\n          else\n-            Set_Ekind (Templ_Id, E_Generic_Procedure);\n+            Mutate_Ekind (Templ_Id, E_Generic_Procedure);\n          end if;\n \n          --  When the generic subprogram acts as a compilation unit, inspect\n@@ -1626,7 +1626,7 @@ package body Contracts is\n       --  its declarations.\n \n       elsif Nkind (Templ) = N_Subprogram_Body then\n-         Set_Ekind (Templ_Id, E_Subprogram_Body);\n+         Mutate_Ekind (Templ_Id, E_Subprogram_Body);\n \n          if Present (Declarations (Templ)) then\n             Decl := First (Declarations (Templ));"}, {"sha": "d087ce2fa8fc855a051dce03f11ffcf15a804b33", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -203,7 +203,7 @@ package body CStand is\n         Make_Floating_Point_Definition (Stloc,\n           Digits_Expression => Make_Integer (UI_From_Int (Digs))));\n \n-      Set_Ekind                      (E, E_Floating_Point_Type);\n+      Mutate_Ekind                   (E, E_Floating_Point_Type);\n       Set_Etype                      (E, E);\n       Init_Digits_Value              (E, Digs);\n       Set_Float_Rep                  (E, Rep);\n@@ -247,7 +247,7 @@ package body CStand is\n           Low_Bound  => Make_Integer (Lbound),\n           High_Bound => Make_Integer (Ubound)));\n \n-      Set_Ekind                      (E, E_Signed_Integer_Type);\n+      Mutate_Ekind                   (E, E_Signed_Integer_Type);\n       Set_Etype                      (E, E);\n       Init_Size                      (E, Siz);\n       Set_Elem_Alignment             (E);\n@@ -272,7 +272,7 @@ package body CStand is\n    begin\n       Set_Defining_Identifier (Decl, Uns);\n \n-      Set_Ekind                      (Uns, E_Modular_Integer_Type);\n+      Mutate_Ekind                   (Uns, E_Modular_Integer_Type);\n       Set_Scope                      (Uns, Standard_Standard);\n       Set_Etype                      (Uns, Uns);\n       Init_Size                      (Uns, Siz);\n@@ -467,7 +467,7 @@ package body CStand is\n \n       procedure Build_Exception (S : Standard_Entity_Type) is\n       begin\n-         Set_Ekind     (Standard_Entity (S), E_Exception);\n+         Mutate_Ekind  (Standard_Entity (S), E_Exception);\n          Set_Etype     (Standard_Entity (S), Standard_Exception_Type);\n          Set_Is_Public (Standard_Entity (S), True);\n \n@@ -607,7 +607,7 @@ package body CStand is\n       Set_Defining_Unit_Name (Pspec, Standard_Standard);\n       Set_Visible_Declarations (Pspec, Decl_S);\n \n-      Set_Ekind (Standard_Standard, E_Package);\n+      Mutate_Ekind (Standard_Standard, E_Package);\n       Set_Is_Pure (Standard_Standard);\n       Set_Is_Compilation_Unit (Standard_Standard);\n \n@@ -649,7 +649,7 @@ package body CStand is\n       Append (Standard_True, Literals (Tdef_Node));\n       Set_Type_Definition (Parent (Standard_Boolean), Tdef_Node);\n \n-      Set_Ekind          (Standard_Boolean, E_Enumeration_Type);\n+      Mutate_Ekind       (Standard_Boolean, E_Enumeration_Type);\n       Set_First_Literal  (Standard_Boolean, Standard_False);\n       Set_Etype          (Standard_Boolean, Standard_Boolean);\n       Init_Esize         (Standard_Boolean, Standard_Character_Size);\n@@ -660,13 +660,13 @@ package body CStand is\n       Set_Size_Known_At_Compile_Time (Standard_Boolean);\n       Set_Has_Pragma_Ordered         (Standard_Boolean);\n \n-      Set_Ekind           (Standard_True, E_Enumeration_Literal);\n+      Mutate_Ekind        (Standard_True, E_Enumeration_Literal);\n       Set_Etype           (Standard_True, Standard_Boolean);\n       Set_Enumeration_Pos (Standard_True, Uint_1);\n       Set_Enumeration_Rep (Standard_True, Uint_1);\n       Set_Is_Known_Valid  (Standard_True, True);\n \n-      Set_Ekind           (Standard_False, E_Enumeration_Literal);\n+      Mutate_Ekind        (Standard_False, E_Enumeration_Literal);\n       Set_Etype           (Standard_False, Standard_Boolean);\n       Set_Enumeration_Pos (Standard_False, Uint_0);\n       Set_Enumeration_Rep (Standard_False, Uint_0);\n@@ -755,7 +755,7 @@ package body CStand is\n       Tdef_Node := New_Node (N_Enumeration_Type_Definition, Stloc);\n       Set_Type_Definition (Parent (Standard_Character), Tdef_Node);\n \n-      Set_Ekind          (Standard_Character, E_Enumeration_Type);\n+      Mutate_Ekind       (Standard_Character, E_Enumeration_Type);\n       Set_Etype          (Standard_Character, Standard_Character);\n       Init_Esize         (Standard_Character, Standard_Character_Size);\n       Init_RM_Size       (Standard_Character, 8);\n@@ -802,7 +802,7 @@ package body CStand is\n       Tdef_Node := New_Node (N_Enumeration_Type_Definition, Stloc);\n       Set_Type_Definition (Parent (Standard_Wide_Character), Tdef_Node);\n \n-      Set_Ekind      (Standard_Wide_Character, E_Enumeration_Type);\n+      Mutate_Ekind   (Standard_Wide_Character, E_Enumeration_Type);\n       Set_Etype      (Standard_Wide_Character, Standard_Wide_Character);\n       Init_Size      (Standard_Wide_Character, Standard_Wide_Character_Size);\n \n@@ -848,7 +848,7 @@ package body CStand is\n       Tdef_Node := New_Node (N_Enumeration_Type_Definition, Stloc);\n       Set_Type_Definition (Parent (Standard_Wide_Wide_Character), Tdef_Node);\n \n-      Set_Ekind (Standard_Wide_Wide_Character, E_Enumeration_Type);\n+      Mutate_Ekind (Standard_Wide_Wide_Character, E_Enumeration_Type);\n       Set_Etype (Standard_Wide_Wide_Character,\n                  Standard_Wide_Wide_Character);\n       Init_Size (Standard_Wide_Wide_Character,\n@@ -908,7 +908,7 @@ package body CStand is\n       Append (Identifier_For (S_Positive), Subtype_Marks (Tdef_Node));\n       Set_Type_Definition (Parent (Standard_String), Tdef_Node);\n \n-      Set_Ekind           (Standard_String, E_Array_Type);\n+      Mutate_Ekind        (Standard_String, E_Array_Type);\n       Set_Etype           (Standard_String, Standard_String);\n       Set_Component_Type  (Standard_String, Standard_Character);\n       Set_Component_Size  (Standard_String, Uint_8);\n@@ -952,7 +952,7 @@ package body CStand is\n       Append (Identifier_For (S_Positive), Subtype_Marks (Tdef_Node));\n       Set_Type_Definition (Parent (Standard_Wide_String), Tdef_Node);\n \n-      Set_Ekind           (Standard_Wide_String, E_Array_Type);\n+      Mutate_Ekind        (Standard_Wide_String, E_Array_Type);\n       Set_Etype           (Standard_Wide_String, Standard_Wide_String);\n       Set_Component_Type  (Standard_Wide_String, Standard_Wide_Character);\n       Set_Component_Size  (Standard_Wide_String, Uint_16);\n@@ -987,7 +987,7 @@ package body CStand is\n       Append (Identifier_For (S_Positive), Subtype_Marks (Tdef_Node));\n       Set_Type_Definition (Parent (Standard_Wide_Wide_String), Tdef_Node);\n \n-      Set_Ekind            (Standard_Wide_Wide_String, E_Array_Type);\n+      Mutate_Ekind         (Standard_Wide_Wide_String, E_Array_Type);\n       Set_Etype            (Standard_Wide_Wide_String,\n                             Standard_Wide_Wide_String);\n       Set_Component_Type   (Standard_Wide_Wide_String,\n@@ -1009,7 +1009,7 @@ package body CStand is\n \n       --  Setup entity for Natural\n \n-      Set_Ekind          (Standard_Natural, E_Signed_Integer_Subtype);\n+      Mutate_Ekind       (Standard_Natural, E_Signed_Integer_Subtype);\n       Set_Etype          (Standard_Natural, Base_Type (Standard_Integer));\n       Init_Esize         (Standard_Natural, Standard_Integer_Size);\n       Init_RM_Size       (Standard_Natural, Standard_Integer_Size - 1);\n@@ -1024,7 +1024,7 @@ package body CStand is\n \n       --  Setup entity for Positive\n \n-      Set_Ekind          (Standard_Positive, E_Signed_Integer_Subtype);\n+      Mutate_Ekind       (Standard_Positive, E_Signed_Integer_Subtype);\n       Set_Etype          (Standard_Positive, Base_Type (Standard_Integer));\n       Init_Esize         (Standard_Positive, Standard_Integer_Size);\n       Init_RM_Size       (Standard_Positive, Standard_Integer_Size - 1);\n@@ -1047,7 +1047,7 @@ package body CStand is\n       Set_Specification (Decl, Pspec);\n \n       Set_Defining_Unit_Name (Pspec, Standard_Entity (S_ASCII));\n-      Set_Ekind (Standard_Entity (S_ASCII), E_Package);\n+      Mutate_Ekind (Standard_Entity (S_ASCII), E_Package);\n       Set_Visible_Declarations (Pspec, Decl_A);\n \n       --  Create control character definitions in package ASCII. Note that\n@@ -1067,7 +1067,7 @@ package body CStand is\n \n          begin\n             Set_Sloc                   (A_Char, Staloc);\n-            Set_Ekind                  (A_Char, E_Constant);\n+            Mutate_Ekind               (A_Char, E_Constant);\n             Set_Never_Set_In_Source    (A_Char, True);\n             Set_Is_True_Constant       (A_Char, True);\n             Set_Etype                  (A_Char, Standard_Character);\n@@ -1122,7 +1122,7 @@ package body CStand is\n       --  type name that is reasonable, but does not overlap any Ada name.\n \n       Standard_A_String := New_Standard_Entity (\"access_string\");\n-      Set_Ekind      (Standard_A_String, E_Access_Type);\n+      Mutate_Ekind   (Standard_A_String, E_Access_Type);\n       Set_Scope      (Standard_A_String, Standard_Standard);\n       Set_Etype      (Standard_A_String, Standard_A_String);\n \n@@ -1138,7 +1138,7 @@ package body CStand is\n                      (Standard_A_String, Standard_String);\n \n       Standard_A_Char := New_Standard_Entity (\"access_character\");\n-      Set_Ekind          (Standard_A_Char, E_Access_Type);\n+      Mutate_Ekind       (Standard_A_Char, E_Access_Type);\n       Set_Scope          (Standard_A_Char, Standard_Standard);\n       Set_Etype          (Standard_A_Char, Standard_A_String);\n       Init_Size          (Standard_A_Char, System_Address_Size);\n@@ -1153,7 +1153,7 @@ package body CStand is\n \n       Standard_Debug_Renaming_Type := New_Standard_Entity (\"_renaming_type\");\n \n-      Set_Ekind (Standard_Debug_Renaming_Type, E_Signed_Integer_Subtype);\n+      Mutate_Ekind (Standard_Debug_Renaming_Type, E_Signed_Integer_Subtype);\n       Set_Scope (Standard_Debug_Renaming_Type, Standard_Standard);\n       Set_Etype (Standard_Debug_Renaming_Type, Base_Type (Standard_Integer));\n       Init_Esize          (Standard_Debug_Renaming_Type, 0);\n@@ -1183,14 +1183,14 @@ package body CStand is\n       Build_Signed_Integer_Type (Any_Type, Standard_Integer_Size);\n \n       Any_Id := New_Standard_Entity (\"any id\");\n-      Set_Ekind             (Any_Id, E_Variable);\n+      Mutate_Ekind          (Any_Id, E_Variable);\n       Set_Scope             (Any_Id, Standard_Standard);\n       Set_Etype             (Any_Id, Any_Type);\n       Init_Esize            (Any_Id);\n       Init_Alignment        (Any_Id);\n \n       Any_Access := New_Standard_Entity (\"an access type\");\n-      Set_Ekind             (Any_Access, E_Access_Type);\n+      Mutate_Ekind          (Any_Access, E_Access_Type);\n       Set_Scope             (Any_Access, Standard_Standard);\n       Set_Etype             (Any_Access, Any_Access);\n       Init_Size             (Any_Access, System_Address_Size);\n@@ -1199,7 +1199,7 @@ package body CStand is\n                             (Any_Access, Any_Type);\n \n       Any_Character := New_Standard_Entity (\"a character type\");\n-      Set_Ekind             (Any_Character, E_Enumeration_Type);\n+      Mutate_Ekind          (Any_Character, E_Enumeration_Type);\n       Set_Scope             (Any_Character, Standard_Standard);\n       Set_Etype             (Any_Character, Any_Character);\n       Set_Is_Unsigned_Type  (Any_Character);\n@@ -1210,15 +1210,15 @@ package body CStand is\n       Set_Scalar_Range      (Any_Character, Scalar_Range (Standard_Character));\n \n       Any_Array := New_Standard_Entity (\"an array type\");\n-      Set_Ekind             (Any_Array, E_Array_Type);\n+      Mutate_Ekind          (Any_Array, E_Array_Type);\n       Set_Scope             (Any_Array, Standard_Standard);\n       Set_Etype             (Any_Array, Any_Array);\n       Set_Component_Type    (Any_Array, Any_Character);\n       Init_Size_Align       (Any_Array);\n       Make_Dummy_Index      (Any_Array);\n \n       Any_Boolean := New_Standard_Entity (\"a boolean type\");\n-      Set_Ekind             (Any_Boolean, E_Enumeration_Type);\n+      Mutate_Ekind          (Any_Boolean, E_Enumeration_Type);\n       Set_Scope             (Any_Boolean, Standard_Standard);\n       Set_Etype             (Any_Boolean, Standard_Boolean);\n       Init_Esize            (Any_Boolean, Standard_Character_Size);\n@@ -1228,29 +1228,29 @@ package body CStand is\n       Set_Scalar_Range      (Any_Boolean, Scalar_Range (Standard_Boolean));\n \n       Any_Composite := New_Standard_Entity (\"a composite type\");\n-      Set_Ekind             (Any_Composite, E_Array_Type);\n+      Mutate_Ekind          (Any_Composite, E_Array_Type);\n       Set_Scope             (Any_Composite, Standard_Standard);\n       Set_Etype             (Any_Composite, Any_Composite);\n       Set_Component_Size    (Any_Composite, Uint_0);\n       Set_Component_Type    (Any_Composite, Standard_Integer);\n       Init_Size_Align       (Any_Composite);\n \n       Any_Discrete := New_Standard_Entity (\"a discrete type\");\n-      Set_Ekind             (Any_Discrete, E_Signed_Integer_Type);\n+      Mutate_Ekind          (Any_Discrete, E_Signed_Integer_Type);\n       Set_Scope             (Any_Discrete, Standard_Standard);\n       Set_Etype             (Any_Discrete, Any_Discrete);\n       Init_Size             (Any_Discrete, Standard_Integer_Size);\n       Set_Elem_Alignment    (Any_Discrete);\n \n       Any_Fixed := New_Standard_Entity (\"a fixed-point type\");\n-      Set_Ekind             (Any_Fixed, E_Ordinary_Fixed_Point_Type);\n+      Mutate_Ekind          (Any_Fixed, E_Ordinary_Fixed_Point_Type);\n       Set_Scope             (Any_Fixed, Standard_Standard);\n       Set_Etype             (Any_Fixed, Any_Fixed);\n       Init_Size             (Any_Fixed, Standard_Integer_Size);\n       Set_Elem_Alignment    (Any_Fixed);\n \n       Any_Integer := New_Standard_Entity (\"an integer type\");\n-      Set_Ekind            (Any_Integer, E_Signed_Integer_Type);\n+      Mutate_Ekind         (Any_Integer, E_Signed_Integer_Type);\n       Set_Scope            (Any_Integer, Standard_Standard);\n       Set_Etype            (Any_Integer, Standard_Long_Long_Long_Integer);\n       Init_Size            (Any_Integer, Standard_Long_Long_Long_Integer_Size);\n@@ -1263,37 +1263,37 @@ package body CStand is\n          Hb  => Intval (High_Bound (Scalar_Range (Standard_Integer))));\n \n       Any_Modular := New_Standard_Entity (\"a modular type\");\n-      Set_Ekind            (Any_Modular, E_Modular_Integer_Type);\n+      Mutate_Ekind         (Any_Modular, E_Modular_Integer_Type);\n       Set_Scope            (Any_Modular, Standard_Standard);\n       Set_Etype            (Any_Modular, Standard_Long_Long_Long_Integer);\n       Init_Size            (Any_Modular, Standard_Long_Long_Long_Integer_Size);\n       Set_Elem_Alignment   (Any_Modular);\n       Set_Is_Unsigned_Type (Any_Modular);\n \n       Any_Numeric := New_Standard_Entity (\"a numeric type\");\n-      Set_Ekind            (Any_Numeric, E_Signed_Integer_Type);\n+      Mutate_Ekind         (Any_Numeric, E_Signed_Integer_Type);\n       Set_Scope            (Any_Numeric, Standard_Standard);\n       Set_Etype            (Any_Numeric, Standard_Long_Long_Long_Integer);\n       Init_Size            (Any_Numeric, Standard_Long_Long_Long_Integer_Size);\n       Set_Elem_Alignment   (Any_Numeric);\n \n       Any_Real := New_Standard_Entity (\"a real type\");\n-      Set_Ekind             (Any_Real, E_Floating_Point_Type);\n+      Mutate_Ekind          (Any_Real, E_Floating_Point_Type);\n       Set_Scope             (Any_Real, Standard_Standard);\n       Set_Etype             (Any_Real, Standard_Long_Long_Float);\n       Init_Size             (Any_Real,\n         UI_To_Int (Esize (Standard_Long_Long_Float)));\n       Set_Elem_Alignment    (Any_Real);\n \n       Any_Scalar := New_Standard_Entity (\"a scalar type\");\n-      Set_Ekind             (Any_Scalar, E_Signed_Integer_Type);\n+      Mutate_Ekind          (Any_Scalar, E_Signed_Integer_Type);\n       Set_Scope             (Any_Scalar, Standard_Standard);\n       Set_Etype             (Any_Scalar, Any_Scalar);\n       Init_Size             (Any_Scalar, Standard_Integer_Size);\n       Set_Elem_Alignment    (Any_Scalar);\n \n       Any_String := New_Standard_Entity (\"a string type\");\n-      Set_Ekind             (Any_String, E_Array_Type);\n+      Mutate_Ekind          (Any_String, E_Array_Type);\n       Set_Scope             (Any_String, Standard_Standard);\n       Set_Etype             (Any_String, Any_String);\n       Set_Component_Type    (Any_String, Any_Character);\n@@ -1405,7 +1405,7 @@ package body CStand is\n       Universal_Fixed := New_Standard_Entity (\"universal_fixed\");\n       Decl := New_Node (N_Full_Type_Declaration, Stloc);\n       Set_Defining_Identifier (Decl, Universal_Fixed);\n-      Set_Ekind            (Universal_Fixed, E_Ordinary_Fixed_Point_Type);\n+      Mutate_Ekind         (Universal_Fixed, E_Ordinary_Fixed_Point_Type);\n       Set_Etype            (Universal_Fixed, Universal_Fixed);\n       Set_Scope            (Universal_Fixed, Standard_Standard);\n       Init_Size            (Universal_Fixed, Standard_Long_Long_Integer_Size);\n@@ -1450,7 +1450,7 @@ package body CStand is\n \n          Set_Type_Definition (Parent (Standard_Duration), Tdef_Node);\n \n-         Set_Ekind (Standard_Duration, E_Ordinary_Fixed_Point_Type);\n+         Mutate_Ekind (Standard_Duration, E_Ordinary_Fixed_Point_Type);\n          Set_Etype (Standard_Duration, Standard_Duration);\n \n          if Duration_32_Bits_On_Target then\n@@ -1501,7 +1501,7 @@ package body CStand is\n \n       begin\n          Standard_Exception_Type := New_Standard_Entity (\"exception\");\n-         Set_Ekind       (Standard_Exception_Type, E_Record_Type);\n+         Mutate_Ekind    (Standard_Exception_Type, E_Record_Type);\n          Set_Etype       (Standard_Exception_Type, Standard_Exception_Type);\n          Set_Scope       (Standard_Exception_Type, Standard_Standard);\n          Set_Stored_Constraint\n@@ -1576,7 +1576,7 @@ package body CStand is\n          Decl := New_Node (N_Exception_Renaming_Declaration, Stloc);\n          E_Id := Standard_Entity (S_Numeric_Error);\n \n-         Set_Ekind          (E_Id, E_Exception);\n+         Mutate_Ekind       (E_Id, E_Exception);\n          Set_Etype          (E_Id, Standard_Exception_Type);\n          Set_Is_Public      (E_Id);\n          Set_Renamed_Entity (E_Id, Standard_Entity (S_Constraint_Error));\n@@ -1594,7 +1594,7 @@ package body CStand is\n \n       Abort_Signal := New_Standard_Entity;\n       Set_Chars     (Abort_Signal, Name_uAbort_Signal);\n-      Set_Ekind     (Abort_Signal, E_Exception);\n+      Mutate_Ekind  (Abort_Signal, E_Exception);\n       Set_Etype     (Abort_Signal, Standard_Exception_Type);\n       Set_Scope     (Abort_Signal, Standard_Standard);\n       Set_Is_Public (Abort_Signal, True);\n@@ -1609,24 +1609,24 @@ package body CStand is\n \n       Standard_Op_Rotate_Left := New_Standard_Entity;\n       Set_Chars (Standard_Op_Rotate_Left, Name_Rotate_Left);\n-      Set_Ekind (Standard_Op_Rotate_Left, E_Operator);\n+      Mutate_Ekind (Standard_Op_Rotate_Left, E_Operator);\n \n       Standard_Op_Rotate_Right := New_Standard_Entity;\n       Set_Chars (Standard_Op_Rotate_Right, Name_Rotate_Right);\n-      Set_Ekind (Standard_Op_Rotate_Right, E_Operator);\n+      Mutate_Ekind (Standard_Op_Rotate_Right, E_Operator);\n \n       Standard_Op_Shift_Left := New_Standard_Entity;\n       Set_Chars (Standard_Op_Shift_Left, Name_Shift_Left);\n-      Set_Ekind (Standard_Op_Shift_Left, E_Operator);\n+      Mutate_Ekind (Standard_Op_Shift_Left, E_Operator);\n \n       Standard_Op_Shift_Right := New_Standard_Entity;\n       Set_Chars (Standard_Op_Shift_Right, Name_Shift_Right);\n-      Set_Ekind (Standard_Op_Shift_Right, E_Operator);\n+      Mutate_Ekind (Standard_Op_Shift_Right, E_Operator);\n \n       Standard_Op_Shift_Right_Arithmetic := New_Standard_Entity;\n       Set_Chars (Standard_Op_Shift_Right_Arithmetic,\n                                           Name_Shift_Right_Arithmetic);\n-      Set_Ekind (Standard_Op_Shift_Right_Arithmetic,\n+      Mutate_Ekind (Standard_Op_Shift_Right_Arithmetic,\n                                           E_Operator);\n \n       --  Create standard operator declarations\n@@ -1681,7 +1681,7 @@ package body CStand is\n       New_Ent : constant Entity_Id := New_Copy (E);\n \n    begin\n-      Set_Ekind            (E, K);\n+      Mutate_Ekind         (E, K);\n       Set_Is_Constrained   (E, True);\n       Set_Is_First_Subtype (E, True);\n       Set_Etype            (E, New_Ent);\n@@ -1723,7 +1723,7 @@ package body CStand is\n       Id : constant Entity_Id := New_Standard_Entity (Nam);\n \n    begin\n-      Set_Ekind                     (Id, E_Component);\n+      Mutate_Ekind                  (Id, E_Component);\n       Set_Etype                     (Id, Typ);\n       Set_Scope                     (Id, Rec);\n       Init_Component_Location       (Id);\n@@ -1741,7 +1741,7 @@ package body CStand is\n       Formal : constant Entity_Id := New_Standard_Entity (Nam);\n \n    begin\n-      Set_Ekind     (Formal, E_In_Parameter);\n+      Mutate_Ekind  (Formal, E_In_Parameter);\n       Set_Mechanism (Formal, Default_Mechanism);\n       Set_Scope     (Formal, Standard_Standard);\n       Set_Etype     (Formal, Typ);\n@@ -1771,7 +1771,7 @@ package body CStand is\n \n    begin\n       Set_Is_Pure    (Ident_Node, True);\n-      Set_Ekind      (Ident_Node, E_Operator);\n+      Mutate_Ekind   (Ident_Node, E_Operator);\n       Set_Etype      (Ident_Node, Typ);\n       Set_Scope      (Ident_Node, Standard_Standard);\n       Set_Homonym    (Ident_Node, Get_Name_Entity_Id (Op));"}, {"sha": "bd4998f95a39ec120ad587bde983543d6768488c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 15, "deletions": 61, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -34,23 +34,25 @@ pragma Warnings (On);\n \n package Einfo is\n \n---  ????Comments below are partly obsolete\n+--  This package documents the annotations to the abstract syntax tree that are\n+--  needed to support semantic processing of an Ada compilation.\n \n---  This package defines the annotations to the abstract syntax tree that\n---  are needed to support semantic processing of an Ada compilation.\n-\n---  Note that after editing this spec and the corresponding body it is\n---  required to run ceinfo to check the consistentcy of spec and body.\n---  See ceinfo.adb for more information about the checks made.\n+--  See the spec of Gen_IL.Gen for instructions on making changes to this file.\n+--  Note that the official definition of what entities have what fields is in\n+--  Gen_IL.Gen.Gen_Entities; if there is a discrepancy between that and the\n+--  comments here, Gen_IL.Gen.Gen_Entities wins.\n+--\n+--  Offsets of each field are given in parentheses below, but this information\n+--  is obsolete, and should be completely ignored. The actual field offsets are\n+--  determined by the Gen_IL program. We might want to remove these comments at\n+--  some point.\n \n --  These annotations are for the most part attributes of declared entities,\n --  and they correspond to conventional symbol table information. Other\n --  attributes include sets of meanings for overloaded names, possible\n --  types for overloaded expressions, flags to indicate deferred constants,\n---  incomplete types, etc. These attributes are stored in available fields in\n---  tree nodes (i.e. fields not used by the parser, as defined by the Sinfo\n---  package specification), and accessed by means of a set of subprograms\n---  which define an abstract interface.\n+--  incomplete types, etc. These attributes are stored in fields in\n+--  tree nodes.\n \n --  There are two kinds of semantic information\n \n@@ -69,61 +71,13 @@ package Einfo is\n \n --    Second, in some cases semantic information is stored directly in other\n --    kinds of nodes, e.g. the Etype field, used to indicate the type of an\n---    expression. The access functions to these fields are defined in the\n---    Sinfo package, but their full documentation is to be found in\n---    the Einfo package specification.\n+--    expression. These fields are defined in the Sinfo package, but their\n+--    full documentation is in the Einfo package specification.\n \n --  Declaration processing places information in the nodes of their defining\n --  identifiers. Name resolution places in all other occurrences of an\n --  identifier a pointer to the corresponding defining occurrence.\n \n---------------------------------\n--- The XEINFO Utility Program --\n---------------------------------\n-\n---  XEINFO is a utility program which automatically produces a C header file,\n---  einfo.h from the spec and body of package Einfo. It reads the input files\n---  einfo.ads and einfo.adb and produces the output file einfo.h. XEINFO is run\n---  automatically by the build scripts when you do a full bootstrap.\n-\n---  In order for this utility program to operate correctly, the form of the\n---  einfo.ads and einfo.adb files must meet certain requirements and be laid\n---  out in a specific manner.\n-\n---  The general form of einfo.ads is as follows:\n-\n---     type declaration for type Entity_Kind\n---     subtype declarations declaring subranges of Entity_Kind\n---     subtype declarations declaring synonyms for some standard types\n---     function specs for attributes\n---     procedure specs\n---     pragma Inline declarations\n-\n---  This order must be observed. There are no restrictions on the procedures,\n---  since the C header file only includes functions (The back end is not\n---  allowed to modify the generated tree). However, functions are required to\n---  have headers that fit on a single line.\n-\n---  XEINFO reads and processes the function specs and the pragma Inlines. For\n---  functions that are declared as inlined, XEINFO reads the corresponding body\n---  from einfo.adb, and processes it into C code. This results in some strict\n---  restrictions on which functions can be inlined:\n-\n---     The function spec must be on a single line\n-\n---     There can only be a single return statement, not counting any pragma\n---     Assert statements, possibly followed by a comment.\n-\n---     This single statement must either contain a function call with simple,\n---     single token arguments, or it must contain a membership test of the form\n---     a in b, where a and b are single tokens, or it must contain an equality\n---     or inequality test of single tokens, or it must contain a disjunction of\n---     the preceding constructs.\n-\n---  For functions that are not inlined, there is no restriction on the body,\n---  and XEINFO generates a direct reference in the C header file which allows\n---  the C code in the backend to directly call the corresponding Ada body.\n-\n ----------------------------------\n -- Handling of Type'Size Values --\n ----------------------------------"}, {"sha": "f6bd342cee1aa097c2869fb520bc18f8ea4ed98b", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -6652,7 +6652,7 @@ package body Exp_Aggr is\n          --  aggregate. If the declaration has a subtype mark, use it,\n          --  otherwise use the itype of the aggregate.\n \n-         Set_Ekind (Tmp, E_Variable);\n+         Mutate_Ekind (Tmp, E_Variable);\n \n          if not Is_Constrained (Typ) then\n             Build_Constrained_Type (Positional => False);\n@@ -9476,7 +9476,7 @@ package body Exp_Aggr is\n       --    type Res_Typ is access all Comp_Typ;\n \n       Res_Typ := Make_Temporary (Loc, 'A');\n-      Set_Ekind (Res_Typ, E_General_Access_Type);\n+      Mutate_Ekind (Res_Typ, E_General_Access_Type);\n       Set_Directly_Designated_Type (Res_Typ, Comp_Typ);\n \n       Add_Item\n@@ -9496,7 +9496,7 @@ package body Exp_Aggr is\n       --  its lifetime is bounded by the current array or record component.\n \n       Res_Id := Make_Temporary (Loc, 'R');\n-      Set_Ekind (Res_Id, E_Constant);\n+      Mutate_Ekind (Res_Id, E_Constant);\n       Set_Etype (Res_Id, Res_Typ);\n \n       --  Mark the transient object as successfully processed to avoid double"}, {"sha": "da9d61a48cd44790acec4a90b8fc8abc37b6ce33", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -389,7 +389,7 @@ package body Exp_Attr is\n       --       Stmts\n       --    end Func_Id;\n \n-      Set_Ekind       (Func_Id, E_Function);\n+      Mutate_Ekind    (Func_Id, E_Function);\n       Set_Is_Internal (Func_Id);\n       Set_Is_Pure     (Func_Id);\n \n@@ -832,7 +832,7 @@ package body Exp_Attr is\n       --       Stmts\n       --    end Func_Id;\n \n-      Set_Ekind       (Func_Id, E_Function);\n+      Mutate_Ekind    (Func_Id, E_Function);\n       Set_Is_Internal (Func_Id);\n       Set_Is_Pure     (Func_Id);\n \n@@ -4838,7 +4838,7 @@ package body Exp_Attr is\n          --  Set the entity kind now in order to mark the temporary as a\n          --  handler of attribute 'Old's prefix.\n \n-         Set_Ekind (Temp, E_Constant);\n+         Mutate_Ekind (Temp, E_Constant);\n          Set_Stores_Attribute_Old_Prefix (Temp);\n \n          --  Push the scope of the related subprogram where _Postcondition"}, {"sha": "529eae471428a0bb81f7251a0c0deaf811637a33", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1701,7 +1701,7 @@ package body Exp_Ch11 is\n          if No (Choice_Parameter (Ehand)) then\n             E := Make_Temporary (Loc, 'E');\n             Set_Choice_Parameter (Ehand, E);\n-            Set_Ekind (E, E_Variable);\n+            Mutate_Ekind (E, E_Variable);\n             Set_Etype (E, RTE (RE_Exception_Occurrence));\n             Set_Scope (E, Current_Scope);\n          end if;"}, {"sha": "d0446ff0dcbcde071d32b7bd795f6133b8f244c4", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -885,7 +885,7 @@ package body Exp_Ch3 is\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => Body_Stmts)));\n \n-         Set_Ekind          (Proc_Id, E_Procedure);\n+         Mutate_Ekind       (Proc_Id, E_Procedure);\n          Set_Is_Public      (Proc_Id, Is_Public (A_Type));\n          Set_Is_Internal    (Proc_Id);\n          Set_Has_Completion (Proc_Id);\n@@ -1080,7 +1080,7 @@ package body Exp_Ch3 is\n              Statements => New_List (\n                Build_Case_Statement (Case_Id, Variant))));\n \n-         Set_Ekind       (Func_Id, E_Function);\n+         Mutate_Ekind    (Func_Id, E_Function);\n          Set_Mechanism   (Func_Id, Default_Mechanism);\n          Set_Is_Inlined  (Func_Id, True);\n          Set_Is_Pure     (Func_Id, True);\n@@ -2376,7 +2376,7 @@ package body Exp_Ch3 is\n                                 New_Occurrence_Of (Iface_Comp, Loc)),\n                           Attribute_Name => Name_Position))))));\n \n-            Set_Ekind       (Func_Id, E_Function);\n+            Mutate_Ekind    (Func_Id, E_Function);\n             Set_Mechanism   (Func_Id, Default_Mechanism);\n             Set_Is_Internal (Func_Id, True);\n \n@@ -2491,7 +2491,7 @@ package body Exp_Ch3 is\n            Make_Defining_Identifier (Loc,\n              Chars => Make_TSS_Name (Rec_Type, TSS_CPP_Init_Proc));\n \n-         Set_Ekind       (Proc_Id, E_Procedure);\n+         Mutate_Ekind    (Proc_Id, E_Procedure);\n          Set_Is_Internal (Proc_Id);\n \n          Set_Defining_Unit_Name (Proc_Spec_Node, Proc_Id);\n@@ -2545,7 +2545,7 @@ package body Exp_Ch3 is\n       begin\n          Body_Stmts := New_List;\n          Body_Node := New_Node (N_Subprogram_Body, Loc);\n-         Set_Ekind (Proc_Id, E_Procedure);\n+         Mutate_Ekind (Proc_Id, E_Procedure);\n \n          Proc_Spec_Node := New_Node (N_Procedure_Specification, Loc);\n          Set_Defining_Unit_Name (Proc_Spec_Node, Proc_Id);\n@@ -7276,10 +7276,10 @@ package body Exp_Ch3 is\n                      Link_Entities (New_Id, Next_Entity (Def_Id));\n                      Link_Entities (Def_Id, Next_Temp);\n \n-                     Set_Chars   (Defining_Identifier (N), Chars   (Def_Id));\n+                     Set_Chars (Defining_Identifier (N), Chars (Def_Id));\n                      Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n-                     Set_Ekind   (Defining_Identifier (N), Ekind   (Def_Id));\n-                     Set_Sloc    (Defining_Identifier (N), Sloc    (Def_Id));\n+                     Mutate_Ekind (Defining_Identifier (N), Ekind (Def_Id));\n+                     Set_Sloc (Defining_Identifier (N), Sloc (Def_Id));\n \n                      Set_Comes_From_Source (Def_Id, False);\n \n@@ -7536,7 +7536,7 @@ package body Exp_Ch3 is\n             Level_Expr : Node_Id;\n \n          begin\n-            Set_Ekind (Level, Ekind (Def_Id));\n+            Mutate_Ekind (Level, Ekind (Def_Id));\n             Set_Etype (Level, Standard_Natural);\n             Set_Scope (Level, Scope (Def_Id));\n \n@@ -9706,7 +9706,7 @@ package body Exp_Ch3 is\n             --  primitive operations list. We add the minimum decoration needed\n             --  to override interface primitives.\n \n-            Set_Ekind (Defining_Unit_Name (Func_Spec), E_Function);\n+            Mutate_Ekind (Defining_Unit_Name (Func_Spec), E_Function);\n \n             Override_Dispatching_Operation\n               (Tag_Typ, Subp, New_Op => Defining_Unit_Name (Func_Spec),"}, {"sha": "7a51afd573674b16210161ac37fa766b272c9f89", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -3407,7 +3407,7 @@ package body Exp_Ch5 is\n \n       Analyze (Init_Decl);\n       Init_Name := Defining_Identifier (Init_Decl);\n-      Set_Ekind (Init_Name, E_Loop_Parameter);\n+      Mutate_Ekind (Init_Name, E_Loop_Parameter);\n \n       --  The cursor was marked as a loop parameter to prevent user assignments\n       --  to it, however this renders the advancement step illegal as it is not\n@@ -3483,7 +3483,7 @@ package body Exp_Ch5 is\n         (N, Container, Cursor, Init, Advance, New_Loop);\n       Append_To (Stats, Advance);\n \n-      Set_Ekind (Cursor, E_Variable);\n+      Mutate_Ekind (Cursor, E_Variable);\n       Insert_Action (N, Init);\n \n       --  The loop parameter is declared by an object declaration, but within\n@@ -4484,7 +4484,7 @@ package body Exp_Ch5 is\n                      (Container_Typ, Aspect_Variable_Indexing))\n               or else not Is_Variable (Original_Node (Container))\n             then\n-               Set_Ekind (Id, E_Constant);\n+               Mutate_Ekind (Id, E_Constant);\n             end if;\n \n             Prepend_To (Stats, Decl);\n@@ -4620,7 +4620,7 @@ package body Exp_Ch5 is\n          Set_Assignment_OK (Cursor_Decl);\n \n          Insert_Action (N, Cursor_Decl);\n-         Set_Ekind (Cursor, Id_Kind);\n+         Mutate_Ekind (Cursor, Id_Kind);\n       end;\n \n       --  If the range of iteration is given by a function call that returns\n@@ -5081,7 +5081,7 @@ package body Exp_Ch5 is\n             --  identifier, since there may be references in the loop body.\n \n             Set_Analyzed (Loop_Id, False);\n-            Set_Ekind    (Loop_Id, E_Variable);\n+            Mutate_Ekind (Loop_Id, E_Variable);\n \n             --  In most loops the loop variable is assigned in various\n             --  alternatives in the body. However, in the rare case when"}, {"sha": "ab072242ed007a1d1abb63ae25e99c942f947e8a", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -5127,7 +5127,7 @@ package body Exp_Ch6 is\n                --  Perform minor decoration in order to set the master and the\n                --  storage pool attributes.\n \n-               Set_Ekind                   (Ptr_Typ, E_Access_Type);\n+               Mutate_Ekind                (Ptr_Typ, E_Access_Type);\n                Set_Finalization_Master     (Ptr_Typ, Fin_Mas_Id);\n                Set_Associated_Storage_Pool (Ptr_Typ, Pool_Id);\n \n@@ -7345,7 +7345,7 @@ package body Exp_Ch6 is\n                Temp       : Entity_Id;\n \n             begin\n-               Set_Ekind (Acc_Typ, E_Access_Type);\n+               Mutate_Ekind (Acc_Typ, E_Access_Type);\n \n                Set_Associated_Storage_Pool (Acc_Typ, RTE (RE_SS_Pool));\n "}, {"sha": "f21341a1757b09e85178162e8548d4a69dbe0336", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -2810,7 +2810,7 @@ package body Exp_Ch7 is\n             --  Perform minor decoration in order to set the master and the\n             --  storage pool attributes.\n \n-            Set_Ekind (Ptr_Typ, E_Access_Type);\n+            Mutate_Ekind (Ptr_Typ, E_Access_Type);\n             Set_Finalization_Master     (Ptr_Typ, Fin_Mas_Id);\n             Set_Associated_Storage_Pool (Ptr_Typ, Pool_Id);\n "}, {"sha": "a80355f2e7b4f50b2be349253fccf97246307e49", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -739,9 +739,9 @@ package body Exp_Ch9 is\n          Set_Debug_Info_Needed (New_F);\n \n          if Ekind (Formal) = E_In_Parameter then\n-            Set_Ekind (New_F, E_Constant);\n+            Mutate_Ekind (New_F, E_Constant);\n          else\n-            Set_Ekind (New_F, E_Variable);\n+            Mutate_Ekind (New_F, E_Variable);\n             Set_Extra_Constrained (New_F, Extra_Constrained (Formal));\n          end if;\n \n@@ -1593,7 +1593,7 @@ package body Exp_Ch9 is\n \n    begin\n       Set_Corresponding_Record_Type     (Ctyp, Rec_Ent);\n-      Set_Ekind                         (Rec_Ent, E_Record_Type);\n+      Mutate_Ekind                      (Rec_Ent, E_Record_Type);\n       Set_Has_Delayed_Freeze            (Rec_Ent, Has_Delayed_Freeze (Ctyp));\n       Set_Is_Concurrent_Record_Type     (Rec_Ent, True);\n       Set_Corresponding_Concurrent_Type (Rec_Ent, Ctyp);\n@@ -2453,9 +2453,9 @@ package body Exp_Ch9 is\n          --  Sem_Ch6.Override_Dispatching_Operation.\n \n          if Ekind (Subp_Id) = E_Function then\n-            Set_Ekind (Wrapper_Id, E_Function);\n+            Mutate_Ekind (Wrapper_Id, E_Function);\n          else\n-            Set_Ekind (Wrapper_Id, E_Procedure);\n+            Mutate_Ekind (Wrapper_Id, E_Procedure);\n          end if;\n \n          Set_Is_Primitive_Wrapper (Wrapper_Id);\n@@ -3893,7 +3893,7 @@ package body Exp_Ch9 is\n \n          if Unprotected then\n             Set_Protected_Formal (Formal, Defining_Identifier (New_Param));\n-            Set_Ekind (Defining_Identifier (New_Param), Ekind (Formal));\n+            Mutate_Ekind (Defining_Identifier (New_Param), Ekind (Formal));\n          end if;\n \n          Append (New_Param, New_Plist);\n@@ -3964,14 +3964,14 @@ package body Exp_Ch9 is\n       --  Sem_Ch4.Names_Match).\n \n       if Mode = Dispatching_Mode then\n-         Set_Ekind (New_Id, Ekind (Def_Id));\n+         Mutate_Ekind (New_Id, Ekind (Def_Id));\n          Set_Original_Protected_Subprogram (New_Id, Def_Id);\n       end if;\n \n       --  Link the protected or unprotected version to the original subprogram\n       --  it emulates.\n \n-      Set_Ekind (New_Id, Ekind (Def_Id));\n+      Mutate_Ekind (New_Id, Ekind (Def_Id));\n       Set_Protected_Subprogram (New_Id, Def_Id);\n \n       --  The unprotected operation carries the user code, and debugging\n@@ -6007,9 +6007,9 @@ package body Exp_Ch9 is\n                   Set_Debug_Info_Needed (New_F);\n \n                   if Ekind (Formal) = E_In_Parameter then\n-                     Set_Ekind (New_F, E_Constant);\n+                     Mutate_Ekind (New_F, E_Constant);\n                   else\n-                     Set_Ekind (New_F, E_Variable);\n+                     Mutate_Ekind (New_F, E_Variable);\n                      Set_Extra_Constrained (New_F, Extra_Constrained (Formal));\n                   end if;\n \n@@ -6693,7 +6693,7 @@ package body Exp_Ch9 is\n          --  statement if any to initialize the declarations of the block.\n \n          Blkent := Make_Temporary (Loc, 'A');\n-         Set_Ekind (Blkent, E_Block);\n+         Mutate_Ekind (Blkent, E_Block);\n          Set_Etype (Blkent, Standard_Void_Type);\n          Set_Scope (Blkent, Current_Scope);\n \n@@ -10885,7 +10885,7 @@ package body Exp_Ch9 is\n \n             --  Link the acceptor to the original receiving entry\n \n-            Set_Ekind           (PB_Ent, E_Procedure);\n+            Mutate_Ekind        (PB_Ent, E_Procedure);\n             Set_Receiving_Entry (PB_Ent, Eent);\n \n             if Comes_From_Source (Alt) then\n@@ -13820,9 +13820,9 @@ package body Exp_Ch9 is\n                      --  Minimal decoration\n \n                      if Ekind (Spec_Id) = E_Function then\n-                        Set_Ekind (Decl_Id, E_Constant);\n+                        Mutate_Ekind (Decl_Id, E_Constant);\n                      else\n-                        Set_Ekind (Decl_Id, E_Variable);\n+                        Mutate_Ekind (Decl_Id, E_Variable);\n                      end if;\n \n                      Set_Prival         (Comp_Id, Decl_Id);\n@@ -13872,7 +13872,7 @@ package body Exp_Ch9 is\n          begin\n             --  Minimal decoration\n \n-            Set_Ekind                (Index_Con, E_Constant);\n+            Mutate_Ekind             (Index_Con, E_Constant);\n             Set_Entry_Index_Constant (Index, Index_Con);\n             Set_Discriminal_Link     (Index_Con, Index);\n \n@@ -15144,7 +15144,7 @@ package body Exp_Ch9 is\n               Make_Defining_Identifier (Sloc (D),\n                 Chars => New_External_Name (Chars (D), 'D'));\n \n-            Set_Ekind (D_Minal, E_Constant);\n+            Mutate_Ekind (D_Minal, E_Constant);\n             Set_Etype (D_Minal, Etype (D));\n             Set_Scope (D_Minal, Pdef);\n             Set_Discriminal (D, D_Minal);"}, {"sha": "f41eaf4fb1699b9d7f63560e8efa5b8081684771", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -2247,7 +2247,7 @@ package body Exp_Disp is\n       --  with GNATcoverage, as that tool relies on it to identify\n       --  thunks and exclude them from source coverage analysis.\n \n-      Set_Ekind (Thunk_Id, Ekind (Prim));\n+      Mutate_Ekind (Thunk_Id, Ekind (Prim));\n       Set_Is_Thunk (Thunk_Id);\n       Set_Convention (Thunk_Id, Convention (Prim));\n       Set_Needs_Debug_Info (Thunk_Id, Needs_Debug_Info (Target));\n@@ -4150,18 +4150,18 @@ package body Exp_Disp is\n          --  dispatch tables.\n \n          if not Building_Static_DT (Typ) then\n-            Set_Ekind (Predef_Prims, E_Variable);\n-            Set_Ekind (Iface_DT, E_Variable);\n+            Mutate_Ekind (Predef_Prims, E_Variable);\n+            Mutate_Ekind (Iface_DT, E_Variable);\n \n          --  Statically allocated dispatch tables and related entities are\n          --  constants.\n \n          else\n-            Set_Ekind (Predef_Prims, E_Constant);\n+            Mutate_Ekind (Predef_Prims, E_Constant);\n             Set_Is_Statically_Allocated (Predef_Prims);\n             Set_Is_True_Constant (Predef_Prims);\n \n-            Set_Ekind (Iface_DT, E_Constant);\n+            Mutate_Ekind (Iface_DT, E_Constant);\n             Set_Is_Statically_Allocated (Iface_DT);\n             Set_Is_True_Constant (Iface_DT);\n          end if;\n@@ -4898,7 +4898,7 @@ package body Exp_Disp is\n             --  objects by making them volatile.\n \n             Set_Is_Imported      (Dummy_Object);\n-            Set_Ekind            (Dummy_Object, E_Constant);\n+            Mutate_Ekind         (Dummy_Object, E_Constant);\n             Set_Is_True_Constant (Dummy_Object);\n             Set_Related_Type     (Dummy_Object, Typ);\n \n@@ -6898,7 +6898,7 @@ package body Exp_Disp is\n \n       begin\n          Set_Is_Imported  (DT);\n-         Set_Ekind        (DT, E_Constant);\n+         Mutate_Ekind     (DT, E_Constant);\n          Set_Related_Type (DT, Typ);\n \n          --  The scope must be set now to call Get_External_Name\n@@ -7009,7 +7009,7 @@ package body Exp_Disp is\n \n       --  Minimum decoration\n \n-      Set_Ekind        (DT_Ptr, E_Variable);\n+      Mutate_Ekind     (DT_Ptr, E_Variable);\n       Set_Related_Type (DT_Ptr, Typ);\n \n       --  Notify back end that the types are associated with a dispatch table\n@@ -7163,7 +7163,7 @@ package body Exp_Disp is\n                  Make_Defining_Identifier (Loc,\n                    Chars => New_External_Name (Typ_Name, 'P'));\n                Set_Etype (Iface_DT_Ptr, RTE (RE_Interface_Tag));\n-               Set_Ekind (Iface_DT_Ptr, E_Variable);\n+               Mutate_Ekind (Iface_DT_Ptr, E_Variable);\n                Set_Is_Tag (Iface_DT_Ptr);\n \n                Set_Has_Thunks (Iface_DT_Ptr);\n@@ -7212,7 +7212,7 @@ package body Exp_Disp is\n                  Make_Defining_Identifier (Loc,\n                    Chars => New_External_Name (Typ_Name, 'P'));\n                Set_Etype (Iface_DT_Ptr, RTE (RE_Interface_Tag));\n-               Set_Ekind (Iface_DT_Ptr, E_Constant);\n+               Mutate_Ekind (Iface_DT_Ptr, E_Constant);\n                Set_Is_Tag (Iface_DT_Ptr);\n                Set_Has_Thunks (Iface_DT_Ptr);\n                Set_Is_Statically_Allocated (Iface_DT_Ptr,\n@@ -7250,7 +7250,7 @@ package body Exp_Disp is\n                  Make_Defining_Identifier (Loc,\n                    Chars => New_External_Name (Typ_Name, 'Y'));\n                Set_Etype (Iface_DT_Ptr, RTE (RE_Address));\n-               Set_Ekind (Iface_DT_Ptr, E_Constant);\n+               Mutate_Ekind (Iface_DT_Ptr, E_Constant);\n                Set_Is_Tag (Iface_DT_Ptr);\n                Set_Has_Thunks (Iface_DT_Ptr);\n                Set_Is_Statically_Allocated (Iface_DT_Ptr,\n@@ -7267,7 +7267,7 @@ package body Exp_Disp is\n                  Make_Defining_Identifier (Loc,\n                    Chars => New_External_Name (Typ_Name, 'D'));\n                Set_Etype (Iface_DT_Ptr, RTE (RE_Interface_Tag));\n-               Set_Ekind (Iface_DT_Ptr, E_Constant);\n+               Mutate_Ekind (Iface_DT_Ptr, E_Constant);\n                Set_Is_Tag (Iface_DT_Ptr);\n                Set_Is_Statically_Allocated (Iface_DT_Ptr,\n                  Is_Library_Level_Tagged_Type (Typ));\n@@ -7282,7 +7282,7 @@ package body Exp_Disp is\n                  Make_Defining_Identifier (Loc,\n                    Chars => New_External_Name (Typ_Name, 'Z'));\n                Set_Etype (Iface_DT_Ptr, RTE (RE_Address));\n-               Set_Ekind (Iface_DT_Ptr, E_Constant);\n+               Mutate_Ekind (Iface_DT_Ptr, E_Constant);\n                Set_Is_Tag (Iface_DT_Ptr);\n                Set_Is_Statically_Allocated (Iface_DT_Ptr,\n                  Is_Library_Level_Tagged_Type (Typ));\n@@ -7392,9 +7392,9 @@ package body Exp_Disp is\n       end if;\n \n       if Is_CPP_Class (Root_Type (Typ)) then\n-         Set_Ekind (DT_Ptr, E_Variable);\n+         Mutate_Ekind (DT_Ptr, E_Variable);\n       else\n-         Set_Ekind (DT_Ptr, E_Constant);\n+         Mutate_Ekind (DT_Ptr, E_Constant);\n       end if;\n \n       Set_Is_Tag       (DT_Ptr);"}, {"sha": "6af66f31e14ca043f421ca517f96d2455c8cd287", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1732,7 +1732,7 @@ package body Exp_Dist is\n                New_Occurrence_Of (\n                  Entity (Result_Definition (Spec)), Loc));\n \n-         Set_Ekind (Proc, E_Function);\n+         Mutate_Ekind (Proc, E_Function);\n          Set_Etype (Proc,\n            New_Occurrence_Of (Entity (Result_Definition (Spec)), Loc));\n \n@@ -1742,7 +1742,7 @@ package body Exp_Dist is\n              Defining_Unit_Name       => Proc,\n              Parameter_Specifications => Param_Specs);\n \n-         Set_Ekind (Proc, E_Procedure);\n+         Mutate_Ekind (Proc, E_Procedure);\n          Set_Etype (Proc, Standard_Void_Type);\n       end if;\n \n@@ -1979,7 +1979,7 @@ package body Exp_Dist is\n \n       Existing := False;\n       Stub_Type := Make_Temporary (Loc, 'S');\n-      Set_Ekind (Stub_Type, E_Record_Type);\n+      Mutate_Ekind (Stub_Type, E_Record_Type);\n       Set_Is_RACW_Stub_Type (Stub_Type);\n       Stub_Type_Access :=\n         Make_Defining_Identifier (Loc,\n@@ -2169,7 +2169,7 @@ package body Exp_Dist is\n                    Object_Definition   =>\n                      New_Occurrence_Of\n                        (Defining_Identifier (Last (Decls)), Loc)));\n-               Set_Ekind (Object, E_Variable);\n+               Mutate_Ekind (Object, E_Variable);\n \n                --  Suppress default initialization:\n                --  pragma Import (Ada, Object);\n@@ -2213,9 +2213,9 @@ package body Exp_Dist is\n              Expression          => Expr));\n \n          if Constant_Present (Last (Decls)) then\n-            Set_Ekind (Object, E_Constant);\n+            Mutate_Ekind (Object, E_Constant);\n          else\n-            Set_Ekind (Object, E_Variable);\n+            Mutate_Ekind (Object, E_Variable);\n          end if;\n       end if;\n    end Build_Actual_Object_Declaration;\n@@ -3727,7 +3727,7 @@ package body Exp_Dist is\n          --  Set the kind and return type of the function to prevent\n          --  ambiguities between Ras_Type and Fat_Type in subsequent analysis.\n \n-         Set_Ekind (Proc, E_Function);\n+         Mutate_Ekind (Proc, E_Function);\n          Set_Etype (Proc, Fat_Type);\n \n          Discard_Node (\n@@ -6472,7 +6472,7 @@ package body Exp_Dist is\n          --  Set the kind and return type of the function to prevent\n          --  ambiguities between Ras_Type and Fat_Type in subsequent analysis.\n \n-         Set_Ekind (Proc, E_Function);\n+         Mutate_Ekind (Proc, E_Function);\n          Set_Etype (Proc, Fat_Type);\n \n          Discard_Node (\n@@ -11348,10 +11348,10 @@ package body Exp_Dist is\n \n    begin\n       if Nkind (Spec) = N_Function_Specification then\n-         Set_Ekind (Snam, E_Function);\n+         Mutate_Ekind (Snam, E_Function);\n          Set_Etype (Snam, Entity (Result_Definition (Spec)));\n       else\n-         Set_Ekind (Snam, E_Procedure);\n+         Mutate_Ekind (Snam, E_Procedure);\n          Set_Etype (Snam, Standard_Void_Type);\n       end if;\n "}, {"sha": "4e5e1b67d36b9ccfa6294d6422d8c448b4e46cf5", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -260,7 +260,7 @@ package body Exp_Imgv is\n          H_Id :=\n            Make_Defining_Identifier (Loc,\n              Chars => New_External_Name (Chars (E), 'H'));\n-         Set_Ekind       (H_Id, E_Function);\n+         Mutate_Ekind    (H_Id, E_Function);\n          Set_Is_Internal (H_Id);\n \n          if not Debug_Generated_Code then"}, {"sha": "0cfe258ee77b17153f660f6326a6224c0dd9b1b6", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -521,7 +521,7 @@ package body Exp_Intr is\n             if No (Choice_Parameter (P)) then\n                E := Make_Temporary (Loc, 'E');\n                Set_Choice_Parameter (P, E);\n-               Set_Ekind (E, E_Variable);\n+               Mutate_Ekind (E, E_Variable);\n                Set_Etype (E, RTE (RE_Exception_Occurrence));\n                Set_Scope (E, Current_Scope);\n             end if;"}, {"sha": "d7c301d272d0f2db270a2a6c408515519a1393c5", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1570,7 +1570,7 @@ package body Exp_Prag is\n                   --  effects). Assign prefix value to temp on Eval_Statement\n                   --  list, so assignment will be executed conditionally.\n \n-                  Set_Ekind (Temp, E_Variable);\n+                  Mutate_Ekind (Temp, E_Variable);\n                   Set_Suppress_Initialization (Temp);\n                   Analyze (Decl);\n \n@@ -2272,7 +2272,7 @@ package body Exp_Prag is\n         Make_Defining_Identifier (Loc,\n           Chars => New_External_Name (Chars (Pack_Id), \"Initial_Condition\"));\n \n-      Set_Ekind                          (Proc_Id, E_Procedure);\n+      Mutate_Ekind                       (Proc_Id, E_Procedure);\n       Set_Is_Initial_Condition_Procedure (Proc_Id);\n \n       --  Generate:"}, {"sha": "6e5d74e3c37395db7e216c6b6fec841bd9fcc80e", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -191,7 +191,7 @@ package body Exp_Unst is\n \n    begin\n       Typ := Make_Temporary (Loc, 'S');\n-      Set_Ekind (Typ, E_General_Access_Type);\n+      Mutate_Ekind (Typ, E_General_Access_Type);\n       Set_Etype (Typ, Typ);\n       Set_Scope (Typ, Scop);\n       Set_Directly_Designated_Type (Typ, Etype (E));\n@@ -1792,7 +1792,7 @@ package body Exp_Unst is\n                      --  Decorate the new formal entity\n \n                      Set_Scope                (Form, STJ.Ent);\n-                     Set_Ekind                (Form, E_In_Parameter);\n+                     Mutate_Ekind             (Form, E_In_Parameter);\n                      Set_Etype                (Form, STJE.ARECnPT);\n                      Set_Mechanism            (Form, By_Copy);\n                      Set_Never_Set_In_Source  (Form, True);"}, {"sha": "38eadef320fa96d572b46f13a8d981d96a3a0372", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -2190,7 +2190,7 @@ package body Exp_Util is\n \n       --  Perform minor decoration in case the body is not analyzed\n \n-      Set_Ekind        (Proc_Body_Id, E_Subprogram_Body);\n+      Mutate_Ekind     (Proc_Body_Id, E_Subprogram_Body);\n       Set_Etype        (Proc_Body_Id, Standard_Void_Type);\n       Set_Scope        (Proc_Body_Id, Current_Scope);\n       Set_SPARK_Pragma (Proc_Body_Id, SPARK_Pragma (Proc_Id));\n@@ -2357,7 +2357,7 @@ package body Exp_Util is\n \n       --  Perform minor decoration in case the declaration is not analyzed\n \n-      Set_Ekind                  (Proc_Id, E_Procedure);\n+      Mutate_Ekind               (Proc_Id, E_Procedure);\n       Set_Etype                  (Proc_Id, Standard_Void_Type);\n       Set_Is_DIC_Procedure       (Proc_Id);\n       Set_Scope                  (Proc_Id, Current_Scope);\n@@ -2409,7 +2409,7 @@ package body Exp_Util is\n \n       --  Perform minor decoration in case the declaration is not analyzed\n \n-      Set_Ekind (Obj_Id, E_In_Parameter);\n+      Mutate_Ekind (Obj_Id, E_In_Parameter);\n       Set_Etype (Obj_Id, Work_Typ);\n       Set_Scope (Obj_Id, Proc_Id);\n \n@@ -3679,7 +3679,7 @@ package body Exp_Util is\n \n       --  Perform minor decoration in case the body is not analyzed\n \n-      Set_Ekind (Proc_Body_Id, E_Subprogram_Body);\n+      Mutate_Ekind (Proc_Body_Id, E_Subprogram_Body);\n       Set_Etype (Proc_Body_Id, Standard_Void_Type);\n       Set_Scope (Proc_Body_Id, Current_Scope);\n \n@@ -3817,7 +3817,7 @@ package body Exp_Util is\n \n       --  Perform minor decoration in case the declaration is not analyzed\n \n-      Set_Ekind (Proc_Id, E_Procedure);\n+      Mutate_Ekind (Proc_Id, E_Procedure);\n       Set_Etype (Proc_Id, Standard_Void_Type);\n       Set_Scope (Proc_Id, Current_Scope);\n \n@@ -3903,7 +3903,7 @@ package body Exp_Util is\n \n       --  Perform minor decoration in case the declaration is not analyzed\n \n-      Set_Ekind (Obj_Id, E_In_Parameter);\n+      Mutate_Ekind (Obj_Id, E_In_Parameter);\n       Set_Etype (Obj_Id, Obj_Typ);\n       Set_Scope (Obj_Id, Proc_Id);\n \n@@ -4707,7 +4707,7 @@ package body Exp_Util is\n       --    type Ptr_Typ is access all Desig_Typ;\n \n       Ptr_Typ := Make_Temporary (Loc, 'A');\n-      Set_Ekind (Ptr_Typ, E_General_Access_Type);\n+      Mutate_Ekind (Ptr_Typ, E_General_Access_Type);\n       Set_Directly_Designated_Type (Ptr_Typ, Desig_Typ);\n \n       Ptr_Decl :=\n@@ -4724,7 +4724,7 @@ package body Exp_Util is\n       --    Hook : Ptr_Typ := null;\n \n       Hook_Id := Make_Temporary (Loc, 'T');\n-      Set_Ekind (Hook_Id, E_Variable);\n+      Mutate_Ekind (Hook_Id, E_Variable);\n       Set_Etype (Hook_Id, Ptr_Typ);\n \n       Hook_Decl :=\n@@ -9495,7 +9495,7 @@ package body Exp_Util is\n       --  end Equiv_T;\n \n       Equiv_Type := Make_Temporary (Loc, 'T');\n-      Set_Ekind (Equiv_Type, E_Record_Type);\n+      Mutate_Ekind (Equiv_Type, E_Record_Type);\n       Set_Parent_Subtype (Equiv_Type, Constr_Root);\n \n       --  Set Is_Class_Wide_Equivalent_Type very early to trigger the special\n@@ -9987,7 +9987,7 @@ package body Exp_Util is\n \n          --  Define the dummy private subtype\n \n-         Set_Ekind          (Priv_Subtyp, Subtype_Kind (Ekind (Unc_Typ)));\n+         Mutate_Ekind       (Priv_Subtyp, Subtype_Kind (Ekind (Unc_Typ)));\n          Set_Etype          (Priv_Subtyp, Base_Type (Unc_Typ));\n          Set_Scope          (Priv_Subtyp, Full_Subtyp);\n          Set_Is_Constrained (Priv_Subtyp);\n@@ -10913,7 +10913,7 @@ package body Exp_Util is\n \n       Set_Associated_Node_For_Itype (Res, N);\n       Set_Comes_From_Source         (Res, False);\n-      Set_Ekind                     (Res, E_Class_Wide_Subtype);\n+      Mutate_Ekind                  (Res, E_Class_Wide_Subtype);\n       Set_Etype                     (Res, Base_Type (CW_Typ));\n       Set_Freeze_Node               (Res, Empty);\n       Set_Is_Frozen                 (Res, False);"}, {"sha": "5b2a17bca3397e6d581fa8367af51bbea077e5eb", "filename": "gcc/ada/gen_il-gen.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fgen_il-gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fgen_il-gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1322,8 +1322,8 @@ package body Gen_IL.Gen is\n                Put_Getter_Decl (S, Ekind);\n                Put (S, \"function K (N : Entity_Id) return Entity_Kind renames Ekind;\\n\");\n                Put (S, \"--  Shorthand for use in predicates and preconditions below\\n\");\n-               Put (S, \"--  ????There is no procedure Set_Ekind here.\\n\");\n-               Put (S, \"--  See Atree.\\n\\n\");\n+               Put (S, \"--  There is no procedure Set_Ekind here.\\n\");\n+               Put (S, \"--  See Mutate_Ekind in Atree.\\n\\n\");\n \n             when others => raise Program_Error;\n          end case;"}, {"sha": "2319086e1f0bbdb861c5095d7b6204337b97b921", "filename": "gcc/ada/gen_il-gen.ads", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fgen_il-gen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fgen_il-gen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.ads?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -143,14 +143,24 @@ package Gen_IL.Gen is\n    --  (The matching Default_Value requirement is a simplification from the\n    --  earlier hand-written version.)\n \n+   --  When adding new node or entity kinds, or adding new fields, all back\n+   --  ends must be made aware of the changes. In addition, the documentation\n+   --  in Sinfo or Einfo needs to be updated.\n+\n    --  To add a new node or entity type, add it to the enumeration type in\n    --  Gen_IL.Types, taking care that it is in the approprate range\n    --  (Abstract_Node, Abstract_Entity, Concrete_Node, or Concrete_Entity).\n    --  Then add a call to one of the above type-creation procedures to\n-   --  Sinfo.Nodes or Einfo.Entities.\n+   --  Gen_IL.Gen.Gen_Nodes or Gen_IL.Gen.Gen_Entities.\n+   --\n+   --  To add a new field to a type, add it to the enumeration type in\n+   --  Gen_IL.Fields in the appropriate range. Then add a call to one of\n+   --  the above field-creation procedures to Gen_IL.Gen.Gen_Nodes or\n+   --  Gen_IL.Gen.Gen_Entities.\n    --\n-   --  To add a new field to a type, add a call to one of the above field\n-   --  creation procedures to Sinfo.Nodes or Einfo.Entities.\n+   --  If a type or field name does not follow the usual Mixed_Case convention,\n+   --  such as \"SPARK_Pragma\", then you have to add a special case to one of\n+   --  the Image functions in Gen_IL.Utils.\n \n    --  Forward references are not allowed. So if you say:\n    --"}, {"sha": "1c507876f7ecde52f325bd8011d0c35030546b06", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1473,7 +1473,7 @@ package body Inline is\n       end if;\n \n       Set_Body_To_Inline (Decl, Original_Body);\n-      Set_Ekind (Defining_Entity (Original_Body), Ekind (Spec_Id));\n+      Mutate_Ekind (Defining_Entity (Original_Body), Ekind (Spec_Id));\n       Set_Is_Inlined (Spec_Id);\n    end Build_Body_To_Inline;\n \n@@ -2251,7 +2251,7 @@ package body Inline is\n \n          pragma Assert (No (Body_To_Inline (Decl)));\n          Set_Body_To_Inline (Decl, Original_Body);\n-         Set_Ekind (Defining_Entity (Original_Body), Ekind (Spec_Id));\n+         Mutate_Ekind (Defining_Entity (Original_Body), Ekind (Spec_Id));\n       end Build_Body_To_Inline;\n \n       --------------------------------"}, {"sha": "2f0b0ff96f0324fcdecbe09875eb86aa536b848b", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -207,7 +207,7 @@ package body Lib.Writ is\n          Style_Check := False;\n          Initialize_Scanner (Units.Last, System_Source_File_Index);\n          Discard_List (Par (Configuration_Pragmas => False));\n-         Set_Ekind (Cunit_Entity (Units.Last), E_Package);\n+         Mutate_Ekind (Cunit_Entity (Units.Last), E_Package);\n          Set_Scope (Cunit_Entity (Units.Last), Standard_Standard);\n          Style_Check := Save_Style;\n          Multiple_Unit_Index := Save_Mindex;"}, {"sha": "fc05e1668750c1a7031452a90195c72d6b24109f", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -296,7 +296,7 @@ package body SPARK_Specific is\n              (Standard_Location,\n               Name_Enter (Name_Of_Heap_Variable));\n \n-         Set_Ekind       (Heap, E_Variable);\n+         Mutate_Ekind    (Heap, E_Variable);\n          Set_Is_Internal (Heap, True);\n          Set_Etype       (Heap, Standard_Void_Type);\n          Set_Scope       (Heap, Standard_Standard);"}, {"sha": "4fbaee7c983493ce1f115185d7c356981f310bc2", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1681,7 +1681,7 @@ package body Sem_Aggr is\n \n          Enter_Name (Id);\n          Set_Etype (Id, Index_Typ);\n-         Set_Ekind (Id, E_Variable);\n+         Mutate_Ekind (Id, E_Variable);\n          Set_Scope (Id, Ent);\n \n          --  Analyze  expression without expansion, to verify legality.\n@@ -2863,7 +2863,7 @@ package body Sem_Aggr is\n             Set_Etype (Id, Key_Type);\n          end if;\n \n-         Set_Ekind (Id, E_Variable);\n+         Mutate_Ekind (Id, E_Variable);\n          Set_Scope (Id, Ent);\n          Set_Referenced (Id);\n \n@@ -3203,7 +3203,7 @@ package body Sem_Aggr is\n \n                if No (Scope (Id)) then\n                   Set_Etype (Id, Index_Type);\n-                  Set_Ekind (Id, E_Variable);\n+                  Mutate_Ekind (Id, E_Variable);\n                   Set_Scope (Id, Ent);\n                end if;\n                Enter_Name (Id);"}, {"sha": "ccfecf4bd27b0b1f822f736aa98feeb57bbd2ead", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1647,7 +1647,7 @@ package body Sem_Ch10 is\n          --  when we load the proper body.\n \n          Set_Scope (Id, Current_Scope);\n-         Set_Ekind (Id, E_Package_Body);\n+         Mutate_Ekind (Id, E_Package_Body);\n          Set_Etype (Id, Standard_Void_Type);\n \n          if Has_Aspects (N) then\n@@ -1989,7 +1989,7 @@ package body Sem_Ch10 is\n          Opts := Save_Config_Switches;\n \n          Set_Scope (Id, Current_Scope);\n-         Set_Ekind (Id, E_Protected_Body);\n+         Mutate_Ekind (Id, E_Protected_Body);\n          Set_Etype (Id, Standard_Void_Type);\n \n          if Has_Aspects (N) then\n@@ -2500,7 +2500,7 @@ package body Sem_Ch10 is\n \n       else\n          Set_Scope (Id, Current_Scope);\n-         Set_Ekind (Id, E_Task_Body);\n+         Mutate_Ekind (Id, E_Task_Body);\n          Set_Etype (Id, Standard_Void_Type);\n \n          if Has_Aspects (N) then\n@@ -4120,7 +4120,8 @@ package body Sem_Ch10 is\n                      Set_Subtype_Indication (Decl,\n                        New_Occurrence_Of (Non_Lim_View, Sloc (Def_Id)));\n                      Set_Etype (Def_Id, Non_Lim_View);\n-                     Set_Ekind (Def_Id, Subtype_Kind (Ekind (Non_Lim_View)));\n+                     Mutate_Ekind\n+                       (Def_Id, Subtype_Kind (Ekind (Non_Lim_View)));\n                      Set_Analyzed (Decl, False);\n \n                      --  Reanalyze the declaration, suppressing the call to\n@@ -4986,7 +4987,7 @@ package body Sem_Ch10 is\n \n             --  Minimum decoration\n \n-            Set_Ekind (P, E_Package);\n+            Mutate_Ekind (P, E_Package);\n             Set_Etype (P, Standard_Void_Type);\n             Set_Scope (P, Standard_Standard);\n             Set_Is_Visible_Lib_Unit (P);\n@@ -5738,9 +5739,9 @@ package body Sem_Ch10 is\n          --  The abstract view of a variable is a state, not another variable\n \n          if Ekind (Ent) = E_Variable then\n-            Set_Ekind (Shadow, E_Abstract_State);\n+            Mutate_Ekind (Shadow, E_Abstract_State);\n          else\n-            Set_Ekind (Shadow, Ekind (Ent));\n+            Mutate_Ekind (Shadow, Ekind (Ent));\n          end if;\n \n          Set_Is_Internal       (Shadow);\n@@ -5785,7 +5786,7 @@ package body Sem_Ch10 is\n \n       procedure Decorate_Package (Ent : Entity_Id; Scop : Entity_Id) is\n       begin\n-         Set_Ekind (Ent, E_Package);\n+         Mutate_Ekind (Ent, E_Package);\n          Set_Etype (Ent, Standard_Void_Type);\n          Set_Scope (Ent, Scop);\n       end Decorate_Package;\n@@ -5796,7 +5797,7 @@ package body Sem_Ch10 is\n \n       procedure Decorate_State (Ent : Entity_Id; Scop : Entity_Id) is\n       begin\n-         Set_Ekind               (Ent, E_Abstract_State);\n+         Mutate_Ekind            (Ent, E_Abstract_State);\n          Set_Etype               (Ent, Standard_Void_Type);\n          Set_Scope               (Ent, Scop);\n          Set_Encapsulating_State (Ent, Empty);\n@@ -5818,7 +5819,7 @@ package body Sem_Ch10 is\n          --  An unanalyzed type or a shadow entity of a type is treated as an\n          --  incomplete type, and carries the corresponding attributes.\n \n-         Set_Ekind              (Ent, E_Incomplete_Type);\n+         Mutate_Ekind           (Ent, E_Incomplete_Type);\n          Set_Etype              (Ent, Ent);\n          Set_Full_View          (Ent, Empty);\n          Set_Is_First_Subtype   (Ent);\n@@ -5854,7 +5855,7 @@ package body Sem_Ch10 is\n \n             Set_Parent (CW_Typ, Parent (Ent));\n \n-            Set_Ekind                     (CW_Typ, E_Class_Wide_Type);\n+            Mutate_Ekind                  (CW_Typ, E_Class_Wide_Type);\n             Set_Class_Wide_Type           (CW_Typ, CW_Typ);\n             Set_Etype                     (CW_Typ, Ent);\n             Set_Equivalent_Type           (CW_Typ, Empty);\n@@ -5874,7 +5875,7 @@ package body Sem_Ch10 is\n \n       procedure Decorate_Variable (Ent : Entity_Id; Scop : Entity_Id) is\n       begin\n-         Set_Ekind (Ent, E_Variable);\n+         Mutate_Ekind (Ent, E_Variable);\n          Set_Etype (Ent, Standard_Void_Type);\n          Set_Scope (Ent, Scop);\n       end Decorate_Variable;\n@@ -6229,7 +6230,7 @@ package body Sem_Ch10 is\n       --  must be minimally decorated. This ensures that the checks on unused\n       --  with clauses also process limieted withs.\n \n-      Set_Ekind (Pack, E_Package);\n+      Mutate_Ekind (Pack, E_Package);\n       Set_Etype (Pack, Standard_Void_Type);\n \n       if Is_Entity_Name (Nam) then\n@@ -6251,7 +6252,7 @@ package body Sem_Ch10 is\n       --  incomplete view of all types and packages declared within.\n \n       Shadow_Pack := Make_Temporary (Sloc (N), 'Z');\n-      Set_Ekind        (Shadow_Pack, E_Package);\n+      Mutate_Ekind     (Shadow_Pack, E_Package);\n       Set_Is_Internal  (Shadow_Pack);\n       Set_Limited_View (Pack, Shadow_Pack);\n "}, {"sha": "aea32c135888309a4f848ab4260594589d9f1b3e", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -65,7 +65,7 @@ package body Sem_Ch11 is\n    begin\n       Generate_Definition         (Id);\n       Enter_Name                  (Id);\n-      Set_Ekind                   (Id, E_Exception);\n+      Mutate_Ekind                (Id, E_Exception);\n       Set_Etype                   (Id, Standard_Exception_Type);\n       Set_Is_Statically_Allocated (Id);\n       Set_Is_Pure                 (Id, PF);\n@@ -233,7 +233,7 @@ package body Sem_Ch11 is\n                Set_Etype (H_Scope, Standard_Void_Type);\n \n                Enter_Name (Choice);\n-               Set_Ekind (Choice, E_Variable);\n+               Mutate_Ekind (Choice, E_Variable);\n \n                if RTE_Available (RE_Exception_Occurrence) then\n                   Set_Etype (Choice, RTE (RE_Exception_Occurrence));"}, {"sha": "12e25b967f719e277c1dcbf80c79d8b2fd717558", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -2351,7 +2351,7 @@ package body Sem_Ch12 is\n       Set_Is_Generic_Type (Base);\n       Set_Parent          (Base, Parent (Def));\n \n-      Set_Ekind          (T, E_Decimal_Fixed_Point_Subtype);\n+      Mutate_Ekind       (T, E_Decimal_Fixed_Point_Subtype);\n       Set_Etype          (T, Base);\n       Set_Size_Info      (T, Int_Base);\n       Set_RM_Size        (T, RM_Size (Int_Base));\n@@ -2473,7 +2473,7 @@ package body Sem_Ch12 is\n \n    begin\n       Enter_Name          (T);\n-      Set_Ekind           (T, E_Enumeration_Subtype);\n+      Mutate_Ekind        (T, E_Enumeration_Subtype);\n       Set_Etype           (T, Base);\n       Init_Size           (T, 8);\n       Init_Alignment      (T);\n@@ -2502,7 +2502,7 @@ package body Sem_Ch12 is\n           Low_Bound  => Lo,\n           High_Bound => Hi));\n \n-      Set_Ekind           (Base, E_Enumeration_Type);\n+      Mutate_Ekind        (Base, E_Enumeration_Type);\n       Set_Etype           (Base, Base);\n       Init_Size           (Base, 8);\n       Init_Alignment      (Base);\n@@ -2528,7 +2528,7 @@ package body Sem_Ch12 is\n       --  the generic itself.\n \n       Enter_Name (T);\n-      Set_Ekind          (T, E_Floating_Point_Subtype);\n+      Mutate_Ekind       (T, E_Floating_Point_Subtype);\n       Set_Etype          (T, Base);\n       Set_Size_Info      (T,              (Standard_Float));\n       Set_RM_Size        (T, RM_Size      (Standard_Float));\n@@ -2580,8 +2580,8 @@ package body Sem_Ch12 is\n       --  signed integer types, and have the same attributes.\n \n       Analyze_Formal_Signed_Integer_Type (T, Def);\n-      Set_Ekind (T, E_Modular_Integer_Subtype);\n-      Set_Ekind (Etype (T), E_Modular_Integer_Type);\n+      Mutate_Ekind (T, E_Modular_Integer_Subtype);\n+      Mutate_Ekind (Etype (T), E_Modular_Integer_Type);\n \n    end Analyze_Formal_Modular_Type;\n \n@@ -2678,7 +2678,7 @@ package body Sem_Ch12 is\n             end if;\n          end if;\n \n-         Set_Ekind (Id, K);\n+         Mutate_Ekind (Id, K);\n          Set_Etype (Id, T);\n \n       --  Case of generic IN OUT parameter\n@@ -2688,7 +2688,7 @@ package body Sem_Ch12 is\n          --  subtype, as is done for subprogram formals. In this fashion, all\n          --  its uses can refer to specific bounds.\n \n-         Set_Ekind (Id, K);\n+         Mutate_Ekind (Id, K);\n          Set_Etype (Id, T);\n \n          if (Is_Array_Type (T) and then not Is_Constrained (T))\n@@ -2741,7 +2741,7 @@ package body Sem_Ch12 is\n       --  will never be used, since all properties of the type are non-static.\n \n       Enter_Name (T);\n-      Set_Ekind            (T, E_Ordinary_Fixed_Point_Subtype);\n+      Mutate_Ekind         (T, E_Ordinary_Fixed_Point_Subtype);\n       Set_Etype            (T, Base);\n       Set_Size_Info        (T, Standard_Integer);\n       Set_RM_Size          (T, RM_Size (Standard_Integer));\n@@ -3017,8 +3017,8 @@ package body Sem_Ch12 is\n       exception\n          when Instantiation_Error =>\n             Enter_Name (Formal);\n-            Set_Ekind  (Formal, E_Variable);\n-            Set_Etype  (Formal, Any_Type);\n+            Mutate_Ekind (Formal, E_Variable);\n+            Set_Etype (Formal, Any_Type);\n             Restore_Hidden_Primitives (Vis_Prims_List);\n \n             if Parent_Installed then\n@@ -3035,8 +3035,8 @@ package body Sem_Ch12 is\n       Set_Is_Generic_Instance (Formal);\n \n       Enter_Name (Formal);\n-      Set_Ekind  (Formal, E_Package);\n-      Set_Etype  (Formal, Standard_Void_Type);\n+      Mutate_Ekind (Formal, E_Package);\n+      Set_Etype (Formal, Standard_Void_Type);\n       Set_Inner_Instances (Formal, New_Elmt_List);\n \n       --  It is unclear that any aspects can apply to a formal package\n@@ -3094,7 +3094,7 @@ package body Sem_Ch12 is\n \n          Renaming_In_Par :=\n            Make_Defining_Identifier (Loc, Chars (Gen_Unit));\n-         Set_Ekind (Renaming_In_Par, E_Package);\n+         Mutate_Ekind (Renaming_In_Par, E_Package);\n          Set_Etype (Renaming_In_Par, Standard_Void_Type);\n          Set_Scope (Renaming_In_Par, Parent_Instance);\n          Set_Parent (Renaming_In_Par, Parent (Formal));\n@@ -3163,7 +3163,7 @@ package body Sem_Ch12 is\n \n       --  Add semantic information to the original defining identifier.\n \n-      Set_Ekind (Pack_Id, E_Package);\n+      Mutate_Ekind (Pack_Id, E_Package);\n       Set_Etype (Pack_Id, Standard_Void_Type);\n       Set_Scope (Pack_Id, Scope (Formal));\n       Set_Has_Completion (Pack_Id, True);\n@@ -3207,7 +3207,7 @@ package body Sem_Ch12 is\n    is\n    begin\n       Enter_Name (T);\n-      Set_Ekind (T, E_Incomplete_Type);\n+      Mutate_Ekind (T, E_Incomplete_Type);\n       Set_Etype (T, T);\n       Set_Private_Dependents (T, New_Elmt_List);\n \n@@ -3235,7 +3235,7 @@ package body Sem_Ch12 is\n    begin\n       Enter_Name (T);\n \n-      Set_Ekind          (T, E_Signed_Integer_Subtype);\n+      Mutate_Ekind       (T, E_Signed_Integer_Subtype);\n       Set_Etype          (T, Base);\n       Set_Size_Info      (T, Standard_Integer);\n       Set_RM_Size        (T, RM_Size (Standard_Integer));\n@@ -3693,8 +3693,8 @@ package body Sem_Ch12 is\n       Start_Generic;\n \n       Enter_Name (Id);\n-      Set_Ekind  (Id, E_Generic_Package);\n-      Set_Etype  (Id, Standard_Void_Type);\n+      Mutate_Ekind (Id, E_Generic_Package);\n+      Set_Etype (Id, Standard_Void_Type);\n \n       --  Set SPARK_Mode from context\n \n@@ -3870,9 +3870,9 @@ package body Sem_Ch12 is\n       Analyze_Generic_Formal_Part (N);\n \n       if Nkind (Spec) = N_Function_Specification then\n-         Set_Ekind (Id, E_Generic_Function);\n+         Mutate_Ekind (Id, E_Generic_Function);\n       else\n-         Set_Ekind (Id, E_Generic_Procedure);\n+         Mutate_Ekind (Id, E_Generic_Procedure);\n       end if;\n \n       --  Set SPARK_Mode from context\n@@ -4189,7 +4189,7 @@ package body Sem_Ch12 is\n       end if;\n \n       Generate_Definition (Act_Decl_Id);\n-      Set_Ekind (Act_Decl_Id, E_Package);\n+      Mutate_Ekind (Act_Decl_Id, E_Package);\n \n       --  Initialize list of incomplete actuals before analysis\n \n@@ -4316,7 +4316,7 @@ package body Sem_Ch12 is\n          goto Leave;\n \n       else\n-         Set_Ekind (Inst_Id, E_Package);\n+         Mutate_Ekind (Inst_Id, E_Package);\n          Set_Scope (Inst_Id, Current_Scope);\n \n          --  If the context of the instance is subject to SPARK_Mode \"off\" or\n@@ -5663,7 +5663,7 @@ package body Sem_Ch12 is\n          Error_Msg_NE (\"instantiation of & within itself\", N, Gen_Unit);\n \n       else\n-         Set_Ekind (Inst_Id, K);\n+         Mutate_Ekind (Inst_Id, K);\n          Set_Scope (Inst_Id, Current_Scope);\n \n          Set_Entity (Gen_Id, Gen_Unit);\n@@ -6055,7 +6055,7 @@ package body Sem_Ch12 is\n       Func_Name := New_Occurrence_Of (Actual_Subp, Loc);\n \n       Func := Make_Defining_Identifier (Loc, Chars (Formal_Subp));\n-      Set_Ekind (Func, E_Function);\n+      Mutate_Ekind (Func, E_Function);\n       Set_Is_Generic_Actual_Subprogram (Func);\n \n       Actuals := New_List;\n@@ -6140,7 +6140,7 @@ package body Sem_Ch12 is\n       R  := New_Occurrence_Of (F2, Loc);\n \n       Func := Make_Defining_Identifier (Loc, Chars (Formal_Subp));\n-      Set_Ekind (Func, E_Function);\n+      Mutate_Ekind (Func, E_Function);\n       Set_Is_Generic_Actual_Subprogram (Func);\n \n       Spec :=\n@@ -6255,7 +6255,7 @@ package body Sem_Ch12 is\n    begin\n \n       Subp := Make_Defining_Identifier (Loc, Chars (Formal_Subp));\n-      Set_Ekind (Subp, Ekind (Formal_Subp));\n+      Mutate_Ekind (Subp, Ekind (Formal_Subp));\n       Set_Is_Generic_Actual_Subprogram (Subp);\n \n       Profile := Parameter_Specifications (\n@@ -10885,7 +10885,7 @@ package body Sem_Ch12 is\n \n             begin\n                Set_Is_Internal (I_Pack);\n-               Set_Ekind (I_Pack, E_Package);\n+               Mutate_Ekind (I_Pack, E_Package);\n                Set_Hidden_In_Formal_Instance (I_Pack, Hidden_Formals);\n \n                Append_To (Decls,\n@@ -11022,7 +11022,7 @@ package body Sem_Ch12 is\n          New_Subp := Make_Defining_Identifier (Loc, Chars (Formal_Sub));\n       end if;\n \n-      Set_Ekind (New_Subp, Ekind (Analyzed_S));\n+      Mutate_Ekind (New_Subp, Ekind (Analyzed_S));\n       Set_Is_Generic_Actual_Subprogram (New_Subp);\n       Set_Defining_Unit_Name (New_Spec, New_Subp);\n \n@@ -14214,7 +14214,7 @@ package body Sem_Ch12 is\n       --  the local subtype must be treated as such.\n \n       if From_Limited_With (Act_T) then\n-         Set_Ekind (Subt, E_Incomplete_Subtype);\n+         Mutate_Ekind (Subt, E_Incomplete_Subtype);\n          Set_From_Limited_With (Subt);\n       end if;\n \n@@ -14273,9 +14273,9 @@ package body Sem_Ch12 is\n             Append_To (Decl_Nodes, Corr_Decl);\n \n             if Ekind (Act_T) = E_Task_Type then\n-               Set_Ekind (Subt, E_Task_Subtype);\n+               Mutate_Ekind (Subt, E_Task_Subtype);\n             else\n-               Set_Ekind (Subt, E_Protected_Subtype);\n+               Mutate_Ekind (Subt, E_Protected_Subtype);\n             end if;\n \n             Set_Corresponding_Record_Type (Subt, Corr_Rec);"}, {"sha": "4a5273b0c375c354eac7e7c0266b8f0430a91769", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -10216,7 +10216,7 @@ package body Sem_Ch13 is\n             FBody : Node_Id;\n \n          begin\n-            Set_Ekind (SIdB, E_Function);\n+            Mutate_Ekind (SIdB, E_Function);\n             Set_Is_Predicate_Function (SIdB);\n \n             --  Build function body\n@@ -10350,7 +10350,7 @@ package body Sem_Ch13 is\n \n                --  Build function declaration\n \n-               Set_Ekind (SId, E_Function);\n+               Mutate_Ekind (SId, E_Function);\n                Set_Is_Predicate_Function_M (SId);\n                Set_Predicate_Function_M (Typ, SId);\n \n@@ -10565,7 +10565,7 @@ package body Sem_Ch13 is\n         Make_Defining_Identifier (Loc,\n           Chars => New_External_Name (Chars (Typ), \"Predicate\"));\n \n-      Set_Ekind (Func_Id, E_Function);\n+      Mutate_Ekind (Func_Id, E_Function);\n       Set_Etype (Func_Id, Standard_Boolean);\n       Set_Is_Internal (Func_Id);\n       Set_Is_Predicate_Function (Func_Id);"}, {"sha": "6b8fe6fa9aa5c411161b99b39535058029348554", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 106, "deletions": 106, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -857,10 +857,10 @@ package body Sem_Ch3 is\n             T_Def  => Access_To_Subprogram_Definition (N));\n \n          if Ekind (Anon_Type) = E_Access_Protected_Subprogram_Type then\n-            Set_Ekind\n+            Mutate_Ekind\n               (Anon_Type, E_Anonymous_Access_Protected_Subprogram_Type);\n          else\n-            Set_Ekind (Anon_Type, E_Anonymous_Access_Subprogram_Type);\n+            Mutate_Ekind (Anon_Type, E_Anonymous_Access_Subprogram_Type);\n          end if;\n \n          Set_Can_Use_Internal_Rep\n@@ -1290,10 +1290,10 @@ package body Sem_Ch3 is\n       Check_Delayed_Subprogram (Desig_Type);\n \n       if Protected_Present (T_Def) then\n-         Set_Ekind (T_Name, E_Access_Protected_Subprogram_Type);\n+         Mutate_Ekind (T_Name, E_Access_Protected_Subprogram_Type);\n          Set_Convention (Desig_Type, Convention_Protected);\n       else\n-         Set_Ekind (T_Name, E_Access_Subprogram_Type);\n+         Mutate_Ekind (T_Name, E_Access_Subprogram_Type);\n       end if;\n \n       Set_Can_Use_Internal_Rep     (T_Name,\n@@ -1365,7 +1365,7 @@ package body Sem_Ch3 is\n             if From_Limited_With (Entity (S))\n               and then not Is_Class_Wide_Type (Entity (S))\n             then\n-               Set_Ekind (T, E_Access_Type);\n+               Mutate_Ekind (T, E_Access_Type);\n                Build_Master_Entity (T);\n                Build_Master_Renaming (T);\n             end if;\n@@ -1408,9 +1408,9 @@ package body Sem_Ch3 is\n       end if;\n \n       if All_Present (Def) or Constant_Present (Def) then\n-         Set_Ekind (T, E_General_Access_Type);\n+         Mutate_Ekind (T, E_General_Access_Type);\n       else\n-         Set_Ekind (T, E_Access_Type);\n+         Mutate_Ekind (T, E_Access_Type);\n       end if;\n \n       if not Error_Posted (T) then\n@@ -1541,7 +1541,7 @@ package body Sem_Ch3 is\n          Analyze_Component_Declaration (Decl);\n \n          Set_Analyzed (Decl);\n-         Set_Ekind               (Tag, E_Component);\n+         Mutate_Ekind            (Tag, E_Component);\n          Set_Is_Tag              (Tag);\n          Set_Is_Aliased          (Tag);\n          Set_Is_Independent      (Tag);\n@@ -1582,7 +1582,7 @@ package body Sem_Ch3 is\n             Analyze_Component_Declaration (Decl);\n \n             Set_Analyzed (Decl);\n-            Set_Ekind               (Offset, E_Component);\n+            Mutate_Ekind            (Offset, E_Component);\n             Set_Is_Aliased          (Offset);\n             Set_Is_Independent      (Offset);\n             Set_Related_Type        (Offset, Iface);\n@@ -3419,7 +3419,7 @@ package body Sem_Ch3 is\n \n       T := Find_Type_Name (N);\n \n-      Set_Ekind            (T, E_Incomplete_Type);\n+      Mutate_Ekind         (T, E_Incomplete_Type);\n       Set_Etype            (T, T);\n       Set_Is_First_Subtype (T);\n       Init_Size_Align      (T);\n@@ -3543,7 +3543,7 @@ package body Sem_Ch3 is\n          Set_Etype                (E, Universal_Integer);\n \n          Set_Etype     (Id, Universal_Integer);\n-         Set_Ekind     (Id, E_Named_Integer);\n+         Mutate_Ekind  (Id, E_Named_Integer);\n          Set_Is_Frozen (Id, True);\n \n          Set_Debug_Info_Needed (Id);\n@@ -3603,7 +3603,7 @@ package body Sem_Ch3 is\n       if Is_Integer_Type (T) then\n          Resolve (E, T);\n          Set_Etype (Id, Universal_Integer);\n-         Set_Ekind (Id, E_Named_Integer);\n+         Mutate_Ekind (Id, E_Named_Integer);\n \n       elsif Is_Real_Type (T) then\n \n@@ -3635,14 +3635,14 @@ package body Sem_Ch3 is\n \n          Resolve (E, T);\n          Set_Etype (Id, Universal_Real);\n-         Set_Ekind (Id, E_Named_Real);\n+         Mutate_Ekind (Id, E_Named_Real);\n \n       else\n          Wrong_Type (E, Any_Numeric);\n          Resolve (E, T);\n \n          Set_Etype               (Id, T);\n-         Set_Ekind               (Id, E_Constant);\n+         Mutate_Ekind            (Id, E_Constant);\n          Set_Never_Set_In_Source (Id, True);\n          Set_Is_True_Constant    (Id, True);\n          return;\n@@ -4043,7 +4043,7 @@ package body Sem_Ch3 is\n \n             T := Find_Type_Of_Object (Object_Definition (N), N);\n             Set_Etype (Id, T);\n-            Set_Ekind (Id, E_Variable);\n+            Mutate_Ekind (Id, E_Variable);\n             goto Leave;\n          end if;\n \n@@ -4069,7 +4069,7 @@ package body Sem_Ch3 is\n \n          if Error_Posted (Id) then\n             Set_Etype (Id, T);\n-            Set_Ekind (Id, E_Variable);\n+            Mutate_Ekind (Id, E_Variable);\n             goto Leave;\n          end if;\n       end if;\n@@ -4371,7 +4371,7 @@ package body Sem_Ch3 is\n            and then In_Subrange_Of (Etype (Entity (E)), T)\n          then\n             Set_Is_Known_Valid (Id);\n-            Set_Ekind (Id, E_Constant);\n+            Mutate_Ekind (Id, E_Constant);\n             Set_Actual_Subtype (Id, Etype (Entity (E)));\n          end if;\n \n@@ -4587,9 +4587,9 @@ package body Sem_Ch3 is\n \n             elsif Is_Unchecked_Union (T) then\n                if Constant_Present (N) or else Nkind (E) = N_Function_Call then\n-                  Set_Ekind (Id, E_Constant);\n+                  Mutate_Ekind (Id, E_Constant);\n                else\n-                  Set_Ekind (Id, E_Variable);\n+                  Mutate_Ekind (Id, E_Variable);\n                end if;\n \n                --  If the expression is an aggregate it contains the required\n@@ -4770,11 +4770,11 @@ package body Sem_Ch3 is\n       end if;\n \n       if Constant_Present (N) then\n-         Set_Ekind            (Id, E_Constant);\n+         Mutate_Ekind         (Id, E_Constant);\n          Set_Is_True_Constant (Id);\n \n       else\n-         Set_Ekind (Id, E_Variable);\n+         Mutate_Ekind (Id, E_Variable);\n \n          --  A variable is set as shared passive if it appears in a shared\n          --  passive package, and is at the outer level. This is not done for\n@@ -5102,7 +5102,7 @@ package body Sem_Ch3 is\n       Parent_Base := Base_Type (Parent_Type);\n \n       if Parent_Type = Any_Type or else Etype (Parent_Type) = Any_Type then\n-         Set_Ekind (T, Ekind (Parent_Type));\n+         Mutate_Ekind (T, Ekind (Parent_Type));\n          Set_Etype (T, Any_Type);\n          goto Leave;\n \n@@ -5121,7 +5121,7 @@ package body Sem_Ch3 is\n             & \"tagged type (RM 3.9.1 (3/1))\", N);\n \n          Set_Etype              (T, Any_Type);\n-         Set_Ekind              (T, E_Limited_Private_Type);\n+         Mutate_Ekind           (T, E_Limited_Private_Type);\n          Set_Private_Dependents (T, New_Elmt_List);\n          Set_Error_Posted       (T);\n          goto Leave;\n@@ -5147,7 +5147,7 @@ package body Sem_Ch3 is\n \n       Set_Is_Pure          (T, Is_Pure (Current_Scope));\n       Set_Scope            (T, Current_Scope);\n-      Set_Ekind            (T, E_Record_Type_With_Private);\n+      Mutate_Ekind         (T, E_Record_Type_With_Private);\n       Init_Size_Align      (T);\n       Set_Default_SSO      (T);\n       Set_No_Reordering    (T, No_Component_Reordering);\n@@ -5392,7 +5392,7 @@ package body Sem_Ch3 is\n          --  (no aspects to examine on the generated declaration).\n \n          if not Comes_From_Source (N) then\n-            Set_Ekind (Id, Ekind (T));\n+            Mutate_Ekind (Id, Ekind (T));\n \n             if Present (Predicate_Function (Id)) then\n                null;\n@@ -5418,11 +5418,11 @@ package body Sem_Ch3 is\n \n          case Ekind (T) is\n             when Array_Kind =>\n-               Set_Ekind                     (Id, E_Array_Subtype);\n+               Mutate_Ekind                  (Id, E_Array_Subtype);\n                Copy_Array_Subtype_Attributes (Id, T);\n \n             when Decimal_Fixed_Point_Kind =>\n-               Set_Ekind                (Id, E_Decimal_Fixed_Point_Subtype);\n+               Mutate_Ekind             (Id, E_Decimal_Fixed_Point_Subtype);\n                Set_Digits_Value         (Id, Digits_Value       (T));\n                Set_Delta_Value          (Id, Delta_Value        (T));\n                Set_Scale_Value          (Id, Scale_Value        (T));\n@@ -5434,7 +5434,7 @@ package body Sem_Ch3 is\n                Set_RM_Size              (Id, RM_Size            (T));\n \n             when Enumeration_Kind =>\n-               Set_Ekind                (Id, E_Enumeration_Subtype);\n+               Mutate_Ekind             (Id, E_Enumeration_Subtype);\n                Set_First_Literal        (Id, First_Literal (Base_Type (T)));\n                Set_Scalar_Range         (Id, Scalar_Range       (T));\n                Set_Is_Character_Type    (Id, Is_Character_Type  (T));\n@@ -5443,7 +5443,7 @@ package body Sem_Ch3 is\n                Set_RM_Size              (Id, RM_Size            (T));\n \n             when Ordinary_Fixed_Point_Kind =>\n-               Set_Ekind                (Id, E_Ordinary_Fixed_Point_Subtype);\n+               Mutate_Ekind          (Id, E_Ordinary_Fixed_Point_Subtype);\n                Set_Scalar_Range         (Id, Scalar_Range       (T));\n                Set_Small_Value          (Id, Small_Value        (T));\n                Set_Delta_Value          (Id, Delta_Value        (T));\n@@ -5452,7 +5452,7 @@ package body Sem_Ch3 is\n                Set_RM_Size              (Id, RM_Size            (T));\n \n             when Float_Kind =>\n-               Set_Ekind                (Id, E_Floating_Point_Subtype);\n+               Mutate_Ekind             (Id, E_Floating_Point_Subtype);\n                Set_Scalar_Range         (Id, Scalar_Range       (T));\n                Set_Digits_Value         (Id, Digits_Value       (T));\n                Set_Is_Constrained       (Id, Is_Constrained     (T));\n@@ -5461,21 +5461,21 @@ package body Sem_Ch3 is\n                --  inherited subsequently when Analyze_Dimensions is called.\n \n             when Signed_Integer_Kind =>\n-               Set_Ekind                (Id, E_Signed_Integer_Subtype);\n+               Mutate_Ekind             (Id, E_Signed_Integer_Subtype);\n                Set_Scalar_Range         (Id, Scalar_Range       (T));\n                Set_Is_Constrained       (Id, Is_Constrained     (T));\n                Set_Is_Known_Valid       (Id, Is_Known_Valid     (T));\n                Set_RM_Size              (Id, RM_Size            (T));\n \n             when Modular_Integer_Kind =>\n-               Set_Ekind                (Id, E_Modular_Integer_Subtype);\n+               Mutate_Ekind             (Id, E_Modular_Integer_Subtype);\n                Set_Scalar_Range         (Id, Scalar_Range       (T));\n                Set_Is_Constrained       (Id, Is_Constrained     (T));\n                Set_Is_Known_Valid       (Id, Is_Known_Valid     (T));\n                Set_RM_Size              (Id, RM_Size            (T));\n \n             when Class_Wide_Kind =>\n-               Set_Ekind                (Id, E_Class_Wide_Subtype);\n+               Mutate_Ekind             (Id, E_Class_Wide_Subtype);\n                Set_Class_Wide_Type      (Id, Class_Wide_Type    (T));\n                Set_Cloned_Subtype       (Id, T);\n                Set_Is_Tagged_Type       (Id, True);\n@@ -5492,7 +5492,7 @@ package body Sem_Ch3 is\n             when E_Record_Subtype\n                | E_Record_Type\n             =>\n-               Set_Ekind                (Id, E_Record_Subtype);\n+               Mutate_Ekind             (Id, E_Record_Subtype);\n \n                --  Subtype declarations introduced for formal type parameters\n                --  in generic instantiations should inherit the Size value of\n@@ -5545,7 +5545,7 @@ package body Sem_Ch3 is\n                end if;\n \n             when Private_Kind =>\n-               Set_Ekind              (Id, Subtype_Kind (Ekind        (T)));\n+               Mutate_Ekind           (Id, Subtype_Kind (Ekind        (T)));\n                Set_Has_Discriminants  (Id, Has_Discriminants          (T));\n                Set_Is_Constrained     (Id, Is_Constrained             (T));\n                Set_First_Entity       (Id, First_Entity               (T));\n@@ -5610,7 +5610,7 @@ package body Sem_Ch3 is\n                end if;\n \n             when Access_Kind =>\n-               Set_Ekind             (Id, E_Access_Subtype);\n+               Mutate_Ekind          (Id, E_Access_Subtype);\n                Set_Is_Constrained    (Id, Is_Constrained        (T));\n                Set_Is_Access_Constant\n                                      (Id, Is_Access_Constant    (T));\n@@ -5633,7 +5633,7 @@ package body Sem_Ch3 is\n                end if;\n \n             when Concurrent_Kind =>\n-               Set_Ekind                (Id, Subtype_Kind (Ekind   (T)));\n+               Mutate_Ekind             (Id, Subtype_Kind (Ekind   (T)));\n                Set_Corresponding_Record_Type (Id,\n                                          Corresponding_Record_Type (T));\n                Set_First_Entity         (Id, First_Entity          (T));\n@@ -5661,7 +5661,7 @@ package body Sem_Ch3 is\n                   --  propagate indication. Note that we also have to include\n                   --  subtypes for Ada 2012 extended use of incomplete types.\n \n-                  Set_Ekind              (Id, E_Incomplete_Subtype);\n+                  Mutate_Ekind           (Id, E_Incomplete_Subtype);\n                   Set_Is_Tagged_Type     (Id, Is_Tagged_Type (T));\n                   Set_Private_Dependents (Id, New_Elmt_List);\n \n@@ -6197,7 +6197,7 @@ package body Sem_Ch3 is\n \n          --  The constrained array type is a subtype of the unconstrained one\n \n-         Set_Ekind              (T, E_Array_Subtype);\n+         Mutate_Ekind           (T, E_Array_Subtype);\n          Init_Size_Align        (T);\n          Set_Etype              (T, Implicit_Base);\n          Set_Scope              (T, Current_Scope);\n@@ -6233,7 +6233,7 @@ package body Sem_Ch3 is\n             pragma Assert (Ekind (T) = E_Void);\n          end if;\n \n-         Set_Ekind                    (T, E_Array_Type);\n+         Mutate_Ekind                 (T, E_Array_Type);\n          Init_Size_Align              (T);\n          Set_Etype                    (T, T);\n          Set_Scope                    (T, Current_Scope);\n@@ -6506,7 +6506,7 @@ package body Sem_Ch3 is\n          Scope_Stack.Append (Curr_Scope);\n       end if;\n \n-      Set_Ekind (Anon, E_Anonymous_Access_Protected_Subprogram_Type);\n+      Mutate_Ekind (Anon, E_Anonymous_Access_Protected_Subprogram_Type);\n       Set_Can_Use_Internal_Rep (Anon, not Always_Compatible_Rep_On_Target);\n       return Anon;\n    end Replace_Anonymous_Access_To_Protected_Subprogram;\n@@ -6679,7 +6679,7 @@ package body Sem_Ch3 is\n       if Nkind (S) /= N_Subtype_Indication\n         and then Subt /= Base_Type (Subt)\n       then\n-         Set_Ekind (Derived_Type, E_Access_Subtype);\n+         Mutate_Ekind (Derived_Type, E_Access_Subtype);\n       end if;\n \n       if Ekind (Derived_Type) = E_Access_Subtype then\n@@ -6794,7 +6794,7 @@ package body Sem_Ch3 is\n          Implicit_Base :=\n            Create_Itype (Ekind (Parent_Base), N, Derived_Type, 'B');\n \n-         Set_Ekind (Implicit_Base, Ekind (Parent_Base));\n+         Mutate_Ekind (Implicit_Base, Ekind (Parent_Base));\n          Set_Etype (Implicit_Base, Parent_Base);\n \n          Copy_Array_Subtype_Attributes   (Implicit_Base, Parent_Base);\n@@ -6808,7 +6808,7 @@ package body Sem_Ch3 is\n    begin\n       if not Is_Constrained (Parent_Type) then\n          if Nkind (Indic) /= N_Subtype_Indication then\n-            Set_Ekind (Derived_Type, E_Array_Type);\n+            Mutate_Ekind (Derived_Type, E_Array_Type);\n \n             Copy_Array_Subtype_Attributes   (Derived_Type, Parent_Type);\n             Copy_Array_Base_Type_Attributes (Derived_Type, Parent_Type);\n@@ -6835,7 +6835,7 @@ package body Sem_Ch3 is\n          if Nkind (Indic) /= N_Subtype_Indication then\n             Make_Implicit_Base;\n \n-            Set_Ekind                     (Derived_Type, Ekind (Parent_Type));\n+            Mutate_Ekind               (Derived_Type, Ekind (Parent_Type));\n             Set_Etype                     (Derived_Type, Implicit_Base);\n             Copy_Array_Subtype_Attributes (Derived_Type, Parent_Type);\n \n@@ -7295,7 +7295,7 @@ package body Sem_Ch3 is\n                New_Lit := Make_Defining_Identifier (Loc, Chars (Literal));\n             end if;\n \n-            Set_Ekind                (New_Lit, E_Enumeration_Literal);\n+            Mutate_Ekind             (New_Lit, E_Enumeration_Literal);\n             Set_Enumeration_Pos      (New_Lit, Enumeration_Pos (Literal));\n             Set_Enumeration_Rep      (New_Lit, Enumeration_Rep (Literal));\n             Set_Enumeration_Rep_Expr (New_Lit, Empty);\n@@ -7315,7 +7315,7 @@ package body Sem_Ch3 is\n          --  may be hidden by a previous explicit function definition (cf.\n          --  c83031a).\n \n-         Set_Ekind (Derived_Type, E_Enumeration_Subtype);\n+         Mutate_Ekind (Derived_Type, E_Enumeration_Subtype);\n          Set_Etype (Derived_Type, Implicit_Base);\n \n          Type_Decl :=\n@@ -7487,7 +7487,7 @@ package body Sem_Ch3 is\n         Create_Itype (Ekind (Parent_Base), N, Derived_Type, 'B');\n \n       Set_Etype          (Implicit_Base, Parent_Base);\n-      Set_Ekind          (Implicit_Base, Ekind          (Parent_Base));\n+      Mutate_Ekind       (Implicit_Base, Ekind          (Parent_Base));\n       Set_Size_Info      (Implicit_Base,                 Parent_Base);\n       Set_First_Rep_Item (Implicit_Base, First_Rep_Item (Parent_Base));\n       Set_Parent         (Implicit_Base, Parent (Derived_Type));\n@@ -7527,7 +7527,7 @@ package body Sem_Ch3 is\n       --  parent type (otherwise Process_Subtype has set the bounds)\n \n       if No_Constraint then\n-         Set_Ekind (Derived_Type, Subtype_Kind (Ekind (Parent_Type)));\n+         Mutate_Ekind (Derived_Type, Subtype_Kind (Ekind (Parent_Type)));\n       end if;\n \n       --  If we did not have a range constraint, then set the range from the\n@@ -7956,7 +7956,7 @@ package body Sem_Ch3 is\n                --  prevent spurious errors associated with missing overriding\n                --  of abstract primitives (overridden only for Derived_Type).\n \n-               Set_Ekind (Full_Der, E_Record_Type);\n+               Mutate_Ekind (Full_Der, E_Record_Type);\n                Set_Is_Underlying_Record_View (Full_Der);\n                Set_Default_SSO (Full_Der);\n                Set_No_Reordering (Full_Der, No_Component_Reordering);\n@@ -8856,7 +8856,7 @@ package body Sem_Ch3 is\n \n       if Private_Extension then\n          Type_Def := N;\n-         Set_Ekind (Derived_Type, E_Record_Type_With_Private);\n+         Mutate_Ekind (Derived_Type, E_Record_Type_With_Private);\n          Set_Default_SSO (Derived_Type);\n          Set_No_Reordering (Derived_Type, No_Component_Reordering);\n \n@@ -8871,7 +8871,7 @@ package body Sem_Ch3 is\n          --  For untagged types we preserve the Ekind of the Parent_Base.\n \n          if Present (Record_Extension_Part (Type_Def)) then\n-            Set_Ekind (Derived_Type, E_Record_Type);\n+            Mutate_Ekind (Derived_Type, E_Record_Type);\n             Set_Default_SSO (Derived_Type);\n             Set_No_Reordering (Derived_Type, No_Component_Reordering);\n \n@@ -8885,7 +8885,7 @@ package body Sem_Ch3 is\n             end if;\n \n          else\n-            Set_Ekind (Derived_Type, Ekind (Parent_Base));\n+            Mutate_Ekind (Derived_Type, Ekind (Parent_Base));\n          end if;\n       end if;\n \n@@ -9744,7 +9744,7 @@ package body Sem_Ch3 is\n \n       Set_Scope                  (Derived_Type, Current_Scope);\n       Set_Etype                  (Derived_Type,        Parent_Base);\n-      Set_Ekind                  (Derived_Type, Ekind (Parent_Base));\n+      Mutate_Ekind               (Derived_Type, Ekind (Parent_Base));\n       Propagate_Concurrent_Flags (Derived_Type,        Parent_Base);\n \n       Set_Size_Info (Derived_Type,          Parent_Type);\n@@ -9963,7 +9963,7 @@ package body Sem_Ch3 is\n \n       D_Minal := Make_Defining_Identifier (Sloc (Discrim), Chars (Discrim));\n \n-      Set_Ekind     (D_Minal, E_In_Parameter);\n+      Mutate_Ekind  (D_Minal, E_In_Parameter);\n       Set_Mechanism (D_Minal, Default_Mechanism);\n       Set_Etype     (D_Minal, Etype (Discrim));\n       Set_Scope     (D_Minal, Current_Scope);\n@@ -9982,7 +9982,7 @@ package body Sem_Ch3 is\n       then\n          CR_Disc := Make_Defining_Identifier (Sloc (Discrim), Chars (Discrim));\n \n-         Set_Ekind            (CR_Disc, E_In_Parameter);\n+         Mutate_Ekind         (CR_Disc, E_In_Parameter);\n          Set_Mechanism        (CR_Disc, Default_Mechanism);\n          Set_Etype            (CR_Disc, Etype (Discrim));\n          Set_Scope            (CR_Disc, Current_Scope);\n@@ -10373,7 +10373,7 @@ package body Sem_Ch3 is\n \n    begin\n       if Ekind (T) = E_Record_Type then\n-         Set_Ekind (Def_Id, E_Record_Subtype);\n+         Mutate_Ekind (Def_Id, E_Record_Subtype);\n \n          --  Inherit preelaboration flag from base, for types for which it\n          --  may have been set: records, private types, protected types.\n@@ -10382,15 +10382,15 @@ package body Sem_Ch3 is\n            (Def_Id, Known_To_Have_Preelab_Init (T));\n \n       elsif Ekind (T) = E_Task_Type then\n-         Set_Ekind (Def_Id, E_Task_Subtype);\n+         Mutate_Ekind (Def_Id, E_Task_Subtype);\n \n       elsif Ekind (T) = E_Protected_Type then\n-         Set_Ekind (Def_Id, E_Protected_Subtype);\n+         Mutate_Ekind (Def_Id, E_Protected_Subtype);\n          Set_Known_To_Have_Preelab_Init\n            (Def_Id, Known_To_Have_Preelab_Init (T));\n \n       elsif Is_Private_Type (T) then\n-         Set_Ekind (Def_Id, Subtype_Kind (Ekind (T)));\n+         Mutate_Ekind (Def_Id, Subtype_Kind (Ekind (T)));\n          Set_Known_To_Have_Preelab_Init\n            (Def_Id, Known_To_Have_Preelab_Init (T));\n \n@@ -10399,7 +10399,7 @@ package body Sem_Ch3 is\n          Set_Private_Dependents (Def_Id, New_Elmt_List);\n \n       elsif Is_Class_Wide_Type (T) then\n-         Set_Ekind (Def_Id, E_Class_Wide_Subtype);\n+         Mutate_Ekind (Def_Id, E_Class_Wide_Subtype);\n \n       else\n          --  Incomplete type. Attach subtype to list of dependents, to be\n@@ -10412,9 +10412,9 @@ package body Sem_Ch3 is\n          --  initialization procedure.\n \n          if Ekind (T) = E_Incomplete_Type then\n-            Set_Ekind (Def_Id, E_Incomplete_Subtype);\n+            Mutate_Ekind (Def_Id, E_Incomplete_Subtype);\n          else\n-            Set_Ekind (Def_Id, Ekind (T));\n+            Mutate_Ekind (Def_Id, Ekind (T));\n          end if;\n \n          if For_Access and then Within_Init_Proc then\n@@ -11533,9 +11533,9 @@ package body Sem_Ch3 is\n          end if;\n \n          if Ekind (Designated_Type (Anon_Access)) = E_Subprogram_Type then\n-            Set_Ekind (Anon_Access, E_Anonymous_Access_Subprogram_Type);\n+            Mutate_Ekind (Anon_Access, E_Anonymous_Access_Subprogram_Type);\n          else\n-            Set_Ekind (Anon_Access, E_Anonymous_Access_Type);\n+            Mutate_Ekind (Anon_Access, E_Anonymous_Access_Type);\n          end if;\n \n          Set_Is_Local_Anonymous_Access (Anon_Access);\n@@ -12529,7 +12529,7 @@ package body Sem_Ch3 is\n \n       --  Set common attributes for all subtypes: kind, convention, etc.\n \n-      Set_Ekind            (Full, Subtype_Kind (Ekind (Full_Base)));\n+      Mutate_Ekind         (Full, Subtype_Kind (Ekind (Full_Base)));\n       Set_Convention       (Full, Convention (Full_Base));\n       Set_Is_First_Subtype (Full, False);\n       Set_Scope            (Full, Scope (Priv));\n@@ -13085,7 +13085,7 @@ package body Sem_Ch3 is\n             Desig_Subtype :=\n               Create_Itype\n                 (E_Void, Related_Nod, Scope_Id => Scope (Desig_Type));\n-            Set_Ekind (Desig_Subtype, E_Record_Subtype);\n+            Mutate_Ekind (Desig_Subtype, E_Record_Subtype);\n             Def_Id := Entity (Subtype_Mark (S));\n \n             --  We indicate that the component has a per-object constraint\n@@ -13182,7 +13182,7 @@ package body Sem_Ch3 is\n       if No (Def_Id) then\n          Def_Id := Create_Itype (E_Access_Subtype, Related_Nod);\n       else\n-         Set_Ekind (Def_Id, E_Access_Subtype);\n+         Mutate_Ekind (Def_Id, E_Access_Subtype);\n       end if;\n \n       if Constraint_OK then\n@@ -13316,7 +13316,7 @@ package body Sem_Ch3 is\n          Set_Parent (Def_Id, Related_Nod);\n \n       else\n-         Set_Ekind (Def_Id, E_Array_Subtype);\n+         Mutate_Ekind (Def_Id, E_Array_Subtype);\n       end if;\n \n       Set_Size_Info      (Def_Id,                (T));\n@@ -13879,7 +13879,7 @@ package body Sem_Ch3 is\n       Bound_Val   : Ureal;\n \n    begin\n-      Set_Ekind (Def_Id, E_Decimal_Fixed_Point_Subtype);\n+      Mutate_Ekind (Def_Id, E_Decimal_Fixed_Point_Subtype);\n \n       if Nkind (C) = N_Range_Constraint then\n          Range_Expr := Range_Expression (C);\n@@ -13963,7 +13963,7 @@ package body Sem_Ch3 is\n       begin\n          --  Set a reasonable Ekind for the entity, including incomplete types.\n \n-         Set_Ekind (Def_Id, Subtype_Kind (Ekind (T)));\n+         Mutate_Ekind (Def_Id, Subtype_Kind (Ekind (T)));\n \n          --  Set Etype to the known type, to reduce chances of cascaded errors\n \n@@ -14089,7 +14089,7 @@ package body Sem_Ch3 is\n       C : constant Node_Id   := Constraint (S);\n \n    begin\n-      Set_Ekind (Def_Id, E_Enumeration_Subtype);\n+      Mutate_Ekind (Def_Id, E_Enumeration_Subtype);\n \n       Set_First_Literal     (Def_Id, First_Literal (Base_Type (T)));\n \n@@ -14114,7 +14114,7 @@ package body Sem_Ch3 is\n       Rais : Node_Id;\n \n    begin\n-      Set_Ekind (Def_Id, E_Floating_Point_Subtype);\n+      Mutate_Ekind (Def_Id, E_Floating_Point_Subtype);\n \n       Set_Etype          (Def_Id, Base_Type      (T));\n       Set_Size_Info      (Def_Id,                (T));\n@@ -14289,13 +14289,13 @@ package body Sem_Ch3 is\n       --  Complete construction of the Itype\n \n       if Is_Modular_Integer_Type (T) then\n-         Set_Ekind (Def_Id, E_Modular_Integer_Subtype);\n+         Mutate_Ekind (Def_Id, E_Modular_Integer_Subtype);\n \n       elsif Is_Integer_Type (T) then\n-         Set_Ekind (Def_Id, E_Signed_Integer_Subtype);\n+         Mutate_Ekind (Def_Id, E_Signed_Integer_Subtype);\n \n       else\n-         Set_Ekind (Def_Id, E_Enumeration_Subtype);\n+         Mutate_Ekind (Def_Id, E_Enumeration_Subtype);\n          Set_Is_Character_Type (Def_Id, Is_Character_Type (T));\n          Set_First_Literal     (Def_Id, First_Literal (T));\n       end if;\n@@ -14322,9 +14322,9 @@ package body Sem_Ch3 is\n       Set_Scalar_Range_For_Subtype (Def_Id, Range_Expression (C), T);\n \n       if Is_Modular_Integer_Type (T) then\n-         Set_Ekind (Def_Id, E_Modular_Integer_Subtype);\n+         Mutate_Ekind (Def_Id, E_Modular_Integer_Subtype);\n       else\n-         Set_Ekind (Def_Id, E_Signed_Integer_Subtype);\n+         Mutate_Ekind (Def_Id, E_Signed_Integer_Subtype);\n       end if;\n \n       Set_Etype            (Def_Id, Base_Type      (T));\n@@ -14344,7 +14344,7 @@ package body Sem_Ch3 is\n       Rais : Node_Id;\n \n    begin\n-      Set_Ekind          (Def_Id, E_Ordinary_Fixed_Point_Subtype);\n+      Mutate_Ekind       (Def_Id, E_Ordinary_Fixed_Point_Subtype);\n       Set_Etype          (Def_Id, Base_Type      (T));\n       Set_Size_Info      (Def_Id,                (T));\n       Set_First_Rep_Item (Def_Id, First_Rep_Item (T));\n@@ -14521,7 +14521,7 @@ package body Sem_Ch3 is\n       --  appropriate choice, since it allowed the attributes to be set\n       --  in the first place. This Ekind value will be modified later.\n \n-      Set_Ekind (Full, Ekind (Priv));\n+      Mutate_Ekind (Full, Ekind (Priv));\n \n       --  Also set Etype temporarily to Any_Type, again, in the absence\n       --  of errors, it will be properly reset, and if there are errors,\n@@ -15143,7 +15143,7 @@ package body Sem_Ch3 is\n       --  chain ensures that SPARK-related pragmas are not clobbered when the\n       --  decimal fixed point type acts as a full view of a private type.\n \n-      Set_Ekind              (T, E_Decimal_Fixed_Point_Subtype);\n+      Mutate_Ekind           (T, E_Decimal_Fixed_Point_Subtype);\n       Set_Etype              (T, Implicit_Base);\n       Set_Size_Info          (T, Implicit_Base);\n       Inherit_Rep_Item_Chain (T, Implicit_Base);\n@@ -15535,7 +15535,7 @@ package body Sem_Ch3 is\n \n    begin\n       New_Subp := New_Entity (Nkind (Parent_Subp), Sloc (Derived_Type));\n-      Set_Ekind (New_Subp, Ekind (Parent_Subp));\n+      Mutate_Ekind (New_Subp, Ekind (Parent_Subp));\n \n       --  Check whether the inherited subprogram is a private operation that\n       --  should be inherited but not yet made visible. Such subprograms can\n@@ -16597,7 +16597,7 @@ package body Sem_Ch3 is\n \n       Conditional_Delay (Derived_Type, Parent_Type);\n \n-      Set_Ekind (Derived_Type, E_Enumeration_Subtype);\n+      Mutate_Ekind (Derived_Type, E_Enumeration_Subtype);\n       Set_Etype (Derived_Type, Implicit_Base);\n       Set_Size_Info         (Derived_Type, Parent_Type);\n \n@@ -16846,7 +16846,7 @@ package body Sem_Ch3 is\n             Error_Msg_N (\"type cannot be used in its own definition\", Indic);\n          end if;\n \n-         Set_Ekind        (T, Ekind (Parent_Type));\n+         Mutate_Ekind     (T, Ekind (Parent_Type));\n          Set_Etype        (T, Any_Type);\n          Set_Scalar_Range (T, Scalar_Range (Any_Type));\n \n@@ -17187,7 +17187,7 @@ package body Sem_Ch3 is\n       R_Node := New_Node (N_Range, Sloc (Def));\n       Set_Low_Bound  (R_Node, B_Node);\n \n-      Set_Ekind (T, E_Enumeration_Type);\n+      Mutate_Ekind (T, E_Enumeration_Type);\n       Set_First_Literal (T, L);\n       Set_Etype (T, T);\n       Set_Is_Constrained (T);\n@@ -17201,7 +17201,7 @@ package body Sem_Ch3 is\n \n       while Present (L) loop\n          if Ekind (L) /= E_Enumeration_Literal then\n-            Set_Ekind (L, E_Enumeration_Literal);\n+            Mutate_Ekind (L, E_Enumeration_Literal);\n             Set_Enumeration_Pos (L, Ev);\n             Set_Enumeration_Rep (L, Ev);\n             Set_Is_Known_Valid  (L, True);\n@@ -17578,7 +17578,7 @@ package body Sem_Ch3 is\n             if Is_Tagged_Type (Prev)\n               and then Present (Class_Wide_Type (Prev))\n             then\n-               Set_Ekind (Id, Ekind (Prev));         --  will be reset later\n+               Mutate_Ekind (Id, Ekind (Prev));         --  will be reset later\n                Set_Class_Wide_Type (Id, Class_Wide_Type (Prev));\n \n                --  Type of the class-wide type is the current Id. Previously\n@@ -17872,7 +17872,7 @@ package body Sem_Ch3 is\n                    Subtype_Indication  => Relocate_Node (Obj_Def));\n             begin\n                Set_Etype  (T, Base_T);\n-               Set_Ekind  (T, Subtype_Kind (Ekind (Base_T)));\n+               Mutate_Ekind  (T, Subtype_Kind (Ekind (Base_T)));\n                Set_Parent (T, Obj_Def);\n \n                if Ekind (T) = E_Array_Subtype then\n@@ -18174,7 +18174,7 @@ package body Sem_Ch3 is\n       Set_Digits_Value       (Implicit_Base, Digits_Value   (Base_Typ));\n       Set_Float_Rep          (Implicit_Base, Float_Rep      (Base_Typ));\n \n-      Set_Ekind              (T, E_Floating_Point_Subtype);\n+      Mutate_Ekind           (T, E_Floating_Point_Subtype);\n       Set_Etype              (T,          Implicit_Base);\n       Set_Size_Info          (T,          Implicit_Base);\n       Set_RM_Size            (T, RM_Size (Implicit_Base));\n@@ -18661,7 +18661,7 @@ package body Sem_Ch3 is\n          if Is_Tagged and then Ekind (New_C) = E_Component\n            and then Nkind (N) /= N_Private_Extension_Declaration\n          then\n-            Set_Ekind (New_C, E_Void);\n+            Mutate_Ekind (New_C, E_Void);\n          end if;\n \n          if Plain_Discrim then\n@@ -19230,7 +19230,7 @@ package body Sem_Ch3 is\n          Reinit_Field_To_Zero (CW_Type, SPARK_Aux_Pragma_Inherited);\n       end if;\n \n-      Set_Ekind                       (CW_Type, E_Class_Wide_Type);\n+      Mutate_Ekind                    (CW_Type, E_Class_Wide_Type);\n       Set_Is_Tagged_Type              (CW_Type, True);\n       Set_Direct_Primitive_Operations (CW_Type, New_Elmt_List);\n       Set_Is_Abstract_Type            (CW_Type, False);\n@@ -19508,13 +19508,13 @@ package body Sem_Ch3 is\n          Set_Etype (Def_Id, Base_Type (T));\n \n          if Is_Signed_Integer_Type (T) then\n-            Set_Ekind (Def_Id, E_Signed_Integer_Subtype);\n+            Mutate_Ekind (Def_Id, E_Signed_Integer_Subtype);\n \n          elsif Is_Modular_Integer_Type (T) then\n-            Set_Ekind (Def_Id, E_Modular_Integer_Subtype);\n+            Mutate_Ekind (Def_Id, E_Modular_Integer_Subtype);\n \n          else\n-            Set_Ekind             (Def_Id, E_Enumeration_Subtype);\n+            Mutate_Ekind          (Def_Id, E_Enumeration_Subtype);\n             Set_Is_Character_Type (Def_Id, Is_Character_Type (T));\n             Set_First_Literal     (Def_Id, First_Literal (T));\n          end if;\n@@ -19612,7 +19612,7 @@ package body Sem_Ch3 is\n \n       Analyze_And_Resolve (Mod_Expr, Any_Integer);\n       Set_Etype (T, T);\n-      Set_Ekind (T, E_Modular_Integer_Type);\n+      Mutate_Ekind (T, E_Modular_Integer_Type);\n       Init_Alignment (T);\n       Set_Is_Constrained (T);\n \n@@ -19726,7 +19726,7 @@ package body Sem_Ch3 is\n    begin\n       Op := Make_Defining_Operator_Symbol (Loc, Name_Op_Concat);\n \n-      Set_Ekind                   (Op, E_Operator);\n+      Mutate_Ekind                (Op, E_Operator);\n       Set_Scope                   (Op, Current_Scope);\n       Set_Etype                   (Op, Typ);\n       Set_Homonym                 (Op, Get_Name_Entity_Id (Name_Op_Concat));\n@@ -20012,7 +20012,7 @@ package body Sem_Ch3 is\n       --  chain ensures that SPARK-related pragmas are not clobbered when the\n       --  ordinary fixed point type acts as a full view of a private type.\n \n-      Set_Ekind              (T, E_Ordinary_Fixed_Point_Subtype);\n+      Mutate_Ekind           (T, E_Ordinary_Fixed_Point_Subtype);\n       Set_Etype              (T, Implicit_Base);\n       Init_Size_Align        (T);\n       Inherit_Rep_Item_Chain (T, Implicit_Base);\n@@ -20415,7 +20415,7 @@ package body Sem_Ch3 is\n             Reinit_Field_To_Zero (Id, Discriminal_Link);\n          end if;\n \n-         Set_Ekind (Id, E_Discriminant);\n+         Mutate_Ekind (Id, E_Discriminant);\n          Init_Component_Location (Id);\n          Init_Esize (Id);\n          Set_Discriminant_Number (Id, Discr_Number);\n@@ -21302,7 +21302,7 @@ package body Sem_Ch3 is\n             Reinit_Field_To_Zero\n               (Priv_Dep, Private_Dependents,\n                Old_Ekind => E_Incomplete_Subtype);\n-            Set_Ekind (Priv_Dep, Subtype_Kind (Ekind (Full_T)));\n+            Mutate_Ekind (Priv_Dep, Subtype_Kind (Ekind (Full_T)));\n             Set_Etype (Priv_Dep, Full_T);\n             Set_Analyzed (Parent (Priv_Dep), False);\n \n@@ -21877,7 +21877,7 @@ package body Sem_Ch3 is\n             --  Set Ekind of orphan itype, to prevent cascaded errors\n \n             if Present (Def_Id) then\n-               Set_Ekind (Def_Id, Ekind (Any_Type));\n+               Mutate_Ekind (Def_Id, Ekind (Any_Type));\n             end if;\n \n             --  Make recursive call, having got rid of the bogus constraint\n@@ -22068,7 +22068,7 @@ package body Sem_Ch3 is\n       --  These flags must be initialized before calling Process_Discriminants\n       --  because this routine makes use of them.\n \n-      Set_Ekind             (T, E_Record_Type);\n+      Mutate_Ekind          (T, E_Record_Type);\n       Set_Etype             (T, T);\n       Init_Size_Align       (T);\n       Set_Interfaces        (T, No_Elist);\n@@ -22172,7 +22172,7 @@ package body Sem_Ch3 is\n             Tag_Comp := Make_Defining_Identifier (Sloc (Def), Name_uTag);\n             Enter_Name (Tag_Comp);\n \n-            Set_Ekind                     (Tag_Comp, E_Component);\n+            Mutate_Ekind                  (Tag_Comp, E_Component);\n             Set_Is_Tag                    (Tag_Comp);\n             Set_Is_Aliased                (Tag_Comp);\n             Set_Is_Independent            (Tag_Comp);\n@@ -22282,7 +22282,7 @@ package body Sem_Ch3 is\n          if Ekind (Component) = E_Void\n            and then not Is_Itype (Component)\n          then\n-            Set_Ekind (Component, E_Component);\n+            Mutate_Ekind (Component, E_Component);\n             Init_Component_Location (Component);\n          end if;\n \n@@ -22503,9 +22503,9 @@ package body Sem_Ch3 is\n       --  Reset the kind of the subtype during analysis of the range, to\n       --  catch possible premature use in the bounds themselves.\n \n-      Set_Ekind (Def_Id, E_Void);\n+      Mutate_Ekind (Def_Id, E_Void);\n       Process_Range_Expr_In_Decl (R, Subt, Subtyp => Def_Id);\n-      Set_Ekind (Def_Id, Kind);\n+      Mutate_Ekind (Def_Id, Kind);\n    end Set_Scalar_Range_For_Subtype;\n \n    --------------------------------------------------------\n@@ -22681,7 +22681,7 @@ package body Sem_Ch3 is\n       Set_First_Rep_Item (Implicit_Base, First_Rep_Item (Base_Typ));\n       Set_Scalar_Range   (Implicit_Base, Scalar_Range   (Base_Typ));\n \n-      Set_Ekind              (T, E_Signed_Integer_Subtype);\n+      Mutate_Ekind        (T, E_Signed_Integer_Subtype);\n       Set_Etype              (T, Implicit_Base);\n       Set_Size_Info          (T, Implicit_Base);\n       Inherit_Rep_Item_Chain (T, Implicit_Base);"}, {"sha": "1f55af6c941970dd7d21ea4c83483b3c0e33eff1", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1323,7 +1323,7 @@ package body Sem_Ch5 is\n                   Reinit_Field_To_Zero (Ent, Enclosing_Scope);\n                end if;\n \n-               Set_Ekind (Ent, E_Block);\n+               Mutate_Ekind (Ent, E_Block);\n                Generate_Reference (Ent, N, ' ');\n                Generate_Definition (Ent);\n \n@@ -1970,7 +1970,7 @@ package body Sem_Ch5 is\n       Id : constant Node_Id := Defining_Identifier (N);\n    begin\n       Enter_Name          (Id);\n-      Set_Ekind           (Id, E_Label);\n+      Mutate_Ekind        (Id, E_Label);\n       Set_Etype           (Id, Standard_Void_Type);\n       Set_Enclosing_Scope (Id, Current_Scope);\n    end Analyze_Implicit_Label_Declaration;\n@@ -2164,7 +2164,7 @@ package body Sem_Ch5 is\n       --  Set the kind of the loop variable, which is not visible within the\n       --  iterator name.\n \n-      Set_Ekind (Def_Id, E_Variable);\n+      Mutate_Ekind (Def_Id, E_Variable);\n \n       --  Provide a link between the iterator variable and the container, for\n       --  subsequent use in cross-reference and modification information.\n@@ -2433,7 +2433,7 @@ package body Sem_Ch5 is\n \n             --  Prevent cascaded errors\n \n-            Set_Ekind (Def_Id, E_Loop_Parameter);\n+            Mutate_Ekind (Def_Id, E_Loop_Parameter);\n             Set_Etype (Def_Id, Etype (First_Index (Typ)));\n          end if;\n \n@@ -2445,7 +2445,7 @@ package body Sem_Ch5 is\n       --  Iteration over a container\n \n       else\n-         Set_Ekind (Def_Id, E_Loop_Parameter);\n+         Mutate_Ekind (Def_Id, E_Loop_Parameter);\n          Error_Msg_Ada_2012_Feature (\"container iterator\", Sloc (N));\n \n          --  OF present\n@@ -2498,7 +2498,7 @@ package body Sem_Ch5 is\n                      --  element is a variable and is modifiable in the loop.\n \n                      if Has_Aspect (Typ, Aspect_Variable_Indexing) then\n-                        Set_Ekind (Def_Id, E_Variable);\n+                        Mutate_Ekind (Def_Id, E_Variable);\n                      end if;\n \n                      --  If the container is a constant, iterating over it\n@@ -2669,7 +2669,7 @@ package body Sem_Ch5 is\n \n    procedure Analyze_Label_Entity (E : Entity_Id) is\n    begin\n-      Set_Ekind           (E, E_Label);\n+      Mutate_Ekind        (E, E_Label);\n       Set_Etype           (E, Standard_Void_Type);\n       Set_Enclosing_Scope (E, Current_Scope);\n       Set_Reachable       (E, True);\n@@ -3055,7 +3055,7 @@ package body Sem_Ch5 is\n                --  subsequent analysis of the condition in a quantified\n                --  expression.\n \n-               Set_Ekind (Id, E_Loop_Parameter);\n+               Mutate_Ekind (Id, E_Loop_Parameter);\n                return;\n             end;\n \n@@ -3118,7 +3118,7 @@ package body Sem_Ch5 is\n          Make_Index (DS, N);\n       end if;\n \n-      Set_Ekind (Id, E_Loop_Parameter);\n+      Mutate_Ekind (Id, E_Loop_Parameter);\n \n       --  A quantified expression which appears in a pre- or post-condition may\n       --  be analyzed multiple times. The analysis of the range creates several\n@@ -3746,7 +3746,7 @@ package body Sem_Ch5 is\n               and then Ekind (Homonym (Ent)) = E_Label\n             then\n                Set_Entity (Id, Ent);\n-               Set_Ekind (Ent, E_Loop);\n+               Mutate_Ekind (Ent, E_Loop);\n             end if;\n \n          else\n@@ -3761,7 +3761,7 @@ package body Sem_Ch5 is\n \n             if Ekind (Ent) = E_Label then\n                Reinit_Field_To_Zero (Ent, Enclosing_Scope);\n-               Set_Ekind (Ent, E_Loop);\n+               Mutate_Ekind (Ent, E_Loop);\n \n                if Nkind (Parent (Ent)) = N_Implicit_Label_Declaration then\n                   Set_Label_Construct (Parent (Ent), N);\n@@ -3925,7 +3925,7 @@ package body Sem_Ch5 is\n                if not Of_Present (I_Spec)\n                  or else not Is_Variable (Name (I_Spec))\n                then\n-                  Set_Ekind (Id, E_Loop_Parameter);\n+                  Mutate_Ekind (Id, E_Loop_Parameter);\n                end if;\n             end;\n "}, {"sha": "cbba916782982a03f2dadfaba0c2345f4b135281", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1796,7 +1796,7 @@ package body Sem_Ch6 is\n       end if;\n \n       if Nkind (N) = N_Subprogram_Body_Stub then\n-         Set_Ekind (Defining_Entity (Specification (N)), Kind);\n+         Mutate_Ekind (Defining_Entity (Specification (N)), Kind);\n       else\n          Set_Corresponding_Spec (N, Gen_Id);\n       end if;\n@@ -1847,13 +1847,13 @@ package body Sem_Ch6 is\n \n          --  Visible generic entity is callable within its own body\n \n-         Set_Ekind          (Gen_Id,  Ekind (Body_Id));\n+         Mutate_Ekind       (Gen_Id,  Ekind (Body_Id));\n          Reinit_Field_To_Zero (Body_Id, Has_Out_Or_In_Out_Parameter,\n            Old_Ekind =>\n              (E_Function | E_Procedure |\n                 E_Generic_Function | E_Generic_Procedure => True,\n               others => False));\n-         Set_Ekind          (Body_Id, E_Subprogram_Body);\n+         Mutate_Ekind       (Body_Id, E_Subprogram_Body);\n          Set_Convention     (Body_Id, Convention (Gen_Id));\n          Set_Is_Obsolescent (Body_Id, Is_Obsolescent (Gen_Id));\n          Set_Scope          (Body_Id, Scope (Gen_Id));\n@@ -1864,8 +1864,8 @@ package body Sem_Ch6 is\n \n             --  No body to analyze, so restore state of generic unit\n \n-            Set_Ekind (Gen_Id, Kind);\n-            Set_Ekind (Body_Id, Kind);\n+            Mutate_Ekind (Gen_Id, Kind);\n+            Mutate_Ekind (Body_Id, Kind);\n \n             if Present (First_Ent) then\n                Set_First_Entity (Gen_Id, First_Ent);\n@@ -1931,7 +1931,7 @@ package body Sem_Ch6 is\n \n       Reinit_Field_To_Zero (Gen_Id, Has_Nested_Subprogram,\n         Old_Ekind => (E_Function | E_Procedure => True, others => False));\n-      Set_Ekind (Gen_Id, Kind);\n+      Mutate_Ekind (Gen_Id, Kind);\n       Generate_Reference (Gen_Id, Body_Id, 'b', Set_Ref => False);\n \n       if Style_Check then\n@@ -2026,7 +2026,7 @@ package body Sem_Ch6 is\n \n       if Present (Prev) and then Is_Generic_Subprogram (Prev) then\n          Insert_Before (N, Null_Body);\n-         Set_Ekind (Defining_Entity (N), Ekind (Prev));\n+         Mutate_Ekind (Defining_Entity (N), Ekind (Prev));\n \n          Rewrite (N, Make_Null_Statement (Loc));\n          Analyze_Generic_Subprogram_Body (Null_Body, Prev);\n@@ -4622,7 +4622,7 @@ package body Sem_Ch6 is\n             Reinit_Field_To_Zero (Body_Id, Receiving_Entry);\n          end if;\n \n-         Set_Ekind (Body_Id, E_Subprogram_Body);\n+         Mutate_Ekind (Body_Id, E_Subprogram_Body);\n \n          if Nkind (N) = N_Subprogram_Body_Stub then\n             Set_Corresponding_Spec_Of_Stub (N, Spec_Id);\n@@ -5787,10 +5787,10 @@ package body Sem_Ch6 is\n       end if;\n \n       if Nkind (N) = N_Function_Specification then\n-         Set_Ekind (Designator, E_Function);\n+         Mutate_Ekind (Designator, E_Function);\n          Set_Mechanism (Designator, Default_Mechanism);\n       else\n-         Set_Ekind (Designator, E_Procedure);\n+         Mutate_Ekind (Designator, E_Procedure);\n          Set_Etype (Designator, Standard_Void_Type);\n       end if;\n \n@@ -8796,7 +8796,7 @@ package body Sem_Ch6 is\n             return Empty;\n          end if;\n \n-         Set_Ekind           (EF, E_In_Parameter);\n+         Mutate_Ekind        (EF, E_In_Parameter);\n          Set_Actual_Subtype  (EF, Typ);\n          Set_Etype           (EF, Typ);\n          Set_Scope           (EF, Scope);\n@@ -12984,30 +12984,30 @@ package body Sem_Ch6 is\n                end if;\n \n                if In_Present (Spec) then\n-                  Set_Ekind (Formal_Id, E_In_Out_Parameter);\n+                  Mutate_Ekind (Formal_Id, E_In_Out_Parameter);\n                else\n-                  Set_Ekind (Formal_Id, E_Out_Parameter);\n+                  Mutate_Ekind (Formal_Id, E_Out_Parameter);\n                end if;\n \n             --  But not in earlier versions of Ada\n \n             else\n                Error_Msg_N (\"functions can only have IN parameters\", Spec);\n-               Set_Ekind (Formal_Id, E_In_Parameter);\n+               Mutate_Ekind (Formal_Id, E_In_Parameter);\n             end if;\n \n          elsif In_Present (Spec) then\n-            Set_Ekind (Formal_Id, E_In_Out_Parameter);\n+            Mutate_Ekind (Formal_Id, E_In_Out_Parameter);\n \n          else\n-            Set_Ekind               (Formal_Id, E_Out_Parameter);\n+            Mutate_Ekind            (Formal_Id, E_Out_Parameter);\n             Set_Never_Set_In_Source (Formal_Id, True);\n             Set_Is_True_Constant    (Formal_Id, False);\n             Set_Current_Value       (Formal_Id, Empty);\n          end if;\n \n       else\n-         Set_Ekind (Formal_Id, E_In_Parameter);\n+         Mutate_Ekind (Formal_Id, E_In_Parameter);\n       end if;\n \n       --  Set Is_Known_Non_Null for access parameters since the language"}, {"sha": "b71a26cdea1a1c7bce7881a3e70b1fed2dce64a6", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -843,7 +843,7 @@ package body Sem_Ch7 is\n          --  unannotated body will be used in all instantiations.\n \n          Body_Id := Defining_Entity (N);\n-         Set_Ekind (Body_Id, E_Package_Body);\n+         Mutate_Ekind (Body_Id, E_Package_Body);\n          Set_Scope (Body_Id, Scope (Spec_Id));\n          Set_Is_Obsolescent (Body_Id, Is_Obsolescent (Spec_Id));\n          Set_Body_Entity (Spec_Id, Body_Id);\n@@ -875,7 +875,7 @@ package body Sem_Ch7 is\n       --  current node otherwise. Note that N was rewritten above, so we must\n       --  be sure to get the latest Body_Id value.\n \n-      Set_Ekind (Body_Id, E_Package_Body);\n+      Mutate_Ekind (Body_Id, E_Package_Body);\n       Set_Body_Entity (Spec_Id, Body_Id);\n       Set_Spec_Entity (Body_Id, Spec_Id);\n \n@@ -1161,7 +1161,7 @@ package body Sem_Ch7 is\n \n       Generate_Definition (Id);\n       Enter_Name (Id);\n-      Set_Ekind  (Id, E_Package);\n+      Mutate_Ekind  (Id, E_Package);\n       Set_Etype  (Id, Standard_Void_Type);\n \n       --  Set SPARK_Mode from context\n@@ -2558,9 +2558,9 @@ package body Sem_Ch7 is\n       end if;\n \n       if Limited_Present (Def) then\n-         Set_Ekind (Id, E_Limited_Private_Type);\n+         Mutate_Ekind (Id, E_Limited_Private_Type);\n       else\n-         Set_Ekind (Id, E_Private_Type);\n+         Mutate_Ekind (Id, E_Private_Type);\n       end if;\n \n       Set_Etype              (Id, Id);\n@@ -2592,7 +2592,7 @@ package body Sem_Ch7 is\n       Set_Private_Dependents (Id, New_Elmt_List);\n \n       if Tagged_Present (Def) then\n-         Set_Ekind                       (Id, E_Record_Type_With_Private);\n+         Mutate_Ekind                    (Id, E_Record_Type_With_Private);\n          Set_Direct_Primitive_Operations (Id, New_Elmt_List);\n          Set_Is_Abstract_Type            (Id, Abstract_Present (Def));\n          Set_Is_Limited_Record           (Id, Limited_Present (Def));"}, {"sha": "127896e93d94001169863232195554744d004ddc", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -572,7 +572,7 @@ package body Sem_Ch8 is\n       Enter_Name (Id);\n       Analyze (Nam);\n \n-      Set_Ekind   (Id, E_Exception);\n+      Mutate_Ekind   (Id, E_Exception);\n       Set_Etype   (Id, Standard_Exception_Type);\n       Set_Is_Pure (Id, Is_Pure (Current_Scope));\n \n@@ -701,7 +701,7 @@ package body Sem_Ch8 is\n       end if;\n \n       Enter_Name (New_P);\n-      Set_Ekind (New_P, K);\n+      Mutate_Ekind (New_P, K);\n \n       if Etype (Old_P) = Any_Type then\n          null;\n@@ -984,7 +984,7 @@ package body Sem_Ch8 is\n                   Error_Msg_N\n                     (\"object name or value expected in renaming\", Nam);\n \n-                  Set_Ekind (Id, E_Variable);\n+                  Mutate_Ekind (Id, E_Variable);\n                   Set_Etype (Id, Any_Type);\n \n                   return;\n@@ -1032,7 +1032,7 @@ package body Sem_Ch8 is\n                      Error_Msg_N\n                        (\"object name or value expected in renaming\", Nam);\n \n-                     Set_Ekind (Id, E_Variable);\n+                     Mutate_Ekind (Id, E_Variable);\n                      Set_Etype (Id, Any_Type);\n \n                      return;\n@@ -1145,7 +1145,7 @@ package body Sem_Ch8 is\n            and then Comes_From_Source (N)\n          then\n             Set_Etype (Id, T);\n-            Set_Ekind (Id, E_Constant);\n+            Mutate_Ekind (Id, E_Constant);\n             Rewrite (N,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Id,\n@@ -1458,7 +1458,7 @@ package body Sem_Ch8 is\n       --  want to change it to a variable.\n \n       if Ekind (Id) /= E_Constant then\n-         Set_Ekind (Id, E_Variable);\n+         Mutate_Ekind (Id, E_Variable);\n       end if;\n \n       Init_Object_Size_Align (Id);\n@@ -1536,7 +1536,7 @@ package body Sem_Ch8 is\n       Set_Etype (Id, T2);\n \n       if not Is_Variable (Nam) then\n-         Set_Ekind               (Id, E_Constant);\n+         Mutate_Ekind            (Id, E_Constant);\n          Set_Never_Set_In_Source (Id, True);\n          Set_Is_True_Constant    (Id, True);\n       end if;\n@@ -1632,7 +1632,7 @@ package body Sem_Ch8 is\n \n          --  Set basic attributes to minimize cascaded errors\n \n-         Set_Ekind (New_P, E_Package);\n+         Mutate_Ekind (New_P, E_Package);\n          Set_Etype (New_P, Standard_Void_Type);\n \n       elsif Present (Renamed_Entity (Old_P))\n@@ -1647,7 +1647,7 @@ package body Sem_Ch8 is\n \n          --  Set basic attributes to minimize cascaded errors\n \n-         Set_Ekind (New_P, E_Package);\n+         Mutate_Ekind (New_P, E_Package);\n          Set_Etype (New_P, Standard_Void_Type);\n \n       --  Here for OK package renaming\n@@ -1657,7 +1657,7 @@ package body Sem_Ch8 is\n          --  entity. The simplest implementation is to have both packages share\n          --  the entity list.\n \n-         Set_Ekind (New_P, E_Package);\n+         Mutate_Ekind (New_P, E_Package);\n          Set_Etype (New_P, Standard_Void_Type);\n \n          if Present (Renamed_Object (Old_P)) then\n@@ -3281,7 +3281,7 @@ package body Sem_Ch8 is\n          Reinit_Field_To_Zero (New_S, Has_Out_Or_In_Out_Parameter);\n          Reinit_Field_To_Zero (New_S, Needs_No_Actuals,\n            Old_Ekind => (E_Function | E_Procedure => True, others => False));\n-         Set_Ekind (New_S, E_Subprogram_Body);\n+         Mutate_Ekind (New_S, E_Subprogram_Body);\n          New_S := Rename_Spec;\n          Set_Has_Completion (Rename_Spec, False);\n "}, {"sha": "dd5f6e1d0ef0ad5c0aa12ac0069a9a20d7477f3b", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -1232,9 +1232,9 @@ package body Sem_Ch9 is\n       Analyze (Formals);\n \n       if Present (Entry_Index_Specification (Formals)) then\n-         Set_Ekind (Id, E_Entry_Family);\n+         Mutate_Ekind (Id, E_Entry_Family);\n       else\n-         Set_Ekind (Id, E_Entry);\n+         Mutate_Ekind (Id, E_Entry);\n       end if;\n \n       Set_Etype          (Id, Standard_Void_Type);\n@@ -1551,13 +1551,13 @@ package body Sem_Ch9 is\n       --  Case of no discrete subtype definition\n \n       if No (D_Sdef) then\n-         Set_Ekind (Def_Id, E_Entry);\n+         Mutate_Ekind (Def_Id, E_Entry);\n \n       --  Processing for discrete subtype definition present\n \n       else\n          Enter_Name (Def_Id);\n-         Set_Ekind (Def_Id, E_Entry_Family);\n+         Mutate_Ekind (Def_Id, E_Entry_Family);\n          Analyze (D_Sdef);\n          Make_Index (D_Sdef, N, Def_Id);\n \n@@ -1722,11 +1722,11 @@ package body Sem_Ch9 is\n          Make_Index (Def, N);\n       end if;\n \n-      Set_Ekind (Loop_Id, E_Loop);\n+      Mutate_Ekind (Loop_Id, E_Loop);\n       Set_Scope (Loop_Id, Current_Scope);\n       Push_Scope (Loop_Id);\n       Enter_Name (Iden);\n-      Set_Ekind (Iden, E_Entry_Index_Parameter);\n+      Mutate_Ekind (Iden, E_Entry_Index_Parameter);\n       Set_Etype (Iden, Etype (Def));\n    end Analyze_Entry_Index_Specification;\n \n@@ -1808,7 +1808,7 @@ package body Sem_Ch9 is\n       Freeze_Previous_Contracts (N);\n \n       Tasking_Used := True;\n-      Set_Ekind (Body_Id, E_Protected_Body);\n+      Mutate_Ekind (Body_Id, E_Protected_Body);\n       Set_Etype (Body_Id, Standard_Void_Type);\n       Spec_Id := Find_Concurrent_Spec (Body_Id);\n \n@@ -2024,7 +2024,7 @@ package body Sem_Ch9 is\n          Set_Completion_Referenced (T);\n       end if;\n \n-      Set_Ekind              (T, E_Protected_Type);\n+      Mutate_Ekind           (T, E_Protected_Type);\n       Set_Is_First_Subtype   (T);\n       Init_Size_Align        (T);\n       Set_Etype              (T, T);\n@@ -2138,7 +2138,7 @@ package body Sem_Ch9 is\n       E := First_Entity (Current_Scope);\n       while Present (E) loop\n          if Ekind (E) = E_Void then\n-            Set_Ekind (E, E_Component);\n+            Mutate_Ekind (E, E_Component);\n             Init_Component_Location (E);\n          end if;\n \n@@ -2775,12 +2775,12 @@ package body Sem_Ch9 is\n       --  its own body.\n \n       Enter_Name (Typ);\n-      Set_Ekind            (Typ, E_Protected_Type);\n+      Mutate_Ekind         (Typ, E_Protected_Type);\n       Set_Etype            (Typ, Typ);\n       Set_Anonymous_Object (Typ, Obj_Id);\n \n       Enter_Name (Obj_Id);\n-      Set_Ekind                  (Obj_Id, E_Variable);\n+      Mutate_Ekind               (Obj_Id, E_Variable);\n       Set_Etype                  (Obj_Id, Typ);\n       Set_SPARK_Pragma           (Obj_Id, SPARK_Mode_Pragma);\n       Set_SPARK_Pragma_Inherited (Obj_Id);\n@@ -2861,12 +2861,12 @@ package body Sem_Ch9 is\n       --  in its own body.\n \n       Enter_Name (Typ);\n-      Set_Ekind            (Typ, E_Task_Type);\n+      Mutate_Ekind         (Typ, E_Task_Type);\n       Set_Etype            (Typ, Typ);\n       Set_Anonymous_Object (Typ, Obj_Id);\n \n       Enter_Name (Obj_Id);\n-      Set_Ekind                  (Obj_Id, E_Variable);\n+      Mutate_Ekind               (Obj_Id, E_Variable);\n       Set_Etype                  (Obj_Id, Typ);\n       Set_SPARK_Pragma           (Obj_Id, SPARK_Mode_Pragma);\n       Set_SPARK_Pragma_Inherited (Obj_Id);\n@@ -2922,7 +2922,7 @@ package body Sem_Ch9 is\n \n       Tasking_Used := True;\n       Set_Scope (Body_Id, Current_Scope);\n-      Set_Ekind (Body_Id, E_Task_Body);\n+      Mutate_Ekind (Body_Id, E_Task_Body);\n       Set_Etype (Body_Id, Standard_Void_Type);\n       Spec_Id := Find_Concurrent_Spec (Body_Id);\n \n@@ -3139,12 +3139,12 @@ package body Sem_Ch9 is\n             Set_Completion_Referenced (T);\n \n          else\n-            Set_Ekind (T, E_Task_Type);\n+            Mutate_Ekind (T, E_Task_Type);\n             Set_Corresponding_Record_Type (T, Empty);\n          end if;\n       end if;\n \n-      Set_Ekind              (T, E_Task_Type);\n+      Mutate_Ekind           (T, E_Task_Type);\n       Set_Is_First_Subtype   (T, True);\n       Set_Has_Task           (T, True);\n       Init_Size_Align        (T);"}, {"sha": "ff76c75a22a037f1f1f28a1023edbc5c746d2d2e", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -660,7 +660,7 @@ package body Sem_Dist is\n       --  Corresponding_Remote_Type attribute, whose presence indicates that\n       --  this is the record type used to implement a RAS.\n \n-      Set_Ekind (Fat_Type, E_Record_Type);\n+      Mutate_Ekind (Fat_Type, E_Record_Type);\n       Set_Corresponding_Remote_Type (Fat_Type, User_Type);\n \n       Insert_After_And_Analyze (Subpkg_Body, Fat_Type_Decl);"}, {"sha": "2142983c5adf64994c656fb2702dfc819e37d9f4", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -11887,7 +11887,7 @@ package body Sem_Elab is\n          --  Partially decorate the elaboration procedure because it will not\n          --  be insertred into the tree and analyzed.\n \n-         Set_Ekind (Proc_Id, E_Procedure);\n+         Mutate_Ekind (Proc_Id, E_Procedure);\n          Set_Etype (Proc_Id, Standard_Void_Type);\n          Set_Scope (Proc_Id, Unique_Entity (Main_Unit_Entity));\n \n@@ -12012,7 +12012,7 @@ package body Sem_Elab is\n          --  it will not be inserted into the tree and analyzed.\n \n          Task_Obj := Make_Temporary (Loc, 'T');\n-         Set_Ekind (Task_Obj, E_Variable);\n+         Mutate_Ekind (Task_Obj, E_Variable);\n          Set_Etype (Task_Obj, Task_Typ);\n \n          --  Associate the dummy task object with the activation call"}, {"sha": "5b1173c3c05cfc7f24ae3e9e24b4d7c6ea83ab9e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -11978,7 +11978,7 @@ package body Sem_Prag is\n \n                   Set_Comes_From_Source   (State_Id, not Is_Null);\n                   Set_Parent              (State_Id, State);\n-                  Set_Ekind               (State_Id, E_Abstract_State);\n+                  Mutate_Ekind            (State_Id, E_Abstract_State);\n                   Set_Etype               (State_Id, Standard_Void_Type);\n                   Set_Encapsulating_State (State_Id, Empty);\n "}, {"sha": "3b5775e29b5d6d7a70b825e9ea8190e27fe81431", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -8553,7 +8553,7 @@ package body Sem_Util is\n       --  will be detected. Any_Type insures that no cascaded errors will occur\n \n       else\n-         Set_Ekind (Def_Id, E_Void);\n+         Mutate_Ekind (Def_Id, E_Void);\n          Set_Etype (Def_Id, Any_Type);\n       end if;\n \n@@ -24441,7 +24441,7 @@ package body Sem_Util is\n                 (Chars (Related_Id), Suffix, Suffix_Index, Prefix));\n \n    begin\n-      Set_Ekind          (N, Kind);\n+      Mutate_Ekind       (N, Kind);\n       Set_Is_Internal    (N, True);\n       Append_Entity      (N, Scope_Id);\n       Set_Public_Status  (N);\n@@ -24466,7 +24466,7 @@ package body Sem_Util is\n       N : constant Entity_Id := Make_Temporary (Sloc_Value, Id_Char);\n \n    begin\n-      Set_Ekind       (N, Kind);\n+      Mutate_Ekind    (N, Kind);\n       Set_Is_Internal (N, True);\n       Append_Entity   (N, Scope_Id);\n \n@@ -31242,9 +31242,9 @@ package body Sem_Util is\n                       (Loc, Access_Type_Id,\n                        Type_Definition => Access_Type_Def);\n             begin\n-               Set_Ekind (Temp_Id, E_Variable);\n+               Mutate_Ekind (Temp_Id, E_Variable);\n                Set_Etype (Temp_Id, Access_Type_Id);\n-               Set_Ekind (Access_Type_Id, E_Access_Type);\n+               Mutate_Ekind (Access_Type_Id, E_Access_Type);\n \n                if Append_Decls_In_Reverse_Order then\n                   Append_Item (Temp_Decl, Is_Eval_Stmt => False);"}, {"sha": "9101abbb71d16f5176c1fb830dd0f9989bd07058", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 72, "deletions": 82, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02ab86744ccc97cc65d739ca515cb7d3b882d2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=2e02ab86744ccc97cc65d739ca515cb7d3b882d2", "patch": "@@ -23,7 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package defines the structure of the abstract syntax tree. The Tree\n+--  This package documents the structure of the abstract syntax tree. The Atree\n --  package provides a basic tree structure. Sinfo describes how this structure\n --  is used to represent the syntax of an Ada program.\n \n@@ -37,8 +37,15 @@\n --  would normally be regarded as the symbol table information. In addition a\n --  number of the tree nodes contain semantic information.\n \n---  WARNING: Several files are automatically generated from this package.\n---  See below for details.\n+--  See the spec of Gen_IL.Gen for instructions on making changes to this file.\n+--  Note that the official definition of what nodes have what fields is in\n+--  Gen_IL.Gen.Gen_Nodes; if there is a discrepancy between that and the\n+--  comments here, Gen_IL.Gen.Gen_Nodes wins.\n+--\n+--  Offsets of each field are given in parentheses below, but this information\n+--  is obsolete, and should be completely ignored. The actual field offsets are\n+--  determined by the Gen_IL program. We might want to remove these comments at\n+--  some point.\n \n pragma Warnings (Off); -- with/use clauses for children\n with Namet; use Namet;\n@@ -49,84 +56,67 @@ pragma Warnings (On);\n \n package Sinfo is\n \n-   --  ????Comments below are partly obsolete\n-\n-   ---------------------------------\n-   -- Making Changes to This File --\n-   ---------------------------------\n-\n-   --  If changes are made to this file, a number of related steps must be\n-   --  carried out to ensure consistency. First, if a field access function is\n-   --  added, it appears in these places:\n-\n-   --    In sinfo.ads:\n-   --      The documentation associated with the field (if semantic)\n-   --      The documentation associated with the node\n-   --      The spec of the access function\n-   --      The spec of the set procedure\n-   --      The entries in Is_Syntactic_Field\n-   --      The pragma Inline for the access function\n-   --      The pragma Inline for the set procedure\n-   --    In sinfo.adb:\n-   --      The body of the access function\n-   --      The body of the set procedure\n-\n-   --  The field chosen must be consistent in all places, and, for a node that\n-   --  is a subexpression, must not overlap any of the standard expression\n-   --  fields.\n-\n-   --  In addition, if any of the standard expression fields is changed, then\n-   --  the utility program which creates the Treeprs spec (in file treeprs.ads)\n-   --  must be updated appropriately, since it special cases expression fields.\n-\n-   --  If a new tree node is added, then the following changes are made:\n-\n-   --    Add it to the documentation in the appropriate place\n-   --    Add its fields to this documentation section\n-   --    Define it in the appropriate classification in Node_Kind\n-   --    Add an entry in Is_Syntactic_Field\n-   --    In the body (sinfo), add entries to the access functions for all\n-   --     its fields (except standard expression fields) to include the new\n-   --     node in the checks.\n-   --    Add an appropriate section to the case statement in sprint.adb\n-   --    Add an appropriate section to the case statement in sem.adb\n-   --    Add an appropriate section to the case statement in exp_util.adb\n-   --     (Insert_Actions procedure)\n-   --    For a subexpression, add an appropriate section to the case\n-   --     statement in sem_eval.adb\n-   --    For a subexpression, add an appropriate section to the case\n-   --     statement in sem_res.adb\n-\n-   --  All back ends must be made aware of the new node kind.\n-\n-   --  Finally, four utility programs must be run:\n-\n-   --    (Optional.) Run CSinfo to check that you have made the changes\n-   --     consistently. It checks most of the rules given above. This utility\n-   --     reads sinfo.ads and sinfo.adb and generates a report to standard\n-   --     output. This step is optional because XSinfo runs CSinfo.\n-\n-   --    Run XSinfo to create sinfo.h, the corresponding C header. This\n-   --     utility reads sinfo.ads and generates sinfo.h. Note that it does\n-   --     not need to read sinfo.adb, since the contents of the body are\n-   --     algorithmically determinable from the spec.\n-\n-   --    Run XTreeprs to create treeprs.ads, an updated version of the module\n-   --     that is used to drive the tree print routine. This utility reads (but\n-   --     does not modify) treeprs.adt, the template that provides the basic\n-   --     structure of the file, and then fills in the data from the comments\n-   --     in sinfo.ads.\n-\n-   --    Run XNmake to create nmake.ads and nmake.adb, the package body and\n-   --     spec of the Nmake package which contains functions for constructing\n-   --     nodes.\n-\n-   --  The above steps are done automatically by the build scripts when you do\n-   --  a full bootstrap.\n-\n-   --  Note: sometime we could write a utility that actually generated the body\n-   --  of sinfo from the spec instead of simply checking it, since, as noted\n-   --  above, the contents of the body can be determined from the spec.\n+   ----------------------------------------\n+   -- Definitions of fields in tree node --\n+   ----------------------------------------\n+\n+   --  The following fields are common to all nodes:\n+\n+   --   Nkind         Indicates the kind of the node. This field is present\n+   --                 in all nodes.\n+\n+   --   Sloc          Location (Source_Ptr) of the corresponding token\n+   --                 in the Source buffer. The individual node definitions\n+   --                 show which token is referenced by this pointer.\n+\n+   --   In_List       A flag used to indicate if the node is a member\n+   --                 of a node list (see package Nlists).\n+\n+   --   Rewrite_Ins   A flag set if a node is marked as a rewrite inserted\n+   --                 node as a result of a call to Mark_Rewrite_Insertion.\n+\n+   --   Small_Paren_Count\n+   --                 A 2-bit count used in subexpression nodes to indicate\n+   --                 the level of parentheses. The settings are 0,1,2 and\n+   --                 3 for many. If the value is 3, then an auxiliary table\n+   --                 is used to indicate the real value, which is computed by\n+   --                 Paren_Count. Set to zero for nonsubexpression nodes.\n+\n+   --                 Note: the required parentheses surrounding conditional\n+   --                 and quantified expressions count as a level of parens\n+   --                 for this purpose, so e.g. in X := (if A then B else C);\n+   --                 Paren_Count for the right side will be 1.\n+\n+   --   Comes_From_Source\n+   --                 This flag is present in all nodes. It is set if the\n+   --                 node is built by the scanner or parser, and clear if\n+   --                 the node is built by the analyzer or expander. It\n+   --                 indicates that the node corresponds to a construct\n+   --                 that appears in the original source program.\n+\n+   --   Analyzed      This flag is present in all nodes. It is set when\n+   --                 a node is analyzed, and is used to avoid analyzing\n+   --                 the same node twice. Analysis includes expansion if\n+   --                 expansion is active, so in this case if the flag is\n+   --                 set it means the node has been analyzed and expanded.\n+\n+   --   Error_Posted  This flag is present in all nodes. It is set when\n+   --                 an error message is posted which is associated with\n+   --                 the flagged node. This is used to avoid posting more\n+   --                 than one message on the same node.\n+\n+   --   Link          For a node, points to the Parent. For a list, points\n+   --                 to the list header. Note that in the latter case, a\n+   --                 client cannot modify the link field. This field is\n+   --                 private to the Atree package (but is also modified\n+   --                 by the Nlists package).\n+\n+   --  The following additional fields are common to all entities (that is,\n+   --  nodes whose Nkind is in N_Entity):\n+\n+   --   Ekind         Entity type.\n+\n+   --   Convention    Entity convention (Convention_Id value)\n \n    --------------------------------\n    -- Implicit Nodes in the Tree --\n@@ -1328,7 +1318,7 @@ package Sinfo is\n    --    expansion of aggregates is also used for in-place array aggregate\n    --    assignment or initialization. When the full context is known, the\n    --    target of the assignment or initialization is used to generate the\n-   --    left-hand side of individual assignment to each sub-component.\n+   --    left-hand side of individual assignment to each subcomponent.\n \n    --  Expression_Copy (Node2-Sem)\n    --    Present in N_Pragma_Argument_Association nodes. Contains a copy of the"}]}