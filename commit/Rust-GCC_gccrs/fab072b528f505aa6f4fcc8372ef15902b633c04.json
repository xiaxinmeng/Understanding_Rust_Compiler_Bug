{"sha": "fab072b528f505aa6f4fcc8372ef15902b633c04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiMDcyYjUyOGY1MDVhYTZmNGZjYzgzNzJlZjE1OTAyYjYzM2MwNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2004-12-24T06:49:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2004-12-24T06:49:34Z"}, "message": "i386.md (*fix_trunc{d,s,h}i_1): Rename to *fix_trunc{d,s,h}i_i387.\n\n\t* config/i386/i386.md (*fix_trunc{d,s,h}i_1):\n\tRename to *fix_trunc{d,s,h}i_i387.\n\t(fix_trunc{d,s}fdi2): Reorder tests.\n\nFrom-SVN: r92586", "tree": {"sha": "47667aa97a75156cca3fb076e45c89ec17149bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47667aa97a75156cca3fb076e45c89ec17149bb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fab072b528f505aa6f4fcc8372ef15902b633c04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab072b528f505aa6f4fcc8372ef15902b633c04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab072b528f505aa6f4fcc8372ef15902b633c04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab072b528f505aa6f4fcc8372ef15902b633c04/comments", "author": null, "committer": null, "parents": [{"sha": "ac3bfd867b1e0a702551bcf0581b481885eb4938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3bfd867b1e0a702551bcf0581b481885eb4938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac3bfd867b1e0a702551bcf0581b481885eb4938"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b5070138192dc210a2706b3301ea89774af0ff31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab072b528f505aa6f4fcc8372ef15902b633c04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab072b528f505aa6f4fcc8372ef15902b633c04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fab072b528f505aa6f4fcc8372ef15902b633c04", "patch": "@@ -1,3 +1,9 @@\n+2004-12-24  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.md (*fix_trunc{d,s,h}i_1):\n+\tRename to *fix_trunc{d,s,h}i_i387.\n+\t(fix_trunc{d,s}fdi2): Reorder tests.\n+\n 2004-12-24  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \tFix PR debug/14638"}, {"sha": "c03622665d77fca9edfa26ddd6f4897d5a098f1f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab072b528f505aa6f4fcc8372ef15902b633c04/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab072b528f505aa6f4fcc8372ef15902b633c04/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fab072b528f505aa6f4fcc8372ef15902b633c04", "patch": "@@ -3997,7 +3997,7 @@\n   [(parallel [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n                    (fix:DI (match_operand:DF 1 \"register_operand\" \"\")))\n               (clobber (reg:CC FLAGS_REG))])]\n-  \"TARGET_80387 || (TARGET_SSE2 && TARGET_64BIT)\"\n+  \"TARGET_80387 || (TARGET_64BIT && TARGET_SSE2)\"\n {\n   if (TARGET_64BIT && TARGET_SSE2)\n    {\n@@ -4013,9 +4013,9 @@\n   [(parallel [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t           (fix:DI (match_operand:SF 1 \"register_operand\" \"\")))\n               (clobber (reg:CC FLAGS_REG))])] \n-  \"TARGET_80387 || (TARGET_SSE && TARGET_64BIT)\"\n+  \"TARGET_80387 || (TARGET_64BIT && TARGET_SSE)\"\n {\n-  if (TARGET_SSE && TARGET_64BIT)\n+  if (TARGET_64BIT && TARGET_SSE)\n    {\n      rtx out = REG_P (operands[0]) ? operands[0] : gen_reg_rtx (DImode);\n      emit_insn (gen_fix_truncsfdi_sse (out, operands[1]));\n@@ -4027,7 +4027,7 @@\n \n ;; See the comments in i386.h near OPTIMIZE_MODE_SWITCHING for the description\n ;; of the machinery.\n-(define_insn_and_split \"*fix_truncdi_1\"\n+(define_insn_and_split \"*fix_truncdi_i387\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(fix:DI (match_operand 1 \"register_operand\" \"f,f\")))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -4195,7 +4195,7 @@\n \n ;; See the comments in i386.h near OPTIMIZE_MODE_SWITCHING for the description\n ;; of the machinery.\n-(define_insn_and_split \"*fix_truncsi_1\"\n+(define_insn_and_split \"*fix_truncsi_i387\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(fix:SI (match_operand 1 \"register_operand\" \"f,f\")))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -4339,7 +4339,7 @@\n \n ;; See the comments in i386.h near OPTIMIZE_MODE_SWITCHING for the description\n ;; of the machinery.\n-(define_insn_and_split \"*fix_trunchi_1\"\n+(define_insn_and_split \"*fix_trunchi_i387\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(fix:HI (match_operand 1 \"register_operand\" \"f,f\")))\n    (clobber (reg:CC FLAGS_REG))]"}]}