{"sha": "a19f09cb03d7f69377e6d12162e5d6df78a82849", "node_id": "C_kwDOANBUbNoAKGExOWYwOWNiMDNkN2Y2OTM3N2U2ZDEyMTYyZTVkNmRmNzhhODI4NDk", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-11-09T14:09:12Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-11-09T14:09:12Z"}, "message": "c++: unexpanded pack in var tmpl partial spec [PR100652]\n\nHere we're failing to spot a bare parameter pack appearing in the argument\nlist of a variable template partial specialization because we only look for\nthem within the decl's TREE_TYPE, which is sufficient for class templates\nbut not for variable templates.\n\n\tPR c++/100652\n\ngcc/cp/ChangeLog:\n\n\t* pt.c (push_template_decl): Check for bare parameter packs in\n\tthe argument list of a variable template partial specialization.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1y/var-templ69.C: New test.", "tree": {"sha": "67a56c1059dd4d0693ce007d65b4c69331e90adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67a56c1059dd4d0693ce007d65b4c69331e90adf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a19f09cb03d7f69377e6d12162e5d6df78a82849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19f09cb03d7f69377e6d12162e5d6df78a82849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19f09cb03d7f69377e6d12162e5d6df78a82849", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19f09cb03d7f69377e6d12162e5d6df78a82849/comments", "author": null, "committer": null, "parents": [{"sha": "0dc0947d4b67af66a57f4824232bb8020b0403f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dc0947d4b67af66a57f4824232bb8020b0403f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dc0947d4b67af66a57f4824232bb8020b0403f7"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "b2916f8aa4b6ea9a3feba18ced4a9f0c374cfd2c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19f09cb03d7f69377e6d12162e5d6df78a82849/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19f09cb03d7f69377e6d12162e5d6df78a82849/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a19f09cb03d7f69377e6d12162e5d6df78a82849", "patch": "@@ -5877,12 +5877,19 @@ push_template_decl (tree decl, bool is_friend)\n       if (check_for_bare_parameter_packs (TYPE_RAISES_EXCEPTIONS (type)))\n \tTYPE_RAISES_EXCEPTIONS (type) = NULL_TREE;\n     }\n-  else if (check_for_bare_parameter_packs (is_typedef_decl (decl)\n-\t\t\t\t\t   ? DECL_ORIGINAL_TYPE (decl)\n-\t\t\t\t\t   : TREE_TYPE (decl)))\n+  else\n     {\n-      TREE_TYPE (decl) = error_mark_node;\n-      return error_mark_node;\n+      if (check_for_bare_parameter_packs (is_typedef_decl (decl)\n+\t\t\t\t\t  ? DECL_ORIGINAL_TYPE (decl)\n+\t\t\t\t\t  : TREE_TYPE (decl)))\n+\t{\n+\t  TREE_TYPE (decl) = error_mark_node;\n+\t  return error_mark_node;\n+\t}\n+\n+      if (is_partial && VAR_P (decl)\n+\t  && check_for_bare_parameter_packs (DECL_TI_ARGS (decl)))\n+\treturn error_mark_node;\n     }\n \n   if (is_partial)"}, {"sha": "420d617368cd176e487e0fe5ed2268f30f3e10cb", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ69.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19f09cb03d7f69377e6d12162e5d6df78a82849/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19f09cb03d7f69377e6d12162e5d6df78a82849/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ69.C?ref=a19f09cb03d7f69377e6d12162e5d6df78a82849", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/100652\n+// { dg-do compile { target c++14 } }\n+\n+template<class...> int var;\n+template<class... Ts> char var<bool, Ts>; // { dg-error \"parameter packs not expanded\" }"}]}