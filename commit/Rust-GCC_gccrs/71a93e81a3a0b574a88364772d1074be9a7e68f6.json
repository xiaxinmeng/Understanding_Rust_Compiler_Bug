{"sha": "71a93e81a3a0b574a88364772d1074be9a7e68f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFhOTNlODFhM2EwYjU3NGE4ODM2NDc3MmQxMDc0YmU5YTdlNjhmNg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-03-01T11:06:18Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-03-01T11:06:18Z"}, "message": "re PR fortran/84219 (Failure to generate error for IO of transfer intrinsic, when MOLD has derived type components.)\n\n2018-03-01  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84219\n\t* target-memory.c (gfc_interpret_derived): Assert that BT_VOID\n\tcomponents are caf tokens.\n\t(gfc_target_interpret_expr): Treat BT_VOID expressions as\n\tintegers.\n\n2018-03-01  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84219\n\t* gfortran.dg/coarray_47.f90: New test.\n\nFrom-SVN: r258098", "tree": {"sha": "b901d3c51b3f8651d60c1ff12fe4c431739bc5ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b901d3c51b3f8651d60c1ff12fe4c431739bc5ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71a93e81a3a0b574a88364772d1074be9a7e68f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a93e81a3a0b574a88364772d1074be9a7e68f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71a93e81a3a0b574a88364772d1074be9a7e68f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a93e81a3a0b574a88364772d1074be9a7e68f6/comments", "author": null, "committer": null, "parents": [{"sha": "b120c8b207d33f00b34fad9256740d6483839d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b120c8b207d33f00b34fad9256740d6483839d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b120c8b207d33f00b34fad9256740d6483839d2b"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "742b83d096b896c8557611f8ef144cc2b118c2fa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=71a93e81a3a0b574a88364772d1074be9a7e68f6", "patch": "@@ -1,3 +1,11 @@\n+2018-03-01  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84219\n+\t* target-memory.c (gfc_interpret_derived): Assert that BT_VOID\n+\tcomponents are caf tokens.\n+\t(gfc_target_interpret_expr): Treat BT_VOID expressions as\n+\tintegers.\n+\n 2018-03-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84538"}, {"sha": "6b9292b5fafee97cbf8efac89f81fcf5890928bb", "filename": "gcc/fortran/target-memory.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ffortran%2Ftarget-memory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ffortran%2Ftarget-memory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.c?ref=71a93e81a3a0b574a88364772d1074be9a7e68f6", "patch": "@@ -547,6 +547,7 @@ gfc_interpret_derived (unsigned char *buffer, size_t buffer_size, gfc_expr *resu\n       gcc_assert (ptr % 8 == 0);\n       ptr = ptr/8 + TREE_INT_CST_LOW (DECL_FIELD_OFFSET (cmp->backend_decl));\n \n+      gcc_assert (e->ts.type != BT_VOID || cmp->attr.caf_token);\n       gfc_target_interpret_expr (&buffer[ptr], buffer_size - ptr, e, true);\n     }\n \n@@ -602,6 +603,13 @@ gfc_target_interpret_expr (unsigned char *buffer, size_t buffer_size,\n       gcc_assert (result->representation.length >= 0);\n       break;\n \n+    case BT_VOID:\n+      /* This deals with caf_tokens.  */\n+      result->representation.length =\n+        gfc_interpret_integer (result->ts.kind, buffer, buffer_size,\n+\t\t\t       result->value.integer);\n+      break;\n+\n     default:\n       gfc_internal_error (\"Invalid expression in gfc_target_interpret_expr.\");\n       break;"}, {"sha": "e4ed421e7be320c4b274a0327dbeabd58b9baeda", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71a93e81a3a0b574a88364772d1074be9a7e68f6", "patch": "@@ -1,3 +1,8 @@\n+2018-03-01  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84219\n+\t* gfortran.dg/coarray_47.f90: New test.\n+\n 2018-03-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84538"}, {"sha": "c33eb9c2d7cbc7a401da3b12c9dbddeb0139b9a5", "filename": "gcc/testsuite/gfortran.dg/coarray_47.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_47.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a93e81a3a0b574a88364772d1074be9a7e68f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_47.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_47.f90?ref=71a93e81a3a0b574a88364772d1074be9a7e68f6", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! Contributed by G Steinmetz  <gscfq@t-online.de>\n+!\n+program p\n+   type t\n+      integer, allocatable :: t\n+   end type\n+   type(t) :: x\n+   integer :: i = -1\n+   print *, transfer(i, x) ! { dg-error \"cannot have ALLOCATABLE components\" }\n+end"}]}