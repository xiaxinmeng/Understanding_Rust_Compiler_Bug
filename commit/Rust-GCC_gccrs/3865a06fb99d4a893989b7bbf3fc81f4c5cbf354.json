{"sha": "3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2NWEwNmZiOTlkNGE4OTM5ODliN2JiZjNmYzgxZjRjNWNiZjM1NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-08T14:16:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-08T14:16:50Z"}, "message": "re PR tree-optimization/47639 (ICE: verify_stmts failed: statement marked for throw, but doesn't with -fstack-check=generic -fexceptions -fnon-call-exceptions)\n\n2011-02-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/47639\n\t* tree-vect-generic.c (expand_vector_operations_1): Update\n\tstmts here ...\n\t(expand_vector_operations): ... not here.  Cleanup EH info\n\tand the CFG if required.\n\n\t* g++.dg/opt/pr47639.c: New testcase.\n\nFrom-SVN: r169926", "tree": {"sha": "df6511160dc905811e8b3a601792e9480742cd11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6511160dc905811e8b3a601792e9480742cd11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62902f3fea6432056c9e1c95d574ca133cfe5b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62902f3fea6432056c9e1c95d574ca133cfe5b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62902f3fea6432056c9e1c95d574ca133cfe5b8d"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "39a19133872556f710dd2b8c2af38e098a5cc9e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "patch": "@@ -1,3 +1,11 @@\n+2011-02-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/47639\n+\t* tree-vect-generic.c (expand_vector_operations_1): Update\n+\tstmts here ...\n+\t(expand_vector_operations): ... not here.  Cleanup EH info\n+\tand the CFG if required.\n+\n 2011-02-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47641"}, {"sha": "a9c1bf4a6e4b8209b79173c4bb234132476dfdbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "patch": "@@ -1,3 +1,8 @@\n+2011-02-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/47639\n+\t* g++.dg/opt/pr47639.c: New testcase.\n+\n 2011-02-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47632"}, {"sha": "6ee8bb7dee473ba0504e7ecf7d675f991e9461b7", "filename": "gcc/testsuite/g++.dg/opt/pr47639.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47639.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47639.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47639.c?ref=3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+// { dg-options \"-fnon-call-exceptions\" }\n+\n+typedef int __attribute__ ((vector_size (8))) vec;\n+\n+vec foo (vec v1, vec v2)\n+{\n+  try\n+    {\n+      return v1 / v2;\n+    }\n+  catch (...)\n+    {\n+      throw;\n+    }\n+}\n+"}, {"sha": "fce1fc7e1ae0700274d34fa531a61e4a402c1b6e", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3865a06fb99d4a893989b7bbf3fc81f4c5cbf354/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=3865a06fb99d4a893989b7bbf3fc81f4c5cbf354", "patch": "@@ -606,8 +606,7 @@ expand_vector_operations_1 (gimple_stmt_iterator *gsi)\n      way to do it is change expand_vector_operation and its callees to\n      return a tree_code, RHS1 and RHS2 instead of a tree. */\n   gimple_assign_set_rhs_from_tree (gsi, new_rhs);\n-\n-  gimple_set_modified (gsi_stmt (*gsi), true);\n+  update_stmt (gsi_stmt (*gsi));\n }\n \f\n /* Use this to lower vector operations introduced by the vectorizer,\n@@ -624,16 +623,24 @@ expand_vector_operations (void)\n {\n   gimple_stmt_iterator gsi;\n   basic_block bb;\n+  bool cfg_changed = false;\n \n   FOR_EACH_BB (bb)\n     {\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n \t  expand_vector_operations_1 (&gsi);\n-\t  update_stmt_if_modified (gsi_stmt (gsi));\n+\t  /* ???  If we do not cleanup EH then we will ICE in\n+\t     verification.  But in reality we have created wrong-code\n+\t     as we did not properly transition EH info and edges to\n+\t     the piecewise computations.  */\n+\t  if (maybe_clean_eh_stmt (gsi_stmt (gsi))\n+\t      && gimple_purge_dead_eh_edges (bb))\n+\t    cfg_changed = true;\n \t}\n     }\n-  return 0;\n+\n+  return cfg_changed ? TODO_cleanup_cfg : 0;\n }\n \n struct gimple_opt_pass pass_lower_vector ="}]}