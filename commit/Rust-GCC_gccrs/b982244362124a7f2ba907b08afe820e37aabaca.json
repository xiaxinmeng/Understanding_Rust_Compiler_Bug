{"sha": "b982244362124a7f2ba907b08afe820e37aabaca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4MjI0NDM2MjEyNGE3ZjJiYTkwN2IwOGFmZTgyMGUzN2FhYmFjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-24T23:15:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-24T23:15:56Z"}, "message": "re PR c/79677 (Weird handling of -Werror=)\n\n\tPR c/79677\n\t* opts.h (handle_generated_option): Add GENERATED_P argument.\n\t* opts-common.c (handle_option): Adjust function comment.\n\t(handle_generated_option): Add GENERATED_P argument, pass it to\n\thandle_option.\n\t(control_warning_option): Pass false to handle_generated_option\n\tGENERATED_P.\n\t* opts.c (maybe_default_option): Pass true to handle_generated_option\n\tGENERATED_P.\n\t* optc-gen.awk: Likewise.\nada/\n\t* gcc-interface/misc.c (gnat_handle_option): Pass true to\n\thandle_generated_option GENERATED_P.\ntestsuite/\n\t* gcc.dg/pr79677.c: New test.\n\nFrom-SVN: r245728", "tree": {"sha": "9660e601d65ced3bad984b92d9e7b1e49c3dde5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9660e601d65ced3bad984b92d9e7b1e49c3dde5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b982244362124a7f2ba907b08afe820e37aabaca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b982244362124a7f2ba907b08afe820e37aabaca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b982244362124a7f2ba907b08afe820e37aabaca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b982244362124a7f2ba907b08afe820e37aabaca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f66e78cc141da77ff9e0e3c8519e1af3f26c07"}], "stats": {"total": 64, "additions": 52, "deletions": 12}, "files": [{"sha": "5f0ee4f2816c71578a6acdbb27cc7240b4507378", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -1,3 +1,16 @@\n+2017-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/79677\n+\t* opts.h (handle_generated_option): Add GENERATED_P argument.\n+\t* opts-common.c (handle_option): Adjust function comment.\n+\t(handle_generated_option): Add GENERATED_P argument, pass it to\n+\thandle_option.\n+\t(control_warning_option): Pass false to handle_generated_option\n+\tGENERATED_P.\n+\t* opts.c (maybe_default_option): Pass true to handle_generated_option\n+\tGENERATED_P.\n+\t* optc-gen.awk: Likewise.\n+\n 2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/sh/sh.md (tstsi_t): If operands[0] is a SUBREG instead of"}, {"sha": "079769db942728f2d1eef67c2e91e3978454af99", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -1,3 +1,9 @@\n+2017-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/79677\n+\t* gcc-interface/misc.c (gnat_handle_option): Pass true to\n+\thandle_generated_option GENERATED_P.\n+\n 2017-02-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_field): Do not remove the wrapper"}, {"sha": "1b6b3eb265acb162c82bbe69f0cfec40799adb8a", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -149,7 +149,7 @@ gnat_handle_option (size_t scode, const char *arg, int value, int kind,\n       handle_generated_option (&global_options, &global_options_set,\n \t\t\t       OPT_Wunused, NULL, value,\n \t\t\t       gnat_option_lang_mask (), kind, loc,\n-\t\t\t       handlers, global_dc);\n+\t\t\t       handlers, true, global_dc);\n       warn_uninitialized = value;\n       warn_maybe_uninitialized = value;\n       break;"}, {"sha": "3b9126ccf97d75f795b4279385596081b6a296b6", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -444,7 +444,7 @@ for (i = 0; i < n_enabledby; i++) {\n             print \"      if (\" condition \")\"\n             print \"        handle_generated_option (opts, opts_set,\"\n             print \"                                 \" opt_enum(thisenable[j]) \", NULL, \" value \",\"\n-            print \"                                 lang_mask, kind, loc, handlers, dc);\"\n+            print \"                                 lang_mask, kind, loc, handlers, true, dc);\"\n         } else {\n             print \"#error \" thisenable[j] \" does not have a Var() flag\"\n         }\n@@ -497,7 +497,7 @@ for (i = 0; i < n_langs; i++) {\n                 print \"      if (!opts_set->x_\" opt_var_name \")\"\n                 print \"        handle_generated_option (opts, opts_set,\"\n                 print \"                                 \" opt_enum(thisenable_opt) \", NULL, \" value \",\"\n-                print \"                                 lang_mask, kind, loc, handlers, dc);\"\n+                print \"                                 lang_mask, kind, loc, handlers, true, dc);\"\n             } else {\n                 print \"#error \" thisenable_opt \" does not have a Var() flag\"\n             }"}, {"sha": "f2f7385a4c7ac6c149256aa0c943b6399a2a3a8a", "filename": "gcc/opts-common.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -959,9 +959,10 @@ prune_options (struct cl_decoded_option **decoded_options,\n    option for options from the source file, UNKNOWN_LOCATION\n    otherwise.  GENERATED_P is true for an option generated as part of\n    processing another option or otherwise generated internally, false\n-   for one explicitly passed by the user.  Returns false if the switch\n-   was invalid.  DC is the diagnostic context for options affecting\n-   diagnostics state, or NULL.  */\n+   for one explicitly passed by the user.  control_warning_option\n+   generated options are considered explicitly passed by the user.\n+   Returns false if the switch was invalid.  DC is the diagnostic\n+   context for options affecting diagnostics state, or NULL.  */\n \n static bool\n handle_option (struct gcc_options *opts,\n@@ -1005,13 +1006,13 @@ handle_generated_option (struct gcc_options *opts,\n \t\t\t size_t opt_index, const char *arg, int value,\n \t\t\t unsigned int lang_mask, int kind, location_t loc,\n \t\t\t const struct cl_option_handlers *handlers,\n-\t\t\t diagnostic_context *dc)\n+\t\t\t bool generated_p, diagnostic_context *dc)\n {\n   struct cl_decoded_option decoded;\n \n   generate_option (opt_index, arg, value, lang_mask, &decoded);\n   return handle_option (opts, opts_set, &decoded, lang_mask, kind, loc,\n-\t\t\thandlers, true, dc);\n+\t\t\thandlers, generated_p, dc);\n }\n \n /* Fill in *DECODED with an option described by OPT_INDEX, ARG and\n@@ -1503,7 +1504,7 @@ control_warning_option (unsigned int opt_index, int kind, const char *arg,\n \n \t  handle_generated_option (opts, opts_set,\n \t\t\t\t   opt_index, arg, value, lang_mask,\n-\t\t\t\t   kind, loc, handlers, dc);\n+\t\t\t\t   kind, loc, handlers, false, dc);\n \t}\n     }\n }"}, {"sha": "c4768603ec9eba08586e1e7a9c299c95652ea608", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -403,13 +403,13 @@ maybe_default_option (struct gcc_options *opts,\n     handle_generated_option (opts, opts_set, default_opt->opt_index,\n \t\t\t     default_opt->arg, default_opt->value,\n \t\t\t     lang_mask, DK_UNSPECIFIED, loc,\n-\t\t\t     handlers, dc);\n+\t\t\t     handlers, true, dc);\n   else if (default_opt->arg == NULL\n \t   && !option->cl_reject_negative)\n     handle_generated_option (opts, opts_set, default_opt->opt_index,\n \t\t\t     default_opt->arg, !default_opt->value,\n \t\t\t     lang_mask, DK_UNSPECIFIED, loc,\n-\t\t\t     handlers, dc);\n+\t\t\t     handlers, true, dc);\n }\n \n /* As indicated by the optimization level LEVEL (-Os if SIZE is set,"}, {"sha": "eb626aa90ec8e91766d1e8bcc3c5c63837c8163a", "filename": "gcc/opts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -353,7 +353,7 @@ bool handle_generated_option (struct gcc_options *opts,\n \t\t\t      size_t opt_index, const char *arg, int value,\n \t\t\t      unsigned int lang_mask, int kind, location_t loc,\n \t\t\t      const struct cl_option_handlers *handlers,\n-\t\t\t      diagnostic_context *dc);\n+\t\t\t      bool generated_p, diagnostic_context *dc);\n void generate_option (size_t opt_index, const char *arg, int value,\n \t\t      unsigned int lang_mask,\n \t\t      struct cl_decoded_option *decoded);"}, {"sha": "651eb79a2377f775d3916bbed475a18aacaabfd7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -1,3 +1,8 @@\n+2017-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/79677\n+\t* gcc.dg/pr79677.c: New test.\n+\n 2017-02-24  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \t* gcc.target/mips/mips-ps-type-2.c (move): Force generation"}, {"sha": "53a3176453a64598134c7967bbc168c5ee0c66cb", "filename": "gcc/testsuite/gcc.dg/pr79677.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79677.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b982244362124a7f2ba907b08afe820e37aabaca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79677.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79677.c?ref=b982244362124a7f2ba907b08afe820e37aabaca", "patch": "@@ -0,0 +1,15 @@\n+/* PR c/79677 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wformat -Werror=format-security -Wformat\" } */\n+/* { dg-message \"some warnings being treated as errors\" \"\" { target *-*-* } 0 } */\n+\n+void foo (char *);\n+\n+int\n+main ()\n+{\n+  char s[10] = \"%s\";\n+  foo (s);\n+  __builtin_printf (s);\t/* { dg-error \"format not a string literal and no format arguments\" } */\n+  return 0;\n+}"}]}