{"sha": "d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYyZTZmMTA3OGRkNjJmNmU4OTM3ZDFmNDhmMWY3N2YwYTc4ZTE5ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-04-12T06:12:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-04-12T06:12:26Z"}, "message": "re PR sanitizer/80349 (UBSAN: compile time crash with \"type mismatch in binary expression\" message)\n\n\tPR sanitizer/80349\n\t* fold-const.c (fold_binary_loc) <case BIT_IOR_EXPR>: Convert arg0's\n\tfirst argument to type.\n\n\t* g++.dg/ubsan/pr80349.C: New test.\n\nFrom-SVN: r246865", "tree": {"sha": "3c5094f94841ffdb7f90d3632cb0157e88a7e98a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c5094f94841ffdb7f90d3632cb0157e88a7e98a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31d61ac600b2a6e8b80d0e27d11ec8d4720780ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d61ac600b2a6e8b80d0e27d11ec8d4720780ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d61ac600b2a6e8b80d0e27d11ec8d4720780ea"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "f96256bfac997e7c708af9d060dfc7971b1403d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "patch": "@@ -1,3 +1,9 @@\n+2017-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/80349\n+\t* fold-const.c (fold_binary_loc) <case BIT_IOR_EXPR>: Convert arg0's\n+\tfirst argument to type.\n+\n 2017-04-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/80376"}, {"sha": "2f2e93afb55f2d3254c6023ac5ff4d72ac3bf184", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "patch": "@@ -9916,12 +9916,12 @@ fold_binary_loc (location_t loc,\n \t    }\n \n \t  if (c3 != c1)\n-\t    return fold_build2_loc (loc, BIT_IOR_EXPR, type,\n-\t\t\t\t    fold_build2_loc (loc, BIT_AND_EXPR, type,\n-\t\t\t\t\t\t     TREE_OPERAND (arg0, 0),\n-\t\t\t\t\t\t     wide_int_to_tree (type,\n-\t\t\t\t\t\t\t\t       c3)),\n-\t\t\t\t    arg1);\n+\t    {\n+\t      tem = fold_convert_loc (loc, type, TREE_OPERAND (arg0, 0));\n+\t      tem = fold_build2_loc (loc, BIT_AND_EXPR, type, tem,\n+\t\t\t\t     wide_int_to_tree (type, c3));\n+\t      return fold_build2_loc (loc, BIT_IOR_EXPR, type, tem, arg1);\n+\t    }\n \t}\n \n       /* See if this can be simplified into a rotate first.  If that"}, {"sha": "bf315d3696e54e84eced4a78b065666e80d2dc1e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "patch": "@@ -1,3 +1,8 @@\n+2017-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/80349\n+\t* g++.dg/ubsan/pr80349.C: New test.\n+\n 2017-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/80370"}, {"sha": "f705b92caff2b0801a2babe5a741b2c62b89e085", "filename": "gcc/testsuite/g++.dg/ubsan/pr80349.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr80349.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr80349.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr80349.C?ref=d62e6f1078dd62f6e8937d1f48f1f77f0a78e19e", "patch": "@@ -0,0 +1,11 @@\n+// PR sanitizer/80349\n+// { dg-do compile }\n+// { dg-options \"-fsanitize=undefined\" }\n+\n+extern const long long int v;\n+\n+void\n+foo ()\n+{\n+  (int)((v & 50 | 051UL) << 0) << 0;\n+}"}]}