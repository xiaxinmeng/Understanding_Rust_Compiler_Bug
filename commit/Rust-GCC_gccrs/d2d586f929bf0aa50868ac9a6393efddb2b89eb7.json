{"sha": "d2d586f929bf0aa50868ac9a6393efddb2b89eb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkNTg2ZjkyOWJmMGFhNTA4NjhhYzlhNjM5M2VmZGRiMmI4OWViNw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-06-01T00:30:37Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-06-01T00:30:37Z"}, "message": "intrinsic.texi: Revert wrong commit.\n\n2008-05-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\t* intrinsic.texi: Revert wrong commit.\n\nFrom-SVN: r136249", "tree": {"sha": "a05a9fce30e37d5f00a99ad03af628def1bea3c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a05a9fce30e37d5f00a99ad03af628def1bea3c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2d586f929bf0aa50868ac9a6393efddb2b89eb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d586f929bf0aa50868ac9a6393efddb2b89eb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d586f929bf0aa50868ac9a6393efddb2b89eb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d586f929bf0aa50868ac9a6393efddb2b89eb7/comments", "author": null, "committer": null, "parents": [{"sha": "e6a29ed8b17ec5eb9c9afd02278445b4b162242a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6a29ed8b17ec5eb9c9afd02278445b4b162242a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6a29ed8b17ec5eb9c9afd02278445b4b162242a"}], "stats": {"total": 43, "additions": 4, "deletions": 39}, "files": [{"sha": "a928c25b386ac0688789ffbc349d1fa841f8e6b3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d586f929bf0aa50868ac9a6393efddb2b89eb7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d586f929bf0aa50868ac9a6393efddb2b89eb7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d2d586f929bf0aa50868ac9a6393efddb2b89eb7", "patch": "@@ -1,3 +1,7 @@\n+2008-05-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* intrinsic.texi: Revert wrong commit.\n+\n 2008-05-31  Steven G. Kargl  <kargls@comcast.net>\n \n \t* arith.c (gfc_arith_init_1): Remove now unused r and c variables."}, {"sha": "6852d64387e141d4d1bc4c9c255af7fd1954b0b7", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d586f929bf0aa50868ac9a6393efddb2b89eb7/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d586f929bf0aa50868ac9a6393efddb2b89eb7/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=d2d586f929bf0aa50868ac9a6393efddb2b89eb7", "patch": "@@ -1005,29 +1005,16 @@ Function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-<<<<<<< .mine\n-@item @var{I} @tab The type shall be either a scalar @code{INTEGER(*)}\n-type or a scalar @code{LOGICAL} type.\n-@item @var{J} @tab The type shall be the same as the type of @var{I}.\n-=======\n @item @var{I} @tab The type shall be either a scalar @code{INTEGER}\n type or a scalar @code{LOGICAL} type.\n @item @var{J} @tab The type shall be the same as the type of @var{I}.\n->>>>>>> .r136053\n @end multitable\n \n @item @emph{Return value}:\n-<<<<<<< .mine\n-The return type is either a scalar @code{INTEGER(*)} or a scalar\n-@code{LOGICAL}.  If the kind type parameters differ, then the\n-smaller kind type is implicitly converted to larger kind, and the \n-return has the larger kind.\n-=======\n The return type is either a scalar @code{INTEGER} or a scalar\n @code{LOGICAL}.  If the kind type parameters differ, then the\n smaller kind type is implicitly converted to larger kind, and the \n return has the larger kind.\n->>>>>>> .r136053\n \n @item @emph{Example}:\n @smallexample\n@@ -8323,29 +8310,16 @@ Function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-<<<<<<< .mine\n-@item @var{X} @tab The type shall be either a scalar @code{INTEGER(*)}\n-type or a scalar @code{LOGICAL} type.\n-@item @var{Y} @tab The type shall be the same as the type of @var{X}.\n-=======\n @item @var{X} @tab The type shall be either a scalar @code{INTEGER}\n type or a scalar @code{LOGICAL} type.\n @item @var{Y} @tab The type shall be the same as the type of @var{X}.\n->>>>>>> .r136053\n @end multitable\n \n @item @emph{Return value}:\n-<<<<<<< .mine\n-The return type is either a scalar @code{INTEGER(*)} or a scalar\n-@code{LOGICAL}.  If the kind type parameters differ, then the\n-smaller kind type is implicitly converted to larger kind, and the \n-return has the larger kind.\n-=======\n The return type is either a scalar @code{INTEGER} or a scalar\n @code{LOGICAL}.  If the kind type parameters differ, then the\n smaller kind type is implicitly converted to larger kind, and the \n return has the larger kind.\n->>>>>>> .r136053\n \n @item @emph{Example}:\n @smallexample\n@@ -11081,29 +11055,16 @@ Function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-<<<<<<< .mine\n-@item @var{X} @tab The type shall be either  a scalar @code{INTEGER(*)}\n-type or a scalar @code{LOGICAL} type.\n-@item @var{Y} @tab The type shall be the same as the type of @var{I}.\n-=======\n @item @var{X} @tab The type shall be either  a scalar @code{INTEGER}\n type or a scalar @code{LOGICAL} type.\n @item @var{Y} @tab The type shall be the same as the type of @var{I}.\n->>>>>>> .r136053\n @end multitable\n \n @item @emph{Return value}:\n-<<<<<<< .mine\n-The return type is either a scalar @code{INTEGER(*)} or a scalar\n-@code{LOGICAL}.  If the kind type parameters differ, then the\n-smaller kind type is implicitly converted to larger kind, and the \n-return has the larger kind.\n-=======\n The return type is either a scalar @code{INTEGER} or a scalar\n @code{LOGICAL}.  If the kind type parameters differ, then the\n smaller kind type is implicitly converted to larger kind, and the \n return has the larger kind.\n->>>>>>> .r136053\n \n @item @emph{Example}:\n @smallexample"}]}