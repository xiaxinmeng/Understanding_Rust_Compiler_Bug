{"sha": "58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiOWRlOWVmNTIzODM0N2NjODVjN2QzZTQwMjYxYzNhM2UyOGU2Yw==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2018-06-28T15:31:24Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2018-06-28T15:31:24Z"}, "message": "re PR fortran/82865 (Option -fdec collides with PDT)\n\n2018-06-28  Fritz Reese  <fritzoreese@gmail.com>\n\n    gcc/fortran/ChangeLog:\n\n\tPR fortran/82865\n\t* decl.c (gfc_match_type): Refactor and check for PDT declarations.\n\n    gcc/testsuite/ChangeLog:\n\n\tPR fortran/82865\n\t* gfortran.dg/dec_type_print_2.f03: New testcase.\n\nFrom-SVN: r262221", "tree": {"sha": "dd768b43ff29c2a514c6fcdeccb5f39f938856f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd768b43ff29c2a514c6fcdeccb5f39f938856f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99"}], "stats": {"total": 135, "additions": 103, "deletions": 32}, "files": [{"sha": "e11f34a2caa2362fe6767593ad04ca2ffcccd579", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "patch": "@@ -1,3 +1,8 @@\n+2018-06-28  Fritz Reese  <fritzoreese@gmail.com>\n+\n+\tPR fortran/82865\n+\t* decl.c (gfc_match_type): Refactor and check for PDT declarations.\n+\n 2018-06-28  Martin Liska  <mliska@suse.cz>\n \n \t* gfortranspec.c: Include opt-suggestions.h."}, {"sha": "09541da2577909e9c46aec30fb14d308ed32ae46", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "patch": "@@ -9803,9 +9803,9 @@ gfc_match_structure_decl (void)\n \n \n /* This function does some work to determine which matcher should be used to\n- * match a statement beginning with \"TYPE\". This is used to disambiguate TYPE\n+ * match a statement beginning with \"TYPE\".  This is used to disambiguate TYPE\n  * as an alias for PRINT from derived type declarations, TYPE IS statements,\n- * and derived type data declarations.  */\n+ * and [parameterized] derived type declarations.  */\n \n match\n gfc_match_type (gfc_statement *st)\n@@ -9832,11 +9832,7 @@ gfc_match_type (gfc_statement *st)\n   /* If we see an attribute list before anything else it's definitely a derived\n    * type declaration.  */\n   if (gfc_match (\" ,\") == MATCH_YES || gfc_match (\" ::\") == MATCH_YES)\n-    {\n-      gfc_current_locus = old_loc;\n-      *st = ST_DERIVED_DECL;\n-      return gfc_match_derived_decl ();\n-    }\n+    goto derived;\n \n   /* By now \"TYPE\" has already been matched. If we do not see a name, this may\n    * be something like \"TYPE *\" or \"TYPE <fmt>\".  */\n@@ -9851,29 +9847,11 @@ gfc_match_type (gfc_statement *st)\n \t  *st = ST_WRITE;\n \t  return MATCH_YES;\n \t}\n-      gfc_current_locus = old_loc;\n-      *st = ST_DERIVED_DECL;\n-      return gfc_match_derived_decl ();\n+      goto derived;\n     }\n \n-  /* A derived type declaration requires an EOS. Without it, assume print.  */\n-  m = gfc_match_eos ();\n-  if (m == MATCH_NO)\n-    {\n-      /* Check manually for TYPE IS (... - this is invalid print syntax.  */\n-      if (strncmp (\"is\", name, 3) == 0\n-\t  && gfc_match (\" (\", name) == MATCH_YES)\n-\t{\n-\t  gfc_current_locus = old_loc;\n-\t  gcc_assert (gfc_match (\" is\") == MATCH_YES);\n-\t  *st = ST_TYPE_IS;\n-\t  return gfc_match_type_is ();\n-\t}\n-      gfc_current_locus = old_loc;\n-      *st = ST_WRITE;\n-      return gfc_match_print ();\n-    }\n-  else\n+  /* Check for EOS.  */\n+  if (gfc_match_eos () == MATCH_YES)\n     {\n       /* By now we have \"TYPE <name> <EOS>\". Check first if the name is an\n        * intrinsic typename - if so let gfc_match_derived_decl dump an error.\n@@ -9886,12 +9864,36 @@ gfc_match_type (gfc_statement *st)\n \t  *st = ST_DERIVED_DECL;\n \t  return m;\n \t}\n-      gfc_current_locus = old_loc;\n-      *st = ST_WRITE;\n-      return gfc_match_print ();\n     }\n+  else\n+    {\n+      /* Here we have \"TYPE <name>\". Check for <TYPE IS (> or a PDT declaration\n+\t like <type name(parameter)>.  */\n+      gfc_gobble_whitespace ();\n+      bool paren = gfc_peek_ascii_char () == '(';\n+      if (paren)\n+\t{\n+\t  if (strcmp (\"is\", name) == 0)\n+\t    goto typeis;\n+\t  else\n+\t    goto derived;\n+\t}\n+    }\n+\n+  /* Treat TYPE... like PRINT...  */\n+  gfc_current_locus = old_loc;\n+  *st = ST_WRITE;\n+  return gfc_match_print ();\n \n-  return MATCH_NO;\n+derived:\n+  gfc_current_locus = old_loc;\n+  *st = ST_DERIVED_DECL;\n+  return gfc_match_derived_decl ();\n+\n+typeis:\n+  gfc_current_locus = old_loc;\n+  *st = ST_TYPE_IS;\n+  return gfc_match_type_is ();\n }\n \n "}, {"sha": "c95ec808b74d92bb2f6d245963469323e3e41d8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "patch": "@@ -1,3 +1,8 @@\n+2018-06-28  Fritz Reese  <fritzoreese@gmail.com>\n+\n+\tPR fortran/82865\n+\t* gfortran.dg/dec_type_print_2.f03: New testcase.\n+\n 2018-06-28  David Pagan  <dave.pagan@oracle.com>\n \n \tPR c/55976"}, {"sha": "31b8c3ad934a9388c8a794b4380b1399ea3144d0", "filename": "gcc/testsuite/gfortran.dg/dec_type_print_2.f03", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_type_print_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b9de9ef5238347cc85c7d3e40261c3a3e28e6c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_type_print_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_type_print_2.f03?ref=58b9de9ef5238347cc85c7d3e40261c3a3e28e6c", "patch": "@@ -0,0 +1,59 @@\n+! { dg-do run }\n+! { dg-options \"-fdec -fcheck=all\" }\n+!\n+! Verify that -fdec does not break parsing of PDTs.\n+! This test code is copied from pdt_1.f03 but compiled with -fdec.\n+!\n+program main\n+  implicit none\n+  integer, parameter :: ftype = kind(0.0e0)\n+  integer :: pdt_len = 4\n+  integer :: i\n+  type :: mytype (a,b)\n+    integer, kind :: a = kind(0.0d0)\n+    integer, LEN :: b\n+    integer :: i\n+    real(kind = a) :: d(b, b)\n+    character (len = b*b) :: chr\n+  end type\n+\n+  type(mytype(b=4)) :: z(2)\n+  type(mytype(ftype, 4)) :: z2\n+\n+  z(1)%i = 1\n+  z(2)%i = 2\n+  z(1)%d = reshape ([(real(i), i = 1, 16)],[4,4])\n+  z(2)%d = 10*z(1)%d\n+  z(1)%chr = \"hello pdt\"\n+  z(2)%chr = \"goodbye pdt\"\n+\n+  z2%d = z(1)%d * 10 - 1\n+  z2%chr = \"scalar pdt\"\n+\n+  call foo (z)\n+  call bar (z)\n+  call foobar (z2)\n+contains\n+  elemental subroutine foo (arg)\n+    type(mytype(8,*)), intent(in) :: arg\n+    if (arg%i .eq. 1) then\n+      if (trim (arg%chr) .ne. \"hello pdt\") error stop\n+      if (int (sum (arg%d)) .ne. 136) error stop\n+    else if (arg%i .eq. 2 ) then\n+      if (trim (arg%chr) .ne. \"goodbye pdt\") error stop\n+      if (int (sum (arg%d)) .ne. 1360) error stop\n+    else\n+      error stop\n+    end if\n+  end subroutine\n+  subroutine bar (arg)\n+    type(mytype(b=4)) :: arg(:)\n+    if (int (sum (arg(1)%d)) .ne. 136) call abort\n+    if (trim (arg(2)%chr) .ne. \"goodbye pdt\") call abort\n+  end subroutine\n+  subroutine foobar (arg)\n+    type(mytype(ftype, pdt_len)) :: arg\n+    if (int (sum (arg%d)) .ne. 1344) call abort\n+    if (trim (arg%chr) .ne. \"scalar pdt\") call abort\n+  end subroutine\n+end"}]}