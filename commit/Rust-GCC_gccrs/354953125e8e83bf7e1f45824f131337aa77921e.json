{"sha": "354953125e8e83bf7e1f45824f131337aa77921e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU0OTUzMTI1ZThlODNiZjdlMWY0NTgyNGYxMzEzMzdhYTc3OTIxZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2001-08-14T23:16:57Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2001-08-14T23:16:57Z"}, "message": "Added atomicity.h header for s390.\n\nFrom-SVN: r44907", "tree": {"sha": "dafd884d004f972b8787331cdf17811d290408ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dafd884d004f972b8787331cdf17811d290408ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/354953125e8e83bf7e1f45824f131337aa77921e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354953125e8e83bf7e1f45824f131337aa77921e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354953125e8e83bf7e1f45824f131337aa77921e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354953125e8e83bf7e1f45824f131337aa77921e/comments", "author": null, "committer": null, "parents": [{"sha": "8e0bcac8f33c7b39b33b69151d62af99dc0d4b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e0bcac8f33c7b39b33b69151d62af99dc0d4b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e0bcac8f33c7b39b33b69151d62af99dc0d4b4f"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "bee4b92942a42e6c92b2fad286807c53b699bac1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354953125e8e83bf7e1f45824f131337aa77921e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354953125e8e83bf7e1f45824f131337aa77921e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=354953125e8e83bf7e1f45824f131337aa77921e", "patch": "@@ -1,3 +1,10 @@\n+2001-08-14  Ulrich Weigand  <uweigand@de.ibm.com>\n+ \n+\t* configure.target (cpu_include_dir): Set to `config/cpu/s390'\n+\tfor s390 and s390x.\n+ \n+\t* config/cpu/s390/bits/atomicity.h: New.\n+\n 2001-08-14  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* include/bits/std_limits.h: Fix thinko."}, {"sha": "331c29a570acff6033de741f07c3fceeccbc0e01", "filename": "libstdc++-v3/config/cpu/s390/bits/atomicity.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354953125e8e83bf7e1f45824f131337aa77921e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354953125e8e83bf7e1f45824f131337aa77921e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fbits%2Fatomicity.h?ref=354953125e8e83bf7e1f45824f131337aa77921e", "patch": "@@ -0,0 +1,60 @@\n+// Low-level functions for atomic operations: S/390 version  -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _BITS_ATOMICITY_H\n+#define _BITS_ATOMICITY_H\t1\n+\n+typedef int _Atomic_word;\n+\n+static inline _Atomic_word \n+__attribute__ ((__unused__))\n+__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+{\n+  register _Atomic_word __old_val, __new_val;\n+\n+  __asm__ __volatile__ (\"   l     %0,0(%2)\\n\"\n+                        \"0: lr    %1,%0\\n\"\n+                        \"   ar    %1,%3\\n\"\n+                        \"   cs    %0,%1,0(%2)\\n\"\n+                        \"   jl    0b\"\n+                        : \"=&d\" (__old_val), \"=&d\" (__new_val)\n+                        : \"a\" (__mem), \"d\" (__val) : \"cc\", \"memory\" );\n+  return __old_val;\n+}\n+\n+static inline void\n+__attribute__ ((__unused__))\n+__atomic_add (volatile _Atomic_word *__mem, int __val)\n+{\n+  __exchange_and_add (__mem, __val);\n+}\n+\n+#endif /* atomicity.h */\n+\n+"}, {"sha": "c82bedcb60388b5cbcc8cda22212dac8c9a8a279", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354953125e8e83bf7e1f45824f131337aa77921e/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354953125e8e83bf7e1f45824f131337aa77921e/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=354953125e8e83bf7e1f45824f131337aa77921e", "patch": "@@ -42,6 +42,9 @@ case \"${target_cpu}\" in\n   powerpc | rs6000)\n     cpu_include_dir=\"config/cpu/powerpc\"\n     ;;\n+  s390 | s390x)\n+    cpu_include_dir=\"config/cpu/s390\"\n+    ;;\n   sparc64 | ultrasparc)\n     cpu_include_dir=\"config/cpu/sparc/sparc64\"\n     ;;"}]}