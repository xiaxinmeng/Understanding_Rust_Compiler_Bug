{"sha": "79f963744b68604889169a543b402e441f076b28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlmOTYzNzQ0YjY4NjA0ODg5MTY5YTU0M2I0MDJlNDQxZjA3NmIyOA==", "commit": {"author": {"name": "David Billinghurst", "email": "David.Billinghurst@riotinto.com", "date": "2001-03-20T17:42:56Z"}, "committer": {"name": "Christopher Faylor", "email": "cgf@gcc.gnu.org", "date": "2001-03-20T17:42:56Z"}, "message": "cygwin.h: Declare ctor_section, dtor_section drectve_section, switch_to_section.\n\n* config/i386/cygwin.h: Declare ctor_section, dtor_section drectve_section,\nswitch_to_section.\n* winnt.c: Declare functions associated_type, gen_stdcall_suffix,\ni386_pe_dllexport_p, i386_pe_dllimport_p, i386_pe_mark_dllexport,\ni386_pe_mark_dllimport.\n* config/i386/cygwin.h: Include <stdio.h> Declare and constify functions\ni386_pe_*.\n* config/i386/winnt.c: Include \"tm_p.h\" and \"toplev.h\" Constify i386_pe_*\nfunctions with char * arguments.\n\nFrom-SVN: r40661", "tree": {"sha": "be70b5e7786a22bf1063d9fd66a1cbe2df6f79bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be70b5e7786a22bf1063d9fd66a1cbe2df6f79bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79f963744b68604889169a543b402e441f076b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f963744b68604889169a543b402e441f076b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79f963744b68604889169a543b402e441f076b28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f963744b68604889169a543b402e441f076b28/comments", "author": null, "committer": null, "parents": [{"sha": "f8c02bc55a20d70e5edc71b42129909324eb5c8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c02bc55a20d70e5edc71b42129909324eb5c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c02bc55a20d70e5edc71b42129909324eb5c8e"}], "stats": {"total": 71, "additions": 53, "deletions": 18}, "files": [{"sha": "35616442414ddde4f63a6812ba4752202dcb8c38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f963744b68604889169a543b402e441f076b28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f963744b68604889169a543b402e441f076b28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79f963744b68604889169a543b402e441f076b28", "patch": "@@ -1,3 +1,20 @@\n+2001-03-20  David Billinghurst  <David.Billinghurst@riotinto.com>\n+\n+\t* config/i386/cygwin.h: Declare ctor_section, dtor_section\n+\tdrectve_section, switch_to_section.\n+\n+\t* winnt.c: Declare functions associated_type, gen_stdcall_suffix,\n+\ti386_pe_dllexport_p, i386_pe_dllimport_p, i386_pe_mark_dllexport,\n+\ti386_pe_mark_dllimport.\n+\n+2001-03-20  David Billinghurst <David.Billinghurst@riotinto.com>\n+  \n+\t* config/i386/cygwin.h: Include <stdio.h> Declare and constify\n+\tfunctions i386_pe_*.\n+\n+\t* config/i386/winnt.c: Include \"tm_p.h\" and \"toplev.h\" Constify\n+\ti386_pe_* functions with char * arguments.\n+\n 2001-03-20  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sh/sh.md (movsf_ie): Fix output patterns for fpul load"}, {"sha": "ed2995b1774dd793addfcc03bd6fc43bd752e5ab", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f963744b68604889169a543b402e441f076b28/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f963744b68604889169a543b402e441f076b28/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=79f963744b68604889169a543b402e441f076b28", "patch": "@@ -26,6 +26,7 @@ Boston, MA 02111-1307, USA. */\n #define SDB_DEBUGGING_INFO \n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n+#include <stdio.h>\n #include \"i386/gas.h\"\n #include \"dbxcoff.h\"\n \n@@ -227,6 +228,7 @@ ctor_section ()\t\t\t\t\t\t\t\\\n       in_section = in_ctor;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n+void ctor_section PARAMS ((void));\n \n #define DTOR_SECTION_FUNCTION\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n@@ -238,6 +240,7 @@ dtor_section ()\t\t\t\t\t\t\t\\\n       in_section = in_dtor;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n+void dtor_section PARAMS ((void));\n \n #define DRECTVE_SECTION_FUNCTION \\\n void\t\t\t\t\t\t\t\t\t\\\n@@ -249,6 +252,7 @@ drectve_section ()\t\t\t\t\t\t\t\\\n       in_section = in_drectve;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n+void drectve_section PARAMS ((void));\n \n /* Switch to SECTION (an `enum in_section').\n \n@@ -257,6 +261,7 @@ drectve_section ()\t\t\t\t\t\t\t\\\n    ASM_DECLARE_OBJECT_NAME and then switch back to the original section\n    afterwards.  */\n #define SWITCH_TO_SECTION_FUNCTION \t\t\t\t\\\n+void switch_to_section PARAMS ((enum in_section, tree));        \\\n void \t\t\t\t\t\t\t\t\\\n switch_to_section (section, decl) \t\t\t\t\\\n      enum in_section section; \t\t\t\t\t\\\n@@ -536,10 +541,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* External function declarations.  */\n \n-extern void i386_pe_record_external_function PARAMS ((char *));\n-/* extern void i386_pe_declare_function_type PARAMS ((FILE *, char *, int)); */\n-extern void i386_pe_record_exported_symbol PARAMS ((char *, int));\n-/* extern void i386_pe_asm_file_end PARAMS ((FILE *)); */\n+extern void i386_pe_record_external_function PARAMS ((const char *));\n+extern void i386_pe_declare_function_type PARAMS ((FILE *, const char *, int));\n+extern void i386_pe_record_exported_symbol PARAMS ((const char *, int));\n+extern void i386_pe_asm_file_end PARAMS ((FILE *));\n+extern int i386_pe_dllexport_name_p PARAMS ((const char *));\n+extern int i386_pe_dllimport_name_p PARAMS ((const char *));\n \n /* For Win32 ABI compatibility */\n #undef DEFAULT_PCC_STRUCT_RETURN"}, {"sha": "39074cc1c6c8e642ee68d3f1d254abad9d4ddd48", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f963744b68604889169a543b402e441f076b28/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f963744b68604889169a543b402e441f076b28/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=79f963744b68604889169a543b402e441f076b28", "patch": "@@ -27,6 +27,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n+#include \"tm_p.h\"\n+#include \"toplev.h\"\n \n /* i386/PE specific attribute support.\n \n@@ -39,6 +41,13 @@ Boston, MA 02111-1307, USA.  */\n    multiple times.\n */\n \n+static tree associated_type PARAMS ((tree));\n+const char * gen_stdcall_suffix PARAMS ((tree));\n+int i386_pe_dllexport_p PARAMS ((tree));\n+int i386_pe_dllimport_p PARAMS ((tree));\n+void i386_pe_mark_dllexport PARAMS ((tree));\n+void i386_pe_mark_dllimport PARAMS ((tree));\n+\n /* Return nonzero if ATTR is a valid attribute for DECL.\n    ATTRIBUTES are any existing attributes and ARGS are the arguments\n    supplied with ATTR.  */\n@@ -226,7 +235,7 @@ i386_pe_dllimport_p (decl)\n \n int\n i386_pe_dllexport_name_p (symbol)\n-     char *symbol;\n+     const char *symbol;\n {\n   return symbol[0] == '@' && symbol[1] == 'e' && symbol[2] == '.';\n }\n@@ -235,7 +244,7 @@ i386_pe_dllexport_name_p (symbol)\n \n int\n i386_pe_dllimport_name_p (symbol)\n-     char *symbol;\n+     const char *symbol;\n {\n   return symbol[0] == '@' && symbol[1] == 'i' && symbol[2] == '.';\n }\n@@ -247,7 +256,8 @@ void\n i386_pe_mark_dllexport (decl)\n      tree decl;\n {\n-  char *oldname, *newname;\n+  const char *oldname;\n+  char  *newname;\n   rtx rtlname;\n   tree idp;\n \n@@ -283,7 +293,8 @@ void\n i386_pe_mark_dllimport (decl)\n      tree decl;\n {\n-  char *oldname, *newname;\n+  const char *oldname;\n+  char  *newname;\n   tree idp;\n   rtx rtlname, newrtl;\n \n@@ -370,14 +381,14 @@ i386_pe_mark_dllimport (decl)\n    suffix consisting of an atsign (@) followed by the number of bytes of \n    arguments */\n \n-char *\n+const char *\n gen_stdcall_suffix (decl)\n   tree decl;\n {\n   int total = 0;\n   /* ??? This probably should use XSTR (XEXP (DECL_RTL (decl), 0), 0) instead\n      of DECL_ASSEMBLER_NAME.  */\n-  char *asmname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+  const char *asmname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n   char *newsym;\n \n   if (TYPE_ARG_TYPES (TREE_TYPE (decl)))\n@@ -444,7 +455,7 @@ i386_pe_encode_section_info (decl)\n \t   && GET_CODE (XEXP (XEXP (DECL_RTL (decl), 0), 0)) == SYMBOL_REF\n \t   && i386_pe_dllimport_name_p (XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0)))\n     {\n-      char *oldname = XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0);\n+      const char *oldname = XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0);\n       tree idp = get_identifier (oldname + 9);\n       rtx newrtl = gen_rtx (SYMBOL_REF, Pmode, IDENTIFIER_POINTER (idp));\n \n@@ -465,8 +476,8 @@ i386_pe_unique_section (decl, reloc)\n      int reloc;\n {\n   int len;\n-  const char *name;\n-  char *string,*prefix;\n+  const char *name, *prefix;\n+  char *string;\n \n   name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n   /* Strip off any encoding in fnname.  */\n@@ -513,7 +524,7 @@ i386_pe_unique_section (decl, reloc)\n void\n i386_pe_declare_function_type (file, name, public)\n      FILE *file;\n-     char *name;\n+     const char *name;\n      int public;\n {\n   fprintf (file, \"\\t.def\\t\");\n@@ -528,7 +539,7 @@ i386_pe_declare_function_type (file, name, public)\n struct extern_list\n {\n   struct extern_list *next;\n-  char *name;\n+  const char *name;\n };\n \n static struct extern_list *extern_head;\n@@ -541,7 +552,7 @@ static struct extern_list *extern_head;\n \n void\n i386_pe_record_external_function (name)\n-     char *name;\n+     const char *name;\n {\n   struct extern_list *p;\n \n@@ -556,7 +567,7 @@ i386_pe_record_external_function (name)\n struct export_list\n {\n   struct export_list *next;\n-  char *name;\n+  const char *name;\n   int is_data;\t\t/* used to type tag exported symbols. */\n };\n \n@@ -570,7 +581,7 @@ static struct export_list *export_head;\n \n void\n i386_pe_record_exported_symbol (name, is_data)\n-     char *name;\n+     const char *name;\n      int is_data;\n {\n   struct export_list *p;"}]}