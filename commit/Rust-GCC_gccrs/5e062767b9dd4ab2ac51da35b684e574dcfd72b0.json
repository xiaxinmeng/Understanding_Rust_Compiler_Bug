{"sha": "5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUwNjI3NjdiOWRkNGFiMmFjNTFkYTM1YjY4NGU1NzRkY2ZkNzJiMA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-02-07T22:10:56Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-02-07T22:10:56Z"}, "message": "i386.h (MS_AGGREGATE_RETURN): New define.\n\n\t* config/i386/i386.h (MS_AGGREGATE_RETURN): New define.\n\t* config/i386/cygwin.h (MS_AGGREGATE_RETURN): Override default\n\tdefinition.\n\t* config/i386/i386.h (ix86_return_in_memory): Return aggregate\n\ttypes of up to 8 bytes via registers if MS_AGGREGATE_RETURN.\n\nFrom-SVN: r62547", "tree": {"sha": "d107b6618e9140191b8cee61ba375eec8558425d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d107b6618e9140191b8cee61ba375eec8558425d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/comments", "author": null, "committer": null, "parents": [{"sha": "b0b74f371eb96d60047b221711bb98361fde5f58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b74f371eb96d60047b221711bb98361fde5f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0b74f371eb96d60047b221711bb98361fde5f58"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "7df730259bc490cc5d76808a5c296ce89004a2bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "patch": "@@ -1,3 +1,11 @@\n+2003-03-07  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/i386/i386.h (MS_AGGREGATE_RETURN): New define.\n+\t* config/i386/cygwin.h (MS_AGGREGATE_RETURN): Override default\n+\tdefinition.\n+\t* config/i386/i386.h (ix86_return_in_memory): Return aggregate\n+\ttypes of up to 8 bytes via registers if MS_AGGREGATE_RETURN.\n+\n Fri Feb  7 22:22:40 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (movdi_rex64_1): Fix mmx<->int move opcode."}, {"sha": "085c3e78fe09ddcab2089cac82b28880d03112e0", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "patch": "@@ -410,6 +410,11 @@ extern int i386_pe_dllimport_name_p PARAMS ((const char *));\n #undef DEFAULT_PCC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n+/* MSVC returns aggregate types of up to 8 bytes via registers.\n+   See i386.c:ix86_return_in_memory.  */\n+#undef MS_AGGREGATE_RETURN\n+#define MS_AGGREGATE_RETURN 1\n+\n /* No data type wants to be aligned rounder than this.  */\n #undef\tBIGGEST_ALIGNMENT\n #define BIGGEST_ALIGNMENT 128"}, {"sha": "def53d052d00345615b65867ac7935ba9607fe5d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "patch": "@@ -2608,12 +2608,18 @@ ix86_return_in_memory (type)\n     }\n   else\n     {\n-      if (TYPE_MODE (type) == BLKmode\n-\t  || (VECTOR_MODE_P (TYPE_MODE (type))\n-\t      && int_size_in_bytes (type) == 8)\n-\t  || (int_size_in_bytes (type) > 12 && TYPE_MODE (type) != TImode\n-\t      && TYPE_MODE (type) != TFmode\n-\t      && !VECTOR_MODE_P (TYPE_MODE (type))))\n+      if (TYPE_MODE (type) == BLKmode)\n+\treturn 1;\n+      else if (MS_AGGREGATE_RETURN\n+\t       && AGGREGATE_TYPE_P (type)\n+\t       && int_size_in_bytes(type) <= 8)\n+\treturn 0;\n+      else if ((VECTOR_MODE_P (TYPE_MODE (type))\n+\t        && int_size_in_bytes (type) == 8)\n+\t       || (int_size_in_bytes (type) > 12\n+\t\t   && TYPE_MODE (type) != TImode\n+\t\t   && TYPE_MODE (type) != TFmode\n+\t\t   && !VECTOR_MODE_P (TYPE_MODE (type))))\n \treturn 1;\n       return 0;\n     }"}, {"sha": "8373e3250a6e6101006373c968ab0f00be151c0b", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e062767b9dd4ab2ac51da35b684e574dcfd72b0/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5e062767b9dd4ab2ac51da35b684e574dcfd72b0", "patch": "@@ -1208,6 +1208,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define RETURN_IN_MEMORY(TYPE) \\\n   ix86_return_in_memory (TYPE)\n \n+/* This is overriden by <cygwin.h>.  */\n+#define MS_AGGREGATE_RETURN 0\n+\n \f\n /* Define the classes of registers for register constraints in the\n    machine description.  Also define ranges of constants."}]}