{"sha": "502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAyYmMzZGZhMmViMTQwODllYWFkZWI4ZWE0NTkyYzYwYTk0NGU1Ng==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-05-04T11:04:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-05-04T11:04:50Z"}, "message": "* config/alpha/alpha.h (CODE_MASK, MIPS_IS_STAB, MIPS_MARK_STAB)\n\t(MIPS_UNMARK_STAB, SHASH_SIZE, THASH_SIZE, ALIGN_SYMTABLE_OFFSET):\n\tMove ...\n\t* mips-tfile.c: ... here.\n\tDon't include coretypes.h, tm.h, filenames.h.\n\t(saber_stop): Remove definition and all calls.\n\t[__SABER__]: Remove.\n\t(__LINE__): Remove default.\n\t(Size_t, Ptrdiff_t): Remove definitions.\n\tReplace by size_t, ptrdiff_t.\n\t[!MIPS_DEBUGGING_INFO]: Remove.\n\t(SHASH_SIZE, THASH_SIZE): Remove defaults.\n\t(progname): Add const.\n\t(STATIC): Remove.\n\tReplace all uses by static.\n\t(ALIGN_SYMTABLE_OFFSET): Remove default.\n\t* mips-tdump.c: Don't include coretypes.h, tm.h.\n\tRemove !MIPS_IS_STAB guard.\n\t* Makefile.in (mips-tfile.o): Remove $(RTL_H), coretypes.h,\n\t$(TM_H), filenames.h dependencies.\n\t(mips-tdump.o): Remove $(RTL_H), coretypes.h, $(TM_H) dependencies.\n\nFrom-SVN: r173367", "tree": {"sha": "1b72002913dc44f7cb6b5360ba296e6dbed42fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b72002913dc44f7cb6b5360ba296e6dbed42fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "991eb6effea6272dcacd6ab1b79eb5ffc7ed8bc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991eb6effea6272dcacd6ab1b79eb5ffc7ed8bc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991eb6effea6272dcacd6ab1b79eb5ffc7ed8bc2"}], "stats": {"total": 407, "additions": 168, "deletions": 239}, "files": [{"sha": "287615ec1c34e9e67362f1aa5ba07adacfd16c06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "patch": "@@ -1,3 +1,27 @@\n+2011-05-04  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/alpha.h (CODE_MASK, MIPS_IS_STAB, MIPS_MARK_STAB)\n+\t(MIPS_UNMARK_STAB, SHASH_SIZE, THASH_SIZE, ALIGN_SYMTABLE_OFFSET):\n+\tMove ...\n+\t* mips-tfile.c: ... here.\n+\tDon't include coretypes.h, tm.h, filenames.h.\n+\t(saber_stop): Remove definition and all calls.\n+\t[__SABER__]: Remove.\n+\t(__LINE__): Remove default.\n+\t(Size_t, Ptrdiff_t): Remove definitions.\n+\tReplace by size_t, ptrdiff_t.\n+\t[!MIPS_DEBUGGING_INFO]: Remove.\n+\t(SHASH_SIZE, THASH_SIZE): Remove defaults.\n+\t(progname): Add const.\n+\t(STATIC): Remove.\n+\tReplace all uses by static.\n+\t(ALIGN_SYMTABLE_OFFSET): Remove default.\n+\t* mips-tdump.c: Don't include coretypes.h, tm.h.\n+\tRemove !MIPS_IS_STAB guard.\n+\t* Makefile.in (mips-tfile.o): Remove $(RTL_H), coretypes.h,\n+\t$(TM_H), filenames.h dependencies.\n+\t(mips-tdump.o): Remove $(RTL_H), coretypes.h, $(TM_H) dependencies.\n+\n 2011-05-04  Stuart Henderson  <shenders@gcc.gnu.org>\n \n \tFrom Jie Zhang"}, {"sha": "078ecbc3f444c5f745557812ae03a71cc7b5f575", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "patch": "@@ -3520,15 +3520,15 @@ mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n \t$(LINKER) $(LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\tmips-tfile.o version.o $(LIBS)\n \n-mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) version.h $(srcdir)/../include/getopt.h $(GSTAB_H) intl.h\n+mips-tfile.o : mips-tfile.c $(CONFIG_H) $(SYSTEM_H) \\\n+   version.h $(srcdir)/../include/getopt.h $(GSTAB_H) intl.h\n \n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n \t$(LINKER) $(LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\tmips-tdump.o version.o $(LIBS)\n \n-mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) version.h $(srcdir)/../include/getopt.h stab.def\n+mips-tdump.o : mips-tdump.c $(CONFIG_H) $(SYSTEM_H) \\\n+   version.h $(srcdir)/../include/getopt.h stab.def\n \n #\f\n # Generate header and source files from the machine description,"}, {"sha": "cc16cfa974e45f260f9103e32b831b7318753867", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "patch": "@@ -1294,25 +1294,5 @@ do {\t\t\t\t\t\t\t\\\n \n #define PUT_SDB_EPILOGUE_END(NAME) ((void)(NAME))\n \n-/* Macros for mips-tfile.c to encapsulate stabs in ECOFF, and for\n-   mips-tdump.c to print them out.\n-\n-   These must match the corresponding definitions in gdb/mipsread.c.\n-   Unfortunately, gcc and gdb do not currently share any directories.  */\n-\n-#define CODE_MASK 0x8F300\n-#define MIPS_IS_STAB(sym) (((sym)->index & 0xFFF00) == CODE_MASK)\n-#define MIPS_MARK_STAB(code) ((code)+CODE_MASK)\n-#define MIPS_UNMARK_STAB(code) ((code)-CODE_MASK)\n-\n-/* Override some mips-tfile definitions.  */\n-\n-#define SHASH_SIZE 511\n-#define THASH_SIZE 55\n-\n-/* Align ecoff symbol tables to avoid OSF1/1.3 nm complaints.  */\n-\n-#define ALIGN_SYMTABLE_OFFSET(OFFSET) (((OFFSET) + 7) & ~7)\n-\n /* The system headers under Alpha systems are generally C++-aware.  */\n #define NO_IMPLICIT_EXTERN_C"}, {"sha": "ec9ceb0cecc0884ecfd61e1063dfc884dcbd00f7", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "patch": "@@ -22,8 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n #include \"version.h\"\n #ifdef index\n #undef index\n@@ -37,10 +35,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Include getopt.h for the sake of getopt_long.  */\n #include \"getopt.h\"\n \n-#ifndef MIPS_IS_STAB\n /* Macros for mips-tfile.c to encapsulate stabs in ECOFF, and for\n-   and mips-tdump.c to print them out.  This is used on the Alpha,\n-   which does not include mips.h.\n+   mips-tdump.c to print them out.\n \n    These must match the corresponding definitions in gdb/mipsread.c.\n    Unfortunately, gcc and gdb do not currently share any directories.  */\n@@ -49,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #define MIPS_IS_STAB(sym) (((sym)->index & 0xFFF00) == CODE_MASK)\n #define MIPS_MARK_STAB(code) ((code)+CODE_MASK)\n #define MIPS_UNMARK_STAB(code) ((code)-CODE_MASK)\n-#endif\n \n #define uchar\tunsigned char\n #define ushort\tunsigned short"}, {"sha": "af0b248f841f3b8211391f7f583012028e00ef46", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 139, "deletions": 209, "changes": 348, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502bc3dfa2eb14089eaadeb8ea4592c60a944e56/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=502bc3dfa2eb14089eaadeb8ea4592c60a944e56", "patch": "@@ -602,37 +602,22 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n #include \"version.h\"\n #include \"intl.h\"\n-#include \"filenames.h\"\n-\n-#ifndef __SABER__\n-#define saber_stop()\n-#endif\n \n /* Include getopt.h for the sake of getopt_long.  */\n #include \"getopt.h\"\n \n-#ifndef __LINE__\n-#define __LINE__ 0\n-#endif\n+/* Macros for mips-tfile.c to encapsulate stabs in ECOFF, and for\n+   mips-tdump.c to print them out.\n \n-/* Due to size_t being defined in sys/types.h and different\n-   in stddef.h, we have to do this by hand.....  Note, these\n-   types are correct for MIPS based systems, and may not be\n-   correct for other systems.  Ultrix 4.0 and Silicon Graphics\n-   have this fixed, but since the following is correct, and\n-   the fact that including stddef.h gets you GCC's version\n-   instead of the standard one it's not worth it to fix it.  */\n+   These must match the corresponding definitions in gdb/mipsread.c.\n+   Unfortunately, gcc and gdb do not currently share any directories.  */\n \n-#if defined(__OSF1__) || defined(__OSF__) || defined(__osf__)\n-#define Size_t\t\tlong unsigned int\n-#else\n-#define Size_t\t\tunsigned int\n-#endif\n-#define Ptrdiff_t\tlong\n+#define CODE_MASK 0x8F300\n+#define MIPS_IS_STAB(sym) (((sym)->index & 0xFFF00) == CODE_MASK)\n+#define MIPS_MARK_STAB(code) ((code)+CODE_MASK)\n+#define MIPS_UNMARK_STAB(code) ((code)-CODE_MASK)\n \n /* The following might be called from obstack or malloc,\n    so they can't be static.  */\n@@ -643,24 +628,6 @@ extern void botch (const char *) ATTRIBUTE_NORETURN;\n extern void fatal (const char *format, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n extern void error (const char *format, ...) ATTRIBUTE_PRINTF_1;\n \f\n-#ifndef MIPS_DEBUGGING_INFO\n-\n-static int\t line_number;\n-static int\t cur_line_start;\n-static int\t debug;\n-static int\t had_errors;\n-static const char *progname;\n-static const char *input_name;\n-\n-int\n-main (void)\n-{\n-  fprintf (stderr, \"Mips-tfile should only be run on a MIPS computer!\\n\");\n-  exit (1);\n-}\n-\n-#else\t\t\t\t/* MIPS_DEBUGGING defined */\n-\f\n /* The local and global symbols have a field index, so undo any defines\n    of index -> strchr.  */\n \n@@ -674,12 +641,6 @@ main (void)\n \n #include \"gstab.h\"\n \n-#ifndef MALLOC_CHECK\n-#ifdef\t__SABER__\n-#define MALLOC_CHECK\n-#endif\n-#endif\n-\n #define IS_ASM_IDENT(ch) \\\n   (ISIDNUM (ch) || (ch) == '.' || (ch) == '$')\n \n@@ -899,7 +860,7 @@ enum alloc_type {\n #define PAGE_SIZE 32768\t\t/* size of varray pages */\n #endif\n \n-#define PAGE_USIZE ((Size_t) PAGE_SIZE)\n+#define PAGE_USIZE ((size_t) PAGE_SIZE)\n \n \n #ifndef MAX_CLUSTER_PAGES\t/* # pages to get from system */\n@@ -1010,9 +971,7 @@ typedef union small_free {\n /* String hash table support.  The size of the hash table must fit\n    within a page.  */\n \n-#ifndef SHASH_SIZE\n-#define SHASH_SIZE 1009\n-#endif\n+#define SHASH_SIZE 511\n \n #define HASH_LEN_MAX ((1 << 12) - 1)\t/* Max length we can store */\n \n@@ -1034,9 +993,7 @@ typedef struct shash {\n    Because unique types which are hashed are fewer in number than\n    strings, we use a smaller hash value.  */\n \n-#ifndef THASH_SIZE\n-#define THASH_SIZE 113\n-#endif\n+#define THASH_SIZE 55\n \n typedef struct thash {\n   struct thash\t*next;\t\t/* next hash value */\n@@ -1494,7 +1451,7 @@ static unsigned long file_offset\t= 0;\t/* current file offset */\n static unsigned long max_file_offset\t= 0;\t/* maximum file offset */\n static FILE    *object_stream\t= (FILE *) 0;\t/* file desc. to output .o */\n static FILE    *obj_in_stream\t= (FILE *) 0;\t/* file desc. to input .o */\n-static char    *progname\t= (char *) 0;\t/* program name for errors */\n+static const char *progname\t= (const char *) 0;/* program name for errors */\n static const char *input_name\t= \"stdin\";\t/* name of input file */\n static char    *object_name\t= (char *) 0;\t/* tmp. name of object file */\n static char    *obj_in_name\t= (char *) 0;\t/* name of input object file */\n@@ -1522,68 +1479,64 @@ static const char stabs_symbol[] = STABS_SYMBOL;\n \f\n /* Forward reference for functions.  See the definition for more details.  */\n \n-#ifndef STATIC\n-#define STATIC static\n-#endif\n-\n-STATIC int out_of_bounds (symint_t, symint_t, const char *, int);\n-STATIC shash_t *hash_string (const char *, Ptrdiff_t, shash_t **, symint_t *);\n-STATIC symint_t\tadd_string (varray_t *, shash_t **, const char *, const char *,\n+static int out_of_bounds (symint_t, symint_t, const char *, int);\n+static shash_t *hash_string (const char *, ptrdiff_t, shash_t **, symint_t *);\n+static symint_t\tadd_string (varray_t *, shash_t **, const char *, const char *,\n \t\t\t    shash_t **);\n-STATIC symint_t\tadd_local_symbol (const char *, const char *, st_t, sc_t,\n+static symint_t\tadd_local_symbol (const char *, const char *, st_t, sc_t,\n \t\t\t\t  symint_t, symint_t);\n-STATIC symint_t\tadd_ext_symbol (EXTR *, int);\n-STATIC symint_t\tadd_aux_sym_symint (symint_t);\n-STATIC symint_t\tadd_aux_sym_rndx (int, symint_t);\n-STATIC symint_t\tadd_aux_sym_tir (type_info_t *, hash_state_t, thash_t **);\n-STATIC tag_t *\tget_tag (const char *, const char *, symint_t, bt_t);\n-STATIC void add_unknown_tag (tag_t *);\n-STATIC void add_procedure (const char *, const char *);\n-STATIC void initialize_init_file (void);\n-STATIC void add_file (const char *, const char *);\n-STATIC void add_bytes (varray_t *, char *, Size_t);\n-STATIC void add_varray_page (varray_t *);\n-STATIC void update_headers (void);\n-STATIC void write_varray (varray_t *, off_t, const char *);\n-STATIC void write_object (void);\n-STATIC const char *st_to_string (st_t);\n-STATIC const char *sc_to_string (sc_t);\n-STATIC char *read_line (void);\n-STATIC void parse_input (void);\n-STATIC void mark_stabs (const char *);\n-STATIC void parse_begin (const char *);\n-STATIC void parse_bend (const char *);\n-STATIC void parse_def (const char *);\n-STATIC void parse_end (const char *);\n-STATIC void parse_ent (const char *);\n-STATIC void parse_file (const char *);\n-STATIC void parse_stabs_common (const char *, const char *, const char *);\n-STATIC void parse_stabs (const char *);\n-STATIC void parse_stabn (const char *);\n-STATIC page_t  *read_seek (Size_t, off_t, const char *);\n-STATIC void copy_object (void);\n-\n-STATIC void catch_signal (int) ATTRIBUTE_NORETURN;\n-STATIC page_t *allocate_page (void);\n-STATIC page_t *allocate_multiple_pages (Size_t);\n-STATIC void\tfree_multiple_pages (page_t *, Size_t);\n+static symint_t\tadd_ext_symbol (EXTR *, int);\n+static symint_t\tadd_aux_sym_symint (symint_t);\n+static symint_t\tadd_aux_sym_rndx (int, symint_t);\n+static symint_t\tadd_aux_sym_tir (type_info_t *, hash_state_t, thash_t **);\n+static tag_t *\tget_tag (const char *, const char *, symint_t, bt_t);\n+static void add_unknown_tag (tag_t *);\n+static void add_procedure (const char *, const char *);\n+static void initialize_init_file (void);\n+static void add_file (const char *, const char *);\n+static void add_bytes (varray_t *, char *, size_t);\n+static void add_varray_page (varray_t *);\n+static void update_headers (void);\n+static void write_varray (varray_t *, off_t, const char *);\n+static void write_object (void);\n+static const char *st_to_string (st_t);\n+static const char *sc_to_string (sc_t);\n+static char *read_line (void);\n+static void parse_input (void);\n+static void mark_stabs (const char *);\n+static void parse_begin (const char *);\n+static void parse_bend (const char *);\n+static void parse_def (const char *);\n+static void parse_end (const char *);\n+static void parse_ent (const char *);\n+static void parse_file (const char *);\n+static void parse_stabs_common (const char *, const char *, const char *);\n+static void parse_stabs (const char *);\n+static void parse_stabn (const char *);\n+static page_t  *read_seek (size_t, off_t, const char *);\n+static void copy_object (void);\n+\n+static void catch_signal (int) ATTRIBUTE_NORETURN;\n+static page_t *allocate_page (void);\n+static page_t *allocate_multiple_pages (size_t);\n+static void\tfree_multiple_pages (page_t *, size_t);\n \n #ifndef MALLOC_CHECK\n-STATIC page_t  *allocate_cluster (Size_t);\n+static page_t  *allocate_cluster (size_t);\n #endif\n \n-STATIC forward_t *allocate_forward (void);\n-STATIC scope_t *allocate_scope (void);\n-STATIC shash_t *allocate_shash (void);\n-STATIC tag_t  *allocate_tag (void);\n-STATIC thash_t *allocate_thash (void);\n-STATIC thead_t *allocate_thead (void);\n-STATIC vlinks_t *allocate_vlinks (void);\n+static forward_t *allocate_forward (void);\n+static scope_t *allocate_scope (void);\n+static shash_t *allocate_shash (void);\n+static tag_t  *allocate_tag (void);\n+static thash_t *allocate_thash (void);\n+static thead_t *allocate_thead (void);\n+static vlinks_t *allocate_vlinks (void);\n \n-STATIC void free_forward (forward_t *);\n-STATIC void free_scope (scope_t *);\n-STATIC void free_tag (tag_t *);\n-STATIC void free_thead (thead_t *);\n+static void free_forward (forward_t *);\n+static void free_scope (scope_t *);\n+static void free_tag (tag_t *);\n+static void free_thead (thead_t *);\n \n extern char *optarg;\n extern int   optind;\n@@ -1626,7 +1579,7 @@ static const struct option options[] =\n \f\n /* Add a page to a varray object.  */\n \n-STATIC void\n+static void\n add_varray_page (varray_t *vp)\n {\n   vlinks_t *new_links = allocate_vlinks ();\n@@ -1659,12 +1612,12 @@ add_varray_page (varray_t *vp)\n \n #define HASHBITS 30\n \n-STATIC shash_t *\n-hash_string (const char *text, Ptrdiff_t hash_len, shash_t **hash_tbl,\n+static shash_t *\n+hash_string (const char *text, ptrdiff_t hash_len, shash_t **hash_tbl,\n \t     symint_t *ret_hash_index)\n {\n   unsigned long hi;\n-  Ptrdiff_t i;\n+  ptrdiff_t i;\n   shash_t *ptr;\n   int first_ch = *text;\n \n@@ -1695,15 +1648,15 @@ hash_string (const char *text, Ptrdiff_t hash_len, shash_t **hash_tbl,\n    starts at START and the position one byte after the string is given\n    with END_P1, the resulting hash pointer is returned in RET_HASH.  */\n \n-STATIC symint_t\n+static symint_t\n add_string (varray_t *vp, shash_t **hash_tbl, const char *start,\n \t    const char *end_p1, shash_t **ret_hash)\n {\n-  Ptrdiff_t len = end_p1 - start;\n+  ptrdiff_t len = end_p1 - start;\n   shash_t *hash_ptr;\n   symint_t hi;\n \n-  if (len >= (Ptrdiff_t) PAGE_USIZE)\n+  if (len >= (ptrdiff_t) PAGE_USIZE)\n     fatal (\"string too big (%ld bytes)\", (long) len);\n \n   hash_ptr = hash_string (start, len, hash_tbl, &hi);\n@@ -1747,7 +1700,7 @@ add_string (varray_t *vp, shash_t **hash_tbl, const char *start,\n    TYPE and storage class STORAGE and value VALUE.  INDX is an index\n    to local/aux. symbols.  */\n \n-STATIC symint_t\n+static symint_t\n add_local_symbol (const char *str_start, const char *str_end_p1, st_t type,\n \t\t  sc_t storage,  symint_t value, symint_t indx)\n {\n@@ -1909,7 +1862,7 @@ add_local_symbol (const char *str_start, const char *str_end_p1, st_t type,\n \t\t st_str, (int) (str_end_p1 - str_start), str_start);\n       else\n \t{\n-\t  Size_t len = strlen (st_str);\n+\t  size_t len = strlen (st_str);\n \t  fprintf (stderr, \" st= %.*s\\n\", (int) (len-1), st_str);\n \t}\n     }\n@@ -1921,7 +1874,7 @@ add_local_symbol (const char *str_start, const char *str_end_p1, st_t type,\n /* Add an external symbol with symbol pointer ESYM and file index\n    IFD.  */\n \n-STATIC symint_t\n+static symint_t\n add_ext_symbol (EXTR *esym, int ifd)\n {\n   const char *str_start;\t\t/* first byte in string */\n@@ -1973,7 +1926,7 @@ add_ext_symbol (EXTR *esym, int ifd)\n \f\n /* Add an auxiliary symbol (passing a symint).  */\n \n-STATIC symint_t\n+static symint_t\n add_aux_sym_symint (symint_t aux_word)\n {\n   AUXU *aux_ptr;\n@@ -1992,7 +1945,7 @@ add_aux_sym_symint (symint_t aux_word)\n \n /* Add an auxiliary symbol (passing a file/symbol index combo).  */\n \n-STATIC symint_t\n+static symint_t\n add_aux_sym_rndx (int file_index, symint_t sym_index)\n {\n   AUXU *aux_ptr;\n@@ -2013,7 +1966,7 @@ add_aux_sym_rndx (int file_index, symint_t sym_index)\n /* Add an auxiliary symbol (passing the basic type and possibly\n    type qualifiers).  */\n \n-STATIC symint_t\n+static symint_t\n add_aux_sym_tir (type_info_t *t, hash_state_t state, thash_t **hash_tbl)\n {\n   AUXU *aux_ptr;\n@@ -2172,7 +2125,7 @@ add_aux_sym_tir (type_info_t *t, hash_state_t state, thash_t **hash_tbl)\n \f\n /* Add a tag to the tag table (unless it already exists).  */\n \n-STATIC tag_t *\n+static tag_t *\n get_tag (const char *tag_start,\t\t/* 1st byte of tag name */\n \t const char *tag_end_p1,\t/* 1st byte after tag name */\n \t symint_t indx,\t\t/* index of tag start block */\n@@ -2224,7 +2177,7 @@ get_tag (const char *tag_start,\t\t/* 1st byte of tag name */\n \f\n /* Add an unknown {struct, union, enum} tag.  */\n \n-STATIC void\n+static void\n add_unknown_tag (tag_t *ptag)\n {\n   shash_t *hash_ptr\t= ptag->hash_ptr;\n@@ -2283,7 +2236,7 @@ add_unknown_tag (tag_t *ptag)\n    this is the current procedure.  If the assembler created a PDR for\n    this procedure, use that to initialize the current PDR.  */\n \n-STATIC void\n+static void\n add_procedure (const char *func_start,  /* 1st byte of func name */\n \t       const char *func_end_p1) /* 1st byte after func name */\n {\n@@ -2346,7 +2299,7 @@ add_procedure (const char *func_start,  /* 1st byte of func name */\n \f\n /* Initialize the init_file structure.  */\n \n-STATIC void\n+static void\n initialize_init_file (void)\n {\n   union {\n@@ -2384,13 +2337,13 @@ initialize_init_file (void)\n    virtual arrays (strings, symbols, aux syms, etc.).  Record\n    where the current file structure lives.  */\n \n-STATIC void\n+static void\n add_file (const char *file_start,  /* first byte in string */\n \t  const char *file_end_p1) /* first byte after string */\n {\n   static char zero_bytes[2] = { '\\0', '\\0' };\n \n-  Ptrdiff_t len = file_end_p1 - file_start;\n+  ptrdiff_t len = file_end_p1 - file_start;\n   int first_ch = *file_start;\n   efdr_t *file_ptr;\n \n@@ -2466,13 +2419,13 @@ add_file (const char *file_start,  /* first byte in string */\n \f\n /* Add a stream of random bytes to a varray.  */\n \n-STATIC void\n+static void\n add_bytes (varray_t *vp,\t/* virtual array to add too */\n \t   char *input_ptr,\t/* start of the bytes */\n-\t   Size_t nitems)\t/* # items to move */\n+\t   size_t nitems)\t/* # items to move */\n {\n-  Size_t move_items;\n-  Size_t move_bytes;\n+  size_t move_items;\n+  size_t move_bytes;\n   char *ptr;\n \n   while (nitems > 0)\n@@ -2504,7 +2457,7 @@ add_bytes (varray_t *vp,\t/* virtual array to add too */\n \f\n /* Convert storage class to string.  */\n \n-STATIC const char *\n+static const char *\n sc_to_string (sc_t storage_class)\n {\n   switch (storage_class)\n@@ -2541,7 +2494,7 @@ sc_to_string (sc_t storage_class)\n \f\n /* Convert symbol type to string.  */\n \n-STATIC const char *\n+static const char *\n st_to_string (st_t symbol_type)\n {\n   switch (symbol_type)\n@@ -2577,7 +2530,7 @@ st_to_string (st_t symbol_type)\n    (which is grows if the line is too big).  We split lines at the\n    semi-colon, and return each logical line independently.  */\n \n-STATIC char *\n+static char *\n read_line (void)\n {\n   static   int line_split_p\t= 0;\n@@ -2653,7 +2606,7 @@ read_line (void)\n /* Parse #.begin directives which have a label as the first argument\n    which gives the location of the start of the block.  */\n \n-STATIC void\n+static void\n parse_begin (const char *start)\n {\n   const char *end_p1;\t\t\t/* end of label */\n@@ -2704,7 +2657,7 @@ parse_begin (const char *start)\n /* Parse #.bend directives which have a label as the first argument\n    which gives the location of the end of the block.  */\n \n-STATIC void\n+static void\n parse_bend (const char *start)\n {\n   const char *end_p1;\t\t\t/* end of label */\n@@ -2762,7 +2715,7 @@ parse_bend (const char *start)\n \t.dim\tspecify an array dimension\n \t.tag\tspecify a tag for a struct, union, or enum.  */\n \n-STATIC void\n+static void\n parse_def (const char *name_start)\n {\n   const char *dir_start;\t\t\t/* start of current directive*/\n@@ -2784,7 +2737,7 @@ parse_def (const char *name_start)\n   symint_t temp_array[ N_TQ ];\n   int arg_was_number;\n   int ch, i;\n-  Ptrdiff_t len;\n+  ptrdiff_t len;\n \n   static int inside_enumeration = 0;\t\t/* is this an enumeration? */\n \n@@ -2805,7 +2758,6 @@ parse_def (const char *name_start)\n   if (ch == '\\0')\n     {\n       error_line = __LINE__;\n-      saber_stop ();\n       goto bomb_out;\n     }\n \n@@ -2819,7 +2771,6 @@ parse_def (const char *name_start)\n       if (ch != '.')\n \t{\n \t  error_line = __LINE__;\n-\t  saber_stop ();\n \t  goto bomb_out;\n \t}\n \n@@ -2836,7 +2787,6 @@ parse_def (const char *name_start)\n \t  if (ch == '\\0' || ISSPACE (ch))\n \t    {\n \t      error_line = __LINE__;\n-\t      saber_stop ();\n \t      goto bomb_out;\n \t    }\n \t}\n@@ -2861,7 +2811,6 @@ parse_def (const char *name_start)\n       else if (ch == '\\0' || ISSPACE (ch))\n \t{\n \t  error_line = __LINE__;\n-\t  saber_stop ();\n \t  goto bomb_out;\n \t}\n \n@@ -2876,7 +2825,6 @@ parse_def (const char *name_start)\n \t  if (ch == '\\0')\n \t    {\n \t      error_line = __LINE__;\n-\t      saber_stop ();\n \t      goto bomb_out;\n \t    }\n \t}\n@@ -2887,7 +2835,6 @@ parse_def (const char *name_start)\n \t{\n \tdefault:\n \t  error_line = __LINE__;\n-\t  saber_stop ();\n \t  goto bomb_out;\n \n \tcase 'd':\n@@ -2916,7 +2863,6 @@ parse_def (const char *name_start)\n \t\t      if (t_ptr == &temp_array[0])\n \t\t\t{\n \t\t\t  error_line = __LINE__;\n-\t\t\t  saber_stop ();\n \t\t\t  goto bomb_out;\n \t\t\t}\n \n@@ -2930,7 +2876,6 @@ parse_def (const char *name_start)\n \t\t  if (t.num_dims >= N_TQ-1)\n \t\t    {\n \t\t      error_line = __LINE__;\n-\t\t      saber_stop ();\n \t\t      goto bomb_out;\n \t\t    }\n \n@@ -2941,7 +2886,6 @@ parse_def (const char *name_start)\n \t  else\n \t    {\n \t      error_line = __LINE__;\n-\t      saber_stop ();\n \t      goto bomb_out;\n \t    }\n \n@@ -2990,7 +2934,6 @@ parse_def (const char *name_start)\n \t\t      if (t_ptr == &temp_array[0])\n \t\t\t{\n \t\t\t  error_line = __LINE__;\n-\t\t\t  saber_stop ();\n \t\t\t  goto bomb_out;\n \t\t\t}\n \n@@ -3004,7 +2947,6 @@ parse_def (const char *name_start)\n \t\t  if (t.num_sizes >= N_TQ-1)\n \t\t    {\n \t\t      error_line = __LINE__;\n-\t\t      saber_stop ();\n \t\t      goto bomb_out;\n \t\t    }\n \n@@ -3016,7 +2958,6 @@ parse_def (const char *name_start)\n \t  else\n \t    {\n \t      error_line = __LINE__;\n-\t      saber_stop ();\n \t      goto bomb_out;\n \t    }\n \n@@ -3065,7 +3006,6 @@ parse_def (const char *name_start)\n \t  else\n \t    {\n \t      error_line = __LINE__;\n-\t      saber_stop ();\n \t      goto bomb_out;\n \t    }\n \n@@ -3126,7 +3066,6 @@ parse_def (const char *name_start)\n \t  else\n \t    {\n \t      error_line = __LINE__;\n-\t      saber_stop ();\n \t      goto bomb_out;\n \t    }\n \t}\n@@ -3154,7 +3093,6 @@ parse_def (const char *name_start)\n       if (num_real_sizes != 1 || diff < 0)\n \t{\n \t  error_line = __LINE__;\n-\t  saber_stop ();\n \t  goto bomb_out;\n \t}\n \n@@ -3243,7 +3181,6 @@ parse_def (const char *name_start)\n       if (t.num_sizes - t.num_dims - t.extra_sizes != 1)\n \t{\n \t  error_line = __LINE__;\n-\t  saber_stop ();\n \t  goto bomb_out;\n \t}\n \n@@ -3337,7 +3274,7 @@ parse_def (const char *name_start)\n \f\n /* Parse .end directives.  */\n \n-STATIC void\n+static void\n parse_end (const char *start)\n {\n   const char *start_func, *end_func_p1;\n@@ -3399,7 +3336,7 @@ parse_end (const char *start)\n \f\n /* Parse .ent directives.  */\n \n-STATIC void\n+static void\n parse_ent (const char *start)\n {\n   const char *start_func, *end_func_p1;\n@@ -3436,7 +3373,7 @@ parse_ent (const char *start)\n \f\n /* Parse .file directives.  */\n \n-STATIC void\n+static void\n parse_file (const char *start)\n {\n   char *p;\n@@ -3508,7 +3445,7 @@ mark_stabs (const char *start ATTRIBUTE_UNUSED)\n \t0\t\ta zero or a line number\n \tvalue\t\ta numeric value or an address.  */\n \n-STATIC void\n+static void\n parse_stabs_common (const char *string_start,\t/* start of string or NULL */\n \t\t    const char *string_end,\t/* end+1 of string or NULL */\n \t\t    const char *rest)\t\t/* rest of the directive.  */\n@@ -3706,7 +3643,7 @@ parse_stabs_common (const char *string_start,\t/* start of string or NULL */\n }\n \n \n-STATIC void\n+static void\n parse_stabs (const char *start)\n {\n   const char *end = strchr (start+1, '\"');\n@@ -3721,7 +3658,7 @@ parse_stabs (const char *start)\n }\n \n \n-STATIC void\n+static void\n parse_stabn (const char *start)\n {\n   parse_stabs_common ((const char *) 0, (const char *) 0, start);\n@@ -3731,11 +3668,11 @@ parse_stabn (const char *start)\n /* Parse the input file, and write the lines to the output file\n    if needed.  */\n \n-STATIC void\n+static void\n parse_input (void)\n {\n   char *p;\n-  Size_t i;\n+  size_t i;\n   thead_t *ptag_head;\n   tag_t *ptag;\n   tag_t *ptag_next;\n@@ -3794,7 +3731,7 @@ parse_input (void)\n /* Update the global headers with the final offsets in preparation\n    to write out the .T file.  */\n \n-STATIC void\n+static void\n update_headers (void)\n {\n   symint_t i;\n@@ -3842,14 +3779,14 @@ update_headers (void)\n \t  if ((st_t) sym->st == st_Static)\n \t    {\n \t      char *str = ORIG_LSTRS (fd_ptr->issBase + sym->iss);\n-\t      Size_t len = strlen (str);\n+\t      size_t len = strlen (str);\n \t      shash_t *hash_ptr;\n \n \t      /* Ignore internal labels.  */\n \t      if (str[0] == '$' && str[1] == 'L')\n \t\tcontinue;\n \t      hash_ptr = hash_string (str,\n-\t\t\t\t      (Ptrdiff_t) len,\n+\t\t\t\t      (ptrdiff_t) len,\n \t\t\t\t      &file_ptr->shash_head[0],\n \t\t\t\t      (symint_t *) 0);\n \t      if (hash_ptr == (shash_t *) 0)\n@@ -3883,9 +3820,8 @@ update_headers (void)\n       symbolic_header.issMax += file_ptr->fdr.cbSs;\n     }\n \n-#ifndef ALIGN_SYMTABLE_OFFSET\n-#define ALIGN_SYMTABLE_OFFSET(OFFSET) (OFFSET)\n-#endif\n+/* Align ecoff symbol tables to avoid OSF1/1.3 nm complaints.  */\n+#define ALIGN_SYMTABLE_OFFSET(OFFSET) (((OFFSET) + 7) & ~7)\n \n   file_offset = ALIGN_SYMTABLE_OFFSET (file_offset);\n   i = WORD_ALIGN (symbolic_header.cbLine);\t/* line numbers */\n@@ -3980,7 +3916,7 @@ update_headers (void)\n \f\n /* Write out a varray at a given location.  */\n \n-STATIC void\n+static void\n write_varray (varray_t *vp,    /* virtual array */\n \t      off_t offset,    /* offset to write varray to */\n \t      const char *str) /* string to print out when tracing */\n@@ -4024,7 +3960,7 @@ write_varray (varray_t *vp,    /* virtual array */\n \f\n /* Write out the symbol table in the object file.  */\n \n-STATIC void\n+static void\n write_object (void)\n {\n   int sys_write;\n@@ -4249,8 +4185,8 @@ write_object (void)\n \f\n /* Read some bytes at a specified location, and return a pointer.  */\n \n-STATIC page_t *\n-read_seek (Size_t size,\t\t/* # bytes to read */\n+static page_t *\n+read_seek (size_t size,\t\t/* # bytes to read */\n \t   off_t offset,\t/* offset to read at */\n \t   const char *str)\t/* name for tracing */\n {\n@@ -4318,7 +4254,7 @@ read_seek (Size_t size,\t\t/* # bytes to read */\n    if it is different from the input object file), and remove the old\n    symbol table.  */\n \n-STATIC void\n+static void\n copy_object (void)\n {\n   char buffer[ PAGE_SIZE ];\n@@ -4566,9 +4502,9 @@ copy_object (void)\n \t      {\n \t\tauto symint_t hash_index;\n \t\tchar *str = ORIG_LSTRS (fd_ptr->issBase + sym->iss);\n-\t\tSize_t len = strlen (str);\n+\t\tsize_t len = strlen (str);\n \t\tshash_t *shash_ptr = hash_string (str,\n-\t\t\t\t\t\t  (Ptrdiff_t) len,\n+\t\t\t\t\t\t  (ptrdiff_t) len,\n \t\t\t\t\t\t  &orig_str_hash[0],\n \t\t\t\t\t\t  &hash_index);\n \n@@ -4596,9 +4532,9 @@ copy_object (void)\n \n \t\t  if (*str != '\\0')\n \t\t    {\n-\t\t      Size_t len = strlen (str);\n+\t\t      size_t len = strlen (str);\n \t\t      shash_t *shash_ptr = hash_string (str,\n-\t\t\t\t\t\t\t(Ptrdiff_t) len,\n+\t\t\t\t\t\t\t(ptrdiff_t) len,\n \t\t\t\t\t\t\t&orig_str_hash[0],\n \t\t\t\t\t\t\t(symint_t *) 0);\n \n@@ -4626,9 +4562,9 @@ copy_object (void)\n \t{\n \t  SYMR *proc_sym = ORIG_LSYMS (fd_ptr->isymBase + proc->isym);\n \t  char *str = ORIG_LSTRS (fd_ptr->issBase + proc_sym->iss);\n-\t  Size_t len = strlen (str);\n+\t  size_t len = strlen (str);\n \t  shash_t *shash_ptr = hash_string (str,\n-\t\t\t\t\t    (Ptrdiff_t) len,\n+\t\t\t\t\t    (ptrdiff_t) len,\n \t\t\t\t\t    &orig_str_hash[0],\n \t\t\t\t\t    (symint_t *) 0);\n \n@@ -4704,7 +4640,7 @@ main (int argc, char **argv)\n   (void) signal (SIGBUS,  catch_signal);\n   (void) signal (SIGABRT, catch_signal);\n \n-#if !defined(__SABER__) && !defined(lint)\n+#ifndef lint\n   if (sizeof (efdr_t) > PAGE_USIZE)\n     fatal (\"efdr_t has a sizeof %d bytes, when it should be less than %d\",\n \t   (int) sizeof (efdr_t),\n@@ -4916,7 +4852,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \f\n /* Catch a signal and exit without dumping core.  */\n \n-STATIC void\n+static void\n catch_signal (int signum)\n {\n   (void) signal (signum, SIG_DFL);\t/* just in case...  */\n@@ -4973,8 +4909,8 @@ out_of_bounds (symint_t indx,\t/* index that is out of bounds */\n #ifndef MALLOC_CHECK\n #ifdef USE_MALLOC\n \n-STATIC page_t *\n-allocate_cluster (Size_t npages)\n+static page_t *\n+allocate_cluster (size_t npages)\n {\n   page_t *value = xcalloc (npages, PAGE_USIZE);\n \n@@ -4986,8 +4922,8 @@ allocate_cluster (Size_t npages)\n \n #else /* USE_MALLOC */\n \n-STATIC page_t *\n-allocate_cluster (Size_t npages)\n+static page_t *\n+allocate_cluster (size_t npages)\n {\n   page_t *ptr = (page_t *) sbrk (0);\t/* current sbreak */\n   unsigned long offset = ((unsigned long) ptr) & (PAGE_SIZE - 1);\n@@ -5021,8 +4957,8 @@ static unsigned\t pages_left\t= 0;\n \n /* Allocate some pages (which is initialized to 0).  */\n \n-STATIC page_t *\n-allocate_multiple_pages (Size_t npages)\n+static page_t *\n+allocate_multiple_pages (size_t npages)\n {\n #ifndef MALLOC_CHECK\n   if (pages_left == 0 && npages < MAX_CLUSTER_PAGES)\n@@ -5050,8 +4986,8 @@ allocate_multiple_pages (Size_t npages)\n \n /* Release some pages.  */\n \n-STATIC void\n-free_multiple_pages (page_t *page_ptr, Size_t npages)\n+static void\n+free_multiple_pages (page_t *page_ptr, size_t npages)\n {\n #ifndef MALLOC_CHECK\n   if (pages_left == 0)\n@@ -5079,7 +5015,7 @@ free_multiple_pages (page_t *page_ptr, Size_t npages)\n \n /* Allocate one page (which is initialized to 0).  */\n \n-STATIC page_t *\n+static page_t *\n allocate_page (void)\n {\n #ifndef MALLOC_CHECK\n@@ -5101,7 +5037,7 @@ allocate_page (void)\n \f\n /* Allocate scoping information.  */\n \n-STATIC scope_t *\n+static scope_t *\n allocate_scope (void)\n {\n   scope_t *ptr;\n@@ -5140,7 +5076,7 @@ allocate_scope (void)\n \n /* Free scoping information.  */\n \n-STATIC void\n+static void\n free_scope (scope_t *ptr)\n {\n   alloc_counts[ (int) alloc_type_scope ].total_free++;\n@@ -5158,7 +5094,7 @@ free_scope (scope_t *ptr)\n \f\n /* Allocate links for pages in a virtual array.  */\n \n-STATIC vlinks_t *\n+static vlinks_t *\n allocate_vlinks (void)\n {\n   vlinks_t *ptr;\n@@ -5191,7 +5127,7 @@ allocate_vlinks (void)\n \f\n /* Allocate string hash buckets.  */\n \n-STATIC shash_t *\n+static shash_t *\n allocate_shash (void)\n {\n   shash_t *ptr;\n@@ -5224,7 +5160,7 @@ allocate_shash (void)\n \f\n /* Allocate type hash buckets.  */\n \n-STATIC thash_t *\n+static thash_t *\n allocate_thash (void)\n {\n   thash_t *ptr;\n@@ -5257,7 +5193,7 @@ allocate_thash (void)\n \f\n /* Allocate structure, union, or enum tag information.  */\n \n-STATIC tag_t *\n+static tag_t *\n allocate_tag (void)\n {\n   tag_t *ptr;\n@@ -5296,7 +5232,7 @@ allocate_tag (void)\n \n /* Free scoping information.  */\n \n-STATIC void\n+static void\n free_tag (tag_t *ptr)\n {\n   alloc_counts[ (int) alloc_type_tag ].total_free++;\n@@ -5314,7 +5250,7 @@ free_tag (tag_t *ptr)\n \f\n /* Allocate forward reference to a yet unknown tag.  */\n \n-STATIC forward_t *\n+static forward_t *\n allocate_forward (void)\n {\n   forward_t *ptr;\n@@ -5353,7 +5289,7 @@ allocate_forward (void)\n \n /* Free scoping information.  */\n \n-STATIC void\n+static void\n free_forward (forward_t *ptr)\n {\n   alloc_counts[ (int) alloc_type_forward ].total_free++;\n@@ -5371,7 +5307,7 @@ free_forward (forward_t *ptr)\n \f\n /* Allocate head of type hash list.  */\n \n-STATIC thead_t *\n+static thead_t *\n allocate_thead (void)\n {\n   thead_t *ptr;\n@@ -5410,7 +5346,7 @@ allocate_thead (void)\n \n /* Free scoping information.  */\n \n-STATIC void\n+static void\n free_thead (thead_t *ptr)\n {\n   alloc_counts[ (int) alloc_type_thead ].total_free++;\n@@ -5424,9 +5360,6 @@ free_thead (thead_t *ptr)\n #endif\n \n }\n-\n-#endif /* MIPS_DEBUGGING_INFO */\n-\n \f\n /* Output an error message and exit.  */\n \n@@ -5448,7 +5381,6 @@ fatal (const char *format, ...)\n   if (line_number > 0)\n     fprintf (stderr, \"line:\\t%s\\n\", cur_line_start);\n \n-  saber_stop ();\n   exit (1);\n }\n \n@@ -5471,8 +5403,6 @@ error (const char *format, ...)\n \n   had_errors++;\n   va_end (ap);\n-\n-  saber_stop ();\n }\n \n /* More 'friendly' abort that prints the line and file.  */"}]}