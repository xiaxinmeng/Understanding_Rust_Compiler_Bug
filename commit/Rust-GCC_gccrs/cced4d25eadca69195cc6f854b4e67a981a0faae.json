{"sha": "cced4d25eadca69195cc6f854b4e67a981a0faae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NlZDRkMjVlYWRjYTY5MTk1Y2M2Zjg1NGI0ZTY3YTk4MWEwZmFhZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-10-31T16:51:25Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-10-31T16:51:25Z"}, "message": "Use EXTRA_MULTILIB_PARTS\n\nFrom-SVN: r13081", "tree": {"sha": "bfa078083187a65c49abc343cd17db266098d171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfa078083187a65c49abc343cd17db266098d171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cced4d25eadca69195cc6f854b4e67a981a0faae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cced4d25eadca69195cc6f854b4e67a981a0faae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cced4d25eadca69195cc6f854b4e67a981a0faae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cced4d25eadca69195cc6f854b4e67a981a0faae/comments", "author": null, "committer": null, "parents": [{"sha": "ed9a2f576fe11111f6b06c0fc0f2f3af1c2a265f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9a2f576fe11111f6b06c0fc0f2f3af1c2a265f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9a2f576fe11111f6b06c0fc0f2f3af1c2a265f"}], "stats": {"total": 125, "additions": 36, "deletions": 89}, "files": [{"sha": "44eb79090ef671f9e011a0711f47cdc337ee41a0", "filename": "gcc/config/rs6000/t-ppc", "status": "modified", "additions": 19, "deletions": 34, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cced4d25eadca69195cc6f854b4e67a981a0faae/gcc%2Fconfig%2Frs6000%2Ft-ppc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cced4d25eadca69195cc6f854b4e67a981a0faae/gcc%2Fconfig%2Frs6000%2Ft-ppc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppc?ref=cced4d25eadca69195cc6f854b4e67a981a0faae", "patch": "@@ -30,10 +30,11 @@ MULTILIB_DIRNAMES\t= nof\n MULTILIB_MATCHES\t=\n MULTILIB_EXCEPTIONS\t=\n \n-LIBGCC = stmp-multilib stmp-crt\n-INSTALL_LIBGCC = install-multilib install-crt\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+EXTRA_MULTILIB_PARTS = ecrti$(objext) ecrtn$(objext) scrt0$(objext) scrti$(objext) scrtn$(objext)\n \n-# For eabi we build crti.o and crtn.o which serve to add begin and\n+# For eabigas we build {e,s}crti.o and {e,s}crtn.o which serve to add begin and\n # end labels to all of the special sections used when we link using gcc.\n \n # Assemble startup files.\n@@ -52,34 +53,18 @@ scrtn.S: $(srcdir)/config/rs6000/sol-cn.asm\n scrt0.c: $(srcdir)/config/rs6000/sol-c0.c\n \tcat $(srcdir)/config/rs6000/sol-c0.c >scrt0.c\n \n-# Build multiple copies of crt{i,n}.o, one for each target switch.\n-stmp-crt: ecrti.S ecrtn.S scrti.S scrtn.S scrt0.c $(GCC_PASSES) $(EXTRA_HEADERS) stmp-multilib config.status\n-\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n-\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n-\t  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \\\n-\t  $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t    LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" \\\n-\t    dir=\"$${dir}\" stmp-crt-sub; \\\n-\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\tdone\n-\ttouch stmp-crt\n-\n-# Subroutine of stmp-crt so make -n works.\n-stmp-crt-sub:\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrti.o ecrti.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrtn.o ecrtn.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrti.o scrti.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrtn.o scrtn.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrt0.o scrt0.c\n-\n-# Install multiple versions of crt[in].o\n-install-crt: stmp-crt installdirs install-multilib\n-\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n-\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n-\t  rm -f $(libsubdir)/$${dir}/[es]crt[in0].o; \\\n-\t  $(INSTALL_DATA) $${dir}/ecrti.o $(libsubdir)/$${dir}/ecrti.o; \\\n-\t  $(INSTALL_DATA) $${dir}/ecrtn.o $(libsubdir)/$${dir}/ecrtn.o; \\\n-\t  $(INSTALL_DATA) $${dir}/scrti.o $(libsubdir)/$${dir}/scrti.o; \\\n-\t  $(INSTALL_DATA) $${dir}/scrtn.o $(libsubdir)/$${dir}/scrtn.o; \\\n-\t  $(INSTALL_DATA) $${dir}/scrt0.o $(libsubdir)/$${dir}/scrt0.o; \\\n-\tdone\n+# Build multiple copies of ?crt{i,n}.o, one for each target switch.\n+$(T)ecrti$(objext): ecrti.S\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)ecrti$(objext)\n+\t\t\t\t\t\t\t\t         \n+$(T)ecrtn$(objext): ecrtn.S\t\t\t\t\t         \n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrtn.S -o $(T)ecrtn$(objext)\n+\t\t\t\t\t\t\t\t         \n+$(T)scrti$(objext): scrti.S\t\t\t\t\t         \n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)scrti$(objext)\n+\t\t\t\t\t\t\t\t         \n+$(T)scrtn$(objext): scrtn.S\t\t\t\t\t         \n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)scrtn$(objext)\n+\t\t\t\t\t\t\t\t         \n+$(T)scrt0$(objext): scrt0.c\t\t\t\t\t         \n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)scrt0$(objext)"}, {"sha": "626a30a30d38545a2cb8a229d6ec58c5528d24e2", "filename": "gcc/config/rs6000/t-ppcgas", "status": "modified", "additions": 17, "deletions": 55, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cced4d25eadca69195cc6f854b4e67a981a0faae/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cced4d25eadca69195cc6f854b4e67a981a0faae/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcgas?ref=cced4d25eadca69195cc6f854b4e67a981a0faae", "patch": "@@ -47,8 +47,9 @@ MULTILIB_EXCEPTIONS\t= *mbig/*mcall-solaris* \\\n \t\t\t  *mlittle/*mcall-linux* \\\n \t\t\t  *msoft-float/*mcall-linux*\n \n-LIBGCC = stmp-multilib stmp-crt\n-INSTALL_LIBGCC = install-multilib install-crt\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+EXTRA_MULTILIB_PARTS = ecrti$(objext) ecrtn$(objext) scrt0$(objext) scrti$(objext) scrtn$(objext)\n \n # For eabigas we build {e,s}crti.o and {e,s}crtn.o which serve to add begin and\n # end labels to all of the special sections used when we link using gcc.\n@@ -70,56 +71,17 @@ scrt0.c: $(srcdir)/config/rs6000/sol-c0.c\n \tcat $(srcdir)/config/rs6000/sol-c0.c >scrt0.c\n \n # Build multiple copies of ?crt{i,n}.o, one for each target switch.\n-stmp-crt: ecrti.S ecrtn.S scrt0.c scrti.S scrtn.S libgcc2.ready config.status\n-\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n-\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n-\t  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \\\n-\t  case \"$$flags\" in \\\n-\t    *-mcall-solaris*) \\\n-\t      $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t        LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" \\\n-\t        dir=\"$${dir}\" stmp-crt-sub2; \\\n-\t      if [ $$? -eq 0 ] ; then true; else exit 1; fi;; \\\n-\t    *-mcall-linux*) \\\n-\t      true;; \\\n-\t    *) \\\n-\t      $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t\tLIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" \\\n-\t\tdir=\"$${dir}\" stmp-crt-sub; \\\n-\t      if [ $$? -eq 0 ] ; then true; else exit 1; fi;; \\\n-\t  esac; \\\n-\tdone\n-\ttouch stmp-crt\n-\n-# Subroutine of stmp-crt so make -n works.\n-stmp-crt-sub:\n-\tif [ -d $(dir) ]; then true; else mkdir $(dir); fi\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrti.o ecrti.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrtn.o ecrtn.S\n-\n-# Subroutine of stmp-crt so make -n works.\n-stmp-crt-sub2:\n-\tif [ -d $(dir) ]; then true; else mkdir $(dir); fi\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrti.o scrti.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrtn.o scrtn.S\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrt0.o scrt0.c\n-\n-# Install multiple versions of ?crt[in].o\n-install-crt: stmp-crt installdirs install-multilib\n-\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n-\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n-\t  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \\\n-\t  case \"$$flags\" in \\\n-\t    *-mcall-solaris*) \\\n-\t      rm -f $(libsubdir)/$${dir}/scrt[in0].o; \\\n-\t      $(INSTALL_DATA) $${dir}/scrti.o $(libsubdir)/$${dir}/scrti.o; \\\n-\t      $(INSTALL_DATA) $${dir}/scrtn.o $(libsubdir)/$${dir}/scrtn.o; \\\n-\t      $(INSTALL_DATA) $${dir}/scrt0.o $(libsubdir)/$${dir}/scrt0.o;; \\\n-\t    *-mcall-linux*) \\\n-\t      true;; \\\n-\t    *) \\\n-\t      rm -f $(libsubdir)/$${dir}/ecrt[in].o; \\\n-\t      $(INSTALL_DATA) $${dir}/ecrti.o $(libsubdir)/$${dir}/ecrti.o; \\\n-\t      $(INSTALL_DATA) $${dir}/ecrtn.o $(libsubdir)/$${dir}/ecrtn.o; \\\n-\t  esac; \\\n-\tdone\n+$(T)ecrti$(objext): ecrti.S\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)ecrti$(objext)\n+\n+$(T)ecrtn$(objext): ecrtn.S\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrtn.S -o $(T)ecrtn$(objext)\n+\n+$(T)scrti$(objext): scrti.S\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)scrti$(objext)\n+\n+$(T)scrtn$(objext): scrtn.S\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)scrtn$(objext)\n+\n+$(T)scrt0$(objext): scrt0.c\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c ecrti.S -o $(T)scrt0$(objext)"}]}