{"sha": "69d523395b0da6fe5e9178cbe96e57356f32980b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkNTIzMzk1YjBkYTZmZTVlOTE3OGNiZTk2ZTU3MzU2ZjMyOTgwYg==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-03-27T08:59:10Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-03-27T08:59:10Z"}, "message": "arm.c (arm_autovectorize_vector_sizes): New function.\n\n\n        * config/arm/arm.c (arm_autovectorize_vector_sizes): New\n        function.\n        (TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES): Define.\n\nFrom-SVN: r171569", "tree": {"sha": "18a0179c177ed69e685702b978e34d4d9dfd47c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18a0179c177ed69e685702b978e34d4d9dfd47c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d523395b0da6fe5e9178cbe96e57356f32980b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d523395b0da6fe5e9178cbe96e57356f32980b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d523395b0da6fe5e9178cbe96e57356f32980b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d523395b0da6fe5e9178cbe96e57356f32980b/comments", "author": null, "committer": null, "parents": [{"sha": "60386f50ceca766476f4e22f1c78c56865d9bc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60386f50ceca766476f4e22f1c78c56865d9bc9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60386f50ceca766476f4e22f1c78c56865d9bc9d"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "ec394f2e231018e153ba468a96ec706bc26f4a11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69d523395b0da6fe5e9178cbe96e57356f32980b", "patch": "@@ -1,3 +1,9 @@\n+2011-03-27  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\t* config/arm/arm.c (arm_autovectorize_vector_sizes): New\n+\tfunction.\n+\t(TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES): Define.\n+\n 2011-03-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* basic-block.h (fixup_abnormal_edges): Adjust prototype."}, {"sha": "de9e6f9cd256a98d44b1db7469e00ca9a4486fcb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=69d523395b0da6fe5e9178cbe96e57356f32980b", "patch": "@@ -252,6 +252,7 @@ static bool arm_builtin_support_vector_misalignment (enum machine_mode mode,\n \t\t\t\t\t\t     bool is_packed);\n static void arm_conditional_register_usage (void);\n static reg_class_t arm_preferred_rename_class (reg_class_t rclass);\n+static unsigned int arm_autovectorize_vector_sizes (void);\n \n \f\n /* Table of machine attributes.  */\n@@ -404,6 +405,9 @@ static const struct default_options arm_option_optimization_table[] =\n #define TARGET_VECTOR_MODE_SUPPORTED_P arm_vector_mode_supported_p\n #undef TARGET_VECTORIZE_PREFERRED_SIMD_MODE\n #define TARGET_VECTORIZE_PREFERRED_SIMD_MODE arm_preferred_simd_mode\n+#undef TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES\n+#define TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES \\\n+  arm_autovectorize_vector_sizes\n \n #undef  TARGET_MACHINE_DEPENDENT_REORG\n #define TARGET_MACHINE_DEPENDENT_REORG arm_reorg\n@@ -23528,6 +23532,12 @@ arm_expand_sync (enum machine_mode mode,\n     }\n }\n \n+static unsigned int\n+arm_autovectorize_vector_sizes (void)\n+{\n+  return TARGET_NEON_VECTORIZE_QUAD ? 16 | 8 : 0;\n+}\n+\n static bool\n arm_vector_alignment_reachable (const_tree type, bool is_packed)\n {"}, {"sha": "df0ab831bc87087013e33cd0c15d6119c5f6e1a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69d523395b0da6fe5e9178cbe96e57356f32980b", "patch": "@@ -1,3 +1,10 @@\n+2011-03-27  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\t* gcc.dg/vect/vect-outer-5.c: Reduce the distance between data\n+\taccesses to preserve the meaning of the test for doubleword vectors.\n+\t* gcc.dg/vect/no-vfa-pr29145.c: Likewise.\n+\t* gcc.dg/vect/slp-3.c: Reduce the loop bound for the same reason.\n+\n 2011-03-26  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/48291"}, {"sha": "507ac25c477e9992fbeb46124fd570083bb69358", "filename": "gcc/testsuite/gcc.dg/vect/no-vfa-pr29145.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-pr29145.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-pr29145.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-vfa-pr29145.c?ref=69d523395b0da6fe5e9178cbe96e57356f32980b", "patch": "@@ -8,7 +8,7 @@ __attribute__ ((noinline))\n void with_restrict(int * __restrict p)\n {\n   int i;\n-  int *q = p - 2;\n+  int *q = p - 1;\n \n   for (i = 0; i < 1000; ++i) {\n     p[i] = q[i];\n@@ -19,7 +19,7 @@ __attribute__ ((noinline))\n void without_restrict(int * p)\n {\n   int i;\n-  int *q = p - 2;\n+  int *q = p - 1;\n \n   for (i = 0; i < 1000; ++i) {\n     p[i] = q[i];\n@@ -38,8 +38,8 @@ int main(void)\n     a[i] = b[i] = i;\n   }\n \n-  with_restrict(a + 2);\n-  without_restrict(b + 2);\n+  with_restrict(a + 1);\n+  without_restrict(b + 1);\n \n   for (i = 0; i < 1002; ++i) {\n     if (a[i] != b[i])"}, {"sha": "1413936f706c0dc1b7cd8ba01908606466c03a4b", "filename": "gcc/testsuite/gcc.dg/vect/slp-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-3.c?ref=69d523395b0da6fe5e9178cbe96e57356f32980b", "patch": "@@ -101,7 +101,7 @@ main1 ()\n     }\n \n   /* SLP with unrolling by 8.  */\n-  for (i = 0; i < N/2; i++)\n+  for (i = 0; i < N/4; i++)\n     {\n       out[i*9] = in[i*9];\n       out[i*9 + 1] = in[i*9 + 1];\n@@ -115,7 +115,7 @@ main1 ()\n     }\n \n   /* check results:  */\n-  for (i = 0; i < N/2; i++)\n+  for (i = 0; i < N/4; i++)\n     {\n       if (out[i*9] !=  in[i*9]\n          || out[i*9 + 1] != in[i*9 + 1]"}, {"sha": "05ed39a3da2bc5d30bc1961ad486d4c38e204fea", "filename": "gcc/testsuite/gcc.dg/vect/vect-outer-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-outer-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d523395b0da6fe5e9178cbe96e57356f32980b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-outer-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-outer-5.c?ref=69d523395b0da6fe5e9178cbe96e57356f32980b", "patch": "@@ -17,7 +17,7 @@ int main1 ()\n   float B[N] __attribute__ ((__aligned__(__BIGGEST_ALIGNMENT__)));\n   float C[N] __attribute__ ((__aligned__(__BIGGEST_ALIGNMENT__)));\n   float D[N] __attribute__ ((__aligned__(__BIGGEST_ALIGNMENT__)));\n-  float E[4] = {0,1,2,480};\n+  float E[4] = {0,480,960,1440};\n   float s;\n \n   int i, j;\n@@ -55,7 +55,7 @@ int main1 ()\n       s = 0;\n       for (j=0; j<N; j+=4)\n \ts += C[j];\n-      B[i+3] = B[i] + s;\n+      B[i+1] = B[i] + s;\n     }\n \n   /* check results:  */"}]}