{"sha": "01c0b3b0769bd4206d456f1e0efa51b7a126a664", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFjMGIzYjA3NjliZDQyMDZkNDU2ZjFlMGVmYTUxYjdhMTI2YTY2NA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2015-03-25T15:05:02Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2015-03-25T15:05:02Z"}, "message": "re PR libgomp/64972 (Build failure in libgomp for i686-w64-mingw32 target after latest merge from gomp-4_0-branch)\n\n\tPR libgomp/64972\n\t* oacc-parallel.c (GOACC_parallel): Use PRIu64 if available.\n\t(GOACC_data_start): Likewise.\n\t* target.c (gomp_map_vars): Likewise.\n\nFrom-SVN: r221665", "tree": {"sha": "32f64e21dd3368fee112baede09275f2dc53bbf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32f64e21dd3368fee112baede09275f2dc53bbf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01c0b3b0769bd4206d456f1e0efa51b7a126a664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c0b3b0769bd4206d456f1e0efa51b7a126a664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c0b3b0769bd4206d456f1e0efa51b7a126a664", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c0b3b0769bd4206d456f1e0efa51b7a126a664/comments", "author": null, "committer": null, "parents": [{"sha": "40916d50216c898dd38bdb6c09f151c364233970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40916d50216c898dd38bdb6c09f151c364233970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40916d50216c898dd38bdb6c09f151c364233970"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "6536fd3c77571c05f3deb8871d473e7fcb514b74", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c0b3b0769bd4206d456f1e0efa51b7a126a664/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c0b3b0769bd4206d456f1e0efa51b7a126a664/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=01c0b3b0769bd4206d456f1e0efa51b7a126a664", "patch": "@@ -1,3 +1,10 @@\n+2015-03-25  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR libgomp/64972\n+\t* oacc-parallel.c (GOACC_parallel): Use PRIu64 if available.\n+\t(GOACC_data_start): Likewise.\n+\t* target.c (gomp_map_vars): Likewise.\n+\n 2015-03-21  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* testsuite/libgomp.oacc-c-c++-common/reduction-4.c: Don't run on"}, {"sha": "0c74f547a2462ac70991b1e1f7c699aa2f7cdf84", "filename": "libgomp/oacc-parallel.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c0b3b0769bd4206d456f1e0efa51b7a126a664/libgomp%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c0b3b0769bd4206d456f1e0efa51b7a126a664/libgomp%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-parallel.c?ref=01c0b3b0769bd4206d456f1e0efa51b7a126a664", "patch": "@@ -31,6 +31,9 @@\n #include \"libgomp_g.h\"\n #include \"gomp-constants.h\"\n #include \"oacc-int.h\"\n+#ifdef HAVE_INTTYPES_H\n+# include <inttypes.h>  /* For PRIu64.  */\n+#endif\n #include <string.h>\n #include <stdarg.h>\n #include <assert.h>\n@@ -99,9 +102,15 @@ GOACC_parallel (int device, void (*fn) (void *),\n     gomp_fatal (\"num_workers (%d) different from one is not yet supported\",\n \t\tnum_workers);\n \n-  gomp_debug (0, \"%s: mapnum=%zd, hostaddrs=%p, sizes=%p, kinds=%p, async=%d\\n\",\n-\t      __FUNCTION__, mapnum, hostaddrs, sizes, kinds, async);\n-\n+#ifdef HAVE_INTTYPES_H\n+  gomp_debug (0, \"%s: mapnum=%\"PRIu64\", hostaddrs=%p, size=%p, kinds=%p, \"\n+\t\t \"async = %d\\n\",\n+\t      __FUNCTION__, (uint64_t) mapnum, hostaddrs, sizes, kinds, async);\n+#else\n+  gomp_debug (0, \"%s: mapnum=%lu, hostaddrs=%p, sizes=%p, kinds=%p, async=%d\\n\",\n+\t      __FUNCTION__, (unsigned long) mapnum, hostaddrs, sizes, kinds,\n+\t      async);\n+#endif\n   select_acc_device (device);\n \n   thr = goacc_thread ();\n@@ -178,8 +187,13 @@ GOACC_data_start (int device, size_t mapnum,\n   bool host_fallback = device == GOMP_DEVICE_HOST_FALLBACK;\n   struct target_mem_desc *tgt;\n \n-  gomp_debug (0, \"%s: mapnum=%zd, hostaddrs=%p, sizes=%p, kinds=%p\\n\",\n-\t      __FUNCTION__, mapnum, hostaddrs, sizes, kinds);\n+#ifdef HAVE_INTTYPES_H\n+  gomp_debug (0, \"%s: mapnum=%\"PRIu64\", hostaddrs=%p, size=%p, kinds=%p\\n\",\n+\t      __FUNCTION__, (uint64_t) mapnum, hostaddrs, sizes, kinds);\n+#else\n+  gomp_debug (0, \"%s: mapnum=%lu, hostaddrs=%p, sizes=%p, kinds=%p\\n\",\n+\t      __FUNCTION__, (unsigned long) mapnum, hostaddrs, sizes, kinds);\n+#endif\n \n   select_acc_device (device);\n "}, {"sha": "c5dda3f0c935f1dd6667b2e3895aff758b4a4764", "filename": "libgomp/target.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c0b3b0769bd4206d456f1e0efa51b7a126a664/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c0b3b0769bd4206d456f1e0efa51b7a126a664/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=01c0b3b0769bd4206d456f1e0efa51b7a126a664", "patch": "@@ -33,6 +33,9 @@\n #include <limits.h>\n #include <stdbool.h>\n #include <stdlib.h>\n+#ifdef HAVE_INTTYPES_H\n+# include <inttypes.h>  /* For PRIu64.  */\n+#endif\n #include <string.h>\n #include <assert.h>\n \n@@ -438,9 +441,16 @@ gomp_map_vars (struct gomp_device_descr *devicep, size_t mapnum,\n \t\t      /* We already looked up the memory region above and it\n \t\t\t was missing.  */\n \t\t      size_t size = k->host_end - k->host_start;\n+#ifdef HAVE_INTTYPES_H\n+\t\t      gomp_fatal (\"present clause: !acc_is_present (%p, \"\n+\t\t\t\t  \"%\"PRIu64\" (0x%\"PRIx64\"))\",\n+\t\t\t\t  (void *) k->host_start,\n+\t\t\t\t  (uint64_t) size, (uint64_t) size);\n+#else\n \t\t      gomp_fatal (\"present clause: !acc_is_present (%p, \"\n-\t\t\t\t  \"%zd (0x%zx))\", (void *) k->host_start,\n-\t\t\t\t  size, size);\n+\t\t\t\t  \"%lu (0x%lx))\", (void *) k->host_start,\n+\t\t\t\t  (unsigned long) size, (unsigned long) size);\n+#endif\n \t\t    }\n \t\t    break;\n \t\t  case GOMP_MAP_FORCE_DEVICEPTR:"}]}