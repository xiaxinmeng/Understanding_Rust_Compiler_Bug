{"sha": "98fe146e5be55232c20ef242ee7c7e2123373df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmZTE0NmU1YmU1NTIzMmMyMGVmMjQyZWU3YzdlMjEyMzM3M2RmNA==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-12-03T09:49:02Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2018-12-03T09:49:02Z"}, "message": "Repeat jump threading after combine\n\nConsider the following RTL:\n\n(insn (set (reg 65) (if_then_else (eq %cc 0) 1 0)))\n(insn (parallel [(set %cc (compare (reg 65) 0)) (clobber %scratch)]))\n(jump_insn (set %pc (if_then_else (ne %cc 0) (label_ref 23) %pc)))\n\nCombine simplifies this into:\n\n(note NOTE_INSN_DELETED)\n(note NOTE_INSN_DELETED)\n(jump_insn (set %pc (if_then_else (eq %cc 0) (label_ref 23) %pc)))\n\nopening up the possibility to perform jump threading.\n\ngcc/ChangeLog:\n\n2018-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR target/80080\n\t* cfgcleanup.c (class pass_postreload_jump): New pass.\n\t(pass_postreload_jump::execute): Likewise.\n\t(make_pass_postreload_jump): Likewise.\n\t* passes.def: Add pass_postreload_jump before\n\tpass_postreload_cse.\n\t* tree-pass.h (make_pass_postreload_jump): New pass.\n\ngcc/testsuite/ChangeLog:\n\n2018-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR target/80080\n\t* gcc.target/s390/pr80080-4.c: New test.\n\nFrom-SVN: r266734", "tree": {"sha": "2a93928458a1a7d8f995e86940931e86e729de63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a93928458a1a7d8f995e86940931e86e729de63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98fe146e5be55232c20ef242ee7c7e2123373df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fe146e5be55232c20ef242ee7c7e2123373df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fe146e5be55232c20ef242ee7c7e2123373df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fe146e5be55232c20ef242ee7c7e2123373df4/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e45130c59e988c6825b14b9f10f41fb2e256c2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45130c59e988c6825b14b9f10f41fb2e256c2e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45130c59e988c6825b14b9f10f41fb2e256c2e5"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "3d8c5503ebe152d32e4a630d44c4052a95e5fe9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98fe146e5be55232c20ef242ee7c7e2123373df4", "patch": "@@ -1,3 +1,13 @@\n+2018-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR target/80080\n+\t* cfgcleanup.c (class pass_postreload_jump): New pass.\n+\t(pass_postreload_jump::execute): Likewise.\n+\t(make_pass_postreload_jump): Likewise.\n+\t* passes.def: Add pass_postreload_jump before\n+\tpass_postreload_cse.\n+\t* tree-pass.h (make_pass_postreload_jump): New pass.\n+\n 2018-12-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (inline_memory_move_cost): Correctly"}, {"sha": "bc4a78889db66adc7142e9a50d8a868a58f30052", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=98fe146e5be55232c20ef242ee7c7e2123373df4", "patch": "@@ -3259,6 +3259,48 @@ make_pass_jump (gcc::context *ctxt)\n \f\n namespace {\n \n+const pass_data pass_data_postreload_jump =\n+{\n+  RTL_PASS, /* type */\n+  \"postreload_jump\", /* name */\n+  OPTGROUP_NONE, /* optinfo_flags */\n+  TV_JUMP, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  0, /* todo_flags_finish */\n+};\n+\n+class pass_postreload_jump : public rtl_opt_pass\n+{\n+public:\n+  pass_postreload_jump (gcc::context *ctxt)\n+    : rtl_opt_pass (pass_data_postreload_jump, ctxt)\n+  {}\n+\n+  /* opt_pass methods: */\n+  virtual unsigned int execute (function *);\n+\n+}; // class pass_postreload_jump\n+\n+unsigned int\n+pass_postreload_jump::execute (function *)\n+{\n+  cleanup_cfg (flag_thread_jumps ? CLEANUP_THREADING : 0);\n+  return 0;\n+}\n+\n+} // anon namespace\n+\n+rtl_opt_pass *\n+make_pass_postreload_jump (gcc::context *ctxt)\n+{\n+  return new pass_postreload_jump (ctxt);\n+}\n+\n+namespace {\n+\n const pass_data pass_data_jump2 =\n {\n   RTL_PASS, /* type */"}, {"sha": "0079fecef3216199da232f7cdb351566d6b02e43", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=98fe146e5be55232c20ef242ee7c7e2123373df4", "patch": "@@ -458,6 +458,7 @@ along with GCC; see the file COPYING3.  If not see\n       NEXT_PASS (pass_reload);\n       NEXT_PASS (pass_postreload);\n       PUSH_INSERT_PASSES_WITHIN (pass_postreload)\n+\t  NEXT_PASS (pass_postreload_jump);\n \t  NEXT_PASS (pass_postreload_cse);\n \t  NEXT_PASS (pass_gcse2);\n \t  NEXT_PASS (pass_split_after_reload);"}, {"sha": "a2271703003d89deebceaaf14ca0bd33ac61f9d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98fe146e5be55232c20ef242ee7c7e2123373df4", "patch": "@@ -1,3 +1,8 @@\n+2018-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR target/80080\n+\t* gcc.target/s390/pr80080-4.c: New test.\n+\n 2018-12-02  Andi Kleen  <ak@linux.intel.com>\n \n \t* gcc.target/i386/returninst1.c: Run on 64bit only."}, {"sha": "5fc6a558008ff0502588bfba94a16c7ea748c6f5", "filename": "gcc/testsuite/gcc.target/s390/pr80080-4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr80080-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr80080-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr80080-4.c?ref=98fe146e5be55232c20ef242ee7c7e2123373df4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-march=z196 -O2\" } */\n+\n+extern void bar(int *mem);\n+\n+void foo4(int *mem)\n+{\n+  int oldval = 0;\n+  if (!__atomic_compare_exchange_n (mem, (void *) &oldval, 1,\n+\t\t\t\t    1, __ATOMIC_ACQUIRE, __ATOMIC_RELAXED))\n+    {\n+      bar (mem);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler {(?n)\\n\\tlt\\t.*\\n\\tjne\\t(\\.L\\d+)\\n(.*\\n)*\\tcs\\t.*\\n\\tber\\t%r14\\n\\1:\\n\\tjg\\tbar\\n} } } */"}, {"sha": "b20d34c15e98e48362c7fbb4a53267b016c5749c", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fe146e5be55232c20ef242ee7c7e2123373df4/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=98fe146e5be55232c20ef242ee7c7e2123373df4", "patch": "@@ -579,6 +579,7 @@ extern rtl_opt_pass *make_pass_clean_state (gcc::context *ctxt);\n extern rtl_opt_pass *make_pass_branch_prob (gcc::context *ctxt);\n extern rtl_opt_pass *make_pass_value_profile_transformations (gcc::context\n \t\t\t\t\t\t\t      *ctxt);\n+extern rtl_opt_pass *make_pass_postreload_jump (gcc::context *ctxt);\n extern rtl_opt_pass *make_pass_postreload_cse (gcc::context *ctxt);\n extern rtl_opt_pass *make_pass_gcse2 (gcc::context *ctxt);\n extern rtl_opt_pass *make_pass_split_after_reload (gcc::context *ctxt);"}]}