{"sha": "ed73881ea9ff3c99389618defe96b814cb952135", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3Mzg4MWVhOWZmM2M5OTM4OTYxOGRlZmU5NmI4MTRjYjk1MjEzNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2013-02-04T12:19:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-02-04T12:19:25Z"}, "message": "re PR lto/56168 (GCC seems to disregard -fno-builtin when compiling with LTO)\n\n2013-02-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/56168\n\t* lto-symtab.c (lto_symtab_merge_decls_1): Make non-builtin\n\tnode prevail as last resort.\n\t(lto_symtab_merge_decls): Remove guard on LTRANS here.\n\t(lto_symtab_prevailing_decl): Builtins are their own prevailing\n\tdecl.\n\n\tlto/\n\t* lto.c (read_cgraph_and_symbols): Do not call lto_symtab_merge_decls\n\tor lto_fixup_decls at LTRANS time.\n\n\t* gcc.dg/lto/pr56168_0.c: New testcase.\n\t* gcc.dg/lto/pr56168_1.c: Likewise.\n\nFrom-SVN: r195709", "tree": {"sha": "621502d44633d587a4706564dbe2902f5db4f1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/621502d44633d587a4706564dbe2902f5db4f1e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed73881ea9ff3c99389618defe96b814cb952135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed73881ea9ff3c99389618defe96b814cb952135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed73881ea9ff3c99389618defe96b814cb952135", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed73881ea9ff3c99389618defe96b814cb952135/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "139a0707cb46308598ece7785130679ea6e737a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139a0707cb46308598ece7785130679ea6e737a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139a0707cb46308598ece7785130679ea6e737a8"}], "stats": {"total": 77, "additions": 61, "deletions": 16}, "files": [{"sha": "6d5d53d7d009ede7ea4e48c07ab4fff7162a3ae9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -1,3 +1,12 @@\n+2013-02-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/56168\n+\t* lto-symtab.c (lto_symtab_merge_decls_1): Make non-builtin\n+\tnode prevail as last resort.\n+\t(lto_symtab_merge_decls): Remove guard on LTRANS here.\n+\t(lto_symtab_prevailing_decl): Builtins are their own prevailing\n+\tdecl.\n+\n 2013-02-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56113"}, {"sha": "2b182ffaedfda62c8a995f12096e963752b81189", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -439,12 +439,12 @@ lto_symtab_merge_decls_1 (symtab_node first)\n \t\t&& COMPLETE_TYPE_P (TREE_TYPE (e->symbol.decl)))\n \t      prevailing = e;\n \t}\n-      /* For variables prefer the builtin if one is available.  */\n+      /* For variables prefer the non-builtin if one is available.  */\n       else if (TREE_CODE (prevailing->symbol.decl) == FUNCTION_DECL)\n \t{\n \t  for (e = first; e; e = e->symbol.next_sharing_asm_name)\n \t    if (TREE_CODE (e->symbol.decl) == FUNCTION_DECL\n-\t\t&& DECL_BUILT_IN (e->symbol.decl))\n+\t\t&& !DECL_BUILT_IN (e->symbol.decl))\n \t      {\n \t\tprevailing = e;\n \t\tbreak;\n@@ -507,12 +507,6 @@ lto_symtab_merge_decls (void)\n {\n   symtab_node node;\n \n-  /* In ltrans mode we read merged cgraph, we do not really need to care\n-     about resolving symbols again, we only need to replace duplicated declarations\n-     read from the callgraph and from function sections.  */\n-  if (flag_ltrans)\n-    return;\n-\n   /* Populate assembler name hash.   */\n   symtab_initialize_asm_name_hash ();\n \n@@ -598,6 +592,11 @@ lto_symtab_prevailing_decl (tree decl)\n   if (TREE_CODE (decl) == FUNCTION_DECL && DECL_ABSTRACT (decl))\n     return decl;\n \n+  /* Likewise builtins are their own prevailing decl.  This preserves\n+     non-builtin vs. builtin uses from compile-time.  */\n+  if (TREE_CODE (decl) == FUNCTION_DECL && DECL_BUILT_IN (decl))\n+    return decl;\n+\n   /* Ensure DECL_ASSEMBLER_NAME will not set assembler name.  */\n   gcc_assert (DECL_ASSEMBLER_NAME_SET_P (decl));\n "}, {"sha": "2da6ae1d2059eb38446271cf5b8efd2919c3abd6", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -1,3 +1,9 @@\n+2013-02-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/56168\n+\t* lto.c (read_cgraph_and_symbols): Do not call lto_symtab_merge_decls\n+\tor lto_fixup_decls at LTRANS time.\n+\n 2013-01-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/45375"}, {"sha": "6edf87a45b0cb6bda988110826db93adcf826a5d", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -3033,16 +3033,22 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n     fprintf (stderr, \"Merging declarations\\n\");\n \n   timevar_push (TV_IPA_LTO_DECL_MERGE);\n-  /* Merge global decls.  */\n-  lto_symtab_merge_decls ();\n+  /* Merge global decls.  In ltrans mode we read merged cgraph, we do not\n+     need to care about resolving symbols again, we only need to replace\n+     duplicated declarations read from the callgraph and from function\n+     sections.  */\n+  if (!flag_ltrans)\n+    {\n+      lto_symtab_merge_decls ();\n \n-  /* If there were errors during symbol merging bail out, we have no\n-     good way to recover here.  */\n-  if (seen_error ())\n-    fatal_error (\"errors during merging of translation units\");\n+      /* If there were errors during symbol merging bail out, we have no\n+\t good way to recover here.  */\n+      if (seen_error ())\n+\tfatal_error (\"errors during merging of translation units\");\n \n-  /* Fixup all decls.  */\n-  lto_fixup_decls (all_file_decl_data);\n+      /* Fixup all decls.  */\n+      lto_fixup_decls (all_file_decl_data);\n+    }\n   htab_delete (tree_with_vars);\n   tree_with_vars = NULL;\n   ggc_collect ();"}, {"sha": "f4eb094c644f1a162cad275d4e22f28235293be9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -1,3 +1,9 @@\n+2013-02-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/56168\n+\t* gcc.dg/lto/pr56168_0.c: New testcase.\n+\t* gcc.dg/lto/pr56168_1.c: Likewise.\n+\n 2013-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/50627"}, {"sha": "13f768e7e7662c4f7dd2271b5044ae7090003eb3", "filename": "gcc/testsuite/gcc.dg/lto/pr56168_0.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr56168_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr56168_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr56168_0.c?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { { -flto -O -ffast-math -fno-builtin } } } */\n+\n+extern double pow(double, double);\n+extern void abort (void);\n+volatile double x = 1.0;\n+int main(int argc, char **argv)\n+{\n+  double d1 = x;\n+  double d2 = pow(d1, 1.0 / 3.0);\n+  double d3 = d1 * d1;\n+  if (d3 != 1.0 || d2 != 0.0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "560d0bda8ee1fdf1e064bae20ec79db09041f04b", "filename": "gcc/testsuite/gcc.dg/lto/pr56168_1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr56168_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed73881ea9ff3c99389618defe96b814cb952135/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr56168_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr56168_1.c?ref=ed73881ea9ff3c99389618defe96b814cb952135", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-options \"-fno-lto\" } */\n+\n+double __attribute__((noinline,noclone))\n+pow (double x, double y) { return 0.0; }"}]}