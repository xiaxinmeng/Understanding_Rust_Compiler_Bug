{"sha": "d78301422a49df7a588e9b6a3c037ddb4c55e153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4MzAxNDIyYTQ5ZGY3YTU4OGU5YjZhM2MwMzdkZGI0YzU1ZTE1Mw==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2010-09-03T18:10:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-09-03T18:10:46Z"}, "message": "libstdc++.exp ([check_v3_target_debug_mode]): Fix so that it really detects when debug mode is activated.\n\n2010-09-03  Fran\u00e7ois Dumont <francois.cppdevs@free.fr>\n\n        * testsuite/lib/libstdc++.exp ([check_v3_target_debug_mode]): Fix so\n        that it really detects when debug mode is activated.\n        * testsuite/util/debug/construct_neg.h, insert_neg.h, assign_neg.h:\n        Remove, content moved...\n        * testsuite/util/debug/checks.h: ... here. Modify checks to take the\n\ttype of the container to test rather than an intermediate container\n        type traits helper.\n\t* testsuite/23_containers/unordered_map/debug/insert1_neg.cc: Update to\n\tuse dg-require-debug-mode when necessary and use new check functions.\n\t* testsuite/23_containers/unordered_map/debug/construct1_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_map/debug/construct2_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_map/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_map/debug/construct3_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_map/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_map/debug/construct4_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_map/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/multimap/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/set/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_multimap/debug/insert1_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/construct1_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/construct2_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/insert2_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/construct3_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/insert3_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/construct4_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/insert4_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/debug/assign1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/assign2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/assign3_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/assign4_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/debug/construct1_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_set/debug/construct2_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_set/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/debug/construct3_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_set/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/debug/construct4_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_set/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/assign1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/assign2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/assign3_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/assign4_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/multiset/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/assign1_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/assign2_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/assign3_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/assign4_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/list/debug/insert4_neg.cc: Likewise.\n\t* testsuite/23_containers/unordered_multiset/debug/insert1_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/construct1_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/construct2_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/insert2_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/construct3_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/insert3_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/construct4_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/insert4_neg.cc: \n\tLikewise.\n\t* testsuite/23_containers/map/debug/insert1_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/construct1_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/construct2_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/insert2_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/construct3_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/insert3_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/construct4_neg.cc: Likewise.\n\t* testsuite/23_containers/map/debug/insert4_neg.cc: Likewise.\n\n\t* testsuite/23_containers/unordered_map/debug/cont_traits.h: Remove.\n\t* testsuite/23_containers/unordered_map/debug/debug_cont_traits.h:\n\tLikewise.\n\t* testsuite/23_containers/multimap/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/multimap/debug/debug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/set/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/set/debug/debug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/unordered_multimap/debug/cont_traits.h:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/debug/\n\tdebug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/vector/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/vector/debug/debug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/unordered_set/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/unordered_set/debug/debug_cont_traits.h:\n\tLikewise.\n\t* testsuite/23_containers/deque/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/deque/debug/debug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/multiset/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/multiset/debug/debug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/list/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/list/debug/debug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/unordered_multiset/debug/cont_traits.h: \n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/debug/\n\tdebug_cont_traits.h: Likewise.\n\t* testsuite/23_containers/map/debug/cont_traits.h: Likewise.\n\t* testsuite/23_containers/map/debug/debug_cont_traits.h: Likewise.\n\n\t* testsuite/21_strings/basic_string/element_access/char: Tidy.\n\t* testsuite/21_strings/basic_string/element_access/wchar_t: Likewise.\n\nFrom-SVN: r163837", "tree": {"sha": "5fc73bda449ee2263a285ace1c2f34ff20e1eb47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fc73bda449ee2263a285ace1c2f34ff20e1eb47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78301422a49df7a588e9b6a3c037ddb4c55e153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78301422a49df7a588e9b6a3c037ddb4c55e153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78301422a49df7a588e9b6a3c037ddb4c55e153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78301422a49df7a588e9b6a3c037ddb4c55e153/comments", "author": null, "committer": null, "parents": [{"sha": "124a8ce610d0f8d315d491810e4b69b686c9c6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124a8ce610d0f8d315d491810e4b69b686c9c6a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124a8ce610d0f8d315d491810e4b69b686c9c6a8"}], "stats": {"total": 2402, "additions": 927, "deletions": 1475}, "files": [{"sha": "45a8f019ebc5645b4e224eae129c7f89714add77", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -1,3 +1,170 @@\n+2010-09-03  Fran\u00e7ois Dumont <francois.cppdevs@free.fr>\n+\n+        * testsuite/lib/libstdc++.exp ([check_v3_target_debug_mode]): Fix so\n+        that it really detects when debug mode is activated.\n+        * testsuite/util/debug/construct_neg.h, insert_neg.h, assign_neg.h:\n+        Remove, content moved...\n+        * testsuite/util/debug/checks.h: ... here. Modify checks to take the\n+\ttype of the container to test rather than an intermediate container\n+        type traits helper.\n+\t* testsuite/23_containers/unordered_map/debug/insert1_neg.cc: Update to\n+\tuse dg-require-debug-mode when necessary and use new check functions.\n+\t* testsuite/23_containers/unordered_map/debug/construct1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/debug/construct2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_map/debug/construct3_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_map/debug/construct4_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/multimap/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/insert1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/construct1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/construct2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/insert2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/construct3_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/insert3_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/construct4_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/insert4_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/debug/assign1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/assign2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/assign3_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/assign4_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/debug/construct1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/debug/construct2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/debug/construct3_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/debug/construct4_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/assign1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/assign2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/assign3_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/assign4_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/multiset/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/assign1_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/assign2_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/assign3_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/assign4_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/debug/insert4_neg.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/insert1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/construct1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/construct2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/insert2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/construct3_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/insert3_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/construct4_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/insert4_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/map/debug/insert1_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/construct1_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/construct2_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/insert2_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/construct3_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/insert3_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/debug/insert4_neg.cc: Likewise.\n+\n+\t* testsuite/23_containers/unordered_map/debug/cont_traits.h: Remove.\n+\t* testsuite/23_containers/unordered_map/debug/debug_cont_traits.h:\n+\tLikewise.\n+\t* testsuite/23_containers/multimap/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/multimap/debug/debug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/set/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/set/debug/debug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/cont_traits.h:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/debug/\n+\tdebug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/vector/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/vector/debug/debug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/unordered_set/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/unordered_set/debug/debug_cont_traits.h:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/deque/debug/debug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/multiset/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/multiset/debug/debug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/list/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/list/debug/debug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/cont_traits.h:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/debug/\n+\tdebug_cont_traits.h: Likewise.\n+\t* testsuite/23_containers/map/debug/cont_traits.h: Likewise.\n+\t* testsuite/23_containers/map/debug/debug_cont_traits.h: Likewise.\n+\n+\t* testsuite/21_strings/basic_string/element_access/char: Tidy.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t: Likewise.\n+\n 2010-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/40974"}, {"sha": "c8a8b93472a247d6fd9c7af983afd7f968b0f6ee", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/char/21674.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F21674.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F21674.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fchar%2F21674.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -1,6 +1,6 @@\n // { dg-do run { xfail *-*-* } }\n+// { dg-options \"-O0\" }\n // { dg-require-debug-mode \"\" }\n-// { dg-options \"-O0 -D_GLIBCXX_DEBUG\" }\n \n // Copyright (C) 2005, 2009, 2010 Free Software Foundation, Inc.\n //\n@@ -19,7 +19,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n #include <string>\n \n // libstdc++/21674"}, {"sha": "95046463dae2390ebcdca282ef4dd78306c990ac", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F21674.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F21674.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Felement_access%2Fwchar_t%2F21674.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -1,6 +1,6 @@\n // { dg-do run { xfail *-*-* } }\n+// { dg-options \"-O0\" }\n // { dg-require-debug-mode \"\" }\n-// { dg-options \"-O0 -D_GLIBCXX_DEBUG\" }\n \n // Copyright (C) 2005, 2009, 2010 Free Software Foundation, Inc.\n //\n@@ -19,7 +19,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n #include <string>\n \n // libstdc++/21674"}, {"sha": "9a4d7d4394ed7df4ad88f53e9b853211b2008c5e", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/assign1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_assign1<std::deque<int> >();\n }\n \n int main()"}, {"sha": "32eda8794dc7832ce6365560983f0d831ef21a70", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/assign2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_assign2<std::deque<int> >();\n }\n \n int main()"}, {"sha": "3d2b15e9431563ed2cc761300f3075d4f4628731", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/assign3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_assign3<std::deque<int> >();\n }\n \n int main()"}, {"sha": "7b6204158ad7b6e6848a930a22b1986a45217798", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/assign4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fassign4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_assign1<__gnu_debug::deque<int> >();\n }\n \n int main()"}, {"sha": "6268951d7322d34e3c6d1ddbf4752186fff7c7e0", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::deque<int> >();\n }\n \n int main()"}, {"sha": "3b8d77547fa3ca813cb56764c3bcc6da58be0c77", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::deque<int> >();\n }\n \n int main()"}, {"sha": "1187cf8b1e1552ee2f896f7579ada233880c71d8", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::deque<int> >();\n }\n \n int main()"}, {"sha": "7d7906d0511f7fbe3c75162da379e16d4ba23b1e", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::deque<int> >();\n }\n \n int main()"}, {"sha": "13ab4f9fdf6599510fef289b4d7c1ef21aaa4cc6", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <deque>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::deque<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(cont.begin(), first, last); }\n-  };"}, {"sha": "b4dda9250a93f49823e215608095a3bf3506a89d", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/deque>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::deque<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(cont.begin(), first, last); }\n-  };"}, {"sha": "38b4f554a401d5d7effe15cf2a4e6caa5560ce3e", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::deque<int> >();\n }\n \n int main()"}, {"sha": "5aa7efae6dd31b457f45178c7cf2fb257cc38a3f", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::deque<int> >();\n }\n \n int main()"}, {"sha": "bd854ad87dd76d919019a5aaa188f56c65f8f144", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::deque<int> >();\n }\n \n int main()"}, {"sha": "ff88760ad446868899640376ae6b117f92921baf", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/deque>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::deque<int> >();\n }\n \n int main()"}, {"sha": "e7b0e5cfe1491cddec897b86607f3725359a313d", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/assign1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_assign1<std::list<int> >();\n }\n \n int main()"}, {"sha": "1bd6c2f9076e225df2df419fc13c9f08eb0ecb88", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/assign2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_assign2<std::list<int> >();\n }\n \n int main()"}, {"sha": "7a40d318911cde4cecfa56aee3214cffc1de97cc", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/assign3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_assign3<std::list<int> >();\n }\n \n int main()"}, {"sha": "bde7b923ee773d9af938086272b3750f4b085646", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/assign4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fassign4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_assign1<__gnu_debug::list<int> >();\n }\n \n int main()"}, {"sha": "cbd045571a1c480548c0777bfd282b87efdd65d3", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::list<int> >();\n }\n \n int main()"}, {"sha": "40fdf43b8b28ae3f45f1abf9592caa952719d7d9", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::list<int> >();\n }\n \n int main()"}, {"sha": "5000f5a0793e55f224594723ae8d2af701877928", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::list<int> >();\n }\n \n int main()"}, {"sha": "29843ea43b5f6331a7653ee8daff43c95887f65f", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::list<int> >();\n }\n \n int main()"}, {"sha": "662a97e24ad6135a01fcc7af6ae049e3619e4bfc", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <list>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::list<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(cont.begin(), first, last); }\n-  };"}, {"sha": "4993735433af98a6b5a1dbbcd95365c37696ee85", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/list>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::list<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(cont.begin(), first, last); }\n-  };"}, {"sha": "aa35b46cf85ebdea44fd3897b9f16519dbae1173", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::list<int> >();\n }\n \n int main()"}, {"sha": "dc84fdd584fc081dadf803d49c9fd0733714e44f", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::list<int> >();\n }\n \n int main()"}, {"sha": "aa49108386e48181db46fb7934ccc780e907bb9a", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::list<int> >();\n }\n \n int main()"}, {"sha": "ade2806881f59aad1e7dcff8e61ca31d43cc2984", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/list>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::list<int> >();\n }\n \n int main()"}, {"sha": "72adcf42e381dfbddfcd8ccd9c7da6d99d35ba62", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::map<int, int> >();\n }\n \n int main()"}, {"sha": "a9cb0e300c33d6d5b229879ac4235c497584cbde", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::map<int, int> >();\n }\n \n int main()"}, {"sha": "7f88827db77f7d91c926639772f59dba2ebb2249", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::map<int, int> >();\n }\n \n int main()"}, {"sha": "ce2eccc3839af9c601d6bd7c00eb8236e6592bc6", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::map<int, int> >();\n }\n \n int main()"}, {"sha": "739ee7a719b0701e87564b2be9f1bbb159aa7f56", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::map<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "34acf372c3848ebf19c1a4f9ac19aa46e1f1d558", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::map<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "7b868a7aff66cacb95d6ec7f3e36ea369133edd6", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::map<int, int> >();\n }\n \n int main()"}, {"sha": "93c6c7ef51a0247adac1020b96465d52d1daca9c", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::map<int, int> >();\n }\n \n int main()"}, {"sha": "2802a0de5bca013f0d6ede7bce4fdc2ee1119615", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::map<int, int> >();\n }\n \n int main()"}, {"sha": "a68d601089bb16d65b651fda9cd07b15ea70963e", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::map<int, int> >();\n }\n \n int main()"}, {"sha": "13f5763fb844bff7aa9e1f5ba1fa456445f28e04", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "9c389e199fbaf05c35071c191565b978aac3a3a1", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "b5a5288f530e411f643b7c421341bb3d02a351bf", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "7c267f4183115d30d0c8dc752fb65d37c057db9d", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "495e3e4861a50333e59ca1d6f1efb6a29193b166", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::multimap<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "98bd1f2f9e6d0f2db333294a6a2e0ef5481b7c87", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::multimap<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "879af771c828cefc9eddb69315cf170a2dcf7578", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "883ff148a4640dd576559d850bbf4cac7d0521e8", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "f75efb58b5652a0c737145b5361494e8c9d4811b", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "0e5102b74b799c232def70ccd6c14825e184e6c7", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::multimap<int, int> >();\n }\n \n int main()"}, {"sha": "04b0e33f9de6026525956a5d98db91ac3b286c1a", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::multiset<int> >();\n }\n \n int main()"}, {"sha": "d7dd965d30decad917294a2a67694578e359a766", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::multiset<int> >();\n }\n \n int main()"}, {"sha": "cc3e1471d11a0934aab69900a65d68f3c370b2b5", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::multiset<int> >();\n }\n \n int main()"}, {"sha": "181f4f902fca053ff591259270454cd273fb5628", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::multiset<int> >();\n }\n \n int main()"}, {"sha": "4e06da23c3a816db4c60b8fdbc5f4d6dfa8eec54", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::multiset<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "d5bafe4018570b730f5753528f0df238a378af6f", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::multiset<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "32f20a90b76f48fc37d07661e2c523094b76c6f6", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::multiset<int> >();\n }\n \n int main()"}, {"sha": "699f0dd4710b2c7018aca3a6532effa339e48638", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::multiset<int> >();\n }\n \n int main()"}, {"sha": "92f864d6071ce66a0a8c7410fb706f35c924c88f", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::multiset<int> >();\n }\n \n int main()"}, {"sha": "a0881075fdbc145f1661dd3b01779b90baa577a1", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::multiset<int> >();\n }\n \n int main()"}, {"sha": "424eb8be20e92675da11e30a8ad15c2e026f267d", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::set<int> >();\n }\n \n int main()"}, {"sha": "d5819925b50f427178671f599cc35aced0b6cc67", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::set<int> >();\n }\n \n int main()"}, {"sha": "1cc7dd2345d628c08f6aa0d8b32af0f9661c1d76", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::set<int> >();\n }\n \n int main()"}, {"sha": "d464aabfbab3f43443da3abbc46f8d31bd35aac0", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::set<int> >();\n }\n \n int main()"}, {"sha": "fbcc0ff3eb2bf0c2c244293dc9ada2382b3086bb", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::set<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "5f693769128ff88c562593adacd8a0a4fd72bbb2", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::set<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "3192ff9594ff922252e8a909aba785c03e1cc388", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::set<int> >();\n }\n \n int main()"}, {"sha": "d0d16cfb9dd4d41122d8e0472330efaa1755afc3", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::set<int> >();\n }\n \n int main()"}, {"sha": "9eaf6f82bed8f2626e509318754a8d608c71f911", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::set<int> >();\n }\n \n int main()"}, {"sha": "c2424d2a3703e414055f12b9d27e46d2c07df57d", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::set<int> >();\n }\n \n int main()"}, {"sha": "31961f7ce94b95a659b0064e88fe176012a7197e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "560651a46cc1cee6abe632dbc510430e385937c8", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "7d57272f1f0f21579eaa61ba8a4601e1f36ce3bc", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "e37cab21aa9f77e0bbcdaefdcb53a67bd28835a6", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "262b3585454be73a8d9fc49b4827bc6344cab33c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <unordered_map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::unordered_map<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "7b3b8c393d7bafc1e5e109f84cb20d9a1e51296d", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/unordered_map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::unordered_map<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "f3d06bf744b793f2c982c61a417319264b6a259e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "09d55e19056bda49fe61a12020e690991d88fab5", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "41af7591772515fa50d90a9ad3082a7720970e25", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "6239431bbaff17e5f0aa40e91a374beb0751b28e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::unordered_map<int, int> >();\n }\n \n int main()"}, {"sha": "7a17e4c0e92b81935c67aef5ee9aac3466d5ca00", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "8f2c1a6d95e595ed217ce7be33b824f87d8e5fbf", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "3fb4be737b3bd1f7e5969b00b88a16a4d222b872", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "000745e75d5f27b8288ad4dc183a16055a352034", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "1212274c5faed1efbd05b252013f3c2efc77ad82", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <unordered_map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::unordered_multimap<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val_type(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "d66594dcaf57ac950118d0d86ccac23e7e3de255", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/unordered_map>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::unordered_multimap<Type, Type> cont_type;\n-    typedef std::pair<Type, Type> val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return std::pair<Type, Type>(val, val); }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "e36a0a1703372c137247b98519b2655e6a1ca1d2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "04a488be1127fc90dd0c3c98319ed7c09242d8f3", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "1c7f60f93cc7cfa766fbfbe3c30bc028ad2a2889", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "988c31293540580ee8b6e853cf452b6bfa3c1138", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_map>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::unordered_multimap<int, int> >();\n }\n \n int main()"}, {"sha": "7d8989074f31fbcc7e7927200f9d1405b2e3d033", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "ea6857aa2125efa521c58d19284c76f18b96d806", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "20a4659629d167af8f7a2bed6b6cde950b41cacd", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "4fbb4fad6c403944fef1523cd121a401491e711f", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "b82d737483c26b5aa14ae92b8b765e964a7b05ff", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <unordered_set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::unordered_multiset<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "7053683e5060eed366b985d98f8a405cd9086b23", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/unordered_set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::unordered_multiset<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "c65c6083d75413f9952ca0cce5de0cb98e5d429a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "6496624ee6664782fc84a41963a5e6a6ea1a4b7e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "b12fe5764cc122e4a708e2d007091bc5435f4efa", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "0f2acea40e295b993ebaa078d79f47a617fffc39", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::unordered_multiset<int> >();\n }\n \n int main()"}, {"sha": "e37e5209d7ffe1643399a4227afb856d4fed424c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "90e5d55a4fb390fff8092b36d89c0d0446010e2e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "e7222a9c275bd1b84b3e5afe32b25f4850de1f02", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "8eb0304292cdb9a5d469aeb5e387674bed23c61e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "7709f49124e332371ddf5613688d32f14ebe231a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <unordered_set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::unordered_set<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "f4d6e9bb5be08e9588154160d638a63dfd31c04d", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/unordered_set>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::unordered_set<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(first, last); }\n-  };"}, {"sha": "ab6942ccaf30d639012af92c5d9504fde83c153e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "81be39da9d9262e2e77fa3d5b459c24a9f15b96e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "2d3b7e472c67c1bc98315a399c502340389cfa19", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,15 +15,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "96d6a2a05a4ffa295dd7ed42c4283a0b207199be", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -18,12 +18,12 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/unordered_set>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::unordered_set<int> >();\n }\n \n int main()"}, {"sha": "ff9c5a24b18daad796dde6f9a0639d070d73ad33", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/assign1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_assign1<std::vector<int> >();\n }\n \n int main()"}, {"sha": "4384a97bd26497267bea7dc3f8e9d8ee94908f25", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/assign2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_assign2<std::vector<int> >();\n }\n \n int main()"}, {"sha": "9cb7ea6f9bceab51708c2f74d4128ce21a0cddad", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/assign3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_assign3<std::vector<int> >();\n }\n \n int main()"}, {"sha": "8e3d3be9c01919ec22cf79cfa2341a3e6fdfcf09", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/assign4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fassign4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/assign_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_assign1<__gnu_debug::vector<int> >();\n }\n \n int main()"}, {"sha": "dc0b4a22eb7ec69dc582004c7aac187112770975", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/construct1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_construct1<std::vector<int> >();\n }\n \n int main()"}, {"sha": "13757a1fa5e66218b64173e89c6063352b3996d5", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/construct2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_construct2<std::vector<int> >();\n }\n \n int main()"}, {"sha": "661af4382d8d18dcee9366832c49380c9e5cf4db", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/construct3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_construct3<std::vector<int> >();\n }\n \n int main()"}, {"sha": "ec33a581340b07ca2973caf606263d1d169d379e", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/construct4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fconstruct4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/construct_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_construct1<__gnu_debug::vector<int> >();\n }\n \n int main()"}, {"sha": "cdd9a08b4444d3049fb5c70403bca9916d29bffb", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fcont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fcont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fcont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <vector>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef std::vector<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(cont.begin(), first, last); }\n-  };"}, {"sha": "204caff25c9e3f025cef065b02f7cbcc563e1e20", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/debug_cont_traits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fdebug_cont_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fdebug_cont_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fdebug_cont_traits.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <debug/vector>\n-\n-template<typename Type>\n-  struct cont_traits\n-  {\n-    typedef __gnu_debug::vector<Type> cont_type;\n-    typedef Type val_type;\n-\n-    static val_type\n-    make_val(Type val)\n-    { return val; }\n-\n-    template<typename Iter>\n-      static void\n-      insert(cont_type& cont, Iter first, Iter last)\n-      { cont.insert(cont.begin(), first, last); }\n-  };"}, {"sha": "2ec0d9e02a9d278ab1fd10414ccbd4b65f30b7ca", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/insert1_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert1_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check1<cont_traits>();\n+  __gnu_test::check_insert1<std::vector<int> >();\n }\n \n int main()"}, {"sha": "011ad4c0c312dc4494d629b8ed0b1f51f14c1f01", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/insert2_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert2_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check2<cont_traits>();\n+  __gnu_test::check_insert2<std::vector<int> >();\n }\n \n int main()"}, {"sha": "4dab133b5713a280b70bae9cf0aa66169d3c6202", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/insert3_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert3_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert3_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert3_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -15,14 +15,15 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n //\n+// { dg-require-debug-mode \"\" }\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"cont_traits.h\"\n+#include <vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  check3<cont_traits>();\n+  __gnu_test::check_insert3<std::vector<int> >();\n }\n \n int main()"}, {"sha": "684ebb598c1b6991806463515fdf71e625b947ef", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/insert4_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Finsert4_neg.cc?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -17,12 +17,12 @@\n //\n // { dg-do run { xfail *-*-* } }\n \n-#include <debug/insert_neg.h>\n-#include \"debug_cont_traits.h\"\n+#include <debug/vector>\n+#include <debug/checks.h>\n \n void test01()\n {\n-  debug_check1<cont_traits>();\n+  __gnu_test::check_insert1<__gnu_debug::vector<int> >();\n }\n \n int main()"}, {"sha": "13dad49ffc47b819e8bdf522a838954ca994d588", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -947,21 +947,20 @@ proc check_v3_target_debug_mode { } {\n \tset et_debug_mode 0\n \n \t# Set up and compile a C++ test program that depends\n-\t# on debug mode working.\n+\t# on debug mode activated.\n \tset src debug_mode[pid].cc\n \tset exe debug_mode[pid].exe\n \n \tset f [open $src \"w\"]\n \tputs $f \"#include <string>\"\n-\tputs $f \"using namespace std;\"\t\n+\tputs $f \"#ifndef _GLIBCXX_DEBUG\"\n+\tputs $f \"#  error No debug mode\"\n+\tputs $f \"#endif\"\n \tputs $f \"int main()\"\n \tputs $f \"{ return 0; }\"\n \tclose $f\n \n-\tset cxxflags_saved $cxxflags\n-\tset cxxflags \"$cxxflags -Werror -O0 -D_GLIBCXX_DEBUG\"\n \tset lines [v3_target_compile $src $exe executable \"\"]\n-\tset cxxflags $cxxflags_saved\n \tfile delete $src\n \n \tif [string match \"\" $lines] {"}, {"sha": "332c716c2975120e80e28a316041a43f0e6ce06b", "filename": "libstdc++-v3/testsuite/util/debug/assign_neg.h", "status": "removed", "additions": 0, "deletions": 136, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fassign_neg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fassign_neg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fassign_neg.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,136 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <vector>\n-#include <list>\n-#include <testsuite_hooks.h>\n-\n-// Check that invalid range of pointers is detected\n-template<template <typename> class ContTraits>\n-  void\n-  debug_check1()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::vector<val_type> vector_type;\n-\n-    vector_type v;\n-    for (int i = 0; i != 5; ++i)\n-      v.push_back(Traits::make_val(i));\n-    VERIFY(v.size() == 5);\n-\n-    const val_type* first = &v.front() + 1;\n-    const val_type* last = first + 2;\n-\n-    cont_type c1;\n-    c1.assign(first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2;\n-    c2.assign(last, first); // Expected failure\n-  }\n-\n-template <template <typename> class ContTraits>\n-  void\n-  check1()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check1<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }\n-\n-// Check that invalid range of debug random iterators is detected\n-template<template <typename> class ContTraits>\n-  void\n-  debug_check2()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::vector<val_type> vector_type;\n-\n-    vector_type v;\n-    for (int i = 0; i != 5; ++i)\n-      v.push_back(Traits::make_val(i));\n-    VERIFY(v.size() == 5);\n-\n-    typename vector_type::iterator first = v.begin() + 1;\n-    typename vector_type::iterator last = first + 2;\n-    cont_type c1;\n-    c1.assign(first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2;\n-    c2.assign(last, first); // Expected failure\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  check2()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check2<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }\n-\n-// Check that invalid range of debug !random debug iterators is detected\n-template<template <typename> class ContTraits>\n-  void\n-  debug_check3()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::list<val_type> list_type;\n-\n-    list_type l;\n-    for (int i = 0; i != 5; ++i)\n-      l.push_back(Traits::make_val(i));\n-    VERIFY(l.size() == 5);\n-\n-    typename list_type::iterator first = l.begin(); ++first;\n-    typename list_type::iterator last = first; ++last; ++last;\n-    cont_type c1;\n-    c1.assign(first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2;\n-    c2.assign(last, first); // Expected failure\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  check3()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check3<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }"}, {"sha": "b42ef1a44c4d0084a7402993d9bd33473cb17e91", "filename": "libstdc++-v3/testsuite/util/debug/checks.h", "status": "added", "additions": 379, "deletions": 0, "changes": 379, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fchecks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78301422a49df7a588e9b6a3c037ddb4c55e153/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fchecks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fchecks.h?ref=d78301422a49df7a588e9b6a3c037ddb4c55e153", "patch": "@@ -0,0 +1,379 @@\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <vector>\n+#include <deque>\n+#include <list>\n+#ifndef _GLIBCXX_DEBUG\n+#  include <debug/vector>\n+#  include <debug/deque>\n+#  include <debug/list>\n+#endif\n+#include <testsuite_hooks.h>\n+\n+namespace __gnu_test\n+{\n+  template<typename _Tp>\n+    struct CopyableValueType\n+    {\n+      typedef _Tp value_type;\n+    };\n+\n+  template<typename _Tp1, typename _Tp2>\n+    struct CopyableValueType<std::pair<const _Tp1, _Tp2> >\n+    {\n+      typedef std::pair<_Tp1, _Tp2> value_type;\n+    };\n+\n+  template<typename _Tp>\n+    struct generate_unique\n+    {\n+      typedef _Tp value_type;\n+\n+      operator value_type()\n+      {\n+\tstatic value_type _S_;\n+\t++_S_;\n+\treturn _S_;\n+      }\n+    };\n+\n+  template<typename _Tp1, typename _Tp2>\n+    struct generate_unique<std::pair<_Tp1, _Tp2> >\n+    {\n+      typedef _Tp1 first_type;\n+      typedef _Tp2 second_type;\n+      typedef std::pair<_Tp1, _Tp2> pair_type;\n+      \n+      operator pair_type()\n+      {\n+\tstatic first_type _S_1;\n+\tstatic second_type _S_2;\n+\t++_S_1;\n+\t++_S_2;\n+\treturn pair_type(_S_1, _S_2);\n+      }\n+    };\n+\n+  // Check that invalid range of pointers is detected\n+  template<typename _Tp>\n+    void\n+    check_assign1()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::vector<val_type> vector_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      vector_type v;\n+      for (int i = 0; i != 5; ++i)\n+        v.push_back(gu);\n+      VERIFY(v.size() == 5);\n+\n+      const val_type* first = &v.front() + 1;\n+      const val_type* last = first + 2;\n+\n+      cont_type c1;\n+      c1.assign(first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2;\n+      c2.assign(last, first); // Expected failure\n+    }\n+\n+  // Check that invalid range of debug random iterators is detected\n+  template<typename _Tp>\n+    void\n+    check_assign2()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::vector<val_type> vector_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      vector_type v;\n+      for (int i = 0; i != 5; ++i)\n+        v.push_back(gu);\n+      VERIFY(v.size() == 5);\n+\n+      typename vector_type::iterator first = v.begin() + 1;\n+      typename vector_type::iterator last = first + 2;\n+      cont_type c1;\n+      c1.assign(first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2;\n+      c2.assign(last, first); // Expected failure\n+    }\n+\n+  // Check that invalid range of debug !random debug iterators is detected\n+  template<typename _Tp>\n+    void\n+    check_assign3()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::list<val_type> list_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      list_type l;\n+      for (int i = 0; i != 5; ++i)\n+        l.push_back(gu);\n+      VERIFY(l.size() == 5);\n+\n+      typename list_type::iterator first = l.begin(); ++first;\n+      typename list_type::iterator last = first; ++last; ++last;\n+      cont_type c1;\n+      c1.assign(first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2;\n+      c2.assign(last, first); // Expected failure\n+    }\n+\n+  // Check that invalid range of pointers is detected\n+  template<typename _Tp>\n+    void\n+    check_construct1()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::vector<val_type> vector_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      vector_type v;\n+      for (int i = 0; i != 5; ++i)\n+        v.push_back(gu);\n+      VERIFY(v.size() == 5);\n+\n+      val_type *first = &v.front() + 1;\n+      val_type *last = first + 2;\n+      cont_type c1(first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2(last, first); // Expected failure\n+    } \n+\n+  // Check that invalid range of debug random iterators is detected\n+  template<typename _Tp>\n+    void\n+    check_construct2()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::vector<val_type> vector_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      vector_type v;\n+      for (int i = 0; i != 5; ++i)\n+        v.push_back(gu);\n+      VERIFY(v.size() == 5);\n+\n+      typename vector_type::iterator first = v.begin() + 1;\n+      typename vector_type::iterator last = first + 2;\n+      cont_type c1(first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2(last, first); // Expected failure\n+    }\n+\n+  // Check that invalid range of debug not random iterators is detected\n+  template<typename _Tp>\n+    void\n+    check_construct3()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::list<val_type> list_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      list_type l;\n+      for (int i = 0; i != 5; ++i)\n+        l.push_back(gu);\n+      VERIFY(l.size() == 5);\n+\n+      typename list_type::iterator first = l.begin(); ++first;\n+      typename list_type::iterator last = first; ++last; ++last;\n+      cont_type c1(first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2(last, first); // Expected failure\n+    }\n+\n+  template <typename _Cont>\n+    struct InsertRangeHelper\n+    {\n+      template <typename _It>\n+        static void\n+        Insert(_Cont& cont, _It first, _It last)\n+\t{ cont.insert(first, last); }\n+    };\n+\n+  template <typename _Cont>\n+    struct InsertRangeHelperAux\n+    {\n+      template <typename _It>\n+        static void\n+        Insert(_Cont& cont, _It first, _It last)\n+\t{ cont.insert(cont.begin(), first, last); }\n+    };\n+\n+  template <typename _Tp1, typename _Tp2>\n+    struct InsertRangeHelper<std::vector<_Tp1, _Tp2> >\n+    : InsertRangeHelperAux<std::vector<_Tp1, _Tp2> >\n+    { };\n+\n+  template <typename _Tp1, typename _Tp2>\n+    struct InsertRangeHelper<std::deque<_Tp1, _Tp2> >\n+    : InsertRangeHelperAux<std::deque<_Tp1, _Tp2> >\n+    { };\n+\n+  template <typename _Tp1, typename _Tp2>\n+    struct InsertRangeHelper<std::list<_Tp1, _Tp2> >\n+    : InsertRangeHelperAux<std::list<_Tp1, _Tp2> >\n+    { };\n+\n+#ifndef _GLIBCXX_DEBUG\n+  template <typename _Tp1, typename _Tp2>\n+    struct InsertRangeHelper<__gnu_debug::vector<_Tp1, _Tp2> >\n+    : InsertRangeHelperAux<__gnu_debug::vector<_Tp1, _Tp2> >\n+    { };\n+\n+  template <typename _Tp1, typename _Tp2>\n+    struct InsertRangeHelper<__gnu_debug::deque<_Tp1, _Tp2> >\n+    : InsertRangeHelperAux<__gnu_debug::deque<_Tp1, _Tp2> >\n+    { };\n+\n+  template <typename _Tp1, typename _Tp2>\n+    struct InsertRangeHelper<__gnu_debug::list<_Tp1, _Tp2> >\n+    : InsertRangeHelperAux<__gnu_debug::list<_Tp1, _Tp2> >\n+    { };\n+#endif\n+\n+  template<typename _Tp>\n+    void\n+    check_insert1()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::vector<val_type> vector_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      vector_type v;\n+      for (int i = 0; i != 5; ++i)\n+        v.push_back(gu);\n+      VERIFY(v.size() == 5);\n+\n+      const val_type* first = &v.front() + 1;\n+      const val_type* last = first + 2;\n+\n+      cont_type c1;\n+      InsertRangeHelper<cont_type>::Insert(c1, first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2;\n+      InsertRangeHelper<cont_type>::Insert(c2, last, first); // Expected failure\n+    }\n+\n+  template<typename _Tp>\n+    void\n+    check_insert2()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::vector<val_type> vector_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      vector_type v;\n+      for (int i = 0; i != 5; ++i)\n+        v.push_back(gu);\n+      VERIFY(v.size() == 5);\n+\n+      typename vector_type::iterator first = v.begin() + 1;\n+      typename vector_type::iterator last = first + 2;\n+\n+      cont_type c1;\n+      InsertRangeHelper<cont_type>::Insert(c1, first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2;\n+      InsertRangeHelper<cont_type>::Insert(c2, last, first); // Expected failure\n+    }\n+\n+  template<typename _Tp>\n+    void\n+    check_insert3()\n+    {\n+      bool test __attribute__((unused)) = true;\n+\n+      typedef _Tp cont_type;\n+      typedef typename cont_type::value_type cont_val_type;\n+      typedef typename CopyableValueType<cont_val_type>::value_type val_type;\n+      typedef std::list<val_type> list_type;\n+\n+      generate_unique<val_type> gu;\n+\n+      list_type l;\n+      for (int i = 0; i != 5; ++i)\n+        l.push_back(gu);\n+      VERIFY(l.size() == 5);\n+\n+      typename list_type::iterator first = l.begin(); ++first;\n+      typename list_type::iterator last = first; ++last; ++last;\n+\n+      cont_type c1;\n+      InsertRangeHelper<cont_type>::Insert(c1, first, last);\n+      VERIFY(c1.size() == 2);\n+\n+      cont_type c2;\n+      InsertRangeHelper<cont_type>::Insert(c2, last, first); // Expected failure\n+    }\n+}\n+"}, {"sha": "78736d367ed66a47f564ab44f7114b7b970c0468", "filename": "libstdc++-v3/testsuite/util/debug/construct_neg.h", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fconstruct_neg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fconstruct_neg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Fconstruct_neg.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,128 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-//\n-\n-#include <vector>\n-#include <list>\n-#include <testsuite_hooks.h>\n-\n-// Check that invalid range of pointers is detected\n-template<template<typename> class ContTraits>\n-  void\n-  debug_check1()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::vector<val_type> vector_type;\n-\n-    vector_type v;\n-    for (int i = 0; i != 5; ++i)\n-      v.push_back(Traits::make_val(i));\n-    VERIFY(v.size() == 5);\n-\n-    val_type *first = &v.front() + 1;\n-    val_type *last = first + 2;\n-    cont_type c1(first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2(last, first); // Expected failure\n-  }\n-\n-template<template<typename> class ContTraits>\n-  void\n-  check1()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check1<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }\n-\n-// Check that invalid range of debug random iterators is detected\n-template<template<typename> class ContTraits>\n-  void\n-  debug_check2()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::vector<val_type> vector_type;\n-\n-    vector_type v;\n-    for (int i = 0; i != 5; ++i)\n-      v.push_back(Traits::make_val(i));\n-    VERIFY(v.size() == 5);\n-\n-    typename vector_type::iterator first = v.begin() + 1;\n-    typename vector_type::iterator last = first + 2;\n-    cont_type c1(first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2(last, first); // Expected failure\n-  }\n-\n-template<template<typename> class ContTraits>\n-  void\n-  check2()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check2<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }\n-\n-// Check that invalid range of debug not random iterators is detected\n-template<template<typename> class ContTraits>\n-  void\n-  debug_check3()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::list<val_type> list_type;\n-    list_type l;\n-    for (int i = 0; i != 5; ++i)\n-      l.push_back(Traits::make_val(i));\n-    VERIFY(l.size() == 5);\n-\n-    typename list_type::iterator first = l.begin(); ++first;\n-    typename list_type::iterator last = first; ++last; ++last;\n-    cont_type c1(first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2(last, first); // Expected failure\n-  }\n-\n-template<template<typename> class ContTraits>\n-  void\n-  check3()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check3<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }"}, {"sha": "7c2634d9fc01dac35ee328f309d847c685fd74d6", "filename": "libstdc++-v3/testsuite/util/debug/insert_neg.h", "status": "removed", "additions": 0, "deletions": 132, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Finsert_neg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124a8ce610d0f8d315d491810e4b69b686c9c6a8/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Finsert_neg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fdebug%2Finsert_neg.h?ref=124a8ce610d0f8d315d491810e4b69b686c9c6a8", "patch": "@@ -1,132 +0,0 @@\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <vector>\n-#include <list>\n-#include <testsuite_hooks.h>\n-\n-template<template <typename> class ContTraits>\n-  void\n-  debug_check1()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::vector<val_type> vector_type;\n-\n-    vector_type v;\n-    for (int i = 0; i != 5; ++i)\n-      v.push_back(Traits::make_val(i));\n-    VERIFY(v.size() == 5);\n-\n-    const val_type* first = &v.front() + 1;\n-    const val_type* last = first + 2;\n-\n-    cont_type c1;\n-    Traits::insert(c1, first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2;\n-    Traits::insert(c2, last, first);  // Expected failure\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  check1()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check1<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  debug_check2()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::vector<val_type> vector_type;\n-\n-    vector_type v;\n-    for (int i = 0; i != 5; ++i)\n-      v.push_back(Traits::make_val(i));\n-    VERIFY(v.size() == 5);\n-\n-    typename vector_type::iterator first = v.begin() + 1;\n-    typename vector_type::iterator last = first + 2;\n-    cont_type c1;\n-    Traits::insert(c1, first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2;\n-    Traits::insert(c2, last, first); // Expected failure\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  check2()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check2<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  debug_check3()\n-  {\n-    bool test __attribute__((unused)) = true;\n-\n-    typedef ContTraits<int> Traits;\n-    typedef typename Traits::cont_type cont_type;\n-    typedef typename Traits::val_type val_type;\n-    typedef std::list<val_type> list_type;\n-\n-    list_type l;\n-    for (int i = 0; i != 5; ++i)\n-      l.push_back(Traits::make_val(i));\n-    VERIFY(l.size() == 5);\n-\n-    typename list_type::iterator first = l.begin(); ++first;\n-    typename list_type::iterator last = first; ++last; ++last;\n-    cont_type c1;\n-    Traits::insert(c1, first, last);\n-    VERIFY(c1.size() == 2);\n-\n-    cont_type c2;\n-    Traits::insert(c2, last, first); // Expected failure\n-  }\n-\n-template<template <typename> class ContTraits>\n-  void\n-  check3()\n-  {\n-#ifdef _GLIBCXX_DEBUG\n-    debug_check3<ContTraits>();\n-#else\n-    __builtin_abort();\n-#endif\n-  }"}]}