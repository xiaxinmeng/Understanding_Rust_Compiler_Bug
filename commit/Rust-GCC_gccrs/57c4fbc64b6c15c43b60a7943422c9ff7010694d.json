{"sha": "57c4fbc64b6c15c43b60a7943422c9ff7010694d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdjNGZiYzY0YjZjMTVjNDNiNjBhNzk0MzQyMmM5ZmY3MDEwNjk0ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-14T09:12:49Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-14T09:12:49Z"}, "message": "Simplify reference_wrapper nested typedefs\n\n\t* include/std/functional (_Reference_wrapper_base_impl): Remove.\n\t(_Refwrap_base_arg1, _Refwrap_base_arg2): New helpers using __void_t.\n\t(_Reference_wrapper_base): Inherit from new helpers.\n\nFrom-SVN: r241151", "tree": {"sha": "397cc70eb3bc5e4890b630d086fcb301ea628b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/397cc70eb3bc5e4890b630d086fcb301ea628b42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57c4fbc64b6c15c43b60a7943422c9ff7010694d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c4fbc64b6c15c43b60a7943422c9ff7010694d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c4fbc64b6c15c43b60a7943422c9ff7010694d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c4fbc64b6c15c43b60a7943422c9ff7010694d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d"}], "stats": {"total": 59, "additions": 22, "deletions": 37}, "files": [{"sha": "cd6ac761d1b58b861e83f59579379da19a0a626f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c4fbc64b6c15c43b60a7943422c9ff7010694d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c4fbc64b6c15c43b60a7943422c9ff7010694d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=57c4fbc64b6c15c43b60a7943422c9ff7010694d", "patch": "@@ -1,3 +1,9 @@\n+2016-10-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/functional (_Reference_wrapper_base_impl): Remove.\n+\t(_Refwrap_base_arg1, _Refwrap_base_arg2): New helpers using __void_t.\n+\t(_Reference_wrapper_base): Inherit from new helpers.\n+\n 2016-10-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/24_iterators/container_access.cc: Remove 'test' variables."}, {"sha": "d39b519fb77b896eeb3bc724c5f52fdafb772471", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 16, "deletions": 37, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c4fbc64b6c15c43b60a7943422c9ff7010694d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c4fbc64b6c15c43b60a7943422c9ff7010694d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=57c4fbc64b6c15c43b60a7943422c9ff7010694d", "patch": "@@ -207,51 +207,34 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n #endif\n \n-  /**\n-   *  Knowing which of unary_function and binary_function _Tp derives\n-   *  from, derives from the same and ensures that reference_wrapper\n-   *  will have a weak result type. See cases below.\n-   */\n-  template<bool _Unary, bool _Binary, typename _Tp>\n-    struct _Reference_wrapper_base_impl;\n-\n-  // None of the nested argument types.\n-  template<typename _Tp>\n-    struct _Reference_wrapper_base_impl<false, false, _Tp>\n-    : _Weak_result_type<_Tp>\n+  // Detect nested argument_type.\n+  template<typename _Tp, typename = __void_t<>>\n+    struct _Refwrap_base_arg1\n     { };\n \n-  // Nested argument_type only.\n+  // Nested argument_type.\n   template<typename _Tp>\n-    struct _Reference_wrapper_base_impl<true, false, _Tp>\n-    : _Weak_result_type<_Tp>\n+    struct _Refwrap_base_arg1<_Tp,\n+\t\t\t      __void_t<typename _Tp::argument_type>>\n     {\n       typedef typename _Tp::argument_type argument_type;\n     };\n \n-  // Nested first_argument_type and second_argument_type only.\n-  template<typename _Tp>\n-    struct _Reference_wrapper_base_impl<false, true, _Tp>\n-    : _Weak_result_type<_Tp>\n-    {\n-      typedef typename _Tp::first_argument_type first_argument_type;\n-      typedef typename _Tp::second_argument_type second_argument_type;\n-    };\n+  // Detect nested first_argument_type and second_argument_type.\n+  template<typename _Tp, typename = __void_t<>>\n+    struct _Refwrap_base_arg2\n+    { };\n \n-  // All the nested argument types.\n-   template<typename _Tp>\n-    struct _Reference_wrapper_base_impl<true, true, _Tp>\n-    : _Weak_result_type<_Tp>\n+  // Nested first_argument_type and second_argument_type.\n+  template<typename _Tp>\n+    struct _Refwrap_base_arg2<_Tp,\n+\t\t\t      __void_t<typename _Tp::first_argument_type,\n+\t\t\t\t       typename _Tp::second_argument_type>>\n     {\n-      typedef typename _Tp::argument_type argument_type;\n       typedef typename _Tp::first_argument_type first_argument_type;\n       typedef typename _Tp::second_argument_type second_argument_type;\n     };\n \n-  _GLIBCXX_HAS_NESTED_TYPE(argument_type)\n-  _GLIBCXX_HAS_NESTED_TYPE(first_argument_type)\n-  _GLIBCXX_HAS_NESTED_TYPE(second_argument_type)\n-\n   /**\n    *  Derives from unary_function or binary_function when it\n    *  can. Specializations handle all of the easy cases. The primary\n@@ -260,11 +243,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   */\n   template<typename _Tp>\n     struct _Reference_wrapper_base\n-    : _Reference_wrapper_base_impl<\n-      __has_argument_type<_Tp>::value,\n-      __has_first_argument_type<_Tp>::value\n-      && __has_second_argument_type<_Tp>::value,\n-      _Tp>\n+    : _Weak_result_type<_Tp>, _Refwrap_base_arg1<_Tp>, _Refwrap_base_arg2<_Tp>\n     { };\n \n   // - a function type (unary)"}]}