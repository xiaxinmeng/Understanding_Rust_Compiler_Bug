{"sha": "3a5c9377f6d99ea23520f71340880b2fcb7bef11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1YzkzNzdmNmQ5OWVhMjM1MjBmNzEzNDA4ODBiMmZjYjdiZWYxMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-04T10:34:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:58Z"}, "message": "[Ada] Do not use Long_Long_Long_Integer'Image with pragma Discard_Names\n\ngcc/ada/\n\n\t* exp_imgv.adb (Expand_Image_Attribute): For an enumeration type\n\tsubject to pragma Discard_Names, convert 'Pos to Long_Long_Integer\n\tbefore applying 'Img to the result.", "tree": {"sha": "d01a14d86851f762b68d02482bc877df458932a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d01a14d86851f762b68d02482bc877df458932a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a5c9377f6d99ea23520f71340880b2fcb7bef11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5c9377f6d99ea23520f71340880b2fcb7bef11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5c9377f6d99ea23520f71340880b2fcb7bef11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5c9377f6d99ea23520f71340880b2fcb7bef11/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "995e0727ce999d3f4d5976e98ce31c70cb0469ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/995e0727ce999d3f4d5976e98ce31c70cb0469ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/995e0727ce999d3f4d5976e98ce31c70cb0469ed"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "40cb51462b8352f79c69a92af3c53419f7065b8b", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5c9377f6d99ea23520f71340880b2fcb7bef11/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5c9377f6d99ea23520f71340880b2fcb7bef11/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=3a5c9377f6d99ea23520f71340880b2fcb7bef11", "patch": "@@ -619,15 +619,18 @@ package body Exp_Imgv is\n            or else No (Lit_Strings (Rtyp))\n          then\n             --  When pragma Discard_Names applies to the first subtype, build\n-            --  (Pref'Pos (Expr))'Img.\n+            --  (Long_Long_Integer (Pref'Pos (Expr)))'Img. The conversion is\n+            --  there to avoid applying 'Img directly in Universal_Integer,\n+            --  which can be a very large type. See also the handling of 'Val.\n \n             Rewrite (N,\n               Make_Attribute_Reference (Loc,\n                 Prefix =>\n-                   Make_Attribute_Reference (Loc,\n-                     Prefix         => Pref,\n-                     Attribute_Name => Name_Pos,\n-                     Expressions    => New_List (Expr)),\n+                  Convert_To (Standard_Long_Long_Integer,\n+                    Make_Attribute_Reference (Loc,\n+                    Prefix         => Pref,\n+                    Attribute_Name => Name_Pos,\n+                    Expressions    => New_List (Expr))),\n                 Attribute_Name =>\n                   Name_Img));\n             Analyze_And_Resolve (N, Standard_String);"}]}