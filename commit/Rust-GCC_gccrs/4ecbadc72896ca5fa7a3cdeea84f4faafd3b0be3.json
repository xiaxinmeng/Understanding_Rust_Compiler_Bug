{"sha": "4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjYmFkYzcyODk2Y2E1ZmE3YTNjZGVlYTg0ZjRmYWFmZDNiMGJlMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-01-27T12:50:05Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-01-27T12:50:05Z"}, "message": "HSA: simplify partitioning of HSA kernels and host impls.\n\n\t* lto-partition.c (add_symbol_to_partition_1): Remove usage\n\tof hsa_summaries.\n\t* hsa.c (hsa_summary_t::link_functions): Create IPA_REF_ADDR\n\treference for an HSA kernel and its host function.\n\nFrom-SVN: r232871", "tree": {"sha": "0ddc7a7d882a6be038b8f16263950f039fbb714c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ddc7a7d882a6be038b8f16263950f039fbb714c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1652ddea99943a7a6df4be25e3a35e4eeeeb86d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1652ddea99943a7a6df4be25e3a35e4eeeeb86d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1652ddea99943a7a6df4be25e3a35e4eeeeb86d"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "cffba0239736e4d239ca366bfd2856a0af0725f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "patch": "@@ -1,3 +1,8 @@\n+2016-01-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* hsa.c (hsa_summary_t::link_functions): Create IPA_REF_ADDR\n+\treference for an HSA kernel and its host function.\n+\n 2016-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/69399"}, {"sha": "f0b320573bff24eecd36fcaecbefcab1a8e899b7", "filename": "gcc/hsa.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2Fhsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2Fhsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa.c?ref=4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "patch": "@@ -781,6 +781,11 @@ hsa_summary_t::link_functions (cgraph_node *gpu, cgraph_node *host,\n   TREE_OPTIMIZATION (fn_opts)->x_flag_tree_loop_vectorize = false;\n   TREE_OPTIMIZATION (fn_opts)->x_flag_tree_slp_vectorize = false;\n   DECL_FUNCTION_SPECIFIC_OPTIMIZATION (gdecl) = fn_opts;\n+\n+  /* Create reference between a kernel and a corresponding host implementation\n+     to quarantee LTO streaming to a same LTRANS.  */\n+  if (kind == HSA_KERNEL)\n+    gpu->create_reference (host, IPA_REF_ADDR);\n }\n \n /* Add a HOST function to HSA summaries.  */"}, {"sha": "43faaf4cb30327f5156dc64d33c984b0f5ddda3f", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "patch": "@@ -1,3 +1,8 @@\n+2016-01-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-partition.c (add_symbol_to_partition_1): Remove usage\n+\tof hsa_summaries.\n+\n 2016-01-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/69136"}, {"sha": "9eb63c27f33213c8e9a050bc5a57efb41be385d0", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=4ecbadc72896ca5fa7a3cdeea84f4faafd3b0be3", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-prop.h\"\n #include \"ipa-inline.h\"\n #include \"lto-partition.h\"\n-#include \"hsa.h\"\n \n vec<ltrans_partition> ltrans_partitions;\n \n@@ -171,24 +170,6 @@ add_symbol_to_partition_1 (ltrans_partition part, symtab_node *node)\n \t Therefore put it into the same partition.  */\n       if (cnode->instrumented_version)\n \tadd_symbol_to_partition_1 (part, cnode->instrumented_version);\n-\n-      /* Add an HSA associated with the symbol.  */\n-      if (hsa_summaries != NULL)\n-\t{\n-\t  hsa_function_summary *s = hsa_summaries->get (cnode);\n-\t  if (s->m_kind == HSA_KERNEL)\n-\t    {\n-\t      /* Add binded function.  */\n-\t      bool added = add_symbol_to_partition_1 (part,\n-\t\t\t\t\t\t      s->m_binded_function);\n-\t      gcc_assert (added);\n-\t      if (symtab->dump_file)\n-\t\tfprintf (symtab->dump_file,\n-\t\t\t \"adding an HSA function (host/gpu) to the \"\n-\t\t\t \"partition: %s\\n\",\n-\t\t\t s->m_binded_function->name ());\n-\t    }\n-\t}\n     }\n \n   add_references_to_partition (part, node);"}]}