{"sha": "d8aeee11af715507e61464d390f14e4f4fde61b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhZWVlMTFhZjcxNTUwN2U2MTQ2NGQzOTBmMTRlNGY0ZmRlNjFiMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-21T09:14:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-21T09:14:46Z"}, "message": "fold-const: Fix up a buffer overflow in native_encode_initializer [PR98407]\n\nFor flexible array members we need to incrementally clear just from\nptr + total_bytes up to new ptr + total_bytes, but memset has been called\nwith the length from ptr, so was missing - total_bytes.  Additionally,\nin this code off is guaranteed to be -1 and thus o 0, so don't bother pretending\nwe could handle anything else, it would be more complicated than that.\n\n2020-12-21  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/98407\n\t* fold-const.c (native_encode_initializer): When handling flexible\n\tarray members, fix up computation of length for memset.  Also remove\n\t\" - o\" as o is always guaranteed to be 0 in this code path.\n\n\t* gcc.c-torture/compile/pr98407.c: New test.", "tree": {"sha": "c21ac545e083ff714808a53ab8f39e4e15266a90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c21ac545e083ff714808a53ab8f39e4e15266a90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8aeee11af715507e61464d390f14e4f4fde61b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8aeee11af715507e61464d390f14e4f4fde61b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8aeee11af715507e61464d390f14e4f4fde61b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8aeee11af715507e61464d390f14e4f4fde61b0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6237343e78ae115d09618efc1443bdf2fd6c09b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6237343e78ae115d09618efc1443bdf2fd6c09b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6237343e78ae115d09618efc1443bdf2fd6c09b"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "3a0f39a85b8c99d33cee9253f536c6f05898c2f2", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8aeee11af715507e61464d390f14e4f4fde61b0/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8aeee11af715507e61464d390f14e4f4fde61b0/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d8aeee11af715507e61464d390f14e4f4fde61b0", "patch": "@@ -8280,9 +8280,9 @@ native_encode_initializer (tree init, unsigned char *ptr, int len,\n \t\t    return 0;\n \t\t  if (pos + fieldsize > total_bytes)\n \t\t    {\n-\t\t      if (ptr != NULL && total_bytes - o < len)\n-\t\t\tmemset (ptr + (total_bytes - o),\n-\t\t\t\t'\\0', MIN (pos + fieldsize - o, len));\n+\t\t      if (ptr != NULL && total_bytes < len)\n+\t\t\tmemset (ptr + total_bytes, '\\0',\n+\t\t\t\tMIN (pos + fieldsize, len) - total_bytes);\n \t\t      total_bytes = pos + fieldsize;\n \t\t    }\n \t\t}"}, {"sha": "29eb0803944afd2e4422c55d9400379d092eb2c5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr98407.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8aeee11af715507e61464d390f14e4f4fde61b0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr98407.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8aeee11af715507e61464d390f14e4f4fde61b0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr98407.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr98407.c?ref=d8aeee11af715507e61464d390f14e4f4fde61b0", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/98407 */\n+\n+struct S { int a; int b[]; };\n+const struct S c = { 0, { 0 } }, d = { 0, { 0 } };\n+\n+int\n+foo (void)\n+{\n+  return __builtin_memcmp (&c, &d, sizeof d);\n+}"}]}