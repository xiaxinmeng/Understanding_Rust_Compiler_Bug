{"sha": "a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdkODc1MjFiMjUwODhhZDkyOGJhNmQ3NDhhZGNmMmNlYWViMGMzOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-12T19:50:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-12T19:50:15Z"}, "message": "pt.c (do_type_instantiation): Fix typo.\n\n\t* pt.c (do_type_instantiation): Fix typo.\n\t(mark_class_instantiated): If we support one_only but not weak\n\tsymbols, don't mark this as known.\n\n\t* init.c (build_new): Handle cookies in EH cleanup.\n\nFrom-SVN: r16444", "tree": {"sha": "cd74bd334f6f346197d5fb32fdf7505756b1822d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd74bd334f6f346197d5fb32fdf7505756b1822d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/comments", "author": null, "committer": null, "parents": [{"sha": "31d525285d70fab6cc44a8c8809854c01deb73ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d525285d70fab6cc44a8c8809854c01deb73ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d525285d70fab6cc44a8c8809854c01deb73ea"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "68f93f0367597b0e80badfae92f4e314d2be4b8f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "patch": "@@ -1,3 +1,11 @@\n+Wed Nov 12 11:04:33 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (do_type_instantiation): Fix typo.\n+\t(mark_class_instantiated): If we support one_only but not weak \n+\tsymbols, don't mark this as known.\n+\n+\t* init.c (build_new): Handle cookies in EH cleanup.\n+\n Wed Nov 12 08:11:55 1997  Benjamin Kosnik  <bkoz@rhino.cygnus.com>\n \n \t* call.c (build_method_call): Call complete_type before checking"}, {"sha": "48fe7a4a2c88aacff4ace81837bdf970bcc78c2e", "filename": "gcc/cp/init.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "patch": "@@ -2715,13 +2715,20 @@ build_new (placement, decl, init, use_global_new)\n \t{\n \t  tree cleanup;\n \n+\t  if (use_cookie)\n+\t    cleanup = build (MINUS_EXPR, TREE_TYPE (alloc_expr),\n+\t\t\t     alloc_expr, BI_header_size);\n+\t  else\n+\t    cleanup = alloc_expr;\n+\n \t  if (! use_global_new && TYPE_LANG_SPECIFIC (true_type)\n \t      && (TYPE_GETS_DELETE (true_type) & (1 << has_array)))\n-\t    cleanup = build_opfncall (DELETE_EXPR, LOOKUP_NORMAL,\n-\t\t\t\t      alloc_expr, size, NULL_TREE);\n+\t    cleanup = build_opfncall (has_array? VEC_DELETE_EXPR : DELETE_EXPR,\n+\t\t\t\t      LOOKUP_NORMAL, cleanup, size, NULL_TREE);\n \t  else\n \t    cleanup = build_builtin_call\n-\t      (void_type_node, BID, build_expr_list (NULL_TREE, alloc_expr));\n+\t      (void_type_node, has_array ? BIVD : BID,\n+\t       build_expr_list (NULL_TREE, cleanup));\n \t\t\t\t\t \n \t  rval = build (TRY_CATCH_EXPR, TREE_TYPE (rval), rval, cleanup);\n \t  rval = build (COMPOUND_EXPR, TREE_TYPE (rval), alloc_expr, rval);"}, {"sha": "dffe1bf2da9c002de0f7d46c2ce88d542c8e5699", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d87521b25088ad928ba6d748adcf2ceaeb0c38/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a7d87521b25088ad928ba6d748adcf2ceaeb0c38", "patch": "@@ -3988,6 +3988,9 @@ mark_decl_instantiated (result, extern_p)\n     {\n       DECL_INTERFACE_KNOWN (result) = 1;\n       DECL_NOT_REALLY_EXTERN (result) = 1;\n+\n+      /* For WIN32 we also want to put explicit instantiations in\n+\t linkonce sections.  */\n       if (supports_one_only () && ! SUPPORTS_WEAK)\n \tcomdat_linkage (result);\n     }\n@@ -4323,8 +4326,16 @@ mark_class_instantiated (t, extern_p)\n      int extern_p;\n {\n   SET_CLASSTYPE_EXPLICIT_INSTANTIATION (t);\n-  SET_CLASSTYPE_INTERFACE_KNOWN (t);\n-  CLASSTYPE_INTERFACE_ONLY (t) = extern_p;\n+\n+  if (supports_one_only () && ! SUPPORTS_WEAK)\n+    /* For WIN32 we also want to put explicit instantiations in\n+       linkonce sections.  */;\n+  else\n+    {\n+      SET_CLASSTYPE_INTERFACE_KNOWN (t);\n+      CLASSTYPE_INTERFACE_ONLY (t) = extern_p;\n+    }\n+\n   CLASSTYPE_VTABLE_NEEDS_WRITING (t) = ! extern_p;\n   TYPE_DECL_SUPPRESS_DEBUG (TYPE_NAME (t)) = extern_p;\n   if (! extern_p)\n@@ -4399,7 +4410,7 @@ do_type_instantiation (t, storage)\n \n     if (! static_p)\n       for (tmp = TYPE_METHODS (t); tmp; tmp = TREE_CHAIN (tmp))\n-\tif (TREE_CODE (t) == FUNCTION_DECL\n+\tif (TREE_CODE (tmp) == FUNCTION_DECL\n \t    && DECL_TEMPLATE_INSTANTIATION (tmp))\n \t  {\n \t    mark_decl_instantiated (tmp, extern_p);"}]}