{"sha": "4d23e5099715fc312235850f6caa13c0d89515a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyM2U1MDk5NzE1ZmMzMTIyMzU4NTBmNmNhYTEzYzBkODk1MTVhNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T10:53:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T10:53:43Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r759", "tree": {"sha": "362f2600d4b7aaeb75275a511be2ddfd6a9989fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/362f2600d4b7aaeb75275a511be2ddfd6a9989fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d23e5099715fc312235850f6caa13c0d89515a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d23e5099715fc312235850f6caa13c0d89515a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d23e5099715fc312235850f6caa13c0d89515a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d23e5099715fc312235850f6caa13c0d89515a7/comments", "author": null, "committer": null, "parents": [{"sha": "0e8949ba7bfbd29afc1f7a470724b1377f3427b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8949ba7bfbd29afc1f7a470724b1377f3427b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8949ba7bfbd29afc1f7a470724b1377f3427b0"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "de199028c3a6185ba882580295192cbc760c2905", "filename": "gcc/stmt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d23e5099715fc312235850f6caa13c0d89515a7/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d23e5099715fc312235850f6caa13c0d89515a7/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4d23e5099715fc312235850f6caa13c0d89515a7", "patch": "@@ -1265,6 +1265,9 @@ warn_if_unused_value (exp)\n     case COMPOUND_EXPR:\n       if (warn_if_unused_value (TREE_OPERAND (exp, 0)))\n \treturn 1;\n+      /* Let people do `(foo (), 0)' without a warning.  */\n+      if (TREE_CONSTANT (TREE_OPERAND (exp, 1)))\n+\treturn 0;\n       return warn_if_unused_value (TREE_OPERAND (exp, 1));\n \n     case NOP_EXPR:"}]}