{"sha": "3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9", "node_id": "C_kwDOANBUbNoAKDMzNTc4NzhlZjU2ZDFlNDc2NjZmYzY5N2NmZDdjYjVjZDljMWRmYzk", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-08T12:55:09Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-10T11:21:30Z"}, "message": "[nvptx] Use no,yes for attribute predicable\n\nThe documentation states about the predicable instruction attribute:\n...\nThis attribute must be a boolean (i.e. have exactly two elements in its\nlist-of-values), with the possible values being no and yes.\n...\n\nThe nvptx port has instead:\n...\n(define_attr \"predicable\" \"false,true\"\n  (const_string \"true\"))\n...\n\nFix this by updating to:\n...\n(define_attr \"predicable\" \"no,yes\"\n  (const_string \"yes\"))\n...\n\nTested on nvptx.\n\ngcc/ChangeLog:\n\n2022-03-08  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/104840\n\t* config/nvptx/nvptx.md (define_attr \"predicable\"): Use no,yes instead\n\tof false,true.", "tree": {"sha": "dcf67b520d7fdc6ebc72b132e56f96ff891a6ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcf67b520d7fdc6ebc72b132e56f96ff891a6ed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f07178ca3c1e5dff799fb5016bb3767571db3165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f07178ca3c1e5dff799fb5016bb3767571db3165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f07178ca3c1e5dff799fb5016bb3767571db3165"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "1dec7caa0d16edad8352118fa3b376da237de8ff", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=3357878ef56d1e47666fc697cfd7cb5cd9c1dfc9", "patch": "@@ -172,8 +172,8 @@\n   return SYMBOL_REF_FUNCTION_P (op);\n })\n \n-(define_attr \"predicable\" \"false,true\"\n-  (const_string \"true\"))\n+(define_attr \"predicable\" \"no,yes\"\n+  (const_string \"yes\"))\n \n (define_cond_exec\n   [(match_operator 0 \"predicate_operator\"\n@@ -911,7 +911,7 @@\n \t\t      (pc)))]\n   \"\"\n   \"%j0\\\\tbra\\\\t%l1;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"br_false\"\n   [(set (pc)\n@@ -921,7 +921,7 @@\n \t\t      (pc)))]\n   \"\"\n   \"%J0\\\\tbra\\\\t%l1;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n ;; unified conditional branch\n (define_insn \"br_true_uni\"\n@@ -931,7 +931,7 @@\n         (label_ref (match_operand 1 \"\" \"\")) (pc)))]\n   \"\"\n   \"%j0\\\\tbra.uni\\\\t%l1;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"br_false_uni\"\n   [(set (pc) (if_then_else\n@@ -940,7 +940,7 @@\n         (label_ref (match_operand 1 \"\" \"\")) (pc)))]\n   \"\"\n   \"%J0\\\\tbra.uni\\\\t%l1;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_expand \"cbranch<mode>4\"\n   [(set (pc)\n@@ -1619,7 +1619,7 @@\n {\n   return nvptx_output_return ();\n }\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_expand \"epilogue\"\n   [(clobber (const_int 0))]\n@@ -1712,15 +1712,15 @@\n \t    (const_int 0))]\n   \"\"\n   \"%j0 trap; %j0 exit;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"trap_if_false\"\n   [(trap_if (eq (match_operand:BI 0 \"nvptx_register_operand\" \"R\")\n \t\t(const_int 0))\n \t    (const_int 0))]\n   \"\"\n   \"%J0 trap; %J0 exit;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_expand \"ctrap<mode>4\"\n   [(trap_if (match_operator 0 \"nvptx_comparison_operator\"\n@@ -1769,28 +1769,28 @@\n \t\t       UNSPECV_FORK)]\n   \"\"\n   \"// fork %0;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"nvptx_forked\"\n   [(unspec_volatile:SI [(match_operand:SI 0 \"const_int_operand\" \"\")]\n \t\t       UNSPECV_FORKED)]\n   \"\"\n   \"// forked %0;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"nvptx_joining\"\n   [(unspec_volatile:SI [(match_operand:SI 0 \"const_int_operand\" \"\")]\n \t\t       UNSPECV_JOINING)]\n   \"\"\n   \"// joining %0;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"nvptx_join\"\n   [(unspec_volatile:SI [(match_operand:SI 0 \"const_int_operand\" \"\")]\n \t\t       UNSPECV_JOIN)]\n   \"\"\n   \"// join %0;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_expand \"oacc_fork\"\n   [(set (match_operand:SI 0 \"nvptx_nonmemory_operand\" \"\")\n@@ -2035,7 +2035,7 @@\n \toutput_asm_insn (\"}\", NULL);\n \treturn \"\";\n   }\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"atomic_compare_and_swap<mode>_1\"\n   [(set (match_operand:SDIM 0 \"nvptx_register_operand\" \"=R\")\n@@ -2263,7 +2263,7 @@\n \t      ? \"\\\\tbarrier.sync\\\\t%0, %1;\"\n \t      : \"\\\\tbar.sync\\\\t%0, %1;\");\n   }\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"nvptx_warpsync\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_WARPSYNC)]\n@@ -2310,7 +2310,7 @@\n \t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR))]\n   \"\"\n   \"\\\\tmembar.sys;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_expand \"nvptx_membar_cta\"\n   [(set (match_dup 0)\n@@ -2326,7 +2326,7 @@\n \t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR_CTA))]\n   \"\"\n   \"\\\\tmembar.cta;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_expand \"nvptx_membar_gl\"\n   [(set (match_dup 0)\n@@ -2342,13 +2342,13 @@\n \t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR_GL))]\n   \"\"\n   \"\\\\tmembar.gl;\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"nvptx_nounroll\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_NOUNROLL)]\n   \"\"\n   \"\\\\t.pragma \\\\\\\"nounroll\\\\\\\";\"\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n (define_insn \"nvptx_red_partition\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=R\")\n@@ -2358,7 +2358,7 @@\n   {\n     return nvptx_output_red_partition (operands[0], operands[1]);\n   }\n-  [(set_attr \"predicable\" \"false\")])\n+  [(set_attr \"predicable\" \"no\")])\n \n ;; Expand QI mode operations using SI mode instructions.\n (define_code_iterator any_sbinary [plus minus smin smax])"}]}