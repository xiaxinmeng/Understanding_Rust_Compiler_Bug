{"sha": "14b1261a5b25da80aa1cbc2936397b472c7928d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRiMTI2MWE1YjI1ZGE4MGFhMWNiYzI5MzYzOTdiNDcyYzc5MjhkMQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-07-31T20:48:21Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-07-31T20:48:21Z"}, "message": "re PR fortran/32942 (Wrong code with with -fdefault-integer-8)\n\n2007-07-31  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/32942\n\t* gfortran.dg/exponent_2.f90: New test.\n\n2007-07-31  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/32942\n\t*trans-intrinsic.c (gfc_conv_intrinsic_exponent): Convert to correct\n\ttype.\n\nFrom-SVN: r127105", "tree": {"sha": "9598cc4636d48369d60b3160281677613dd67f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9598cc4636d48369d60b3160281677613dd67f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14b1261a5b25da80aa1cbc2936397b472c7928d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b1261a5b25da80aa1cbc2936397b472c7928d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b1261a5b25da80aa1cbc2936397b472c7928d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b1261a5b25da80aa1cbc2936397b472c7928d1/comments", "author": null, "committer": null, "parents": [{"sha": "e439ba28035c2e4249497495308b9df4ebc69690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e439ba28035c2e4249497495308b9df4ebc69690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e439ba28035c2e4249497495308b9df4ebc69690"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "ce3e62cac8e6e9b757d93d1e4ccb1aa87a0c5fde", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=14b1261a5b25da80aa1cbc2936397b472c7928d1", "patch": "@@ -1,3 +1,9 @@\n+2007-07-31  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/32942\n+\t*trans-intrinsic.c (gfc_conv_intrinsic_exponent): Convert to correct\n+\ttype.\n+\n 2007-07-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* invoke.texi: Document -fsign-zero flag."}, {"sha": "578cd7f6f1290b1527a8a8b5ceb804e3b771d678", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=14b1261a5b25da80aa1cbc2936397b472c7928d1", "patch": "@@ -718,9 +718,9 @@ gfc_conv_intrinsic_lib_function (gfc_se * se, gfc_expr * expr)\n /* Generate code for EXPONENT(X) intrinsic function.  */\n \n static void\n-gfc_conv_intrinsic_exponent (gfc_se * se, gfc_expr * expr)\n+gfc_conv_intrinsic_exponent (gfc_se *se, gfc_expr *expr)\n {\n-  tree arg, fndecl;\n+  tree arg, fndecl, type;\n   gfc_expr *a1;\n \n   gfc_conv_intrinsic_function_args (se, expr, &arg, 1);\n@@ -744,7 +744,9 @@ gfc_conv_intrinsic_exponent (gfc_se * se, gfc_expr * expr)\n       gcc_unreachable ();\n     }\n \n-  se->expr = build_call_expr (fndecl, 1, arg);\n+  /* Convert it to the required type.  */\n+  type = gfc_typenode_for_spec (&expr->ts);\n+  se->expr = fold_convert (type, build_call_expr (fndecl, 1, arg));\n }\n \n /* Evaluate a single upper or lower bound.  */\n@@ -2527,7 +2529,9 @@ gfc_conv_intrinsic_ishft (gfc_se * se, gfc_expr * expr)\n \t\t\t  build_int_cst (type, 0), tmp);\n }\n \n+\n /* Circular shift.  AKA rotate or barrel shift.  */\n+\n static void\n gfc_conv_intrinsic_ishftc (gfc_se * se, gfc_expr * expr)\n {"}, {"sha": "4990638e685ca78ec5ae52821a71920b416e3763", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14b1261a5b25da80aa1cbc2936397b472c7928d1", "patch": "@@ -1,3 +1,8 @@\n+2007-07-31  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/32942\n+\t* gfortran.dg/exponent_2.f90: New test.\n+\n 2007-07-30  Jan Sjodin  <jan.sjodin@amd.com>\n \n \t* gcc.dg/vect/vect-117.c: New test."}, {"sha": "1b917066cd0b326855901bce09a065eda0380cfe", "filename": "gcc/testsuite/gfortran.dg/exponent_2.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ftestsuite%2Fgfortran.dg%2Fexponent_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14b1261a5b25da80aa1cbc2936397b472c7928d1/gcc%2Ftestsuite%2Fgfortran.dg%2Fexponent_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fexponent_2.f90?ref=14b1261a5b25da80aa1cbc2936397b472c7928d1", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run }\n+! { dg-options \"-fdefault-integer-8\" }\n+! PR fortran/32942\n+! Testcase contributed by Dominique d'Humieres <dominiq@lps.ens.fr>.\n+integer i\n+real x\n+x = 3.0\n+if (2 /= exponent(x)) call abort\n+i = exponent (x)\n+if (i /= 2) call abort\n+end"}]}