{"sha": "d3f76a7098de5787727396cfd7dd908e855fd709", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNmNzZhNzA5OGRlNTc4NzcyNzM5NmNmZDdkZDkwOGU4NTVmZDcwOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-10-18T09:26:42Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-10-18T09:26:42Z"}, "message": "(strictly_overrides): Remove.\n\nFrom-SVN: r58284", "tree": {"sha": "54587e806a395ae3b56cf39fcf353a1be9484076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54587e806a395ae3b56cf39fcf353a1be9484076"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3f76a7098de5787727396cfd7dd908e855fd709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f76a7098de5787727396cfd7dd908e855fd709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f76a7098de5787727396cfd7dd908e855fd709", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f76a7098de5787727396cfd7dd908e855fd709/comments", "author": null, "committer": null, "parents": [{"sha": "9368208b083671159eaf9cdd55dd10aeb221ae88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9368208b083671159eaf9cdd55dd10aeb221ae88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9368208b083671159eaf9cdd55dd10aeb221ae88"}], "stats": {"total": 19, "additions": 0, "deletions": 19}, "files": [{"sha": "8be9caacf9655dc822861516ea604fb9991d3916", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f76a7098de5787727396cfd7dd908e855fd709/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f76a7098de5787727396cfd7dd908e855fd709/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d3f76a7098de5787727396cfd7dd908e855fd709", "patch": "@@ -115,7 +115,6 @@ static void delete_duplicate_fields PARAMS ((tree));\n static void finish_struct_bits PARAMS ((tree));\n static int alter_access PARAMS ((tree, tree, tree));\n static void handle_using_decl PARAMS ((tree, tree));\n-static int strictly_overrides PARAMS ((tree, tree));\n static void check_for_override PARAMS ((tree, tree));\n static tree dfs_modify_vtables PARAMS ((tree, void *));\n static tree modify_all_vtables PARAMS ((tree, int *, tree));\n@@ -2590,24 +2589,6 @@ modify_all_vtables (t, vfuns_p, virtuals)\n   return virtuals;\n }\n \n-/* Here, we already know that they match in every respect.\n-   All we have to check is where they had their declarations.\n-\n-   Return nonzero iff FNDECL1 is declared in a class which has a\n-   proper base class containing FNDECL2.  We don't care about\n-   ambiguity or accessibility.  */\n-\n-static int \n-strictly_overrides (fndecl1, fndecl2)\n-     tree fndecl1, fndecl2;\n-{\n-  base_kind kind;\n-  \n-  return (lookup_base (DECL_CONTEXT (fndecl1), DECL_CONTEXT (fndecl2),\n-\t\t       ba_ignore | ba_quiet, &kind)\n-\t  && kind != bk_same_type);\n-}\n-\n /* Get the base virtual function declarations in T that have the\n    indicated NAME.  */\n "}]}