{"sha": "bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0ZjZlNmJiN2U4MTE2ZjA2MmRmMGFjZjVmZTZlNjgyZjc4NzA0OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-06-23T17:46:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-06-23T17:46:26Z"}, "message": "decl.c (register_dtor_fn): Mark cleanup as used.\n\n\n\t* decl.c (register_dtor_fn): Mark cleanup as used.\n\t* decl2.c (mark_vtable_entries): Skip nops.\n\t* rtti.c (get_tinfo_ptr): Mark tinfo as used.\n\t(build_dynamic_cast_1): Likewise.\n\t(tinfo_base_init): Likewise.\n\t(emit_tinfo_decl): Likewise.\n\nFrom-SVN: r68377", "tree": {"sha": "3fdd057575368667bd9bdbd3ecc5786dd2f79ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fdd057575368667bd9bdbd3ecc5786dd2f79ee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/comments", "author": null, "committer": null, "parents": [{"sha": "2b491e3a3b2126c32b3d77932a2d1a09592b088f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b491e3a3b2126c32b3d77932a2d1a09592b088f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b491e3a3b2126c32b3d77932a2d1a09592b088f"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "641b4a298633870636568832869cfea806491929", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "patch": "@@ -1,3 +1,12 @@\n+Mon Jun 23 19:41:27 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* decl.c (register_dtor_fn): Mark cleanup as used.\n+\t* decl2.c (mark_vtable_entries): Skip nops.\n+\t* rtti.c (get_tinfo_ptr): Mark tinfo as used.\n+\t(build_dynamic_cast_1): Likewise.\n+\t(tinfo_base_init): Likewise.\n+\t(emit_tinfo_decl): Likewise.\n+\n 2003-06-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* mangle.c (hash_type): val is the TREE_LIST itself, not a pointer"}, {"sha": "9e3a9ce9957e3c32a2caf9e4c05350a92a0eac0d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "patch": "@@ -8486,6 +8486,7 @@ register_dtor_fn (tree decl)\n \n   /* Call atexit with the cleanup function.  */\n   cxx_mark_addressable (cleanup);\n+  mark_used (cleanup);\n   cleanup = build_unary_op (ADDR_EXPR, cleanup, 0);\n   if (flag_use_cxa_atexit)\n     {"}, {"sha": "44ea6a3843726211d7c43ef69012d07522ac835b", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "patch": "@@ -1393,7 +1393,9 @@ mark_vtable_entries (tree decl)\n     {\n       tree fnaddr = TREE_VALUE (entries);\n       tree fn;\n-      \n+\n+      STRIP_NOPS (fnaddr);\n+\n       if (TREE_CODE (fnaddr) != ADDR_EXPR\n \t  && TREE_CODE (fnaddr) != FDESC_EXPR)\n \t/* This entry is an offset: a virtual base class offset, a"}, {"sha": "74b7c90689cc43eaea21cf4696de71741986b034", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4f6e6bb7e8116f062df0acf5fe6e682f787049/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=bb4f6e6bb7e8116f062df0acf5fe6e682f787049", "patch": "@@ -387,8 +387,11 @@ get_tinfo_decl (tree type)\n static tree\n get_tinfo_ptr (tree type)\n {\n+  tree decl = get_tinfo_decl (type);\n+\n+  mark_used (decl);\n   return build_nop (type_info_ptr_type, \n-\t\t    build_address (get_tinfo_decl (type)));\n+\t\t    build_address (decl));\n }\n \n /* Return the type_info object for TYPE.  */\n@@ -612,8 +615,12 @@ build_dynamic_cast_1 (tree type, tree expr)\n \n \t  target_type = TYPE_MAIN_VARIANT (TREE_TYPE (type));\n \t  static_type = TYPE_MAIN_VARIANT (TREE_TYPE (exprtype));\n-\t  td2 = build_unary_op (ADDR_EXPR, get_tinfo_decl (target_type), 0);\n-\t  td3 = build_unary_op (ADDR_EXPR, get_tinfo_decl (static_type), 0);\n+\t  td2 = get_tinfo_decl (target_type);\n+\t  mark_used (td2);\n+\t  td2 = build_unary_op (ADDR_EXPR, td2, 0);\n+\t  td3 = get_tinfo_decl (static_type);\n+\t  mark_used (td3);\n+\t  td3 = build_unary_op (ADDR_EXPR, td3, 0);\n \n           /* Determine how T and V are related.  */\n           boff = get_dynamic_cast_base_type (static_type, target_type);\n@@ -769,6 +776,7 @@ tinfo_base_init (tree desc, tree target)\n     SET_DECL_ASSEMBLER_NAME (name_decl,\n \t\t\t     mangle_typeinfo_string_for_type (target));\n     DECL_INITIAL (name_decl) = name_string;\n+    mark_used (name_decl);\n     pushdecl_top_level_and_finish (name_decl, name_string);\n   }\n \n@@ -1461,6 +1469,7 @@ emit_tinfo_decl (tree decl)\n     DECL_COMDAT (decl) = 0;\n \n   DECL_INITIAL (decl) = var_init;\n+  mark_used (decl);\n   cp_finish_decl (decl, var_init, NULL_TREE, 0);\n   /* cp_finish_decl will have dealt with linkage.  */\n   "}]}