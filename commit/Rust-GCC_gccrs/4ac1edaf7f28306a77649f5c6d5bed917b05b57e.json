{"sha": "4ac1edaf7f28306a77649f5c6d5bed917b05b57e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjMWVkYWY3ZjI4MzA2YTc3NjQ5ZjVjNmQ1YmVkOTE3YjA1YjU3ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-07-11T10:23:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-07-11T10:23:56Z"}, "message": "re PR middle-end/30482 (<complex> division by 0)\n\n2007-07-11  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR middle-end/30482\n\t* c-opts.c (c_common_post_options): Do not change flag_complex_method\n\tconditional to flag_isoc99.\n\t(c_common_init_options): Do it here, unconditionally.\n\nFrom-SVN: r126546", "tree": {"sha": "f35c5227cdb3592c88f12bcd0a72603215d9a3f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f35c5227cdb3592c88f12bcd0a72603215d9a3f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac1edaf7f28306a77649f5c6d5bed917b05b57e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac1edaf7f28306a77649f5c6d5bed917b05b57e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac1edaf7f28306a77649f5c6d5bed917b05b57e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac1edaf7f28306a77649f5c6d5bed917b05b57e/comments", "author": null, "committer": null, "parents": [{"sha": "c2979eaf57aab3dc4c9ee3481b7de1933c9a8633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2979eaf57aab3dc4c9ee3481b7de1933c9a8633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2979eaf57aab3dc4c9ee3481b7de1933c9a8633"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "7ab9f7c69c3636071b1fcd5b29dc798d1dd1671a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac1edaf7f28306a77649f5c6d5bed917b05b57e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac1edaf7f28306a77649f5c6d5bed917b05b57e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ac1edaf7f28306a77649f5c6d5bed917b05b57e", "patch": "@@ -1,3 +1,10 @@\n+2007-07-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR middle-end/30482\n+\t* c-opts.c (c_common_post_options): Do not change flag_complex_method\n+\tconditional to flag_isoc99.\n+\t(c_common_init_options): Do it here, unconditionally.\n+\n 2007-07-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/32589"}, {"sha": "3a958c641a2329d44595212e95cb1e78a0d332b2", "filename": "gcc/c-opts.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac1edaf7f28306a77649f5c6d5bed917b05b57e/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac1edaf7f28306a77649f5c6d5bed917b05b57e/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=4ac1edaf7f28306a77649f5c6d5bed917b05b57e", "patch": "@@ -232,6 +232,9 @@ c_common_init_options (unsigned int argc, const char **argv)\n   warn_pointer_arith = c_dialect_cxx ();\n   warn_write_strings = c_dialect_cxx();\n \n+  /* By default, C99-like requirements for complex multiply and divide.  */\n+  flag_complex_method = 2;\n+\n   deferred_opts = XNEWVEC (struct deferred_opt, argc);\n \n   result = lang_flags[c_language];\n@@ -1138,11 +1141,6 @@ c_common_post_options (const char **pfilename)\n   if (warn_implicit_function_declaration == -1) \n     warn_implicit_function_declaration = flag_isoc99;\n \n-  /* C99 requires special handling of complex multiplication and division;\n-     -ffast-math and -fcx-limited-range are handled in process_options.  */\n-  if (flag_isoc99)\n-    flag_complex_method = 2;\n-\n   /* If we're allowing C++0x constructs, don't warn about C++0x\n      compatibility problems.  */\n   if (cxx_dialect == cxx0x)"}]}