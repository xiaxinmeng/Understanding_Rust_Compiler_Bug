{"sha": "57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkMWI2OGQ2NTgyZWZlYzVhN2NhNjNlYTU2YTFjZWRiZmU2ZTg3NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-10T08:39:54Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-10T12:20:51Z"}, "message": "if-to-switch: fix memory leak in case merging\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/99002\n\tPR tree-optimization/99026\n\t* gimple-if-to-switch.cc (if_chain::is_beneficial): Fix memory\n\tleak when adjacent cases are merged.\n\t* tree-switch-conversion.c (switch_decision_tree::analyze_switch_statement): Use\n\trelease_clusters.\n\t(make_pass_lower_switch): Remove trailing whitespace.\n\t* tree-switch-conversion.h (release_clusters): New.", "tree": {"sha": "b8369683a8f68c196135dcd7814464e62629c366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8369683a8f68c196135dcd7814464e62629c366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72932511053596091ad291539022b51d9f2ba418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72932511053596091ad291539022b51d9f2ba418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72932511053596091ad291539022b51d9f2ba418"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "16fabef7ca0cd8baa7f6d1a2c4dd28aa9d436869", "filename": "gcc/gimple-if-to-switch.cc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/gcc%2Fgimple-if-to-switch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/gcc%2Fgimple-if-to-switch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-if-to-switch.cc?ref=57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "patch": "@@ -227,6 +227,7 @@ if_chain::is_beneficial ()\n \t\t\t(left->get_high ()), wi::one (TYPE_PRECISION (type))))\n \t    {\n \t      left->set_high (right->get_high ());\n+\t      delete right;\n \t      continue;\n \t    }\n \t}\n@@ -241,20 +242,20 @@ if_chain::is_beneficial ()\n     = jump_table_cluster::find_jump_tables (filtered_clusters);\n   bool r = output.length () < filtered_clusters.length ();\n   if (r)\n-    dump_clusters (&output, \"JT can be built\");\n-  output.release ();\n-  if (r)\n-    return true;\n+    {\n+      dump_clusters (&output, \"JT can be built\");\n+      release_clusters (output);\n+      return true;\n+    }\n+  else\n+    output.release ();\n \n   output = bit_test_cluster::find_bit_tests (filtered_clusters);\n   r = output.length () < filtered_clusters.length ();\n   if (r)\n     dump_clusters (&output, \"BT can be built\");\n \n-  for (unsigned i = 0; i < output.length (); i++)\n-    delete output[i];\n-\n-  output.release ();\n+  release_clusters (output);\n   return r;\n }\n "}, {"sha": "7f65c4ce839fbcbf740a46f0466bb2869c7d393f", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "patch": "@@ -1824,12 +1824,7 @@ switch_decision_tree::analyze_switch_statement ()\n   output.release ();\n \n   bool expanded = try_switch_expansion (output2);\n-\n-  for (unsigned i = 0; i < output2.length (); i++)\n-    delete output2[i];\n-\n-  output2.release ();\n-\n+  release_clusters (output2);\n   return expanded;\n }\n \n@@ -2597,5 +2592,3 @@ make_pass_lower_switch (gcc::context *ctxt)\n {\n   return new pass_lower_switch<false> (ctxt);\n }\n-\n-"}, {"sha": "d76f19b57f6d78f0d60479b47fa566a261cb59e6", "filename": "gcc/tree-switch-conversion.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/gcc%2Ftree-switch-conversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d1b68d6582efec5a7ca63ea56a1cedbfe6e874/gcc%2Ftree-switch-conversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.h?ref=57d1b68d6582efec5a7ca63ea56a1cedbfe6e874", "patch": "@@ -893,6 +893,16 @@ switch_decision_tree::reset_out_edges_aux (gswitch *swtch)\n     e->aux = (void *) 0;\n }\n \n+/* Release CLUSTERS vector and destruct all dynamically allocated items.  */\n+\n+static inline void\n+release_clusters (vec<cluster *> &clusters)\n+{\n+  for (unsigned i = 0; i < clusters.length (); i++)\n+    delete clusters[i];\n+  clusters.release ();\n+}\n+\n } // tree_switch_conversion namespace\n \n #endif // TREE_SWITCH_CONVERSION_H"}]}