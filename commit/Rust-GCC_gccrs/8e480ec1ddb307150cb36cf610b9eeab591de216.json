{"sha": "8e480ec1ddb307150cb36cf610b9eeab591de216", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0ODBlYzFkZGIzMDcxNTBjYjM2Y2Y2MTBiOWVlYWI1OTFkZTIxNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-04T08:01:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-04T08:01:59Z"}, "message": "tailcall: Fix up process_assignment [PR94001]\n\nWhen a function returns void or the return value is ignored, ass_var\nis NULL_TREE.  The tail recursion handling generally assumes DCE has been\nperformed and so doesn't expect to encounter useless assignments after the\ncall and expects them to be part of the return value adjustment that need\nto be changed into tail recursion additions/multiplications.\nprocess_assignment does some verification and has a way to tell the caller\nto try to move dead or whatever other stmts that don't participate in the\nreturn value modifications before it is returned.\nFor binary rhs assignments it is just fine, neither op0 nor op1 will be\nNULL_TREE and thus if *ass_var is NULL_TREE, it will not match, but unary\nrhs is handled by only setting op0 to rhs1 and setting op1 to NULL_TREE.\nAnd at this point, NULL_TREE == NULL_TREE and thus we think e.g. the\n  c_2 = -e_3(D);\ndead stmt is actually a return value modification, so we queue it as\nmultiplication and then create a void type SSA_NAME accumulator for it\nand ICE shortly after.\n\nFixed by making sure op1 == *ass_var comparison is done only if *ass_var.\n\n2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94001\n\t* tree-tailcall.c (process_assignment): Before comparing op1 to\n\t*ass_var, verify *ass_var is non-NULL.\n\n\t* gcc.dg/pr94001.c: New test.", "tree": {"sha": "e1374b81d9efeda8a9112b1bb3d5237ff8e3216d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1374b81d9efeda8a9112b1bb3d5237ff8e3216d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e480ec1ddb307150cb36cf610b9eeab591de216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e480ec1ddb307150cb36cf610b9eeab591de216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e480ec1ddb307150cb36cf610b9eeab591de216", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e480ec1ddb307150cb36cf610b9eeab591de216/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cc59ac591256f8899e137db7633fd7d1a2164ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc59ac591256f8899e137db7633fd7d1a2164ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc59ac591256f8899e137db7633fd7d1a2164ba"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "caa854d5a43d8ee832d1c523572b6a4d53226483", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e480ec1ddb307150cb36cf610b9eeab591de216", "patch": "@@ -1,3 +1,9 @@\n+2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94001\n+\t* tree-tailcall.c (process_assignment): Before comparing op1 to\n+\t*ass_var, verify *ass_var is non-NULL.\n+\n 2020-03-04  Kito Cheng  <kito.cheng@sifive.com>\n \n \tPR target/93995"}, {"sha": "a13a0a4ba59ad3e77937a49504f8903edca281b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e480ec1ddb307150cb36cf610b9eeab591de216", "patch": "@@ -1,3 +1,8 @@\n+2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94001\n+\t* gcc.dg/pr94001.c: New test.\n+\n 2020-03-04  Kito Cheng  <kito.cheng@sifive.com>\n \n \tPR target/93995"}, {"sha": "f83873fa2bd4c3bc1e387dffdbbf5eda74e134fb", "filename": "gcc/testsuite/gcc.dg/pr94001.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94001.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94001.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94001.c?ref=8e480ec1ddb307150cb36cf610b9eeab591de216", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/94001 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dce\" } */\n+\n+void\n+bar (int e)\n+{\n+  bar (3);\n+  int c;\n+  c = -e;\n+}"}, {"sha": "d81e921346056a8ce9b7198e59c9fd25a6b51c6a", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e480ec1ddb307150cb36cf610b9eeab591de216/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=8e480ec1ddb307150cb36cf610b9eeab591de216", "patch": "@@ -339,7 +339,8 @@ process_assignment (gassign *stmt,\n \t   && (non_ass_var = independent_of_stmt_p (op1, stmt, call,\n \t\t\t\t\t\t    to_move)))\n     ;\n-  else if (op1 == *ass_var\n+  else if (*ass_var\n+\t   && op1 == *ass_var\n \t   && (non_ass_var = independent_of_stmt_p (op0, stmt, call,\n \t\t\t\t\t\t    to_move)))\n     ;"}]}