{"sha": "29f55115583a0dab6cbac749c4f0804fd88e9536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlmNTUxMTU1ODNhMGRhYjZjYmFjNzQ5YzRmMDgwNGZkODhlOTUzNg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-04-26T18:34:50Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-04-26T19:29:51Z"}, "message": "coroutines: Do not assume parms are named [PR94752].\n\nParameters to user-defined coroutines might be unnamed.\nIn that case, we must synthesize a name for the coroutine\nframe copy.\n\ngcc/cp/ChangeLog:\n\n2020-04-26  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR c++/94752\n\t* coroutines.cc (morph_fn_to_coro): Ensure that\n\tunnamed function params have a usable and distinct\n\tframe field name.\n\ngcc/testsuite/ChangeLog:\n\n2020-04-26  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR c++/94752\n\t* g++.dg/coroutines/pr94752.C: New test.", "tree": {"sha": "17d248078a09a9bae1f20fcfec4ba15a4899ae65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17d248078a09a9bae1f20fcfec4ba15a4899ae65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29f55115583a0dab6cbac749c4f0804fd88e9536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f55115583a0dab6cbac749c4f0804fd88e9536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29f55115583a0dab6cbac749c4f0804fd88e9536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f55115583a0dab6cbac749c4f0804fd88e9536/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "870923cd48e1e715120ff68425437e5b346283a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/870923cd48e1e715120ff68425437e5b346283a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/870923cd48e1e715120ff68425437e5b346283a1"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "32408f7056bed6c5991b72e9d16c13e8c6a1cb5e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=29f55115583a0dab6cbac749c4f0804fd88e9536", "patch": "@@ -1,3 +1,10 @@\n+2020-04-26  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/94752\n+\t* coroutines.cc (morph_fn_to_coro): Ensure that\n+\tunnamed function params have a usable and distinct\n+\tframe field name.\n+\n 2020-04-24  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/94583"}, {"sha": "0a5a0c9b1d201a3bbb2fae19a1c42d29f9c0163b", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=29f55115583a0dab6cbac749c4f0804fd88e9536", "patch": "@@ -3653,6 +3653,7 @@ morph_fn_to_coro (tree orig, tree *resumer, tree *destroyer)\n \t  when we see uses.  */\n       param_uses = new hash_map<tree, param_info>;\n \n+      unsigned no_name_parm = 0;\n       for (tree arg = DECL_ARGUMENTS (orig); arg != NULL;\n \t   arg = DECL_CHAIN (arg))\n \t{\n@@ -3693,8 +3694,14 @@ morph_fn_to_coro (tree orig, tree *resumer, tree *destroyer)\n \t    parm.frame_type = actual_type;\n \t  parm.this_ptr = is_this_parameter (arg);\n \t  parm.trivial_dtor = TYPE_HAS_TRIVIAL_DESTRUCTOR (parm.frame_type);\n-\t  tree pname = DECL_NAME (arg);\n-\t  char *buf = xasprintf (\"__parm.%s\", IDENTIFIER_POINTER (pname));\n+\t  char *buf;\n+\t  if (DECL_NAME (arg))\n+\t    {\n+\t      tree pname = DECL_NAME (arg);\n+\t      buf = xasprintf (\"__parm.%s\", IDENTIFIER_POINTER (pname));\n+\t    }\n+\t  else\n+\t    buf = xasprintf (\"__unnamed_parm.%d\", no_name_parm++);\n \t  parm.field_id = coro_make_frame_entry\n \t    (&field_list, buf, actual_type, DECL_SOURCE_LOCATION (arg));\n \t  free (buf);"}, {"sha": "07fe8a6859823edf6b11b289747ae63abcd8d006", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29f55115583a0dab6cbac749c4f0804fd88e9536", "patch": "@@ -1,3 +1,8 @@\n+2020-04-26  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/94752\n+\t* g++.dg/coroutines/pr94752.C: New test.\n+\n 2020-04-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/94737"}, {"sha": "89ace6a6bffae03a44352656f0a6f61d0cf45ac3", "filename": "gcc/testsuite/g++.dg/coroutines/pr94752.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94752.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f55115583a0dab6cbac749c4f0804fd88e9536/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94752.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94752.C?ref=29f55115583a0dab6cbac749c4f0804fd88e9536", "patch": "@@ -0,0 +1,20 @@\n+//  { dg-additional-options  \"-w\" }\n+\n+#include \"coro.h\"\n+\n+using namespace std;\n+\n+struct task {\n+    struct promise_type {\n+        promise_type() {}\n+        task get_return_object() { return {}; }\n+        suspend_never initial_suspend() { return {}; }\n+        suspend_never final_suspend() { return {}; }\n+        void return_void() {}\n+        void unhandled_exception() {}\n+    };\n+};\n+\n+task foo(int) {\n+    co_return;\n+}"}]}