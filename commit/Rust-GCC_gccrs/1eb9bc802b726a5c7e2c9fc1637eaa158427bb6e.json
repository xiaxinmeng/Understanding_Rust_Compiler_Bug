{"sha": "1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWViOWJjODAyYjcyNmE1YzdlMmM5ZmMxNjM3ZWFhMTU4NDI3YmI2ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-22T07:45:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-22T07:45:55Z"}, "message": "Initial revision\n\nFrom-SVN: r358", "tree": {"sha": "3b3573edab28d39f15193b3124c40fb790d820da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b3573edab28d39f15193b3124c40fb790d820da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e/comments", "author": null, "committer": null, "parents": [{"sha": "230d793d150d7a4da62bee0b60a68b54800378f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/230d793d150d7a4da62bee0b60a68b54800378f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/230d793d150d7a4da62bee0b60a68b54800378f7"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "4390a6fb3796a8173c82364337921252feb3f585", "filename": "gcc/config/i386/mach.h", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e/gcc%2Fconfig%2Fi386%2Fmach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e/gcc%2Fconfig%2Fi386%2Fmach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmach.h?ref=1eb9bc802b726a5c7e2c9fc1637eaa158427bb6e", "patch": "@@ -0,0 +1,72 @@\n+/* Configuration for an i386 running Mach as the target machine.  */\n+#include \"i386gas.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dunix -Di386 -DMACH\"\n+\n+/* Specify extra dir to search for include files.  */\n+#define SYSTEM_INCLUDE_DIR \"/usr/mach/include\"\n+\f\n+/* Defines to be able to build libgcc.a with GCC.  */\n+\n+#define perform_udivsi3(a,b)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  register int dx asm(\"dx\");\t\t\t\t\t\t\\\n+  register int ax asm(\"ax\");\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  dx = 0;\t\t\t\t\t\t\t\t\\\n+  ax = a;\t\t\t\t\t\t\t\t\\\n+  asm (\"divl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b), \"d\" (dx));\t\\\n+  return ax;\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define perform_divsi3(a,b)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  register int dx asm(\"dx\");\t\t\t\t\t\t\\\n+  register int ax asm(\"ax\");\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  ax = a;\t\t\t\t\t\t\t\t\\\n+  asm (\"cltd\\n\\tidivl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b));\t\\\n+  return ax;\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define perform_umodsi3(a,b)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  register int dx asm(\"dx\");\t\t\t\t\t\t\\\n+  register int ax asm(\"ax\");\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  dx = 0;\t\t\t\t\t\t\t\t\\\n+  ax = a;\t\t\t\t\t\t\t\t\\\n+  asm (\"divl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b), \"d\" (dx));\t\\\n+  return dx;\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define perform_modsi3(a,b)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  register int dx asm(\"dx\");\t\t\t\t\t\t\\\n+  register int ax asm(\"ax\");\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  ax = a;\t\t\t\t\t\t\t\t\\\n+  asm (\"cltd\\n\\tidivl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b));\t\\\n+  return dx;\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define perform_fix_truncdfsi2(a)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  auto unsigned short ostatus;\t\t\t\t\t\t\\\n+  auto unsigned short nstatus;\t\t\t\t\t\t\\\n+  auto int ret;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  &ostatus;\t\t\t/* guarantee these land in memory */\t\\\n+  &nstatus;\t\t\t\t\t\t\t\t\\\n+  &ret;\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  asm volatile (\"fnstcw %0\" : \"=m\" (ostatus));\t\t\t\t\\\n+  nstatus = ostatus | 0x0c00;\t\t\t\t\t\t\\\n+  asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n+  asm volatile (\"fldl %0\" : /* no outputs */ : \"m\" (a));\t\t\\\n+  asm volatile (\"fistpl %0\" : \"=m\" (ret));\t\t\t\t\\\n+  asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  return ret;\t\t\t\t\t\t\t\t\\\n+}"}]}