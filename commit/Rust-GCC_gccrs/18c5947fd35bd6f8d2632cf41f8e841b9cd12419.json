{"sha": "18c5947fd35bd6f8d2632cf41f8e841b9cd12419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjNTk0N2ZkMzViZDZmOGQyNjMyY2Y0MWY4ZTg0MWI5Y2QxMjQxOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-03-23T20:54:21Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-03-23T20:54:21Z"}, "message": "sparc.h (SPARC_SIMM{10,11,13}_P): Define.\n\n\t* sparc/sparc.h (SPARC_SIMM{10,11,13}_P): Define.\n\t(SMALL_INT): Use SPARC_SIMM13_P.\n\t(CONST_OK_FOR_LETTER_P): Support new letters L,M.\n\nFrom-SVN: r11600", "tree": {"sha": "69a9e8dba1538bad945c0f513f6760d4565a6f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69a9e8dba1538bad945c0f513f6760d4565a6f54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c5947fd35bd6f8d2632cf41f8e841b9cd12419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c5947fd35bd6f8d2632cf41f8e841b9cd12419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c5947fd35bd6f8d2632cf41f8e841b9cd12419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c5947fd35bd6f8d2632cf41f8e841b9cd12419/comments", "author": null, "committer": null, "parents": [{"sha": "4b27ecd5aec9437f249e41373b67878544ed932d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b27ecd5aec9437f249e41373b67878544ed932d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b27ecd5aec9437f249e41373b67878544ed932d"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "9e789c548e59547c925d717b3ac796c17bb1f5a3", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c5947fd35bd6f8d2632cf41f8e841b9cd12419/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c5947fd35bd6f8d2632cf41f8e841b9cd12419/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=18c5947fd35bd6f8d2632cf41f8e841b9cd12419", "patch": "@@ -1141,17 +1141,25 @@ extern char leaf_reg_remap[];\n    C is the letter, and VALUE is a constant value.\n    Return 1 if VALUE is in the range specified by C.\n \n-   For SPARC, `I' is used for the range of constants an insn\n-   can actually contain.\n+   `I' is used for the range of constants an insn can actually contain.\n    `J' is used for the range which is just zero (since that is R0).\n-   `K' is used for constants which can be loaded with a single sethi insn.  */\n+   `K' is used for constants which can be loaded with a single sethi insn.\n+   `L' is used for the range of constants supported by the movcc insns.\n+   `M' is used for the range of constants supported by the movrcc insns.  */\n \n-#define SMALL_INT(X) ((unsigned) (INTVAL (X) + 0x1000) < 0x2000)\n+#define SPARC_SIMM10_P(X) ((unsigned HOST_WIDE_INT) ((X) + 0x200) < 0x400)\n+#define SPARC_SIMM11_P(X) ((unsigned HOST_WIDE_INT) ((X) + 0x400) < 0x800)\n+#define SPARC_SIMM13_P(X) ((unsigned HOST_WIDE_INT) ((X) + 0x1000) < 0x2000)\n+/* 10 and 11 bit immediates are only used for a few specific insns.\n+   SMALL_INT is used throughout the port so we continue to use it.  */\n+#define SMALL_INT(X) (SPARC_SIMM13_P (INTVAL (X)))\n \n #define CONST_OK_FOR_LETTER_P(VALUE, C)  \\\n-  ((C) == 'I' ? (unsigned) ((VALUE) + 0x1000) < 0x2000\t\\\n+  ((C) == 'I' ? SPARC_SIMM13_P (VALUE)\t\t\t\\\n    : (C) == 'J' ? (VALUE) == 0\t\t\t\t\\\n    : (C) == 'K' ? ((VALUE) & 0x3ff) == 0\t\t\\\n+   : (C) == 'L' ? SPARC_SIMM11_P (VALUE)\t\t\\\n+   : (C) == 'M' ? SPARC_SIMM10_P (VALUE)\t\t\\\n    : 0)\n \n /* Similar, but for floating constants, and defining letters G and H."}]}