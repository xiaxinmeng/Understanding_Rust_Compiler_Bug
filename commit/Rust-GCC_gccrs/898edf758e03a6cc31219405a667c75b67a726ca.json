{"sha": "898edf758e03a6cc31219405a667c75b67a726ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk4ZWRmNzU4ZTAzYTZjYzMxMjE5NDA1YTY2N2M3NWI2N2E3MjZjYQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-04-09T18:53:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:47Z"}, "message": "[Ada] tech debt: Parent (Empty) is not allowed\n\ngcc/ada/\n\n\t* atree.adb, atree.ads (Parent, Set_Parent): Assert node is\n\tPresent.\n\t(Copy_Parent, Parent_Kind): New helper routines.\n\t* gen_il-gen.adb: Add with clause.\n\t* nlists.adb (Parent): Assert Parent of list is Present.\n\t* aspects.adb, checks.adb, exp_aggr.adb, exp_ch6.adb,\n\texp_util.adb, lib-xref-spark_specific.adb, osint.ads,\n\tsem_ch12.adb, sem_ch13.adb, sem_ch3.adb, sem_ch6.adb,\n\tsem_dim.adb, sem_prag.adb, sem_res.adb, sem_util.adb,\n\ttreepr.adb: Do not call Parent and Set_Parent on the Empty node.\n\t* libgnat/a-stwiun__shared.adb, libgnat/a-stzunb__shared.adb:\n\tMinor: Fix typos in comments.\n\t* einfo.ads: Minor comment update.\n\t* sinfo-utils.ads, sinfo-utils.adb (Parent_Kind, Copy_Parent):\n\tNew functions.", "tree": {"sha": "69749a9c1b8385174595567094c2dc2853a9731a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69749a9c1b8385174595567094c2dc2853a9731a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/898edf758e03a6cc31219405a667c75b67a726ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898edf758e03a6cc31219405a667c75b67a726ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/898edf758e03a6cc31219405a667c75b67a726ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898edf758e03a6cc31219405a667c75b67a726ca/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "568d3d4656c347012eb7dd2f008845505eab3ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568d3d4656c347012eb7dd2f008845505eab3ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568d3d4656c347012eb7dd2f008845505eab3ca8"}], "stats": {"total": 205, "additions": 138, "deletions": 67}, "files": [{"sha": "a6e4f28f2cb93deccde0bab27434b821f872c3fc", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -241,6 +241,10 @@ package body Aspects is\n       --  find the declaration node where the aspects reside. This is usually\n       --  the parent or the parent of the parent.\n \n+      if No (Parent (Owner)) then\n+         return Empty;\n+      end if;\n+\n       Decl := Parent (Owner);\n       if not Permits_Aspect_Specifications (Decl) then\n          Decl := Parent (Decl);\n@@ -488,6 +492,7 @@ package body Aspects is\n \n    function Permits_Aspect_Specifications (N : Node_Id) return Boolean is\n    begin\n+      pragma Assert (Present (N));\n       return Has_Aspect_Specifications_Flag (Nkind (N));\n    end Permits_Aspect_Specifications;\n "}, {"sha": "33cde5ad0b3abdf7a3b92e5ded5adb1be7a0edde", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -1232,7 +1232,9 @@ package body Atree is\n          if Field in Node_Range then\n             New_N := Union_Id (Copy_Separate_Tree (Node_Id (Field)));\n \n-            if Parent (Node_Id (Field)) = Source then\n+            if Present (Node_Id (Field))\n+              and then Parent (Node_Id (Field)) = Source\n+            then\n                Set_Parent (Node_Id (New_N), New_Id);\n             end if;\n \n@@ -1801,16 +1803,14 @@ package body Atree is\n       end if;\n    end Paren_Count;\n \n-   ------------\n-   -- Parent --\n-   ------------\n-\n-   function Parent (N : Node_Id) return Node_Id is\n+   function Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id is\n    begin\n+      pragma Assert (Atree.Present (N));\n+\n       if Is_List_Member (N) then\n          return Parent (List_Containing (N));\n       else\n-         return Node_Id (Link (N));\n+         return Node_Or_Entity_Id (Link (N));\n       end if;\n    end Parent;\n \n@@ -2126,9 +2126,9 @@ package body Atree is\n    -- Set_Parent --\n    ----------------\n \n-   procedure Set_Parent (N : Node_Id; Val : Node_Id) is\n+   procedure Set_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id) is\n    begin\n-      pragma Assert (not Locked);\n+      pragma Assert (Atree.Present (N));\n       pragma Assert (not In_List (N));\n       Set_Link (N, Union_Id (Val));\n    end Set_Parent;"}, {"sha": "0995b945aafd48f8d7052dfbf3cb7830f9184b8b", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -414,34 +414,34 @@ package Atree is\n    --  The following functions return the contents of the indicated field of\n    --  the node referenced by the argument, which is a Node_Id.\n \n-   function No                           (N : Node_Id) return Boolean;\n+   function No (N : Node_Id) return Boolean;\n    pragma Inline (No);\n    --  Tests given Id for equality with the Empty node. This allows notations\n    --  like \"if No (Variant_Part)\" as opposed to \"if Variant_Part = Empty\".\n \n-   function Parent                       (N : Node_Id) return Node_Id;\n+   function Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id;\n    pragma Inline (Parent);\n    --  Returns the parent of a node if the node is not a list member, or else\n    --  the parent of the list containing the node if the node is a list member.\n \n-   function Paren_Count                  (N : Node_Id) return Nat;\n+   function Paren_Count (N : Node_Id) return Nat;\n    pragma Inline (Paren_Count);\n    --  Number of parentheses that surround an expression\n \n-   function Present                      (N : Node_Id) return Boolean;\n+   function Present (N : Node_Id) return Boolean;\n    pragma Inline (Present);\n    --  Tests given Id for inequality with the Empty node. This allows notations\n    --  like \"if Present (Statement)\" as opposed to \"if Statement /= Empty\".\n \n-   procedure Set_Original_Node         (N : Node_Id; Val : Node_Id);\n+   procedure Set_Original_Node (N : Node_Id; Val : Node_Id);\n    pragma Inline (Set_Original_Node);\n    --  Note that this routine is used only in very peculiar cases. In normal\n    --  cases, the Original_Node link is set by calls to Rewrite.\n \n-   procedure Set_Parent                (N : Node_Id; Val : Node_Id);\n+   procedure Set_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id);\n    pragma Inline (Set_Parent);\n \n-   procedure Set_Paren_Count           (N : Node_Id; Val : Nat);\n+   procedure Set_Paren_Count (N : Node_Id; Val : Nat);\n    pragma Inline (Set_Paren_Count);\n \n    ---------------------------"}, {"sha": "1a39a821f3931bf3a02340f7390a13bc9237d9e6", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -2713,6 +2713,10 @@ package body Checks is\n \n       Subp_Spec := Parent (Subp);\n \n+      if No (Subp_Spec) then\n+         return;\n+      end if;\n+\n       if Nkind (Subp_Spec) = N_Defining_Program_Unit_Name then\n          Subp_Spec := Parent (Subp_Spec);\n       end if;"}, {"sha": "70b93b32495491974fdb8cc5d1590c30ce53d289", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -5088,9 +5088,9 @@ package Einfo is\n    -- Applicable attributes by entity kind --\n    ------------------------------------------\n \n-   --  In the conversion to variable-sized nodes and entities, which is an\n-   --  ongoing project, a number of discrepancies were noticed. They are\n-   --  documented in comments, and marked with \"$$$\".\n+   --  In the conversion to variable-sized nodes and entities, a number of\n+   --  discrepancies were noticed. They are documented in comments, and marked\n+   --  with \"$$$\".\n \n    --  E_Abstract_State\n    --    Refinement_Constituents"}, {"sha": "85e2abb07323db6295cbb49f3faf9bf94cf15057", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -1920,7 +1920,7 @@ package body Exp_Aggr is\n \n       function Gen_Loop (L, H : Node_Id; Expr : Node_Id) return List_Id is\n          Is_Iterated_Component : constant Boolean :=\n-           Nkind (Parent (Expr)) = N_Iterated_Component_Association;\n+           Parent_Kind (Expr) = N_Iterated_Component_Association;\n \n          L_J : Node_Id;\n \n@@ -2436,7 +2436,7 @@ package body Exp_Aggr is\n \n                      Expr := Get_Assoc_Expr (Others_Assoc);\n                      Dup_Expr := New_Copy_Tree (Expr);\n-                     Set_Parent (Dup_Expr, Parent (Expr));\n+                     Copy_Parent (To => Dup_Expr, From => Expr);\n \n                      Set_Loop_Actions (Others_Assoc, New_List);\n                      Append_List"}, {"sha": "b81216fb0c73143eab28a9affe58d5c95713802f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -3589,7 +3589,9 @@ package body Exp_Ch6 is\n                Ren_Root := Alias (Ren_Root);\n             end if;\n \n-            if Present (Original_Node (Parent (Parent (Ren_Root)))) then\n+            if Present (Parent (Ren_Root))\n+              and then Present (Original_Node (Parent (Parent (Ren_Root))))\n+            then\n                Ren_Decl := Original_Node (Parent (Parent (Ren_Root)));\n \n                if Nkind (Ren_Decl) = N_Subprogram_Renaming_Declaration then"}, {"sha": "270242d8ff915cb0452593cf9332da432f31db56", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -12277,7 +12277,9 @@ package body Exp_Util is\n \n          --  Local variables\n \n-         Context : constant Node_Id    := Parent (Ref);\n+         Context : constant Node_Id :=\n+           (if No (Ref) then Empty else Parent (Ref));\n+\n          Loc     : constant Source_Ptr := Sloc (Ref);\n          Ref_Id  : Entity_Id;\n          Result  : Traverse_Result;\n@@ -13493,7 +13495,7 @@ package body Exp_Util is\n          --  modification of that variable within the loop may incorrectly\n          --  affect the execution of the loop.\n \n-         elsif Nkind (Parent (Parent (N))) = N_Loop_Parameter_Specification\n+         elsif Parent_Kind (Parent (N)) = N_Loop_Parameter_Specification\n            and then Within_In_Parameter (Prefix (N))\n            and then Variable_Ref\n          then"}, {"sha": "0f3698ea33be38463098eacb887df388562ecc31", "filename": "gcc/ada/gen_il-gen.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fgen_il-gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fgen_il-gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -2329,6 +2329,7 @@ package body Gen_IL.Gen is\n          Put (B, \"with Nlists; use Nlists;\" & LF);\n          Put (B, \"pragma Warnings (Off);\" & LF);\n          Put (B, \"with Einfo.Utils; use Einfo.Utils;\" & LF);\n+         Put (B, \"with Sinfo.Utils; use Sinfo.Utils;\" & LF);\n          Put (B, \"pragma Warnings (On);\" & LF);\n \n          Put (B, LF & \"package body Sinfo.Nodes is\" & LF & LF);"}, {"sha": "1905f23a325f42bc27885834b1d21299420dc590", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -187,6 +187,10 @@ package body SPARK_Specific is\n                             | Generic_Subprogram_Kind\n                             | Subprogram_Kind\n       then\n+         if No (Unit_Declaration_Node (N)) then\n+            return Empty;\n+         end if;\n+\n          Context := Parent (Unit_Declaration_Node (N));\n \n          --  If this was a library-level subprogram then replace Context with"}, {"sha": "1d0521cb6f67b9f91a798e94611132b05f3f7987", "filename": "gcc/ada/libgnat/a-stwiun__shared.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Flibgnat%2Fa-stwiun__shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Flibgnat%2Fa-stwiun__shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwiun__shared.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -76,7 +76,7 @@ package body Ada.Strings.Wide_Unbounded is\n          Reference (Empty_Shared_Wide_String'Access);\n          DR := Empty_Shared_Wide_String'Access;\n \n-      --  Left string is empty, return Rigth string\n+      --  Left string is empty, return Right string\n \n       elsif LR.Last = 0 then\n          Reference (RR);"}, {"sha": "99a545e1437158e67e4ba38fda7983f40717cfdd", "filename": "gcc/ada/libgnat/a-stzunb__shared.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Flibgnat%2Fa-stzunb__shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Flibgnat%2Fa-stzunb__shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzunb__shared.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -76,7 +76,7 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n          Reference (Empty_Shared_Wide_Wide_String'Access);\n          DR := Empty_Shared_Wide_Wide_String'Access;\n \n-      --  Left string is empty, return Rigth string\n+      --  Left string is empty, return Right string\n \n       elsif LR.Last = 0 then\n          Reference (RR);"}, {"sha": "7339c17fcb1be80f90cd5017a746a8e5739de0f4", "filename": "gcc/ada/nlists.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fnlists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fnlists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -27,11 +27,11 @@\n --  file must be properly reflected in the corresponding C header a-nlists.h\n \n with Alloc;\n-with Atree;          use Atree;\n-with Debug;          use Debug;\n-with Output;         use Output;\n-with Sinfo;          use Sinfo;\n-with Sinfo.Nodes;    use Sinfo.Nodes;\n+with Atree;       use Atree;\n+with Debug;       use Debug;\n+with Output;      use Output;\n+with Sinfo;       use Sinfo;\n+with Sinfo.Nodes; use Sinfo.Nodes;\n with Table;\n \n package body Nlists is\n@@ -1015,6 +1015,7 @@ package body Nlists is\n \n    function Parent (List : List_Id) return Node_Or_Entity_Id is\n    begin\n+      pragma Assert (Present (List));\n       pragma Assert (List <= Lists.Last);\n       return Lists.Table (List).Parent;\n    end Parent;"}, {"sha": "f1a9f848c2502ac1cebba66e6219bbcd67513049", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -716,9 +716,9 @@ private\n    File_Names : File_Name_Array_Ptr :=\n                   new File_Name_Array (1 .. Int (Argument_Count) + 2);\n    --  As arguments are scanned, file names are stored in this array. The\n-   --  strings do not have terminating NUL files. The array is extensible,\n-   --  because when using project files, there may be more files than\n-   --  arguments on the command line.\n+   --  strings do not have terminating NULs. The array is extensible, because\n+   --  when using project files, there may be more files than arguments on the\n+   --  command line.\n \n    type File_Index_Array is array (Int range <>) of Int;\n    type File_Index_Array_Ptr is access File_Index_Array;"}, {"sha": "893854ded94262e013c3acf37c50cd1b7e9b55d3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -11258,7 +11258,8 @@ package body Sem_Ch12 is\n       A_Gen_Obj   : constant Entity_Id  :=\n                       Defining_Identifier (Analyzed_Formal);\n       Acc_Def     : Node_Id             := Empty;\n-      Act_Assoc   : constant Node_Id    := Parent (Actual);\n+      Act_Assoc   : constant Node_Id    :=\n+        (if No (Actual) then Empty else Parent (Actual));\n       Actual_Decl : Node_Id             := Empty;\n       Decl_Node   : Node_Id;\n       Def         : Node_Id;\n@@ -11289,7 +11290,7 @@ package body Sem_Ch12 is\n          Error_Msg_N (\"duplicate instantiation of generic parameter\", Actual);\n       end if;\n \n-      Set_Parent (List, Parent (Actual));\n+      Set_Parent (List, Act_Assoc);\n \n       --  OUT present\n \n@@ -11654,7 +11655,9 @@ package body Sem_Ch12 is\n          end if;\n       end if;\n \n-      if Nkind (Actual) in N_Has_Entity then\n+      if Nkind (Actual) in N_Has_Entity\n+        and then Present (Entity (Actual))\n+      then\n          Actual_Decl := Parent (Entity (Actual));\n       end if;\n \n@@ -16339,7 +16342,7 @@ package body Sem_Ch12 is\n                --  global in the current generic it must be preserved for its\n                --  instantiation.\n \n-               if Nkind (Parent (Typ)) = N_Subtype_Declaration\n+               if Parent_Kind (Typ) = N_Subtype_Declaration\n                  and then Present (Generic_Parent_Type (Parent (Typ)))\n                then\n                   Typ := Base_Type (Typ);"}, {"sha": "d7667f2702677a39619aeaa361c36795c8e15472", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -10652,7 +10652,7 @@ package body Sem_Ch13 is\n       --  in particular, it has no type.\n \n       Err : Boolean;\n-      --  Set False if error\n+      --  Set True if error\n \n       --  On entry to this procedure, Entity (Ident) contains a copy of the\n       --  original expression from the aspect, saved for this purpose, and\n@@ -10786,7 +10786,9 @@ package body Sem_Ch13 is\n          --  Indicate that the expression comes from an aspect specification,\n          --  which is used in subsequent analysis even if expansion is off.\n \n-         Set_Parent (End_Decl_Expr, ASN);\n+         if Present (End_Decl_Expr) then\n+            Set_Parent (End_Decl_Expr, ASN);\n+         end if;\n \n          --  In a generic context the original aspect expressions have not\n          --  been preanalyzed, so do it now. There are no conformance checks"}, {"sha": "98cbef483db13a29d2fa976389599d8c1d0ae553", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -6189,7 +6189,7 @@ package body Sem_Ch3 is\n          --  the master_id associated with an anonymous access to task type\n          --  component (see Expand_N_Full_Type_Declaration.Build_Master)\n \n-         Set_Parent (Element_Type, Parent (T));\n+         Copy_Parent (To => Element_Type, From => T);\n \n          --  Ada 2005 (AI-230): In case of components that are anonymous access\n          --  types the level of accessibility depends on the enclosing type\n@@ -10361,7 +10361,7 @@ package body Sem_Ch3 is\n                if Discrim_Present then\n                   null;\n \n-               elsif Nkind (Parent (Parent (Def))) = N_Component_Declaration\n+               elsif Parent_Kind (Parent (Def)) = N_Component_Declaration\n                  and then Has_Per_Object_Constraint\n                             (Defining_Identifier (Parent (Parent (Def))))\n                then\n@@ -22391,10 +22391,10 @@ package body Sem_Ch3 is\n \n       Final_Storage_Only := not Is_Controlled (T);\n \n-      --  Ada 2005: Check whether an explicit Limited is present in a derived\n+      --  Ada 2005: Check whether an explicit \"limited\" is present in a derived\n       --  type declaration.\n \n-      if Nkind (Parent (Def)) = N_Derived_Type_Definition\n+      if Parent_Kind (Def) = N_Derived_Type_Definition\n         and then Limited_Present (Parent (Def))\n       then\n          Set_Is_Limited_Record (T);"}, {"sha": "7b4b288e050084b2256a3cd99387c81d427b6ec2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -11709,7 +11709,7 @@ package body Sem_Ch6 is\n          if Inside_Freezing_Actions = 0\n            and then Is_Package_Or_Generic_Package (Current_Scope)\n            and then In_Private_Part (Current_Scope)\n-           and then Nkind (Parent (E)) = N_Private_Extension_Declaration\n+           and then Parent_Kind (E) = N_Private_Extension_Declaration\n            and then Nkind (Parent (S)) = N_Full_Type_Declaration\n            and then Full_View (Defining_Identifier (Parent (E)))\n                       = Defining_Identifier (Parent (S))"}, {"sha": "b303229decf838339400f2e714da46ef5f571177", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -3765,16 +3765,20 @@ package body Sem_Dim is\n    ---------------\n \n    function System_Of (E : Entity_Id) return System_Type is\n-      Type_Decl : constant Node_Id := Parent (E);\n-\n    begin\n-      --  Look for Type_Decl in System_Table\n+      if Present (E) then\n+         declare\n+            Type_Decl : constant Node_Id := Parent (E);\n+         begin\n+            --  Look for Type_Decl in System_Table\n \n-      for Dim_Sys in 1 .. System_Table.Last loop\n-         if Type_Decl = System_Table.Table (Dim_Sys).Type_Decl then\n-            return System_Table.Table (Dim_Sys);\n-         end if;\n-      end loop;\n+            for Dim_Sys in 1 .. System_Table.Last loop\n+               if Type_Decl = System_Table.Table (Dim_Sys).Type_Decl then\n+                  return System_Table.Table (Dim_Sys);\n+               end if;\n+            end loop;\n+         end;\n+      end if;\n \n       return Null_System;\n    end System_Of;"}, {"sha": "14351b3f3be3e9ff8254ea9a7c505405d2f149ab", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -9257,7 +9257,9 @@ package body Sem_Prag is\n                --  just the same scope). If the pragma comes from an aspect\n                --  specification we know that it is part of the declaration.\n \n-               elsif Parent (Unit_Declaration_Node (Def_Id)) /= Parent (N)\n+               elsif (No (Unit_Declaration_Node (Def_Id))\n+                        or else Parent (Unit_Declaration_Node (Def_Id)) /=\n+                                Parent (N))\n                  and then Nkind (Parent (N)) /= N_Compilation_Unit_Aux\n                  and then not From_Aspect_Specification (N)\n                then\n@@ -9848,7 +9850,7 @@ package body Sem_Prag is\n             --  inlineable either.\n \n             elsif Is_Generic_Instance (Subp)\n-              or else Nkind (Parent (Parent (Subp))) = N_Subprogram_Declaration\n+              or else Parent_Kind (Parent (Subp)) = N_Subprogram_Declaration\n             then\n                null;\n \n@@ -9894,7 +9896,11 @@ package body Sem_Prag is\n                if In_Same_Source_Unit (Subp, Inner_Subp) then\n                   Set_Inline_Flags (Inner_Subp);\n \n-                  Decl := Parent (Parent (Inner_Subp));\n+                  if Present (Parent (Inner_Subp)) then\n+                     Decl := Parent (Parent (Inner_Subp));\n+                  else\n+                     Decl := Empty;\n+                  end if;\n \n                   if Nkind (Decl) = N_Subprogram_Declaration\n                     and then Present (Corresponding_Body (Decl))\n@@ -30892,7 +30898,7 @@ package body Sem_Prag is\n       --  Follow subprogram renaming chain\n \n       if Is_Subprogram (Def_Id)\n-        and then Nkind (Parent (Declaration_Node (Def_Id))) =\n+        and then Parent_Kind (Declaration_Node (Def_Id)) =\n                    N_Subprogram_Renaming_Declaration\n         and then Present (Alias (Def_Id))\n       then"}, {"sha": "e639fab92e47f5ccc4adef5ca8540273abc7c09d", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -9162,8 +9162,9 @@ package body Sem_Res is\n          return;\n       end if;\n \n-      if Nkind (Parent (N)) = N_Indexed_Component\n-        or else Nkind (Parent (Parent (N))) = N_Indexed_Component\n+      if Present (Parent (N))\n+        and then (Nkind (Parent (N)) = N_Indexed_Component\n+                    or else Nkind (Parent (Parent (N))) = N_Indexed_Component)\n       then\n          Result_Type := Base_Type (Typ);\n       end if;"}, {"sha": "8a4a98b51154cf64c6ad138a6748136b978fffdb", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -2027,7 +2027,7 @@ package body Sem_Util is\n          --  the original constraint from its component declaration.\n \n          Sel := Entity (Selector_Name (N));\n-         if Nkind (Parent (Sel)) /= N_Component_Declaration then\n+         if Parent_Kind (Sel) /= N_Component_Declaration then\n             return Empty;\n          end if;\n       end if;\n@@ -6366,8 +6366,8 @@ package body Sem_Util is\n          Is_Type_In_Pkg :=\n            Is_Package_Or_Generic_Package (B_Scope)\n              and then\n-               Nkind (Parent (Declaration_Node (First_Subtype (T)))) /=\n-                                                           N_Package_Body;\n+           Parent_Kind (Declaration_Node (First_Subtype (T))) /=\n+             N_Package_Body;\n \n          while Present (Id) loop\n \n@@ -6385,8 +6385,8 @@ package body Sem_Util is\n               and then (Is_Type_In_Pkg\n                          or else Is_Derived_Type (B_Type)\n                          or else Is_Primitive (Id))\n-              and then Nkind (Parent (Parent (Id)))\n-                         not in N_Formal_Subprogram_Declaration\n+              and then Parent_Kind (Parent (Id))\n+                                    not in N_Formal_Subprogram_Declaration\n             then\n                Is_Prim := False;\n \n@@ -20042,7 +20042,8 @@ package body Sem_Util is\n \n    function Is_Renamed_Entry (Proc_Nam : Entity_Id) return Boolean is\n       Orig_Node : Node_Id := Empty;\n-      Subp_Decl : Node_Id := Parent (Parent (Proc_Nam));\n+      Subp_Decl : Node_Id :=\n+        (if No (Parent (Proc_Nam)) then Empty else Parent (Parent (Proc_Nam)));\n \n       function Is_Entry (Nam : Node_Id) return Boolean;\n       --  Determine whether Nam is an entry. Traverse selectors if there are\n@@ -27072,7 +27073,7 @@ package body Sem_Util is\n       --  or an exception handler). We skip this if Cond is True, since the\n       --  capturing of values from conditional tests handles this ok.\n \n-      if Cond then\n+      if Cond or else No (N) then\n          return True;\n       end if;\n "}, {"sha": "7f9bb899989f0b77f5b442bd4646b54ecc83949a", "filename": "gcc/ada/sinfo-utils.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-utils.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -137,6 +137,29 @@ package body Sinfo.Utils is\n       Write_Eol;\n    end Node_Debug_Output;\n \n+   -------------------------------\n+   -- Parent-related operations --\n+   -------------------------------\n+\n+   procedure Copy_Parent (To, From : Node_Or_Entity_Id) is\n+   begin\n+      if Atree.Present (To) and Atree.Present (From) then\n+         Atree.Set_Parent (To, Atree.Parent (From));\n+      else\n+         pragma Assert\n+           (if Atree.Present (To) then Atree.No (Atree.Parent (To)));\n+      end if;\n+   end Copy_Parent;\n+\n+   function Parent_Kind (N : Node_Id) return Node_Kind is\n+   begin\n+      if Atree.No (N) then\n+         return N_Empty;\n+      else\n+         return Nkind (Atree.Parent (N));\n+      end if;\n+   end Parent_Kind;\n+\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------"}, {"sha": "2023e6726f0e4d27ff169d5fc49239cd8c33e46a", "filename": "gcc/ada/sinfo-utils.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsinfo-utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Fsinfo-utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-utils.ads?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -27,6 +27,18 @@ with Sinfo.Nodes;    use Sinfo.Nodes;\n \n package Sinfo.Utils is\n \n+   -------------------------------\n+   -- Parent-related operations --\n+   -------------------------------\n+\n+   procedure Copy_Parent (To, From : Node_Or_Entity_Id);\n+   --  Does Set_Parent (To, Parent (From)), except that if To or From are\n+   --  empty, does nothing. If From is empty but To is not, then Parent (To)\n+   --  should already be Empty.\n+\n+   function Parent_Kind (N : Node_Id) return Node_Kind;\n+   --  Same as Nkind (Parent (N)), except if N is Empty, return N_Empty\n+\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------"}, {"sha": "ff4ff846f9f6ce92223c1bb8f2d2f5b217088a4b", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898edf758e03a6cc31219405a667c75b67a726ca/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=898edf758e03a6cc31219405a667c75b67a726ca", "patch": "@@ -412,7 +412,7 @@ package body Treepr is\n             return Nlists.Parent (List_Id (N));\n \n          when Node_Range =>\n-            return Atree.Parent (Node_Or_Entity_Id (N));\n+            return Parent (Node_Or_Entity_Id (N));\n \n          when others =>\n             Write_Int (Int (N));"}]}