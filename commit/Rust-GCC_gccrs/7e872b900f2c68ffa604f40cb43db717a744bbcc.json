{"sha": "7e872b900f2c68ffa604f40cb43db717a744bbcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U4NzJiOTAwZjJjNjhmZmE2MDRmNDBjYjQzZGI3MTdhNzQ0YmJjYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-11-26T20:50:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-11-26T20:50:28Z"}, "message": "re PR rtl-optimization/49912 (ICE from -freorder-blocks-and-partition : verify_flow_info failed)\n\n\tPR rtl-optimization/49912\n\t* cfgrtl.c (rtl_verify_flow_info_1): Ignore also EDGE_PRESERVE bit\n\twhen counting n_branch.\n\n\t* g++.dg/other/pr49912.C: New test.\n\nFrom-SVN: r181743", "tree": {"sha": "ad272056e6b58480273742f437a1673284cfc257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad272056e6b58480273742f437a1673284cfc257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e872b900f2c68ffa604f40cb43db717a744bbcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e872b900f2c68ffa604f40cb43db717a744bbcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e872b900f2c68ffa604f40cb43db717a744bbcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e872b900f2c68ffa604f40cb43db717a744bbcc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1c63c5fb9130b32529b567e4f1319e3d00e8764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c63c5fb9130b32529b567e4f1319e3d00e8764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c63c5fb9130b32529b567e4f1319e3d00e8764"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "dcc99a04bfa955f83d3ac3cb7d3136038eae79dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e872b900f2c68ffa604f40cb43db717a744bbcc", "patch": "@@ -1,3 +1,9 @@\n+2011-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/49912\n+\t* cfgrtl.c (rtl_verify_flow_info_1): Ignore also EDGE_PRESERVE bit\n+\twhen counting n_branch.\n+\n 2011-11-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sync.md (movdi_via_fpu): Add %Z insn suffixes."}, {"sha": "4b1d8350de5d5b0a39de00e917f5d44e33d068ed", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=7e872b900f2c68ffa604f40cb43db717a744bbcc", "patch": "@@ -1875,7 +1875,8 @@ rtl_verify_flow_info_1 (void)\n \t\t\t    | EDGE_CAN_FALLTHRU\n \t\t\t    | EDGE_IRREDUCIBLE_LOOP\n \t\t\t    | EDGE_LOOP_EXIT\n-\t\t\t    | EDGE_CROSSING)) == 0)\n+\t\t\t    | EDGE_CROSSING\n+\t\t\t    | EDGE_PRESERVE)) == 0)\n \t    n_branch++;\n \n \t  if (e->flags & EDGE_ABNORMAL_CALL)"}, {"sha": "56073ab096ad746e5423857e8ae503a4e289b15a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e872b900f2c68ffa604f40cb43db717a744bbcc", "patch": "@@ -1,3 +1,8 @@\n+2011-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/49912\n+\t* g++.dg/other/pr49912.C: New test.\n+\n 2011-11-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/vect/fast-math-vect-call-2.c: Require vect_double"}, {"sha": "b8c3e5bedff759cf20d193b84c433bc948f0b998", "filename": "gcc/testsuite/g++.dg/other/pr49912.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr49912.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e872b900f2c68ffa604f40cb43db717a744bbcc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr49912.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr49912.C?ref=7e872b900f2c68ffa604f40cb43db717a744bbcc", "patch": "@@ -0,0 +1,38 @@\n+// PR rtl-optimization/49912\n+// { dg-do compile }\n+// { dg-require-effective-target freorder }\n+// { dg-options \"-O -freorder-blocks-and-partition\" }\n+\n+int foo (int *);\n+\n+struct S\n+{\n+  int *m1 ();\n+  S (int);\n+   ~S () { foo (m1 ()); }\n+};\n+\n+template <int>\n+struct V\n+{\n+  S *v1;\n+  void m2 (const S &);\n+  S *base ();\n+};\n+\n+template <int N>\n+void V<N>::m2 (const S &x)\n+{\n+  S a = x;\n+  S *l = base ();\n+  while (l)\n+    *v1 = *--l;\n+}\n+\n+V<0> v;\n+\n+void\n+foo ()\n+{\n+  v.m2 (0);\n+}"}]}