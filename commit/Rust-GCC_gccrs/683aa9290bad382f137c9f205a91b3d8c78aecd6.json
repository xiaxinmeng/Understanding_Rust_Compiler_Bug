{"sha": "683aa9290bad382f137c9f205a91b3d8c78aecd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzYWE5MjkwYmFkMzgyZjEzN2M5ZjIwNWE5MWIzZDhjNzhhZWNkNg==", "commit": {"author": {"name": "Sujoy Saraswati", "email": "sujoy.saraswati@hpe.com", "date": "2015-12-20T09:13:51Z"}, "committer": {"name": "Sujoy Saraswati", "email": "ssaraswati@gcc.gnu.org", "date": "2015-12-20T09:13:51Z"}, "message": "This series of patches are for fixing PR61441.\n\nThis series of patches are for fixing PR61441. This patch modifies code to use\nREAL_VALUE_ISSIGNALING_NAN instead of REAL_VALUE_ISNAN to avoid the operatins\nonly for sNaN operands.\n\nBootstrapped & regression-tested on x86_64-linux-gnu.\n\ngcc/\n\t* fold-const.c (const_binop): Use REAL_VALUE_ISSIGNALING_NAN instead\n\tof REAL_VALUE_ISNAN to avoid the operation for sNaN operands.\n\t* simplify-rtx.c (simplify_const_binary_operation): Same.\n\nFrom-SVN: r231857", "tree": {"sha": "62f0bdc62d4027b4d465778be408d23f54f86398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62f0bdc62d4027b4d465778be408d23f54f86398"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/683aa9290bad382f137c9f205a91b3d8c78aecd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683aa9290bad382f137c9f205a91b3d8c78aecd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683aa9290bad382f137c9f205a91b3d8c78aecd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683aa9290bad382f137c9f205a91b3d8c78aecd6/comments", "author": null, "committer": null, "parents": [{"sha": "e4dbb0d449e778bc810d0d627a5aaefd0d7847b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dbb0d449e778bc810d0d627a5aaefd0d7847b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4dbb0d449e778bc810d0d627a5aaefd0d7847b1"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "b7a146961f688c73835d233942fa894b54e0d794", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683aa9290bad382f137c9f205a91b3d8c78aecd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683aa9290bad382f137c9f205a91b3d8c78aecd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=683aa9290bad382f137c9f205a91b3d8c78aecd6", "patch": "@@ -1,3 +1,10 @@\n+2015-12-20  Sujoy Saraswati  <sujoy.saraswati@hpe.com>\n+\n+\tPR tree-optimization/61441\n+\t* fold-const.c (const_binop): Use REAL_VALUE_ISSIGNALING_NAN instead\n+\tof REAL_VALUE_ISNAN to avoid the operation for sNaN operands.\n+\t* simplify-rtx.c (simplify_const_binary_operation): Same.\n+\n 2015-12-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR middle-end/65337"}, {"sha": "fff0285bd13f7e73d66c11ee32b98bb54152e042", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683aa9290bad382f137c9f205a91b3d8c78aecd6/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683aa9290bad382f137c9f205a91b3d8c78aecd6/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=683aa9290bad382f137c9f205a91b3d8c78aecd6", "patch": "@@ -1150,9 +1150,10 @@ const_binop (enum tree_code code, tree arg1, tree arg2)\n       mode = TYPE_MODE (type);\n \n       /* Don't perform operation if we honor signaling NaNs and\n-\t either operand is a NaN.  */\n+\t either operand is a signaling NaN.  */\n       if (HONOR_SNANS (mode)\n-\t  && (REAL_VALUE_ISNAN (d1) || REAL_VALUE_ISNAN (d2)))\n+\t  && (REAL_VALUE_ISSIGNALING_NAN (d1)\n+\t      || REAL_VALUE_ISSIGNALING_NAN (d2)))\n \treturn NULL_TREE;\n \n       /* Don't perform operation if it would raise a division"}, {"sha": "225742ec73e7fcf09afa5f3791b579476249e817", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683aa9290bad382f137c9f205a91b3d8c78aecd6/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683aa9290bad382f137c9f205a91b3d8c78aecd6/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=683aa9290bad382f137c9f205a91b3d8c78aecd6", "patch": "@@ -3892,7 +3892,8 @@ simplify_const_binary_operation (enum rtx_code code, machine_mode mode,\n \t  real_convert (&f1, mode, CONST_DOUBLE_REAL_VALUE (op1));\n \n \t  if (HONOR_SNANS (mode)\n-\t      && (REAL_VALUE_ISNAN (f0) || REAL_VALUE_ISNAN (f1)))\n+\t      && (REAL_VALUE_ISSIGNALING_NAN (f0)\n+\t          || REAL_VALUE_ISSIGNALING_NAN (f1)))\n \t    return 0;\n \n \t  if (code == DIV"}]}