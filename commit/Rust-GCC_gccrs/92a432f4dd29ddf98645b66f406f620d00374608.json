{"sha": "92a432f4dd29ddf98645b66f406f620d00374608", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhNDMyZjRkZDI5ZGRmOTg2NDViNjZmNDA2ZjYyMGQwMDM3NDYwOA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "1999-09-09T14:30:54Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "1999-09-09T14:30:54Z"}, "message": "arm.c: Include \"ggc.h\".\n\n* arm.c: Include \"ggc.h\".\n(arm_add_gc_roots): New function.\n(arm_override_options): Call it.\n(aof_pic_entry): Add a GC root for aof_pic_label when it's allocated.\n\n* arm.md (define_asm_attributes): Add a pool_range attribute.\n\nFrom-SVN: r29235", "tree": {"sha": "d15bbd89abfdeded85fa562bf166306be03f140a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d15bbd89abfdeded85fa562bf166306be03f140a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a432f4dd29ddf98645b66f406f620d00374608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a432f4dd29ddf98645b66f406f620d00374608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a432f4dd29ddf98645b66f406f620d00374608", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a432f4dd29ddf98645b66f406f620d00374608/comments", "author": null, "committer": null, "parents": [{"sha": "6e9d618910d41d1096ff6de4fcfb8545988e60f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9d618910d41d1096ff6de4fcfb8545988e60f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e9d618910d41d1096ff6de4fcfb8545988e60f7"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "f42c44f58a99793dd855181449fd3a3c3dcd9a1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a432f4dd29ddf98645b66f406f620d00374608/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a432f4dd29ddf98645b66f406f620d00374608/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92a432f4dd29ddf98645b66f406f620d00374608", "patch": "@@ -1,3 +1,12 @@\n+Thu Sep  9 15:24:59 BST 1999  Richard Earnshaw <rearnsha@arm.com>\n+\n+\t* arm.c: Include \"ggc.h\".\n+\t(arm_add_gc_roots): New function.\n+\t(arm_override_options): Call it.\n+\t(aof_pic_entry): Add a GC root for aof_pic_label when it's allocated.\n+\n+\t* arm.md (define_asm_attributes): Add a pool_range attribute.\n+\n Thu Sep  9 12:32:57 BST 1999  Nathan Sidwell  <nathan@acm.org>\n \n \t* extend.texi (Volatiles): New node."}, {"sha": "4ea3c058e1ab7d4f01775d8a480e0f6f4790fc4e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a432f4dd29ddf98645b66f406f620d00374608/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a432f4dd29ddf98645b66f406f620d00374608/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=92a432f4dd29ddf98645b66f406f620d00374608", "patch": "@@ -39,6 +39,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"toplev.h\"\n #include \"recog.h\"\n+#include \"ggc.h\"\n \n /* The maximum number of insns skipped which will be conditionalised if\n    possible.  */\n@@ -72,6 +73,7 @@ static void emit_multi_reg_push PROTO ((int));\n static void emit_sfm PROTO ((int, int));\n static enum arm_cond_code get_arm_condition_code PROTO ((rtx));\n static int const_ok_for_op RTX_CODE_PROTO ((HOST_WIDE_INT, Rcode));\n+static void arm_add_gc_roots PROTO ((void));\n \n /* True if we are currently building a constant table. */\n int making_const_table;\n@@ -585,7 +587,20 @@ arm_override_options ()\n     max_insns_skipped = 6;\n   else if (arm_is_strong)\n     max_insns_skipped = 3;\n+\n+  /* Register global variables with the garbage collector.  */\n+  arm_add_gc_roots ();\n+}\n+\n+static void\n+arm_add_gc_roots ()\n+{\n+  ggc_add_rtx_root (&arm_compare_op0, 1);\n+  ggc_add_rtx_root (&arm_compare_op1, 1);\n+  ggc_add_rtx_root (&arm_target_insn, 1); /* Not sure this is really a root */\n+  /* XXX: What about the minipool tables?  */\n }\n+\n \f\n /* Return 1 if it is possible to return using a single instruction */\n \n@@ -6725,6 +6740,10 @@ aof_pic_entry (x)\n \n   if (aof_pic_label == NULL_RTX)\n     {\n+      /* We mark this here and not in arm_add_gc_roots() to avoid\n+\t polluting even more code with ifdefs, and because it never\n+\t contains anything useful until we assign to it here.  */\n+      ggc_add_rtx_root (&aof_pic_label, 1);\n       /* This needs to persist throughout the compilation.  */\n       end_temporary_allocation ();\n       aof_pic_label = gen_rtx_SYMBOL_REF (Pmode, \"x$adcons\");"}, {"sha": "e51f9a5770f4f88c4433533485527f2497df73af", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a432f4dd29ddf98645b66f406f620d00374608/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a432f4dd29ddf98645b66f406f620d00374608/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=92a432f4dd29ddf98645b66f406f620d00374608", "patch": "@@ -62,9 +62,12 @@\n (define_attr \"pool_range\" \"\" (const_int 0))\n \n ; An assembler sequence may clobber the condition codes without us knowing\n+; If such an insn references the pool, then we have no way of knowing how,\n+; so use the most conservative value for pool_range.\n (define_asm_attributes\n  [(set_attr \"conds\" \"clob\")\n-  (set_attr \"length\" \"4\")])\n+  (set_attr \"length\" \"4\")\n+  (set_attr \"pool_range\" \"250\")])\n \n ; TYPE attribute is used to detect floating point instructions which, if\n ; running on a co-processor can run in parallel with other, basic instructions"}]}