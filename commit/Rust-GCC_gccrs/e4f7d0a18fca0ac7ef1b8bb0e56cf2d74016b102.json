{"sha": "e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRmN2QwYTE4ZmNhMGFjN2VmMWI4YmIwZTU2Y2YyZDc0MDE2YjEwMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-10-06T19:46:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-06T19:46:21Z"}, "message": "locale_facets.tcc (__pad<>::_S_pad): Improve performance-wise...\n\n2003-10-06  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/locale_facets.tcc (__pad<>::_S_pad):\n\tImprove performance-wise: avoid one traits::copy, avoid\n\tthe __builtin_alloca, streamline.\n\nFrom-SVN: r72164", "tree": {"sha": "30de72987c15fac125aa6308bc6a00f6bb2d9671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30de72987c15fac125aa6308bc6a00f6bb2d9671"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102/comments", "author": null, "committer": null, "parents": [{"sha": "d54f735472c0ae55953110c0e7fbe98a19a82864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54f735472c0ae55953110c0e7fbe98a19a82864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54f735472c0ae55953110c0e7fbe98a19a82864"}], "stats": {"total": 46, "additions": 18, "deletions": 28}, "files": [{"sha": "3b9fe29d72d918ae7c20bd2e704e675d1f295d6e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102", "patch": "@@ -1,3 +1,9 @@\n+2003-10-06  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/locale_facets.tcc (__pad<>::_S_pad):\n+\tImprove performance-wise: avoid one traits::copy, avoid\n+\tthe __builtin_alloca, streamline.\n+\n 2003-10-05  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/locale_facets.tcc"}, {"sha": "7a4acb5783a137fc7659de645e6e330f5128ec16", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 12, "deletions": 28, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=e4f7d0a18fca0ac7ef1b8bb0e56cf2d74016b102", "patch": "@@ -2207,25 +2207,19 @@ namespace std\n \t\t\t\t   const streamsize __newlen, \n \t\t\t\t   const streamsize __oldlen, const bool __num)\n     {\n-      size_t __plen = static_cast<size_t>(__newlen - __oldlen);\n-      _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n-\t\t\t\t\t\t\t     * __plen));\n-      _Traits::assign(__pads, __plen, __fill); \n-\n-      _CharT* __beg;\n-      _CharT* __end;\n-      size_t __mod = 0;\n-      size_t __beglen; //either __plen or __oldlen\n-      ios_base::fmtflags __adjust = __io.flags() & ios_base::adjustfield;\n+      const size_t __plen = static_cast<size_t>(__newlen - __oldlen);\n+      const ios_base::fmtflags __adjust = __io.flags() & ios_base::adjustfield;\n \n+      // Padding last.\n       if (__adjust == ios_base::left)\n \t{\n-\t  // Padding last.\n-\t  __beg = const_cast<_CharT*>(__olds);\n-\t  __beglen = __oldlen;\n-\t  __end = __pads;\n+\t  _Traits::copy(__news, const_cast<_CharT*>(__olds), __oldlen);\n+\t  _Traits::assign(__news + __oldlen, __plen, __fill);\n+\t  return;\n \t}\n-      else if (__adjust == ios_base::internal && __num)\n+\n+      size_t __mod = 0;\n+      if (__adjust == ios_base::internal && __num)\n \t{\n \t  // Pad after the sign, if there is one.\n \t  // Pad after 0[xX], if there is one.\n@@ -2254,20 +2248,10 @@ namespace std\n \t      ++__news;\n \t    }\n \t  // else Padding first.\n-\t  \n-\t  __beg = __pads;\n-\t  __beglen = __plen;\n-\t  __end = const_cast<_CharT*>(__olds + __mod);\n-\t}\n-      else\n-\t{\n-\t  // Padding first.\n-\t  __beg = __pads;\n-\t  __beglen = __plen;\n-\t  __end = const_cast<_CharT*>(__olds);\n \t}\n-      _Traits::copy(__news, __beg, __beglen);\n-      _Traits::copy(__news + __beglen, __end, __newlen - __beglen - __mod);\n+      _Traits::assign(__news, __plen, __fill);\n+      _Traits::copy(__news + __plen, const_cast<_CharT*>(__olds + __mod),\n+\t\t    __oldlen - __mod);\n     }\n \n   template<typename _CharT>"}]}