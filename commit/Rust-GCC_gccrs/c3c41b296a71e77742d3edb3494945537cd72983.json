{"sha": "c3c41b296a71e77742d3edb3494945537cd72983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjNDFiMjk2YTcxZTc3NzQyZDNlZGIzNDk0OTQ1NTM3Y2Q3Mjk4Mw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-04T08:05:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:05:50Z"}, "message": "[Ada] Unnesting: handle conditional expressions\n\n2019-07-04  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb: Handle conditional expressions.\n\nFrom-SVN: r273053", "tree": {"sha": "2c776f2e7d8c00bce055d8974e7c9a27a64ec8a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c776f2e7d8c00bce055d8974e7c9a27a64ec8a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c41b296a71e77742d3edb3494945537cd72983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c41b296a71e77742d3edb3494945537cd72983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c41b296a71e77742d3edb3494945537cd72983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c41b296a71e77742d3edb3494945537cd72983/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d53efa6921534027dbe5d408ac274736dc43d9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d53efa6921534027dbe5d408ac274736dc43d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d53efa6921534027dbe5d408ac274736dc43d9c"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c60ab6dec793f079bad0c5add54db0a4781e50af", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c41b296a71e77742d3edb3494945537cd72983/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c41b296a71e77742d3edb3494945537cd72983/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c3c41b296a71e77742d3edb3494945537cd72983", "patch": "@@ -1,3 +1,7 @@\n+2019-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb: Handle conditional expressions.\n+\n 2019-07-04  Yannick Moy  <moy@adacore.com>\n \n \t* sem_spark.adb (Check_Package_Spec, Check_Package_Body): Only"}, {"sha": "6717610bfbe12d8344f5807b556a4db25aa0c3c6", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c41b296a71e77742d3edb3494945537cd72983/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c41b296a71e77742d3edb3494945537cd72983/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=c3c41b296a71e77742d3edb3494945537cd72983", "patch": "@@ -598,6 +598,33 @@ package body Exp_Unst is\n                   then\n                      Note_Uplevel_Bound (Prefix (N), Ref);\n \n+                  --  Conditional expressions.\n+\n+                  elsif Nkind (N) = N_If_Expression then\n+                     declare\n+                        Expr : Node_Id;\n+\n+                     begin\n+                        Expr := First (Expressions (N));\n+                        while Present (Expr) loop\n+                           Note_Uplevel_Bound (Expr, Ref);\n+                           Next (Expr);\n+                        end loop;\n+                     end;\n+\n+                  elsif Nkind (N) = N_Case_Expression then\n+                     declare\n+                        Alternative : Node_Id;\n+\n+                     begin\n+                        Note_Uplevel_Bound (Expression (N), Ref);\n+\n+                        Alternative := First (Alternatives (N));\n+                        while Present (Alternative) loop\n+                           Note_Uplevel_Bound (Expression (Alternative), Ref);\n+                        end loop;\n+                     end;\n+\n                   --  Conversion case\n \n                   elsif Nkind (N) = N_Type_Conversion then"}]}