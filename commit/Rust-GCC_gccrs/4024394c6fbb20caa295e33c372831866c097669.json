{"sha": "4024394c6fbb20caa295e33c372831866c097669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyNDM5NGM2ZmJiMjBjYWEyOTVlMzNjMzcyODMxODY2YzA5NzY2OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-09-28T21:21:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-09-28T21:21:34Z"}, "message": "(find_splittable_givs): Pass mem_mode not mode to memory_address_p.\n\nFrom-SVN: r2276", "tree": {"sha": "1b90199e8aa4adc4d3b09826983196b006ec1ab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b90199e8aa4adc4d3b09826983196b006ec1ab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4024394c6fbb20caa295e33c372831866c097669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4024394c6fbb20caa295e33c372831866c097669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4024394c6fbb20caa295e33c372831866c097669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4024394c6fbb20caa295e33c372831866c097669/comments", "author": null, "committer": null, "parents": [{"sha": "57467646666ba0d8790a9fdc3e35390b5bf1dade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57467646666ba0d8790a9fdc3e35390b5bf1dade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57467646666ba0d8790a9fdc3e35390b5bf1dade"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ae2f08f45fde2786f64d97f8ff77f7e47672e5c3", "filename": "gcc/unroll.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4024394c6fbb20caa295e33c372831866c097669/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4024394c6fbb20caa295e33c372831866c097669/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=4024394c6fbb20caa295e33c372831866c097669", "patch": "@@ -2536,8 +2536,8 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \t\t\t Try to validate both the first and the last\n \t\t\t address resulting from loop unrolling, if\n \t\t\t one fails, then can't do const elim here.  */\n-\t\t      if (memory_address_p (v->mode, v->dest_reg)\n-\t\t\t  && memory_address_p (v->mode,\n+\t\t      if (memory_address_p (v->mem_mode, v->dest_reg)\n+\t\t\t  && memory_address_p (v->mem_mode,\n \t\t\t\t       plus_constant (v->dest_reg,\n \t\t\t\t\t\t      INTVAL (giv_inc)\n \t\t\t\t\t\t      * (unroll_number - 1))))\n@@ -2563,8 +2563,8 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \t\t     now, and fail completely if either the first or the last\n \t\t     unrolled copy of the address is not a valid address.  */\n \t\t  if (v->dest_reg == tem\n-\t\t      && (! memory_address_p (v->mode, v->dest_reg)\n-\t\t\t  || ! memory_address_p (v->mode,\n+\t\t      && (! memory_address_p (v->mem_mode, v->dest_reg)\n+\t\t\t  || ! memory_address_p (v->mem_mode,\n \t\t\t\t plus_constant (v->dest_reg,\n \t\t\t\t\t\tINTVAL (giv_inc)\n \t\t\t\t\t\t* (unroll_number -1)))))\n@@ -2600,8 +2600,8 @@ find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,\n \t\t  \n \t\t  /* Check the resulting address for validity, and fail\n \t\t     if the resulting address would be illegal.  */\n-\t\t  if (! memory_address_p (v->mode, v->dest_reg)\n-\t\t      || ! memory_address_p (v->mode,\n+\t\t  if (! memory_address_p (v->mem_mode, v->dest_reg)\n+\t\t      || ! memory_address_p (v->mem_mode,\n \t\t\t\t     plus_constant (v->dest_reg,\n \t\t\t\t\t\t    INTVAL (giv_inc) *\n \t\t\t\t\t\t    (unroll_number -1))))"}]}