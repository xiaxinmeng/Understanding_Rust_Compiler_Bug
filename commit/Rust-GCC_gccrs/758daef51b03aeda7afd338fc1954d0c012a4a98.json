{"sha": "758daef51b03aeda7afd338fc1954d0c012a4a98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU4ZGFlZjUxYjAzYWVkYTdhZmQzMzhmYzE5NTRkMGMwMTJhNGE5OA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-11-16T20:50:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:49Z"}, "message": "[Ada] Refine error messages on illegal Refined_State in SPARK\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Refined_State_In_Decl_Part): Refine the\n\terror message for missing Part_Of on constituent. Avoid\n\tcascading error.", "tree": {"sha": "f769c5c746c5e6a407553a320758a0439748a64a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f769c5c746c5e6a407553a320758a0439748a64a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/758daef51b03aeda7afd338fc1954d0c012a4a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758daef51b03aeda7afd338fc1954d0c012a4a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/758daef51b03aeda7afd338fc1954d0c012a4a98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758daef51b03aeda7afd338fc1954d0c012a4a98/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a1a3fc67f4ce399992ff83d97f76c2682dcb38f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1a3fc67f4ce399992ff83d97f76c2682dcb38f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1a3fc67f4ce399992ff83d97f76c2682dcb38f"}], "stats": {"total": 99, "additions": 76, "deletions": 23}, "files": [{"sha": "8c0ce796db4f63a760cb0253f335d06870191bd3", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 76, "deletions": 23, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/758daef51b03aeda7afd338fc1954d0c012a4a98/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/758daef51b03aeda7afd338fc1954d0c012a4a98/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=758daef51b03aeda7afd338fc1954d0c012a4a98", "patch": "@@ -28493,35 +28493,69 @@ package body Sem_Prag is\n                         Constit, Encapsulating_State (Constit_Id));\n                   end if;\n \n-               --  The only other source of legal constituents is the body\n-               --  state space of the related package.\n-\n                else\n-                  if Present (Body_States) then\n-                     State_Elmt := First_Elmt (Body_States);\n-                     while Present (State_Elmt) loop\n+                  declare\n+                     Pack_Id   : Entity_Id;\n+                     Placement : State_Space_Kind;\n+                  begin\n+                     --  Find where the constituent lives with respect to the\n+                     --  state space.\n \n-                        --  Consume a valid constituent to signal that it has\n-                        --  been encountered.\n+                     Find_Placement_In_State_Space\n+                       (Item_Id   => Constit_Id,\n+                        Placement => Placement,\n+                        Pack_Id   => Pack_Id);\n \n-                        if Node (State_Elmt) = Constit_Id then\n-                           Remove_Elmt (Body_States, State_Elmt);\n-                           Collect_Constituent;\n-                           return;\n-                        end if;\n+                     --  The constituent is part of the visible state of a\n+                     --  private child package, but lacks a Part_Of indicator.\n \n-                        Next_Elmt (State_Elmt);\n-                     end loop;\n-                  end if;\n+                     if Placement = Visible_State_Space\n+                       and then Is_Child_Unit (Pack_Id)\n+                       and then not Is_Generic_Unit (Pack_Id)\n+                       and then Is_Private_Descendant (Pack_Id)\n+                     then\n+                        Error_Msg_Name_1 := Chars (State_Id);\n+                        SPARK_Msg_NE\n+                          (\"& cannot act as constituent of state %\",\n+                           Constit, Constit_Id);\n+                        Error_Msg_Sloc :=\n+                          Sloc (Enclosing_Declaration (Constit_Id));\n+                        SPARK_Msg_NE\n+                          (\"\\missing Part_Of indicator # should specify \"\n+                           & \"encapsulator &\",\n+                           Constit, State_Id);\n \n-                  --  At this point it is known that the constituent is not\n-                  --  part of the package hidden state and cannot be used in\n-                  --  a refinement (SPARK RM 7.2.2(9)).\n+                     --  The only other source of legal constituents is the\n+                     --  body state space of the related package.\n \n-                  Error_Msg_Name_1 := Chars (Spec_Id);\n-                  SPARK_Msg_NE\n-                    (\"cannot use & in refinement, constituent is not a hidden \"\n-                     & \"state of package %\", Constit, Constit_Id);\n+                     else\n+                        if Present (Body_States) then\n+                           State_Elmt := First_Elmt (Body_States);\n+                           while Present (State_Elmt) loop\n+\n+                              --  Consume a valid constituent to signal that it\n+                              --  has been encountered.\n+\n+                              if Node (State_Elmt) = Constit_Id then\n+                                 Remove_Elmt (Body_States, State_Elmt);\n+                                 Collect_Constituent;\n+                                 return;\n+                              end if;\n+\n+                              Next_Elmt (State_Elmt);\n+                           end loop;\n+                        end if;\n+\n+                        --  At this point it is known that the constituent is\n+                        --  not part of the package hidden state and cannot be\n+                        --  used in a refinement (SPARK RM 7.2.2(9)).\n+\n+                        Error_Msg_Name_1 := Chars (Spec_Id);\n+                        SPARK_Msg_NE\n+                          (\"cannot use & in refinement, constituent is not a \"\n+                           & \"hidden state of package %\", Constit, Constit_Id);\n+                     end if;\n+                  end;\n                end if;\n             end Match_Constituent;\n \n@@ -28943,6 +28977,25 @@ package body Sem_Prag is\n          --  in the refinement clause.\n \n          Report_Unused_Constituents (Part_Of_Constits);\n+\n+         --  Avoid a cascading error reporting a missing refinement by adding\n+         --  State_Id as dummy constituent of itself.\n+\n+         if Non_Null_Seen\n+           and then not Has_Non_Null_Refinement (State_Id)\n+         then\n+            declare\n+               Constits : Elist_Id := Refinement_Constituents (State_Id);\n+            begin\n+               if No (Constits) then\n+                  Constits := New_Elmt_List;\n+                  Set_Refinement_Constituents (State_Id, Constits);\n+               end if;\n+\n+               Append_Elmt (State_Id, Constits);\n+               Set_Encapsulating_State (State_Id, State_Id);\n+            end;\n+         end if;\n       end Analyze_Refinement_Clause;\n \n       -----------------------------"}]}