{"sha": "600845521e68b5e0da136636ecf174eee8e5ee17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwODQ1NTIxZTY4YjVlMGRhMTM2NjM2ZWNmMTc0ZWVlOGU1ZWUxNw==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2018-12-29T19:00:48Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2018-12-29T19:00:48Z"}, "message": "msp430.c (msp430_attr): Warn when the critical and interrupt function attributes are used together.\n\n2018-12-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\tgcc/ChangeLog:\n\n\t* config/msp430/msp430.c (msp430_attr): Warn when the critical and\n\tinterrupt function attributes are used together.\n\t* gcc/doc/extend.texi: Update documentation on the critical attribute.\n\n\tgcc/testsuite/ChangeLog:\n\n\t* gcc.target/msp430/critical-interrupt.c: New test.\n\nFrom-SVN: r267467", "tree": {"sha": "4ef6cf8d348615502582a0545e6f652557e462c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ef6cf8d348615502582a0545e6f652557e462c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/600845521e68b5e0da136636ecf174eee8e5ee17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600845521e68b5e0da136636ecf174eee8e5ee17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600845521e68b5e0da136636ecf174eee8e5ee17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600845521e68b5e0da136636ecf174eee8e5ee17/comments", "author": null, "committer": null, "parents": [{"sha": "74ee24e23e96dde8a338a140c3cadd0bb7715e61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ee24e23e96dde8a338a140c3cadd0bb7715e61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ee24e23e96dde8a338a140c3cadd0bb7715e61"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "bb02095e42f9d488045def9fcf7da37488921080", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=600845521e68b5e0da136636ecf174eee8e5ee17", "patch": "@@ -1,7 +1,13 @@\n+2018-12-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.c (msp430_attr): Warn when the critical and\n+\tinterrupt function attributes are used together.\n+\t* gcc/doc/extend.texi: Update documentation on the critical attribute.\n+\n 2018-12-29  John David Anglin  <danglin@gcc.gnu.org>\n \n-        * config.gcc (hppa*64*-*-linux*): Add pa/t-pa to tmake_file.  Define\n-        d_target_objs.\n+\t* config.gcc (hppa*64*-*-linux*): Add pa/t-pa to tmake_file.  Define\n+\td_target_objs.\n \t(hppa*-*-openbsd*): Likewise.\n \t(hppa[12]*-*-hpux10*): Likewise.\n \t(hppa*64*-*-hpux11*): Likewise."}, {"sha": "21b5819380f9d73dcdc82929cef456b5b3dfd9b6", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=600845521e68b5e0da136636ecf174eee8e5ee17", "patch": "@@ -1946,6 +1946,13 @@ msp430_attr (tree * node,\n \t  TREE_USED (* node) = 1;\n \t  DECL_PRESERVE_P (* node) = 1;\n \t}\n+      if (is_critical_func (* node))\n+\t{\n+\t  warning (OPT_Wattributes,\n+\t\t   \"critical attribute has no effect on interrupt functions\");\n+\t  DECL_ATTRIBUTES (*node) = remove_attribute (ATTR_CRIT,\n+\t\t\t\t\t\t      DECL_ATTRIBUTES (* node));\n+\t}\n     }\n   else if (TREE_NAME_EQ (name, ATTR_REENT))\n     {\n@@ -1960,6 +1967,8 @@ msp430_attr (tree * node,\n \tmessage = \"naked functions cannot be critical\";\n       else if (is_reentrant_func (* node))\n \tmessage = \"reentrant functions cannot be critical\";\n+      else if (is_interrupt_func ( *node))\n+\tmessage = \"critical attribute has no effect on interrupt functions\";\n     }\n   else if (TREE_NAME_EQ (name, ATTR_NAKED))\n     {"}, {"sha": "27724e400d2c4f9dddcd4d9916a314831647a8e5", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=600845521e68b5e0da136636ecf174eee8e5ee17", "patch": "@@ -4978,8 +4978,12 @@ These function attributes are supported by the MSP430 back end:\n @cindex @code{critical} function attribute, MSP430\n Critical functions disable interrupts upon entry and restore the\n previous interrupt state upon exit.  Critical functions cannot also\n-have the @code{naked} or @code{reentrant} attributes.  They can have\n-the @code{interrupt} attribute.\n+have the @code{naked}, @code{reentrant} or @code{interrupt} attributes.\n+\n+The MSP430 hardware ensures that interrupts are disabled on entry to\n+@code{interrupt} functions, and restores the previous interrupt state\n+on exit. The @code{critical} attribute is therefore redundant on\n+@code{interrupt} functions.\n \n @item interrupt\n @cindex @code{interrupt} function attribute, MSP430"}, {"sha": "cdfc940b45f7ab47a33a1f073473b2ee3a4096c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=600845521e68b5e0da136636ecf174eee8e5ee17", "patch": "@@ -1,3 +1,7 @@\n+2018-12-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/critical-interrupt.c: New test.\n+\n 2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88342"}, {"sha": "3ef7a12a1a42d15d3d12169e2f40cbc95dcaf815", "filename": "gcc/testsuite/gcc.target/msp430/critical-interrupt.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fcritical-interrupt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600845521e68b5e0da136636ecf174eee8e5ee17/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fcritical-interrupt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fcritical-interrupt.c?ref=600845521e68b5e0da136636ecf174eee8e5ee17", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-final { scan-assembler-not \"attributes.*critical\" } } */\n+\n+void __attribute__((interrupt,critical))\n+fn1 (void)\n+{ /* { dg-warning \"critical attribute has no effect on interrupt functions\" } */\n+}\n+\n+void __attribute__((critical,interrupt))\n+fn2 (void)\n+{ /* { dg-warning \"critical attribute has no effect on interrupt functions\" } */\n+}"}]}