{"sha": "835c9db01f44e7346c5764f3c7abc654e9faa2e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1YzlkYjAxZjQ0ZTczNDZjNTc2NGYzYzdhYmM2NTRlOWZhYTJlNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-11T14:08:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-11T14:08:30Z"}, "message": "tree-flow.h (referenced_var_check_and_insert): Remove.\n\n2012-05-11  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (referenced_var_check_and_insert): Remove.\n\t(find_new_referenced_vars): Likewise.\n\t* tree-dfa.c (referenced_var_check_and_insert): Make static.\n\t(find_new_referenced_vars_1, find_new_referenced_vars): Remove.\n\t* tree-inline.c (copy_bb): Use find_referenced_vars_in\n\tinstead of find_new_referenced_vars.\n\t* gimple-fold.c (gimplify_and_update_call_from_tree): Likewise.\n\nFrom-SVN: r187408", "tree": {"sha": "539ec93dd09e2b8bae3be79be3efdd6dbaa6de1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539ec93dd09e2b8bae3be79be3efdd6dbaa6de1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/835c9db01f44e7346c5764f3c7abc654e9faa2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835c9db01f44e7346c5764f3c7abc654e9faa2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/835c9db01f44e7346c5764f3c7abc654e9faa2e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835c9db01f44e7346c5764f3c7abc654e9faa2e7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6083578b4123a41fc9001dbb27ea568c3d442ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6083578b4123a41fc9001dbb27ea568c3d442ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6083578b4123a41fc9001dbb27ea568c3d442ad4"}], "stats": {"total": 54, "additions": 14, "deletions": 40}, "files": [{"sha": "7da054fad53fa7f9058970949fb71913e53e091c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=835c9db01f44e7346c5764f3c7abc654e9faa2e7", "patch": "@@ -1,3 +1,13 @@\n+2012-05-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (referenced_var_check_and_insert): Remove.\n+\t(find_new_referenced_vars): Likewise.\n+\t* tree-dfa.c (referenced_var_check_and_insert): Make static.\n+\t(find_new_referenced_vars_1, find_new_referenced_vars): Remove.\n+\t* tree-inline.c (copy_bb): Use find_referenced_vars_in\n+\tinstead of find_new_referenced_vars.\n+\t* gimple-fold.c (gimplify_and_update_call_from_tree): Likewise.\n+\n 2012-05-11  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-pass.h (pass_rest_of_compilation,"}, {"sha": "ee8b4d14d7c212802e009492df88fbf08deca343", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=835c9db01f44e7346c5764f3c7abc654e9faa2e7", "patch": "@@ -625,7 +625,7 @@ gimplify_and_update_call_from_tree (gimple_stmt_iterator *si_p, tree expr)\n       new_stmt = gsi_stmt (i);\n       /* The replacement can expose previously unreferenced variables.  */\n       if (gimple_in_ssa_p (cfun))\n-\tfind_new_referenced_vars (new_stmt);\n+\tfind_referenced_vars_in (new_stmt);\n       /* If the new statement possibly has a VUSE, update it with exact SSA\n \t name we know will reach this one.  */\n       if (gimple_has_mem_ops (new_stmt))"}, {"sha": "3b60ba12a6a11c8e2b37fb6d7d7593e3b4ce2c97", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 2, "deletions": 36, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=835c9db01f44e7346c5764f3c7abc654e9faa2e7", "patch": "@@ -462,9 +462,7 @@ find_vars_r (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n   return NULL_TREE;\n }\n \n-/* Find referenced variables in STMT.  In contrast with\n-   find_new_referenced_vars, this function will not mark newly found\n-   variables for renaming.  */\n+/* Find referenced variables in STMT.  */\n \n void\n find_referenced_vars_in (gimple stmt)\n@@ -505,7 +503,7 @@ referenced_var_lookup (struct function *fn, unsigned int uid)\n /* Check if TO is in the referenced_vars hash table and insert it if not.\n    Return true if it required insertion.  */\n \n-bool\n+static bool\n referenced_var_check_and_insert (tree to)\n {\n   tree h, *loc;\n@@ -667,38 +665,6 @@ mark_symbols_for_renaming (gimple stmt)\n }\n \n \n-/* Find all variables within the gimplified statement that were not\n-   previously visible to the function and add them to the referenced\n-   variables list.  */\n-\n-static tree\n-find_new_referenced_vars_1 (tree *tp, int *walk_subtrees,\n-\t\t\t    void *data ATTRIBUTE_UNUSED)\n-{\n-  tree t = *tp;\n-\n-  if (TREE_CODE (t) == VAR_DECL && !var_ann (t))\n-    {\n-      add_referenced_var (t);\n-      mark_sym_for_renaming (t);\n-    }\n-\n-  if (IS_TYPE_OR_DECL_P (t))\n-    *walk_subtrees = 0;\n-\n-  return NULL;\n-}\n-\n-\n-/* Find any new referenced variables in STMT.  */\n-\n-void\n-find_new_referenced_vars (gimple stmt)\n-{\n-  walk_gimple_op (stmt, find_new_referenced_vars_1, NULL);\n-}\n-\n-\n /* If EXP is a handled component reference for a structure, return the\n    base variable.  The access range is delimited by bit positions *POFFSET and\n    *POFFSET + *PMAX_SIZE.  The access size is *PSIZE bits.  If either"}, {"sha": "2846b67a01584d8c58fb7ecf913a8c7e18d5a1a9", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=835c9db01f44e7346c5764f3c7abc654e9faa2e7", "patch": "@@ -332,7 +332,6 @@ typedef struct\n        (VAR) = next_referenced_var (&(ITER)))\n \n extern tree referenced_var_lookup (struct function *, unsigned int);\n-extern bool referenced_var_check_and_insert (tree);\n #define num_referenced_vars htab_elements (gimple_referenced_vars (cfun))\n \n #define num_ssa_names (VEC_length (tree, cfun->gimple_df->ssa_names))\n@@ -496,7 +495,6 @@ extern tree get_virtual_var (tree);\n extern bool add_referenced_var (tree);\n extern void remove_referenced_var (tree);\n extern void mark_symbols_for_renaming (gimple);\n-extern void find_new_referenced_vars (gimple);\n extern tree make_rename_temp (tree, const char *);\n extern void set_default_def (tree, tree);\n extern tree gimple_default_def (struct function *, tree);"}, {"sha": "c9aaeeeda3afb611fc353a974c4daf2af68c8394", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c9db01f44e7346c5764f3c7abc654e9faa2e7/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=835c9db01f44e7346c5764f3c7abc654e9faa2e7", "patch": "@@ -1794,7 +1794,7 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t      ssa_op_iter i;\n \t      tree def;\n \n-\t      find_new_referenced_vars (gsi_stmt (copy_gsi));\n+\t      find_referenced_vars_in (gsi_stmt (copy_gsi));\n \t      FOR_EACH_SSA_TREE_OPERAND (def, stmt, i, SSA_OP_DEF)\n \t\tif (TREE_CODE (def) == SSA_NAME)\n \t\t  SSA_NAME_DEF_STMT (def) = stmt;"}]}