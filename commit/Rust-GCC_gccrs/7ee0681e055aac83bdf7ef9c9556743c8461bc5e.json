{"sha": "7ee0681e055aac83bdf7ef9c9556743c8461bc5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlMDY4MWUwNTVhYWM4M2JkZjdlZjljOTU1Njc0M2M4NDYxYmM1ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-23T15:58:23Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-23T15:58:23Z"}, "message": "Release ipa-prop's agg.items and make alocation more careful\n\nThis saves about 316MB WPAing Firefox\n\n\t* ipa-prop.c (build_agg_jump_func_from_list,\n\tipa_read_jump_function): Reserve agg.items precisely.\n\t* ipa-prop.h (ipa_node_params::~ipa_node_params): Release descriptors\n\t(ipa_edge_args::~ipa_edge_args): Release agg.items.", "tree": {"sha": "5b425dc2d93dd95b27fac2796216d7ec58df112f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b425dc2d93dd95b27fac2796216d7ec58df112f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ee0681e055aac83bdf7ef9c9556743c8461bc5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee0681e055aac83bdf7ef9c9556743c8461bc5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee0681e055aac83bdf7ef9c9556743c8461bc5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee0681e055aac83bdf7ef9c9556743c8461bc5e/comments", "author": null, "committer": null, "parents": [{"sha": "54af3008b6f05985d378a48d337d9c70c708ecff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54af3008b6f05985d378a48d337d9c70c708ecff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54af3008b6f05985d378a48d337d9c70c708ecff"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "904a8f7d18b8654ded562ecfdd3226c52cc169b2", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee0681e055aac83bdf7ef9c9556743c8461bc5e/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee0681e055aac83bdf7ef9c9556743c8461bc5e/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=7ee0681e055aac83bdf7ef9c9556743c8461bc5e", "patch": "@@ -1682,7 +1682,7 @@ build_agg_jump_func_from_list (struct ipa_known_agg_contents_list *list,\n \t\t\t       int value_count, HOST_WIDE_INT arg_offset,\n \t\t\t       struct ipa_jump_func *jfunc)\n {\n-  vec_alloc (jfunc->agg.items, value_count);\n+  vec_safe_reserve (jfunc->agg.items, value_count, true);\n   for (; list; list = list->next)\n     {\n       struct ipa_agg_jf_item item;\n@@ -4745,7 +4745,10 @@ ipa_read_jump_function (class lto_input_block *ib,\n \n   count = streamer_read_uhwi (ib);\n   if (prevails)\n-    vec_alloc (jump_func->agg.items, count);\n+    {\n+      jump_func->agg.items = NULL;\n+      vec_safe_reserve (jump_func->agg.items, count, true);\n+    }\n   if (count)\n     {\n       struct bitpack_d bp = streamer_read_bitpack (ib);"}, {"sha": "56e80559cf4b7bc56b217bc56fdf59d1214df7f0", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee0681e055aac83bdf7ef9c9556743c8461bc5e/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee0681e055aac83bdf7ef9c9556743c8461bc5e/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=7ee0681e055aac83bdf7ef9c9556743c8461bc5e", "patch": "@@ -620,6 +620,7 @@ inline\n ipa_node_params::~ipa_node_params ()\n {\n   free (lattices);\n+  vec_free (descriptors);\n   known_csts.release ();\n   known_contexts.release ();\n }\n@@ -895,6 +896,10 @@ class GTY((for_user)) ipa_edge_args\n   /* Destructor.  */\n   ~ipa_edge_args ()\n     {\n+      unsigned int i;\n+      ipa_jump_func *jf;\n+      FOR_EACH_VEC_SAFE_ELT (jump_functions, i, jf)\n+\tvec_free (jf->agg.items);\n       vec_free (jump_functions);\n       vec_free (polymorphic_call_contexts);\n     }"}]}