{"sha": "85d4cbb878c645fbb76838f228ac24cd4c898212", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkNGNiYjg3OGM2NDVmYmI3NjgzOGYyMjhhYzI0Y2Q0Yzg5ODIxMg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2013-07-11T16:36:09Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2013-07-11T16:36:09Z"}, "message": "rs6000.md (\"\"*tls_gd_low<TLSmode:tls_abi_suffix>\"): Require GOT register as additional operand in UNSPEC.\n\n\t* config/rs6000/rs6000.md (\"\"*tls_gd_low<TLSmode:tls_abi_suffix>\"):\n\tRequire GOT register as additional operand in UNSPEC.\n\t(\"*tls_ld_low<TLSmode:tls_abi_suffix>\"): Likewise.\n\t(\"*tls_got_dtprel_low<TLSmode:tls_abi_suffix>\"): Likewise.\n\t(\"*tls_got_tprel_low<TLSmode:tls_abi_suffix>\"): Likewise.\n\t(\"*tls_gd<TLSmode:tls_abi_suffix>\"): Update splitter.\n\t(\"*tls_ld<TLSmode:tls_abi_suffix>\"): Likewise.\n\t(\"tls_got_dtprel_<TLSmode:tls_abi_suffix>\"): Likewise.\n\t(\"tls_got_tprel_<TLSmode:tls_abi_suffix>\"): Likewise.\n\nFrom-SVN: r200904", "tree": {"sha": "cf53447b3b6eb4ced13eac778f2402a6a545f762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf53447b3b6eb4ced13eac778f2402a6a545f762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d4cbb878c645fbb76838f228ac24cd4c898212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d4cbb878c645fbb76838f228ac24cd4c898212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d4cbb878c645fbb76838f228ac24cd4c898212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d4cbb878c645fbb76838f228ac24cd4c898212/comments", "author": null, "committer": null, "parents": [{"sha": "52b3f9e2edf4cd50bdebb7273f661dd465b84523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b3f9e2edf4cd50bdebb7273f661dd465b84523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b3f9e2edf4cd50bdebb7273f661dd465b84523"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "30f63c4b4da677937e96699b39869a1bf531b8ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d4cbb878c645fbb76838f228ac24cd4c898212/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d4cbb878c645fbb76838f228ac24cd4c898212/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85d4cbb878c645fbb76838f228ac24cd4c898212", "patch": "@@ -1,3 +1,15 @@\n+2013-07-11  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (\"\"*tls_gd_low<TLSmode:tls_abi_suffix>\"):\n+\tRequire GOT register as additional operand in UNSPEC.\n+\t(\"*tls_ld_low<TLSmode:tls_abi_suffix>\"): Likewise.\n+\t(\"*tls_got_dtprel_low<TLSmode:tls_abi_suffix>\"): Likewise.\n+\t(\"*tls_got_tprel_low<TLSmode:tls_abi_suffix>\"): Likewise.\n+\t(\"*tls_gd<TLSmode:tls_abi_suffix>\"): Update splitter.\n+\t(\"*tls_ld<TLSmode:tls_abi_suffix>\"): Likewise.\n+\t(\"tls_got_dtprel_<TLSmode:tls_abi_suffix>\"): Likewise.\n+\t(\"tls_got_tprel_<TLSmode:tls_abi_suffix>\"): Likewise.\n+\n 2013-07-11  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/57631"}, {"sha": "731cfae930aa05fdbd4487e76f080b7c7adf775c", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d4cbb878c645fbb76838f228ac24cd4c898212/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d4cbb878c645fbb76838f228ac24cd4c898212/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=85d4cbb878c645fbb76838f228ac24cd4c898212", "patch": "@@ -10989,7 +10989,7 @@\n \t    (unspec:TLSmode [(match_dup 1) (match_dup 2)] UNSPEC_TLSGD)))\n    (set (match_dup 0)\n    \t(lo_sum:TLSmode (match_dup 3)\n-\t    (unspec:TLSmode [(match_dup 2)] UNSPEC_TLSGD)))]\n+\t    (unspec:TLSmode [(match_dup 1) (match_dup 2)] UNSPEC_TLSGD)))]\n   \"\n {\n   operands[3] = gen_reg_rtx (TARGET_64BIT ? DImode : SImode);\n@@ -11012,7 +11012,8 @@\n (define_insn \"*tls_gd_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=b\")\n      (lo_sum:TLSmode (match_operand:TLSmode 1 \"gpc_reg_operand\" \"b\")\n-       (unspec:TLSmode [(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n+       (unspec:TLSmode [(match_operand:TLSmode 3 \"gpc_reg_operand\" \"b\")\n+\t\t\t(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t       UNSPEC_TLSGD)))]\n   \"HAVE_AS_TLS && TARGET_TLS_MARKERS && TARGET_CMODEL != CMODEL_SMALL\"\n   \"addi %0,%1,%2@got@tlsgd@l\"\n@@ -11124,7 +11125,7 @@\n \t    (unspec:TLSmode [(const_int 0) (match_dup 1)] UNSPEC_TLSLD)))\n    (set (match_dup 0)\n    \t(lo_sum:TLSmode (match_dup 2)\n-\t    (unspec:TLSmode [(const_int 0)] UNSPEC_TLSLD)))]\n+\t    (unspec:TLSmode [(const_int 0) (match_dup 1)] UNSPEC_TLSLD)))]\n   \"\n {\n   operands[2] = gen_reg_rtx (TARGET_64BIT ? DImode : SImode);\n@@ -11147,7 +11148,9 @@\n (define_insn \"*tls_ld_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=b\")\n      (lo_sum:TLSmode (match_operand:TLSmode 1 \"gpc_reg_operand\" \"b\")\n-       (unspec:TLSmode [(const_int 0)] UNSPEC_TLSLD)))]\n+       (unspec:TLSmode [(const_int 0)\n+                        (match_operand:TLSmode 2 \"gpc_reg_operand\" \"b\")]\n+                       UNSPEC_TLSLD)))]\n   \"HAVE_AS_TLS && TARGET_TLS_MARKERS && TARGET_CMODEL != CMODEL_SMALL\"\n   \"addi %0,%1,%&@got@tlsld@l\"\n   [(set_attr \"length\" \"4\")])\n@@ -11219,7 +11222,7 @@\n \t    (unspec:TLSmode [(match_dup 1) (match_dup 2)] UNSPEC_TLSGOTDTPREL)))\n    (set (match_dup 0)\n \t(lo_sum:TLSmode (match_dup 3)\n-\t    (unspec:TLSmode [(match_dup 2)] UNSPEC_TLSGOTDTPREL)))]\n+\t    (unspec:TLSmode [(match_dup 1) (match_dup 2)] UNSPEC_TLSGOTDTPREL)))]\n   \"\n {\n   operands[3] = gen_reg_rtx (TARGET_64BIT ? DImode : SImode);\n@@ -11242,7 +11245,8 @@\n (define_insn \"*tls_got_dtprel_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=r\")\n      (lo_sum:TLSmode (match_operand:TLSmode 1 \"gpc_reg_operand\" \"b\")\n-\t (unspec:TLSmode [(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n+\t (unspec:TLSmode [(match_operand:TLSmode 3 \"gpc_reg_operand\" \"b\")\n+\t\t\t  (match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t\t UNSPEC_TLSGOTDTPREL)))]\n   \"HAVE_AS_TLS && TARGET_CMODEL != CMODEL_SMALL\"\n   \"l<TLSmode:tls_insn_suffix> %0,%2@got@dtprel@l(%1)\"\n@@ -11288,7 +11292,7 @@\n \t    (unspec:TLSmode [(match_dup 1) (match_dup 2)] UNSPEC_TLSGOTTPREL)))\n    (set (match_dup 0)\n \t(lo_sum:TLSmode (match_dup 3)\n-\t    (unspec:TLSmode [(match_dup 2)] UNSPEC_TLSGOTTPREL)))]\n+\t    (unspec:TLSmode [(match_dup 1) (match_dup 2)] UNSPEC_TLSGOTTPREL)))]\n   \"\n {\n   operands[3] = gen_reg_rtx (TARGET_64BIT ? DImode : SImode);\n@@ -11311,7 +11315,8 @@\n (define_insn \"*tls_got_tprel_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=r\")\n      (lo_sum:TLSmode (match_operand:TLSmode 1 \"gpc_reg_operand\" \"b\")\n-\t (unspec:TLSmode [(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n+\t (unspec:TLSmode [(match_operand:TLSmode 3 \"gpc_reg_operand\" \"b\")\n+\t\t\t  (match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t\t UNSPEC_TLSGOTTPREL)))]\n   \"HAVE_AS_TLS && TARGET_CMODEL != CMODEL_SMALL\"\n   \"l<TLSmode:tls_insn_suffix> %0,%2@got@tprel@l(%1)\""}]}