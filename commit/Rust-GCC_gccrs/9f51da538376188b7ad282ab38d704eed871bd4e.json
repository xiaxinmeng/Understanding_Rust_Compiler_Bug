{"sha": "9f51da538376188b7ad282ab38d704eed871bd4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1MWRhNTM4Mzc2MTg4YjdhZDI4MmFiMzhkNzA0ZWVkODcxYmQ0ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-12T14:41:10Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-12T14:41:10Z"}, "message": "Document IntegerRange in internal documentation.\n\n2018-06-12  Martin Liska  <mliska@suse.cz>\n\n\t* doc/options.texi: Document IntegerRange.\n\nFrom-SVN: r261498", "tree": {"sha": "69a7dbda32d486d48760019b7d1eb7232a3a69ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69a7dbda32d486d48760019b7d1eb7232a3a69ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f51da538376188b7ad282ab38d704eed871bd4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f51da538376188b7ad282ab38d704eed871bd4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f51da538376188b7ad282ab38d704eed871bd4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f51da538376188b7ad282ab38d704eed871bd4e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3713f2e213602fdc5119c3b9ece371330ceeac30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3713f2e213602fdc5119c3b9ece371330ceeac30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3713f2e213602fdc5119c3b9ece371330ceeac30"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "610abcd8c0ab3e7d96a5cfea65f0024f459be997", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f51da538376188b7ad282ab38d704eed871bd4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f51da538376188b7ad282ab38d704eed871bd4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f51da538376188b7ad282ab38d704eed871bd4e", "patch": "@@ -1,3 +1,7 @@\n+2018-06-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/options.texi: Document IntegerRange.\n+\n 2018-06-12  Martin Liska  <mliska@suse.cz>\n \n \t* config/i386/i386.opt: Make MPX-related options as Deprecated."}, {"sha": "b3ca9f6fce6d87796c4e7932f326f8f786ede9e9", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f51da538376188b7ad282ab38d704eed871bd4e/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f51da538376188b7ad282ab38d704eed871bd4e/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=9f51da538376188b7ad282ab38d704eed871bd4e", "patch": "@@ -264,6 +264,11 @@ option handler.  @code{UInteger} should also be used on options like\n @code{-falign-loops}=@var{n} are supported to make sure the saved\n options are given a full integer.\n \n+@item IntegerRange(@var{n}, @var{m})\n+The options's arguments are integer numbers.  The option's parser\n+will check that value of an option is inclusively within the\n+range [@var{n}, @var{m}].\n+\n @item ToLower\n The option's argument should be converted to lowercase as part of\n putting it in canonical form, and before comparing with the strings"}]}