{"sha": "09a3016e274a8f60d8fbf566edc3628b8fd2e6ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlhMzAxNmUyNzRhOGY2MGQ4ZmJmNTY2ZWRjMzYyOGI4ZmQyZTZhZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-24T19:51:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-24T19:51:35Z"}, "message": "tree-ssa-live.c (build_tree_conflict_graph): Change the type of tpa_to_clear to VEC(int,heap).\n\n\t* tree-ssa-live.c (build_tree_conflict_graph): Change the type\n\tof tpa_to_clear to VEC(int,heap).  Update uses of\n\ttpa_to_clear.  Free tpa_to_clear at the end.\n\nFrom-SVN: r98668", "tree": {"sha": "58d070be96b7a460df40b5db1c15a4ba69630a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58d070be96b7a460df40b5db1c15a4ba69630a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad/comments", "author": null, "committer": null, "parents": [{"sha": "4484e9b6a8f4845884ceb40453280596b9ad6bf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4484e9b6a8f4845884ceb40453280596b9ad6bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4484e9b6a8f4845884ceb40453280596b9ad6bf5"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "2b72034591bed3fc8b820d58998374b3614d6139", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09a3016e274a8f60d8fbf566edc3628b8fd2e6ad", "patch": "@@ -12,6 +12,10 @@\n \tbuild_assert_expr_for, fp_predicate, has_assert_expr): Use\n \tCOMPARISON_CLASS_P.\n \n+\t* tree-ssa-live.c (build_tree_conflict_graph): Change the type\n+\tof tpa_to_clear to VEC(int,heap).  Update uses of\n+\ttpa_to_clear.  Free tpa_to_clear at the end.\n+\n 2005-04-24  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* tree.h (TREE_THIS_VOLATILE): Document the effect on a"}, {"sha": "73c46a2cc6e59bcf4d049bc69d666daf9b3c7654", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a3016e274a8f60d8fbf566edc3628b8fd2e6ad/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=09a3016e274a8f60d8fbf566edc3628b8fd2e6ad", "patch": "@@ -1279,6 +1279,8 @@ add_conflicts_if_valid (tpa_p tpa, conflict_graph graph,\n     }\n }\n \n+DEF_VEC_P(int);\n+DEF_VEC_ALLOC_P(int,heap);\n \n /* Return a conflict graph for the information contained in LIVE_INFO.  Only\n    conflicts between items in the same TPA list are added.  If optional \n@@ -1293,8 +1295,8 @@ build_tree_conflict_graph (tree_live_info_p liveinfo, tpa_p tpa,\n   bitmap live;\n   unsigned x, y, i;\n   basic_block bb;\n-  varray_type tpa_to_clear;\n   int *partition_link, *tpa_nodes;\n+  VEC(int,heap) *tpa_to_clear;\n   unsigned l;\n   ssa_op_iter iter;\n   bitmap_iterator bi;\n@@ -1309,12 +1311,13 @@ build_tree_conflict_graph (tree_live_info_p liveinfo, tpa_p tpa,\n \n   partition_link = xcalloc (num_var_partitions (map) + 1, sizeof (int));\n   tpa_nodes = xcalloc (tpa_num_trees (tpa), sizeof (int));\n-  VARRAY_INT_INIT (tpa_to_clear, 50, \"tpa to clear\");\n+  tpa_to_clear = VEC_alloc (int, heap, 50);\n \n   FOR_EACH_BB (bb)\n     {\n       block_stmt_iterator bsi;\n       tree phi;\n+      int idx;\n \n       /* Start with live on exit temporaries.  */\n       bitmap_copy (live, live_on_exit (liveinfo, bb));\n@@ -1419,7 +1422,7 @@ build_tree_conflict_graph (tree_live_info_p liveinfo, tpa_p tpa,\n \t      /* If start is 0, a new root reference list is being started.\n \t\t Register it to be cleared.  */\n \t      if (!start)\n-\t        VARRAY_PUSH_INT (tpa_to_clear, i);\n+\t\tVEC_safe_push (int, heap, tpa_to_clear, i);\n \n \t      /* Add interferences to other tpa members seen.  */\n \t      for (y = start; y != 0; y = partition_link[y])\n@@ -1430,13 +1433,14 @@ build_tree_conflict_graph (tree_live_info_p liveinfo, tpa_p tpa,\n \t}\n \n \t/* Now clear the used tpa root references.  */\n-\tfor (l = 0; l < VARRAY_ACTIVE_SIZE (tpa_to_clear); l++)\n-\t  tpa_nodes[VARRAY_INT (tpa_to_clear, l)] = 0;\n-\tVARRAY_POP_ALL (tpa_to_clear);\n+\tfor (l = 0; VEC_iterate (int, tpa_to_clear, l, idx); l++)\n+\t  tpa_nodes[idx] = 0;\n+\tVEC_truncate (int, tpa_to_clear, 0);\n     }\n \n   free (tpa_nodes);\n   free (partition_link);\n+  VEC_free (int, heap, tpa_to_clear);\n   BITMAP_FREE (live);\n   return graph;\n }"}]}