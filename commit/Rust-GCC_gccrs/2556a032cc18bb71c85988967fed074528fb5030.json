{"sha": "2556a032cc18bb71c85988967fed074528fb5030", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1NmEwMzJjYzE4YmI3MWM4NTk4ODk2N2ZlZDA3NDUyOGZiNTAzMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-11-07T10:05:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-11-07T10:05:51Z"}, "message": "Handle constant fp classifications in fold-const-call.c\n\nMove the constant \"is finite\", \"is infinite\" and \"is nan\" queries\nto fold-const-call.c.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* builtins.c (fold_builtin_classify): Move constant cases to...\n\t* fold-const-call.c (fold_const_call_ss): ...here.\n\nFrom-SVN: r229920", "tree": {"sha": "94dd631ff29bdbed21c2b63a6d9ae302de5441f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94dd631ff29bdbed21c2b63a6d9ae302de5441f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2556a032cc18bb71c85988967fed074528fb5030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2556a032cc18bb71c85988967fed074528fb5030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2556a032cc18bb71c85988967fed074528fb5030", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2556a032cc18bb71c85988967fed074528fb5030/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5486d91300d0540215978ecde30870e1a337910c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5486d91300d0540215978ecde30870e1a337910c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5486d91300d0540215978ecde30870e1a337910c"}], "stats": {"total": 53, "additions": 30, "deletions": 23}, "files": [{"sha": "518c2163fbe3e454bdba60992b5edbbda3af2acb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2556a032cc18bb71c85988967fed074528fb5030/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2556a032cc18bb71c85988967fed074528fb5030/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2556a032cc18bb71c85988967fed074528fb5030", "patch": "@@ -1,3 +1,8 @@\n+2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.c (fold_builtin_classify): Move constant cases to...\n+\t* fold-const-call.c (fold_const_call_ss): ...here.\n+\n 2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.h (c_getstr): Move to..."}, {"sha": "6eefd5409caa62a3c9c98e4a56f5bc8dd54bd67a", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2556a032cc18bb71c85988967fed074528fb5030/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2556a032cc18bb71c85988967fed074528fb5030/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=2556a032cc18bb71c85988967fed074528fb5030", "patch": "@@ -8018,7 +8018,6 @@ static tree\n fold_builtin_classify (location_t loc, tree fndecl, tree arg, int builtin_index)\n {\n   tree type = TREE_TYPE (TREE_TYPE (fndecl));\n-  REAL_VALUE_TYPE r;\n \n   if (!validate_arg (arg, REAL_TYPE))\n     return NULL_TREE;\n@@ -8029,16 +8028,6 @@ fold_builtin_classify (location_t loc, tree fndecl, tree arg, int builtin_index)\n       if (!HONOR_INFINITIES (arg))\n \treturn omit_one_operand_loc (loc, type, integer_zero_node, arg);\n \n-      if (TREE_CODE (arg) == REAL_CST)\n-\t{\n-\t  r = TREE_REAL_CST (arg);\n-\t  if (real_isinf (&r))\n-\t    return real_compare (GT_EXPR, &r, &dconst0)\n-\t\t   ? integer_one_node : integer_minus_one_node;\n-\t  else\n-\t    return integer_zero_node;\n-\t}\n-\n       return NULL_TREE;\n \n     case BUILT_IN_ISINF_SIGN:\n@@ -8078,24 +8067,12 @@ fold_builtin_classify (location_t loc, tree fndecl, tree arg, int builtin_index)\n \t  && !HONOR_INFINITIES (arg))\n \treturn omit_one_operand_loc (loc, type, integer_one_node, arg);\n \n-      if (TREE_CODE (arg) == REAL_CST)\n-\t{\n-\t  r = TREE_REAL_CST (arg);\n-\t  return real_isfinite (&r) ? integer_one_node : integer_zero_node;\n-\t}\n-\n       return NULL_TREE;\n \n     case BUILT_IN_ISNAN:\n       if (!HONOR_NANS (arg))\n \treturn omit_one_operand_loc (loc, type, integer_zero_node, arg);\n \n-      if (TREE_CODE (arg) == REAL_CST)\n-\t{\n-\t  r = TREE_REAL_CST (arg);\n-\t  return real_isnan (&r) ? integer_one_node : integer_zero_node;\n-\t}\n-\n       arg = builtin_save_expr (arg);\n       return fold_build2_loc (loc, UNORDERED_EXPR, type, arg, arg);\n "}, {"sha": "c277d2b98fc2dc9a1b2fa316bbb6907f467d2f1e", "filename": "gcc/fold-const-call.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2556a032cc18bb71c85988967fed074528fb5030/gcc%2Ffold-const-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2556a032cc18bb71c85988967fed074528fb5030/gcc%2Ffold-const-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const-call.c?ref=2556a032cc18bb71c85988967fed074528fb5030", "patch": "@@ -736,6 +736,31 @@ fold_const_call_ss (wide_int *result, built_in_function fn,\n       /* Not yet folded to a constant.  */\n       return false;\n \n+    CASE_FLT_FN (BUILT_IN_FINITE):\n+    case BUILT_IN_FINITED32:\n+    case BUILT_IN_FINITED64:\n+    case BUILT_IN_FINITED128:\n+    case BUILT_IN_ISFINITE:\n+      *result = wi::shwi (real_isfinite (arg) ? 1 : 0, precision);\n+      return true;\n+\n+    CASE_FLT_FN (BUILT_IN_ISINF):\n+    case BUILT_IN_ISINFD32:\n+    case BUILT_IN_ISINFD64:\n+    case BUILT_IN_ISINFD128:\n+      if (real_isinf (arg))\n+\t*result = wi::shwi (arg->sign ? -1 : 1, precision);\n+      else\n+\t*result = wi::shwi (0, precision);\n+      return true;\n+\n+    CASE_FLT_FN (BUILT_IN_ISNAN):\n+    case BUILT_IN_ISNAND32:\n+    case BUILT_IN_ISNAND64:\n+    case BUILT_IN_ISNAND128:\n+      *result = wi::shwi (real_isnan (arg) ? 1 : 0, precision);\n+      return true;\n+\n     default:\n       return false;\n     }"}]}