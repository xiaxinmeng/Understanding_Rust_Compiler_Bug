{"sha": "c7279270a2deda81eaeba37a87d721bee0ed6004", "node_id": "C_kwDOANBUbNoAKGM3Mjc5MjcwYTJkZWRhODFlYWViYTM3YTg3ZDcyMWJlZTBlZDYwMDQ", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2023-01-10T18:53:12Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2023-01-11T16:36:48Z"}, "message": "bpf: correct bpf_print_operand for floats [PR108293]\n\nThe existing logic in bpf_print_operand was only correct for integral\nCONST_DOUBLEs, and emitted garbage for floating point modes. Fix it so\nfloating point mode operands are correctly handled.\n\n\tPR target/108293\n\ngcc/\n\n\t* config/bpf/bpf.cc (bpf_print_operand): Correct handling for\n\tfloating point modes.\n\ngcc/testsuite/\n\n\t* gcc.target/bpf/double-1.c: New test.\n\t* gcc.target/bpf/double-2.c: New test.\n\t* gcc.target/bpf/float-1.c: New test.", "tree": {"sha": "238d9aaa375eb8c178d3331cc06469d8a13eaae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/238d9aaa375eb8c178d3331cc06469d8a13eaae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7279270a2deda81eaeba37a87d721bee0ed6004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7279270a2deda81eaeba37a87d721bee0ed6004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7279270a2deda81eaeba37a87d721bee0ed6004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7279270a2deda81eaeba37a87d721bee0ed6004/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e1cba12a8d71e70235a9a9b8f1a237a561db3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1cba12a8d71e70235a9a9b8f1a237a561db3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e1cba12a8d71e70235a9a9b8f1a237a561db3e7"}], "stats": {"total": 70, "additions": 64, "deletions": 6}, "files": [{"sha": "576a1fe8eabf2337ecadfa9d313d8e17b0bc2fcb", "filename": "gcc/config/bpf/bpf.cc", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Fconfig%2Fbpf%2Fbpf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Fconfig%2Fbpf%2Fbpf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.cc?ref=c7279270a2deda81eaeba37a87d721bee0ed6004", "patch": "@@ -880,13 +880,35 @@ bpf_print_operand (FILE *file, rtx op, int code ATTRIBUTE_UNUSED)\n       output_address (GET_MODE (op), XEXP (op, 0));\n       break;\n     case CONST_DOUBLE:\n-      if (CONST_DOUBLE_HIGH (op))\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DOUBLE_HEX,\n-\t\t CONST_DOUBLE_HIGH (op), CONST_DOUBLE_LOW (op));\n-      else if (CONST_DOUBLE_LOW (op) < 0)\n-\tfprintf (file, HOST_WIDE_INT_PRINT_HEX, CONST_DOUBLE_LOW (op));\n+      if (GET_MODE (op) == VOIDmode)\n+\t{\n+\t  if (CONST_DOUBLE_HIGH (op))\n+\t    fprintf (file, HOST_WIDE_INT_PRINT_DOUBLE_HEX,\n+\t\t     CONST_DOUBLE_HIGH (op), CONST_DOUBLE_LOW (op));\n+\t  else if (CONST_DOUBLE_LOW (op) < 0)\n+\t    fprintf (file, HOST_WIDE_INT_PRINT_HEX, CONST_DOUBLE_LOW (op));\n+\t  else\n+\t    fprintf (file, HOST_WIDE_INT_PRINT_DEC, CONST_DOUBLE_LOW (op));\n+\t}\n       else\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, CONST_DOUBLE_LOW (op));\n+\t{\n+\t  long vals[2];\n+\t  real_to_target (vals, CONST_DOUBLE_REAL_VALUE (op), GET_MODE (op));\n+\t  vals[0] &= 0xffffffff;\n+\t  vals[1] &= 0xffffffff;\n+\t  if (GET_MODE (op) == SFmode)\n+\t    fprintf (file, \"0x%08lx\", vals[0]);\n+\t  else if (GET_MODE (op) == DFmode)\n+\t    {\n+\t      /* Note: real_to_target puts vals in target word order.  */\n+\t      if (WORDS_BIG_ENDIAN)\n+\t\tfprintf (file, \"0x%08lx%08lx\", vals[0], vals[1]);\n+\t      else\n+\t\tfprintf (file, \"0x%08lx%08lx\", vals[1], vals[0]);\n+\t    }\n+\t  else\n+\t    gcc_unreachable ();\n+\t}\n       break;\n     default:\n       output_addr_const (file, op);"}, {"sha": "200f1bd18f803a3fbc5ae0c8c1ffc01c43f31455", "filename": "gcc/testsuite/gcc.target/bpf/double-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fdouble-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fdouble-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fdouble-1.c?ref=c7279270a2deda81eaeba37a87d721bee0ed6004", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mlittle-endian\" } */\n+\n+double f;\n+double a() { f = 1.0; return 1.0; }\n+double b() { f = 2.0; return 2.0; }\n+double c() { f = 2.0; return 3.0; }\n+double d() { f = 3.0; return 3.0; }\n+\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x3ff0000000000000\" 2 } } */\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x4000000000000000\" 3 } } */\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x4008000000000000\" 3 } } */"}, {"sha": "d04ddd0c575c2a6a9029b19b05365a315883ef81", "filename": "gcc/testsuite/gcc.target/bpf/double-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fdouble-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fdouble-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fdouble-2.c?ref=c7279270a2deda81eaeba37a87d721bee0ed6004", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mbig-endian\" } */\n+\n+double f;\n+double a() { f = 1.0; return 1.0; }\n+double b() { f = 2.0; return 2.0; }\n+double c() { f = 2.0; return 3.0; }\n+double d() { f = 3.0; return 3.0; }\n+\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x3ff0000000000000\" 2 } } */\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x4000000000000000\" 3 } } */\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x4008000000000000\" 3 } } */"}, {"sha": "05ed7bb651d7990ea047453727ac11e43292d015", "filename": "gcc/testsuite/gcc.target/bpf/float-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Ffloat-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7279270a2deda81eaeba37a87d721bee0ed6004/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Ffloat-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Ffloat-1.c?ref=c7279270a2deda81eaeba37a87d721bee0ed6004", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mlittle-endian\" } */\n+\n+float f;\n+float a() { f = 1.0; return 1.0; }\n+float b() { f = 2.0; return 2.0; }\n+float c() { f = 2.0; return 3.0; }\n+float d() { f = 3.0; return 3.0; }\n+\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x3f800000\" 2 } } */\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x40000000\" 3 } } */\n+/* { dg-final { scan-assembler-times \"lddw\\t%r.,0x40400000\" 3 } } */"}]}