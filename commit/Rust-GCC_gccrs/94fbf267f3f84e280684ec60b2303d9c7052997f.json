{"sha": "94fbf267f3f84e280684ec60b2303d9c7052997f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmYmYyNjdmM2Y4NGUyODA2ODRlYzYwYjIzMDNkOWM3MDUyOTk3Zg==", "commit": {"author": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2004-07-04T02:12:58Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2004-07-04T02:12:58Z"}, "message": "[multiple changes]\n\n2004-07-03  Mark Wielaard  <mark@klomp.org>\n            Anthony Green  <green@redhat.com>\n\n        * java/net/URL.java (getFile): Clarify return value doc.\n        (getPath): Return null if file is empty - not empty String.\n        (set): Convert protocol to lower case before doing anything.\n        Only change the protocol handler if it's different.\n\n2004-07-03  Anthony Green  <green@redhat.com>\n\n        * java/net/URL.java (URL): Convert protocol to lower case before\n        doing anything, so we getURLStreamHandler() with the proper value.\n\nFrom-SVN: r84068", "tree": {"sha": "b1450648aff58eca57b555278c227fabb642cb7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1450648aff58eca57b555278c227fabb642cb7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94fbf267f3f84e280684ec60b2303d9c7052997f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fbf267f3f84e280684ec60b2303d9c7052997f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94fbf267f3f84e280684ec60b2303d9c7052997f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fbf267f3f84e280684ec60b2303d9c7052997f/comments", "author": null, "committer": null, "parents": [{"sha": "61b35a3e46c5a3675de41ce9af72cb30a12e6594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b35a3e46c5a3675de41ce9af72cb30a12e6594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b35a3e46c5a3675de41ce9af72cb30a12e6594"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "edf90fb33a5fbd4f3a62c508149acd9dbc10e3e3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94fbf267f3f84e280684ec60b2303d9c7052997f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94fbf267f3f84e280684ec60b2303d9c7052997f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=94fbf267f3f84e280684ec60b2303d9c7052997f", "patch": "@@ -1,3 +1,16 @@\n+2004-07-03  Mark Wielaard  <mark@klomp.org>\n+            Anthony Green  <green@redhat.com>\n+\n+\t* java/net/URL.java (getFile): Clarify return value doc.\n+\t(getPath): Return null if file is empty - not empty String.\n+\t(set): Convert protocol to lower case before doing anything.\n+\tOnly change the protocol handler if it's different.\n+\n+2004-07-03  Anthony Green  <green@redhat.com>\n+\n+\t* java/net/URL.java (URL): Convert protocol to lower case before\n+\tdoing anything, so we getURLStreamHandler() with the proper value.\n+\n 2004-07-02  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/util/Locale.java (hashcode): Made transient."}, {"sha": "7357c7529b8e0c6a205e153fa3fca5e02bd5b763", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94fbf267f3f84e280684ec60b2303d9c7052997f/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94fbf267f3f84e280684ec60b2303d9c7052997f/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=94fbf267f3f84e280684ec60b2303d9c7052997f", "patch": "@@ -262,7 +262,8 @@ public URL(String protocol, String host, int port, String file,\n   {\n     if (protocol == null)\n       throw new MalformedURLException(\"null protocol\");\n-    this.protocol = protocol.toLowerCase();\n+    protocol = protocol.toLowerCase();\n+    this.protocol = protocol;\n \n     if (ph != null)\n       {\n@@ -512,7 +513,7 @@ public Object getContent(Class[] classes) throws IOException\n    * Defined as <code>path[?query]</code>.\n    * Returns the empty string if there is no file portion.\n    *\n-   * @return The filename specified in this URL.\n+   * @return The filename specified in this URL, or an empty string if empty.\n    */\n   public String getFile()\n   {\n@@ -523,13 +524,15 @@ public String getFile()\n    * Returns the path of the URL. This is the part of the file before any '?'\n    * character.\n    *\n-   * @return The path specified in this URL.\n+   * @return The path specified in this URL, or null if empty.\n    *\n    * @since 1.3\n    */\n   public String getPath()\n   {\n-    int quest = (file == null) ? -1 : file.indexOf('?');\n+    if (file == null)\n+      return null;\n+    int quest = file.indexOf('?');\n     return quest < 0 ? getFile() : file.substring(0, quest);\n   }\n \n@@ -699,8 +702,12 @@ protected void set(String protocol, String host, int port, String file,\n     // invalid protocol.  It will cause the handler to be set to null\n     // thus overriding a valid handler.  Callers of this method should\n     // be aware of this.\n-    this.ph = getURLStreamHandler(protocol);\n-    this.protocol = protocol.toLowerCase();\n+    protocol = protocol.toLowerCase ();\n+    if (! this.protocol.equals (protocol))\n+      {\n+\tthis.ph = getURLStreamHandler(protocol);\n+\tthis.protocol = protocol;\n+      }\n     this.authority = \"\";\n     this.port = port;\n     this.host = host;\n@@ -738,8 +745,12 @@ protected void set(String protocol, String host, int port, String authority,\n     // invalid protocol.  It will cause the handler to be set to null\n     // thus overriding a valid handler.  Callers of this method should\n     // be aware of this.\n-    this.ph = getURLStreamHandler(protocol);\n-    this.protocol = protocol.toLowerCase();\n+    protocol = protocol.toLowerCase ();\n+    if (! this.protocol.equals (protocol))\n+      {\n+\tthis.ph = getURLStreamHandler(protocol);\n+\tthis.protocol = protocol;\n+      }\n     this.host = host;\n     this.userInfo = userInfo;\n     this.port = port;"}]}