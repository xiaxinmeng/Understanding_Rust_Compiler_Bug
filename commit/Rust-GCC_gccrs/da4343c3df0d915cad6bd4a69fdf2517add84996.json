{"sha": "da4343c3df0d915cad6bd4a69fdf2517add84996", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE0MzQzYzNkZjBkOTE1Y2FkNmJkNGE2OWZkZjI1MTdhZGQ4NDk5Ng==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-04-23T10:23:04Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-04-23T10:23:04Z"}, "message": "extend.texi (AVR Named Address Spaces): Fix typos.\n\n\t* doc/extend.texi (AVR Named Address Spaces): Fix typos.\n\nFrom-SVN: r186697", "tree": {"sha": "a7819562cfcd237347ebd5b034874073237bb3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7819562cfcd237347ebd5b034874073237bb3a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da4343c3df0d915cad6bd4a69fdf2517add84996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4343c3df0d915cad6bd4a69fdf2517add84996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da4343c3df0d915cad6bd4a69fdf2517add84996", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4343c3df0d915cad6bd4a69fdf2517add84996/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54b9f838faa635b6ae638cbc05195b8b181d4cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b9f838faa635b6ae638cbc05195b8b181d4cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b9f838faa635b6ae638cbc05195b8b181d4cc3"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "651bcd9d8a594d47ae1509dda3752ecf3aba0aaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4343c3df0d915cad6bd4a69fdf2517add84996/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4343c3df0d915cad6bd4a69fdf2517add84996/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da4343c3df0d915cad6bd4a69fdf2517add84996", "patch": "@@ -1,3 +1,7 @@\n+2012-04-23  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* doc/extend.texi (AVR Named Address Spaces): Fix typos.\n+\n 2012-04-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/53060"}, {"sha": "53391fa48b0fb0d1557e974b34d58418eb07bc57", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4343c3df0d915cad6bd4a69fdf2517add84996/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4343c3df0d915cad6bd4a69fdf2517add84996/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=da4343c3df0d915cad6bd4a69fdf2517add84996", "patch": "@@ -1311,18 +1311,18 @@ support is available or not:\n #ifdef __FLASH\n const __flash int var = 1;\n \n-int read_i (void)\n+int read_var (void)\n @{\n-    return i;\n+    return var;\n @}\n #else\n-#include <avr/pgmspace.h> /* From avr-libc */\n+#include <avr/pgmspace.h> /* From AVR-LibC */\n \n const int var PROGMEM = 1;\n \n-int read_i (void)\n+int read_var (void)\n @{\n-    return (int) pgm_read_word (&i);\n+    return (int) pgm_read_word (&var);\n @}\n #endif /* __FLASH */\n @end example\n@@ -1332,7 +1332,8 @@ locates data in flash but\n accesses to these data will read from generic address space, i.e.@:\n from RAM,\n so that you need special accessors like @code{pgm_read_byte}\n-from @w{@uref{http://nongnu.org/avr-libc/user-manual,avr-libc}}.\n+from @w{@uref{http://nongnu.org/avr-libc/user-manual,AVR-LibC}}\n+together with attribute @code{progmem}.\n \n @b{Limitations and caveats}\n \n@@ -1345,7 +1346,7 @@ supports reading across the 64@tie{}KiB flash segment boundaries is\n @code{__memx}.\n \n @item\n-If you use one if the @code{__flash@var{N}} address spaces\n+If you use one of the @code{__flash@var{N}} address spaces\n you will have to arrange your linker skript to locate the\n @code{.progmem@var{N}.data} sections according to your needs.\n \n@@ -4782,7 +4783,7 @@ of the data but not how this data is accessed.\n In order to read data located with the @code{progmem} attribute\n (inline) assembler must be used.\n @example\n-/* Use custom macros from @w{@uref{http://nongnu.org/avr-libc/user-manual,avr-libc}} */\n+/* Use custom macros from @w{@uref{http://nongnu.org/avr-libc/user-manual,AVR-LibC}} */\n #include <avr/pgmspace.h> \n \n /* Locate var in flash memory */"}]}