{"sha": "3f1e5d3afe4d01a277747fe74fc01859139576ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxZTVkM2FmZTRkMDFhMjc3NzQ3ZmU3NGZjMDE4NTkxMzk1NzZjYQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-03-12T02:05:17Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-03-12T02:05:17Z"}, "message": "Fix PR c++/70106 (type of parenthesized qualified-id has wrong cv-qualifiers)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/70106\n\t* semantics.c (force_paren_expr): Just build a PAREN_EXPR when\n\tprocessing_template_decl and EXPR is a SCOPE_REF.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/70106\n\t* g++.dg/cpp1y/paren3.C: New test.\n\nFrom-SVN: r234159", "tree": {"sha": "7b8e32914e63bd23bcc66a087cddb1cb38304ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b8e32914e63bd23bcc66a087cddb1cb38304ba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f1e5d3afe4d01a277747fe74fc01859139576ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1e5d3afe4d01a277747fe74fc01859139576ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1e5d3afe4d01a277747fe74fc01859139576ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1e5d3afe4d01a277747fe74fc01859139576ca/comments", "author": null, "committer": null, "parents": [{"sha": "c1e884652647c950afed64c13d66d55f40100244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e884652647c950afed64c13d66d55f40100244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e884652647c950afed64c13d66d55f40100244"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "94e44275507baaf26e3f1542dcf75aafaf5b1107", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f1e5d3afe4d01a277747fe74fc01859139576ca", "patch": "@@ -1,3 +1,9 @@\n+2016-03-12  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/70106\n+\t* semantics.c (force_paren_expr): Just build a PAREN_EXPR when\n+\tprocessing_template_decl and EXPR is a SCOPE_REF.\n+\n 2016-03-10  Patrick Palka  <ppalka@gcc.gnu.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "1574e60199e4747e679ffc4062a9165623bf56fd", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3f1e5d3afe4d01a277747fe74fc01859139576ca", "patch": "@@ -1649,7 +1649,15 @@ force_paren_expr (tree expr)\n \n   if (TREE_CODE (expr) == COMPONENT_REF)\n     REF_PARENTHESIZED_P (expr) = true;\n-  else if (type_dependent_expression_p (expr))\n+  else if (type_dependent_expression_p (expr)\n+\t   /* When processing_template_decl, a SCOPE_REF may actually be\n+\t      referring to a non-static data member of the current class, in\n+\t      which case its TREE_TYPE may not be properly cv-qualified (the\n+\t      cv-qualifiers of the implicit *this object haven't yet been taken\n+\t      into account) so we have to delay building a static_cast until\n+\t      instantiation.  */\n+\t   || (processing_template_decl\n+\t       && TREE_CODE (expr) == SCOPE_REF))\n     expr = build1 (PAREN_EXPR, TREE_TYPE (expr), expr);\n   else if (VAR_P (expr) && DECL_HARD_REGISTER (expr))\n     /* We can't bind a hard register variable to a reference.  */;"}, {"sha": "515dbc75d2f72e4ce0b1fb01d7d559bf2d32942f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f1e5d3afe4d01a277747fe74fc01859139576ca", "patch": "@@ -1,3 +1,8 @@\n+2016-03-12  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/70106\n+\t* g++.dg/cpp1y/paren3.C: New test.\n+\n 2016-03-11  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/70131"}, {"sha": "850be2c27addb65fbb69f860cbbdf691033b6e72", "filename": "gcc/testsuite/g++.dg/cpp1y/paren3.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fparen3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1e5d3afe4d01a277747fe74fc01859139576ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fparen3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fparen3.C?ref=3f1e5d3afe4d01a277747fe74fc01859139576ca", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/70106\n+// { dg-do compile { target c++14 } }\n+\n+template <typename>\n+struct A\n+{\n+  int x;\n+\n+  void foo () const {\n+    (A::x);\n+  }\n+};\n+\n+struct B\n+{\n+  int x;\n+\n+  template <typename>\n+  void foo () const {\n+    (B::x);\n+  }\n+};\n+\n+void\n+foo ()\n+{\n+  A<int> ().foo ();\n+  B ().foo<int> ();\n+}\n+"}]}