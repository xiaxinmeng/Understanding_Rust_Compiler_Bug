{"sha": "d201bd1aab513266eb7f3adabfb3fafc6578228f", "node_id": "C_kwDOANBUbNoAKGQyMDFiZDFhYWI1MTMyNjZlYjdmM2FkYWJmYjNmYWZjNjU3ODIyOGY", "commit": {"author": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-10-19T09:31:33Z"}, "committer": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-11-04T07:58:36Z"}, "message": "arm: Allow to override location of .gnu.sgstubs section\n\nDepending on the DejaGNU board definition, the .gnu.sgstubs section\nmight be placed on different locations in order to suit the target.\nWith this patch, the start location of the section is overrideable\nfrom the board definition with the fallback of the previously\nhardcoded location.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/cmse/bitfield-1.c: Use overridable location.\n\t* gcc.target/arm/cmse/bitfield-2.c: Likewise.\n\t* gcc.target/arm/cmse/bitfield-3.c: Likewise.\n\t* gcc.target/arm/cmse/cmse-20.c: Likewise.\n\t* gcc.target/arm/cmse/struct-1.c: Likewise.\n\t* gcc.target/arm/cmse/cmse.exp (cmse_sgstubs): New.\n\nSigned-off-by: Torbj\u00f6rn SVENSSON <torbjorn.svensson@foss.st.com>", "tree": {"sha": "0e79c74b75e32a420608befcce142b3e158952fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e79c74b75e32a420608befcce142b3e158952fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d201bd1aab513266eb7f3adabfb3fafc6578228f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d201bd1aab513266eb7f3adabfb3fafc6578228f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d201bd1aab513266eb7f3adabfb3fafc6578228f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d201bd1aab513266eb7f3adabfb3fafc6578228f/comments", "author": null, "committer": null, "parents": [{"sha": "97752b7c446e513677e9d49b0c57427d41aaebde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97752b7c446e513677e9d49b0c57427d41aaebde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97752b7c446e513677e9d49b0c57427d41aaebde"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "c1221bef29f6a3bc3352bdbccb39e023f1003a15", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-1.c?ref=d201bd1aab513266eb7f3adabfb3fafc6578228f", "patch": "@@ -1,5 +1,5 @@\n /* This test is executed only if the execution engine supports CMSE instructions.  */\n-/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=0x00400000\" } */\n+/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=[cmse_sgstubs]\" } */\n \n typedef struct\n {"}, {"sha": "79e9a3efc93d6f7b1b23074c5e8531b35d4b95b2", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-2.c?ref=d201bd1aab513266eb7f3adabfb3fafc6578228f", "patch": "@@ -1,5 +1,5 @@\n /* This test is executed only if the execution engine supports CMSE instructions.  */\n-/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=0x00400000\" } */\n+/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=[cmse_sgstubs]\" } */\n \n typedef struct\n {"}, {"sha": "d621a802ee117a71118bd9cb396c838487c6b2e5", "filename": "gcc/testsuite/gcc.target/arm/cmse/bitfield-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fbitfield-3.c?ref=d201bd1aab513266eb7f3adabfb3fafc6578228f", "patch": "@@ -1,5 +1,5 @@\n /* This test is executed only if the execution engine supports CMSE instructions.  */\n-/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=0x00400000\" } */\n+/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=[cmse_sgstubs]\" } */\n \n typedef struct\n {"}, {"sha": "bbea93588704f9cf39fbc3604a23192baa625649", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse-20.c?ref=d201bd1aab513266eb7f3adabfb3fafc6578228f", "patch": "@@ -1,5 +1,5 @@\n /* This test is executed only if the execution engine supports CMSE instructions.  */\n-/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=0x00400000\" } */\n+/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=[cmse_sgstubs]\" } */\n \n #include <arm_cmse.h>\n #include <stdlib.h>"}, {"sha": "1df5d56c6d5ecc2b6d9ac00261e92703655c18ec", "filename": "gcc/testsuite/gcc.target/arm/cmse/cmse.exp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fcmse.exp?ref=d201bd1aab513266eb7f3adabfb3fafc6578228f", "patch": "@@ -44,6 +44,17 @@ if {[is-effective-target arm_cmse_hw]} then {\n set saved-lto_torture_options ${LTO_TORTURE_OPTIONS}\n set LTO_TORTURE_OPTIONS \"\"\n \n+# Return the start address of the .gnu.sgstubs section.\n+proc cmse_sgstubs {} {\n+    # Allow to override the location of .gnu.sgstubs section.\n+    set tboard [target_info name]\n+    if {[board_info $tboard exists cmse_sgstubs]} {\n+\treturn [board_info $tboard cmse_sgstubs]\n+    }\n+\n+    return \"0x00400000\"\n+}\n+\n # These are for both baseline and mainline.\n gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \\\n \t\"\" $DEFAULT_CFLAGS"}, {"sha": "bebd059b13f1517dfeb11acd923745bfd0290403", "filename": "gcc/testsuite/gcc.target/arm/cmse/struct-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fstruct-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d201bd1aab513266eb7f3adabfb3fafc6578228f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fstruct-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcmse%2Fstruct-1.c?ref=d201bd1aab513266eb7f3adabfb3fafc6578228f", "patch": "@@ -1,5 +1,5 @@\n /* This test is executed only if the execution engine supports CMSE instructions.  */\n-/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=0x00400000\" } */\n+/* { dg-options \"--save-temps -mcmse -Wl,--section-start,.gnu.sgstubs=[cmse_sgstubs]\" } */\n \n typedef struct\n {"}]}