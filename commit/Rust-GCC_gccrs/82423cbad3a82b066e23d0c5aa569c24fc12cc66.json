{"sha": "82423cbad3a82b066e23d0c5aa569c24fc12cc66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0MjNjYmFkM2E4MmIwNjZlMjNkMGM1YWE1NjljMjRmYzEyY2M2Ng==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-08-08T17:02:56Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-08-08T17:02:56Z"}, "message": "* config/mips/mips.c (mips_legitimate_address_p): Limit \"la\" addresses.\n\nFrom-SVN: r44721", "tree": {"sha": "1ae536248be607b1c09449d754c668db933a2b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ae536248be607b1c09449d754c668db933a2b0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82423cbad3a82b066e23d0c5aa569c24fc12cc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82423cbad3a82b066e23d0c5aa569c24fc12cc66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82423cbad3a82b066e23d0c5aa569c24fc12cc66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82423cbad3a82b066e23d0c5aa569c24fc12cc66/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5755cd3808b7ffb637991e6537a69d1bdae4cffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5755cd3808b7ffb637991e6537a69d1bdae4cffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5755cd3808b7ffb637991e6537a69d1bdae4cffb"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "c8e70c326adb98ef5db6144548295e4922c0796e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82423cbad3a82b066e23d0c5aa569c24fc12cc66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82423cbad3a82b066e23d0c5aa569c24fc12cc66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82423cbad3a82b066e23d0c5aa569c24fc12cc66", "patch": "@@ -1,3 +1,7 @@\n+2001-08-07  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/mips/mips.c (mips_legitimate_address_p): Limit \"la\" addresses.\n+\n 2001-08-08  Jason Merrill  <jason_merrill@redhat.com>\n \n \t* alias.c (get_alias_set): Return a previously calculated"}, {"sha": "a2caf2ac7b41a9b8c34efaeedbb984a777c778ba", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82423cbad3a82b066e23d0c5aa569c24fc12cc66/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82423cbad3a82b066e23d0c5aa569c24fc12cc66/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=82423cbad3a82b066e23d0c5aa569c24fc12cc66", "patch": "@@ -1364,9 +1364,12 @@ mips_legitimate_address_p (mode, xinsn, strict)\n \t\t  || code1 != CONST\n \t\t  || GET_CODE (XEXP (xplus1, 0)) != MINUS)\n \t      /* When assembling for machines with 64 bit registers,\n-\t         the assembler will not sign-extend the constant \"foo\"\n-\t\t in \"la x, foo(x)\" */\n-\t      && (!TARGET_64BIT || (code1 == CONST_INT && INTVAL (xplus1) > 0))\n+\t         the assembler will sign-extend the constant \"foo\"\n+\t\t in \"la x, foo(x)\" yielding the wrong result for:\n+\t         (set (blah:DI) (plus x y)).  */\n+\t      && (!TARGET_64BIT\n+\t\t  || trunc_int_for_mode (INTVAL (xplus1),\n+\t\t\t\t\t SImode) == INTVAL (xplus1))\n \t      && !TARGET_MIPS16)\n \t    return 1;\n \t}"}]}