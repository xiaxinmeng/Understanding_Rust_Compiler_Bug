{"sha": "ddd32db02d42cff54b0c92dd0722d7193cc8cb8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkMzJkYjAyZDQyY2ZmNTRiMGM5MmRkMDcyMmQ3MTkzY2M4Y2I4Yg==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-08-21T16:17:35Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-08-21T16:17:35Z"}, "message": "Makefile for i?86-pc-msdosdjgpp\n\nFrom-SVN: r35847", "tree": {"sha": "496771ed9278e4e6738e88bb7c209bbd8ef9017e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/496771ed9278e4e6738e88bb7c209bbd8ef9017e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd32db02d42cff54b0c92dd0722d7193cc8cb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd32db02d42cff54b0c92dd0722d7193cc8cb8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd32db02d42cff54b0c92dd0722d7193cc8cb8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd32db02d42cff54b0c92dd0722d7193cc8cb8b/comments", "author": null, "committer": null, "parents": [{"sha": "cb694d2c7b8d49ae48b662bf85cd3ab9f03a618b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb694d2c7b8d49ae48b662bf85cd3ab9f03a618b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb694d2c7b8d49ae48b662bf85cd3ab9f03a618b"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "513e735b69217aacb01053dc787d004101f2cee2", "filename": "gcc/fixinc/Makefile.DOS", "status": "added", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd32db02d42cff54b0c92dd0722d7193cc8cb8b/gcc%2Ffixinc%2FMakefile.DOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd32db02d42cff54b0c92dd0722d7193cc8cb8b/gcc%2Ffixinc%2FMakefile.DOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.DOS?ref=ddd32db02d42cff54b0c92dd0722d7193cc8cb8b", "patch": "@@ -0,0 +1,120 @@\n+# Makefile for GNU compilers on a DOS box.\n+#\n+#   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+\n+#This file is part of GNU CC.\n+\n+#GNU CC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 2, or (at your option)\n+#any later version.\n+\n+#GNU CC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GNU CC; see the file COPYING.  If not, write to\n+#the Free Software Foundation, 59 Temple Place - Suite 330,\n+#Boston, MA 02111-1307, USA.\n+\n+# This Makefile.DOS file lives in the fixinc subdirectory.\n+# Its purpose is to build the fixincl and applyfix programs for\n+# the DJGPP (aka MS-DOS) port of GCC.\n+\n+CFLAGS = -Wall -g -O2\n+FIXINC_DEFS = -DIN_GCC -D__MSDOS__ $(CFLAGS) $(CPPFLAGS) $(INCLUDES)\n+\n+CC = gcc\n+SHELL = /bin/sh\n+\n+target=i386-pc-msdosdjgpp\n+# Directory where sources are, from where we are.\n+srcdir = .\n+VPATH = $(srcdir)\n+subdir = fixinc\n+\n+# End of variables for you to override.\n+\n+default : all\n+\n+# Now figure out from those variables how to compile and link.\n+\n+# Specify the directories to be searched for header files.\n+# Both . and srcdir are used, in that order.\n+#\n+INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \\\n+-I$(srcdir)/../config -I$(srcdir)/../../include\n+\n+# Always use -I$(srcdir)/config when compiling.\n+.c.o:\n+\t$(CC) -c $(FIXINC_DEFS) $<\n+\n+# The only suffixes we want for implicit rules are .c and .o.\n+.SUFFIXES:\n+.SUFFIXES: .c .o\n+\n+#\f\n+\n+## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n+##\n+##  Makefile for constructing the \"best\" include fixer we can\n+##\n+## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n+\n+LIBERTY = $(srcdir)/../../libiberty/libiberty.a\n+OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n+      gnu-regex.o fixlib.o\n+\n+HDR = server.h gnu-regex.h fixlib.h machname.h\n+\n+TARGETS = fixincl.exe applyfix.exe\n+\n+all : $(TARGETS)\n+gen : fixincl.x\n+\n+FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n+\n+fixincl.exe: $(FIXINCL_OBJ) $(LIBERTY)\n+\t$(CC) $(FIXINC_DEFS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n+\n+APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n+\n+applyfix.exe: $(APPLY_OBJ) $(LIBERTY)\n+\t$(CC) $(FIXINC_DEFS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n+\n+$(OBJ)      : $(HDR)\n+fixincl.o   : fixincl.x fixincl.c\n+fixtests.o  : fixtests.c\n+fixfixes.o  : fixfixes.c fixincl.x\n+server.o    : server.c\n+procopen.o  : procopen.c\n+gnu-regex.o : gnu-regex.c\n+fixlib.o    : fixlib.c\n+\n+#  'machname.h' is built in the build directory.\n+#  'fixincl.x' in the source dir.\n+#\n+machname.h: ../specs\n+\t$(SHELL) $(srcdir)/genfixes $@\n+\n+fixincl.x: fixincl.tpl inclhack.def\n+\tcd $(srcdir) ; $(SHELL) ./genfixes $@\n+\n+clean:\n+\trm -f *.o $(TARGETS) fixincl.x machname.h *~ *.exe\n+\n+#  Build the executable and copy up into gcc dir.\n+#  We still copy the script because we still have alternative scripts.\n+#\n+inst-bin : $(TARGETS)\n+\t./fixincl.exe -v\n+\t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n+\t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n+\t@if [ -f ./fixincl.sh ] ; \\\n+\tthen echo cp ./fixincl.sh ../fixinc.sh ; \\\n+\t\tcp ./fixincl.sh ../fixinc.sh ; \\\n+\telse echo cp $(srcdir)/fixincl.sh ../fixinc.sh ; \\\n+\t\tcp $(srcdir)/fixincl.sh ../fixinc.sh ; fi\n+\tchmod 755 ../fixinc.sh"}]}