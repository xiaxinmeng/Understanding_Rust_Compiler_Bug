{"sha": "d632dee9cb93ec0e45e070207046742019464d55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYzMmRlZTljYjkzZWMwZTQ1ZTA3MDIwNzA0Njc0MjAxOTQ2NGQ1NQ==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2002-08-26T21:17:20Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2002-08-26T21:17:20Z"}, "message": "objc-act.c (get_super_receiver): If inside a class method of a category...\n\n[gcc]\n2002-08-26  Ziemowit Laski <zlaski@apple.com>\n\n        * objc/objc-act.c (get_super_receiver): If inside a class method\n        of a category, cast the receiver to 'id' before accessing the 'isa'\n        field so that <objc/objc-class.h> is not needed.  For NeXT runtime.\n\n[gcc/testsuite]\n2002-08-26  Ziemowit Laski  <zlaski@apple.com>\n\n        * objc.dg/super-class-2.m: New test.\n\nFrom-SVN: r56587", "tree": {"sha": "3388479481cefd3623d402e7f48a82fd69547159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3388479481cefd3623d402e7f48a82fd69547159"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d632dee9cb93ec0e45e070207046742019464d55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d632dee9cb93ec0e45e070207046742019464d55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d632dee9cb93ec0e45e070207046742019464d55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d632dee9cb93ec0e45e070207046742019464d55/comments", "author": null, "committer": null, "parents": [{"sha": "c3cc6b78a1487e9c05be9770f811b79706318867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cc6b78a1487e9c05be9770f811b79706318867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3cc6b78a1487e9c05be9770f811b79706318867"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "4783fea3a840d927c3d3fefe61183a6d6febe2b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d632dee9cb93ec0e45e070207046742019464d55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d632dee9cb93ec0e45e070207046742019464d55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d632dee9cb93ec0e45e070207046742019464d55", "patch": "@@ -1,3 +1,9 @@\n+2002-08-26  Ziemowit Laski <zlaski@apple.com>\n+\n+\t* objc/objc-act.c (get_super_receiver): If inside a class method\n+\tof a category, cast the receiver to 'id' before accessing the 'isa'\n+\tfield so that <objc/objc-class.h> is not needed.  For NeXT runtime.\n+\n 2002-08-26  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390-protos.h (s390_function_prologue, "}, {"sha": "0819369136995bd1dcf3ff58cd1d338b4696c459", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d632dee9cb93ec0e45e070207046742019464d55/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d632dee9cb93ec0e45e070207046742019464d55/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d632dee9cb93ec0e45e070207046742019464d55", "patch": "@@ -7042,9 +7042,13 @@ get_super_receiver ()\n \t    {\n \t      super_class = get_class_reference (super_name);\n \t      if (TREE_CODE (objc_method_context) == CLASS_METHOD_DECL)\n+\t\t/* Cast the super class to 'id', since the user may not have\n+\t\t   included <objc/objc-class.h>, leaving 'struct objc_class'\n+\t\t   an incomplete type.  */\n \t\tsuper_class\n-\t\t  = build_component_ref (build_indirect_ref (super_class, \"->\"),\n-\t\t\t\t\t get_identifier (\"isa\"));\n+\t\t  = build_component_ref (build_indirect_ref \n+\t\t\t\t\t (build_c_cast (id_type, super_class), \"->\"),\n+\t\t\t\t\t  get_identifier (\"isa\"));\n \t    }\n \t  else\n \t    {"}, {"sha": "496fc950a9dcbe24dea25383744d13be894e04ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d632dee9cb93ec0e45e070207046742019464d55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d632dee9cb93ec0e45e070207046742019464d55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d632dee9cb93ec0e45e070207046742019464d55", "patch": "@@ -1,3 +1,7 @@\n+2002-08-26  Ziemowit Laski  <zlaski@apple.com>\n+\n+        * objc.dg/super-class-2.m: New test.\n+\n 2002-08-24  Matt Austern  <austern@apple.com>\n \n \t* g++.dg/ext/lvaddr.C: New test."}, {"sha": "15d018e7db806e27c342ecd4db33da3453bc8074", "filename": "gcc/testsuite/objc.dg/super-class-2.m", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d632dee9cb93ec0e45e070207046742019464d55/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d632dee9cb93ec0e45e070207046742019464d55/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-2.m?ref=d632dee9cb93ec0e45e070207046742019464d55", "patch": "@@ -0,0 +1,45 @@\n+/* Test calling super from within a category class method.  */\n+/* Author: Ziemowit Laski <zlaski@apple.com>  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fnext-runtime\" } */\n+\n+typedef struct objc_object { struct objc_class *isa; } *id;\n+\n+@interface NSObject\n++ (int) test_func0;\n+@end\n+@interface NSMenuItem: NSObject\n++ (int) test_func0;\n+@end\n+\n+@implementation NSObject\n++ (int) test_func0\n+{}\n+@end\n+\n+@implementation NSMenuItem\n++ (int) test_func0\n+{\n+  return [super test_func0];\n+}\n+@end\n+\n+@interface NSObject (Test)\n++ (int) test_func;\n+@end\n+\n+@implementation NSObject (Test)\n++ (int) test_func\n+{}\n+@end\n+\n+@interface NSMenuItem (Test)\n++ (int) test_func;\n+@end\n+\n+@implementation NSMenuItem (Test)\n++ (int) test_func\n+{\n+   return [super test_func];  /* { dg-bogus \"dereferencing pointer to incomplete type\" } */\n+}\n+@end"}]}