{"sha": "43660e0b3a22e65b7ad01521748d10e71fab050e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2NjBlMGIzYTIyZTY1YjdhZDAxNTIxNzQ4ZDEwZTcxZmFiMDUwZQ==", "commit": {"author": {"name": "Hariharan Sandanagobalane", "email": "hariharan@picochip.com", "date": "2011-05-26T12:21:11Z"}, "committer": {"name": "Hariharan Sandanagobalane", "email": "hariharans@gcc.gnu.org", "date": "2011-05-26T12:21:11Z"}, "message": "picochip.md (cbranchhi4): No :CC for match_operator.\n\n        * config/picochip/picochip.md (cbranchhi4): No :CC for match_operator.\n          The instruction is then expanded explicitly. \n        (supported_compare): Callable instruction.\n        (compare): Likewise.\n\nFrom-SVN: r174277", "tree": {"sha": "6ff85ede561c3b0b2e8ea79e8b458f5675369190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ff85ede561c3b0b2e8ea79e8b458f5675369190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43660e0b3a22e65b7ad01521748d10e71fab050e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43660e0b3a22e65b7ad01521748d10e71fab050e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43660e0b3a22e65b7ad01521748d10e71fab050e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43660e0b3a22e65b7ad01521748d10e71fab050e/comments", "author": null, "committer": null, "parents": [{"sha": "7f344fab181be3a4d75bbcf33ad98309ef5dd9eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f344fab181be3a4d75bbcf33ad98309ef5dd9eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f344fab181be3a4d75bbcf33ad98309ef5dd9eb"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "5670f01330735d3da6bf08fa6acc6abbbe70bd47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43660e0b3a22e65b7ad01521748d10e71fab050e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43660e0b3a22e65b7ad01521748d10e71fab050e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43660e0b3a22e65b7ad01521748d10e71fab050e", "patch": "@@ -1,3 +1,10 @@\n+2011-05-26  Hariharan Sandanagobalane <hariharan@picochip.com>\n+\n+\t* config/picochip/picochip.md (cbranchhi4): No :CC for match_operator.\n+\t  The instruction is then expanded explicitly.\n+\t(supported_compare): Callable instruction.\n+\t(compare): Likewise.\n+\n 2011-05-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/49165"}, {"sha": "4e0556443bd2b9ac3ad19259d4a44d981ce1ab8c", "filename": "gcc/config/picochip/picochip.md", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43660e0b3a22e65b7ad01521748d10e71fab050e/gcc%2Fconfig%2Fpicochip%2Fpicochip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43660e0b3a22e65b7ad01521748d10e71fab050e/gcc%2Fconfig%2Fpicochip%2Fpicochip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.md?ref=43660e0b3a22e65b7ad01521748d10e71fab050e", "patch": "@@ -551,7 +551,7 @@\n (define_insn_and_split \"cbranchhi4\"\n   [(set (pc)\n         (if_then_else\n-            (match_operator:CC 0 \"ordered_comparison_operator\"\n+            (match_operator 0 \"ordered_comparison_operator\"\n                             [(match_operand:HI 1 \"register_operand\" \"r\")\n                              (match_operand:HI 2 \"picochip_comparison_operand\" \"ri\")])\n             (label_ref       (match_operand    3 \"\" \"\"))\n@@ -561,14 +561,15 @@\n   \"* return picochip_output_cbranch(operands);\"\n   \"reload_completed\n    && (picochip_schedule_type != DFA_TYPE_NONE || flag_delayed_branch)\"\n-  [(set (reg:CC CC_REGNUM) (match_dup 0))\n-   (parallel [(set (pc)\n-                   (if_then_else (match_op_dup:HI 0 [(reg:CC CC_REGNUM) (const_int 0)])\n-                                 (label_ref (match_dup 3))\n-                                 (pc)))\n-              (use (match_dup 4))])]\n+  [(const_int 0)]\n   \"{\n-     operands[4] = GEN_INT(GET_CODE(operands[0]));\n+     rtx const_int_opnd;\n+     const_int_opnd = GEN_INT(GET_CODE(operands[0]));\n+     if (picochip_supported_comparison_operator (operands[0], HImode))\n+       emit_insn (gen_supported_compare (operands[0], operands[1], operands[2]));\n+     else\n+       emit_insn (gen_compare (operands[0], operands[1], operands[2]));\n+     emit_jump_insn (gen_branch (operands[3], const_int_opnd, operands[0]));\n    }\")\n \n ;; The only difference between this and the next pattern is that the next pattern\n@@ -577,7 +578,7 @@\n ;; comparison operator and hence this pattern assumes that the second constraint combo\n ;; would still generate a normal instruction.\n \n-(define_insn \"*supported_compare\"\n+(define_insn \"supported_compare\"\n   [(set (reg:CC CC_REGNUM)\n         (match_operator:CC 0 \"picochip_supported_comparison_operator\"\n                         [(match_operand:HI 1 \"register_operand\" \"r,r,r\")\n@@ -607,7 +608,7 @@\n    (set_attr \"length\" \"2,2,4\")\n    ])\n \n-(define_insn \"*compare\"\n+(define_insn \"compare\"\n   [(set (reg:CC CC_REGNUM)\n         (match_operator:CC 0 \"comparison_operator\"\n                         [(match_operand:HI 1 \"register_operand\" \"r,r,r\")"}]}