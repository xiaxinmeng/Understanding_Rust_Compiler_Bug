{"sha": "908c4e83161c7166e0d86864b88d29115b003c5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA4YzRlODMxNjFjNzE2NmUwZDg2ODY0Yjg4ZDI5MTE1YjAwM2M1YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-04-05T12:34:20Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-04-05T12:34:20Z"}, "message": "class.c (maybe_fixup_vptrs): Remove declaration.\n\n\t* class.c (maybe_fixup_vptrs): Remove declaration.\n\t(build_class_init_list): Likewise.\n\t* decl.c (pushdecl_class_level): Call check_template_shadow here\n\t...\n\t(push_class_level_binding): ... not here.\n\t* search.c (dfs_push_type_decls): Only avoid\n\ttemplate-self-reference TYPE_DECLs if they are from base classes.\n\nFrom-SVN: r26202", "tree": {"sha": "381160cbe87945a2d68fddb5e59d42f2fd66730b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/381160cbe87945a2d68fddb5e59d42f2fd66730b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/908c4e83161c7166e0d86864b88d29115b003c5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/908c4e83161c7166e0d86864b88d29115b003c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/908c4e83161c7166e0d86864b88d29115b003c5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/908c4e83161c7166e0d86864b88d29115b003c5a/comments", "author": null, "committer": null, "parents": [{"sha": "d4370213f65e9ebaab7b912ff9de84122e530a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4370213f65e9ebaab7b912ff9de84122e530a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4370213f65e9ebaab7b912ff9de84122e530a23"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "0e3c6fe0d9dc16e6c3b9cc596ee86c4a71c2defd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=908c4e83161c7166e0d86864b88d29115b003c5a", "patch": "@@ -1,3 +1,13 @@\n+1999-04-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* class.c (maybe_fixup_vptrs): Remove declaration.\n+\t(build_class_init_list): Likewise.\n+\t* decl.c (pushdecl_class_level): Call check_template_shadow here\n+\t... \n+\t(push_class_level_binding): ... not here.\n+\t* search.c (dfs_push_type_decls): Only avoid\n+\ttemplate-self-reference TYPE_DECLs if they are from base classes.\n+\n 1999-04-04  Mark Mitchell  <mark@codesourcery.com>\n \n \t* pt.c (check_template_shadow): Don't treat OVERLOADs as _DECL"}, {"sha": "6b7b98a3aa998599166a03a4f7e8ab35fb0b4792", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=908c4e83161c7166e0d86864b88d29115b003c5a", "patch": "@@ -121,7 +121,6 @@ static void merge_overrides PROTO((tree, tree, int, tree));\n static void override_one_vtable PROTO((tree, tree, tree));\n static void mark_overriders PROTO((tree, tree));\n static void check_for_override PROTO((tree, tree));\n-static tree maybe_fixup_vptrs PROTO((tree, tree, tree));\n static tree get_class_offset_1 PROTO((tree, tree, tree, tree, tree));\n static tree get_class_offset PROTO((tree, tree, tree, tree));\n static void modify_one_vtable PROTO((tree, tree, tree, tree));\n@@ -130,7 +129,6 @@ static void modify_all_direct_vtables PROTO((tree, int, tree, tree,\n \t\t\t\t\t     tree));\n static void modify_all_indirect_vtables PROTO((tree, int, int, tree,\n \t\t\t\t\t       tree, tree));\n-static void build_class_init_list PROTO((tree));\n static int finish_base_struct PROTO((tree, struct base_info *));\n static void finish_struct_methods PROTO((tree));\n static void maybe_warn_about_overly_private_class PROTO ((tree));"}, {"sha": "0372daedbfc145d984f5535e54764bf93b631903", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=908c4e83161c7166e0d86864b88d29115b003c5a", "patch": "@@ -4159,9 +4159,6 @@ pushdecl_class_level (x)\n \n   if (name)\n     {\n-      if (TYPE_BEING_DEFINED (current_class_type))\n-\tcheck_template_shadow (x);\n-\n       push_class_level_binding (name, x);\n       if (TREE_CODE (x) == TYPE_DECL)\n \tset_identifier_type_value (name, TREE_TYPE (x));\n@@ -4214,6 +4211,11 @@ push_class_level_binding (name, x)\n   if (!class_binding_level)\n     return;\n \n+  /* Make sure that this new member does not have the same name\n+     as a template parameter.  */\n+  if (TYPE_BEING_DEFINED (current_class_type))\n+    check_template_shadow (x);\n+\n   /* If this declaration shadows a declaration from an enclosing\n      class, then we will need to restore IDENTIFIER_CLASS_VALUE when\n      we leave this class.  Record the shadowed declaration here.  */"}, {"sha": "99e25a84a15e9184d27c07d696aa06f6dab95df3", "filename": "gcc/cp/search.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=908c4e83161c7166e0d86864b88d29115b003c5a", "patch": "@@ -2943,7 +2943,8 @@ dfs_push_type_decls (binfo, data)\n   type = BINFO_TYPE (binfo);\n   for (fields = TYPE_FIELDS (type); fields; fields = TREE_CHAIN (fields))\n     if (DECL_NAME (fields) && TREE_CODE (fields) == TYPE_DECL\n-\t&& !template_self_reference_p (type, fields))\n+\t&& !(!same_type_p (type, current_class_type)\n+\t     && template_self_reference_p (type, fields)))\n       setup_class_bindings (DECL_NAME (fields), /*type_binding_p=*/1);\n \n   /* We can't just use BINFO_MARKED because envelope_add_decl uses"}, {"sha": "f7b737e69151b3d612ccba6d251e738aa1ef95fd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/parse2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fparse2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fparse2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fparse2.C?ref=908c4e83161c7166e0d86864b88d29115b003c5a", "patch": "@@ -0,0 +1,8 @@\n+// Build don't link:\n+// Origin: Jason Merrill <jason@cygnus.com>\n+\n+template <class T> struct A {\n+  A (const A&) { }\n+};\n+\n+template A<int>::A (const A&);"}, {"sha": "452e8ca63b953001b37970c6ba4c4562d540e0f3", "filename": "gcc/testsuite/g++.old-deja/g++.pt/shadow2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fshadow2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908c4e83161c7166e0d86864b88d29115b003c5a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fshadow2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fshadow2.C?ref=908c4e83161c7166e0d86864b88d29115b003c5a", "patch": "@@ -0,0 +1,10 @@\n+// Build don't link:\n+// Origin: Jason Merrill <jason@cygnus.com>\n+\n+template <class T> struct A { // ERROR - shadowed parameter\n+  struct B {\n+    void T(); // ERROR - shadows template parameter\n+  };\n+};\n+A<int> a;\n+"}]}