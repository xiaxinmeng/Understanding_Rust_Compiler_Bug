{"sha": "66907e739959ff85490f1711cfd06fdf1e946945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY5MDdlNzM5OTU5ZmY4NTQ5MGYxNzExY2ZkMDZmZGYxZTk0Njk0NQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-07-14T01:25:54Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-07-14T01:25:54Z"}, "message": "adjust landing pads when changing main label\n\nIf an artificial label created for a landing pad ends up being\ndropped in favor of a user-supplied label, the user-supplied label\ninherits the landing pad index, but the post_landing_pad field is not\nadjusted to point to the new label.\n\nThis patch fixes the problem, and adds verification that we don't\nremove a label that's still used as a landing pad.\n\nThe circumstance in which this problem can be hit was unusual: removal\nof a block with an unreachable label moves the label to some other\nunrelated block, in case its address is taken.  In the case at hand\n(pr42739.C, complicated by wrappers and cleanups), the chosen block\nhappened to be an EH landing pad.  (A followup patch will change that.)\n\n\nfor  gcc/ChangeLog\n\n\t* tree-cfg.c (cleanup_dead_labels_eh): Update\n\tpost_landing_pad label upon change of landing pad block's\n\tprimary label.\n\t(cleanup_dead_labels): Check that a removed label is not that\n\tof a landing pad.", "tree": {"sha": "079ba47d7560f6e184eba683e26294234e60043f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/079ba47d7560f6e184eba683e26294234e60043f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66907e739959ff85490f1711cfd06fdf1e946945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66907e739959ff85490f1711cfd06fdf1e946945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66907e739959ff85490f1711cfd06fdf1e946945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66907e739959ff85490f1711cfd06fdf1e946945/comments", "author": null, "committer": null, "parents": [{"sha": "0e7754560f694b4e702baebdc481f6b0e82f7b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e7754560f694b4e702baebdc481f6b0e82f7b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e7754560f694b4e702baebdc481f6b0e82f7b14"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "1f0f4a2c6eb2c8229d46a3881c658046d67eeaf1", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66907e739959ff85490f1711cfd06fdf1e946945/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66907e739959ff85490f1711cfd06fdf1e946945/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=66907e739959ff85490f1711cfd06fdf1e946945", "patch": "@@ -1481,6 +1481,7 @@ cleanup_dead_labels_eh (label_record *label_for_bb)\n \tif (lab != lp->post_landing_pad)\n \t  {\n \t    EH_LANDING_PAD_NR (lp->post_landing_pad) = 0;\n+\t    lp->post_landing_pad = lab;\n \t    EH_LANDING_PAD_NR (lab) = lp->index;\n \t  }\n       }\n@@ -1707,7 +1708,10 @@ cleanup_dead_labels (void)\n \t      || FORCED_LABEL (label))\n \t    gsi_next (&i);\n \t  else\n-\t    gsi_remove (&i, true);\n+\t    {\n+\t      gcc_checking_assert (EH_LANDING_PAD_NR (label) == 0);\n+\t      gsi_remove (&i, true);\n+\t    }\n \t}\n     }\n "}]}