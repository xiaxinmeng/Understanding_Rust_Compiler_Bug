{"sha": "11e3f4b6f733c96148bea5747f793f020f4aeadb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFlM2Y0YjZmNzMzYzk2MTQ4YmVhNTc0N2Y3OTNmMDIwZjRhZWFkYg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-10-04T13:39:17Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-10-04T13:39:17Z"}, "message": "re PR middle-end/23125 (OpenBSD's zic.c causes g++ but not gcc to segfault)\n\n2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/23125\n        * decl.c (make_rtl_for_nonlocal_decl): Use set_user_assembler_name\n        instead of change_decl_assembler_name.\n2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/23125\n        * c-decl.c (finish_decl): Use set_user_assembler_name even for\n        register variables.\n        * varasm.c (make_decl_rtl): If a register variable does not\n        have a set user assmbler name, error out.\n        Decode the asmspec is now name+1 bypassing '*'.\n2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/23125\n        * gcc.dg/register-var-3.c: New test.\n\nFrom-SVN: r104942", "tree": {"sha": "106e20fbf3e5761d186df10f3b57e6e715d3c4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/106e20fbf3e5761d186df10f3b57e6e715d3c4b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11e3f4b6f733c96148bea5747f793f020f4aeadb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e3f4b6f733c96148bea5747f793f020f4aeadb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11e3f4b6f733c96148bea5747f793f020f4aeadb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e3f4b6f733c96148bea5747f793f020f4aeadb/comments", "author": null, "committer": null, "parents": [{"sha": "46fbb29c2ee1a905f9cad8b5004ff79fcf82bfeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46fbb29c2ee1a905f9cad8b5004ff79fcf82bfeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46fbb29c2ee1a905f9cad8b5004ff79fcf82bfeb"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "a0c8dcc8dfcdc8add57ba26f792d3077615fac48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -1,4 +1,13 @@\n-2005-10-05  Steven Bosscher  <stevenb@suse.de>\n+2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/23125\n+\t* c-decl.c (finish_decl): Use set_user_assembler_name even for\n+\tregister variables.\n+\t* varasm.c (make_decl_rtl): If a register variable does not\n+\thave a set user assmbler name, error out.\n+\tDecode the asmspec is now name+1 bypassing '*'.\n+\n+2005-10-04  Steven Bosscher  <stevenb@suse.de>\n \n \tPR tree-optimization/23049\n \t* tree-ssa-dom.c (thread_across_edge): Make sure that the condition"}, {"sha": "1caf0b901bc2428c0b1724e2541a16141cb80399", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -3426,8 +3426,6 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n \t      && !TREE_STATIC (decl))\n \t    warning (0, \"ignoring asm-specifier for non-static local \"\n \t\t     \"variable %q+D\", decl);\n-\t  else if (C_DECL_REGISTER (decl))\n-\t    change_decl_assembler_name (decl, get_identifier (asmspec));\n \t  else\n \t    set_user_assembler_name (decl, asmspec);\n \t}"}, {"sha": "c42ec9eb91b0a6b551207dd593c616b1e7c3a1e2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -1,3 +1,9 @@\n+2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/23125\n+\t* decl.c (make_rtl_for_nonlocal_decl): Use set_user_assembler_name\n+\tinstead of change_decl_assembler_name.\n+\n 2005-10-03  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* error.c (dump_type) <UNKNOWN_TYPE>: Print reworded message."}, {"sha": "1bca147a7742861a64920586998ff5d8c946523f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -4661,7 +4661,7 @@ make_rtl_for_nonlocal_decl (tree decl, tree init, const char* asmspec)\n \t placed in a particular register.  */\n       if (TREE_CODE (decl) == VAR_DECL && DECL_REGISTER (decl))\n \t{\n-\t  change_decl_assembler_name (decl, get_identifier (asmspec));\n+\t  set_user_assembler_name (decl, asmspec);\n \t  DECL_HARD_REGISTER (decl) = 1;\n \t}\n       else"}, {"sha": "1eb0c21a4428b4d178d16a9d47d3af752908ae7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -1,4 +1,9 @@\n-2005-10-05  Steven Bosscher  <stevenb@suse.de>\n+2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/23125\n+\t* gcc.dg/register-var-3.c: New test.\n+\n+2005-10-04  Steven Bosscher  <stevenb@suse.de>\n \n \t* gcc.dg/pr23049.c: New test.\n "}, {"sha": "dc659f57f8b32e0dc67a8efd8fd1dfa8cbe2f58f", "filename": "gcc/testsuite/gcc.dg/register-var-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Ftestsuite%2Fgcc.dg%2Fregister-var-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Ftestsuite%2Fgcc.dg%2Fregister-var-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fregister-var-3.c?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-options \"\" } */\n+/* { dg-do compile } */\n+register int r0; /* { dg-error \"register name not specified\" } */\n+register int bp; /* { dg-error \"register name not specified\" } */\n+register int sp; /* { dg-error \"register name not specified\" } */\n+register int r30; /* { dg-error \"register name not specified\" } */\n+register int toc; /* { dg-error \"register name not specified\" } */\n+register int d0; /* { dg-error \"register name not specified\" } */\n+register int a0; /* { dg-error \"register name not specified\" } */"}, {"sha": "f21c4b981ddf5bb9fa677737a8f48ed05f9f5c5f", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e3f4b6f733c96148bea5747f793f020f4aeadb/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=11e3f4b6f733c96148bea5747f793f020f4aeadb", "patch": "@@ -923,10 +923,16 @@ make_decl_rtl (tree decl)\n     }\n \n   name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n-\n-  if (TREE_CODE (decl) != FUNCTION_DECL && DECL_REGISTER (decl))\n+  \n+  if (name[0] != '*' && TREE_CODE (decl) != FUNCTION_DECL\n+      && DECL_REGISTER (decl))\n+    {\n+      error (\"register name not specified for %q+D\", decl);\t\n+    }\n+  else if (TREE_CODE (decl) != FUNCTION_DECL && DECL_REGISTER (decl))\n     {\n-      reg_number = decode_reg_name (name);\n+      const char *asmspec = name+1;\n+      reg_number = decode_reg_name (asmspec);\n       /* First detect errors in declaring global registers.  */\n       if (reg_number == -1)\n \terror (\"register name not specified for %q+D\", decl);"}]}