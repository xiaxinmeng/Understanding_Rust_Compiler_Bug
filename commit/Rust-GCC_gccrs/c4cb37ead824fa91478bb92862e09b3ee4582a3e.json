{"sha": "c4cb37ead824fa91478bb92862e09b3ee4582a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRjYjM3ZWFkODI0ZmE5MTQ3OGJiOTI4NjJlMDliM2VlNDU4MmEzZQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-11-18T19:00:32Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-11-18T19:00:32Z"}, "message": "URLClassLoader.java: Whitespace cleanup.\n\n2004-11-18  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/URLClassLoader.java: Whitespace cleanup.\n\nFrom-SVN: r90877", "tree": {"sha": "8f06b1ee077416e54bef712351d3e4a6da209618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f06b1ee077416e54bef712351d3e4a6da209618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4cb37ead824fa91478bb92862e09b3ee4582a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cb37ead824fa91478bb92862e09b3ee4582a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4cb37ead824fa91478bb92862e09b3ee4582a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cb37ead824fa91478bb92862e09b3ee4582a3e/comments", "author": null, "committer": null, "parents": [{"sha": "fbddd18f63fb52307ed5758c27d6b783e1c516d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbddd18f63fb52307ed5758c27d6b783e1c516d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbddd18f63fb52307ed5758c27d6b783e1c516d3"}], "stats": {"total": 346, "additions": 176, "deletions": 170}, "files": [{"sha": "09f4c6620817f537a252fbc516877c47fc36aa27", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cb37ead824fa91478bb92862e09b3ee4582a3e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cb37ead824fa91478bb92862e09b3ee4582a3e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c4cb37ead824fa91478bb92862e09b3ee4582a3e", "patch": "@@ -1,3 +1,7 @@\n+2004-11-18  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/URLClassLoader.java: Whitespace cleanup.\n+\n 2004-11-18  Robert Schuster <address@bogus.example.com>\n \n \tComplete 1.4 support"}, {"sha": "4ffd4c532db49a3646fcd233737f07e684d81af3", "filename": "libjava/java/net/URLClassLoader.java", "status": "modified", "additions": 172, "deletions": 170, "changes": 342, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cb37ead824fa91478bb92862e09b3ee4582a3e/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cb37ead824fa91478bb92862e09b3ee4582a3e/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=c4cb37ead824fa91478bb92862e09b3ee4582a3e", "patch": "@@ -35,6 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.net;\n \n import java.io.ByteArrayOutputStream;\n@@ -248,9 +249,9 @@ CodeSource getCodeSource()\n     {\n       Certificate[] certs = getCertificates();\n       if (certs == null)\n-\treturn loader.noCertCodeSource;\n+        return loader.noCertCodeSource;\n       else\n-\treturn new CodeSource(loader.baseURL, certs);\n+        return new CodeSource(loader.baseURL, certs);\n     }\n \n     /**\n@@ -305,15 +306,15 @@ public JarURLLoader(URLClassLoader classloader, URL baseURL)\n       JarFile jarfile = null;\n       try\n         {\n-\t  baseJarURL =\n-\t    new URL(null, jarURL, classloader.getURLStreamHandler(\"jar\"));\n+          baseJarURL =\n+            new URL(null, jarURL, classloader.getURLStreamHandler(\"jar\"));\n \n-\t  jarfile =\n-\t    ((JarURLConnection) baseJarURL.openConnection()).getJarFile();\n+          jarfile =\n+            ((JarURLConnection) baseJarURL.openConnection()).getJarFile();\n         }\n       catch (IOException ioe)\n         {\n-\t  /* ignored */\n+          /* ignored */\n         }\n \n       this.baseJarURL = baseJarURL;\n@@ -324,27 +325,27 @@ public JarURLLoader(URLClassLoader classloader, URL baseURL)\n     Resource getResource(String name)\n     {\n       if (jarfile == null)\n-\treturn null;\n+        return null;\n \n       if (name.startsWith(\"/\"))\n-\tname = name.substring(1);\n+        name = name.substring(1);\n \n       JarEntry je = jarfile.getJarEntry(name);\n       if (je != null)\n-\treturn new JarURLResource(this, name, je);\n+        return new JarURLResource(this, name, je);\n       else\n-\treturn null;\n+        return null;\n     }\n \n     Manifest getManifest()\n     {\n       try\n         {\n-\t  return (jarfile == null) ? null : jarfile.getManifest();\n+          return (jarfile == null) ? null : jarfile.getManifest();\n         }\n       catch (IOException ioe)\n         {\n-\t  return null;\n+          return null;\n         }\n     }\n   }\n@@ -378,14 +379,14 @@ URL getURL()\n     {\n       try\n         {\n-\t  return new URL(((JarURLLoader) loader).baseJarURL, name,\n-\t                 loader.classloader.getURLStreamHandler(\"jar\"));\n+          return new URL(((JarURLLoader) loader).baseJarURL, name,\n+                         loader.classloader.getURLStreamHandler(\"jar\"));\n         }\n       catch (MalformedURLException e)\n         {\n-\t  InternalError ie = new InternalError();\n-\t  ie.initCause(e);\n-\t  throw ie;\n+          InternalError ie = new InternalError();\n+          ie.initCause(e);\n+          throw ie;\n         }\n     }\n   }\n@@ -411,32 +412,32 @@ Resource getResource(String name)\n     {\n       try\n         {\n-\t  URL url =\n-\t    new URL(baseURL, name, classloader.getURLStreamHandler(protocol));\n-\t  URLConnection connection = url.openConnection();\n-\n-\t  // Open the connection and check the stream\n-\t  // just to be sure it exists.\n-\t  int length = connection.getContentLength();\n-\t  InputStream stream = connection.getInputStream();\n-\n-\t  // We can do some extra checking if it is a http request\n-\t  if (connection instanceof HttpURLConnection)\n-\t    {\n-\t      int response =\n-\t\t((HttpURLConnection) connection).getResponseCode();\n-\t      if (response / 100 != 2)\n-\t\treturn null;\n-\t    }\n-\n-\t  if (stream != null)\n-\t    return new RemoteResource(this, name, url, stream, length);\n-\t  else\n-\t    return null;\n+          URL url =\n+            new URL(baseURL, name, classloader.getURLStreamHandler(protocol));\n+          URLConnection connection = url.openConnection();\n+\n+          // Open the connection and check the stream\n+          // just to be sure it exists.\n+          int length = connection.getContentLength();\n+          InputStream stream = connection.getInputStream();\n+\n+          // We can do some extra checking if it is a http request\n+          if (connection instanceof HttpURLConnection)\n+            {\n+              int response =\n+                ((HttpURLConnection) connection).getResponseCode();\n+              if (response / 100 != 2)\n+                return null;\n+            }\n+\n+          if (stream != null)\n+            return new RemoteResource(this, name, url, stream, length);\n+          else\n+            return null;\n         }\n       catch (IOException ioe)\n         {\n-\t  return null;\n+          return null;\n         }\n     }\n   }\n@@ -551,7 +552,7 @@ Resource getResource(String name)\n     {\n       File file = new File(dir, name);\n       if (file.exists() && ! file.isDirectory())\n-\treturn new FileResource(this, name, file);\n+        return new FileResource(this, name, file);\n       return null;\n     }\n   }\n@@ -580,14 +581,14 @@ public URL getURL()\n     {\n       try\n         {\n-\t  return new URL(loader.baseURL, name,\n-\t                 loader.classloader.getURLStreamHandler(\"file\"));\n+          return new URL(loader.baseURL, name,\n+                         loader.classloader.getURLStreamHandler(\"file\"));\n         }\n       catch (MalformedURLException e)\n         {\n-\t  InternalError ie = new InternalError();\n-\t  ie.initCause(e);\n-\t  throw ie;\n+          InternalError ie = new InternalError();\n+          ie.initCause(e);\n+          throw ie;\n         }\n     }\n   }\n@@ -711,12 +712,12 @@ public URLClassLoader(URL[] urls, ClassLoader parent,\n     addURLs(urls);\n \n     // If this factory is still not in factoryCache, add it,\n-    //   since we only support three protocols so far, 5 is enough \n+    //   since we only support three protocols so far, 5 is enough\n     //   for cache initial size\n     synchronized (factoryCache)\n       {\n-\tif (factory != null && factoryCache.get(factory) == null)\n-\t  factoryCache.put(factory, new HashMap(5));\n+        if (factory != null && factoryCache.get(factory) == null)\n+          factoryCache.put(factory, new HashMap(5));\n       }\n   }\n \n@@ -735,32 +736,33 @@ private void addURLImpl(URL newUrl)\n   {\n     synchronized (urlloaders)\n       {\n-\tif (newUrl == null)\n-\t  return; // Silently ignore...\n-\n-\t// Check global cache to see if there're already url loader\n-\t// for this url.\n-\tURLLoader loader = (URLLoader) urlloaders.get(newUrl);\n-\tif (loader == null)\n-\t  {\n-\t    String file = newUrl.getFile();\n-\t    String protocol = newUrl.getProtocol();\n-\t    // Check that it is not a directory\n+        if (newUrl == null)\n+          return; // Silently ignore...\n+\n+        // Check global cache to see if there're already url loader\n+        // for this url.\n+        URLLoader loader = (URLLoader) urlloaders.get(newUrl);\n+        if (loader == null)\n+          {\n+            String file = newUrl.getFile();\n+            String protocol = newUrl.getProtocol();\n+\n+            // Check that it is not a directory\n \t    if (\"gcjlib\".equals(protocol))\n \t      loader = new SoURLLoader(this, newUrl);\n \t    else if (! (file.endsWith(\"/\") || file.endsWith(File.separator)))\n-\t      loader = new JarURLLoader(this, newUrl);\n-\t    else if (\"file\".equals(protocol))\n-\t      loader = new FileURLLoader(this, newUrl);\n-\t    else\n-\t      loader = new RemoteURLLoader(this, newUrl);\n-\n-\t    // Cache it.\n-\t    urlloaders.put(newUrl, loader);\n-\t  }\n-\n-\turls.add(newUrl);\n-\turlinfos.add(loader);\n+              loader = new JarURLLoader(this, newUrl);\n+            else if (\"file\".equals(protocol))\n+              loader = new FileURLLoader(this, newUrl);\n+            else\n+              loader = new RemoteURLLoader(this, newUrl);\n+\n+            // Cache it.\n+            urlloaders.put(newUrl, loader);\n+          }\n+\n+        urls.add(newUrl);\n+        urlinfos.add(loader);\n       }\n   }\n \n@@ -849,8 +851,8 @@ protected Class findClass(final String className)\n     // construct the class (and watch out for those nasty IOExceptions)\n     try\n       {\n-\tbyte[] data;\n-\tInputStream in = resource.getInputStream();\n+        byte[] data;\n+        InputStream in = resource.getInputStream();\n \tint length = resource.getLength();\n \tif (length != -1)\n \t  {\n@@ -881,50 +883,50 @@ protected Class findClass(final String className)\n \t\t  out.write(b, 0, l);\n \t      }\n \t    data = out.toByteArray();\n-\t  }\n-\tfinal byte[] classData = data;\n-\n-\t// Now get the CodeSource\n-\tfinal CodeSource source = resource.getCodeSource();\n-\n-\t// Find out package name\n-\tString packageName = null;\n-\tint lastDot = className.lastIndexOf('.');\n-\tif (lastDot != -1)\n-\t  packageName = className.substring(0, lastDot);\n-\n-\tif (packageName != null && getPackage(packageName) == null)\n-\t  {\n-\t    // define the package\n-\t    Manifest manifest = resource.loader.getManifest();\n-\t    if (manifest == null)\n-\t      definePackage(packageName, null, null, null, null, null, null,\n-\t                    null);\n-\t    else\n-\t      definePackage(packageName, manifest, resource.loader.baseURL);\n-\t  }\n-\n-\t// And finally construct the class!\n-\tSecurityManager sm = System.getSecurityManager();\n-\tif (sm != null && securityContext != null)\n-\t  {\n+          }\n+        final byte[] classData = data;\n+\n+        // Now get the CodeSource\n+        final CodeSource source = resource.getCodeSource();\n+\n+        // Find out package name\n+        String packageName = null;\n+        int lastDot = className.lastIndexOf('.');\n+        if (lastDot != -1)\n+          packageName = className.substring(0, lastDot);\n+\n+        if (packageName != null && getPackage(packageName) == null)\n+          {\n+            // define the package\n+            Manifest manifest = resource.loader.getManifest();\n+            if (manifest == null)\n+              definePackage(packageName, null, null, null, null, null, null,\n+                            null);\n+            else\n+              definePackage(packageName, manifest, resource.loader.baseURL);\n+          }\n+\n+        // And finally construct the class!\n+        SecurityManager sm = System.getSecurityManager();\n+        if (sm != null && securityContext != null)\n+          {\n \t    return (Class)AccessController.doPrivileged\n-\t      (new PrivilegedAction()\n-\t\t{\n-\t\t  public Object run()\n-\t\t  {\n-\t\t    return defineClass(className, classData,\n-\t\t\t\t       0, classData.length,\n-\t\t\t\t       source);\n-\t\t  }\n-\t\t}, securityContext);\n-\t  }\n-\telse\n+              (new PrivilegedAction()\n+                {\n+                  public Object run()\n+                  {\n+                    return defineClass(className, classData,\n+                                       0, classData.length,\n+                                       source);\n+                  }\n+                }, securityContext);\n+          }\n+        else\n \t  return defineClass(className, classData, 0, classData.length, source);\n       }\n     catch (IOException ioe)\n       {\n-\tthrow new ClassNotFoundException(className, ioe);\n+        throw new ClassNotFoundException(className, ioe);\n       }\n   }\n \n@@ -940,13 +942,13 @@ private Resource findURLResource(String resourceName)\n     int max = urls.size();\n     for (int i = 0; i < max; i++)\n       {\n-\tURLLoader loader = (URLLoader) urlinfos.elementAt(i);\n-\tif (loader == null)\n-\t  continue;\n+        URLLoader loader = (URLLoader) urlinfos.elementAt(i);\n+        if (loader == null)\n+          continue;\n \n-\tResource resource = loader.getResource(resourceName);\n-\tif (resource != null)\n-\t  return resource;\n+        Resource resource = loader.getResource(resourceName);\n+        if (resource != null)\n+          return resource;\n       }\n     return null;\n   }\n@@ -982,15 +984,15 @@ URLStreamHandler getURLStreamHandler(String protocol)\n     URLStreamHandler handler;\n     synchronized (factoryCache)\n       {\n-\t// Check if there're handler for the same protocol in cache.\n-\tHashMap cache = (HashMap) factoryCache.get(factory);\n-\thandler = (URLStreamHandler) cache.get(protocol);\n-\tif (handler == null)\n-\t  {\n-\t    // Add it to cache.\n-\t    handler = factory.createURLStreamHandler(protocol);\n-\t    cache.put(protocol, handler);\n-\t  }\n+        // Check if there're handler for the same protocol in cache.\n+        HashMap cache = (HashMap) factoryCache.get(factory);\n+        handler = (URLStreamHandler) cache.get(protocol);\n+        if (handler == null)\n+          {\n+            // Add it to cache.\n+            handler = factory.createURLStreamHandler(protocol);\n+            cache.put(protocol, handler);\n+          }\n       }\n     return handler;\n   }\n@@ -1011,10 +1013,10 @@ public Enumeration findResources(String resourceName)\n     int max = urls.size();\n     for (int i = 0; i < max; i++)\n       {\n-\tURLLoader loader = (URLLoader) urlinfos.elementAt(i);\n-\tResource resource = loader.getResource(resourceName);\n-\tif (resource != null)\n-\t  resources.add(resource.getURL());\n+        URLLoader loader = (URLLoader) urlinfos.elementAt(i);\n+        Resource resource = loader.getResource(resourceName);\n+        if (resource != null)\n+          resources.add(resource.getURL());\n       }\n     return resources.elements();\n   }\n@@ -1051,28 +1053,28 @@ protected PermissionCollection getPermissions(CodeSource source)\n     String protocol = url.getProtocol();\n     if (protocol.equals(\"file\"))\n       {\n-\tString file = url.getFile();\n-\n-\t// If the file end in / it must be an directory.\n-\tif (file.endsWith(\"/\") || file.endsWith(File.separator))\n-\t  {\n-\t    // Grant permission to read everything in that directory and\n-\t    // all subdirectories.\n-\t    permissions.add(new FilePermission(file + \"-\", \"read\"));\n-\t  }\n-\telse\n-\t  {\n-\t    // It is a 'normal' file.\n-\t    // Grant permission to access that file.\n-\t    permissions.add(new FilePermission(file, \"read\"));\n-\t  }\n+        String file = url.getFile();\n+\n+        // If the file end in / it must be an directory.\n+        if (file.endsWith(\"/\") || file.endsWith(File.separator))\n+          {\n+            // Grant permission to read everything in that directory and\n+            // all subdirectories.\n+            permissions.add(new FilePermission(file + \"-\", \"read\"));\n+          }\n+        else\n+          {\n+            // It is a 'normal' file.\n+            // Grant permission to access that file.\n+            permissions.add(new FilePermission(file, \"read\"));\n+          }\n       }\n     else\n       {\n-\t// Grant permission to connect to and accept connections from host\n-\tString host = url.getHost();\n-\tif (host != null)\n-\t  permissions.add(new SocketPermission(host, \"connect,accept\"));\n+        // Grant permission to connect to and accept connections from host\n+        String host = url.getHost();\n+        if (host != null)\n+          permissions.add(new SocketPermission(host, \"connect,accept\"));\n       }\n \n     return permissions;\n@@ -1130,24 +1132,24 @@ public static URLClassLoader newInstance(URL[] urls, final ClassLoader parent)\n       return new URLClassLoader(urls, parent);\n     else\n       {\n-\tfinal Object securityContext = sm.getSecurityContext();\n-\n-\t// XXX - What to do with anything else then an AccessControlContext?\n-\tif (! (securityContext instanceof AccessControlContext))\n-\t  throw new SecurityException(\"securityContext must be AccessControlContext: \"\n-\t                              + securityContext);\n-\n-\tURLClassLoader loader =\n-\t  (URLClassLoader) AccessController.doPrivileged(new PrivilegedAction()\n-\t      {\n-\t\tpublic Object run()\n-\t\t{\n-\t\t  return new URLClassLoader(parent,\n-\t\t                            (AccessControlContext) securityContext);\n-\t\t}\n-\t      });\n-\tloader.addURLs(urls);\n-\treturn loader;\n+        final Object securityContext = sm.getSecurityContext();\n+\n+        // XXX - What to do with anything else then an AccessControlContext?\n+        if (! (securityContext instanceof AccessControlContext))\n+          throw new SecurityException(\"securityContext must be AccessControlContext: \"\n+                                      + securityContext);\n+\n+        URLClassLoader loader =\n+          (URLClassLoader) AccessController.doPrivileged(new PrivilegedAction()\n+              {\n+                public Object run()\n+                {\n+                  return new URLClassLoader(parent,\n+                                            (AccessControlContext) securityContext);\n+                }\n+              });\n+        loader.addURLs(urls);\n+        return loader;\n       }\n   }\n }"}]}