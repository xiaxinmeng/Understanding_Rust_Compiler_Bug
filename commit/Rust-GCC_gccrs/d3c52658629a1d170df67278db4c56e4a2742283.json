{"sha": "d3c52658629a1d170df67278db4c56e4a2742283", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNjNTI2NTg2MjlhMWQxNzBkZjY3Mjc4ZGI0YzU2ZTRhMjc0MjI4Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-01T23:43:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-01T23:43:19Z"}, "message": "re PR c/5304 (gcc-20011231 generates incorrect divmod code for chars)\n\n\tPR c/5304:\n\t* expmed.c (expand_mult_highpart): Use immed_double_const for wide_op1\n\tunconditionally.\n\n\t* gcc.c-torture/execute/20020201-1.c: New test.\n\nFrom-SVN: r49416", "tree": {"sha": "b34fdba5de42b6c55a7fb0e29cafe34e997bdf78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b34fdba5de42b6c55a7fb0e29cafe34e997bdf78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3c52658629a1d170df67278db4c56e4a2742283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3c52658629a1d170df67278db4c56e4a2742283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3c52658629a1d170df67278db4c56e4a2742283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3c52658629a1d170df67278db4c56e4a2742283/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02c5a3bd59e93557d9910c769d1c98100d84d6da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c5a3bd59e93557d9910c769d1c98100d84d6da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c5a3bd59e93557d9910c769d1c98100d84d6da"}], "stats": {"total": 62, "additions": 53, "deletions": 9}, "files": [{"sha": "1ba587485d8050695055948dd31601ef1b54a897", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3c52658629a1d170df67278db4c56e4a2742283", "patch": "@@ -1,3 +1,9 @@\n+2002-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/5304:\n+\t* expmed.c (expand_mult_highpart): Use immed_double_const for wide_op1\n+\tunconditionally.\n+\n 2002-02-01  Janis Johnson  <janis187@us.ibm.com>\n \n \t* cfganal.c: Include tm_p.h."}, {"sha": "a26ad0946a9e7f439d26bb41d466a4122d8483a2", "filename": "gcc/expmed.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=d3c52658629a1d170df67278db4c56e4a2742283", "patch": "@@ -2760,15 +2760,12 @@ expand_mult_highpart (mode, op0, cnst1, target, unsignedp, max_cost)\n \n   op1 = GEN_INT (trunc_int_for_mode (cnst1, mode));\n \n-  if (GET_MODE_BITSIZE (wider_mode) <= HOST_BITS_PER_INT)\n-    wide_op1 = op1;\n-  else\n-    wide_op1\n-      = immed_double_const (cnst1,\n-\t\t\t    (unsignedp\n-\t\t\t     ? (HOST_WIDE_INT) 0\n-\t\t\t     : -(cnst1 >> (HOST_BITS_PER_WIDE_INT - 1))),\n-\t\t\t    wider_mode);\n+  wide_op1\n+    = immed_double_const (cnst1,\n+\t\t\t  (unsignedp\n+\t\t\t   ? (HOST_WIDE_INT) 0\n+\t\t\t   : -(cnst1 >> (HOST_BITS_PER_WIDE_INT - 1))),\n+\t\t\t  wider_mode);\n \n   /* expand_mult handles constant multiplication of word_mode\n      or narrower.  It does a poor job for large modes.  */"}, {"sha": "1086bb10c1e0d22bc8e1aef65dc3613e5c079b2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3c52658629a1d170df67278db4c56e4a2742283", "patch": "@@ -1,3 +1,7 @@\n+2002-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20020201-1.c: New test.\n+\n 2002-02-01  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR target/5469"}, {"sha": "b15f2282573eaaf7a652ca8ddf0bda9ccf9e4952", "filename": "gcc/testsuite/gcc.c-torture/execute/20020201-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020201-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3c52658629a1d170df67278db4c56e4a2742283/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020201-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020201-1.c?ref=d3c52658629a1d170df67278db4c56e4a2742283", "patch": "@@ -0,0 +1,37 @@\n+/* Test whether division by constant works properly.  */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+unsigned char cx = 7;\n+unsigned short sx = 14;\n+unsigned int ix = 21;\n+unsigned long lx = 28;\n+unsigned long long Lx = 35;\n+\n+int\n+main ()\n+{\n+  unsigned char cy;\n+  unsigned short sy;\n+  unsigned int iy;\n+  unsigned long ly;\n+  unsigned long long Ly;\n+  \n+  cy = cx / 6; if (cy != 1) abort ();\n+  cy = cx % 6; if (cy != 1) abort ();\n+\n+  sy = sx / 6; if (sy != 2) abort ();\n+  sy = sx % 6; if (sy != 2) abort ();\n+\n+  iy = ix / 6; if (iy != 3) abort ();\n+  iy = ix % 6; if (iy != 3) abort ();\n+\n+  ly = lx / 6; if (ly != 4) abort ();\n+  ly = lx % 6; if (ly != 4) abort ();\n+\n+  Ly = Lx / 6; if (Ly != 5) abort ();\n+  Ly = Lx % 6; if (Ly != 5) abort ();\n+\n+  exit(0);\n+}"}]}