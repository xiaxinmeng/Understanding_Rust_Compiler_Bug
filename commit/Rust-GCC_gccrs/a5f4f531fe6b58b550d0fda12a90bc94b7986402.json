{"sha": "a5f4f531fe6b58b550d0fda12a90bc94b7986402", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmNGY1MzFmZTZiNThiNTUwZDBmZGExMmE5MGJjOTRiNzk4NjQwMg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-09T21:13:29Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-09T21:13:29Z"}, "message": "pdp11.h (FUNCTION_ARG, [...]): Delete.\n\n\t* config/pdp11/pdp11.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n\t* config/pdp11/pdp11.c (pdp11_function_arg): New function.\n\t(pdp11_function_arg_advance): New function.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\nFrom-SVN: r165239", "tree": {"sha": "5737cb2f189bd85908aa6f2c3633f6eda20ccccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5737cb2f189bd85908aa6f2c3633f6eda20ccccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5f4f531fe6b58b550d0fda12a90bc94b7986402", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f4f531fe6b58b550d0fda12a90bc94b7986402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5f4f531fe6b58b550d0fda12a90bc94b7986402", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f4f531fe6b58b550d0fda12a90bc94b7986402/comments", "author": null, "committer": null, "parents": [{"sha": "4471aff653622f322b718cce206f36e8bd50029c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4471aff653622f322b718cce206f36e8bd50029c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4471aff653622f322b718cce206f36e8bd50029c"}], "stats": {"total": 89, "additions": 55, "deletions": 34}, "files": [{"sha": "7cbf9d05a27dcea03c6e44dbcfda5e5aa2e5d015", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f4f531fe6b58b550d0fda12a90bc94b7986402/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f4f531fe6b58b550d0fda12a90bc94b7986402/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5f4f531fe6b58b550d0fda12a90bc94b7986402", "patch": "@@ -1,3 +1,10 @@\n+2010-10-09  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/pdp11/pdp11.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n+\t* config/pdp11/pdp11.c (pdp11_function_arg): New function.\n+\t(pdp11_function_arg_advance): New function.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\n 2010-10-09  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* libgcc2.h: Use __SIZEOF_LONG_LONG__ instead of LONG_LONG_TYPE_SIZE."}, {"sha": "651b0cc6012382ebf3804b0897b0acdf194a3771", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f4f531fe6b58b550d0fda12a90bc94b7986402/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f4f531fe6b58b550d0fda12a90bc94b7986402/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=a5f4f531fe6b58b550d0fda12a90bc94b7986402", "patch": "@@ -157,6 +157,10 @@ static rtx pdp11_function_value (const_tree, const_tree, bool);\n static rtx pdp11_libcall_value (enum machine_mode, const_rtx);\n static bool pdp11_function_value_regno_p (const unsigned int);\n static void pdp11_trampoline_init (rtx, tree, rtx);\n+static rtx pdp11_function_arg (CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t       const_tree, bool);\n+static void pdp11_function_arg_advance (CUMULATIVE_ARGS *,\n+\t\t\t\t\tenum machine_mode, const_tree, bool);\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_BYTE_OP\n@@ -189,6 +193,11 @@ static void pdp11_trampoline_init (rtx, tree, rtx);\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS pdp11_rtx_costs\n \n+#undef TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG pdp11_function_arg\n+#undef TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE pdp11_function_arg_advance\n+\n #undef TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY pdp11_return_in_memory\n \n@@ -1834,3 +1843,42 @@ pdp11_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n   emit_move_insn (mem, GEN_INT (0x0058));\n   emit_move_insn (mem, fnaddr);\n }\n+\n+/* Worker function for TARGET_FUNCTION_ARG.\n+\n+   Determine where to put an argument to a function.\n+   Value is zero to push the argument on the stack,\n+   or a hard register in which to store the argument.\n+\n+   MODE is the argument's machine mode.\n+   TYPE is the data type of the argument (as a tree).\n+    This is null for libcalls where that information may\n+    not be available.\n+   CUM is a variable of type CUMULATIVE_ARGS which gives info about\n+    the preceding args and about the function being called.\n+   NAMED is nonzero if this argument is a named parameter\n+    (otherwise it is an extra parameter matching an ellipsis).  */\n+\n+static rtx\n+pdp11_function_arg (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n+\t\t    enum machine_mode mode ATTRIBUTE_UNUSED,\n+\t\t    const_tree type ATTRIBUTE_UNUSED,\n+\t\t    bool named ATTRIBUTE_UNUSED)\n+{\n+  return NULL_RTX;\n+}\n+\n+/* Worker function for TARGET_FUNCTION_ARG_ADVANCE.\n+\n+   Update the data in CUM to advance over an argument of mode MODE and\n+   data type TYPE.  (TYPE is null for libcalls where that information\n+   may not be available.)  */\n+\n+static void\n+pdp11_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\t    const_tree type, bool named ATTRIBUTE_UNUSED)\n+{\n+  *cum += (mode != BLKmode\n+\t   ? GET_MODE_SIZE (mode)\n+\t   : int_size_in_bytes (type));\n+}"}, {"sha": "2904acd960865b152a61e3d268c99c19904ee004", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f4f531fe6b58b550d0fda12a90bc94b7986402/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f4f531fe6b58b550d0fda12a90bc94b7986402/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=a5f4f531fe6b58b550d0fda12a90bc94b7986402", "patch": "@@ -468,40 +468,6 @@ extern int current_first_parm_offset;\n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \\\n  ((CUM) = 0)\n \n-/* Update the data in CUM to advance over an argument\n-   of mode MODE and data type TYPE.\n-   (TYPE is null for libcalls where that information may not be available.)  \n-\n-*/\n-\n-\n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\\\n- ((CUM) += ((MODE) != BLKmode\t\t\t\\\n-\t    ? (GET_MODE_SIZE (MODE))\t\t\\\n-\t    : (int_size_in_bytes (TYPE))))\t\n-\n-/* Determine where to put an argument to a function.\n-   Value is zero to push the argument on the stack,\n-   or a hard register in which to store the argument.\n-\n-   MODE is the argument's machine mode.\n-   TYPE is the data type of the argument (as a tree).\n-    This is null for libcalls where that information may\n-    not be available.\n-   CUM is a variable of type CUMULATIVE_ARGS which gives info about\n-    the preceding args and about the function being called.\n-   NAMED is nonzero if this argument is a named parameter\n-    (otherwise it is an extra parameter matching an ellipsis).  */\n-\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED)  0\n-\n-/* Define where a function finds its arguments.\n-   This would be different from FUNCTION_ARG if we had register windows.  */\n-/*\n-#define FUNCTION_INCOMING_ARG(CUM, MODE, TYPE, NAMED)\t\\\n-  FUNCTION_ARG (CUM, MODE, TYPE, NAMED)\n-*/\n-\n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry.  */\n "}]}