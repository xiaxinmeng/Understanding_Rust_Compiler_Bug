{"sha": "963ebe78d43b3be5e27f99c0fa2d2a3819689541", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYzZWJlNzhkNDNiM2JlNWUyN2Y5OWMwZmEyZDJhMzgxOTY4OTU0MQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2004-10-18T14:07:42Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-10-18T14:07:42Z"}, "message": "re PR libgcj/18036 (Bad interaction between interpreter and Class.forName())\n\n2004-10-18  Andrew Haley  <aph@redhat.com>\n\n        PR java/18036:\n        * gnu/gcj/runtime/natStackTrace.cc (fillInStackTrace): Reorganize\n        and correct logic used to find interpreter.\n\nFrom-SVN: r89221", "tree": {"sha": "eaafd833fc31fd9d7f0d109af91a4ef8d47ae4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaafd833fc31fd9d7f0d109af91a4ef8d47ae4af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/963ebe78d43b3be5e27f99c0fa2d2a3819689541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963ebe78d43b3be5e27f99c0fa2d2a3819689541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963ebe78d43b3be5e27f99c0fa2d2a3819689541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963ebe78d43b3be5e27f99c0fa2d2a3819689541/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5871096f0c6581c35819a5c84ddacd02681d372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5871096f0c6581c35819a5c84ddacd02681d372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5871096f0c6581c35819a5c84ddacd02681d372"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "2844e16fecb0897f6b1b0b75afa961e60395e409", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/963ebe78d43b3be5e27f99c0fa2d2a3819689541/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/963ebe78d43b3be5e27f99c0fa2d2a3819689541/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=963ebe78d43b3be5e27f99c0fa2d2a3819689541", "patch": "@@ -1,3 +1,9 @@\n+2004-10-18  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/18036:\n+\t* gnu/gcj/runtime/natStackTrace.cc (fillInStackTrace): Reorganize\n+\tand correct logic used to find interpreter.\n+\t\n 2004-10-18  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* java/util/logging/LogManager.java"}, {"sha": "d9f3355c04600c89255c1e93ad2e3a1fd10c320c", "filename": "libjava/gnu/gcj/runtime/natStackTrace.cc", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/963ebe78d43b3be5e27f99c0fa2d2a3819689541/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatStackTrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/963ebe78d43b3be5e27f99c0fa2d2a3819689541/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatStackTrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatStackTrace.cc?ref=963ebe78d43b3be5e27f99c0fa2d2a3819689541", "patch": "@@ -65,7 +65,7 @@ gnu::gcj::runtime::StackTrace::fillInStackTrace (jint maxlen, jint offset)\n #ifdef INTERPRETER\n       extern void *const _Jv_StartOfInterpreter;\n       extern void * _Jv_EndOfInterpreter;\n-      \n+\n       java::lang::Thread *thread = java::lang::Thread::currentThread();\n       _Jv_MethodChain *interp_frame\n \t= (thread ? reinterpret_cast<_Jv_MethodChain *> (thread->interp_frame)\n@@ -92,20 +92,23 @@ gnu::gcj::runtime::StackTrace::fillInStackTrace (jint maxlen, jint offset)\n \t      // less than _Jv_EndOfInterpreter it might be in the\n \t      // interpreter: we call _Unwind_FindEnclosingFunction to\n \t      // find out.\n-\t      if ((_Jv_EndOfInterpreter == NULL || pc < _Jv_EndOfInterpreter)\n-\t\t  && (_Unwind_FindEnclosingFunction (pc) \n-\t\t      == _Jv_StartOfInterpreter))\n-\t\t{\n-\t\t  frame[n].interp = (void *) interp_frame->self;\n-\t\t  interp_frame = interp_frame->next;\n-\t\t}\n-\t      else\n+\t      if (pc >= _Jv_StartOfInterpreter\n+\t\t  && (pc < _Jv_EndOfInterpreter\n+\t\t      || _Jv_EndOfInterpreter == NULL))\n \t\t{\n-\t\t  // We've found an address that we know is not within\n-\t\t  // the interpreter.  We use that to refine our upper\n-\t\t  // bound on where the interpreter ends.\n-\t\t  if (_Jv_EndOfInterpreter == NULL || pc < _Jv_EndOfInterpreter)\n-\t\t    _Jv_EndOfInterpreter = pc;\n+\t\t  if (_Unwind_FindEnclosingFunction (pc) \n+\t\t      == _Jv_StartOfInterpreter)\n+\t\t    {\n+\t\t      frame[n].interp = (void *) interp_frame->self;\n+\t\t      interp_frame = interp_frame->next;\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      // We've found an address that we know is not within\n+\t\t      // the interpreter.  We use that to refine our upper\n+\t\t      // bound on where the interpreter ends.\n+\t\t      _Jv_EndOfInterpreter = pc;\n+\t\t    }\n \t\t}\n \t    }\n #endif // INTERPRETER"}]}