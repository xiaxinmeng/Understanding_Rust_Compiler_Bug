{"sha": "7061cfc027e29b6d276ef5e09835c93899cfd132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2MWNmYzAyN2UyOWI2ZDI3NmVmNWUwOTgzNWM5Mzg5OWNmZDEzMg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-08-01T09:20:08Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-08-01T09:20:08Z"}, "message": "re PR tree-optimization/81627 (ICE on valid code at -O3: in check_loop_closed_ssa_use, at tree-ssa-loop-manip.c:707)\n\n\tPR tree-optimization/81627\n\t* tree-predcom.c (prepare_finalizers): Always rewrite into loop\n\tclosed ssa form for store-store chain.\n\n\tgcc/testsuite\n\t* gcc.dg/tree-ssa/pr81627.c: New.\n\nFrom-SVN: r250764", "tree": {"sha": "1b875298231b36b3e75154c96662707ab1885345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b875298231b36b3e75154c96662707ab1885345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7061cfc027e29b6d276ef5e09835c93899cfd132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7061cfc027e29b6d276ef5e09835c93899cfd132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7061cfc027e29b6d276ef5e09835c93899cfd132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7061cfc027e29b6d276ef5e09835c93899cfd132/comments", "author": null, "committer": null, "parents": [{"sha": "39637a44f4d65ccb23f83399eefd5f06d4bf4e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39637a44f4d65ccb23f83399eefd5f06d4bf4e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39637a44f4d65ccb23f83399eefd5f06d4bf4e4a"}], "stats": {"total": 49, "additions": 44, "deletions": 5}, "files": [{"sha": "9e09d56d2b22636e041fef6fd36f8d807a132c8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7061cfc027e29b6d276ef5e09835c93899cfd132", "patch": "@@ -1,3 +1,9 @@\n+2017-08-01  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/81627\n+\t* tree-predcom.c (prepare_finalizers): Always rewrite into loop\n+\tclosed ssa form for store-store chain.\n+\n 2017-08-01  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/81620"}, {"sha": "a86b281157e9e991f9e6cc275dad18735341a32f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7061cfc027e29b6d276ef5e09835c93899cfd132", "patch": "@@ -1,3 +1,8 @@\n+2017-08-01  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/81627\n+\t* gcc.dg/tree-ssa/pr81627.c: New.\n+\n 2017-08-01  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/81620"}, {"sha": "9ba43be5052505070abc3dff3048502bd64261ca", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr81627.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr81627.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr81627.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr81627.c?ref=7061cfc027e29b6d276ef5e09835c93899cfd132", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -fno-tree-loop-vectorize -fdump-tree-pcom-details\" } */\n+\n+int a, b, c, d[6], e = 3, f;\n+\n+void abort (void);\n+void fn1 ()\n+{\n+  for (b = 1; b < 5; b++)\n+    {\n+      for (c = 0; c < 5; c++)\n+        d[b] = e;\n+      if (a)\n+        f++;\n+      d[b + 1] = 1;\n+    }\n+}\n+\n+int main ()\n+{\n+  fn1 ();\n+  if (d[0] != 0 || d[1] != 3 || d[2] != 3\n+      || d[3] != 3 || d[4] != 3 || d[5] != 1)\n+    abort ();\n+\n+  return 0;\n+}\n+/* { dg-final { scan-tree-dump-times \"Store-stores chain\" 1 \"pcom\" } } */"}, {"sha": "4538773552cbf2d69b7399f1283c3885334fc60c", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7061cfc027e29b6d276ef5e09835c93899cfd132/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=7061cfc027e29b6d276ef5e09835c93899cfd132", "patch": "@@ -2983,11 +2983,11 @@ prepare_finalizers (struct loop *loop, vec<chain_p> chains)\n       if (prepare_finalizers_chain (loop, chain))\n \t{\n \t  i++;\n-\t  /* We don't corrupt loop closed ssa form for store elimination\n-\t     chain if eliminated stores only store loop invariant values\n-\t     into memory.  */\n-\t  if (!chain->inv_store_elimination)\n-\t    loop_closed_ssa |= (!chain->inv_store_elimination);\n+\t  /* Be conservative, assume loop closed ssa form is corrupted\n+\t     by store-store chain.  Though it's not always the case if\n+\t     eliminated stores only store loop invariant values into\n+\t     memory.  */\n+\t  loop_closed_ssa = true;\n \t}\n       else\n \t{"}]}