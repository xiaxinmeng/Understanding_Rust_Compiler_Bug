{"sha": "a10bf1f989bf224536a92292b55ff915d7dbf272", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEwYmYxZjk4OWJmMjI0NTM2YTkyMjkyYjU1ZmY5MTVkN2RiZjI3Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-01-04T16:39:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-01-04T16:39:53Z"}, "message": "re PR c++/51064 (False Positive for -Wparentheses)\n\n/cp\n2012-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51064\n\t* pt.c (tsubst_copy_and_build): Maybe set TREE_NO_WARNING on\n\tthe tree returned by build_x_binary_op.\n\n/testsuite\n2012-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51064\n\t* g++.dg/warn/Wparentheses-26.C: New.\n\nFrom-SVN: r182880", "tree": {"sha": "d85df6a2ce55f86d7734a6af45e5c6fca414c571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d85df6a2ce55f86d7734a6af45e5c6fca414c571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a10bf1f989bf224536a92292b55ff915d7dbf272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10bf1f989bf224536a92292b55ff915d7dbf272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10bf1f989bf224536a92292b55ff915d7dbf272", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10bf1f989bf224536a92292b55ff915d7dbf272/comments", "author": null, "committer": null, "parents": [{"sha": "e2b30a444101f22a67c1f6b6ba67988ed1596f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b30a444101f22a67c1f6b6ba67988ed1596f91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b30a444101f22a67c1f6b6ba67988ed1596f91"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "d889d2921acc86f5eaa9401329b4f58715eae4af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a10bf1f989bf224536a92292b55ff915d7dbf272", "patch": "@@ -1,3 +1,9 @@\n+2012-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51064\n+\t* pt.c (tsubst_copy_and_build): Maybe set TREE_NO_WARNING on\n+\tthe tree returned by build_x_binary_op.\n+\n 2012-01-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51738"}, {"sha": "77e3388587b5ff41a13fd54f7daba2233bf1fa2f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a10bf1f989bf224536a92292b55ff915d7dbf272", "patch": "@@ -13563,18 +13563,23 @@ tsubst_copy_and_build (tree t,\n     case GT_EXPR:\n     case MEMBER_REF:\n     case DOTSTAR_EXPR:\n-      return build_x_binary_op\n-\t(TREE_CODE (t),\n-\t RECUR (TREE_OPERAND (t, 0)),\n-\t (TREE_NO_WARNING (TREE_OPERAND (t, 0))\n-\t  ? ERROR_MARK\n-\t  : TREE_CODE (TREE_OPERAND (t, 0))),\n-\t RECUR (TREE_OPERAND (t, 1)),\n-\t (TREE_NO_WARNING (TREE_OPERAND (t, 1))\n-\t  ? ERROR_MARK\n-\t  : TREE_CODE (TREE_OPERAND (t, 1))),\n-\t /*overload=*/NULL,\n-\t complain);\n+      {\n+\ttree r = build_x_binary_op\n+\t  (TREE_CODE (t),\n+\t   RECUR (TREE_OPERAND (t, 0)),\n+\t   (TREE_NO_WARNING (TREE_OPERAND (t, 0))\n+\t    ? ERROR_MARK\n+\t    : TREE_CODE (TREE_OPERAND (t, 0))),\n+\t   RECUR (TREE_OPERAND (t, 1)),\n+\t   (TREE_NO_WARNING (TREE_OPERAND (t, 1))\n+\t    ? ERROR_MARK\n+\t    : TREE_CODE (TREE_OPERAND (t, 1))),\n+\t   /*overload=*/NULL,\n+\t   complain);\n+\tif (EXPR_P (r) && TREE_NO_WARNING (t))\n+\t  TREE_NO_WARNING (r) = TREE_NO_WARNING (t);\n+\treturn r;\n+      }\n \n     case SCOPE_REF:\n       return tsubst_qualified_id (t, args, complain, in_decl, /*done=*/true,"}, {"sha": "373ae014c30b23b014f76544d99a1202423b345c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a10bf1f989bf224536a92292b55ff915d7dbf272", "patch": "@@ -1,3 +1,8 @@\n+2012-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51064\n+\t* g++.dg/warn/Wparentheses-26.C: New.\n+\n 2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* gfortran.dg/elemental_optional_args_2.f90: New test."}, {"sha": "6fd441770d91b29b6f661e146900d8b408a9a266", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-26.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10bf1f989bf224536a92292b55ff915d7dbf272/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-26.C?ref=a10bf1f989bf224536a92292b55ff915d7dbf272", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/51064\n+// { dg-options \"-Wparentheses\" }\n+\n+template<int i, int j = ((i + 7) >> 3)> class foo1 { };\n+typedef foo1<10> bar1;\n+\n+template<int i, int j = (i + 7 >> 3)> class foo2 { };\n+typedef foo2<10> bar2;  // { dg-warning \"suggest parentheses around '\\\\+'\" }\n+\n+template<int i, int j = (100 >> (i + 2))> class foo3 { };\n+typedef foo3<3> bar3;\n+\n+template<int i, int j = (100 >> i + 2)> class foo4 { }; \n+typedef foo4<3> bar4;   // { dg-warning \"suggest parentheses around '\\\\+'\" }\n+\n+template<int i, int j = (i + 7) | 3> class foo5 { };\n+typedef foo5<10> bar5;\n+\n+template<int i, int j = i + 7 | 3> class foo6 { };\n+typedef foo6<10> bar6;  // { dg-warning \"suggest parentheses around arithmetic\" }\n+\n+template<int i, int j = 3 | (i + 7)> class foo7 { };\n+typedef foo7<10> bar7;\n+\n+template<int i, int j = 3 | i + 7> class foo8 { };\n+typedef foo8<10> bar8;  // { dg-warning \"suggest parentheses around arithmetic\" }"}]}