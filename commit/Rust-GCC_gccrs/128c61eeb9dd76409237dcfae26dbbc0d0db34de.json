{"sha": "128c61eeb9dd76409237dcfae26dbbc0d0db34de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4YzYxZWViOWRkNzY0MDkyMzdkY2ZhZTI2ZGJiYzBkMGRiMzRkZQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-09-07T14:31:40Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-09-07T14:31:40Z"}, "message": "re PR middle-end/50301 (416.gamess in SPEC CPU 2006 failed to build with LTO)\n\n2011-09-07  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/50301\n\t* ipa-cp.c (find_more_values_for_callers_subset): Check jump\n\tfunction index bounds.\n\t(perhaps_add_new_callers): Likewise.\n\nFrom-SVN: r178640", "tree": {"sha": "e969f2f11f577d85c9f099b5655d7f7e74744bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e969f2f11f577d85c9f099b5655d7f7e74744bed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/128c61eeb9dd76409237dcfae26dbbc0d0db34de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128c61eeb9dd76409237dcfae26dbbc0d0db34de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128c61eeb9dd76409237dcfae26dbbc0d0db34de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128c61eeb9dd76409237dcfae26dbbc0d0db34de/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da990dc0e09b05638d0ec80e719c1cbd2615d76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da990dc0e09b05638d0ec80e719c1cbd2615d76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da990dc0e09b05638d0ec80e719c1cbd2615d76e"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "d7b8687a94325d4a31f8e38f41cd7714c7ba73f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128c61eeb9dd76409237dcfae26dbbc0d0db34de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128c61eeb9dd76409237dcfae26dbbc0d0db34de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=128c61eeb9dd76409237dcfae26dbbc0d0db34de", "patch": "@@ -1,3 +1,10 @@\n+2011-09-07  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/50301\n+\t* ipa-cp.c (find_more_values_for_callers_subset): Check jump\n+\tfunction index bounds.\n+\t(perhaps_add_new_callers): Likewise.\n+\n 2011-09-07  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/49911"}, {"sha": "f440b1dc74dd5dc6881ab38b963d8495037750f9", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128c61eeb9dd76409237dcfae26dbbc0d0db34de/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128c61eeb9dd76409237dcfae26dbbc0d0db34de/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=128c61eeb9dd76409237dcfae26dbbc0d0db34de", "patch": "@@ -2052,8 +2052,12 @@ find_more_values_for_callers_subset (struct cgraph_node *node,\n \t  struct ipa_jump_func *jump_func;\n \t  tree t;\n \n+          if (i >= ipa_get_cs_argument_count (IPA_EDGE_REF (cs)))\n+            {\n+              newval = NULL_TREE;\n+              break;\n+            }\n \t  jump_func = ipa_get_ith_jump_func (IPA_EDGE_REF (cs), i);\n-\n \t  t = ipa_value_from_jfunc (IPA_NODE_REF (cs->caller), jump_func);\n \t  if (!t\n \t      || (newval\n@@ -2123,6 +2127,11 @@ perhaps_add_new_callers (struct cgraph_node *node, struct ipcp_value *val)\n \t\t  if (!val)\n \t\t    continue;\n \n+\t\t  if (i >= ipa_get_cs_argument_count (args))\n+\t\t    {\n+\t\t      insufficient = true;\n+\t\t      break;\n+\t\t    }\n \t\t  jump_func = ipa_get_ith_jump_func (args, i);\n \t\t  t = ipa_value_from_jfunc (caller_info, jump_func);\n \t\t  if (!t || !values_equal_for_ipcp_p (val, t))"}]}