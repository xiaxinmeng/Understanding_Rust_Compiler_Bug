{"sha": "769b009eacdbe2537a66c2d806f8830a7d00e08d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY5YjAwOWVhY2RiZTI1MzdhNjZjMmQ4MDZmODgzMGE3ZDAwZTA4ZA==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-07-07T02:14:19Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-07-07T02:14:19Z"}, "message": "config.table: Delete file.\n\n2005-07-07  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* config.table: Delete file.  Move former contents into ...\n\t* configure.ac: ... here and escape any brackets for m4.\n\t* Makefile.in (config.status): Remove dependency on config.table.\n\t* configure: Regenerate.\n\nFrom-SVN: r101684", "tree": {"sha": "52231f977c216758ace33654e46ea8ad773f968f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52231f977c216758ace33654e46ea8ad773f968f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/769b009eacdbe2537a66c2d806f8830a7d00e08d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769b009eacdbe2537a66c2d806f8830a7d00e08d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/769b009eacdbe2537a66c2d806f8830a7d00e08d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769b009eacdbe2537a66c2d806f8830a7d00e08d/comments", "author": null, "committer": null, "parents": [{"sha": "f379ddd1e3304c33c0309b3ba8df60eadd23884e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f379ddd1e3304c33c0309b3ba8df60eadd23884e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f379ddd1e3304c33c0309b3ba8df60eadd23884e"}], "stats": {"total": 217, "additions": 146, "deletions": 71}, "files": [{"sha": "dc55ff2e546a0c8ef743c89eb055300f6fd1f90a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=769b009eacdbe2537a66c2d806f8830a7d00e08d", "patch": "@@ -1,3 +1,10 @@\n+2005-07-07  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* config.table: Delete file.  Move former contents into ...\n+\t* configure.ac: ... here and escape any brackets for m4.\n+\t* Makefile.in (config.status): Remove dependency on config.table.\n+\t* configure: Regenerate.\n+\n 2005-07-07  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* config.in: Regenerate for 6/20 change."}, {"sha": "eb8b6df099ad74e988f1d1ad713615ea39ff2096", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=769b009eacdbe2537a66c2d806f8830a7d00e08d", "patch": "@@ -401,7 +401,7 @@ config.h: stamp-h ; @true\n stamp-h: $(srcdir)/config.in config.status Makefile\n \tCONFIG_FILES= CONFIG_HEADERS=config.h:$(srcdir)/config.in $(SHELL) ./config.status\n \n-config.status: $(srcdir)/configure $(srcdir)/config.table\n+config.status: $(srcdir)/configure\n \t$(SHELL) ./config.status --recheck\n \n # Depending on config.h makes sure that config.status has been re-run"}, {"sha": "1867cfeaafa0ee7fe2c83c2ed659a8b5ede7e6ca", "filename": "libiberty/config.table", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f379ddd1e3304c33c0309b3ba8df60eadd23884e/libiberty%2Fconfig.table", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f379ddd1e3304c33c0309b3ba8df60eadd23884e/libiberty%2Fconfig.table", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.table?ref=f379ddd1e3304c33c0309b3ba8df60eadd23884e", "patch": "@@ -1,68 +0,0 @@\n-# Don't build the shared library for build.\n-if [ -n \"${with_build_subdir}\" ]; then\n-  enable_shared=no\n-fi\n-\n-frag=\n-case \"${host}\" in\n-  rs6000-ibm-aix3.1 | rs6000-ibm-aix)\n-                        frag=mh-aix ;;\n-  *-*-cxux7*)\t\tfrag=mh-cxux7 ;;\n-  *-*-freebsd2.1.*)\tfrag=mh-fbsd21 ;;\n-  *-*-freebsd2.2.[012])\tfrag=mh-fbsd21 ;;\n-  i370-*-opened*)       frag=mh-openedition ;;\n-  i[34567]86-*-windows*)\tfrag=mh-windows ;;\n-esac\n-\n-if [ -n \"${frag}\" ]; then\n-  frags=${libiberty_topdir}/libiberty/config/$frag\n-else\n-  frags=\n-fi\n-\n-# If they didn't specify --enable-shared, don't generate shared libs.\n-case \"${enable_shared}\" in\n-  yes) shared=yes ;;\n-  no) shared=no ;;\n-  \"\") shared=no ;;\n-  *) shared=yes ;;\n-esac\n-if [ \"${shared}\" = \"yes\" ]; then\n-  frag=\n-  case \"${host}\" in\n-    *-*-cygwin*)\t;;\n-    alpha*-*-linux*)\tfrag=mh-elfalphapic ;;\n-    arm*-*-*)\t\tfrag=mh-armpic ;;\n-    hppa*-*-*)\t\tfrag=mh-papic ;;\n-    i[34567]86-*-* | x86_64-*-*)\n-\t\t\tfrag=mh-x86pic ;;\n-    powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tfrag=mh-ppcpic ;;\n-    sparc*-*-*)\t\tfrag=mh-sparcpic ;;\n-    s390*-*-*)\t\tfrag=mh-s390pic ;;\n-    *)\t\t\tfrag=mh-${host_cpu}pic ;;\n-  esac\n-  if [ -n \"${frag}\" ]; then\n-    frags=\"${frags} ${libiberty_topdir}/config/${frag}\"\n-  fi\n-fi\n-\n-echo \"# Warning: this fragment is automatically generated\" > temp-frag\n-\n-for frag in ${frags}; do\n-  if [ -f ${frag} ]; then\n-    echo \"Appending ${frag} to xhost-mkfrag\"\n-    echo \"# Following fragment copied from ${frag}\" >> temp-frag\n-    cat ${frag} >> temp-frag\n-  fi\n-done\n-\n-# record if we want to build shared libs.\n-if [ \"${shared}\" = \"yes\" ]; then\n-  echo enable_shared = yes >> temp-frag\n-else\n-  echo enable_shared = no >> temp-frag\n-fi\n-\n-frag=xhost-mkfrag\n-${CONFIG_SHELL-/bin/sh} ${libiberty_topdir}/move-if-change temp-frag xhost-mkfrag"}, {"sha": "1182e98aeddc9e2a2c8f8adcb8c360d52ae24f60", "filename": "libiberty/configure", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=769b009eacdbe2537a66c2d806f8830a7d00e08d", "patch": "@@ -3529,7 +3529,75 @@ test -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n \n \n-. ${srcdir}/config.table\n+# Don't build the shared library for build.\n+if [ -n \"${with_build_subdir}\" ]; then\n+  enable_shared=no\n+fi\n+\n+frag=\n+case \"${host}\" in\n+  rs6000-ibm-aix3.1 | rs6000-ibm-aix)\n+                        frag=mh-aix ;;\n+  *-*-cxux7*)\t\tfrag=mh-cxux7 ;;\n+  *-*-freebsd2.1.*)\tfrag=mh-fbsd21 ;;\n+  *-*-freebsd2.2.[012])\tfrag=mh-fbsd21 ;;\n+  i370-*-opened*)       frag=mh-openedition ;;\n+  i[34567]86-*-windows*)\tfrag=mh-windows ;;\n+esac\n+\n+if [ -n \"${frag}\" ]; then\n+  frags=${libiberty_topdir}/libiberty/config/$frag\n+else\n+  frags=\n+fi\n+\n+# If they didn't specify --enable-shared, don't generate shared libs.\n+case \"${enable_shared}\" in\n+  yes) shared=yes ;;\n+  no) shared=no ;;\n+  \"\") shared=no ;;\n+  *) shared=yes ;;\n+esac\n+if [ \"${shared}\" = \"yes\" ]; then\n+  frag=\n+  case \"${host}\" in\n+    *-*-cygwin*)\t;;\n+    alpha*-*-linux*)\tfrag=mh-elfalphapic ;;\n+    arm*-*-*)\t\tfrag=mh-armpic ;;\n+    hppa*-*-*)\t\tfrag=mh-papic ;;\n+    i[34567]86-*-* | x86_64-*-*)\n+\t\t\tfrag=mh-x86pic ;;\n+    powerpc*-*-aix*)\t;;\n+    powerpc*-*-*)\tfrag=mh-ppcpic ;;\n+    sparc*-*-*)\t\tfrag=mh-sparcpic ;;\n+    s390*-*-*)\t\tfrag=mh-s390pic ;;\n+    *)\t\t\tfrag=mh-${host_cpu}pic ;;\n+  esac\n+  if [ -n \"${frag}\" ]; then\n+    frags=\"${frags} ${libiberty_topdir}/config/${frag}\"\n+  fi\n+fi\n+\n+echo \"# Warning: this fragment is automatically generated\" > temp-frag\n+\n+for frag in ${frags}; do\n+  if [ -f ${frag} ]; then\n+    echo \"Appending ${frag} to xhost-mkfrag\"\n+    echo \"# Following fragment copied from ${frag}\" >> temp-frag\n+    cat ${frag} >> temp-frag\n+  fi\n+done\n+\n+# record if we want to build shared libs.\n+if [ \"${shared}\" = \"yes\" ]; then\n+  echo enable_shared = yes >> temp-frag\n+else\n+  echo enable_shared = no >> temp-frag\n+fi\n+\n+frag=xhost-mkfrag\n+${CONFIG_SHELL-/bin/sh} ${libiberty_topdir}/move-if-change temp-frag xhost-mkfrag\n+\n host_makefile_frag=${frag}\n \n "}, {"sha": "c110887a1b9c5f8d4faee7ad58599f3e68d4124c", "filename": "libiberty/configure.ac", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/769b009eacdbe2537a66c2d806f8830a7d00e08d/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=769b009eacdbe2537a66c2d806f8830a7d00e08d", "patch": "@@ -152,7 +152,75 @@ dnl When we start using automake:\n dnl AM_PROG_INSTALL\n AC_PROG_INSTALL\n \n-. ${srcdir}/config.table\n+# Don't build the shared library for build.\n+if [[ -n \"${with_build_subdir}\" ]]; then\n+  enable_shared=no\n+fi\n+\n+frag=\n+case \"${host}\" in\n+  rs6000-ibm-aix3.1 | rs6000-ibm-aix)\n+                        frag=mh-aix ;;\n+  *-*-cxux7*)\t\tfrag=mh-cxux7 ;;\n+  *-*-freebsd2.1.*)\tfrag=mh-fbsd21 ;;\n+  *-*-freebsd2.2.[[012]])\tfrag=mh-fbsd21 ;;\n+  i370-*-opened*)       frag=mh-openedition ;;\n+  i[[34567]]86-*-windows*)\tfrag=mh-windows ;;\n+esac\n+\n+if [[ -n \"${frag}\" ]]; then\n+  frags=${libiberty_topdir}/libiberty/config/$frag\n+else\n+  frags=\n+fi\n+\n+# If they didn't specify --enable-shared, don't generate shared libs.\n+case \"${enable_shared}\" in\n+  yes) shared=yes ;;\n+  no) shared=no ;;\n+  \"\") shared=no ;;\n+  *) shared=yes ;;\n+esac\n+if [[ \"${shared}\" = \"yes\" ]]; then\n+  frag=\n+  case \"${host}\" in\n+    *-*-cygwin*)\t;;\n+    alpha*-*-linux*)\tfrag=mh-elfalphapic ;;\n+    arm*-*-*)\t\tfrag=mh-armpic ;;\n+    hppa*-*-*)\t\tfrag=mh-papic ;;\n+    i[[34567]]86-*-* | x86_64-*-*)\n+\t\t\tfrag=mh-x86pic ;;\n+    powerpc*-*-aix*)\t;;\n+    powerpc*-*-*)\tfrag=mh-ppcpic ;;\n+    sparc*-*-*)\t\tfrag=mh-sparcpic ;;\n+    s390*-*-*)\t\tfrag=mh-s390pic ;;\n+    *)\t\t\tfrag=mh-${host_cpu}pic ;;\n+  esac\n+  if [[ -n \"${frag}\" ]]; then\n+    frags=\"${frags} ${libiberty_topdir}/config/${frag}\"\n+  fi\n+fi\n+\n+echo \"# Warning: this fragment is automatically generated\" > temp-frag\n+\n+for frag in ${frags}; do\n+  if [[ -f ${frag} ]]; then\n+    echo \"Appending ${frag} to xhost-mkfrag\"\n+    echo \"# Following fragment copied from ${frag}\" >> temp-frag\n+    cat ${frag} >> temp-frag\n+  fi\n+done\n+\n+# record if we want to build shared libs.\n+if [[ \"${shared}\" = \"yes\" ]]; then\n+  echo enable_shared = yes >> temp-frag\n+else\n+  echo enable_shared = no >> temp-frag\n+fi\n+\n+frag=xhost-mkfrag\n+${CONFIG_SHELL-/bin/sh} ${libiberty_topdir}/move-if-change temp-frag xhost-mkfrag\n+\n host_makefile_frag=${frag}\n AC_SUBST_FILE(host_makefile_frag)\n "}]}