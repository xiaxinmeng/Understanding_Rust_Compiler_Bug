{"sha": "6a92e0534b50ca5e97b325137044b502cceff99e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5MmUwNTM0YjUwY2E1ZTk3YjMyNTEzNzA0NGI1MDJjY2VmZjk5ZQ==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2018-02-01T18:26:51Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-02-01T18:26:51Z"}, "message": "re PR target/56010 (Powerpc, -mcpu=native and -mtune=native  use the wrong name for target 7450)\n\n\tPR target/56010\n\tPR target/83743\n\t* config/rs6000/driver-rs6000.c: #include \"diagnostic.h\".\n\t#include \"opts.h\".\n\t(rs6000_supported_cpu_names): New static variable.\n\t(linux_cpu_translation_table): Likewise.\n\t(elf_platform) <cpu>: Define new static variable and use it.\n\tTranslate kernel AT_PLATFORM name to canonical name if needed.\n\tError if platform name is unknown.\n\nFrom-SVN: r257305", "tree": {"sha": "3c8c856620225c339d1fa6e1247eb3aec2ff38f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c8c856620225c339d1fa6e1247eb3aec2ff38f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a92e0534b50ca5e97b325137044b502cceff99e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a92e0534b50ca5e97b325137044b502cceff99e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a92e0534b50ca5e97b325137044b502cceff99e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a92e0534b50ca5e97b325137044b502cceff99e/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "177a970007480a410e84882267ed010178f5fc5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/177a970007480a410e84882267ed010178f5fc5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/177a970007480a410e84882267ed010178f5fc5a"}], "stats": {"total": 109, "additions": 101, "deletions": 8}, "files": [{"sha": "c01487b8420afca4aaea34e4aada40389308f41e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92e0534b50ca5e97b325137044b502cceff99e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92e0534b50ca5e97b325137044b502cceff99e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a92e0534b50ca5e97b325137044b502cceff99e", "patch": "@@ -1,3 +1,15 @@\n+2018-02-01  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/56010\n+\tPR target/83743\n+\t* config/rs6000/driver-rs6000.c: #include \"diagnostic.h\".\n+\t#include \"opts.h\".\n+\t(rs6000_supported_cpu_names): New static variable.\n+\t(linux_cpu_translation_table): Likewise.\n+\t(elf_platform) <cpu>: Define new static variable and use it.\n+\tTranslate kernel AT_PLATFORM name to canonical name if needed.\n+\tError if platform name is unknown.\n+\n 2018-02-01  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR target/84089"}, {"sha": "972099a47ee81f31d8b9a0eeb53fb782de1a6e77", "filename": "gcc/config/rs6000/driver-rs6000.c", "status": "modified", "additions": 89, "deletions": 8, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92e0534b50ca5e97b325137044b502cceff99e/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92e0534b50ca5e97b325137044b502cceff99e/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c?ref=6a92e0534b50ca5e97b325137044b502cceff99e", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"diagnostic.h\"\n+#include \"opts.h\"\n #include <stdlib.h>\n \n #ifdef _AIX\n@@ -38,6 +40,44 @@ along with GCC; see the file COPYING3.  If not see\n # include <sys/sysctl.h>\n #endif\n \n+#ifdef __linux__\n+/* Canonical GCC cpu name table.  */\n+static const char *rs6000_supported_cpu_names[] =\n+{\n+#define RS6000_CPU(NAME, CPU, FLAGS) NAME,\n+#include \"rs6000-cpus.def\"\n+#undef RS6000_CPU\n+};\n+\n+/* This table holds a list of cpus where their Linux AT_PLATFORM name differs\n+   from their GCC canonical name.  The first column in a row contains the GCC\n+   canonical cpu name and the other columns in that row contain AT_PLATFORM\n+   names that should be mapped to the canonical name.  */\n+\n+static const char *linux_cpu_translation_table[][4] = {\n+  { \"403\", \"ppc403\", NULL },\n+  { \"405\", \"ppc405\", NULL },\n+  { \"440\", \"ppc440\", \"ppc440gp\", NULL },\n+  { \"476\", \"ppc470\", NULL },\n+  { \"601\", \"ppc601\", NULL },\n+  { \"603\", \"ppc603\", NULL },\n+  { \"604\", \"ppc604\", NULL },\n+  { \"7400\", \"ppc7400\", NULL },\n+  { \"7450\", \"ppc7450\", NULL },\n+  { \"750\", \"ppc750\", NULL },\n+  { \"823\", \"ppc823\", NULL },\n+  { \"8540\", \"ppc8540\", NULL },\n+  { \"8548\", \"ppc8548\", NULL },\n+  { \"970\", \"ppc970\", NULL },\n+  { \"cell\", \"ppc-cell-be\", NULL },\n+  { \"e500mc\", \"ppce500mc\", NULL },\n+  { \"e5500\", \"ppce5500\", NULL },\n+  { \"e6500\", \"ppce6500\", NULL },\n+  { \"power7\", \"power7+\", NULL },\n+  { NULL } /* End of table sentinel.  */\n+};\n+#endif\n+\n const char *host_detect_local_cpu (int argc, const char **argv);\n \n #if GCC_VERSION >= 0\n@@ -158,14 +198,19 @@ detect_processor_freebsd (void)\n \n #ifdef __linux__\n \n-/* Returns AT_PLATFORM if present, otherwise generic PowerPC.  */\n+/* Returns the canonical AT_PLATFORM if present, otherwise NULL.  */\n \n static const char *\n elf_platform (void)\n {\n-  int fd;\n+  /* Used to cache the result we determine below.  */\n+  static const char *cpu = NULL;\n \n-  fd = open (\"/proc/self/auxv\", O_RDONLY);\n+  /* Use the cached AT_PLATFORM cpu name if we've already determined it.  */\n+  if (cpu != NULL)\n+    return cpu;\n+\n+  int fd = open (\"/proc/self/auxv\", O_RDONLY);\n \n   if (fd != -1)\n     {\n@@ -179,15 +224,51 @@ elf_platform (void)\n       if (n > 0)\n \t{\n \t  for (av = (ElfW(auxv_t) *) buf; av->a_type != AT_NULL; ++av)\n-\t    switch (av->a_type)\n+\t    if (av->a_type == AT_PLATFORM)\n \t      {\n-\t      case AT_PLATFORM:\n-\t\treturn (const char *) av->a_un.a_val;\n-\n-\t      default:\n+\t\t/* Cache the result.  */\n+\t\tcpu = (const char *) av->a_un.a_val;\n \t\tbreak;\n \t      }\n \t}\n+\n+      /* Verify that CPU is either a valid -mcpu=<cpu> option name, or is a\n+\t valid alternative name.  If it is a valid alternative name, then use\n+\t the canonical name.  */\n+      if (cpu != NULL)\n+\t{\n+\t  size_t i, j;\n+\t  char *s;\n+\n+\t  /* Check if AT_PLATFORM is a GCC canonical cpu name.  */\n+\t  for (i = 0; i < ARRAY_SIZE (rs6000_supported_cpu_names); i++)\n+\t    if (!strcmp (cpu, rs6000_supported_cpu_names[i]))\n+\t      return cpu;\n+\n+\t  /* Check if AT_PLATFORM can be translated to a canonical cpu name.  */\n+\t  for (i = 0; linux_cpu_translation_table[i][0] != NULL; i++)\n+\t    {\n+\t      const char *canonical = linux_cpu_translation_table[i][0];\n+\t      for (j = 1; linux_cpu_translation_table[i][j] != NULL; j++)\n+\t\tif (!strcmp (cpu, linux_cpu_translation_table[i][j]))\n+\t\t  {\n+\t\t    /* Cache the result.  */\n+\t\t    cpu = canonical;\n+\t\t    return cpu;\n+\t\t  }\n+\t    }\n+\n+\t  /* The kernel returned an AT_PLATFORM name we do not support.  */\n+\t  auto_vec <const char *> candidates;\n+\t  for (i = 0; i < ARRAY_SIZE (rs6000_supported_cpu_names); i++)\n+\t    candidates.safe_push (rs6000_supported_cpu_names[i]);\n+\t  candidates_list_and_hint (cpu, s, candidates);\n+\t  fatal_error (\n+\t    input_location,\n+\t    \"Unsupported cpu name returned from kernel for -mcpu=native: %s\\n\"\n+\t    \"Please use an explicit cpu name.  Valid cpu names are: %s\",\n+\t    cpu, s);\n+\t}\n     }\n   return NULL;\n }"}]}