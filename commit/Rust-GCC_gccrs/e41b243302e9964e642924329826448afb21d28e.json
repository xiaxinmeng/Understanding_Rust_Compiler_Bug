{"sha": "e41b243302e9964e642924329826448afb21d28e", "node_id": "C_kwDOANBUbNoAKGU0MWIyNDMzMDJlOTk2NGU2NDI5MjQzMjk4MjY0NDhhZmIyMWQyOGU", "commit": {"author": {"name": "Paul-Antoine Arras", "email": "pa@codesourcery.com", "date": "2022-12-01T14:09:54Z"}, "committer": {"name": "Paul-Antoine Arras", "email": "pa@codesourcery.com", "date": "2022-12-01T14:48:34Z"}, "message": "amdgcn: Add preprocessor builtins for every processor type\n\nProvide a specific builtin for each possible value of '-march'.\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn-opts.h (TARGET_FIJI): -march=fiji.\n\t(TARGET_VEGA10): -march=gfx900.\n\t(TARGET_VEGA20): -march=gfx906.\n\t(TARGET_GFX908): -march=gfx908.\n\t(TARGET_GFX90a): -march=gfx90a.\n\t* config/gcn/gcn.h (TARGET_CPU_CPP_BUILTINS): Define a builtin that\n\tuniquely maps to '-march'.", "tree": {"sha": "ca2b69ac09e216f3689c046b6abd5c0b21c49939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2b69ac09e216f3689c046b6abd5c0b21c49939"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e41b243302e9964e642924329826448afb21d28e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41b243302e9964e642924329826448afb21d28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41b243302e9964e642924329826448afb21d28e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41b243302e9964e642924329826448afb21d28e/comments", "author": null, "committer": null, "parents": [{"sha": "798c08ca4bf3681444426093263e9e6746d1c32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798c08ca4bf3681444426093263e9e6746d1c32b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/798c08ca4bf3681444426093263e9e6746d1c32b"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "b54eae79fafb198656e7a7b05776ca351dd22820", "filename": "gcc/config/gcn/gcn-opts.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41b243302e9964e642924329826448afb21d28e/gcc%2Fconfig%2Fgcn%2Fgcn-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41b243302e9964e642924329826448afb21d28e/gcc%2Fconfig%2Fgcn%2Fgcn-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-opts.h?ref=e41b243302e9964e642924329826448afb21d28e", "patch": "@@ -27,6 +27,12 @@ enum processor_type\n   PROCESSOR_GFX90a\n };\n \n+#define TARGET_FIJI (gcn_arch == PROCESSOR_FIJI)\n+#define TARGET_VEGA10 (gcn_arch == PROCESSOR_VEGA10)\n+#define TARGET_VEGA20 (gcn_arch == PROCESSOR_VEGA20)\n+#define TARGET_GFX908 (gcn_arch == PROCESSOR_GFX908)\n+#define TARGET_GFX90a (gcn_arch == PROCESSOR_GFX90a)\n+\n /* Set in gcn_option_override.  */\n extern enum gcn_isa {\n   ISA_UNKNOWN,"}, {"sha": "1cc5981d904ef2c89a6dac228ab2afde5bf6cf92", "filename": "gcc/config/gcn/gcn.h", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41b243302e9964e642924329826448afb21d28e/gcc%2Fconfig%2Fgcn%2Fgcn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41b243302e9964e642924329826448afb21d28e/gcc%2Fconfig%2Fgcn%2Fgcn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.h?ref=e41b243302e9964e642924329826448afb21d28e", "patch": "@@ -16,20 +16,32 @@\n \n #include \"config/gcn/gcn-opts.h\"\n \n-#define TARGET_CPU_CPP_BUILTINS()\t\\\n-  do\t\t\t\t\t\\\n-    {\t\t\t\t\t\\\n-      builtin_define (\"__AMDGCN__\");\t\\\n-      if (TARGET_GCN3)\t\t\t\\\n-\tbuiltin_define (\"__GCN3__\");\t\\\n-      else if (TARGET_GCN5)\t\t\\\n-\tbuiltin_define (\"__GCN5__\");\t\\\n-      else if (TARGET_CDNA1)\t\t\\\n-\tbuiltin_define (\"__CDNA1__\");\t\\\n-      else if (TARGET_CDNA2)\t\t\\\n-\tbuiltin_define (\"__CDNA2__\");\t\\\n-    }\t\t\t\t\t\\\n-  while(0)\n+#define TARGET_CPU_CPP_BUILTINS()                                              \\\n+  do                                                                           \\\n+    {                                                                          \\\n+      builtin_define (\"__AMDGCN__\");                                           \\\n+      if (TARGET_GCN3)                                                         \\\n+\tbuiltin_define (\"__GCN3__\");                                           \\\n+      else if (TARGET_GCN5)                                                    \\\n+\tbuiltin_define (\"__GCN5__\");                                           \\\n+      else if (TARGET_CDNA1)                                                   \\\n+\tbuiltin_define (\"__CDNA1__\");                                          \\\n+      else if (TARGET_CDNA2)                                                   \\\n+\tbuiltin_define (\"__CDNA2__\");                                          \\\n+      if (TARGET_FIJI)                                                         \\\n+\t{                                                                      \\\n+\t  builtin_define (\"__fiji__\");                                         \\\n+\t  builtin_define (\"__gfx803__\");                                       \\\n+\t}                                                                      \\\n+      else if (TARGET_VEGA10)                                                  \\\n+\tbuiltin_define (\"__gfx900__\");                                         \\\n+      else if (TARGET_VEGA20)                                                  \\\n+\tbuiltin_define (\"__gfx906__\");                                         \\\n+      else if (TARGET_GFX908)                                                  \\\n+\tbuiltin_define (\"__gfx908__\");                                         \\\n+      else if (TARGET_GFX90a)                                                  \\\n+\tbuiltin_define (\"__gfx90a__\");                                         \\\n+  } while (0)\n \n /* Support for a compile-time default architecture and tuning.\n    The rules are:"}]}