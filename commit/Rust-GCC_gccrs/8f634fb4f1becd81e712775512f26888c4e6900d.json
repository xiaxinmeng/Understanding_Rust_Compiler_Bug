{"sha": "8f634fb4f1becd81e712775512f26888c4e6900d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY2MzRmYjRmMWJlY2Q4MWU3MTI3NzU1MTJmMjY4ODhjNGU2OTAwZA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-01-15T12:43:49Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-01-15T12:43:49Z"}, "message": "Avoid extraneous remapping in copy_gimple_seq_and_replace_locals\n\n2016-01-15  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-inline.c (remap_decl): Use existing dclarations if\n\tremapping a type and prevent_decl_creation_for_types.\n\t(replace_locals_stmt): Do an initial remapping of non-VLA typed\n\tdecls first.  Do real remapping with\n\tprevent_decl_creation_for_types set.\n\t* tree-inline.h (copy_body_data): New field\n\tprevent_decl_creation_for_types, moved remap_var_for_cilk to avoid\n\tpadding.\n\nFrom-SVN: r232419", "tree": {"sha": "4e93e8a68ee3c2eba698a0a56e941ce8e240c2c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e93e8a68ee3c2eba698a0a56e941ce8e240c2c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f634fb4f1becd81e712775512f26888c4e6900d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f634fb4f1becd81e712775512f26888c4e6900d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f634fb4f1becd81e712775512f26888c4e6900d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f634fb4f1becd81e712775512f26888c4e6900d/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa189aee2e2c2602bf2eef67291c1f56273252b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa189aee2e2c2602bf2eef67291c1f56273252b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa189aee2e2c2602bf2eef67291c1f56273252b5"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "fcb6dcdcbbef5949b31399a53ed219dbf5f26565", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f634fb4f1becd81e712775512f26888c4e6900d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f634fb4f1becd81e712775512f26888c4e6900d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f634fb4f1becd81e712775512f26888c4e6900d", "patch": "@@ -1,3 +1,14 @@\n+2016-01-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-inline.c (remap_decl): Use existing dclarations if\n+\tremapping a type and prevent_decl_creation_for_types.\n+\t(replace_locals_stmt): Do an initial remapping of non-VLA typed\n+\tdecls first.  Do real remapping with\n+\tprevent_decl_creation_for_types set.\n+\t* tree-inline.h (copy_body_data): New field\n+\tprevent_decl_creation_for_types, moved remap_var_for_cilk to avoid\n+\tpadding.\n+\n 2016-01-15  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.opt (mmvcle): More verbose help text."}, {"sha": "106e07a09567709276e17c585d27a2f7ff06894c", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f634fb4f1becd81e712775512f26888c4e6900d/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f634fb4f1becd81e712775512f26888c4e6900d/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=8f634fb4f1becd81e712775512f26888c4e6900d", "patch": "@@ -340,8 +340,17 @@ remap_decl (tree decl, copy_body_data *id)\n       return decl;\n     }\n \n-  /* If we didn't already have an equivalent for this declaration,\n-     create one now.  */\n+  /* When remapping a type within copy_gimple_seq_and_replace_locals, all\n+     necessary DECLs have already been remapped and we do not want to duplicate\n+     a decl coming from outside of the sequence we are copying.  */\n+  if (!n\n+      && id->prevent_decl_creation_for_types\n+      && id->remapping_type_depth > 0\n+      && (VAR_P (decl) || TREE_CODE (decl) == PARM_DECL))\n+    return decl;\n+\n+  /* If we didn't already have an equivalent for this declaration, create one\n+     now.  */\n   if (!n)\n     {\n       /* Make a copy of the variable or label.  */\n@@ -5225,8 +5234,19 @@ replace_locals_stmt (gimple_stmt_iterator *gsip,\n       /* This will remap a lot of the same decls again, but this should be\n \t harmless.  */\n       if (gimple_bind_vars (stmt))\n-\tgimple_bind_set_vars (stmt, remap_decls (gimple_bind_vars (stmt),\n-\t\t\t\t\t\t NULL, id));\n+\t{\n+\t  tree old_var, decls = gimple_bind_vars (stmt);\n+\n+\t  for (old_var = decls; old_var; old_var = DECL_CHAIN (old_var))\n+\t    if (!can_be_nonlocal (old_var, id)\n+\t\t&& ! variably_modified_type_p (TREE_TYPE (old_var), id->src_fn))\n+\t      remap_decl (old_var, id);\n+\n+\t  gcc_checking_assert (!id->prevent_decl_creation_for_types);\n+\t  id->prevent_decl_creation_for_types = true;\n+\t  gimple_bind_set_vars (stmt, remap_decls (decls, NULL, id));\n+\t  id->prevent_decl_creation_for_types = false;\n+\t}\n     }\n \n   /* Keep iterating.  */"}, {"sha": "4cc1f19223a3d93cb7acf9b4349199a5e6ee3c03", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f634fb4f1becd81e712775512f26888c4e6900d/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f634fb4f1becd81e712775512f26888c4e6900d/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=8f634fb4f1becd81e712775512f26888c4e6900d", "patch": "@@ -140,14 +140,17 @@ struct copy_body_data\n      the originals have been mapped to a value rather than to a\n      variable.  */\n   hash_map<tree, tree> *debug_map;\n- \n-  /* Cilk keywords currently need to replace some variables that\n-     ordinary nested functions do not.  */ \n-  bool remap_var_for_cilk;\n \n   /* A map from the inlined functions dependence info cliques to\n      equivalents in the function into which it is being inlined.  */\n   hash_map<dependence_hash, unsigned short> *dependence_map;\n+\n+  /* Cilk keywords currently need to replace some variables that\n+     ordinary nested functions do not.  */\n+  bool remap_var_for_cilk;\n+\n+  /* Do not create new declarations when within type remapping.  */\n+  bool prevent_decl_creation_for_types;\n };\n \n /* Weights of constructions for estimate_num_insns.  */"}]}