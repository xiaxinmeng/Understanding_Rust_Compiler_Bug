{"sha": "4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU3NmFjZDJmMDQ1ZTVhMTk2YTAzNTFiMWI0NDVjZTdjZTE4ZjRjYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-06-02T20:47:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-02T20:47:32Z"}, "message": "constraints.md (Y3): New register constraint.\n\n\t* config/i386/constraints.md (Y3): New register constraint.\n\t* config/i386/sse.md (*vec_interleave_highv2df): Merge with\n\t*sse3_interleave_highv2df and *sse2_interleave_highv2df.\n\t(*vec_interleave_lowv2df): Merge with *sse3_interleave_lowv2df and\n\t*sse2_interleave_lowv2df.\n\nFrom-SVN: r174580", "tree": {"sha": "191a598a7ec8f548ae2e5dc1e862ee1318a4a51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/191a598a7ec8f548ae2e5dc1e862ee1318a4a51e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288f605f2cb6bc29c1892ea1e15d0e196e7e059e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288f605f2cb6bc29c1892ea1e15d0e196e7e059e"}], "stats": {"total": 71, "additions": 24, "deletions": 47}, "files": [{"sha": "ceb5350f69f5d539a84c95a82c7ce16f98cb51a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "patch": "@@ -1,3 +1,11 @@\n+2011-06-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/constraints.md (Y3): New register constraint.\n+\t* config/i386/sse.md (*vec_interleave_highv2df): Merge with\n+\t*sse3_interleave_highv2df and *sse2_interleave_highv2df.\n+\t(*vec_interleave_lowv2df): Merge with *sse3_interleave_lowv2df and\n+\t*sse2_interleave_lowv2df.\n+\n 2011-06-02  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/arm-cores.def (cortex-a5): Use cortex_a5 tuning.\n@@ -33,12 +41,12 @@\n \n 2011-06-02  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/i386/i386.c (standard_sse_constant_p) <case 1>:\n-\tSimplify switch statement.\n+\t* config/i386/i386.c (standard_sse_constant_p) <case 1>: Simplify\n+\tswitch statement.\n \t* config/i386/i386.md (*movdf_internal_rex64) <case 8,9,10>: Ditto.\n \t(*movdf_internal) <case 6,7,8>: Ditto.\n \n-\t* config/i386/constraints.md (Y4): New constraint.\n+\t* config/i386/constraints.md (Y4): New register constraint.\n \t* config/i386/sse.md (vec_set<mode>_0): Merge with\n \t*vec_set<mode>_0_sse4_1 and *vec_set<mode>_0_sse2.\n \t(*vec_extractv2di_1): Merge from *vec_extractv2di_1_sse2 and"}, {"sha": "099c2e1545736d279f0ed539449a719df30dfddd", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "patch": "@@ -99,6 +99,9 @@\n (define_register_constraint \"Y2\" \"TARGET_SSE2 ? SSE_REGS : NO_REGS\"\n  \"@internal Any SSE register, when SSE2 is enabled.\")\n \n+(define_register_constraint \"Y3\" \"TARGET_SSE3 ? SSE_REGS : NO_REGS\"\n+ \"@internal Any SSE register, when SSE3 is enabled.\")\n+\n (define_register_constraint \"Y4\" \"TARGET_SSE4_1 ? SSE_REGS : NO_REGS\"\n  \"@internal Any SSE register, when SSE4_1 is enabled.\")\n "}, {"sha": "b3982af5ec0bf4f4005f5f05dca20a7ac667ac31", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 44, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e76acd2f045e5a196a0351b1b445ce7ce18f4ca/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4e76acd2f045e5a196a0351b1b445ce7ce18f4ca", "patch": "@@ -3804,15 +3804,15 @@\n     operands[2] = force_reg (V2DFmode, operands[2]);\n })\n \n-(define_insn \"*sse3_interleave_highv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,x,x,m\")\n+(define_insn \"*vec_interleave_highv2df\"\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,Y3,x,x,m\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,o,o,o,x\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,1,0,x,0\"))\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,o ,o,o,x\")\n+\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,1 ,0,x,0\"))\n \t  (parallel [(const_int 1)\n \t\t     (const_int 3)])))]\n-  \"TARGET_SSE3 && ix86_vec_interleave_v2df_operator_ok (operands, 1)\"\n+  \"TARGET_SSE2 && ix86_vec_interleave_v2df_operator_ok (operands, 1)\"\n   \"@\n    unpckhpd\\t{%2, %0|%0, %2}\n    vunpckhpd\\t{%2, %1, %0|%0, %1, %2}\n@@ -3826,23 +3826,6 @@\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V2DF,V2DF,V2DF,V1DF,V1DF,V1DF\")])\n \n-(define_insn \"*sse2_interleave_highv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n-\t(vec_select:V2DF\n-\t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,o,x\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,0,0\"))\n-\t  (parallel [(const_int 1)\n-\t\t     (const_int 3)])))]\n-  \"TARGET_SSE2 && ix86_vec_interleave_v2df_operator_ok (operands, 1)\"\n-  \"@\n-   unpckhpd\\t{%2, %0|%0, %2}\n-   movlpd\\t{%H1, %0|%0, %H1}\n-   movhpd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,1,1\")\n-   (set_attr \"mode\" \"V2DF,V1DF,V1DF\")])\n-\n ;; Recall that the 256-bit unpck insns only shuffle within their lanes.\n (define_expand \"avx_movddup256\"\n   [(set (match_operand:V4DF 0 \"register_operand\" \"\")\n@@ -3923,15 +3906,15 @@\n     operands[1] = force_reg (V2DFmode, operands[1]);\n })\n \n-(define_insn \"*sse3_interleave_lowv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,x,x,o\")\n+(define_insn \"*vec_interleave_lowv2df\"\n+  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,Y3,x,x,o\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,m,0,x,0\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,1,m,m,x\"))\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,x,m ,0,x,0\")\n+\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,x,1 ,m,m,x\"))\n \t  (parallel [(const_int 0)\n \t\t     (const_int 2)])))]\n-  \"TARGET_SSE3 && ix86_vec_interleave_v2df_operator_ok (operands, 0)\"\n+  \"TARGET_SSE2 && ix86_vec_interleave_v2df_operator_ok (operands, 0)\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n    vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n@@ -3945,23 +3928,6 @@\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V2DF,V2DF,V2DF,V1DF,V1DF,V1DF\")])\n \n-(define_insn \"*sse2_interleave_lowv2df\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,o\")\n-\t(vec_select:V2DF\n-\t  (vec_concat:V4DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,0,0\")\n-\t    (match_operand:V2DF 2 \"nonimmediate_operand\" \" x,m,x\"))\n-\t  (parallel [(const_int 0)\n-\t\t     (const_int 2)])))]\n-  \"TARGET_SSE2 && ix86_vec_interleave_v2df_operator_ok (operands, 0)\"\n-  \"@\n-   unpcklpd\\t{%2, %0|%0, %2}\n-   movhpd\\t{%2, %0|%0, %2}\n-   movlpd\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,1,1\")\n-   (set_attr \"mode\" \"V2DF,V1DF,V1DF\")])\n-\n (define_split\n   [(set (match_operand:V2DF 0 \"memory_operand\" \"\")\n \t(vec_select:V2DF"}]}