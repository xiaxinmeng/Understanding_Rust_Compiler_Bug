{"sha": "bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkMWJkOGM1MTQ5OGZmMDg3YTE4ZWIwYmJjNGNkMzUxMjJmNzE5Zg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-05-27T11:42:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-05-27T11:42:59Z"}, "message": "re PR libstdc++/6795 (stringbuf failure)\n\n\n2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/6795.\n\t* config/os/solaris/solaris2.6/bits/ctype_noninline.h\n\t(classic_table): Fix.\n\t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n\n2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/22_locale/ctype_is_wchar_t.cc: Guard with\n\t_GLIBCPP_USE_WCHAR_T.\n\t* testsuite/22_locale/ctype_narrow_wchar_t.cc: Same.\n\t* testsuite/22_locale/ctype_to_wchar_t.cc: Same.\n\t* testsuite/22_locale/ctype_widen_wchar_t.cc: Same.\n\nFrom-SVN: r53921", "tree": {"sha": "9a1e611ee5c2e887039d13ae7a028b98dd253ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1e611ee5c2e887039d13ae7a028b98dd253ba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/comments", "author": null, "committer": null, "parents": [{"sha": "5149f0701c126f74f3cccf53b14175374fe3a7e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5149f0701c126f74f3cccf53b14175374fe3a7e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5149f0701c126f74f3cccf53b14175374fe3a7e9"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "ac445d5ce094b7cbcd4e23d30f12d1910d16759f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -1,3 +1,18 @@\n+2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/6795.\n+\t* config/os/solaris/solaris2.6/bits/ctype_noninline.h\n+\t(classic_table): Fix.\n+\t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n+\t\n+2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/22_locale/ctype_is_wchar_t.cc: Guard with\n+\t_GLIBCPP_USE_WCHAR_T.\n+\t* testsuite/22_locale/ctype_narrow_wchar_t.cc: Same.\n+\t* testsuite/22_locale/ctype_to_wchar_t.cc: Same.\n+\t* testsuite/22_locale/ctype_widen_wchar_t.cc: Same.\n+\t\n 2002-05-26  Carlo Wood  <carlo@alinoe.com>\n             Paolo Carlini  <pcarlini@unitus.it>\n "}, {"sha": "a3c27b06b87dcc754578d53562a21a992475c886", "filename": "libstdc++-v3/config/os/solaris/solaris2.5/bits/ctype_noninline.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_noninline.h?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -35,7 +35,7 @@\n \n   const ctype_base::mask*\n   ctype<char>::classic_table() throw()\n-  { return 0; }\n+  { return __ctype; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) "}, {"sha": "f65cfe70f79f2d072c30724c3c18b2cb284e0e1c", "filename": "libstdc++-v3/config/os/solaris/solaris2.6/bits/ctype_noninline.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_noninline.h?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -35,7 +35,7 @@\n   \n   const ctype_base::mask*\n   ctype<char>::classic_table() throw()\n-  { return 0; }  \n+  { return __ctype_mask; }  \n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n \t\t     size_t __refs) "}, {"sha": "50aa0dcdf1a68d04d73cb89152e7a0faeadd7c93", "filename": "libstdc++-v3/testsuite/22_locale/ctype_is_wchar_t.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_is_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_is_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_is_wchar_t.cc?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -34,6 +34,7 @@\n // XXX This test (test02) is not working for non-glibc locale models.\n // { dg-do run { xfail *-*-* } }\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n typedef wchar_t char_type;\n class gnu_ctype: public std::ctype<char_type> { };\n \n@@ -183,11 +184,14 @@ void test05()\n       VERIFY( preLANG == postLANG );\n     }\n }\n+#endif\n \n int main() \n {\n+#ifdef _GLIBCPP_USE_WCHAR_T\n   test01();\n   test04();\n   test05();\n+#endif\n   return 0;\n }"}, {"sha": "18745b9e3a47159f2fe9c8753bf8ee098fe61284", "filename": "libstdc++-v3/testsuite/22_locale/ctype_narrow_wchar_t.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_narrow_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_narrow_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_narrow_wchar_t.cc?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -33,6 +33,7 @@\n #include <vector>\n #include <testsuite_hooks.h>\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n // libstdc++/6701\n void test01()\n {\n@@ -94,10 +95,13 @@ void test02()\n   for (int i = 0; i < wide.length(); ++i)\n     VERIFY( narrow_chars[i] == narrow[i] );\n }\n+#endif\n \n int main() \n {\n+#ifdef _GLIBCPP_USE_WCHAR_T\n   test01();\n   test02();\n-  return 0;\n+#endif\n+ return 0;\n }"}, {"sha": "70ca529826e79893b9c04452ed90c46d5b53254b", "filename": "libstdc++-v3/testsuite/22_locale/ctype_to_wchar_t.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_to_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_to_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_to_wchar_t.cc?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -30,6 +30,7 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n typedef wchar_t char_type;\n class gnu_ctype: public std::ctype<char_type> { };\n \n@@ -130,11 +131,14 @@ void test05()\n       VERIFY( preLANG == postLANG );\n     }\n }\n+#endif\n \n int main() \n {\n+#ifdef _GLIBCPP_USE_WCHAR_T\n   test01();\n   test04();\n   test05();\n+#endif\n   return 0;\n }"}, {"sha": "d07a58d2201ff9904a7ba2eb9d758d9c3d79f907", "filename": "libstdc++-v3/testsuite/22_locale/ctype_widen_wchar_t.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_widen_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed1bd8c51498ff087a18eb0bbc4cd35122f719f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_widen_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_widen_wchar_t.cc?ref=bed1bd8c51498ff087a18eb0bbc4cd35122f719f", "patch": "@@ -33,6 +33,7 @@\n #include <vector>\n #include <testsuite_hooks.h>\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n void test01()\n {\n   using namespace std;\n@@ -59,9 +60,12 @@ void test01()\n   for (int i = 0; i < narrow.length(); ++i)\n     VERIFY( wide_chars[i] == wide[i] );\n }\n+#endif\n \n int main() \n {\n+#ifdef _GLIBCPP_USE_WCHAR_T\n   test01();\n+#endif\n   return 0;\n }"}]}