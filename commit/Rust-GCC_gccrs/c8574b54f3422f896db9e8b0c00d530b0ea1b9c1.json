{"sha": "c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg1NzRiNTRmMzQyMmY4OTZkYjllOGIwYzAwZDUzMGIwZWExYjljMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-29T19:18:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-29T19:18:37Z"}, "message": "* config/h8300/h8300.md: Add comments about peephole2's.\n\nFrom-SVN: r78667", "tree": {"sha": "6c519ce5d435d4a04bad8a1a7760435f65810a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c519ce5d435d4a04bad8a1a7760435f65810a40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1/comments", "author": null, "committer": null, "parents": [{"sha": "76c88fd97b241bad9412fd73c82084ae9f7652a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c88fd97b241bad9412fd73c82084ae9f7652a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76c88fd97b241bad9412fd73c82084ae9f7652a6"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "c778e5ae27c43aad4980a2ec7659078169fd07fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "patch": "@@ -1,3 +1,7 @@\n+2004-02-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md: Add comments about peephole2's.\n+\n 2004-02-29  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md: Tweak operand numbers of some"}, {"sha": "eede39193bd466ad61355275b3349490e7e3e9fb", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8574b54f3422f896db9e8b0c00d530b0ea1b9c1/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=c8574b54f3422f896db9e8b0c00d530b0ea1b9c1", "patch": "@@ -4220,6 +4220,18 @@\n      }\n    operands[4] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n \n+;; Transform\n+;;\n+;;\tcmp.w\t#1,r0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tshar.w\tr0\n+;;\tbne\t.L1\n+\n+;; TODO: Split the above peephole2.\n+\n ;; Transform\n ;;\n ;;\tcmp.w\t#255,r0\n@@ -4260,6 +4272,18 @@\n        break;\n      }\")\n \n+;; Transform\n+;;\n+;;\tcmp.w\t#255,r0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tmov.b\tr0h,r0h\n+;;\tbne\t.L1\n+\n+;; TODO: Split the above peephole2.\n+\n ;; (compare (reg:SI) (const_int)) takes 6 bytes, so we try to achieve\n ;; the equivalent with shorter sequences.  Here is the summary.  Cases\n ;; are grouped for each define_peephole2.\n@@ -4500,6 +4524,19 @@\n      }\n    operands[5] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n \n+;; Transform\n+;;\n+;;\tcmp.l\t#1,er0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tmov.l\ter0,er1\n+;;\tshar.l\ter1\n+;;\tbne\t.L1\n+\n+;; TODO: Split the above peephole2.\n+\n ;; Transform\n ;;\n ;;\tcmp.l\t#1,er0\n@@ -4547,6 +4584,18 @@\n      }\n    operands[4] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n \n+;; Transform\n+;;\n+;;\tcmp.l\t#1,er0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tshar.l\ter0\n+;;\tbne\t.L1\n+\n+;; TODO: Split the above peephole2.\n+\n ;; Transform\n ;;\n ;;\tcmp.l\t#15,er0\n@@ -4599,6 +4648,19 @@\n      }\n    operands[4] = GEN_INT (~INTVAL (operands[1]));\")\n \n+;; Transform\n+;;\n+;;\tcmp.l\t#15,er0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tand\t#240,r0l\n+;;\tmov.l\ter0,er0\n+;;\tbne\t.L1\n+\n+;; TODO: Split the above peephole2.\n+\n ;; Transform\n ;;\n ;;\tcmp.l\t#65535,er0\n@@ -4639,6 +4701,18 @@\n        break;\n      }\")\n \n+;; Transform\n+;;\n+;;\tcmp.l\t#65535,er0\n+;;\tbhi\t.L1\n+;;\n+;; into\n+;;\n+;;\tmov.l\te0,e0\n+;;\tbne\t.L1\n+\n+;; TODO: Split the above peephole2.\n+\n ;; For constants like -1, -2, 1, 2, it is still cheaper to make a copy\n ;; of the register being tested, do the subtraction on the copy, and\n ;; then test the copy.  We avoid this transformation if we see more"}]}