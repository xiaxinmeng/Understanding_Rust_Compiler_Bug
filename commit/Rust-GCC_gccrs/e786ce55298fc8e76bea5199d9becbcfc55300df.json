{"sha": "e786ce55298fc8e76bea5199d9becbcfc55300df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4NmNlNTUyOThmYzhlNzZiZWE1MTk5ZDliZWNiY2ZjNTUzMDBkZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-01-16T16:39:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-01-16T16:39:57Z"}, "message": "Initial revision\n\nFrom-SVN: r11026", "tree": {"sha": "b3ae515784a2201cc6b89c009a0ecb9a4e01282a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3ae515784a2201cc6b89c009a0ecb9a4e01282a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e786ce55298fc8e76bea5199d9becbcfc55300df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e786ce55298fc8e76bea5199d9becbcfc55300df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e786ce55298fc8e76bea5199d9becbcfc55300df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e786ce55298fc8e76bea5199d9becbcfc55300df/comments", "author": null, "committer": null, "parents": [{"sha": "9c57488b49b624766e90133c3cc7c928f583c120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c57488b49b624766e90133c3cc7c928f583c120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c57488b49b624766e90133c3cc7c928f583c120"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "4617b0a673e7dd7ed184b392b89c27fa8e3ebcde", "filename": "gcc/config/dbxcoff.h", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e786ce55298fc8e76bea5199d9becbcfc55300df/gcc%2Fconfig%2Fdbxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e786ce55298fc8e76bea5199d9becbcfc55300df/gcc%2Fconfig%2Fdbxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdbxcoff.h?ref=e786ce55298fc8e76bea5199d9becbcfc55300df", "patch": "@@ -0,0 +1,68 @@\n+/* Definitions needed when using stabs embedded in COFF sections.\n+   Copyright (C) 1996 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This file may be included by any COFF target which wishes to\n+   support -gstabs generating stabs in sections, as produced by gas\n+   and understood by gdb.  */\n+\n+/* Output DBX (stabs) debugging information if doing -gstabs.  */\n+\n+#define DBX_DEBUGGING_INFO\n+\n+/* Generate SDB debugging information by default. */\n+\n+#ifndef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE SDB_DEBUG\n+#endif\n+\n+/* Be function-relative for block and source line stab directives.  */\n+\n+#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n+\n+/* but, to make this work, functions must appear prior to line info.  */\n+\n+#define DBX_FUNCTION_FIRST\n+\n+/* Generate a blank trailing N_SO to mark the end of the .o file, since\n+   we can't depend upon the linker to mark .o file boundaries with\n+   embedded stabs.  */\n+\n+#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\t\t\\\n+  fprintf (FILE,\t\t\t\t\t\t\t\\\n+\t   \"\\t.text\\n\\t.stabs \\\"\\\",%d,0,0,Letext\\nLetext:\\n\", N_SO)\n+\n+/* Like block addresses, stabs line numbers are relative to the\n+   current function.  */\n+\n+#undef ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(FILE, LINE)\t\t\t\\\n+{ if (write_symbols == SDB_DEBUG) {\t\t\t\t\\\n+    fprintf ((FILE), \"\\t.ln\\t%d\\n\",\t\t\t\t\\\n+\t     ((sdb_begin_function_line > -1)\t\t\t\\\n+\t      ? (LINE) - sdb_begin_function_line : 1));\t\t\\\n+  } else if (write_symbols == DBX_DEBUG) {\t\t\t\\\n+    static int sym_lineno = 1;\t\t\t\t\t\\\n+    fprintf (FILE, \".stabn 68,0,%d,.LM%d-\",\t\t\t\\\n+\t     LINE, sym_lineno);\t\t\t\t\t\\\n+    assemble_name (FILE,\t\t\t\t\t\\\n+\t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\\n+    fprintf (FILE, \"\\n.LM%d:\\n\", sym_lineno);\t\t\t\\\n+    sym_lineno += 1;\t\t\t\t\t\t\\\n+  } }"}]}