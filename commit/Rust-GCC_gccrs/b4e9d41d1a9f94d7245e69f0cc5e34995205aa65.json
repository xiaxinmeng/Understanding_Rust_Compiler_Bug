{"sha": "b4e9d41d1a9f94d7245e69f0cc5e34995205aa65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlOWQ0MWQxYTlmOTRkNzI0NWU2OWYwY2M1ZTM0OTk1MjA1YWE2NQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-12-11T20:05:20Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-12-11T20:05:20Z"}, "message": "re PR fortran/46842 (wrong results with MATMUL(..., TRANSPOSE (func ())) -- 465.tonto test run miscompares)\n\n2010-12-11  Mikael Morin   <mikael@gcc.gnu.org>\n\t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/46842\n\t* trans-array.c (dim_ok): New helper function.\n\t(gfc_conv_expr_descriptor): Use new helper function to check\n\tfunction array is full.\n\nCo-Authored-By: Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\nFrom-SVN: r167713", "tree": {"sha": "900d74eec8da14df49f0761d3dff6b26098f6b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/900d74eec8da14df49f0761d3dff6b26098f6b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65/comments", "author": null, "committer": null, "parents": [{"sha": "e97cfd97070b27823e55d717b802c4bc95954104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97cfd97070b27823e55d717b802c4bc95954104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97cfd97070b27823e55d717b802c4bc95954104"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "03068e0c6a030bcff05f95edbb8d682e99329c2a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b4e9d41d1a9f94d7245e69f0cc5e34995205aa65", "patch": "@@ -1,3 +1,11 @@\n+2010-12-11  Mikael Morin   <mikael@gcc.gnu.org>\n+\t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/46842\n+\t* trans-array.c (dim_ok): New helper function.\n+\t(gfc_conv_expr_descriptor): Use new helper function to check\n+\tfunction array is full.\n+\n 2010-12-10  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/46540"}, {"sha": "d8c37a52d07a97c7b0d370e9fb4db1ea6b209603", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e9d41d1a9f94d7245e69f0cc5e34995205aa65/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=b4e9d41d1a9f94d7245e69f0cc5e34995205aa65", "patch": "@@ -5293,6 +5293,16 @@ get_array_charlen (gfc_expr *expr, gfc_se *se)\n     }\n }\n \n+/* Helper function to check dimensions.  */\n+static bool\n+dim_ok (gfc_ss_info *info)\n+{\n+  int n;\n+  for (n = 0; n < info->dimen; n++)\n+    if (info->dim[n] != n)\n+      return false;\n+  return true;\n+}\n \n /* Convert an array for passing as an actual argument.  Expressions and\n    vector subscripts are evaluated and stored in a temporary, which is then\n@@ -5378,15 +5388,7 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n       else\n \tfull = gfc_full_array_ref_p (info->ref, NULL);\n \n-      if (full)\n-\tfor (n = 0; n < info->dimen; n++)\n-\t  if (info->dim[n] != n)\n-\t    {\n-\t      full = 0;\n-\t      break;\n-\t    }\n-\n-      if (full)\n+      if (full && dim_ok (info))\n \t{\n \t  if (se->direct_byref && !se->byref_noassign)\n \t    {\n@@ -5588,7 +5590,7 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n \n       desc = loop.temp_ss->data.info.descriptor;\n     }\n-  else if (expr->expr_type == EXPR_FUNCTION)\n+  else if (expr->expr_type == EXPR_FUNCTION && dim_ok (info))\n     {\n       desc = info->descriptor;\n       se->string_length = ss->string_length;"}]}