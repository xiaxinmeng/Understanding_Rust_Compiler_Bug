{"sha": "76ff5c2403e918519f441b073a8b7c1053d62217", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmZjVjMjQwM2U5MTg1MTlmNDQxYjA3M2E4YjdjMTA1M2Q2MjIxNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-27T12:20:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-27T12:20:55Z"}, "message": "re PR target/82703 (Wrong addition of std::array components with -O2 -ftree-loop-vectorize -ftree-slp-vectorize (works fine with -O2))\n\n\tPR target/82703\n\t* config/i386/i386-protos.h (maybe_get_pool_constant): Removed.\n\t* config/i386/i386.c (maybe_get_pool_constant): Removed.\n\t(ix86_split_to_parts): Use avoid_constant_pool_reference instead of\n\tmaybe_get_pool_constant.\n\t* config/i386/predicates.md (zero_extended_scalar_load_operand):\n\tLikewise.\n\n\t* gcc.dg/pr82703.c: New test.\n\nFrom-SVN: r254145", "tree": {"sha": "6d218d4046c82c2d4e633aca9a0db275174dd6d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d218d4046c82c2d4e633aca9a0db275174dd6d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ff5c2403e918519f441b073a8b7c1053d62217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ff5c2403e918519f441b073a8b7c1053d62217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ff5c2403e918519f441b073a8b7c1053d62217", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ff5c2403e918519f441b073a8b7c1053d62217/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0348dd008a1cba97328011ea2ac93691522a558f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0348dd008a1cba97328011ea2ac93691522a558f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0348dd008a1cba97328011ea2ac93691522a558f"}], "stats": {"total": 69, "additions": 46, "deletions": 23}, "files": [{"sha": "cdfc0025c6369b62310159fc56ce2d10462362d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76ff5c2403e918519f441b073a8b7c1053d62217", "patch": "@@ -1,3 +1,13 @@\n+2017-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/82703\n+\t* config/i386/i386-protos.h (maybe_get_pool_constant): Removed.\n+\t* config/i386/i386.c (maybe_get_pool_constant): Removed.\n+\t(ix86_split_to_parts): Use avoid_constant_pool_reference instead of\n+\tmaybe_get_pool_constant.\n+\t* config/i386/predicates.md (zero_extended_scalar_load_operand):\n+\tLikewise.\n+\n 2017-10-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* doc/install.texi (Specific, i?86-*-solaris2.10): Simplify gas"}, {"sha": "aaed0b747cff489b29afe5fae2ce3d08eb113b46", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=76ff5c2403e918519f441b073a8b7c1053d62217", "patch": "@@ -277,8 +277,6 @@ extern bool i386_pe_type_dllexport_p (tree);\n \n extern int i386_pe_reloc_rw_mask (void);\n \n-extern rtx maybe_get_pool_constant (rtx);\n-\n extern char internal_label_prefix[16];\n extern int internal_label_prefix_len;\n "}, {"sha": "6ee6abea258d8cb380392a3227c537244f71f4c8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=76ff5c2403e918519f441b073a8b7c1053d62217", "patch": "@@ -19211,20 +19211,6 @@ ix86_expand_clear (rtx dest)\n   emit_insn (tmp);\n }\n \n-/* X is an unchanging MEM.  If it is a constant pool reference, return\n-   the constant pool rtx, else NULL.  */\n-\n-rtx\n-maybe_get_pool_constant (rtx x)\n-{\n-  x = ix86_delegitimize_address (XEXP (x, 0));\n-\n-  if (GET_CODE (x) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P (x))\n-    return get_pool_constant (x);\n-\n-  return NULL_RTX;\n-}\n-\n void\n ix86_expand_move (machine_mode mode, rtx operands[])\n {\n@@ -24832,11 +24818,7 @@ ix86_split_to_parts (rtx operand, rtx *parts, machine_mode mode)\n   /* Optimize constant pool reference to immediates.  This is used by fp\n      moves, that force all constants to memory to allow combining.  */\n   if (MEM_P (operand) && MEM_READONLY_P (operand))\n-    {\n-      rtx tmp = maybe_get_pool_constant (operand);\n-      if (tmp)\n-\toperand = tmp;\n-    }\n+    operand = avoid_constant_pool_reference (operand);\n \n   if (MEM_P (operand) && !offsettable_memref_p (operand))\n     {"}, {"sha": "89df15ac55cc2b9fec5ea54cc06bae114b5738d3", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=76ff5c2403e918519f441b073a8b7c1053d62217", "patch": "@@ -1004,9 +1004,9 @@\n   (match_code \"mem\")\n {\n   unsigned n_elts;\n-  op = maybe_get_pool_constant (op);\n+  op = avoid_constant_pool_reference (op);\n \n-  if (!(op && GET_CODE (op) == CONST_VECTOR))\n+  if (GET_CODE (op) != CONST_VECTOR)\n     return false;\n \n   n_elts = CONST_VECTOR_NUNITS (op);"}, {"sha": "6cd76b40b96121e65f67747b1d8020c58e32f8f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76ff5c2403e918519f441b073a8b7c1053d62217", "patch": "@@ -1,3 +1,8 @@\n+2017-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/82703\n+\t* gcc.dg/pr82703.c: New test.\n+\n 2017-10-27  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.dg/ipa/propmalloc-1.c: New test-case."}, {"sha": "0bd2f91eea436e73afa82bce140680c41a2ff20a", "filename": "gcc/testsuite/gcc.dg/pr82703.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82703.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ff5c2403e918519f441b073a8b7c1053d62217/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82703.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82703.c?ref=76ff5c2403e918519f441b073a8b7c1053d62217", "patch": "@@ -0,0 +1,28 @@\n+/* PR target/82703 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-tree-sra -ftree-vectorize\" } */\n+\n+__attribute__((noinline, noclone)) void\n+compare (const double *p, const double *q)\n+{\n+  for (int i = 0; i < 3; ++i)\n+    if (p[i] != q[i])\n+      __builtin_abort ();\n+}\n+\n+double vr[3] = { 4, 4, 4 };\n+\n+int\n+main ()\n+{\n+  double v1[3] = { 1, 2, 3 };\n+  double v2[3] = { 3, 2, 1 };\n+  double v3[3];\n+  __builtin_memcpy (v3, v1, sizeof (v1));\n+  for (int i = 0; i < 3; ++i)\n+    v3[i] += v2[i];\n+  for (int i = 0; i < 3; ++i)\n+    v1[i] += v2[i];\n+  compare (v3, vr);\n+  return 0;\n+}"}]}