{"sha": "10432733a5534e0116b0b1770139a56ae2ab01fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA0MzI3MzNhNTUzNGUwMTE2YjBiMTc3MDEzOWE1NmFlMmFiMDFmZQ==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2014-04-25T17:00:33Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2014-04-25T17:00:33Z"}, "message": "[ARM] Enable tail call optimization for long call\n\ngcc/\n\n\t* config/arm/predicates.md (call_insn_operand): Add long_call check.\n\t* config/arm/arm.md (sibcall, sibcall_value): Force the address to\n\treg for long_call.\n\t* config/arm/arm.c (arm_function_ok_for_sibcall): Remove long_call\n\trestriction.\n\ngcc/testsuite\n\n\t* gcc.target/arm/tail-long-call.c: New test.\n\nFrom-SVN: r209808", "tree": {"sha": "90f35fa09214aa4563cf77cbd2ffc558975d270c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f35fa09214aa4563cf77cbd2ffc558975d270c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10432733a5534e0116b0b1770139a56ae2ab01fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10432733a5534e0116b0b1770139a56ae2ab01fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10432733a5534e0116b0b1770139a56ae2ab01fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10432733a5534e0116b0b1770139a56ae2ab01fe/comments", "author": null, "committer": null, "parents": [{"sha": "4ec21835cbed3f28c7939dcc72795c28dc6dc46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec21835cbed3f28c7939dcc72795c28dc6dc46a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ec21835cbed3f28c7939dcc72795c28dc6dc46a"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "7de7be5d305ba555d9faf7463ffa48e89df1349d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10432733a5534e0116b0b1770139a56ae2ab01fe", "patch": "@@ -1,3 +1,11 @@\n+2014-04-25  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* config/arm/predicates.md (call_insn_operand): Add long_call check.\n+\t* config/arm/arm.md (sibcall, sibcall_value): Force the address to\n+\treg for long_call.\n+\t* config/arm/arm.c (arm_function_ok_for_sibcall): Remove long_call\n+\trestriction.\n+\n 2014-04-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_cortex_a8_tune): Initialise"}, {"sha": "16fc7edd96c2595fb0e2dc152bafd5d614bc5277", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=10432733a5534e0116b0b1770139a56ae2ab01fe", "patch": "@@ -6217,11 +6217,6 @@ arm_function_ok_for_sibcall (tree decl, tree exp)\n   if (TARGET_VXWORKS_RTP && flag_pic && !targetm.binds_local_p (decl))\n     return false;\n \n-  /* Cannot tail-call to long calls, since these are out of range of\n-     a branch instruction.  */\n-  if (decl && arm_is_long_call_p (decl))\n-    return false;\n-\n   /* If we are interworking and the function is not declared static\n      then we can't tail-call it unless we know that it exists in this\n      compilation unit (since it might be a Thumb routine).  */"}, {"sha": "97753ce1e9846b6d760b87cfa3aa52a8a79364fe", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=10432733a5534e0116b0b1770139a56ae2ab01fe", "patch": "@@ -9367,8 +9367,10 @@\n   \"TARGET_32BIT\"\n   \"\n   {\n-    if (!REG_P (XEXP (operands[0], 0))\n-       && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF))\n+    if ((!REG_P (XEXP (operands[0], 0))\n+\t && GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF)\n+\t|| (GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF\n+\t    && arm_is_long_call_p (SYMBOL_REF_DECL (XEXP (operands[0], 0)))))\n      XEXP (operands[0], 0) = force_reg (SImode, XEXP (operands[0], 0));\n \n     if (operands[2] == NULL_RTX)\n@@ -9385,8 +9387,10 @@\n   \"TARGET_32BIT\"\n   \"\n   {\n-    if (!REG_P (XEXP (operands[1], 0)) &&\n-       (GET_CODE (XEXP (operands[1],0)) != SYMBOL_REF))\n+    if ((!REG_P (XEXP (operands[1], 0))\n+\t && GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF)\n+\t|| (GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n+\t    && arm_is_long_call_p (SYMBOL_REF_DECL (XEXP (operands[1], 0)))))\n      XEXP (operands[1], 0) = force_reg (SImode, XEXP (operands[1], 0));\n \n     if (operands[3] == NULL_RTX)"}, {"sha": "d74fcb31bc7667ce549e4380a68237ce107c3558", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=10432733a5534e0116b0b1770139a56ae2ab01fe", "patch": "@@ -681,5 +681,6 @@\n        (match_code \"reg\" \"0\")))\n \n (define_predicate \"call_insn_operand\"\n-  (ior (match_code \"symbol_ref\")\n+  (ior (and (match_code \"symbol_ref\")\n+\t    (match_test \"!arm_is_long_call_p (SYMBOL_REF_DECL (op))\"))\n        (match_operand 0 \"s_register_operand\")))"}, {"sha": "88681c8d698f3f160c90bb41dfd2bea67b259193", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10432733a5534e0116b0b1770139a56ae2ab01fe", "patch": "@@ -1,3 +1,7 @@\n+2014-04-25  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* gcc.target/arm/tail-long-call.c: New test.\n+\n 2014-04-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/60930"}, {"sha": "9b274686849b59c613c7397d53a848d9a64bf92c", "filename": "gcc/testsuite/gcc.target/arm/tail-long-call.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftail-long-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10432733a5534e0116b0b1770139a56ae2ab01fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftail-long-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftail-long-call.c?ref=10432733a5534e0116b0b1770139a56ae2ab01fe", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-skip-if \"need at least armv5te\" { *-*-* } { \"-march=armv[234]*\" \"-mthumb\" } { \"\" } } */\n+/* { dg-options \"-O2 -march=armv5te -marm\" } */\n+/* { dg-final { scan-assembler \"bx\" } } */\n+/* { dg-final { scan-assembler-not \"blx\" } } */\n+\n+int lcal (int) __attribute__ ((long_call));\n+\n+int\n+dec (int a)\n+{\n+  return lcal (a);\n+}"}]}