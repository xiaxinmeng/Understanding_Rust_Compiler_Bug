{"sha": "0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4NDk1YWU0NTU4ZDBlOTZlZjNmMWNkYjgzMzNlODIwMjI4ZjBhMg==", "commit": {"author": {"name": "Fariborz Jahanian", "email": "fjahanian@apple.com", "date": "2005-03-30T20:59:21Z"}, "committer": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2005-03-30T20:59:21Z"}, "message": "Fix problem with calling powi* builtins.\n\nOKed by Richard Henderson.\n\nFrom-SVN: r97278", "tree": {"sha": "dc8bee2ade4f014827f574e15ef69b4b8b8775b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc8bee2ade4f014827f574e15ef69b4b8b8775b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/comments", "author": null, "committer": null, "parents": [{"sha": "63579539f1ba8e2985327e52965906f09d6f0e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63579539f1ba8e2985327e52965906f09d6f0e36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63579539f1ba8e2985327e52965906f09d6f0e36"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "384e48e8cdc0ef0ac44ea867c916ef0f42122fa2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "patch": "@@ -1,3 +1,12 @@\n+2005-03-30 Fariborz Jahanian <fjahanian@apple.com>\n+\n+\t* builtins.c (expand_builtin_powi): Fix mode of\n+\t2nd argument to match int.\n+\t* libgcc2.h (__powisf2, __powidf2, __powixf2, __powitf2): Change\n+\t2nd argument type to int.\n+\t* libgcc2.c: Change prototype of __powi* functions to use \n+\tint.\n+\n 2005-03-30  Dale Johannesen  <dalej@apple.com>\n \n \tPR middle-end/19225"}, {"sha": "fb044de52ac9be952ce564abc2953bb7c3c1e7c6", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "patch": "@@ -2380,6 +2380,7 @@ expand_builtin_powi (tree exp, rtx target, rtx subtarget)\n   tree arg0, arg1;\n   rtx op0, op1;\n   enum machine_mode mode;\n+  enum machine_mode mode2;\n \n   if (! validate_arglist (arglist, REAL_TYPE, INTEGER_TYPE, VOID_TYPE))\n     return 0;\n@@ -2411,19 +2412,22 @@ expand_builtin_powi (tree exp, rtx target, rtx subtarget)\n \n   /* Emit a libcall to libgcc.  */\n \n+  /* Mode of the 2nd argument must match that of an int. */\n+  mode2 = mode_for_size (INT_TYPE_SIZE, MODE_INT, 0);\n+\n   if (target == NULL_RTX)\n     target = gen_reg_rtx (mode);\n \n   op0 = expand_expr (arg0, subtarget, mode, 0);\n   if (GET_MODE (op0) != mode)\n     op0 = convert_to_mode (mode, op0, 0);\n-  op1 = expand_expr (arg1, 0, word_mode, 0);\n-  if (GET_MODE (op1) != word_mode)\n-    op1 = convert_to_mode (word_mode, op1, 0);\n+  op1 = expand_expr (arg1, 0, mode2, 0);\n+  if (GET_MODE (op1) != mode2)\n+    op1 = convert_to_mode (mode2, op1, 0);\n \n   target = emit_library_call_value (powi_optab->handlers[(int) mode].libfunc,\n \t\t\t\t    target, LCT_CONST_MAKE_BLOCK, mode, 2,\n-\t\t\t\t    op0, mode, op1, word_mode);\n+\t\t\t\t    op0, mode, op1, mode2);\n \n   return target;\n }"}, {"sha": "e1b2c45af2d8ae58c3212d93fc6a12a1f0c24ade", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "patch": "@@ -1538,10 +1538,12 @@ __fixunssfSI (SFtype a)\n #  define NAME __powitf2\n # endif\n \n+#undef int\n+#undef unsigned\n TYPE\n-NAME (TYPE x, Wtype m)\n+NAME (TYPE x, int m)\n {\n-  UWtype n = m < 0 ? -m : m;\n+  unsigned int n = m < 0 ? -m : m;\n   TYPE y = n % 2 ? x : 1;\n   while (n >>= 1)\n     {"}, {"sha": "cc4c13f7902ef82d1858357f50559d5ae4138ffb", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8495ae4558d0e96ef3f1cdb8333e820228f0a2/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=0b8495ae4558d0e96ef3f1cdb8333e820228f0a2", "patch": "@@ -314,12 +314,13 @@ extern SItype __mulvsi3 (SItype, SItype);\n extern SItype __negvsi2 (SItype);\n #endif /* COMPAT_SIMODE_TRAPPING_ARITHMETIC */\n \n+#undef int\n #if LIBGCC2_HAS_SF_MODE\n extern DWtype __fixsfdi (SFtype);\n extern SFtype __floatdisf (DWtype);\n extern UWtype __fixunssfSI (SFtype);\n extern DWtype __fixunssfDI (SFtype);\n-extern SFtype __powisf2 (SFtype, Wtype);\n+extern SFtype __powisf2 (SFtype, int);\n extern SCtype __divsc3 (SFtype, SFtype, SFtype, SFtype);\n extern SCtype __mulsc3 (SFtype, SFtype, SFtype, SFtype);\n #endif\n@@ -328,7 +329,7 @@ extern DWtype __fixdfdi (DFtype);\n extern DFtype __floatdidf (DWtype);\n extern UWtype __fixunsdfSI (DFtype);\n extern DWtype __fixunsdfDI (DFtype);\n-extern DFtype __powidf2 (DFtype, Wtype);\n+extern DFtype __powidf2 (DFtype, int);\n extern DCtype __divdc3 (DFtype, DFtype, DFtype, DFtype);\n extern DCtype __muldc3 (DFtype, DFtype, DFtype, DFtype);\n #endif\n@@ -338,7 +339,7 @@ extern DWtype __fixxfdi (XFtype);\n extern DWtype __fixunsxfDI (XFtype);\n extern XFtype __floatdixf (DWtype);\n extern UWtype __fixunsxfSI (XFtype);\n-extern XFtype __powixf2 (XFtype, Wtype);\n+extern XFtype __powixf2 (XFtype, int);\n extern XCtype __divxc3 (XFtype, XFtype, XFtype, XFtype);\n extern XCtype __mulxc3 (XFtype, XFtype, XFtype, XFtype);\n #endif\n@@ -347,10 +348,11 @@ extern XCtype __mulxc3 (XFtype, XFtype, XFtype, XFtype);\n extern DWtype __fixunstfDI (TFtype);\n extern DWtype __fixtfdi (TFtype);\n extern TFtype __floatditf (DWtype);\n-extern TFtype __powitf2 (TFtype, Wtype);\n+extern TFtype __powitf2 (TFtype, int);\n extern TCtype __divtc3 (TFtype, TFtype, TFtype, TFtype);\n extern TCtype __multc3 (TFtype, TFtype, TFtype, TFtype);\n #endif\n+#define int bogus_type\n \n /* DWstructs are pairs of Wtype values in the order determined by\n    LIBGCC2_WORDS_BIG_ENDIAN.  */"}]}