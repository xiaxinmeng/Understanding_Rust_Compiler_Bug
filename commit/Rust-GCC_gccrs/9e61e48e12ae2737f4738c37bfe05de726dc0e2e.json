{"sha": "9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2MWU0OGUxMmFlMjczN2Y0NzM4YzM3YmZlMDVkZTcyNmRjMGUyZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-13T08:12:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-13T08:12:59Z"}, "message": "re PR middle-end/84834 (ICE: tree check: expected integer_cst, have complex_cst in to_wide, at tree.h:5527)\n\n\tPR middle-end/84834\n\t* match.pd ((A & C) != 0 ? D : 0): Use INTEGER_CST@2 instead of\n\tinteger_pow2p@2 and test integer_pow2p in condition.\n\t(A < 0 ? C : 0): Similarly for @1.\n\n\t* gcc.dg/pr84834.c: New test.\n\nFrom-SVN: r258479", "tree": {"sha": "c36e6e8944f9cee6d2772d4dc9cc1540c2728783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c36e6e8944f9cee6d2772d4dc9cc1540c2728783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd471b26ca3923f6ca39105c0efe166248ec0425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd471b26ca3923f6ca39105c0efe166248ec0425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd471b26ca3923f6ca39105c0efe166248ec0425"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "9d48da926f7610188c552985815bcc28d9f4dd9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "patch": "@@ -1,5 +1,10 @@\n 2018-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/84834\n+\t* match.pd ((A & C) != 0 ? D : 0): Use INTEGER_CST@2 instead of\n+\tinteger_pow2p@2 and test integer_pow2p in condition.\n+\t(A < 0 ? C : 0): Similarly for @1.\n+\n \tPR middle-end/84831\n \t* stmt.c (parse_output_constraint): If the CONSTRAINT_LEN (*p, p)\n \tcharacters starting at p contain '\\0' character, don't look beyond"}, {"sha": "f61c4d7440adc09f995f7f4eb0a148c62c02beb2", "filename": "gcc/match.pd", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "patch": "@@ -3566,16 +3566,18 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n  (cond\n   (ne (bit_and @0 integer_pow2p@1) integer_zerop)\n-  integer_pow2p@2 integer_zerop)\n- (with {\n-    int shift = (wi::exact_log2 (wi::to_wide (@2))\n-\t\t - wi::exact_log2 (wi::to_wide (@1)));\n-  }\n-  (if (shift > 0)\n-   (bit_and\n-    (lshift (convert @0) { build_int_cst (integer_type_node, shift); }) @2)\n-   (bit_and\n-    (convert (rshift @0 { build_int_cst (integer_type_node, -shift); })) @2))))\n+  INTEGER_CST@2 integer_zerop)\n+ (if (integer_pow2p (@2))\n+  (with {\n+     int shift = (wi::exact_log2 (wi::to_wide (@2))\n+\t\t  - wi::exact_log2 (wi::to_wide (@1)));\n+   }\n+   (if (shift > 0)\n+    (bit_and\n+     (lshift (convert @0) { build_int_cst (integer_type_node, shift); }) @2)\n+    (bit_and\n+     (convert (rshift @0 { build_int_cst (integer_type_node, -shift); }))\n+     @2)))))\n \n /* If we have (A & C) != 0 where C is the sign bit of A, convert\n    this into A < 0.  Similarly for (A & C) == 0 into A >= 0.  */\n@@ -3595,8 +3597,9 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n  (cond\n   (lt @0 integer_zerop)\n-  integer_pow2p@1 integer_zerop)\n- (if (!TYPE_UNSIGNED (TREE_TYPE (@0)))\n+  INTEGER_CST@1 integer_zerop)\n+ (if (integer_pow2p (@1)\n+      && !TYPE_UNSIGNED (TREE_TYPE (@0)))\n   (with {\n     int shift = element_precision (@0) - wi::exact_log2 (wi::to_wide (@1)) - 1;\n    }"}, {"sha": "8e9c2ef5c5b573076978536a6d0b6c694835c01c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "patch": "@@ -1,5 +1,8 @@\n 2018-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/84834\n+\t* gcc.dg/pr84834.c: New test.\n+\n \tPR target/84827\n \t* gcc.target/i386/pr84827.c: New test.\n "}, {"sha": "38c056bb4ca52c2b366948e51c0e41fb2082aa22", "filename": "gcc/testsuite/gcc.dg/pr84834.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84834.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e61e48e12ae2737f4738c37bfe05de726dc0e2e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84834.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84834.c?ref=9e61e48e12ae2737f4738c37bfe05de726dc0e2e", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/84834 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+_Complex int\n+foo (int a)\n+{\n+  return a < 0;\n+}\n+\n+_Complex int\n+bar (int a)\n+{\n+  return (a & 8) ? (_Complex int) 16 : (_Complex int) 0;\n+}"}]}