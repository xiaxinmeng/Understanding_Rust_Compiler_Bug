{"sha": "d03f6e7bf321767f80c8474fb5aa8c60226bf445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAzZjZlN2JmMzIxNzY3ZjgwYzg0NzRmYjVhYThjNjAyMjZiZjQ0NQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-03-25T12:22:47Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-03-25T12:22:47Z"}, "message": "[C++] compiler incompatibility with lambdas\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-03/msg00982.html\n\t* lambda.c (maybe_add_lambda_conv_op): Don't add to comdat group.\n\t* g++.dg/abi/lambda-static-1.C: New.\n\nFrom-SVN: r269915", "tree": {"sha": "972bced8a969cede04916e0f2d378885437d927f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/972bced8a969cede04916e0f2d378885437d927f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d03f6e7bf321767f80c8474fb5aa8c60226bf445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03f6e7bf321767f80c8474fb5aa8c60226bf445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d03f6e7bf321767f80c8474fb5aa8c60226bf445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03f6e7bf321767f80c8474fb5aa8c60226bf445/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0eb90b5db85f59f031a827755a978772072f44d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0eb90b5db85f59f031a827755a978772072f44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0eb90b5db85f59f031a827755a978772072f44d"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "7589b30e8522446a888d510586f1c5cc718fcdf6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d03f6e7bf321767f80c8474fb5aa8c60226bf445", "patch": "@@ -1,3 +1,7 @@\n+2019-03-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lambda.c (maybe_add_lambda_conv_op): Don't add to comdat group.\n+\n 2019-03-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/60702"}, {"sha": "93664181b47b949d6cc5f66e198b091b5c3d499d", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=d03f6e7bf321767f80c8474fb5aa8c60226bf445", "patch": "@@ -1252,12 +1252,6 @@ maybe_add_lambda_conv_op (tree type)\n \n   start_preparsed_function (statfn, NULL_TREE,\n \t\t\t    SF_PRE_PARSED | SF_INCLASS_INLINE);\n-  if (DECL_ONE_ONLY (statfn))\n-    {\n-      /* Put the thunk in the same comdat group as the call op.  */\n-      cgraph_node::get_create (statfn)->add_to_same_comdat_group\n-\t(cgraph_node::get_create (callop));\n-    }\n   tree body = begin_function_body ();\n   tree compound_stmt = begin_compound_stmt (0);\n   if (!generic_lambda_p)"}, {"sha": "5aead43f1475ab53c8a84be1ecd11ece22d108c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d03f6e7bf321767f80c8474fb5aa8c60226bf445", "patch": "@@ -1,3 +1,7 @@\n+2019-03-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/abi/lambda-static-1.C: New.\n+\n 2019-03-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89802"}, {"sha": "3d23ddc4007ba61d03cd92103a5f6026cf97fbf5", "filename": "gcc/testsuite/g++.dg/abi/lambda-static-1.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flambda-static-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f6e7bf321767f80c8474fb5aa8c60226bf445/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flambda-static-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flambda-static-1.C?ref=d03f6e7bf321767f80c8474fb5aa8c60226bf445", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile { target { c++14 && comdat_group } } }\n+// { dg-additional-options -fno-inline }\n+\n+inline auto lamby () \n+{\n+  return [] {};\n+}\n+\n+void direct ()\n+{\n+  lamby ()();\n+}\n+\n+void indirect ()\n+{\n+  void (*invoke) () = lamby ();\n+\n+  invoke ();\n+}\n+\n+// The call operator and the static invoker should be comdat, but not\n+// the same group.  (that would be a compiler incompatibility)\n+\n+// { dg-final { scan-assembler \".section\\[\\t ]*.text._ZZ5lambyvENKUlvE_clEv,\\[^\\n\\r]*,_ZZ5lambyvENKUlvE_clEv,comdat\" } }\n+// { dg-final { scan-assembler \".section\\[\\t ]*.text._ZZ5lambyvENUlvE_4_FUNEv,\\[^\\n\\r]*,_ZZ5lambyvENUlvE_4_FUNEv,comdat\" } }"}]}