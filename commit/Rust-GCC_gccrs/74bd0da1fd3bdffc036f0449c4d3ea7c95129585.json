{"sha": "74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRiZDBkYTFmZDNiZGZmYzAzNmYwNDQ5YzRkM2VhN2M5NTEyOTU4NQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2014-12-19T04:53:57Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2014-12-19T04:53:57Z"}, "message": "* [SH] Add splitter to addsi3_compact.\n\nFrom-SVN: r218891", "tree": {"sha": "33cd90625d58ad0a3f152bce4b67b197a0386ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33cd90625d58ad0a3f152bce4b67b197a0386ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/comments", "author": null, "committer": null, "parents": [{"sha": "6efc6b7f05d7ea5bae0fb18dd2c8cec4aa69eb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6efc6b7f05d7ea5bae0fb18dd2c8cec4aa69eb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6efc6b7f05d7ea5bae0fb18dd2c8cec4aa69eb48"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "a9741366392184a677327010dd5e507380c361be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "patch": "@@ -1,3 +1,12 @@\n+2014-12-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/predicates.md (arith_or_int_operand): New predicate.\n+\t* config/sh/sh.md (addsi3): Use arith_or_int_operand for operand 2.\n+\tReturn fail if operands[0] and operands[1] are overlap when\n+\toperands[2] is integer constant.\n+\t(*addsi3_compact): Make it define_insn_and_split which splits\n+\treg0 := reg1 + constant to reg0 = constant and reg0 := reg0 + reg1.\n+\n 2014-12-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h (sh_movsf_ie_ra_split_p): Declare."}, {"sha": "8772332bac1bcdae0cc6d7ebaab231a807ccfca0", "filename": "gcc/config/sh/predicates.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/gcc%2Fconfig%2Fsh%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/gcc%2Fconfig%2Fsh%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fpredicates.md?ref=74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "patch": "@@ -182,6 +182,19 @@\n   return 0;\n })\n \n+;; Likewise arith_operand but always permits const_int.\n+(define_predicate \"arith_or_int_operand\"\n+  (match_code \"subreg,reg,const_int,const_vector\")\n+{\n+  if (arith_operand (op, mode))\n+    return 1;\n+\n+  if (CONST_INT_P (op))\n+    return 1;\n+\n+  return 0;\n+})\n+\n ;; Returns 1 if OP is a valid source operand for a compare insn.\n (define_predicate \"arith_reg_or_0_operand\"\n   (match_code \"subreg,reg,const_int,const_vector\")"}, {"sha": "a74e17f151f459dc988739714c923653df2f4bf4", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74bd0da1fd3bdffc036f0449c4d3ea7c95129585/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=74bd0da1fd3bdffc036f0449c4d3ea7c95129585", "patch": "@@ -2020,11 +2020,16 @@\n (define_expand \"addsi3\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(plus:SI (match_operand:SI 1 \"arith_operand\" \"\")\n-\t\t (match_operand:SI 2 \"arith_operand\" \"\")))]\n+\t\t (match_operand:SI 2 \"arith_or_int_operand\" \"\")))]\n   \"\"\n {\n   if (TARGET_SHMEDIA)\n     operands[1] = force_reg (SImode, operands[1]);\n+  else if (! arith_operand (operands[2], SImode))\n+    {\n+      if (reg_overlap_mentioned_p (operands[0], operands[1]))\n+\tFAIL;\n+    }\n })\n \n (define_insn \"addsi3_media\"\n@@ -2051,12 +2056,22 @@\n   [(set_attr \"type\" \"arith_media\")\n    (set_attr \"highpart\" \"ignore\")])\n \n-(define_insn \"*addsi3_compact\"\n-  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n-\t(plus:SI (match_operand:SI 1 \"arith_operand\" \"%0\")\n-\t\t (match_operand:SI 2 \"arith_operand\" \"rI08\")))]\n-  \"TARGET_SH1\"\n-  \"add\t%2,%0\"\n+(define_insn_and_split \"*addsi3_compact\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r,&r\")\n+\t(plus:SI (match_operand:SI 1 \"arith_operand\" \"%0,r\")\n+\t\t (match_operand:SI 2 \"arith_or_int_operand\" \"rI08,rn\")))]\n+  \"TARGET_SH1\n+   && (rtx_equal_p (operands[0], operands[1])\n+       && arith_operand (operands[2], SImode))\n+      || ! reg_overlap_mentioned_p (operands[0], operands[1])\"\n+  \"@\n+\tadd\t%2,%0\n+\t#\"\n+  \"reload_completed\n+   && ! reg_overlap_mentioned_p (operands[0], operands[1])\"\n+  [(set (match_dup 0) (match_dup 2))\n+   (set (match_dup 0) (plus:SI (match_dup 0) (match_dup 1)))]\n+  \"\"\n   [(set_attr \"type\" \"arith\")])\n \n ;; -------------------------------------------------------------------------"}]}