{"sha": "0b27d5ddb2ce7353a168c60c9109b4ee01e481eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIyN2Q1ZGRiMmNlNzM1M2ExNjhjNjBjOTEwOWI0ZWUwMWU0ODFlYg==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-03T19:50:04Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-03T19:50:04Z"}, "message": "(mulsi3): Use MATCH_DUP for op3, not MATCH_OPERAND.\n\n(globally): Delete 'x' constraint or change it to 'f', as apropriate.\n\nFrom-SVN: r7437", "tree": {"sha": "339360d00b5935840b436efb6dddac7ecf329710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/339360d00b5935840b436efb6dddac7ecf329710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b27d5ddb2ce7353a168c60c9109b4ee01e481eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b27d5ddb2ce7353a168c60c9109b4ee01e481eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b27d5ddb2ce7353a168c60c9109b4ee01e481eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b27d5ddb2ce7353a168c60c9109b4ee01e481eb/comments", "author": null, "committer": null, "parents": [{"sha": "68df59d392dd4739e121b7c022d87c233d301be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68df59d392dd4739e121b7c022d87c233d301be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68df59d392dd4739e121b7c022d87c233d301be1"}], "stats": {"total": 248, "additions": 124, "deletions": 124}, "files": [{"sha": "d4b1f986593e042e1609ebf6273b2d262c3af02a", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 124, "deletions": 124, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b27d5ddb2ce7353a168c60c9109b4ee01e481eb/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b27d5ddb2ce7353a168c60c9109b4ee01e481eb/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=0b27d5ddb2ce7353a168c60c9109b4ee01e481eb", "patch": "@@ -223,17 +223,17 @@\n (define_insn \"\"\n   [(set (reg:CCFP 0)\n \t(match_operator:CCFP 2 \"comparison_operator\"\n-\t\t\t     [(match_operand:SF 0 \"reg_or_0_operand\" \"fxG\")\n-\t\t\t      (match_operand:SF 1 \"reg_or_0_operand\" \"fxG\")]))]\n+\t\t\t     [(match_operand:SF 0 \"reg_or_0_operand\" \"fG\")\n+\t\t\t      (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")]))]\n   \"\"\n   \"fcmp,sgl,%Y2 %r0,%r1\"\n   [(set_attr \"type\" \"fpcc\")])\n \n (define_insn \"\"\n   [(set (reg:CCFP 0)\n \t(match_operator:CCFP 2 \"comparison_operator\"\n-\t\t\t     [(match_operand:DF 0 \"reg_or_0_operand\" \"fxG\")\n-\t\t\t      (match_operand:DF 1 \"reg_or_0_operand\" \"fxG\")]))]\n+\t\t\t     [(match_operand:DF 0 \"reg_or_0_operand\" \"fG\")\n+\t\t\t      (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")]))]\n   \"\"\n   \"fcmp,dbl,%Y2 %r0,%r1\"\n   [(set_attr \"type\" \"fpcc\")])\n@@ -997,9 +997,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t\t\"=r,r,r,r,r,Q,*q,!fx,fx,*T\")\n+\t\t\t\t\"=r,r,r,r,r,Q,*q,!f,f,*T\")\n \t(match_operand:SI 1 \"move_operand\"\n-\t\t\t\t\"r,J,N,K,Q,rM,rM,!fxM,*T,fx\"))]\n+\t\t\t\t\"r,J,N,K,Q,rM,rM,!fM,*T,f\"))]\n   \"register_operand (operands[0], SImode)\n    || reg_or_0_operand (operands[1], SImode)\"\n   \"@\n@@ -1261,8 +1261,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!fx\")\n-\t(match_operand:HI 1 \"move_operand\" \"r,J,N,K,Q,rM,rM,!fxM\"))]\n+  [(set (match_operand:HI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!f\")\n+\t(match_operand:HI 1 \"move_operand\" \"r,J,N,K,Q,rM,rM,!fM\"))]\n   \"register_operand (operands[0], HImode)\n    || reg_or_0_operand (operands[1], HImode)\"\n   \"@\n@@ -1362,8 +1362,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!fx\")\n-\t(match_operand:QI 1 \"move_operand\" \"r,J,N,K,Q,rM,rM,!fxM\"))]\n+  [(set (match_operand:QI 0 \"reg_or_nonsymb_mem_operand\" \"=r,r,r,r,r,Q,*q,!f\")\n+\t(match_operand:QI 1 \"move_operand\" \"r,J,N,K,Q,rM,rM,!fM\"))]\n   \"register_operand (operands[0], QImode)\n    || reg_or_0_operand (operands[1], QImode)\"\n   \"@\n@@ -1461,7 +1461,7 @@\n ;; This must come before the movdf pattern, and it must be present\n ;; to handle obscure reloading cases.\n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=?r,fx\")\n+  [(set (match_operand:DF 0 \"general_operand\" \"=?r,f\")\n \t(match_operand:DF 1 \"\" \"?E,m\"))]\n   \"GET_CODE (operands[1]) == CONST_DOUBLE\n    && operands[1] != CONST0_RTX (DFmode)\"\n@@ -1482,9 +1482,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=fx,*r,Q,?o,?Q,fx,*&r,*&r\")\n+\t\t\t  \"=f,*r,Q,?o,?Q,f,*&r,*&r\")\n \t(match_operand:DF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"fxG,*rG,fx,*r,*r,Q,o,Q\"))]\n+\t\t\t  \"fG,*rG,f,*r,*r,Q,o,Q\"))]\n   \"register_operand (operands[0], DFmode)\n    || reg_or_0_operand (operands[1], DFmode)\"\n   \"*\n@@ -1498,7 +1498,7 @@\n    (set_attr \"length\" \"4,8,4,8,16,4,8,16\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mem:DF (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 8))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\"))))]\n@@ -1518,7 +1518,7 @@\n ;; Ugh. Output is a FP register; so we need to earlyclobber something\n ;; else as a temporary.\n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mem:DF (plus:SI\n \t\t  (plus:SI\n \t\t    (mult:SI (match_operand:SI 1 \"register_operand\" \"+&r\")\n@@ -1540,7 +1540,7 @@\n   [(set (mem:DF (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 8))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\")))\n-\t(match_operand:DF 0 \"register_operand\" \"fx\"))]\n+\t(match_operand:DF 0 \"register_operand\" \"f\"))]\n   \"! TARGET_DISABLE_INDEXING\"\n   \"fstdx,s %0,%1(0,%2)\"\n   [(set_attr \"type\" \"fpstore\")\n@@ -1563,7 +1563,7 @@\n \t\t\t      (const_int 8))\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\"))\n \t\t  (match_operand:SI 3 \"const_int_operand\" \"rL\")))\n-\t(match_operand:DF 0 \"register_operand\" \"fx\"))]\n+\t(match_operand:DF 0 \"register_operand\" \"f\"))]\n   \"! TARGET_DISABLE_INDEXING && reload_in_progress\"\n   \"*\n {\n@@ -1586,7 +1586,7 @@\n }\")\n \n (define_expand \"reload_indi\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=z\")\n+  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n \t(match_operand:DI 1 \"general_operand\" \"\"))\n    (clobber (match_operand:SI 2 \"register_operand\" \"=&r\"))]\n   \"\"\n@@ -1602,7 +1602,7 @@\n \n (define_expand \"reload_outdi\"\n   [(set (match_operand:DI 0 \"general_operand\" \"\")\n-\t(match_operand:DI 1 \"register_operand\" \"z\"))\n+\t(match_operand:DI 1 \"register_operand\" \"f\"))\n    (clobber (match_operand:SI 2 \"register_operand\" \"=&r\"))]\n   \"\"\n   \"\n@@ -1657,9 +1657,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=r,o,Q,&r,&r,&r,x,x,*T\")\n+\t\t\t  \"=r,o,Q,&r,&r,&r,f,f,*T\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t  \"rM,r,r,o,Q,i,xM,*T,x\"))]\n+\t\t\t  \"rM,r,r,o,Q,i,fM,*T,f\"))]\n   \"register_operand (operands[0], DImode)\n    || reg_or_0_operand (operands[1], DImode)\"\n   \"*\n@@ -1701,7 +1701,7 @@\n ;; This must come before the movsf pattern, and it must be present\n ;; to handle obscure reloading cases.\n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=?r,fx\")\n+  [(set (match_operand:SF 0 \"general_operand\" \"=?r,f\")\n \t(match_operand:SF 1 \"\" \"?E,m\"))]\n   \"GET_CODE (operands[1]) == CONST_DOUBLE\n    && operands[1] != CONST0_RTX (SFmode)\"\n@@ -1722,9 +1722,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=fx,r,fx,r,Q,Q\")\n+\t\t\t  \"=f,r,f,r,Q,Q\")\n \t(match_operand:SF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"fxG,rG,Q,Q,fx,rG\"))]\n+\t\t\t  \"fG,rG,Q,Q,f,rG\"))]\n   \"register_operand (operands[0], SFmode)\n    || reg_or_0_operand (operands[1], SFmode)\"\n   \"@\n@@ -1738,7 +1738,7 @@\n    (set_attr \"length\" \"4,4,4,4,4,4\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mem:SF (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 4))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\"))))]\n@@ -1758,7 +1758,7 @@\n ;; Ugh. Output is a FP register; so we need to earlyclobber something\n ;; else as a temporary.\n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(mem:SF (plus:SI\n \t\t  (plus:SI\n \t\t    (mult:SI (match_operand:SI 1 \"register_operand\" \"+&r\")\n@@ -1780,7 +1780,7 @@\n   [(set (mem:SF (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 4))\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r\")))\n-\t(match_operand:SF 0 \"register_operand\" \"fx\"))]\n+\t(match_operand:SF 0 \"register_operand\" \"f\"))]\n   \"! TARGET_DISABLE_INDEXING\"\n   \"fstwx,s %0,%1(0,%2)\"\n   [(set_attr \"type\" \"fpstore\")\n@@ -1803,7 +1803,7 @@\n \t\t\t      (const_int 4))\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\"))\n \t\t  (match_operand:SI 3 \"const_int_operand\" \"rL\")))\n-\t(match_operand:SF 0 \"register_operand\" \"fx\"))]\n+\t(match_operand:SF 0 \"register_operand\" \"f\"))]\n   \"! TARGET_DISABLE_INDEXING && reload_in_progress\"\n   \"*\n {\n@@ -1873,17 +1873,17 @@\n ;; Conversions between float and double.\n \n (define_insn \"extendsfdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(float_extend:DF\n-\t (match_operand:SF 1 \"register_operand\" \"fx\")))]\n+\t (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fcnvff,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"truncdfsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"register_operand\" \"fx\")))]\n+\t (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fcnvff,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n@@ -1900,16 +1900,16 @@\n ;; to be reloaded by putting the constant into memory.\n ;; It must come before the more general floatsisf2 pattern.\n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=fx\")\n+  [(set (match_operand:SF 0 \"general_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"const_int_operand\" \"m\")))]\n   \"\"\n   \"fldws %1,%0\\;fcnvxf,sgl,sgl %0,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"floatsisf2\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=fx\")\n-\t(float:SF (match_operand:SI 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"general_operand\" \"=f\")\n+\t(float:SF (match_operand:SI 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fcnvxf,sgl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n@@ -1918,16 +1918,16 @@\n ;; to be reloaded by putting the constant into memory.\n ;; It must come before the more general floatsidf2 pattern.\n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=fx\")\n+  [(set (match_operand:DF 0 \"general_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"const_int_operand\" \"m\")))]\n   \"\"\n   \"fldws %1,%0\\;fcnvxf,sgl,dbl %0,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"floatsidf2\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=fx\")\n-\t(float:DF (match_operand:SI 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"general_operand\" \"=f\")\n+\t(float:DF (match_operand:SI 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fcnvxf,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n@@ -1953,15 +1953,15 @@\n   \"operands[2] = gen_reg_rtx (DImode);\")\n \n (define_insn \"floatdisf2\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=x\")\n-\t(float:SF (match_operand:DI 1 \"register_operand\" \"x\")))]\n+  [(set (match_operand:SF 0 \"general_operand\" \"=f\")\n+\t(float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_SNAKE\"\n   \"fcnvxf,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"floatdidf2\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=x\")\n-\t(float:DF (match_operand:DI 1 \"register_operand\" \"x\")))]\n+  [(set (match_operand:DF 0 \"general_operand\" \"=f\")\n+\t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n   \"TARGET_SNAKE\"\n   \"fcnvxf,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n@@ -1970,29 +1970,29 @@\n ;; Truncation is performed as part of the conversion.\n \n (define_insn \"fix_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=fx\")\n-\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"fx\"))))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n+\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n   \"\"\n   \"fcnvfxt,sgl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"fix_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=fx\")\n-\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"fx\"))))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n+\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n   \"\"\n   \"fcnvfxt,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"fix_truncsfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n-\t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"x\"))))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+\t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n   \"TARGET_SNAKE\"\n   \"fcnvfxt,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"fix_truncdfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n-\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"x\"))))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n   \"TARGET_SNAKE\"\n   \"fcnvfxt,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n@@ -2116,7 +2116,7 @@\n   [(set (reg:SI 26) (match_operand:SI 1 \"move_operand\" \"\"))\n    (set (reg:SI 25) (match_operand:SI 2 \"move_operand\" \"\"))\n    (parallel [(set (reg:SI 29) (mult:SI (reg:SI 26) (reg:SI 25)))\n-\t      (clobber (match_operand:SI 3 \"register_operand\" \"\"))\n+\t      (clobber (match_dup 3))\n \t      (clobber (reg:SI 26))\n \t      (clobber (reg:SI 25))\n \t      (clobber (reg:SI 31))])\n@@ -2135,21 +2135,21 @@\n \t\t\t  gen_rtx (SUBREG, SImode, scratch, 1)));\n       DONE;\n     }\n-  operands[3] = gen_reg_rtx(SImode);\n+  operands[3] = gen_reg_rtx (SImode);\n }\")\n \n (define_insn \"umulsidi3\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x\")\n-\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"x\"))\n-\t\t (zero_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"x\"))))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=f\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"f\"))\n+\t\t (zero_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"f\"))))]\n   \"TARGET_SNAKE && ! TARGET_DISABLE_FPREGS\"\n   \"xmpyu %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x\")\n-\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"x\"))\n-\t\t (match_operand:DI 2 \"uint32_operand\" \"x\")))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=f\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"f\"))\n+\t\t (match_operand:DI 2 \"uint32_operand\" \"f\")))]\n   \"TARGET_SNAKE && ! TARGET_DISABLE_FPREGS\"\n   \"xmpyu %1,%R2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n@@ -2528,107 +2528,107 @@\n ;; Floating point arithmetic instructions.\n \n (define_insn \"adddf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(plus:DF (match_operand:DF 1 \"register_operand\" \"fx\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(plus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n+\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fadd,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"addsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(plus:SF (match_operand:SF 1 \"register_operand\" \"fx\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(plus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n+\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fadd,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"subdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(minus:DF (match_operand:DF 1 \"register_operand\" \"fx\")\n-\t\t  (match_operand:DF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n+\t\t  (match_operand:DF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fsub,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"subsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(minus:SF (match_operand:SF 1 \"register_operand\" \"fx\")\n-\t\t  (match_operand:SF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(minus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n+\t\t  (match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fsub,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(mult:DF (match_operand:DF 1 \"register_operand\" \"fx\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n+\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fmpy,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"mulsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(mult:SF (match_operand:SF 1 \"register_operand\" \"fx\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n+\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fmpy,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"divdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(div:DF (match_operand:DF 1 \"register_operand\" \"fx\")\n-\t\t(match_operand:DF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(div:DF (match_operand:DF 1 \"register_operand\" \"f\")\n+\t\t(match_operand:DF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fdiv,dbl %1,%2,%0\"\n   [(set_attr \"type\" \"fpdivdbl\")])\n \n (define_insn \"divsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(div:SF (match_operand:SF 1 \"register_operand\" \"fx\")\n-\t\t(match_operand:SF 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(div:SF (match_operand:SF 1 \"register_operand\" \"f\")\n+\t\t(match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"\"\n   \"fdiv,sgl %1,%2,%0\"\n   [(set_attr \"type\" \"fpdivsgl\")])\n \n (define_insn \"negdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(neg:DF (match_operand:DF 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fsub,dbl 0,%1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"negsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(neg:SF (match_operand:SF 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fsub,sgl 0,%1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"absdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(abs:DF (match_operand:DF 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fabs,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"abssf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(abs:SF (match_operand:SF 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fabs,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"sqrtdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=fx\")\n-\t(sqrt:DF (match_operand:DF 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(sqrt:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fsqrt,dbl %1,%0\"\n   [(set_attr \"type\" \"fpsqrtdbl\")])\n \n (define_insn \"sqrtsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=fx\")\n-\t(sqrt:SF (match_operand:SF 1 \"register_operand\" \"fx\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(sqrt:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"\"\n   \"fsqrt,sgl %1,%0\"\n   [(set_attr \"type\" \"fpsqrtsgl\")])\n@@ -3147,7 +3147,7 @@\n }\")\n \n (define_insn \"call_value_internal_symref\"\n-  [(set (match_operand 0 \"\" \"=rfx\")\n+  [(set (match_operand 0 \"\" \"=rf\")\n \t(call (mem:SI (match_operand:SI 1 \"call_operand_address\" \"\"))\n \t      (match_operand 2 \"\" \"i\")))\n    (clobber (reg:SI 2))\n@@ -3163,7 +3163,7 @@\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"call_value_internal_reg\"\n-  [(set (match_operand 0 \"\" \"=rfx\")\n+  [(set (match_operand 0 \"\" \"=rf\")\n \t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t      (match_operand 2 \"\" \"i\")))\n    (clobber (reg:SI 2))\n@@ -3290,7 +3290,7 @@\n   [(set (pc)\n \t(if_then_else\n \t  (match_operator 2 \"comparison_operator\"\n-\t   [(plus:SI (match_operand:SI 0 \"register_operand\" \"+!r,!*f*x,!*m\")\n+\t   [(plus:SI (match_operand:SI 0 \"register_operand\" \"+!r,!*f,!*m\")\n \t\t     (match_operand:SI 1 \"int5_operand\" \"L,L,L\"))\n \t    (const_int 0)])\n \t  (label_ref (match_operand 3 \"\" \"\"))\n@@ -3347,7 +3347,7 @@\n   [(set (pc)\n \t(if_then_else\n \t  (match_operator 2 \"eq_neq_comparison_operator\"\n-\t   [(match_operand:SI 0 \"register_operand\" \"+!r,!*f*x,!*m\")\n+\t   [(match_operand:SI 0 \"register_operand\" \"+!r,!*f,!*m\")\n \t    (match_operand:SI 5 \"const_int_operand\" \"\")])\n \t  (label_ref (match_operand 3 \"\" \"\"))\n \t  (pc)))\n@@ -3403,7 +3403,7 @@\n \t   [(match_operand:SI 1 \"register_operand\" \"r,r,r\") (const_int 0)])\n \t  (label_ref (match_operand 3 \"\" \"\"))\n \t  (pc)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=!r,!*f*x,!*m\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=!r,!*f,!*m\")\n \t(match_dup 1))]\n   \"\"\n \"* return output_movb (operands, insn, which_alternative, 0); \"\n@@ -3449,7 +3449,7 @@\n \t   [(match_operand:SI 1 \"register_operand\" \"r,r,r\") (const_int 0)])\n \t  (pc)\n \t  (label_ref (match_operand 3 \"\" \"\"))))\n-   (set (match_operand:SI 0 \"register_operand\" \"=!r,!*f*x,!*m\")\n+   (set (match_operand:SI 0 \"register_operand\" \"=!r,!*f,!*m\")\n \t(match_dup 1))]\n   \"\"\n \"* return output_movb (operands, insn, which_alternative, 1); \"\n@@ -3494,12 +3494,12 @@\n ;; combine will not try to combine such insns...  Thus we have\n ;; to use a peephole.\n (define_peephole\n-  [(set (match_operand 0 \"register_operand\" \"=fx\")\n-\t(mult (match_operand 1 \"register_operand\" \"fx\")\n-\t      (match_operand 2 \"register_operand\" \"fx\")))\n-   (set (match_operand 3 \"register_operand\" \"+fx\")\n-\t(plus (match_operand 4 \"register_operand\" \"fx\")\n-\t      (match_operand 5 \"register_operand\" \"fx\")))]\n+  [(set (match_operand 0 \"register_operand\" \"=f\")\n+\t(mult (match_operand 1 \"register_operand\" \"f\")\n+\t      (match_operand 2 \"register_operand\" \"f\")))\n+   (set (match_operand 3 \"register_operand\" \"+f\")\n+\t(plus (match_operand 4 \"register_operand\" \"f\")\n+\t      (match_operand 5 \"register_operand\" \"f\")))]\n   \"TARGET_SNAKE && fmpyaddoperands (operands)\"\n   \"*\n {\n@@ -3520,12 +3520,12 @@\n }\")\n \n (define_peephole\n-  [(set (match_operand 3 \"register_operand\" \"+fx\")\n-\t(plus (match_operand 4 \"register_operand\" \"fx\")\n-\t      (match_operand 5 \"register_operand\" \"fx\")))\n-   (set (match_operand 0 \"register_operand\" \"=fx\")\n-\t(mult (match_operand 1 \"register_operand\" \"fx\")\n-\t      (match_operand 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand 3 \"register_operand\" \"+f\")\n+\t(plus (match_operand 4 \"register_operand\" \"f\")\n+\t      (match_operand 5 \"register_operand\" \"f\")))\n+   (set (match_operand 0 \"register_operand\" \"=f\")\n+\t(mult (match_operand 1 \"register_operand\" \"f\")\n+\t      (match_operand 2 \"register_operand\" \"f\")))]\n   \"TARGET_SNAKE && fmpyaddoperands (operands)\"\n   \"*\n {\n@@ -3548,12 +3548,12 @@\n ;; Note fsub subtracts the second operand from the first while fmpysub\n ;; does the opposite for the subtraction operands!\n (define_peephole\n-  [(set (match_operand 0 \"register_operand\" \"=fx\")\n-\t(mult (match_operand 1 \"register_operand\" \"fx\")\n-\t      (match_operand 2 \"register_operand\" \"fx\")))\n-   (set (match_operand 3 \"register_operand\" \"+fx\")\n-\t(minus (match_operand 4 \"register_operand\" \"fx\")\n-\t       (match_operand 5 \"register_operand\" \"fx\")))]\n+  [(set (match_operand 0 \"register_operand\" \"=f\")\n+\t(mult (match_operand 1 \"register_operand\" \"f\")\n+\t      (match_operand 2 \"register_operand\" \"f\")))\n+   (set (match_operand 3 \"register_operand\" \"+f\")\n+\t(minus (match_operand 4 \"register_operand\" \"f\")\n+\t       (match_operand 5 \"register_operand\" \"f\")))]\n   \"TARGET_SNAKE && fmpysuboperands (operands)\"\n   \"*\n {\n@@ -3564,12 +3564,12 @@\n }\")\n \n (define_peephole\n-  [(set (match_operand 3 \"register_operand\" \"+fx\")\n-\t(minus (match_operand 4 \"register_operand\" \"fx\")\n-\t       (match_operand 5 \"register_operand\" \"fx\")))\n-   (set (match_operand 0 \"register_operand\" \"=fx\")\n-\t(mult (match_operand 1 \"register_operand\" \"fx\")\n-\t      (match_operand 2 \"register_operand\" \"fx\")))]\n+  [(set (match_operand 3 \"register_operand\" \"+f\")\n+\t(minus (match_operand 4 \"register_operand\" \"f\")\n+\t       (match_operand 5 \"register_operand\" \"f\")))\n+   (set (match_operand 0 \"register_operand\" \"=f\")\n+\t(mult (match_operand 1 \"register_operand\" \"f\")\n+\t      (match_operand 2 \"register_operand\" \"f\")))]\n   \"TARGET_SNAKE && fmpysuboperands (operands)\"\n   \"*\n {"}]}