{"sha": "934c2060de32e45e0f8ccce8af5b7592db3bd53b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM0YzIwNjBkZTMyZTQ1ZTBmOGNjY2U4YWY1Yjc1OTJkYjNiZDUzYg==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2009-04-13T08:25:55Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-04-13T08:25:55Z"}, "message": "arm.c (return_used_this_function): Remove.\n\n2009-04-13  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n       * config/arm/arm.c (return_used_this_function): Remove.\n       (arm_output_function_prologue): Remove use of\n\treturn_used_this_function.\n       (output_return_instruction): Replace use of\n\treturn_used_this_function\n\tby cfun->machine->return_used_this_function.\n       (arm_output_epilogue): Likewise.\n       (arm_output_function_epilogue): Likewise.\n       (thumb_unexpanded_epilogue): Likewise.\n       * config/arm/arm.h (struct machine_function):\n\tNew member return_used_this_function.\n\nFrom-SVN: r145997", "tree": {"sha": "8ba1fe7ac5e2299d73bbf209809f692620b82a56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ba1fe7ac5e2299d73bbf209809f692620b82a56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/934c2060de32e45e0f8ccce8af5b7592db3bd53b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/934c2060de32e45e0f8ccce8af5b7592db3bd53b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/934c2060de32e45e0f8ccce8af5b7592db3bd53b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/934c2060de32e45e0f8ccce8af5b7592db3bd53b/comments", "author": null, "committer": null, "parents": [{"sha": "ae5cc016954e66b3b837dd705f3bc9b3b6cc5367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5cc016954e66b3b837dd705f3bc9b3b6cc5367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae5cc016954e66b3b837dd705f3bc9b3b6cc5367"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "0544dd6a232e8fe85782acd66917e4e72056a020", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/934c2060de32e45e0f8ccce8af5b7592db3bd53b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/934c2060de32e45e0f8ccce8af5b7592db3bd53b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=934c2060de32e45e0f8ccce8af5b7592db3bd53b", "patch": "@@ -1,3 +1,17 @@\n+2009-04-13  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+       * config/arm/arm.c (return_used_this_function): Remove.\n+       (arm_output_function_prologue): Remove use of\n+\treturn_used_this_function.\n+       (output_return_instruction): Replace use of\n+\treturn_used_this_function\n+\tby cfun->machine->return_used_this_function.\n+       (arm_output_epilogue): Likewise.\n+       (arm_output_function_epilogue): Likewise.\n+       (thumb_unexpanded_epilogue): Likewise.\n+       * config/arm/arm.h (struct machine_function):\n+\tNew member return_used_this_function.\n+\t\n 2009-04-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* doc/install.texi: Correct description of default directory for"}, {"sha": "e24f3c7868e0507c03ab89bd15ca019e711b6dfe", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/934c2060de32e45e0f8ccce8af5b7592db3bd53b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/934c2060de32e45e0f8ccce8af5b7592db3bd53b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=934c2060de32e45e0f8ccce8af5b7592db3bd53b", "patch": "@@ -582,10 +582,6 @@ enum machine_mode output_memory_reference_mode;\n /* The register number to be used for the PIC offset register.  */\n unsigned arm_pic_register = INVALID_REGNUM;\n \n-/* Set to 1 when a return insn is output, this means that the epilogue\n-   is not needed.  */\n-int return_used_this_function;\n-\n /* Set to 1 after arm_reorg has started.  Reset to start at the start of\n    the next function.  */\n static int after_arm_reorg = 0;\n@@ -11618,7 +11614,7 @@ output_return_instruction (rtx operand, int really_return, int reverse)\n \n   sprintf (conditional, \"%%?%%%c0\", reverse ? 'D' : 'd');\n \n-  return_used_this_function = 1;\n+  cfun->machine->return_used_this_function = 1;\n \n   offsets = arm_get_frame_offsets ();\n   live_regs_mask = offsets->saved_regs_mask;\n@@ -11883,7 +11879,6 @@ arm_output_function_prologue (FILE *f, HOST_WIDE_INT frame_size)\n   if (crtl->calls_eh_return)\n     asm_fprintf (f, \"\\t@ Calls __builtin_eh_return.\\n\");\n \n-  return_used_this_function = 0;\n }\n \n const char *\n@@ -11904,7 +11899,8 @@ arm_output_epilogue (rtx sibling)\n \n   /* If we have already generated the return instruction\n      then it is futile to generate anything else.  */\n-  if (use_return_insn (FALSE, sibling) && return_used_this_function)\n+  if (use_return_insn (FALSE, sibling) && \n+      (cfun->machine->return_used_this_function != 0))\n     return \"\";\n \n   func_type = arm_current_func_type ();\n@@ -12351,15 +12347,15 @@ arm_output_function_epilogue (FILE *file ATTRIBUTE_UNUSED,\n       /* ??? Probably not safe to set this here, since it assumes that a\n \t function will be emitted as assembly immediately after we generate\n \t RTL for it.  This does not happen for inline functions.  */\n-      return_used_this_function = 0;\n+      cfun->machine->return_used_this_function = 0;\n     }\n   else /* TARGET_32BIT */\n     {\n       /* We need to take into account any stack-frame rounding.  */\n       offsets = arm_get_frame_offsets ();\n \n       gcc_assert (!use_return_insn (FALSE, NULL)\n-\t\t  || !return_used_this_function\n+\t\t  || (cfun->machine->return_used_this_function != 0)\n \t\t  || offsets->saved_regs == offsets->outgoing_args\n \t\t  || frame_pointer_needed);\n \n@@ -17300,7 +17296,7 @@ thumb_unexpanded_epilogue (void)\n   int had_to_push_lr;\n   int size;\n \n-  if (return_used_this_function)\n+  if (cfun->machine->return_used_this_function != 0)\n     return \"\";\n \n   if (IS_NAKED (arm_current_func_type ()))"}, {"sha": "a44b40388d7bac45666c5b17498dbc959dfe2569", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/934c2060de32e45e0f8ccce8af5b7592db3bd53b/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/934c2060de32e45e0f8ccce8af5b7592db3bd53b/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=934c2060de32e45e0f8ccce8af5b7592db3bd53b", "patch": "@@ -1610,6 +1610,9 @@ typedef struct machine_function GTY(())\n      register.  We can never call via LR or PC.  We can call via SP if a\n      trampoline happens to be on the top of the stack.  */\n   rtx call_via[14];\n+  /* Set to 1 when a return insn is output, this means that the epilogue\n+     is not needed.  */\n+  int return_used_this_function;\n }\n machine_function;\n "}]}