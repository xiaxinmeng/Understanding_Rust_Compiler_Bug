{"sha": "b3fe1584251c039b787e1775ea725bc161cf334c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNmZTE1ODQyNTFjMDM5Yjc4N2UxNzc1ZWE3MjViYzE2MWNmMzM0Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-13T17:39:35Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-13T17:39:35Z"}, "message": "crtprec.c: Move to ../libgcc/config/i386.\n\n\tgcc:\n\t* config/i386/crtprec.c: Move to ../libgcc/config/i386.\n\t* config/i386/t-crtpc: Remove.\n\t* config/t-darwin (EXTRA_MULTILIB_PARTS): Remove.\n\t* config.gcc (i[34567]86-*-darwin*): Remove i386/t-crtpc from\n\ttmake_file.\n\t(x86_64-*-darwin*): Likewise.\n\t(i[34567]86-*-linux*): Likewise.\n\t(x86_64-*-linux*): Likewise.\n\n\t* config/i386/sol2.h (ENDFILE_SPEC): Redefine.\n\tHandle -mpc32, -mpc64, -mpc80.\n\n\tlibgcc:\n\t* config/i386/crtprec.c: New file.\n\t* config/i386/t-crtpc: Use $(srcdir) to refer to crtprec.c.\n\t* config.host (i[34567]86-*-darwin*): Add i386/t-crtpc to tmake_file.\n\tAdd crtprec32.o, crtprec64.o, crtprec80.o to extra_parts.\n\t(x86_64-*-darwin*): Likewise.\n\t(i[34567]86-*-solaris2*: Likewise.\n\n\tgcc/testsuite:\n\t* gcc.c-torture/execute/990127-2.x: Use -mpc64 on i?86-*-darwin*,\n\ti?86-*-solaris2*, x86_64-*-darwin*, x86_64-*-solaris2*.\n\nFrom-SVN: r176242", "tree": {"sha": "69146b101b02ce0507a1a190b64c68ba7f4876bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69146b101b02ce0507a1a190b64c68ba7f4876bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3fe1584251c039b787e1775ea725bc161cf334c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3fe1584251c039b787e1775ea725bc161cf334c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3fe1584251c039b787e1775ea725bc161cf334c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3fe1584251c039b787e1775ea725bc161cf334c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35d8090d78a398e73813e3c752e0468e69c96750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d8090d78a398e73813e3c752e0468e69c96750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d8090d78a398e73813e3c752e0468e69c96750"}], "stats": {"total": 104, "additions": 55, "deletions": 49}, "files": [{"sha": "881d83f4445bef688f34c4aeb8d5edd7ea82e815", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -1,3 +1,17 @@\n+2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/crtprec.c: Move to ../libgcc/config/i386.\n+\t* config/i386/t-crtpc: Remove.\n+\t* config/t-darwin (EXTRA_MULTILIB_PARTS): Remove.\n+\t* config.gcc (i[34567]86-*-darwin*): Remove i386/t-crtpc from\n+\ttmake_file.\n+\t(x86_64-*-darwin*): Likewise.\n+\t(i[34567]86-*-linux*): Likewise.\n+\t(x86_64-*-linux*): Likewise.\n+\n+\t* config/i386/sol2.h (ENDFILE_SPEC): Redefine.\n+\tHandle -mpc32, -mpc64, -mpc80.\n+\n 2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/alpha/crtfastmath.c: Move to ../libgcc/config/alpha."}, {"sha": "03fa7d274ca157f81e2419afed621327124ad623", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -1208,12 +1208,12 @@ i[34567]86-*-darwin*)\n \tneed_64bit_isa=yes\n \t# Baseline choice for a machine that allows m64 support.\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} t-slibgcc-dummy i386/t-crtpc\"\n+\ttmake_file=\"${tmake_file} t-slibgcc-dummy\"\n \tlibgcc_tm_file=\"$libgcc_tm_file i386/darwin-lib.h\"\n \t;;\n x86_64-*-darwin*)\n \twith_cpu=${with_cpu:-core2}\n-\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-dummy i386/t-crtpc\"\n+\ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-dummy\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin64.h\"\n \tlibgcc_tm_file=\"$libgcc_tm_file i386/darwin-lib.h\"\n \t;;\n@@ -1311,7 +1311,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \ti[34567]86-*-kopensolaris*-gnu) tm_file=\"${tm_file} i386/gnu-user.h kopensolaris-gnu.h i386/kopensolaris-gnu.h\" ;;\n \ti[34567]86-*-gnu*) tm_file=\"$tm_file i386/gnu-user.h gnu.h i386/gnu.h\";;\n \tesac\n-\ttmake_file=\"${tmake_file} i386/t-crtstuff i386/t-crtpc\"\n+\ttmake_file=\"${tmake_file} i386/t-crtstuff\"\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h \\\n@@ -1323,7 +1323,7 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \tx86_64-*-kfreebsd*-gnu) tm_file=\"${tm_file} kfreebsd-gnu.h i386/kfreebsd-gnu64.h\" ;;\n \tx86_64-*-knetbsd*-gnu) tm_file=\"${tm_file} knetbsd-gnu.h\" ;;\n \tesac\n-\ttmake_file=\"${tmake_file} i386/t-linux64 i386/t-crtstuff i386/t-crtpc\"\n+\ttmake_file=\"${tmake_file} i386/t-linux64 i386/t-crtstuff\"\n \tx86_multilibs=\"${with_multilib_list}\"\n \tif test \"$x86_multilibs\" = \"default\"; then\n \t\tx86_multilibs=\"m64,m32\""}, {"sha": "e0e7c5b6a1e44292d2623a2d7114d15aa581be4d", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -70,6 +70,14 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_SPEC\n #define ASM_SPEC ASM_SPEC_BASE\n \n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n+   %{mpc32:crtprec32.o%s} \\\n+   %{mpc64:crtprec64.o%s} \\\n+   %{mpc80:crtprec80.o%s} \\\n+   crtend.o%s crtn.o%s\"\n+\n #define SUBTARGET_CPU_EXTRA_SPECS \\\n   { \"cpp_subtarget\",\t CPP_SUBTARGET_SPEC },\t\t\\\n   { \"asm_cpu\",\t\t ASM_CPU_SPEC },\t\t\\"}, {"sha": "c165772f4ef307f3418e29ecd911fd63b527e248", "filename": "gcc/config/i386/t-crtpc", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35d8090d78a398e73813e3c752e0468e69c96750/gcc%2Fconfig%2Fi386%2Ft-crtpc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35d8090d78a398e73813e3c752e0468e69c96750/gcc%2Fconfig%2Fi386%2Ft-crtpc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-crtpc?ref=35d8090d78a398e73813e3c752e0468e69c96750", "patch": "@@ -1,34 +0,0 @@\n-# Copyright (C) 2007 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-EXTRA_PARTS += crtprec32.o crtprec64.o crtprec80.o\n-\n-$(T)crtprec32.o: $(srcdir)/config/i386/crtprec.c $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(MULTILIB_CFLAGS) -D__PREC=32 -c \\\n-\t\t$(srcdir)/config/i386/crtprec.c \\\n-\t\t-o $(T)crtprec32$(objext)\n-\n-$(T)crtprec64.o: $(srcdir)/config/i386/crtprec.c $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(MULTILIB_CFLAGS) -D__PREC=64 -c \\\n-\t\t$(srcdir)/config/i386/crtprec.c \\\n-\t\t-o $(T)crtprec64$(objext)\n-\n-$(T)crtprec80.o: $(srcdir)/config/i386/crtprec.c $(GCC_PASSES)\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(MULTILIB_CFLAGS) -D__PREC=80 -c \\\n-\t\t$(srcdir)/config/i386/crtprec.c \\\n-\t\t-o $(T)crtprec80$(objext)"}, {"sha": "d4743a620aa1aa847c84fab701be58af05bdda64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -1,3 +1,8 @@\n+2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.c-torture/execute/990127-2.x: Use -mpc64 on i?86-*-darwin*,\n+\ti?86-*-solaris2*, x86_64-*-darwin*, x86_64-*-solaris2*.\n+\n 2011-07-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* lib/g++.exp (g++_init):  Use istarget.  Remove target_triplet global."}, {"sha": "3e1d8352d22a5d36bf65ad0a5269f3b3164bd75a", "filename": "gcc/testsuite/gcc.c-torture/execute/990127-2.x", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.x?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -3,12 +3,16 @@\n # Use -mpc64 to force 80387 floating-point precision to 64 bits.  This option\n # has no effect on SSE, but it is needed in case of -m32 on x86_64 targets.\n \n-if { [istarget i?86-*-linux*]\n+if { [istarget i?86-*-darwin*]\n+     || [istarget i?86-*-linux*]\n      || [istarget i?86-*-kfreebsd*-gnu]\n      || [istarget i?86-*-knetbsd*-gnu]\n+     || [istarget i?86-*-solaris2*]\n+     || [istarget x86_64-*-darwin*]\n      || [istarget x86_64-*-linux*]\n      || [istarget x86_64-*-kfreebsd*-gnu]\n-     || [istarget x86_64-*-knetbsd*-gnu] } {\n+     || [istarget x86_64-*-knetbsd*-gnu]\n+     || [istarget x86_64-*-solaris2*] } {\n \tset additional_flags \"-mpc64\"\n }\n "}, {"sha": "49fed6ef5c1fbebc78139e030380088fcd339e78", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -1,3 +1,12 @@\n+2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/crtprec.c: New file.\n+\t* config/i386/t-crtpc: Use $(srcdir) to refer to crtprec.c.\n+\t* config.host (i[34567]86-*-darwin*): Add i386/t-crtpc to tmake_file.\n+\tAdd crtprec32.o, crtprec64.o, crtprec80.o to extra_parts.\n+\t(x86_64-*-darwin*): Likewise.\n+\t(i[34567]86-*-solaris2*: Likewise.\n+\n 2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/alpha/crtfastmath.c: New file."}, {"sha": "63c4dcc34abc3687d2b116bb5ce1889032f26d33", "filename": "libgcc/config.host", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -325,12 +325,12 @@ hppa[12]*-*-hpux11*)\n \tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n i[34567]86-*-darwin*)\n-\ttmake_file=\"$tmake_file i386/t-crtfm\"\n-\textra_parts=\"$extra_parts crtfastmath.o\"\n+\ttmake_file=\"$tmake_file i386/t-crtpc i386/t-crtfm\"\n+\textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \t;;\n x86_64-*-darwin*)\n-\ttmake_file=\"t-darwin ${cpu_type}/t-darwin64 i386/t-crtfm t-slibgcc-darwin\"\n-\textra_parts=\"$extra_parts crtfastmath.o\"\n+\ttmake_file=\"t-darwin ${cpu_type}/t-darwin64 i386/t-crtpc i386/t-crtfm t-slibgcc-darwin\"\n+\textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \t;;\n i[34567]86-*-elf*)\n \t;;\n@@ -387,8 +387,8 @@ i[34567]86-*-rtems*)\n \ttmake_file=\"${tmake_file} t-crtin i386/t-softfp i386/t-crtstuff t-rtems\"\n \t;;\n i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n-\ttmake_file=\"$tmake_file i386/t-crtfm\"\n-\textra_parts=\"$extra_parts crtfastmath.o\"\n+\ttmake_file=\"$tmake_file i386/t-crtpc i386/t-crtfm\"\n+\textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \tmd_unwind_header=i386/sol2-unwind.h\n \t;;\n i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)"}, {"sha": "4f42a8fa1c19e4686b6cde81c0f1a0b37741370a", "filename": "libgcc/config/i386/crtprec.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2Fconfig%2Fi386%2Fcrtprec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2Fconfig%2Fi386%2Fcrtprec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcrtprec.c?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "previous_filename": "gcc/config/i386/crtprec.c"}, {"sha": "b605f6f79306959e4647db9ce98e90f5080f2425", "filename": "libgcc/config/i386/t-crtpc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2Fconfig%2Fi386%2Ft-crtpc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3fe1584251c039b787e1775ea725bc161cf334c/libgcc%2Fconfig%2Fi386%2Ft-crtpc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-crtpc?ref=b3fe1584251c039b787e1775ea725bc161cf334c", "patch": "@@ -1,8 +1,8 @@\n-crtprec32.o: $(gcc_srcdir)/config/i386/crtprec.c\n+crtprec32.o: $(srcdir)/config/i386/crtprec.c\n \t$(gcc_compile) -D__PREC=32 -c $<\n \n-crtprec64.o: $(gcc_srcdir)/config/i386/crtprec.c\n+crtprec64.o: $(srcdir)/config/i386/crtprec.c\n \t$(gcc_compile) -D__PREC=64 -c $<\n \n-crtprec80.o: $(gcc_srcdir)/config/i386/crtprec.c\n+crtprec80.o: $(srcdir)/config/i386/crtprec.c\n \t$(gcc_compile) -D__PREC=80 -c $<"}]}