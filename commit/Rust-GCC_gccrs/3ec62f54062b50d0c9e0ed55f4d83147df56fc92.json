{"sha": "3ec62f54062b50d0c9e0ed55f4d83147df56fc92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VjNjJmNTQwNjJiNTBkMGM5ZTBlZDU1ZjRkODMxNDdkZjU2ZmM5Mg==", "commit": {"author": {"name": "Daniel van Gerpen", "email": "daniel@vangerpen.de", "date": "2018-01-10T22:40:53Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-01-10T22:40:53Z"}, "message": "argv.c (expandargv): Correct check for dynamically allocated argv.\n\n2018-01-10  Daniel van Gerpen  <daniel@vangerpen.de>\n\n\t* argv.c (expandargv): Correct check for dynamically\n\tallocated argv.\n\nFrom-SVN: r256460", "tree": {"sha": "5c270f9ec9587a926b4a50aac29ee88f77acc61e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c270f9ec9587a926b4a50aac29ee88f77acc61e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ec62f54062b50d0c9e0ed55f4d83147df56fc92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ec62f54062b50d0c9e0ed55f4d83147df56fc92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ec62f54062b50d0c9e0ed55f4d83147df56fc92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ec62f54062b50d0c9e0ed55f4d83147df56fc92/comments", "author": {"login": "dantje", "id": 1208949, "node_id": "MDQ6VXNlcjEyMDg5NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1208949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dantje", "html_url": "https://github.com/dantje", "followers_url": "https://api.github.com/users/dantje/followers", "following_url": "https://api.github.com/users/dantje/following{/other_user}", "gists_url": "https://api.github.com/users/dantje/gists{/gist_id}", "starred_url": "https://api.github.com/users/dantje/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dantje/subscriptions", "organizations_url": "https://api.github.com/users/dantje/orgs", "repos_url": "https://api.github.com/users/dantje/repos", "events_url": "https://api.github.com/users/dantje/events{/privacy}", "received_events_url": "https://api.github.com/users/dantje/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83cbbe3aa8125d97f832c4644b4e381ac7afd5ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83cbbe3aa8125d97f832c4644b4e381ac7afd5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83cbbe3aa8125d97f832c4644b4e381ac7afd5ae"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "817ebc644ea68f458565f821c5b6b78f5e9b71eb", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ec62f54062b50d0c9e0ed55f4d83147df56fc92/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ec62f54062b50d0c9e0ed55f4d83147df56fc92/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=3ec62f54062b50d0c9e0ed55f4d83147df56fc92", "patch": "@@ -1,3 +1,8 @@\n+2018-01-10  Daniel van Gerpen  <daniel@vangerpen.de>\n+\n+\t* argv.c (expandargv): Correct check for dynamically\n+\tallocated argv.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "4f66c8979b2a5ee5fab8a62c9ea36682116e575a", "filename": "libiberty/argv.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ec62f54062b50d0c9e0ed55f4d83147df56fc92/libiberty%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ec62f54062b50d0c9e0ed55f4d83147df56fc92/libiberty%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fargv.c?ref=3ec62f54062b50d0c9e0ed55f4d83147df56fc92", "patch": "@@ -367,8 +367,8 @@ expandargv (int *argcp, char ***argvp)\n {\n   /* The argument we are currently processing.  */\n   int i = 0;\n-  /* Non-zero if ***argvp has been dynamically allocated.  */\n-  int argv_dynamic = 0;\n+  /* To check if ***argvp has been dynamically allocated.  */\n+  char ** const original_argv = *argvp;\n   /* Limit the number of response files that we parse in order\n      to prevent infinite recursion.  */\n   unsigned int iteration_limit = 2000;\n@@ -449,7 +449,7 @@ expandargv (int *argcp, char ***argvp)\n \t/* Parse the string.  */\n \tfile_argv = buildargv (buffer);\n       /* If *ARGVP is not already dynamically allocated, copy it.  */\n-      if (!argv_dynamic)\n+      if (*argvp == original_argv)\n \t*argvp = dupargv (*argvp);\n       /* Count the number of arguments.  */\n       file_argc = 0;"}]}