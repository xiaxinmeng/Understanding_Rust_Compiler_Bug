{"sha": "2194f7a28116dcfe999681c7e80de06f2aac614e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE5NGY3YTI4MTE2ZGNmZTk5OTY4MWM3ZTgwZGUwNmYyYWFjNjE0ZQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-02-22T16:30:22Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-02-22T16:30:22Z"}, "message": "re PR inline-asm/56148 (inline asm matching constraint with different mode)\n\n2013-02-22  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR inline-asm/56148\n\t* lra-constraints.c (process_alt_operands): Reload operand\n\tconflicting with earlier clobber only if no more other conflicting\n\toperands.\n\nFrom-SVN: r196223", "tree": {"sha": "c3727cc3a0c7096bab4eb9f71f6ed67e16e2ed59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3727cc3a0c7096bab4eb9f71f6ed67e16e2ed59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2194f7a28116dcfe999681c7e80de06f2aac614e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2194f7a28116dcfe999681c7e80de06f2aac614e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2194f7a28116dcfe999681c7e80de06f2aac614e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2194f7a28116dcfe999681c7e80de06f2aac614e/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d61373544eb18698bd9015f73940048aeb4324e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d61373544eb18698bd9015f73940048aeb4324e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d61373544eb18698bd9015f73940048aeb4324e"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "2b2180c15aea2e326f80a693f528ebb8a91edd53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2194f7a28116dcfe999681c7e80de06f2aac614e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2194f7a28116dcfe999681c7e80de06f2aac614e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2194f7a28116dcfe999681c7e80de06f2aac614e", "patch": "@@ -1,3 +1,10 @@\n+2013-02-22  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR inline-asm/56148\n+\t* lra-constraints.c (process_alt_operands): Reload operand\n+\tconflicting with earlier clobber only if no more other conflicting\n+\toperands.\n+\n 2013-02-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/56393"}, {"sha": "e3b4add9f18bf51023b19a5ad263d389e89c3c2c", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2194f7a28116dcfe999681c7e80de06f2aac614e/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2194f7a28116dcfe999681c7e80de06f2aac614e/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=2194f7a28116dcfe999681c7e80de06f2aac614e", "patch": "@@ -2052,7 +2052,7 @@ process_alt_operands (int only_alternative)\n       curr_alt_dont_inherit_ops_num = 0;\n       for (nop = 0; nop < early_clobbered_regs_num; nop++)\n \t{\n-\t  int i, j, clobbered_hard_regno;\n+\t  int i, j, clobbered_hard_regno, first_conflict_j, last_conflict_j;\n \t  HARD_REG_SET temp_set;\n \n \t  i = early_clobbered_nops[nop];\n@@ -2063,6 +2063,7 @@ process_alt_operands (int only_alternative)\n \t  clobbered_hard_regno = hard_regno[i];\n \t  CLEAR_HARD_REG_SET (temp_set);\n \t  add_to_hard_reg_set (&temp_set, biggest_mode[i], clobbered_hard_regno);\n+\t  first_conflict_j = last_conflict_j = -1;\n \t  for (j = 0; j < n_operands; j++)\n \t    if (j == i\n \t\t/* We don't want process insides of match_operator and\n@@ -2077,19 +2078,26 @@ process_alt_operands (int only_alternative)\n \t    /* If we don't reload j-th operand, check conflicts.  */\n \t    else if ((curr_alt_win[j] || curr_alt_match_win[j])\n \t\t     && uses_hard_regs_p (*curr_id->operand_loc[j], temp_set))\n-\t      break;\n-\t  if (j >= n_operands)\n+\t      {\n+\t\tif (first_conflict_j < 0)\n+\t\t  first_conflict_j = j;\n+\t\tlast_conflict_j = j;\n+\t      }\n+\t  if (last_conflict_j < 0)\n \t    continue;\n \t  /* If earlyclobber operand conflicts with another\n \t     non-matching operand which is actually the same register\n \t     as the earlyclobber operand, it is better to reload the\n \t     another operand as an operand matching the earlyclobber\n \t     operand can be also the same.  */\n-\t  if (operand_reg[j] != NULL_RTX && ! curr_alt_match_win[j]\n-\t      && REGNO (operand_reg[i]) == REGNO (operand_reg[j]))\n+\t  if (first_conflict_j == last_conflict_j\n+\t      && operand_reg[last_conflict_j]\n+\t      != NULL_RTX && ! curr_alt_match_win[last_conflict_j]\n+\t      && REGNO (operand_reg[i]) == REGNO (operand_reg[last_conflict_j]))\n \t    {\n-\t      curr_alt_win[j] = false;\n-\t      curr_alt_dont_inherit_ops[curr_alt_dont_inherit_ops_num++] = j;\n+\t      curr_alt_win[last_conflict_j] = false;\n+\t      curr_alt_dont_inherit_ops[curr_alt_dont_inherit_ops_num++]\n+\t\t= last_conflict_j;\n \t      losers++;\n \t      overall += LRA_LOSER_COST_FACTOR;\n \t    }"}]}