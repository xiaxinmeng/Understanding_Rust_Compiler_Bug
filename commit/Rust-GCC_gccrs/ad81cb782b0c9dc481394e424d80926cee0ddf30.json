{"sha": "ad81cb782b0c9dc481394e424d80926cee0ddf30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ4MWNiNzgyYjBjOWRjNDgxMzk0ZTQyNGQ4MDkyNmNlZTBkZGYzMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T12:39:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T12:39:36Z"}, "message": "[multiple changes]\n\n2016-04-18  Yannick Moy  <moy@adacore.com>\n\n\t* sem_util.adb (Apply_Compile_Time_Constraint_Error): Do not generate\n\traise node in GNATprove mode.\n\n2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* s-fileio.adb: Minor reformatting.\n\t* sem_prag.adb (Analyze_Input_Item): Add local\n\tvariable Input_OK. Do not consider mappings of generic formal\n\tparameters to actuals.\n\n2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Get_Cursor_Type): If iterator type is a derived\n\ttype, the cursor is declared in the scope of the parent type.\n\t(Analyze_Parameter_Specification): A qualified expression with an\n\titerator type indicates an iteration over a container (explicit\n\tor implicit).\n\nFrom-SVN: r235139", "tree": {"sha": "48448bb1a39cfcb6d4c3f50764b9189cc7a93929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48448bb1a39cfcb6d4c3f50764b9189cc7a93929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad81cb782b0c9dc481394e424d80926cee0ddf30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad81cb782b0c9dc481394e424d80926cee0ddf30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad81cb782b0c9dc481394e424d80926cee0ddf30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad81cb782b0c9dc481394e424d80926cee0ddf30/comments", "author": null, "committer": null, "parents": [{"sha": "520c0201ebc60741a955d451bb6e9cc57c268014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520c0201ebc60741a955d451bb6e9cc57c268014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520c0201ebc60741a955d451bb6e9cc57c268014"}], "stats": {"total": 122, "additions": 97, "deletions": 25}, "files": [{"sha": "0a3c479415c17c1e92a28d691d2a2f4828a92a1b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ad81cb782b0c9dc481394e424d80926cee0ddf30", "patch": "@@ -1,3 +1,23 @@\n+2016-04-18  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_util.adb (Apply_Compile_Time_Constraint_Error): Do not generate\n+\traise node in GNATprove mode.\n+\n+2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-fileio.adb: Minor reformatting.\n+\t* sem_prag.adb (Analyze_Input_Item): Add local\n+\tvariable Input_OK. Do not consider mappings of generic formal\n+\tparameters to actuals.\n+\n+2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Get_Cursor_Type): If iterator type is a derived\n+\ttype, the cursor is declared in the scope of the parent type.\n+\t(Analyze_Parameter_Specification): A qualified expression with an\n+\titerator type indicates an iteration over a container (explicit\n+\tor implicit).\n+\n 2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n \n \t* osint-c.ads, osint-c.adb (Delete_C_File, Delete_H_File): New."}, {"sha": "b8bc1ad2248d8dc595857ad829200b5a641da93b", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=ad81cb782b0c9dc481394e424d80926cee0ddf30", "patch": "@@ -1057,8 +1057,12 @@ package body System.File_IO is\n \n          else\n             Fopen_Mode\n-              (Namestr, Mode, Text_Encoding in Text_Content_Encoding,\n-               Creat, Amethod, Fopstr);\n+              (Namestr => Namestr,\n+               Mode    => Mode,\n+               Text    => Text_Encoding in Text_Content_Encoding,\n+               Creat   => Creat,\n+               Amethod => Amethod,\n+               Fopstr  => Fopstr);\n \n             --  A special case, if we are opening (OPEN case) a file and the\n             --  mode returned by Fopen_Mode is not \"r\" or \"r+\", then we first\n@@ -1230,8 +1234,12 @@ package body System.File_IO is\n \n       else\n          Fopen_Mode\n-           (File.Name.all, Mode, File.Text_Encoding in Text_Content_Encoding,\n-            False, File.Access_Method, Fopstr);\n+           (Namestr => File.Name.all,\n+            Mode    => Mode,\n+            Text    => File.Text_Encoding in Text_Content_Encoding,\n+            Creat   => False,\n+            Amethod => File.Access_Method,\n+            Fopstr  => Fopstr);\n \n          File.Stream := freopen\n            (File.Name.all'Address, Fopstr'Address, File.Stream,"}, {"sha": "b29b73fb1c607f449d109492e6449b928e60f25e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ad81cb782b0c9dc481394e424d80926cee0ddf30", "patch": "@@ -1795,7 +1795,15 @@ package body Sem_Ch5 is\n          Ent : Entity_Id;\n \n       begin\n-         Ent := First_Entity (Scope (Typ));\n+         --  If iterator type is derived, the cursor is declared in the scope\n+         --  of the parent type.\n+\n+         if Is_Derived_Type (Typ) then\n+            Ent := First_Entity (Scope (Etype (Typ)));\n+         else\n+            Ent := First_Entity (Scope (Typ));\n+         end if;\n+\n          while Present (Ent) loop\n             exit when Chars (Ent) = Name_Cursor;\n             Next_Entity (Ent);\n@@ -2747,8 +2755,9 @@ package body Sem_Ch5 is\n \n          --  a)  a function call,\n          --  b)  an identifier that is not a type,\n-         --  c)  an attribute reference 'Old (within a postcondition)\n-         --  d)  an unchecked conversion\n+         --  c)  an attribute reference 'Old (within a postcondition),\n+         --  d)  an unchecked conversion or a qualified expression with\n+         --      the proper iterator type.\n \n          --  then it is an iteration over a container. It was classified as\n          --  a loop specification by the parser, and must be rewritten now\n@@ -2758,13 +2767,19 @@ package body Sem_Ch5 is\n          --  conversion is always an object.\n \n          if Nkind (DS_Copy) = N_Function_Call\n+\n            or else (Is_Entity_Name (DS_Copy)\n                      and then not Is_Type (Entity (DS_Copy)))\n+\n            or else (Nkind (DS_Copy) = N_Attribute_Reference\n                      and then Nam_In (Attribute_Name (DS_Copy),\n-                                      Name_Old, Name_Loop_Entry))\n-           or else Nkind (DS_Copy) = N_Unchecked_Type_Conversion\n+                                      Name_Loop_Entry, Name_Old))\n+\n            or else Has_Aspect (Etype (DS_Copy), Aspect_Iterable)\n+\n+           or else Nkind (DS_Copy) = N_Unchecked_Type_Conversion\n+           or else (Nkind (DS_Copy) = N_Qualified_Expression\n+                     and then Is_Iterator (Etype (DS_Copy)))\n          then\n             --  This is an iterator specification. Rewrite it as such and\n             --  analyze it to capture function calls that may require\n@@ -3138,11 +3153,13 @@ package body Sem_Ch5 is\n                Set_Parent (DS_Copy, Parent (DS));\n                Preanalyze_Range (DS_Copy);\n \n-               --  Check for a call to Iterate ()\n+               --  Check for a call to Iterate () or an expression with\n+               --  an iterator type.\n \n                return\n-                 Nkind (DS_Copy) = N_Function_Call\n-                   and then Needs_Finalization (Etype (DS_Copy));\n+                 (Nkind (DS_Copy) = N_Function_Call\n+                   and then Needs_Finalization (Etype (DS_Copy)))\n+                 or else Is_Iterator (Etype (DS_Copy));\n             end;\n          end if;\n       end Is_Container_Iterator;"}, {"sha": "8d212fe76c23d202113dffc7a796f0b67906e8c4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 33, "deletions": 12, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ad81cb782b0c9dc481394e424d80926cee0ddf30", "patch": "@@ -2826,6 +2826,7 @@ package body Sem_Prag is\n \n          procedure Analyze_Input_Item (Input : Node_Id) is\n             Input_Id : Entity_Id;\n+            Input_OK : Boolean := True;\n \n          begin\n             --  Null input list\n@@ -2868,27 +2869,47 @@ package body Sem_Prag is\n                                          E_Variable)\n                   then\n                      --  The input cannot denote states or objects declared\n-                     --  within the related package (SPARK RM 7.1.5(4)). The\n-                     --  only exceptions to this are generic formal parameters.\n+                     --  within the related package (SPARK RM 7.1.5(4)).\n \n-                     if not Ekind_In (Input_Id, E_Generic_In_Out_Parameter,\n-                                                E_Generic_In_Parameter)\n-                       and then Within_Scope (Input_Id, Current_Scope)\n-                     then\n-                        Error_Msg_Name_1 := Chars (Pack_Id);\n-                        SPARK_Msg_NE\n-                          (\"input item & cannot denote a visible object or \"\n-                           & \"state of package %\", Input, Input_Id);\n+                     if Within_Scope (Input_Id, Current_Scope) then\n+\n+                        --  Do not consider generic formal parameters or their\n+                        --  respective mappings to generic formals. Even though\n+                        --  the formals appear within the scope of the package,\n+                        --  it is allowed for an initialization item to depend\n+                        --  on an input item.\n+\n+                        if Ekind_In (Input_Id, E_Generic_In_Out_Parameter,\n+                                               E_Generic_In_Parameter)\n+                        then\n+                           null;\n+\n+                        elsif Ekind_In (Input_Id, E_Constant, E_Variable)\n+                          and then Present (Corresponding_Generic_Association\n+                                     (Declaration_Node (Input_Id)))\n+                        then\n+                           null;\n+\n+                        else\n+                           Input_OK := False;\n+                           Error_Msg_Name_1 := Chars (Pack_Id);\n+                           SPARK_Msg_NE\n+                             (\"input item & cannot denote a visible object or \"\n+                              & \"state of package %\", Input, Input_Id);\n+                        end if;\n+                     end if;\n \n                      --  Detect a duplicate use of the same input item\n                      --  (SPARK RM 7.1.5(5)).\n \n-                     elsif Contains (Inputs_Seen, Input_Id) then\n+                     if Contains (Inputs_Seen, Input_Id) then\n+                        Input_OK := False;\n                         SPARK_Msg_N (\"duplicate input item\", Input);\n+                     end if;\n \n                      --  Input is legal, add it to the list of processed inputs\n \n-                     else\n+                     if Input_OK then\n                         Append_New_Elmt (Input_Id, Inputs_Seen);\n \n                         if Ekind (Input_Id) = E_Abstract_State then"}, {"sha": "88973765a3abc11a74a809d8075f99247230639e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81cb782b0c9dc481394e424d80926cee0ddf30/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ad81cb782b0c9dc481394e424d80926cee0ddf30", "patch": "@@ -599,7 +599,13 @@ package body Sem_Util is\n       Discard_Node\n         (Compile_Time_Constraint_Error (N, Msg, Ent, Loc, Warn => Warn));\n \n-      if not Rep then\n+      --  In GNATprove mode, do not replace the node with an exception raised.\n+      --  In such a case, either the call to Compile_Time_Constraint_Error\n+      --  issues an error which stops analysis, or it issues a warning in\n+      --  a few cases where a suitable check flag is set for GNATprove to\n+      --  generate a check message.\n+\n+      if not Rep or GNATprove_Mode then\n          return;\n       end if;\n "}]}