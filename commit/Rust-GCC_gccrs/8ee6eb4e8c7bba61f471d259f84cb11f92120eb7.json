{"sha": "8ee6eb4e8c7bba61f471d259f84cb11f92120eb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlNmViNGU4YzdiYmE2MWY0NzFkMjU5Zjg0Y2IxMWY5MjEyMGViNw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-08-03T14:30:46Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-03T14:30:46Z"}, "message": "* config/arm/arm.c (emit_sfm): Only emit a single frame adjustment.\n\nFrom-SVN: r85480", "tree": {"sha": "9453fb9976a05c20f0f736b02b7b9a2a31ba2cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9453fb9976a05c20f0f736b02b7b9a2a31ba2cbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7/comments", "author": null, "committer": null, "parents": [{"sha": "7a1f75f1b77d03231fe926c754bfdec890541889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1f75f1b77d03231fe926c754bfdec890541889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1f75f1b77d03231fe926c754bfdec890541889"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "68e347e1456ab5280dac3bb4f92b58cae2141fda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ee6eb4e8c7bba61f471d259f84cb11f92120eb7", "patch": "@@ -1,3 +1,7 @@\n+2004-08-03  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (emit_sfm): Only emit a single frame adjustment.\n+\n 2004-08-03  Jan Hubicka  <jh@suse.cz>\n \n \t* coverage.c (tree_coverage_counter_ref): Fix computation of the new"}, {"sha": "66fc8f88735de37896f8453dea3af7134d4f3b1f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee6eb4e8c7bba61f471d259f84cb11f92120eb7/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=8ee6eb4e8c7bba61f471d259f84cb11f92120eb7", "patch": "@@ -9911,7 +9911,7 @@ emit_sfm (int base_reg, int count)\n   int i;\n \n   par = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (count));\n-  dwarf = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (count));\n+  dwarf = gen_rtx_SEQUENCE (VOIDmode, rtvec_alloc (count + 1));\n \n   reg = gen_rtx_REG (XFmode, base_reg++);\n \n@@ -9922,13 +9922,10 @@ emit_sfm (int base_reg, int count)\n \t\t   gen_rtx_UNSPEC (BLKmode,\n \t\t\t\t   gen_rtvec (1, reg),\n \t\t\t\t   UNSPEC_PUSH_MULT));\n-  tmp\n-    = gen_rtx_SET (VOIDmode, \n-\t\t   gen_rtx_MEM (XFmode,\n-\t\t\t\tgen_rtx_PRE_DEC (BLKmode, stack_pointer_rtx)),\n-\t\t   reg);\n+  tmp = gen_rtx_SET (VOIDmode, \n+\t\t     gen_rtx_MEM (XFmode, stack_pointer_rtx), reg);\n   RTX_FRAME_RELATED_P (tmp) = 1;\n-  XVECEXP (dwarf, 0, count - 1) = tmp;\t  \n+  XVECEXP (dwarf, 0, 1) = tmp;\t  \n   \n   for (i = 1; i < count; i++)\n     {\n@@ -9937,13 +9934,21 @@ emit_sfm (int base_reg, int count)\n \n       tmp = gen_rtx_SET (VOIDmode, \n \t\t\t gen_rtx_MEM (XFmode,\n-\t\t\t\t      gen_rtx_PRE_DEC (BLKmode,\n-\t\t\t\t\t\t       stack_pointer_rtx)),\n+\t\t\t\t      plus_constant (stack_pointer_rtx,\n+\t\t\t\t\t\t     i * 12)),\n \t\t\t reg);\n       RTX_FRAME_RELATED_P (tmp) = 1;\n-      XVECEXP (dwarf, 0, count - i - 1) = tmp;\t  \n+      XVECEXP (dwarf, 0, i + 1) = tmp;\t  \n     }\n \n+  tmp = gen_rtx_SET (VOIDmode,\n+\t\t     stack_pointer_rtx,\n+\t\t     gen_rtx_PLUS (SImode,\n+\t\t\t\t   stack_pointer_rtx,\n+\t\t\t\t   GEN_INT (-12 * count)));\n+  RTX_FRAME_RELATED_P (tmp) = 1;\n+  XVECEXP (dwarf, 0, 0) = tmp;\n+\n   par = emit_insn (par);\n   REG_NOTES (par) = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR, dwarf,\n \t\t\t\t       REG_NOTES (par));"}]}