{"sha": "b98b49ac727f969a64be0dcd20d5493cdd325ac8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4YjQ5YWM3MjdmOTY5YTY0YmUwZGNkMjBkNTQ5M2NkZDMyNWFjOA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-07-08T01:58:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-08T01:58:58Z"}, "message": "rtlanal.c (reg_overlap_mentioned_p): Handle STRICT_LOW_PART.\n\n        * rtlanal.c (reg_overlap_mentioned_p): Handle STRICT_LOW_PART.  If\n        either argument is CONSTANT_P, then return zero.\n        * reload.c (reg_overlap_mentioned_for_reload_p): Similarly.\n\nFrom-SVN: r21005", "tree": {"sha": "a9d248d08ea5c8ed84300784f2a81fc120b1d6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9d248d08ea5c8ed84300784f2a81fc120b1d6e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b98b49ac727f969a64be0dcd20d5493cdd325ac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98b49ac727f969a64be0dcd20d5493cdd325ac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98b49ac727f969a64be0dcd20d5493cdd325ac8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98b49ac727f969a64be0dcd20d5493cdd325ac8/comments", "author": null, "committer": null, "parents": [{"sha": "67a00b49d6b636472ade6a137e818bdc2c003f5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a00b49d6b636472ade6a137e818bdc2c003f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67a00b49d6b636472ade6a137e818bdc2c003f5f"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "ecce7d2d30ec85539995e67d7a301e15b449e18d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b49ac727f969a64be0dcd20d5493cdd325ac8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b49ac727f969a64be0dcd20d5493cdd325ac8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b98b49ac727f969a64be0dcd20d5493cdd325ac8", "patch": "@@ -1,5 +1,9 @@\n Wed Jul  8 02:43:34 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* rtlanal.c (reg_overlap_mentioned_p): Handle STRICT_LOW_PART.  If\n+\teither argument is CONSTANT_P, then return zero.\n+\t* reload.c (reg_overlap_mentioned_for_reload_p): Similarly.\n+\n \t* configure.in: Also look at $srcdir/gas/configure to find a \n \tgas version #.\n "}, {"sha": "0b76bb709baafd2e36bbdf09ce501eac40c52f7f", "filename": "gcc/reload.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b49ac727f969a64be0dcd20d5493cdd325ac8/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b49ac727f969a64be0dcd20d5493cdd325ac8/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=b98b49ac727f969a64be0dcd20d5493cdd325ac8", "patch": "@@ -5822,7 +5822,14 @@ reg_overlap_mentioned_for_reload_p (x, in)\n {\n   int regno, endregno;\n \n-  if (GET_CODE (x) == SUBREG)\n+  /* Overly conservative.  */\n+  if (GET_CODE (x) == STRICT_LOW_PART)\n+    x = XEXP (x, 0);\n+\n+  /* If either argument is a constant, then modifying X can not affect IN.  */\n+  if (CONSTANT_P (x) || CONSTANT_P (in))\n+    return 0;\n+  else if (GET_CODE (x) == SUBREG)\n     {\n       regno = REGNO (SUBREG_REG (x));\n       if (regno < FIRST_PSEUDO_REGISTER)\n@@ -5844,8 +5851,6 @@ reg_overlap_mentioned_for_reload_p (x, in)\n \t  abort ();\n \t}\n     }\n-  else if (CONSTANT_P (x))\n-    return 0;\n   else if (GET_CODE (x) == MEM)\n     return refers_to_mem_for_reload_p (in);\n   else if (GET_CODE (x) == SCRATCH || GET_CODE (x) == PC"}, {"sha": "8f423915b15a443a9510e611d871bc532bae7937", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b49ac727f969a64be0dcd20d5493cdd325ac8/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b49ac727f969a64be0dcd20d5493cdd325ac8/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=b98b49ac727f969a64be0dcd20d5493cdd325ac8", "patch": "@@ -817,16 +817,21 @@ reg_overlap_mentioned_p (x, in)\n {\n   int regno, endregno;\n \n-  if (GET_CODE (x) == SUBREG)\n+  /* Overly conservative.  */\n+  if (GET_CODE (x) == STRICT_LOW_PART)\n+    x = XEXP (x, 0);\n+\n+  /* If either argument is a constant, then modifying X can not affect IN.  */\n+  if (CONSTANT_P (x) || CONSTANT_P (in))\n+    return 0;\n+  else if (GET_CODE (x) == SUBREG)\n     {\n       regno = REGNO (SUBREG_REG (x));\n       if (regno < FIRST_PSEUDO_REGISTER)\n \tregno += SUBREG_WORD (x);\n     }\n   else if (GET_CODE (x) == REG)\n     regno = REGNO (x);\n-  else if (CONSTANT_P (x))\n-    return 0;\n   else if (GET_CODE (x) == MEM)\n     {\n       char *fmt;"}]}