{"sha": "08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiNTdmYjNhYmY2Yjg1OTFiMDQyNGRhOWNiMGM1YTQ0ZjVlYjU1ZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-05-01T01:50:24Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-05-01T01:50:24Z"}, "message": "ldy Hernandez  <aldyh@redhat.com>\n\n        * doc/invoke.texi (Option Summary): Add -mvrsave=.\n        (RS/6000 and PowerPC Options): Document -mvrsave=.\n\n        * config/rs6000/rs6000.c (rs6000_altivec_vrsave): New global.\n        (rs6000_altivec_vrsave_string): Same.\n        (rs6000_override_options): Call rs6000_parse_vrsave_option.\n        (rs6000_parse_vrsave_option): New.\n        (rs6000_stack_info): Only generate vrsave instructions when\n        TARGET_ALTIVEC_VRSAVE.\n\n        * config/rs6000/rs6000.h (TARGET_OPTIONS): Add -mvrsave= option.\n        (rs6000_altivec_vrsave_string): Define extern.\n        (rs6000_altivec_vrsave): Same.\n        (TARGET_ALTIVEC_VRSAVE): New.\n\nFrom-SVN: r52984", "tree": {"sha": "c8c54019e9e1b56f835fdb250d5b9bb966f98cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c54019e9e1b56f835fdb250d5b9bb966f98cbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "479060323b1f838dbd9f24eb034a5f3a55d5585f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479060323b1f838dbd9f24eb034a5f3a55d5585f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479060323b1f838dbd9f24eb034a5f3a55d5585f"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "e8a1eb5270c707c4f745df78b1112333e28bcd84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "patch": "@@ -1,3 +1,20 @@\n+2002-04-30  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * doc/invoke.texi (Option Summary): Add -mvrsave=.\n+        (RS/6000 and PowerPC Options): Document -mvrsave=.\n+\n+        * config/rs6000/rs6000.c (rs6000_altivec_vrsave): New global.\n+        (rs6000_altivec_vrsave_string): Same.\n+        (rs6000_override_options): Call rs6000_parse_vrsave_option.\n+        (rs6000_parse_vrsave_option): New.\n+        (rs6000_stack_info): Only generate vrsave instructions when\n+        TARGET_ALTIVEC_VRSAVE.\n+\n+        * config/rs6000/rs6000.h (TARGET_OPTIONS): Add -mvrsave= option.\n+        (rs6000_altivec_vrsave_string): Define extern.\n+        (rs6000_altivec_vrsave): Same.\n+        (TARGET_ALTIVEC_VRSAVE): New.\n+\n 2002-04-30  Richard Henderson  <rth@redhat.com>\n \n \tPR opt/6516"}, {"sha": "235090005a52d60382600ab0d849f9ed6c5110d4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "patch": "@@ -74,6 +74,12 @@ int rs6000_long_double_type_size;\n /* Whether -mabi=altivec has appeared */\n int rs6000_altivec_abi;\n \n+/* Whether VRSAVE instructions should be generated.  */\n+int rs6000_altivec_vrsave;\n+\n+/* String from -mvrsave= option.  */\n+const char *rs6000_altivec_vrsave_string;\n+\n /* Set to non-zero once AIX common-mode calls have been defined.  */\n static int common_mode_defined;\n \n@@ -168,6 +174,7 @@ static rtx altivec_expand_predicate_builtin PARAMS ((enum insn_code, const char\n static rtx altivec_expand_ternop_builtin PARAMS ((enum insn_code, tree, rtx));\n static rtx altivec_expand_stv_builtin PARAMS ((enum insn_code, tree));\n static void rs6000_parse_abi_options PARAMS ((void));\n+static void rs6000_parse_vrsave_option PARAMS ((void));\n static int first_altivec_reg_to_save PARAMS ((void));\n static unsigned int compute_vrsave_mask PARAMS ((void));\n static void is_altivec_return_reg PARAMS ((rtx, void *));\n@@ -536,6 +543,9 @@ rs6000_override_options (default_cpu)\n   /* Handle -mabi= options.  */\n   rs6000_parse_abi_options ();\n \n+  /* Handle -mvrsave= option.  */\n+  rs6000_parse_vrsave_option ();\n+\n #ifdef TARGET_REGNAMES\n   /* If the user desires alternate register names, copy in the\n      alternate names now.  */\n@@ -583,6 +593,21 @@ rs6000_override_options (default_cpu)\n   free_machine_status = rs6000_free_machine_status;\n }\n \n+/* Handle -mvrsave= options.  */\n+static void\n+rs6000_parse_vrsave_option ()\n+{\n+  /* Generate VRSAVE instructions by default.  */\n+  if (rs6000_altivec_vrsave_string == 0\n+      || ! strcmp (rs6000_altivec_vrsave_string, \"yes\"))\n+    rs6000_altivec_vrsave = 1;\n+  else if (! strcmp (rs6000_altivec_vrsave_string, \"no\"))\n+    rs6000_altivec_vrsave = 0;\n+  else\n+    error (\"unknown -mvrsave= option specified: '%s'\",\n+\t   rs6000_altivec_vrsave_string);\n+}\n+\n /* Handle -mabi= options.  */\n static void\n rs6000_parse_abi_options ()\n@@ -7770,7 +7795,7 @@ rs6000_stack_info ()\n   info_ptr->parm_size    = RS6000_ALIGN (current_function_outgoing_args_size,\n \t\t\t\t\t 8);\n \n-  if (TARGET_ALTIVEC_ABI)\n+  if (TARGET_ALTIVEC_ABI && TARGET_ALTIVEC_VRSAVE)\n     {\n       info_ptr->vrsave_mask = compute_vrsave_mask ();\n       info_ptr->vrsave_size  = info_ptr->vrsave_mask ? 4 : 0;"}, {"sha": "f5bfbfe7addb667e0cc41423d6b2d4e6f3584d3f", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=08b57fb3abf6b8591b0424da9cb0c5a44f5eb55e", "patch": "@@ -430,6 +430,8 @@ extern enum processor_type rs6000_cpu;\n    {\"abi=\", &rs6000_abi_string, N_(\"Specify ABI to use\") },\t\t\\\n    {\"long-double-\", &rs6000_long_double_size_string,\t\t\t\\\n     N_(\"Specify size of long double (64 or 128 bits)\") },\t\t\\\n+   {\"vrsave=\", &rs6000_altivec_vrsave_string,                         \\\n+    N_(\"Specify yes/no if VRSAVE instructions should be generated for AltiVec\") }, \\\n    SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n }\n \n@@ -458,9 +460,12 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n extern const char *rs6000_long_double_size_string;\n extern int rs6000_long_double_type_size;\n extern int rs6000_altivec_abi;\n+extern const char *rs6000_altivec_vrsave_string;\n+extern int rs6000_altivec_vrsave;\n \n #define TARGET_LONG_DOUBLE_128 (rs6000_long_double_type_size == 128)\n #define TARGET_ALTIVEC_ABI rs6000_altivec_abi\n+#define TARGET_ALTIVEC_VRSAVE rs6000_altivec_vrsave\n \n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro"}]}