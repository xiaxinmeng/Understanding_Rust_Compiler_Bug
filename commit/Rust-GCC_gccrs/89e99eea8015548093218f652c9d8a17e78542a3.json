{"sha": "89e99eea8015548093218f652c9d8a17e78542a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllOTllZWE4MDE1NTQ4MDkzMjE4ZjY1MmM5ZDhhMTdlNzg1NDJhMw==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1999-01-29T15:25:17Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1999-01-29T15:25:17Z"}, "message": "emit-rtl.c (remove_insn): New function.\n\nFri Jan 29 18:26:07 1999  Dave Brolley  <brolley@cygnus.com>\n\t* emit-rtl.c (remove_insn): New function.\n\t* rtl.h (remove_insn): Add prototype.\n\t* function.c (reposition_prologue_and_epilogue_notes): Call remove_insn.\n\nFrom-SVN: r24908", "tree": {"sha": "8692386860ab7ebbe81ec29448463ae26a6f5977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8692386860ab7ebbe81ec29448463ae26a6f5977"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e99eea8015548093218f652c9d8a17e78542a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e99eea8015548093218f652c9d8a17e78542a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e99eea8015548093218f652c9d8a17e78542a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e99eea8015548093218f652c9d8a17e78542a3/comments", "author": null, "committer": null, "parents": [{"sha": "061ac426189161b669a2a0b6e67fab19e7fde25d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061ac426189161b669a2a0b6e67fab19e7fde25d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061ac426189161b669a2a0b6e67fab19e7fde25d"}], "stats": {"total": 80, "additions": 68, "deletions": 12}, "files": [{"sha": "af182758c50b12bb2d09c2cfa5b6cad6a4424d34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89e99eea8015548093218f652c9d8a17e78542a3", "patch": "@@ -1,3 +1,9 @@\n+Fri Jan 29 18:26:07 1999  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* emit-rtl.c (remove_insn): New function.\n+\t* rtl.h (remove_insn): Add prototype.\n+\t* function.c (reposition_prologue_and_epilogue_notes): Call remove_insn.\n+\n Fri Jan 29 22:34:41 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* loop.c (recombine_givs): Don't try to derive givs that have combined."}, {"sha": "2e48bde2983f10f38f79cfbbb8ec8e65a44ce67f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=89e99eea8015548093218f652c9d8a17e78542a3", "patch": "@@ -2473,6 +2473,64 @@ add_insn_before (insn, before)\n     PREV_INSN (XVECEXP (PATTERN (before), 0, 0)) = insn;\n }\n \n+/* Remove an insn from its doubly-linked list.  This function knows how\n+   to handle sequences.  */\n+void\n+remove_insn (insn)\n+     rtx insn;\n+{\n+  rtx next = NEXT_INSN (insn);\n+  rtx prev = PREV_INSN (insn);\n+  if (prev)\n+    {\n+      NEXT_INSN (prev) = next;\n+      if (GET_CODE (prev) == INSN && GET_CODE (PATTERN (prev)) == SEQUENCE)\n+\t{\n+\t  rtx sequence = PATTERN (prev);\n+\t  NEXT_INSN (XVECEXP (sequence, 0, XVECLEN (sequence, 0) - 1)) = next;\n+\t}\n+    }\n+  else if (first_insn == insn)\n+    first_insn = next;\n+  else\n+    {\n+      struct sequence_stack *stack = sequence_stack;\n+      /* Scan all pending sequences too.  */\n+      for (; stack; stack = stack->next)\n+\tif (insn == stack->first)\n+\t  {\n+\t    stack->first = next;\n+\t    break;\n+\t  }\n+\n+      if (stack == 0)\n+\tabort ();\n+    }\n+\n+  if (next)\n+    {\n+      PREV_INSN (next) = prev;\n+      if (GET_CODE (next) == INSN && GET_CODE (PATTERN (next)) == SEQUENCE)\n+\tPREV_INSN (XVECEXP (PATTERN (next), 0, 0)) = prev;\n+    }\n+  else if (last_insn == insn)\n+    last_insn = prev;\n+  else\n+    {\n+      struct sequence_stack *stack = sequence_stack;\n+      /* Scan all pending sequences too.  */\n+      for (; stack; stack = stack->next)\n+\tif (insn == stack->last)\n+\t  {\n+\t    stack->last = prev;\n+\t    break;\n+\t  }\n+\n+      if (stack == 0)\n+\tabort ();\n+    }\n+}\n+\n /* Delete all insns made since FROM.\n    FROM becomes the new last instruction.  */\n "}, {"sha": "0a86580e02316a6655c5e8891cfa613bbf37bdcb", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=89e99eea8015548093218f652c9d8a17e78542a3", "patch": "@@ -6439,7 +6439,6 @@ reposition_prologue_and_epilogue_notes (f)\n   /* Reposition the prologue and epilogue notes.  */\n   if (n_basic_blocks)\n     {\n-      rtx next, prev;\n       int len;\n \n       if (prologue)\n@@ -6460,6 +6459,7 @@ reposition_prologue_and_epilogue_notes (f)\n \t\t}\n \t      else if ((len -= contains (insn, prologue)) == 0)\n \t\t{\n+\t\t  rtx next;\n \t\t  /* Find the prologue-end note if we haven't already, and\n \t\t     move it to just after the last prologue insn.  */\n \t\t  if (note == 0)\n@@ -6471,17 +6471,13 @@ reposition_prologue_and_epilogue_notes (f)\n \t\t    }\n \n \t\t  next = NEXT_INSN (note);\n-\t\t  prev = PREV_INSN (note);\n-\t\t  if (prev)\n-\t\t    NEXT_INSN (prev) = next;\n-\t\t  if (next)\n-\t\t    PREV_INSN (next) = prev;\n \n \t\t  /* Whether or not we can depend on BLOCK_HEAD, \n \t\t     attempt to keep it up-to-date.  */\n \t\t  if (BLOCK_HEAD (0) == note)\n \t\t    BLOCK_HEAD (0) = next;\n \n+\t\t  remove_insn (note);\n \t\t  add_insn_after (note, insn);\n \t\t}\n \t    }\n@@ -6514,19 +6510,14 @@ reposition_prologue_and_epilogue_notes (f)\n \t\t\t    && NOTE_LINE_NUMBER (note) == NOTE_INSN_EPILOGUE_BEG)\n \t\t\t  break;\n \t\t    }\n-\t\t  next = NEXT_INSN (note);\n-\t\t  prev = PREV_INSN (note);\n-\t\t  if (prev)\n-\t\t    NEXT_INSN (prev) = next;\n-\t\t  if (next)\n-\t\t    PREV_INSN (next) = prev;\n \n \t\t  /* Whether or not we can depend on BLOCK_HEAD, \n \t\t     attempt to keep it up-to-date.  */\n \t\t  if (n_basic_blocks\n \t\t      && BLOCK_HEAD (n_basic_blocks-1) == insn)\n \t\t    BLOCK_HEAD (n_basic_blocks-1) = note;\n \n+\t\t  remove_insn (note);\n \t\t  add_insn_before (note, insn);\n \t\t}\n \t    }"}, {"sha": "6c2c1b3adf4333f04603dfd4bb7266513fc6904a", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e99eea8015548093218f652c9d8a17e78542a3/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=89e99eea8015548093218f652c9d8a17e78542a3", "patch": "@@ -1342,6 +1342,7 @@ extern void link_cc0_insns\t\t\tPROTO ((rtx));\n extern void add_insn\t\t\t\tPROTO ((rtx));\n extern void add_insn_before\t\t\tPROTO ((rtx, rtx));\n extern void add_insn_after\t\t\tPROTO ((rtx, rtx));\n+extern void remove_insn\t\t\t\tPROTO ((rtx));\n extern void reorder_insns_with_line_notes\tPROTO ((rtx, rtx, rtx));\n extern void emit_insn_after_with_line_notes\tPROTO ((rtx, rtx, rtx));\n extern enum rtx_code classify_insn\t\tPROTO ((rtx));"}]}