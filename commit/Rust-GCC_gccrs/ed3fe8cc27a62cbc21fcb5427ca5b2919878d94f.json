{"sha": "ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQzZmU4Y2MyN2E2MmNiYzIxZmNiNTQyN2NhNWIyOTE5ODc4ZDk0Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T10:28:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T10:28:06Z"}, "message": "[multiple changes]\n\n2017-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_attr.adb (Rewrite_Stream_Proc_Call): Use\n\tan unchecked type conversion when performing a view conversion\n\tto/from a private type. In all other cases use a regular type\n\tconversion to ensure that any relevant checks are properly\n\tinstalled.\n\n2017-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb, sem_ch8.adb: Minor reformatting.\n\n2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_case.adb (Explain_Non_Static_Bound): Suppress cascaded\n\terror on case expression that is an entity, when coverage is\n\tincomplete and entity has a static value obtained by local\n\tpropagation.\n\t(Handle_Static_Predicate): New procedure, subsidiary of\n\tCheck_Choices, to handle case alternatives that are either\n\tsubtype names or subtype indications involving subtypes that\n\thave static predicates.\n\n2017-01-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c, g-socket.adb, g-socket.ads, g-sothco.ads:\n\t(GNAT.Socket): Add support for Busy_Polling and Generic_Option\n\n2017-01-06  Bob Duff  <duff@adacore.com>\n\n\t* sem_elab.adb (Activate_Elaborate_All_Desirable): Don't add\n\tElaborate_All(P) to P itself. That could happen in obscure cases,\n\tand always introduced a cycle (P body must be elaborated before\n\tP body).\n\t* lib-writ.ads: Comment clarification.\n\t* ali-util.ads: Minor comment fix.\n\t* ali.adb: Minor reformatting.\n\n2017-01-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* a-exexpr-gcc.adb: Improve comment.\n\nFrom-SVN: r244125", "tree": {"sha": "8c767f34a765e19d10d494e20b68605ce44e176d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c767f34a765e19d10d494e20b68605ce44e176d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/comments", "author": null, "committer": null, "parents": [{"sha": "43934e8c1a12e2f0feeea58dbbd0e483a735155a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43934e8c1a12e2f0feeea58dbbd0e483a735155a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43934e8c1a12e2f0feeea58dbbd0e483a735155a"}], "stats": {"total": 362, "additions": 267, "deletions": 95}, "files": [{"sha": "7150bc26d0b1bcf682f8155606db86c13ee99af3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -1,3 +1,45 @@\n+2017-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb (Rewrite_Stream_Proc_Call): Use\n+\tan unchecked type conversion when performing a view conversion\n+\tto/from a private type. In all other cases use a regular type\n+\tconversion to ensure that any relevant checks are properly\n+\tinstalled.\n+\n+2017-01-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb, sem_ch8.adb: Minor reformatting.\n+\n+2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_case.adb (Explain_Non_Static_Bound): Suppress cascaded\n+\terror on case expression that is an entity, when coverage is\n+\tincomplete and entity has a static value obtained by local\n+\tpropagation.\n+\t(Handle_Static_Predicate): New procedure, subsidiary of\n+\tCheck_Choices, to handle case alternatives that are either\n+\tsubtype names or subtype indications involving subtypes that\n+\thave static predicates.\n+\n+2017-01-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c, g-socket.adb, g-socket.ads, g-sothco.ads:\n+\t(GNAT.Socket): Add support for Busy_Polling and Generic_Option\n+\n+2017-01-06  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_elab.adb (Activate_Elaborate_All_Desirable): Don't add\n+\tElaborate_All(P) to P itself. That could happen in obscure cases,\n+\tand always introduced a cycle (P body must be elaborated before\n+\tP body).\n+\t* lib-writ.ads: Comment clarification.\n+\t* ali-util.ads: Minor comment fix.\n+\t* ali.adb: Minor reformatting.\n+\n+2017-01-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* a-exexpr-gcc.adb: Improve comment.\n+\n 2017-01-03  James Cowgill  <James.Cowgill@imgtec.com>\n \n \t* s-linux-mips.ads: Use correct signal and errno constants."}, {"sha": "91fb5f5cd67043dfdcde8f63cd71151cbe154d33", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -115,7 +115,8 @@ package body Exception_Propagation is\n       GCC_Exception : not null GCC_Exception_Access);\n    pragma Export\n      (C, Set_Exception_Parameter, \"__gnat_set_exception_parameter\");\n-   --  Called inserted by gigi to initialize the exception parameter\n+   --  Called inserted by gigi to set the exception choice parameter from the\n+   --  gcc occurrence.\n \n    procedure Set_Foreign_Occurrence (Excep : EOA; Mo : System.Address);\n    --  Utility routine to initialize occurrence Excep from a foreign exception"}, {"sha": "c9abc5c2d5dc3360d57b1587cdc12caeab98455d", "filename": "gcc/ada/ali-util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fali-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fali-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.ads?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,7 @@\n ------------------------------------------------------------------------------\n \n --  This child unit provides utility data structures and procedures used\n---  for manipulation of ALI data by the gnatbind and gnatmake.\n+--  for manipulation of ALI data by gnatbind and gnatmake.\n \n package ALI.Util is\n "}, {"sha": "7508e810eb408e218cf3b687ce939d3a225e6d8f", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2056,8 +2056,7 @@ package body ALI is\n                         --  Store AD indication unless ignore required\n \n                         if not Ignore_ED then\n-                           Withs.Table (Withs.Last).Elab_All_Desirable :=\n-                             True;\n+                           Withs.Table (Withs.Last).Elab_All_Desirable := True;\n                         end if;\n \n                      elsif Nextc = 'E' then"}, {"sha": "9e77ae0cafac52cbe5b1a7c01179fc604ea10bf5", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -1568,9 +1568,10 @@ package body Exp_Attr is\n \n       procedure Rewrite_Stream_Proc_Call (Pname : Entity_Id) is\n          Item       : constant Node_Id   := Next (First (Exprs));\n+         Item_Typ   : constant Entity_Id := Etype (Item);\n          Formal     : constant Entity_Id := Next_Formal (First_Formal (Pname));\n          Formal_Typ : constant Entity_Id := Etype (Formal);\n-         Is_Written : constant Boolean   := (Ekind (Formal) /= E_In_Parameter);\n+         Is_Written : constant Boolean   := Ekind (Formal) /= E_In_Parameter;\n \n       begin\n          --  The expansion depends on Item, the second actual, which is\n@@ -1583,7 +1584,7 @@ package body Exp_Attr is\n \n          if Nkind (Item) = N_Indexed_Component\n            and then Is_Packed (Base_Type (Etype (Prefix (Item))))\n-           and then Base_Type (Etype (Item)) /= Base_Type (Formal_Typ)\n+           and then Base_Type (Item_Typ) /= Base_Type (Formal_Typ)\n            and then Is_Written\n          then\n             declare\n@@ -1595,23 +1596,22 @@ package body Exp_Attr is\n                Decl :=\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Temp,\n-                   Object_Definition    =>\n-                     New_Occurrence_Of (Formal_Typ, Loc));\n+                   Object_Definition   => New_Occurrence_Of (Formal_Typ, Loc));\n                Set_Etype (Temp, Formal_Typ);\n \n                Assn :=\n                  Make_Assignment_Statement (Loc,\n-                   Name => New_Copy_Tree (Item),\n+                   Name       => New_Copy_Tree (Item),\n                    Expression =>\n                      Unchecked_Convert_To\n-                       (Etype (Item), New_Occurrence_Of (Temp, Loc)));\n+                       (Item_Typ, New_Occurrence_Of (Temp, Loc)));\n \n                Rewrite (Item, New_Occurrence_Of (Temp, Loc));\n                Insert_Actions (N,\n                  New_List (\n                    Decl,\n                    Make_Procedure_Call_Statement (Loc,\n-                     Name => New_Occurrence_Of (Pname, Loc),\n+                     Name                   => New_Occurrence_Of (Pname, Loc),\n                      Parameter_Associations => Exprs),\n                    Assn));\n \n@@ -1626,17 +1626,25 @@ package body Exp_Attr is\n          --  operation is not inherited), we are all set, and can use the\n          --  argument unchanged.\n \n-         --  For all other cases we do an unchecked conversion of the second\n-         --  parameter to the type of the formal of the procedure we are\n-         --  calling. This deals with the private type cases, and with going\n-         --  to the root type as required in elementary type case.\n-\n          if not Is_Class_Wide_Type (Entity (Pref))\n            and then not Is_Class_Wide_Type (Etype (Item))\n-           and then Base_Type (Etype (Item)) /= Base_Type (Formal_Typ)\n+           and then Base_Type (Item_Typ) /= Base_Type (Formal_Typ)\n          then\n-            Rewrite (Item,\n-              Unchecked_Convert_To (Formal_Typ, Relocate_Node (Item)));\n+            --  Perform a view conversion when either the argument or the\n+            --  formal parameter are of a private type.\n+\n+            if Is_Private_Type (Formal_Typ)\n+              or else Is_Private_Type (Item_Typ)\n+            then\n+               Rewrite (Item,\n+                 Unchecked_Convert_To (Formal_Typ, Relocate_Node (Item)));\n+\n+            --  Otherwise perform a regular type conversion to ensure that all\n+            --  relevant checks are installed.\n+\n+            else\n+               Rewrite (Item, Convert_To (Formal_Typ, Relocate_Node (Item)));\n+            end if;\n \n             --  For untagged derived types set Assignment_OK, to prevent\n             --  copies from being created when the unchecked conversion\n@@ -1665,7 +1673,7 @@ package body Exp_Attr is\n \n          Rewrite (N,\n            Make_Procedure_Call_Statement (Loc,\n-             Name => New_Occurrence_Of (Pname, Loc),\n+             Name                   => New_Occurrence_Of (Pname, Loc),\n              Parameter_Associations => Exprs));\n \n          Analyze (N);"}, {"sha": "29ede344b046d3fab7889cc6132598de87528157", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 66, "deletions": 25, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -50,8 +50,6 @@ package body GNAT.Sockets is\n \n    package C renames Interfaces.C;\n \n-   use type C.int;\n-\n    ENOERROR : constant := 0;\n \n    Netdb_Buffer_Size : constant := SOSC.Need_Netdb_Buffer * 1024;\n@@ -82,7 +80,7 @@ package body GNAT.Sockets is\n                 (Non_Blocking_IO => SOSC.FIONBIO,\n                  N_Bytes_To_Read => SOSC.FIONREAD);\n \n-   Options : constant array (Option_Name) of C.int :=\n+   Options : constant array (Specific_Option_Name) of C.int :=\n                (Keep_Alive          => SOSC.SO_KEEPALIVE,\n                 Reuse_Address       => SOSC.SO_REUSEADDR,\n                 Broadcast           => SOSC.SO_BROADCAST,\n@@ -98,7 +96,8 @@ package body GNAT.Sockets is\n                 Multicast_Loop      => SOSC.IP_MULTICAST_LOOP,\n                 Receive_Packet_Info => SOSC.IP_PKTINFO,\n                 Send_Timeout        => SOSC.SO_SNDTIMEO,\n-                Receive_Timeout     => SOSC.SO_RCVTIMEO);\n+                Receive_Timeout     => SOSC.SO_RCVTIMEO,\n+                Busy_Polling        => SOSC.SO_BUSY_POLL);\n    --  ??? Note: for OpenSolaris, Receive_Packet_Info should be IP_RECVPKTINFO,\n    --  but for Linux compatibility this constant is the same as IP_PKTINFO.\n \n@@ -1140,9 +1139,10 @@ package body GNAT.Sockets is\n    -----------------------\n \n    function Get_Socket_Option\n-     (Socket : Socket_Type;\n-      Level  : Level_Type := Socket_Level;\n-      Name   : Option_Name) return Option_Type\n+     (Socket  : Socket_Type;\n+      Level   : Level_Type := Socket_Level;\n+      Name    : Option_Name;\n+      Optname : Interfaces.C.int := -1) return Option_Type\n    is\n       use SOSC;\n       use type C.unsigned_char;\n@@ -1155,23 +1155,36 @@ package body GNAT.Sockets is\n       Add : System.Address;\n       Res : C.int;\n       Opt : Option_Type (Name);\n+      Onm : Interfaces.C.int;\n \n    begin\n+      if Name in Specific_Option_Name then\n+         Onm := Options (Name);\n+\n+      elsif Optname = -1 then\n+         raise Socket_Error with \"optname must be specified\";\n+\n+      else\n+         Onm := Optname;\n+      end if;\n+\n       case Name is\n          when Multicast_Loop      |\n               Multicast_TTL       |\n               Receive_Packet_Info =>\n             Len := V1'Size / 8;\n             Add := V1'Address;\n \n-         when Keep_Alive      |\n-              Reuse_Address   |\n-              Broadcast       |\n-              No_Delay        |\n-              Send_Buffer     |\n-              Receive_Buffer  |\n-              Multicast_If    |\n-              Error           =>\n+         when Generic_Option |\n+              Keep_Alive     |\n+              Reuse_Address  |\n+              Broadcast      |\n+              No_Delay       |\n+              Send_Buffer    |\n+              Receive_Buffer |\n+              Multicast_If   |\n+              Error          |\n+              Busy_Polling   =>\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n@@ -1203,20 +1216,27 @@ package body GNAT.Sockets is\n         C_Getsockopt\n           (C.int (Socket),\n            Levels (Level),\n-           Options (Name),\n+           Onm,\n            Add, Len'Access);\n \n       if Res = Failure then\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n       case Name is\n-         when Keep_Alive      |\n-              Reuse_Address   |\n-              Broadcast       |\n-              No_Delay        =>\n+         when Generic_Option =>\n+            Opt.Optname := Onm;\n+            Opt.Optval  := V4;\n+\n+         when Keep_Alive    |\n+              Reuse_Address |\n+              Broadcast     |\n+              No_Delay      =>\n             Opt.Enabled := (V4 /= 0);\n \n+         when Busy_Polling =>\n+            Opt.Microseconds := Natural (V4);\n+\n          when Linger          =>\n             Opt.Enabled := (V8 (V8'First) /= 0);\n             Opt.Seconds := Natural (V8 (V8'Last));\n@@ -2267,17 +2287,28 @@ package body GNAT.Sockets is\n       Len : C.int;\n       Add : System.Address := Null_Address;\n       Res : C.int;\n+      Onm : C.int;\n \n    begin\n       case Option.Name is\n-         when Keep_Alive      |\n-              Reuse_Address   |\n-              Broadcast       |\n-              No_Delay        =>\n+         when Generic_Option =>\n+            V4  := Option.Optval;\n+            Len := V4'Size / 8;\n+            Add := V4'Address;\n+\n+         when Keep_Alive    |\n+              Reuse_Address |\n+              Broadcast     |\n+              No_Delay      =>\n             V4  := C.int (Boolean'Pos (Option.Enabled));\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n+         when Busy_Polling =>\n+            V4  := C.int (Option.Microseconds);\n+            Len := V4'Size / 8;\n+            Add := V4'Address;\n+\n          when Linger          =>\n             V8 (V8'First) := C.int (Boolean'Pos (Option.Enabled));\n             V8 (V8'Last)  := C.int (Option.Seconds);\n@@ -2347,10 +2378,20 @@ package body GNAT.Sockets is\n \n       end case;\n \n+      if Option.Name in Specific_Option_Name then\n+         Onm := Options (Option.Name);\n+\n+      elsif Option.Optname = -1 then\n+         raise Socket_Error with \"optname must be specified\";\n+\n+      else\n+         Onm := Option.Optname;\n+      end if;\n+\n       Res := C_Setsockopt\n         (C.int (Socket),\n          Levels (Level),\n-         Options (Option.Name),\n+         Onm,\n          Add, Len);\n \n       if Res = Failure then"}, {"sha": "d80f0ad26677a490386c4101ecc53bcfff1f5ada", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -373,6 +373,9 @@ package GNAT.Sockets is\n    --  entities declared therein are not meant for direct access by users,\n    --  including through this renaming.\n \n+   use type Interfaces.C.int;\n+   --  Need visibility on \"-\" operator so that we can write -1\n+\n    procedure Initialize;\n    pragma Obsolescent\n      (Entity  => Initialize,\n@@ -676,7 +679,8 @@ package GNAT.Sockets is\n    --  a boolean to enable or disable this option.\n \n    type Option_Name is\n-     (Keep_Alive,          -- Enable sending of keep-alive messages\n+     (Generic_Option,\n+      Keep_Alive,          -- Enable sending of keep-alive messages\n       Reuse_Address,       -- Allow bind to reuse local address\n       Broadcast,           -- Enable datagram sockets to recv/send broadcasts\n       Send_Buffer,         -- Set/get the maximum socket send buffer in bytes\n@@ -691,10 +695,17 @@ package GNAT.Sockets is\n       Multicast_Loop,      -- Sent multicast packets are looped to local socket\n       Receive_Packet_Info, -- Receive low level packet info as ancillary data\n       Send_Timeout,        -- Set timeout value for output\n-      Receive_Timeout);    -- Set timeout value for input\n+      Receive_Timeout,     -- Set timeout value for input\n+      Busy_Polling);       -- Set busy polling mode\n+   subtype Specific_Option_Name is\n+     Option_Name range Keep_Alive .. Option_Name'Last;\n \n    type Option_Type (Name : Option_Name := Keep_Alive) is record\n       case Name is\n+         when Generic_Option =>\n+            Optname : Interfaces.C.int := -1;\n+            Optval  : Interfaces.C.int;\n+\n          when Keep_Alive          |\n               Reuse_Address       |\n               Broadcast           |\n@@ -711,6 +722,9 @@ package GNAT.Sockets is\n                   null;\n             end case;\n \n+         when Busy_Polling    =>\n+            Microseconds : Natural;\n+\n          when Send_Buffer     |\n               Receive_Buffer  =>\n             Size : Natural;\n@@ -876,10 +890,12 @@ package GNAT.Sockets is\n    --  No_Sock_Addr on error (e.g. socket closed or not locally bound).\n \n    function Get_Socket_Option\n-     (Socket : Socket_Type;\n-      Level  : Level_Type := Socket_Level;\n-      Name   : Option_Name) return Option_Type;\n-   --  Get the options associated with a socket. Raises Socket_Error on error\n+     (Socket  : Socket_Type;\n+      Level   : Level_Type := Socket_Level;\n+      Name    : Option_Name;\n+      Optname : Interfaces.C.int := -1) return Option_Type;\n+   --  Get the options associated with a socket. Raises Socket_Error on error.\n+   --  Optname identifies specific option when Name is Generic_Option.\n \n    procedure Listen_Socket\n      (Socket : Socket_Type;"}, {"sha": "c25f4edc70139146f32c7328a75252445e108b58", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2008-2014, AdaCore                     --\n+--                     Copyright (C) 2008-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,9 +41,6 @@ package GNAT.Sockets.Thin_Common is\n \n    package C renames Interfaces.C;\n \n-   use type C.int;\n-   --  This is so we can declare the Failure constant below\n-\n    Success : constant C.int :=  0;\n    Failure : constant C.int := -1;\n "}, {"sha": "b38003be45c67285ad00631501e8e4c7eea4c26c", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -649,8 +649,10 @@ package Lib.Writ is\n    --        AD  Elaborate_All_Desirable set for this unit, which means that\n    --            there is no Elaborate_All, but the analysis suggests that\n    --            Program_Error may be raised if the Elaborate_All conditions\n-   --            cannot be satisfied. The binder will attempt to treat AD as\n-   --            EA if it can.\n+   --            cannot be satisfied. In dynamic elaboration mode, the binder\n+   --            will attempt to treat AD as EA if it can. In static\n+   --            elaboration mode, the binder will treat AD as EA, even if it\n+   --            introduces cycles.\n \n    --      The parameter source-name and lib-name are omitted for the case of a\n    --      generic unit compiled with earlier versions of GNAT which did not"}, {"sha": "26140170f4bc342c73b3966b12df936b20e02ece", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1264,6 +1264,11 @@ CND(SO_RCVTIMEO, \"Reception timeout\")\n #endif\n CND(SO_ERROR, \"Get/clear error status\")\n \n+#ifndef SO_BUSY_POLL\n+# define SO_BUSY_POLL -1\n+#endif\n+CND(SO_BUSY_POLL, \"Busy polling\")\n+\n #ifndef IP_MULTICAST_IF\n # define IP_MULTICAST_IF -1\n #endif"}, {"sha": "9a220bb6bb41b904790266555675465d1a0c1149", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 77, "deletions": 24, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -628,9 +628,11 @@ package body Sem_Case is\n \n          --  Otherwise the expression is not static, even if the bounds of the\n          --  type are, or else there are missing alternatives. If both, the\n-         --  additional information may be redundant but harmless.\n+         --  additional information may be redundant but harmless. Examine\n+         --  whether original node is an entity, because it may have been\n+         --  constant-folded to a literal if value is known.\n \n-         elsif not Is_Entity_Name (Expr) then\n+         elsif not Is_Entity_Name (Original_Node (Expr)) then\n             Error_Msg_N\n               (\"subtype of expression is not static, \"\n                & \"alternatives must cover base type!\", Expr);\n@@ -1362,6 +1364,15 @@ package body Sem_Case is\n          --  later entry into the choices table so that they can be sorted\n          --  later on.\n \n+         procedure Handle_Static_Predicate\n+           (Typ : Entity_Id;\n+            Lo  : Node_Id;\n+            Hi  : Node_Id);\n+         --  If the type of the alternative has predicates, we must examine\n+         --  each subset of the predicate rather than the bounds of the\n+         --  type itself. This is relevant when the choice is a subtype mark\n+         --  or a subtype indication.\n+\n          -----------\n          -- Check --\n          -----------\n@@ -1474,6 +1485,56 @@ package body Sem_Case is\n             Num_Choices := Num_Choices + 1;\n          end Check;\n \n+         -----------------------------\n+         -- Handle_Static_Predicate --\n+         -----------------------------\n+\n+         procedure Handle_Static_Predicate\n+           (Typ : Entity_Id;\n+            Lo  : Node_Id;\n+            Hi  : Node_Id)\n+         is\n+            P : Node_Id;\n+            C : Node_Id;\n+\n+         begin\n+            --  Loop through entries in predicate list, checking each entry.\n+            --  Note that if the list is empty, corresponding to a False\n+            --  predicate, then no choices are checked. If the choice comes\n+            --  from a subtype indication, the given range may have bounds\n+            --  that narrow the predicate choices themselves, so we must\n+            --  consider only those entries within the range of the given\n+            --  subtype indication..\n+\n+            P := First (Static_Discrete_Predicate (Typ));\n+            while Present (P) loop\n+\n+               --  Check that part of the predicate choice is included in\n+               --  the given bounds.\n+\n+               if Expr_Value (High_Bound (P)) >= Expr_Value (Lo)\n+                 and then Expr_Value (Low_Bound (P)) <= Expr_Value (Hi)\n+               then\n+                  C := New_Copy (P);\n+                  Set_Sloc (C, Sloc (Choice));\n+\n+                  if Expr_Value (Low_Bound (C)) < Expr_Value (Lo) then\n+                     Set_Low_Bound (C, Lo);\n+                  end if;\n+\n+                  if Expr_Value (High_Bound (C)) > Expr_Value (Hi) then\n+                     Set_High_Bound (C, Hi);\n+                  end if;\n+\n+                  Check (C, Low_Bound (C), High_Bound (C));\n+               end if;\n+\n+               Next (P);\n+            end loop;\n+\n+            Set_Has_SP_Choice (Alt);\n+         end Handle_Static_Predicate;\n+\n       --  Start of processing for Check_Choices\n \n       begin\n@@ -1582,29 +1643,12 @@ package body Sem_Case is\n                                  & \"predicate as case alternative\",\n                                  Choice, E, Suggest_Static => True);\n \n-                           --  Static predicate case\n+                           --  Static predicate case. The bounds are\n+                           --  those of the given subtype.\n \n                            else\n-                              declare\n-                                 P : Node_Id;\n-                                 C : Node_Id;\n-\n-                              begin\n-                                 --  Loop through entries in predicate list,\n-                                 --  checking each entry. Note that if the\n-                                 --  list is empty, corresponding to a False\n-                                 --  predicate, then no choices are checked.\n-\n-                                 P := First (Static_Discrete_Predicate (E));\n-                                 while Present (P) loop\n-                                    C := New_Copy (P);\n-                                    Set_Sloc (C, Sloc (Choice));\n-                                    Check (C, Low_Bound (C), High_Bound (C));\n-                                    Next (P);\n-                                 end loop;\n-                              end;\n-\n-                              Set_Has_SP_Choice (Alt);\n+                              Handle_Static_Predicate (E,\n+                                Type_Low_Bound (E), Type_High_Bound (E));\n                            end if;\n \n                         --  Not predicated subtype case\n@@ -1658,7 +1702,16 @@ package body Sem_Case is\n                                  end if;\n                               end if;\n \n-                              Check (Choice, L, H);\n+                              if Has_Static_Predicate (E) then\n+\n+                              --  Check applicable predicate values within the\n+                              --  bounds of the given range.\n+\n+                                 Handle_Static_Predicate (E, L, H);\n+\n+                              else\n+                                 Check (Choice, L, H);\n+                              end if;\n                            end if;\n                         end;\n                      end if;"}, {"sha": "f9b4698dafb68a29ec1ba3d63c1f870cd7359999", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -7744,9 +7744,9 @@ package body Sem_Ch8 is\n             New_T := Etype (New_F);\n             Old_T := Etype (Old_F);\n \n-            --  If the new type is a renaming of the old one, as is the\n-            --  case for actuals in instances, retain its name, to simplify\n-            --  later disambiguation.\n+            --  If the new type is a renaming of the old one, as is the case\n+            --  for actuals in instances, retain its name, to simplify later\n+            --  disambiguation.\n \n             if Nkind (Parent (New_T)) = N_Subtype_Declaration\n               and then Is_Entity_Name (Subtype_Indication (Parent (New_T)))\n@@ -7760,6 +7760,7 @@ package body Sem_Ch8 is\n             Next_Formal (New_F);\n             Next_Formal (Old_F);\n          end loop;\n+\n          pragma Assert (No (Old_F));\n \n          if Ekind_In (Old_S, E_Function, E_Enumeration_Literal) then"}, {"sha": "7fa4845dac204e56ae5ba2efc636788242ac0729", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -446,6 +446,15 @@ package body Sem_Elab is\n          return;\n       end if;\n \n+      --  If an instance of a generic package contains a controlled object (so\n+      --  we're calling Initialize at elaboration time), and the instance is in\n+      --  a package body P that says \"with P;\", then we need to return without\n+      --  adding \"pragma Elaborate_All (P);\" to P.\n+\n+      if U = Main_Unit_Entity then\n+         return;\n+      end if;\n+\n       Itm := First (CI);\n       while Present (Itm) loop\n          if Nkind (Itm) = N_With_Clause then\n@@ -495,10 +504,8 @@ package body Sem_Elab is\n       end if;\n \n       --  Here if we do not find with clause on spec or body. We just ignore\n-      --  this case, it means that the elaboration involves some other unit\n+      --  this case; it means that the elaboration involves some other unit\n       --  than the unit being compiled, and will be caught elsewhere.\n-\n-      null;\n    end Activate_Elaborate_All_Desirable;\n \n    ------------------\n@@ -528,7 +535,7 @@ package body Sem_Elab is\n        --  Generate a call to Error_Msg_NE with parameters Msg_D or Msg_S (for\n        --  dynamic or static elaboration model), N and Ent. Msg_D is a real\n        --  warning (output if Msg_D is non-null and Elab_Warnings is set),\n-       --  Msg_S is an info message (output if Elab_Info_Messages is set.\n+       --  Msg_S is an info message (output if Elab_Info_Messages is set).\n \n       function Find_W_Scope return Entity_Id;\n       --  Find top-level scope for called entity (not following renamings"}, {"sha": "3e4fe0a62ffa03872e50a1599a53d449c71a481e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ed3fe8cc27a62cbc21fcb5427ca5b2919878d94f", "patch": "@@ -24599,7 +24599,7 @@ package body Sem_Prag is\n       In_Out_Items   : Elist_Id := No_Elist;\n       Out_Items      : Elist_Id := No_Elist;\n       Proof_In_Items : Elist_Id := No_Elist;\n-      --  These list contain the entities of all Input, In_Out, Output and\n+      --  These lists contain the entities of all Input, In_Out, Output and\n       --  Proof_In items defined in the corresponding Global pragma.\n \n       Repeat_Items : Elist_Id := No_Elist;\n@@ -24656,7 +24656,7 @@ package body Sem_Prag is\n       procedure Collect_Global_Items\n         (List : Node_Id;\n          Mode : Name_Id := Name_Input);\n-      --  Gather all input, in out, output and Proof_In items from node List\n+      --  Gather all Input, In_Out, Output and Proof_In items from node List\n       --  and separate them in lists In_Items, In_Out_Items, Out_Items and\n       --  Proof_In_Items. Flags Has_In_State, Has_In_Out_State, Has_Out_State\n       --  and Has_Proof_In_State are set when there is at least one abstract"}]}