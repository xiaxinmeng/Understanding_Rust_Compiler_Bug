{"sha": "c3223bafb15366f3f98e452cd23f565c41659199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyMjNiYWZiMTUzNjZmM2Y5OGU0NTJjZDIzZjU2NWM0MTY1OTE5OQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-12-13T21:51:34Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-12-13T21:51:34Z"}, "message": "re PR tree-optimization/42027 (Performance regression in convolution loop optimization)\n\n\tPR tree-optimization/42027\n\t* dojump.c (do_jump <TRUTH_AND_EXPR, TRUTH_OR_EXPR>): Go to\n\tTRUTH_ANDIF_EXPR resp. TRUTH_ORIF_EXPR expander, instead of\n\tfalling through.\n\nFrom-SVN: r155196", "tree": {"sha": "282238d6a618d39aa6c15d6fa9ef41308796fd8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/282238d6a618d39aa6c15d6fa9ef41308796fd8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3223bafb15366f3f98e452cd23f565c41659199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3223bafb15366f3f98e452cd23f565c41659199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3223bafb15366f3f98e452cd23f565c41659199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3223bafb15366f3f98e452cd23f565c41659199/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83613dbea0846612b0ed3c4305aa541cca499b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83613dbea0846612b0ed3c4305aa541cca499b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83613dbea0846612b0ed3c4305aa541cca499b1d"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "5b692abde124c6113f5af78a674fe19a28635460", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3223bafb15366f3f98e452cd23f565c41659199/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3223bafb15366f3f98e452cd23f565c41659199/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3223bafb15366f3f98e452cd23f565c41659199", "patch": "@@ -1,3 +1,10 @@\n+2009-12-13  Michael Matz  <matz@suse.de>\n+\n+\tPR tree-optimization/42027\n+\t* dojump.c (do_jump <TRUTH_AND_EXPR, TRUTH_OR_EXPR>): Go to\n+\tTRUTH_ANDIF_EXPR resp. TRUTH_ORIF_EXPR expander, instead of\n+\tfalling through.\n+\n 2009-12-13  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \tPR target/23726"}, {"sha": "20d52ea5a28053d4f638ed9eef228ded4b525c8d", "filename": "gcc/dojump.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3223bafb15366f3f98e452cd23f565c41659199/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3223bafb15366f3f98e452cd23f565c41659199/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=c3223bafb15366f3f98e452cd23f565c41659199", "patch": "@@ -458,6 +458,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n     case LTGT_EXPR:\n     case TRUTH_ANDIF_EXPR:\n     case TRUTH_ORIF_EXPR:\n+    other_code:\n       do_jump_1 (code, TREE_OPERAND (exp, 0), TREE_OPERAND (exp, 1),\n \t\t if_false_label, if_true_label);\n       break;\n@@ -547,6 +548,8 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n \t\t       false) >= 4\n \t  || TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 1)))\n \tgoto normal;\n+      code = TRUTH_ANDIF_EXPR;\n+      goto other_code;\n \n     case BIT_IOR_EXPR:\n     case TRUTH_OR_EXPR:\n@@ -556,6 +559,8 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n       if (BRANCH_COST (optimize_insn_for_speed_p (), false)>= 4\n \t  || TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 1)))\n \tgoto normal;\n+      code = TRUTH_ORIF_EXPR;\n+      goto other_code;\n \n       /* Fall through and generate the normal code.  */\n     default:"}]}