{"sha": "9d5730dee4f42e94004b38f8f4862c0b1f4d964c", "node_id": "C_kwDOANBUbNoAKDlkNTczMGRlZTRmNDJlOTQwMDRiMzhmOGY0ODYyYzBiMWY0ZDk2NGM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-04T08:51:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-04T08:51:31Z"}, "message": "c++: Don't defer local statics initialized with constant expressions [PR108702]\n\nThe stmtexpr19.C testcase used to be rejected as it has a static\nvariable in statement expression in constexpr context, but as that\nstatic variable is initialized by constant expression, when P2647R1\nwas implemented we agreed to make it valid.\n\nNow, as reported, the testcase compiles fine, but doesn't actually link\nbecause the static variable isn't defined anywhere, and with -flto ICEs\nbecause of this problem.  This is because we never\nvarpool_node::finalize_decl those vars, the constant expression in which\nthe DECL_EXPR is present for the static VAR_DECL is folded (constant\nevaluated) into just the address of the VAR_DECL.\nNow, similar testcase included below (do we want to include it in the\ntestsuite too?) works fine, because in\ncp_finish_decl -> make_rtl_for_nonlocal_decl\nwe have since PR70353 fix:\n  /* We defer emission of local statics until the corresponding\n     DECL_EXPR is expanded.  But with constexpr its function might never\n     be expanded, so go ahead and tell cgraph about the variable now.  */\n  defer_p = ((DECL_FUNCTION_SCOPE_P (decl)\n              && !var_in_maybe_constexpr_fn (decl))\n             || DECL_VIRTUAL_P (decl));\nand so don't defer them in constexpr/consteval functions.  The following\npatch calls rest_of_decl_compilation which make_rtl_for_nonlocal_decl didn't\ncall when encountering DECL_EXPRs of such vars during constant evaluation\nif they weren't finalized yet.\n\n2023-03-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/108702\n\t* constexpr.cc: Include toplev.h.\n\t(cxx_eval_constant_expression) <case DECL_EXPR>: When seeing a local\n\tstatic initialized by constant expression outside of a constexpr\n\tfunction which has been deferred by make_rtl_for_nonlocal_decl,\n\tcall rest_of_decl_compilation on it.\n\n\t* g++.dg/ext/stmtexpr19.C: Use dg-do link rather than dg-do compile.", "tree": {"sha": "ba7604a225622a2bfc6140a8f3fd0abdd837af8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba7604a225622a2bfc6140a8f3fd0abdd837af8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d5730dee4f42e94004b38f8f4862c0b1f4d964c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5730dee4f42e94004b38f8f4862c0b1f4d964c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5730dee4f42e94004b38f8f4862c0b1f4d964c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5730dee4f42e94004b38f8f4862c0b1f4d964c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "739e7ebb3d378ece25d64b39baae47c584253498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/739e7ebb3d378ece25d64b39baae47c584253498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/739e7ebb3d378ece25d64b39baae47c584253498"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "364695b762c66027d76e96490404e4910f6bd0b9", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5730dee4f42e94004b38f8f4862c0b1f4d964c/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5730dee4f42e94004b38f8f4862c0b1f4d964c/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=9d5730dee4f42e94004b38f8f4862c0b1f4d964c", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"attribs.h\"\n #include \"fold-const.h\"\n #include \"intl.h\"\n+#include \"toplev.h\"\n \n static bool verify_constant (tree, bool, bool *, bool *);\n #define VERIFY_CONSTANT(X)\t\t\t\t\t\t\\\n@@ -7127,6 +7128,24 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t    break;\n \t  }\n \n+\t/* make_rtl_for_nonlocal_decl could have deferred emission of\n+\t   a local static var, but if it appears in a statement expression\n+\t   which is constant expression evaluated to e.g. just the address\n+\t   of the variable, its DECL_EXPR will never be seen during\n+\t   gimple lowering's record_vars_into as the statement expression\n+\t   will not be in the IL at all.  */\n+\tif (VAR_P (r)\n+\t    && TREE_STATIC (r)\n+\t    && !DECL_REALLY_EXTERN (r)\n+\t    && DECL_FUNCTION_SCOPE_P (r)\n+\t    && !var_in_maybe_constexpr_fn (r)\n+\t    && decl_constant_var_p (r))\n+\t  {\n+\t    varpool_node *node = varpool_node::get (r);\n+\t    if (node == NULL || !node->definition)\n+\t      rest_of_decl_compilation (r, 0, at_eof);\n+\t  }\n+\n \tif (AGGREGATE_TYPE_P (TREE_TYPE (r))\n \t    || VECTOR_TYPE_P (TREE_TYPE (r)))\n \t  {"}, {"sha": "5355c15df9a8fa9b057dbf6037535f2b241a8b44", "filename": "gcc/testsuite/g++.dg/ext/stmtexpr19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5730dee4f42e94004b38f8f4862c0b1f4d964c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstmtexpr19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5730dee4f42e94004b38f8f4862c0b1f4d964c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstmtexpr19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstmtexpr19.C?ref=9d5730dee4f42e94004b38f8f4862c0b1f4d964c", "patch": "@@ -1,6 +1,6 @@\n // PR c++/81073\n // { dg-options \"\" }\n-// { dg-do compile { target c++11 } }\n+// { dg-do link { target c++11 } }\n \n struct test { const int *addr; };\n "}]}