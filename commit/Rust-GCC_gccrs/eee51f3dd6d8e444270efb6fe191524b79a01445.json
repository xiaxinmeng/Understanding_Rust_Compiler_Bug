{"sha": "eee51f3dd6d8e444270efb6fe191524b79a01445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlNTFmM2RkNmQ4ZTQ0NDI3MGVmYjZmZTE5MTUyNGI3OWEwMTQ0NQ==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2019-07-03T08:16:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:16:06Z"}, "message": "[Ada] Incorrect expansion on renamings of formal parameters\n\nThis patch fixes an issue whereby a renaming of an unconstrained formal\nparameter leads to spurious runtime errors; manifesting either as a\nstorage or constraint error due to incorrect bounds being assumed.\n\nThis issue also occurs when the renamings are implicit such as through\ngeneric instantiations.\n\n2019-07-03  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch8.adb (Analyze_Object_Renaming): Add call to search for\n\tthe appropriate actual subtype of the object renaming being\n\tanalyzed.\n\t(Check_Constrained_Object): Minor cleanup.\n\ngcc/testsuite/\n\n\t* gnat.dg/renaming13.adb, gnat.dg/renaming14.adb: New testcases.\n\nFrom-SVN: r272982", "tree": {"sha": "d5f2bf106c172d9babbac0a02a9f9065c963f7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5f2bf106c172d9babbac0a02a9f9065c963f7a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eee51f3dd6d8e444270efb6fe191524b79a01445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee51f3dd6d8e444270efb6fe191524b79a01445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee51f3dd6d8e444270efb6fe191524b79a01445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee51f3dd6d8e444270efb6fe191524b79a01445/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4c16c58e1a91f412eae9dd6645c165a709246cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4c16c58e1a91f412eae9dd6645c165a709246cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4c16c58e1a91f412eae9dd6645c165a709246cb"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "152820f99de855a1820bf275f68ed87eb9ac5542", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eee51f3dd6d8e444270efb6fe191524b79a01445", "patch": "@@ -1,3 +1,10 @@\n+2019-07-03  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Add call to search for\n+\tthe appropriate actual subtype of the object renaming being\n+\tanalyzed.\n+\t(Check_Constrained_Object): Minor cleanup.\n+\n 2019-07-03  Yannick Moy  <moy@adacore.com>\n \n \t* sem_spark.adb (Get_Observed_Or_Borrowed_Expr): New function to"}, {"sha": "b58ad64535d9037a23db47e858c412243cedc8d0", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=eee51f3dd6d8e444270efb6fe191524b79a01445", "patch": "@@ -784,9 +784,9 @@ package body Sem_Ch8 is\n \n       begin\n          if Nkind_In (Nam, N_Function_Call, N_Explicit_Dereference)\n-           and then Is_Composite_Type (Etype (Nam))\n-           and then not Is_Constrained (Etype (Nam))\n-           and then not Has_Unknown_Discriminants (Etype (Nam))\n+           and then Is_Composite_Type (Typ)\n+           and then not Is_Constrained (Typ)\n+           and then not Has_Unknown_Discriminants (Typ)\n            and then Expander_Active\n          then\n             --  If Actual_Subtype is already set, nothing to do\n@@ -1122,7 +1122,11 @@ package body Sem_Ch8 is\n          Wrong_Type (Nam, T);\n       end if;\n \n-      T2 := Etype (Nam);\n+      --  We must search for an actual subtype here so that the bounds of\n+      --  objects of unconstrained types don't get dropped on the floor - such\n+      --  as with renamings of formal parameters.\n+\n+      T2 := Get_Actual_Subtype_If_Available (Nam);\n \n       --  Ada 2005 (AI-326): Handle wrong use of incomplete type\n "}, {"sha": "709e0c574b57d85f1bb81287714ea4e133053160", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eee51f3dd6d8e444270efb6fe191524b79a01445", "patch": "@@ -1,3 +1,7 @@\n+2019-07-03  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/renaming13.adb, gnat.dg/renaming14.adb: New testcases.\n+\n 2019-07-03  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/inline15.adb, gnat.dg/inline15_gen.adb,"}, {"sha": "434a71e1eecb23aad3e23e14ff2cdabf404e32d9", "filename": "gcc/testsuite/gnat.dg/renaming13.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming13.adb?ref=eee51f3dd6d8e444270efb6fe191524b79a01445", "patch": "@@ -0,0 +1,21 @@\n+--  { dg-do run }\n+\n+procedure Renaming13 is\n+   type Stack_Type_Base is array (Natural range <>) of Integer;\n+\n+   procedure Foo (Buf : in out Stack_Type_Base) is\n+      S : Stack_Type_Base renames Buf;\n+\n+      procedure Init is\n+      begin\n+         S := (others => 0);\n+      end;\n+\n+   begin\n+      Init;\n+   end;\n+\n+   Temp : Stack_Type_Base (1 .. 100);\n+begin\n+   Foo (Temp);\n+end;"}, {"sha": "d61a82dca89a79a64c6ea057645241e4c9c62693", "filename": "gcc/testsuite/gnat.dg/renaming14.adb", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming14.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee51f3dd6d8e444270efb6fe191524b79a01445/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming14.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming14.adb?ref=eee51f3dd6d8e444270efb6fe191524b79a01445", "patch": "@@ -0,0 +1,32 @@\n+--  { dg-do run }\n+\n+procedure Renaming14 is\n+   type Rec_Typ is record\n+      XX : Integer;\n+   end record;\n+\n+   type Stack_Type_Base is array (Natural range <>) of Rec_Typ;\n+\n+   generic\n+      S : in out Stack_Type_Base;\n+   package Stack is\n+      procedure Init;\n+   end;\n+\n+   package body Stack is\n+      procedure Init is\n+      begin\n+         S := (others => (XX => 0));\n+      end;\n+   end;\n+\n+   procedure Foo (Buf : in out Stack_Type_Base) is\n+      package Stack_Inst is new Stack (Buf);\n+   begin\n+      Stack_Inst.Init;\n+   end;\n+\n+   Temp : Stack_Type_Base (1 .. 100);\n+begin\n+   Foo (Temp);\n+end;"}]}